version: '3.9'

x-common: &common
  build:
      context: ../../
      dockerfile: ./optools/images/Dockerfile
      args:
        GOPROXY: "https://proxy.golang.com.cn,direct"
  image:  matrixorigin/matrixone:nightly-b9c225f4
  volumes:
      - ../../etc/launch-mo-compose/config:/config
  environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - LAUNCH=${LAUNCH}
  tty: true
  restart: on-failure

services:
  cn-0:
    container_name: cn-0
    <<: *common
    entrypoint: ["/mo-service", "-cfg", "/config/$LAUNCH/cn-0.toml"]
    profiles:
      - launch-tae-CN-tae-DN-minio
      - launch-tae-multi-CN-tae-DN-minio
      - launch-tae-CN-tae-DN
      - launch-tae-multi-CN-tae-DN
    depends_on:
      - dn-0
    ports:
      - "6001:6001"
      - "6002"
    networks:
      monet:

  cn-1:
    container_name: cn-1
    <<: *common
    entrypoint: ["/mo-service", "-cfg", "/config/$LAUNCH/cn-1.toml"]
    depends_on:
      - dn-0
    ports:
      - "7001:6001"
      - "6002"
    profiles:
      - launch-tae-multi-CN-tae-DN-minio
      - launch-tae-multi-CN-tae-DN
    networks:
      monet:

  dn-0:
    container_name: dn-0
    <<: *common
    image: matrixorigin/matrixone:nightly-b9c225f4
    entrypoint: ["/mo-service", "-cfg", "/config/$LAUNCH/dn-0.toml"]
    profiles:
      - launch-tae-CN-tae-DN-minio
      - launch-tae-multi-CN-tae-DN-minio
      - launch-tae-CN-tae-DN
      - launch-tae-multi-CN-tae-DN
    depends_on:
      - logservice-0
    ports:
      - "41010"
    networks:
      monet:

  logservice-0:
    container_name: logservice-0
    <<: *common
    profiles:
      - launch-tae-CN-tae-DN-minio
      - launch-tae-multi-CN-tae-DN-minio
      - launch-tae-CN-tae-DN
      - launch-tae-multi-CN-tae-DN
    entrypoint: ["/mo-service", "-cfg", "/config/$LAUNCH/log-0.toml"]
    depends_on:
      - createbuckets
    ports:
      - "32000"
      - "32001"
      - "32002"
    networks:
      monet:
        ipv4_address: 179.19.0.133

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server --console-address ":9001" /data
    profiles:
      - launch-tae-CN-tae-DN-minio
      - launch-tae-multi-CN-tae-DN-minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      timeout: 5s
      retries: 3
    networks:
      monet:

  createbuckets:
    image: minio/mc
    depends_on:
       minio:
        condition: service_healthy
    profiles:
      - launch-tae-CN-tae-DN-minio
      - launch-tae-multi-CN-tae-DN-minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/mo-test;
      /usr/bin/mc policy set public myminio/mo-test;
      exit 0;
      "
    networks:
      monet:

volumes:
  minio_storage: {}

networks:
  monet:
    driver: bridge
    ipam:
      config:
        - subnet: 179.19.0.0/16
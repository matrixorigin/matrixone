version: '3.9'

# docker compose extension fields
# https://github.com/docker/compose/pull/5140
# https://stackoverflow.com/questions/45805380/meaning-of-ampersand-in-docker-compose-yml-file
x-mo-common: &mo-common
    build:
      context: ../../
      dockerfile: ./optools/images/Dockerfile
      args:
        GOPROXY: "https://proxy.golang.org,direct"
    image: matrixorigin/matrixone:latest
    volumes:
      - ../../etc/launch-tae-compose/config:/config
      - ../../test:/test
      - ../../docker-compose-log:/log
    restart: on-failure
    tty: true


services:
  cn-0:
    container_name: cn-0
    <<: *mo-common
    entrypoint: ["/bin/bash","-c","set -euo pipefail; /mo-service -debug-http :12345 -cfg /config/cn-0.toml | tee /log/cn-0.log"]
    profiles:
      - launch
      - launch-multi-cn
    depends_on:
      - dn
    ports:
      - "6001:6001"
      - "6002"
      - "12345:12345"
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    networks:
      monet:
        aliases:
          - "cn0"

  cn-1:
    container_name: cn-1
    <<: *mo-common
    entrypoint: ["/bin/bash","-c","set -euo pipefail; /mo-service -debug-http :12345 -cfg /config/cn-1.toml | tee /log/cn-1.log"]
    depends_on:
      - dn
    ports:
      - "7001:6001"
      - "6002"
      - "22345:12345"
    profiles:
      - launch
      - launch-multi-cn
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    networks:
      monet:
        aliases:
          - "cn1"

  dn:
    container_name: dn
    <<: *mo-common
    entrypoint: ["/bin/bash","-c","set -euo pipefail; /mo-service -debug-http :12345 -cfg /config/dn.toml | tee /log/dn.log"]
    profiles:
      - launch
      - launch-multi-cn
    depends_on:
      - logservice
    ports:
      - "41010"
      - "32345:12345"
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    networks:
      monet:
        aliases:
          - "dn"

  logservice:
    container_name: logservice
    <<: *mo-common
    profiles:
      - launch
      - launch-multi-cn
    entrypoint: ["/bin/bash","-c","set -euo pipefail; /mo-service -debug-http :12345 -cfg /config/log.toml | tee /log/logservice.log"]
    depends_on:
      - createbuckets
    ports:
      - "32000"
      - "32001"
      - "32002"
      - "42345:12345"
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    networks:
      monet:
        aliases:
          - "logservice"

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server --console-address ":9001" /data
    profiles:
      - launch
      - launch-multi-cn
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      timeout: 5s
      retries: 3
    networks:
      monet:

  # Create default buckets via environment variables in docker
  # https://github.com/minio/minio/issues/4769
  # mc client: https://github.com/minio/mc/blob/master/docs/minio-client-complete-guide.md
  # mc anonymous set: https://min.io/docs/minio/linux/reference/minio-mc/mc-anonymous-set.html
  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    profiles:
      - launch
      - launch-multi-cn
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/mo-test;
      /usr/bin/mc anonymous set public myminio/mo-test;
      exit 0;
      "
    networks:
      monet:


volumes:
  minio_storage: {}

# If there has subnet conflict, please change the subnet CIDR
networks:
  monet:
    driver: bridge

/*
 * Copyright 2021 Matrix Origin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package logtail;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "timestamp.proto";
import "api.proto";

option go_package = "github.com/matrixorigin/matrixone/pkg/pb/logtail";
option (gogoproto.sizer_all)      = false;
option (gogoproto.protosizer_all) = true;

// subscribe table request
message SubscribeRequest {
    timestamp.Timestamp cn_want = 1;
    api.TableID table           = 2;
}

// unsubscribe table request
message UnsubscribeRequest {
    api.TableID table = 1;
}

// logtail stream request
message LogtailRequest {
    oneof request {
        SubscribeRequest subscribe_table     = 1;
        UnsubscribeRequest unsubscribe_table = 2;
    }
};

// logtail for table
message TableLogtail {
    string ckp_location         = 1;
    timestamp.Timestamp ts      = 2;
    api.TableID table           = 3;
    repeated api.Entry commands = 4;
}

// response for subscription
message SubscribeResponse {
    TableLogtail logtail = 1;
}

// update for subscription
message UpdateResponse {
    repeated TableLogtail logtail_list = 1;
}

// response for unsubscription
message UnSubscribeResponse {
    api.TableID table = 1;
}

message Status {
    uint32 code    = 1;
    string message = 2;
}

// Error message to notify CN
message ErrorResponse {
    Status status     = 1;
    api.TableID table = 2;
}

// logtail stream response
message LogtailResponse {
    oneof response {
        SubscribeResponse subscribe_response     = 1;
        UnSubscribeResponse unsubscribe_response = 2;
        UpdateResponse update_response           = 3;
        ErrorResponse error                      = 4;
    }
};

service Logtail {
    rpc Logtail(stream LogtailRequest) returns (stream LogtailResponse) {}
}

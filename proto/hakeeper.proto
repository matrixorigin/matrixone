// Copyright 2022 MatrixOrigin.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package hakeeper;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all)           = true;
option (gogoproto.sizer_all)               = true;
option (gogoproto.unmarshaler_all)         = true;
option (gogoproto.goproto_enum_prefix_all) = false;

// Replica of the shard
message Replica {
  uint64 ShardID   = 1;
  uint64 ReplicaID = 2;
  uint64 Epoch = 3;
}

// ConfigChangeType indicates config change command type.
enum ConfigChangeType {
  AddNode    = 0;
  RemoveNode = 1;
  StartNode  = 2;
  StopNode   = 3;
}

// ConfigChange is the detail of a config change.
message ConfigChange {
  Replica Replica             = 1 [(gogoproto.nullable) = false];
  ConfigChangeType ChangeType = 2;
}

// ServiceType specifies type of service
enum ServiceType {
  LogService = 0;
  DnService  = 1;
}

// ScheduleCommand contains a shard schedule command.
message ScheduleCommand {
  string UUID               = 1;
  ConfigChange ConfigChange = 2 [(gogoproto.nullable) = false];
  ServiceType ServiceType   = 3;
}

message CommandBatch {
  uint64 Term = 1;
  repeated ScheduleCommand Commands = 2 [(gogoproto.nullable) = false]; 
}

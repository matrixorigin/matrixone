select abs(-10);
abs(-10)
10
select abs(-2) * -2;
abs(-2) * -2
-4
select abs(1e10);
abs(1e10)
1.0E10
select abs(NULL);
abs(NULL)
null
select abs(9999999999999999999999);
abs(9999999999999999999999)
9999999999999999999999
select abs(-9999999999999999999999);
abs(-9999999999999999999999)
9999999999999999999999
select abs(10/0);
division by zero
select abs(cast(-2 as unsigned)), abs(18446744073709551614), abs(-2);
Can't cast '-2' from BIGINT type to BIGINT UNSIGNED type. Reason: overflow
CREATE TABLE t(u TINYINT UNSIGNED NOT NULL);
INSERT INTO t VALUES (0), (3), (255);
SELECT * FROM t WHERE ABS(u=256)=0;
u
0
3
255
DROP TABLE t;
create table t1(a int, b int, c int);
insert into t1 values(100,1,2),(200,1,1),(300,2,1),(400,2,2);
select distinct b from t1 order by abs(b);
for SELECT DISTINCT, ORDER BY expressions must appear in select list
select distinct b as z from t1 order by abs(z);
for SELECT DISTINCT, ORDER BY expressions must appear in select list
select distinct abs(b) as z from t1 order by z;
z
1
2
select distinct abs(b) as z from t1 order by abs(b);
z
1
2
select distinct abs(b) from t1 order by abs(b);
abs(b)
1
2
drop table t1;
CREATE TABLE t1(c0 INTEGER, c1 INTEGER, c2 INTEGER);
INSERT INTO t1 VALUES(1, 1, 1), (1, 1, 1);
SELECT CASE any_value(c1) WHEN any_value(c1) + 1 THEN 1 END, ABS(AVG(c0)) FROM t1;
CASE any_value(c1) WHEN any_value(c1) + 1 THEN 1 END	ABS(AVG(c0))
null	1.0000
DROP TABLE t1;
CREATE TABLE t(i INT);
INSERT INTO t VALUES (-1),(2),(1);
SELECT ABS(i) AS a FROM t GROUP BY abs(i) ORDER BY a + 1;
a
1
2
SELECT ABS(i) AS a FROM t GROUP BY a ORDER BY a + 1;
a
1
2
DROP TABLE t;
CREATE TABLE t1(c0 INTEGER, c1 INTEGER, c2 INTEGER);
CREATE TABLE t2(c0 INTEGER, c1 INTEGER, c2 INTEGER);
INSERT INTO t1 select abs(-341.741), abs(-234141113), abs(-141241);
INSERT INTO t2 select abs(-341.5612), abs(-23413), abs(-14141);
select * from t1;
c0	c1	c2
342	234141113	141241
select * from t2;
c0	c1	c2
342	23413	14141
SELECT t1.c0, t2.c0 from t1 join t2 on abs(t1.c0) = abs(t2.c0) having abs(t1.c0)>100;
column "t1.c0" must appear in the GROUP BY clause or be used in an aggregate function
drop table t1;
drop table t2;
SELECT abs(10)-abs(-34);
abs(10)-abs(-34)
-24
SELECT abs(1241)*abs(-0.4141);
abs(1241)*abs(-0.4141)
513.8981
SELECT abs(-100)>abs(-102);
abs(-100)>abs(-102)
false
SELECT abs(-100)<>abs(100);
abs(-100)<>abs(100)
false

SELECT 'Michael!' REGEXP '.*';
Michael! reg_match .*
true
SELECT 'new*\n*line' REGEXP 'new\\*.\\*line';
new*\n*line reg_match new\\*.\\*line
false
SELECT 'a' REGEXP '^[a-d]';
a reg_match ^[a-d]
true
DROP TABLE IF EXISTS t;
CREATE TABLE t(
id INT,
str1 VARCHAR(20) NOT NULL,
PRIMARY KEY (id)
);
INSERT INTO t VALUES (1,'jesason'), (2,'jackikky'), (3,'roesaonay'),(4,'hiserber');
SELECT str1 REGEXP '.*' FROM t;
str1 reg_match .*
true
true
true
true
SELECT str1 REGEXP 'j.*' FROM t;
str1 reg_match j.*
true
true
false
false
SELECT str1 REGEXP 'NULL' FROM t;
str1 reg_match NULL
false
false
false
false
SELECT str1 REGEXP NULL FROM t;
str1 reg_match null
null
null
null
null
SELECT str1 REGEXP '^[A-Z]' FROM t;
str1 reg_match ^[A-Z]
false
false
false
false
SELECT str1 REGEXP '^[a-z]' FROM t;
str1 reg_match ^[a-z]
true
true
true
true
DROP TABLE IF EXISTS t;
CREATE TABLE t(
id INT,
str1 VARCHAR(20),
PRIMARY KEY (id)
);
INSERT INTO t VALUES (1,'chinaiscaptia'), (2,'spanishisasee'), (3,'unitedstates'),(4,'kindomofeu'),(5,NULL),(6,'NULL');
SELECT str1 REGEXP 'LL$' FROM t;
str1 reg_match LL$
false
false
false
false
null
true
SELECT str1 REGEXP 'n.a' FROM t;
str1 reg_match n.a
false
false
false
false
null
false
SELECT str1 REGEXP 'c*a' FROM t;
str1 reg_match c*a
true
true
true
false
null
false
SELECT str1 REGEXP 'sp+' FROM t;
str1 reg_match sp+
false
true
false
false
null
false
DROP TABLE IF EXISTS t;
CREATE TABLE t(
id INT,
str1 VARCHAR(20),
PRIMARY KEY (id)
);
INSERT INTO t VALUES (1,'+aacbd'), (2,'aacbd+'), (3,'aac*'),(4,'^aac');
SELECT str1 REGEXP '^\\^' FROM t;
str1 reg_match ^\\^
false
false
false
true
SELECT str1 REGEXP '\\+$' FROM t;
str1 reg_match \\+$
false
true
false
false
SELECT str1 REGEXP '\\*$' FROM t;
str1 reg_match \\*$
false
false
true
false
SELECT str1 REGEXP '^\\+' FROM t;
str1 reg_match ^\\+
true
false
false
false
SELECT REGEXP_INSTR('dog cat dog', 'dog');
regexp_instr(dog cat dog, dog)
1
SELECT REGEXP_INSTR('dog cat dog', 'dog', 2);
regexp_instr(dog cat dog, dog, 2)
9
SELECT REGEXP_INSTR('aa aaa aaaa', 'a{2}');
regexp_instr(aa aaa aaaa, a{2})
1
SELECT REGEXP_INSTR('aa aaa aaaa', 'a{4}');
regexp_instr(aa aaa aaaa, a{4})
8
DROP TABLE IF EXISTS t;
CREATE TABLE t(
id INT,
str1 VARCHAR(20),
str2 CHAR(20),
PRIMARY KEY (id)
);
INSERT INTO t VALUES (1,'aa bb cc aa','a b c a'), (2,'x y z x','a e i o u'), (3,'cat do cat Le','les go le'), (4,NULL,'ee f ee');
SELECT REGEXP_INSTR(str1,'a{2}') FROM t;
regexp_instr(str1, a{2})
1
0
0
null
SELECT REGEXP_INSTR(str1,'a{2}',2) FROM t;
regexp_instr(str1, a{2}, 2)
10
0
0
null
SELECT REGEXP_INSTR(str1,'le'), REGEXP_INSTR(str2,'le',2) FROM t;
regexp_instr(str1, le)    regexp_instr(str2, le, 2)
0    0
0    0
0    8
null    0
SELECT REGEXP_INSTR(str1,'NULL'), REGEXP_INSTR(str1,NULL) FROM t;
regexp_instr(str1, NULL)    regexp_instr(str1, null)
0    null
0    null
0    null
null    null
SELECT REGEXP_INSTR(str1,'NULL'), REGEXP_INSTR(NULL,NULL) FROM t;
regexp_instr(str1, NULL)    regexp_instr(null, null)
0    null
0    null
0    null
null    null
SELECT REGEXP_INSTR(str1,'Le'), REGEXP_INSTR(str1,'le') FROM t;
regexp_instr(str1, Le)    regexp_instr(str1, le)
0    0
0    0
12    0
null    null
DROP TABLE IF EXISTS t;
CREATE TABLE t(
d1 DATE,
d2 DATETIME,
d3 TIMESTAMP
);
INSERT INTO t VALUES ('2020-10-01', '2020-10-01 10:00:01', '2020-10-01 11:11:11.127653');
INSERT INTO t VALUES ('2120-12-12', '2220-12-12 12:12:12', '2120-12-12 12:12:12.765321');
INSERT INTO t VALUES ('2218-10-01', '2118-10-01 10:00:01', '2218-10-01 09:09:09.653828');
SELECT REGEXP_INSTR(d1,'20'), REGEXP_INSTR(d2,'19'), REGEXP_INSTR(d3,'18') FROM t;
regexp_instr(d1, 20)    regexp_instr(d2, 19)    regexp_instr(d3, 18)
1    0    0
3    0    0
0    0    3
SELECT REGEXP_INSTR(d1,'2'+'0'), REGEXP_INSTR(d2,'2'+FIND_IN_SET('a','a,b,c')), REGEXP_INSTR(d3,'22') FROM t;
regexp_instr(d1, 2 + 0)    regexp_instr(d2, 2 + find_in_set(a, a,b,c))    regexp_instr(d3, 22)
1    0    0
3    0    0
0    0    1
SELECT REGEXP_INSTR(d1,20), REGEXP_INSTR(d2,21), REGEXP_INSTR(d3,22) FROM t;
regexp_instr(d1, 20)    regexp_instr(d2, 21)    regexp_instr(d3, 22)
1    0    0
3    0    0
0    1    1
SELECT REGEXP_INSTR(d1,19), REGEXP_INSTR(d2,ABS(-21)), REGEXP_INSTR(d3,SIN(10)) FROM t;
regexp_instr(d1, 19)    regexp_instr(d2, abs(-21))    regexp_instr(d3, sin(10))
0    0    0
0    0    0
0    1    0
SELECT REGEXP_LIKE('CamelCase', 'CAMELCASE');
regexp_like(CamelCase, CAMELCASE)
false
SELECT REGEXP_LIKE('Michael!', '.*');
regexp_like(Michael!, .*)
true
SELECT REGEXP_LIKE('new*\n*line', 'new\\*.\\*line');
regexp_like(new*\n*line, new\\*.\\*line)
false
SELECT REGEXP_LIKE('a', '^[a-d]');
regexp_like(a, ^[a-d])
true
SELECT REGEXP_LIKE('abc', 'ABC');
regexp_like(abc, ABC)
false
SELECT REGEXP_LIKE('fo\nfo', '^fo$');
regexp_like(fo\nfo, ^fo$)
false
SELECT REGEXP_LIKE('fofo', '^fo');
regexp_like(fofo, ^fo)
true
SELECT REGEXP_LIKE('fo\no', '^fo\no$');
regexp_like(fo\no, ^fo\no$)
true
SELECT REGEXP_LIKE('fo\no', '^fo$');
regexp_like(fo\no, ^fo$)
false
SELECT REGEXP_LIKE('fofo', '^f.*$');
regexp_like(fofo, ^f.*$)
true
SELECT REGEXP_LIKE('fo\r\nfo', '^f.*$');
regexp_like(fo\r\nfo, ^f.*$)
false
SELECT REGEXP_LIKE('fo\r\nfo', '(?m)^f.*$');
regexp_like(fo\r\nfo, (?m)^f.*$)
true
SELECT REGEXP_LIKE('Ban', '^Ba*n');
regexp_like(Ban, ^Ba*n)
true
SELECT REGEXP_LIKE('Baaan', '^Ba*n');
regexp_like(Baaan, ^Ba*n)
true
SELECT REGEXP_LIKE('Bn', '^Ba*n');
regexp_like(Bn, ^Ba*n)
true
SELECT REGEXP_LIKE('Ban', '^Ba+n');
regexp_like(Ban, ^Ba+n)
true
SELECT REGEXP_LIKE('Bn', '^Ba+n');
regexp_like(Bn, ^Ba+n)
false
SELECT REGEXP_LIKE('Bn', '^Ba?n');
regexp_like(Bn, ^Ba?n)
true
SELECT REGEXP_LIKE('Ban', '^Ba?n');
regexp_like(Ban, ^Ba?n)
true
SELECT REGEXP_LIKE('Baan', '^Ba?n');
regexp_like(Baan, ^Ba?n)
false
SELECT REGEXP_LIKE('pi', 'pi|apa');
regexp_like(pi, pi|apa)
true
SELECT REGEXP_LIKE('axe', 'pi|apa');
regexp_like(axe, pi|apa)
false
SELECT REGEXP_LIKE('apa', 'pi|apa');
regexp_like(apa, pi|apa)
true
SELECT REGEXP_LIKE('apa', '^(pi|apa)$');
regexp_like(apa, ^(pi|apa)$)
true
SELECT REGEXP_LIKE('pi', '^(pi|apa)$');
regexp_like(pi, ^(pi|apa)$)
true
SELECT REGEXP_LIKE('pix', '^(pi|apa)$');
regexp_like(pix, ^(pi|apa)$)
false
SELECT REGEXP_LIKE('pi', '^(pi)*$');
regexp_like(pi, ^(pi)*$)
true
SELECT REGEXP_LIKE('pip', '^(pi)*$');
regexp_like(pip, ^(pi)*$)
false
SELECT REGEXP_LIKE('pipi', '^(pi)*$');
regexp_like(pipi, ^(pi)*$)
true
SELECT REGEXP_LIKE('abcde', 'a[bcd]{2}e');
regexp_like(abcde, a[bcd]{2}e)
false
SELECT REGEXP_LIKE('abcde', 'a[bcd]{3}e');
regexp_like(abcde, a[bcd]{3}e)
true
SELECT REGEXP_LIKE('abcde', 'a[bcd]{1,10}e');
regexp_like(abcde, a[bcd]{1,10}e)
true
SELECT REGEXP_LIKE('aXbc', '[a-dXYZ]');
regexp_like(aXbc, [a-dXYZ])
true
SELECT REGEXP_LIKE('aXbc', '^[a-dXYZ]$');
regexp_like(aXbc, ^[a-dXYZ]$)
false
SELECT REGEXP_LIKE('aXbc', '^[a-dXYZ]+$');
regexp_like(aXbc, ^[a-dXYZ]+$)
true
SELECT REGEXP_LIKE('aXbc', '^[^a-dXYZ]+$');
regexp_like(aXbc, ^[^a-dXYZ]+$)
false
SELECT REGEXP_LIKE('gheis', '^[^a-dXZ]+$');
regexp_like(gheis, ^[^a-dXZ]+$)
true
SELECT REGEXP_LIKE('gheisa', '^[^a-dXYZ]+$');
regexp_like(gheisa, ^[^a-dXYZ]+$)
false
SELECT REGEXP_LIKE('justalnums', '[[:alnum:]]+');
regexp_like(justalnums, [[:alnum:]]+)
true
SELECT REGEXP_LIKE('!!', '[[:alnum:]]+');
regexp_like(!!, [[:alnum:]]+)
false
SELECT REGEXP_LIKE('1+2', '1+2');
regexp_like(1+2, 1+2)
false
SELECT REGEXP_LIKE('1+2', '1\+2');
regexp_like(1+2, 1+2)
false
SELECT REGEXP_LIKE('1+2', '1\\+2');
regexp_like(1+2, 1\\+2)
true
SELECT REGEXP_LIKE('(', '\\(');
regexp_like((, \\()
true
SELECT REGEXP_LIKE(']', ']');
regexp_like(], ])
true
SELECT REGEXP_LIKE('[', '\\[');
regexp_like([, \\[)
true
DROP TABLE IF EXISTS t;
CREATE TABLE t(
str1 VARCHAR(20),
str2 CHAR(20)
);
INSERT INTO t VALUES ('aBcM**X', '!!~&*^YYsD'), ('2*3', '3/3/0'), ('Xadec', '--8Kiys');
SELECT REGEXP_LIKE(str1,'[a-dXY]') FROM t;
regexp_like(str1, [a-dXY])
true
false
true
SELECT REGEXP_LIKE(str1,'[[sXd]]+'), REGEXP_LIKE(str2,'[[a-z*A-Z]]+') FROM t;
regexp_like(str1, [[sXd]]+)    regexp_like(str2, [[a-z*A-Z]]+)
false    false
false    false
false    false
SELECT REGEXP_LIKE('abc', 'ABC', 'c');
[unknown result because it is related to issue#5537]
SELECT REGEXP_LIKE('fo\r\nfo', '^f.*$', 'm');
[unknown result because it is related to issue#5537]
SELECT REGEXP_REPLACE('a b c', 'b', 'X');
regexp_replace(a b c, b, X)
a X c
SELECT REGEXP_REPLACE('abc def ghi', '[a-z]+', 'X', 1, 3);
regexp_replace(abc def ghi, [a-z]+, X, 1, 3)
abc def X
DROP TABLE IF EXISTS t;
CREATE TABLE t(
str1 VARCHAR(20),
str2 CHAR(20)
);
INSERT INTO t VALUES ('W * P', 'W + Z - O'), ('have has having', 'do does doing');
INSERT INTO t VALUES ('XV*XZ', 'PP-ZZ-DXA'), ('aa bbb cc ddd', 'k ii lll oooo');
SELECT * FROM t;
str1    str2
W * P    W + Z - O
have has having    do does doing
XV*XZ    PP-ZZ-DXA
aa bbb cc ddd    k ii lll oooo
SELECT REGEXP_REPLACE(str1, 'W', 'a') FROM t;
regexp_replace(str1, W, a)
a * P
have has having
XV*XZ
aa bbb cc ddd
SELECT REGEXP_REPLACE(str2, 'do', '+') FROM t;
regexp_replace(str2, do, +)
W + Z - O
+ +es +ing
PP-ZZ-DXA
k ii lll oooo
SELECT REGEXP_REPLACE(str1, 'd'+'0', NULL) FROM t;
regexp_replace(str1, d + 0, null)
null
null
null
null
SELECT REGEXP_REPLACE(str1, NULL, NULL) FROM t;
regexp_replace(str1, null, null)
null
null
null
null
SELECT REGEXP_REPLACE(str1, '*', 'i'), REGEXP_REPLACE(str2,'hav','hiv') FROM t;
[unknown result because it is related to issue#5547]
SELECT REGEXP_SUBSTR('abc def ghi', '[a-z]+');
regexp_substr(abc def ghi, [a-z]+)
abc
SELECT REGEXP_SUBSTR('abc def ghi', '[a-z]+', 1, 3);
regexp_substr(abc def ghi, [a-z]+, 1, 3)
ghi
SELECT REGEXP_SUBSTR('jfidaj***fkd', '.*', 2);
regexp_substr(jfidaj***fkd, .*, 2)
fidaj***fkd
DROP TABLE IF EXISTS t;
CREATE TABLE t(
str1 VARCHAR(20),
str2 CHAR(20)
);
INSERT INTO t VALUES ('fjidajljil', 'iopuicuoiz'), ('^&*^*%*&', '=-=00-JDjfds');
INSERT INTO t VALUES ('I hanva fkldjia', '  fds  jkl  '), (NULL, 'NULL');
SELECT REGEXP_SUBSTR(str1, '[A-Z+]'), REGEXP_SUBSTR(str2, '[a-z]-') FROM t;
regexp_substr(str1, [A-Z+])    regexp_substr(str2, [a-z]-)
null    null
null    null
I    null
null    null
SELECT REGEXP_SUBSTR(str1, '[A-Z*]'), REGEXP_SUBSTR(str2, '.*') FROM t;
regexp_substr(str1, [A-Z*])    regexp_substr(str2, .*)
null    iopuicuoiz
*    =-=00-JDjfds
I      fds  jkl  
null    NULL
SELECT REGEXP_SUBSTR(str1, '[A-Z]'), REGEXP_SUBSTR(str2, '^[0-9a-z]') FROM t;
regexp_substr(str1, [A-Z])    regexp_substr(str2, ^[0-9a-z])
null    i
null    null
I    null
null    null
SELECT REGEXP_SUBSTR(str1, ' ') FROM t;
regexp_substr(str1,  )
null
null
 
null
SELECT REGEXP_SUBSTR(str1, ' *') FROM t;
regexp_substr(str1,  *)



null
SELECT REGEXP_SUBSTR(NULL, ' *') FROM t;
regexp_substr(null,  *)
null
null
null
null
SELECT REGEXP_SUBSTR(NULL, NULL) FROM t;
regexp_substr(null, null)
null
null
null
null

drop table if exists t1;
create table t1 (
name varchar(10),
level smallint unsigned);
insert into t1 values ('string',1);
select reverse("123"+space(level)+"456") from t1;
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.
select concat_ws("abc", name,space(level)), concat_ws("abc",name, space(level)) from t1;
concat_ws("abc", name,space(level))	concat_ws("abc",name, space(level))
stringabc 	stringabc
drop table t1;
create table t1 (a varchar(16383));
insert into t1 select space(50000);
the space count exceeds maxallowedCount 8000
select length(a) from t1;
length(a)
drop table t1;
select space(5),concat_ws('*',space(5),'*');
space(5)	concat_ws('*',space(5),'*')
     	     **
select space(-1);
space(-1)
select space(-4294967295);
space(-4294967295)
select space(4294967295);
the space count exceeds maxallowedCount 8000
select space(-4294967296);
space(-4294967296)
select space(4294967296);
the space count exceeds maxallowedCount 8000
select space(-4294967297);
space(-4294967297)
select space(4294967297);
the space count exceeds maxallowedCount 8000
select space(-18446744073709551615);
space(-18446744073709551615)
select space(18446744073709551615);
the space count exceeds maxallowedCount 8000
select space(-18446744073709551616);
space(-18446744073709551616)
select space(18446744073709551616);
the space count exceeds maxallowedCount 8000
select space(-18446744073709551617);
space(-18446744073709551617)
select space(18446744073709551617);
the space count exceeds maxallowedCount 8000
SELECT space(9223372036854775808);
the space count exceeds maxallowedCount 8000
SELECT length(space(9223372036854775809));
the space count exceeds maxallowedCount 8000

SELECT SPACE(NULL);
SPACE(NULL)
null
SELECT SPACE(12)+"123";
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.
SELECT SPACE(12314.14123)+"123";
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.
SELECT SPACE("1231")+"123";
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.
SELECT SPACE("2012-03-12")+"123";
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.
CREATE TABLE t(i BIGINT UNSIGNED);
INSERT INTO t values(9223372036854775808);
SELECT space(i) FROM t;
the space count exceeds maxallowedCount 8000
DROP TABLE t;
SELECT space(1073741824);
the space count exceeds maxallowedCount 8000
SELECT TO_DATE(SPACE(2),'1');
invalid inputs for function 'to_date()'   1
drop table if exists t1;
create table t1(a INT);
insert into t1 values(1),(1),(2),(3);
select a from t1 group by a having space(a)="   ";
a
3
drop table t1;
drop table if exists t1;
create table t1(a INT,  b date);
insert into t1 values(1, "2012-10-12"),(2, "2004-04-24"),(3, "2008-12-04"),(4, "2012-03-23");
select * from t1 where space(a)=" ";
a	b
1	2012-10-12
drop table t1;
drop table if exists t1;
drop table if exists t2;
create table t1(a INT,  b date);
create table t2(a INT,  b date);
insert into t1 values(1, "2012-10-12"),(1, "2004-04-24"),(3, "2008-12-04"),(4, "2012-03-23");
insert into t2 values(1, "2013-04-30"),(1, "1994-10-04"),(3, "2018-06-04"),(4, "2012-10-12");
SELECT distinct t1.a, t2.a FROM t1 JOIN t2 ON (space(t1.a) = space(t2.a));
a	a
1	1
3	3
4	4
drop table t1;
drop table t2;
SELECT space("你好")+"你好";
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.

SELECT BIT_AND(0), BIT_OR(0), BIT_XOR(0);
BIT_AND(0)    BIT_OR(0)    BIT_XOR(0)
0    0    0
SELECT BIT_AND(1), BIT_OR(1), BIT_XOR(1);
BIT_AND(1)    BIT_OR(1)    BIT_XOR(1)
1    1    1
SELECT BIT_AND(-1), BIT_OR(-1), BIT_XOR(-1);
BIT_AND(-1)    BIT_OR(-1)    BIT_XOR(-1)
18446744073709551615    18446744073709551615    18446744073709551615
SELECT BIT_AND(ABS(-1)), BIT_OR(ABS(-1)), BIT_XOR(ABS(-1));
BIT_AND(ABS(-1))    BIT_OR(ABS(-1))    BIT_XOR(ABS(-1))
1    1    1
SELECT BIT_AND(1 + 1), BIT_OR(1 + 1), BIT_XOR(1 + 1);
BIT_AND(1 + 1)    BIT_OR(1 + 1)    BIT_XOR(1 + 1)
2    2    2
SELECT BIT_AND(COS(0)), BIT_OR(COS(0)), BIT_XOR(COS(0));
BIT_AND(COS(0))    BIT_OR(COS(0))    BIT_XOR(COS(0))
1    1    1
SELECT BIT_AND(1 - 1), BIT_OR(1 - (-1)), BIT_XOR(1 / 0);
[unknown result because it is related to issue#5638]
DROP TABLE IF EXISTS t;
CREATE TABLE t(
tiny TINYINT NOT NULL,
small SMALLINT NOT NULL,
int_t INT NOT NULL,
big BIGINT NOT NULL
);
INSERT INTO t VALUES (-128, -32768, -2147483648, -9223372036854775808);
INSERT INTO t VALUES (127, 32767, 2147483647, 9223372036854775807);
SELECT BIT_AND(tiny), BIT_OR(tiny), BIT_XOR(tiny) FROM t;
BIT_AND(tiny)    BIT_OR(tiny)    BIT_XOR(tiny)
0    18446744073709551615    18446744073709551615
SELECT BIT_AND(small), BIT_OR(small), BIT_XOR(small) FROM t;
BIT_AND(small)    BIT_OR(small)    BIT_XOR(small)
0    18446744073709551615    18446744073709551615
SELECT BIT_AND(int_t), BIT_OR(int_t), BIT_XOR(int_t) FROM t;
BIT_AND(int_t)    BIT_OR(int_t)    BIT_XOR(int_t)
0    18446744073709551615    18446744073709551615
SELECT BIT_AND(big), BIT_OR(big), BIT_XOR(big) FROM t;
BIT_AND(big)    BIT_OR(big)    BIT_XOR(big)
0    18446744073709551615    18446744073709551615
DROP TABLE IF EXISTS t;
CREATE TABLE t(
tiny TINYINT UNSIGNED NOT NULL,
small SMALLINT UNSIGNED NOT NULL,
int_t INT UNSIGNED NOT NULL,
big BIGINT UNSIGNED NOT NULL
);
INSERT INTO t VALUES (255, 65535, 65535, 18446744073709551615);
SELECT BIT_AND(tiny), BIT_OR(tiny), BIT_XOR(tiny) FROM t;
BIT_AND(tiny)    BIT_OR(tiny)    BIT_XOR(tiny)
255    255    255
SELECT BIT_AND(small), BIT_OR(small), BIT_XOR(small) FROM t;
BIT_AND(small)    BIT_OR(small)    BIT_XOR(small)
65535    65535    65535
SELECT BIT_AND(int_t), BIT_OR(int_t), BIT_XOR(int_t) FROM t;
BIT_AND(int_t)    BIT_OR(int_t)    BIT_XOR(int_t)
65535    65535    65535
SELECT BIT_AND(big), BIT_OR(big), BIT_XOR(big) FROM t;
BIT_AND(big)    BIT_OR(big)    BIT_XOR(big)
18446744073709551615    18446744073709551615    18446744073709551615
DROP TABLE IF EXISTS t;
CREATE TABLE t(
tiny TINYINT NOT NULL,
small SMALLINT NOT NULL,
int_t INT NOT NULL,
big BIGINT NOT NULL
);
INSERT INTO t VALUES (0, 1, -1, 1-0);
INSERT INTO t VALUES (1, 9, 66666, TRUE);
SELECT BIT_AND(tiny + small), BIT_AND(int_t + big) FROM t;
BIT_AND(tiny + small)    BIT_AND(int_t + big)
0    0
SELECT BIT_AND(tiny + SIN(0)), BIT_XOR(int_t + TAN(0)) FROM t;
BIT_AND(tiny + SIN(0))    BIT_XOR(int_t + TAN(0))
0    18446744073709484949
SELECT BIT_OR(tiny + small), BIT_XOR(int_t + big) FROM t;
BIT_OR(tiny + small)    BIT_XOR(int_t + big)
11    66667
SELECT BIT_XOR(tiny + SIN(0)), BIT_OR(int_t + big) FROM t;
BIT_XOR(tiny + SIN(0))    BIT_OR(int_t + big)
1    66667
SELECT BIT_AND(tiny + 1), BIT_OR(small - 1), BIT_XOR(int_t / 0) FROM t;
[unknown result because it is related to issue#5638]
DROP TABLE IF EXISTS t;
DROP TABLE IF EXISTS t1;
CREATE TABLE t(
id INT,
score FLOAT,
PRIMARY KEY (id)
);
CREATE TABLE t1(
id INT,
salary DOUBLE,
PRIMARY KEY (id)
);
INSERT INTO t VALUES (1, 67.5), (2, 87.5), (3, 72.5), (4, 90.1), (5, 81.0);
INSERT INTO t1 VALUES (1, 1120.2), (2, 4320), (3, 9078), (4, 3071);
SELECT BIT_AND(score) FROM t JOIN t1 ON t.id = t1.id WHERE t.id > 1;
BIT_AND(score)
72
SELECT BIT_AND(salary) FROM t LEFT JOIN t1 ON t.id = t1.id;
BIT_AND(salary)
96
SELECT BIT_OR(salary) FROM t LEFT JOIN t1 ON t.id = t1.id WHERE t.id BETWEEN 2 AND 5;
BIT_OR(salary)
15359
SELECT BIT_OR(score) FROM t RIGHT JOIN t1 ON t.id = t1.id;
BIT_OR(score)
94
SELECT BIT_XOR(salary) FROM t RIGHT JOIN t1 ON t.id = t1.id;
BIT_XOR(salary)
15369
DROP TABLE IF EXISTS t;
CREATE TABLE t(
id INT,
str1 VARCHAR(20),
PRIMARY KEY (id)
);
INSERT INTO t VALUES (1,'123'), (2,'234'), (3,'345'), (4,'456');
SELECT BIT_OR(CAST(str1 AS FLOAT)) FROM t;
BIT_OR(CAST(str1 AS FLOAT))
507
SELECT BIT_XOR(CAST(str1 AS DOUBLE)) FROM t;
BIT_XOR(CAST(str1 AS DOUBLE))
0
DROP TABLE IF EXISTS t;
DROP TABLE IF EXISTS t1;
CREATE TABLE t(
id INT,
str1 VARCHAR(50),
str2 CHAR(50),
PRIMARY KEY (id)
);
CREATE TABLE t1(
id INT,
str1 VARCHAR(50),
str2 CHAR(50),
PRIMARY KEY (id)
);
INSERT INTO t VALUES (1,'12.3','9.00200001'), (2,'0','1'), (3,'0.000000000000111101010101','189'), (4,'456','1.001');
INSERT INTO t1 VALUES (1,'00000.01','3.001'), (2,'-1','99999999999999999'), (3,'1.0111','0.00001'), (4,'1.01','000.001');
SELECT BIT_AND(CAST(t.str1 AS FLOAT)), BIT_AND(CAST(t1.str2 AS DOUBLE)) FROM t,t1;
BIT_AND(CAST(t.str1 AS FLOAT))    BIT_AND(CAST(t1.str2 AS DOUBLE))
0    0
SELECT BIT_AND(CAST(t.str2 AS FLOAT)), BIT_OR(CAST(t1.str1 AS DOUBLE)) FROM t,t1;
BIT_AND(CAST(t.str2 AS FLOAT))    BIT_OR(CAST(t1.str1 AS DOUBLE))
1    18446744073709551615
SELECT BIT_XOR(CAST(t.str1 AS FLOAT)), BIT_AND(CAST(t1.str2 AS FLOAT)) FROM t JOIN t1 ON t.id = t1.id;
BIT_XOR(CAST(t.str1 AS FLOAT))    BIT_AND(CAST(t1.str2 AS FLOAT))
452    0
SELECT BIT_XOR(CAST(t.str1 AS FLOAT)), BIT_AND(CAST(t.str2 AS FLOAT)), BIT_OR(CAST(t1.str1 AS FLOAT)) FROM t JOIN t1 ON t.id = t1.id;
BIT_XOR(CAST(t.str1 AS FLOAT))    BIT_AND(CAST(t.str2 AS FLOAT))    BIT_OR(CAST(t1.str1 AS FLOAT))
452    1    18446744073709551615
SELECT BIT_XOR(CAST(t.str1 AS DOUBLE)), BIT_XOR(CAST(t1.str2 AS FLOAT)) FROM t RIGHT JOIN t1 ON t.id = t1.id;
[unknown result because it is related to issue#5743]
DROP TABLE IF EXISTS t;
CREATE TABLE t(
id INT,
d1 DECIMAL(28,20),
PRIMARY KEY(id)
);
INSERT INTO t VALUES (1,12.300101010100), (2,34.557978974325555),(3,56.),(4,0.000043524389789999);
SELECT * FROM t;
id    d1
1    12.30010101010000000000
2    34.55797897432555500000
3    56.00000000000000000000
4    0.00004352438978999900
SELECT BIT_AND(d1) FROM t;
BIT_AND(d1)
0
DROP TABLE IF EXISTS t;
CREATE TABLE t(
id INT,
d1 DECIMAL,
PRIMARY KEY(id)
);
INSERT INTO t VALUES (1,12.300101010100), (2,34.557978974325555),(3,56.),(4,0.000043524389789999);
SELECT * FROM t;
id    d1
1    12
2    35
3    56
4    0
SELECT BIT_AND(d1), BIT_OR(d1), BIT_XOR(d1) FROM t;
BIT_AND(d1)    BIT_OR(d1)    BIT_XOR(d1)
0    63    23

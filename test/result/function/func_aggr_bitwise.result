SELECT bit_and(null), bit_or(null), bit_xor(null);
bit_and(null) bit_or(null) bit_xor(null)
null	null	null
CREATE TABLE t1 (a int, b int);
INSERT INTO t1 VALUES (1,null);
INSERT INTO t1 VALUES (1,null);
INSERT INTO t1 VALUES (2,null);
select a, BIT_AND(b), BIT_OR(b), BIT_XOR(b) from t1 group by a;
a	bit_and(b)	bit_or(b)	bit_xor(b)
1	null	null	null
2	null	null	null
SELECT a, OCT(BIT_AND(b)), OCT(BIT_OR(b)), OCT(BIT_XOR(b)) FROM t1 GROUP BY a;
a	oct(bit_and(b))	oct(bit_or(b))	oct(bit_xor(b))
1	null	null	null
2	null	null	null
SELECT OCT(BIT_AND(b)), OCT(BIT_OR(b)), OCT(BIT_XOR(b)) FROM t1;
oct(bit_and(b))	oct(bit_or(b))	oct(bit_xor(b))
null	null	null
INSERT INTO t1 VALUES (3,123);
SELECT a, OCT(BIT_AND(b)), OCT(BIT_OR(b)), OCT(BIT_XOR(b)) FROM t1 GROUP BY a;
a	oct(bit_and(b))	oct(bit_or(b))	oct(bit_xor(b))
1	null	null	null
2	null	null	null
3	173	173	173
INSERT INTO t1 VALUES (2,124124), (3, 4951312);
SELECT a, OCT(BIT_AND(b)), OCT(BIT_OR(b)), OCT(BIT_XOR(b)) FROM t1 GROUP BY a;
a	oct(bit_and(b))	oct(bit_or(b))	oct(bit_xor(b))
1	null	null	null
2	0	362334	362334
3	20	22706573	22706553
INSERT INTO t1 VALUES (4,-4124124);
SELECT a, OCT(BIT_AND(b)), OCT(BIT_OR(b)), OCT(BIT_XOR(b)) FROM t1 GROUP BY a;
a	oct(bit_and(b))	oct(bit_or(b))	oct(bit_xor(b))
1	null	null	null
2	0	362334	362334
3	20	22706573	22706553
4	1777777777777760211044	1777777777777760211044	1777777777777760211044
DROP TABLE t1;
create table t1(a tinyint, b SMALLINT, c bigint, d INT, e BIGINT, f FLOAT, g DOUBLE, h decimal(38,19), i DATE, k datetime, l TIMESTAMP, m char(255), n varchar(255));
insert into t1 values(1, 1, 2, 43, 5, 35.5, 31.133, 14.314, "2012-03-10", "2012-03-12 10:03:12", "2022-03-12 13:03:12", "ab23c", "d5cf");
insert into t1 values(71, 1, 2, 34, 5, 5.5, 341.13, 15.314, "2012-03-22", "2013-03-12 10:03:12", "2032-03-12 13:04:12", "abr23c", "3dcf");
insert into t1 values(1, 1, 21, 4, 54, 53.5, 431.13, 14.394, "2011-03-12", "2015-03-12 10:03:12", "2002-03-12 13:03:12", "afbc", "dct5f");
insert into t1 values(1, 71, 2, 34, 5, 5.5, 31.313, 124.314, "2012-01-12", "2019-03-12 10:03:12", "2013-03-12 13:03:12", "3abd1c", "dcvf");
select bit_and(a) from t1;
bit_and(a)
1
select bit_and(b) from t1;
bit_and(b)
1
select bit_and(c) from t1;
bit_and(c)
0
select bit_and(d) from t1;
bit_and(d)
0
select bit_and(e) from t1;
bit_and(e)
4
select bit_and(f) from t1;
bit_and(f)
1
select bit_and(g) from t1;
bit_and(g)
5
select bit_and(h) from t1;
bit_and(h)
12
select bit_and(i) from t1;
bit_and(i)
20054528
select bit_and(k) from t1;
bit_and(k)
20068234691032
select bit_and(l) from t1;
bit_and(l)
19791209300744
select bit_and(m) from t1;
bit_and(m)
0
select bit_and(n) from t1;
bit_and(n)
0
drop table t1;
create table t1(a tinyint, b SMALLINT, c bigint, d INT, e BIGINT, f FLOAT, g DOUBLE, h decimal(38,19), i DATE, k datetime, l TIMESTAMP, m char(255), n varchar(255));
insert into t1 values(1, 1, 2, 43, 5, 35.5, 31.133, 14.314, "2012-03-10", "2012-03-12 10:03:12", "2022-03-12 13:03:12", "ab23c", "d5cf");
insert into t1 values(71, 1, 2, 34, 5, 5.5, 341.13, 15.314, "2012-03-22", "2013-03-12 10:03:12", "2032-03-12 13:04:12", "abr23c", "3dcf");
insert into t1 values(1, 1, 21, 4, 54, 53.5, 431.13, 14.394, "2011-03-12", "2015-03-12 10:03:12", "2002-03-12 13:03:12", "afbc", "dct5f");
insert into t1 values(1, 71, 2, 34, 5, 5.5, 31.313, 124.314, "2012-01-12", "2019-03-12 10:03:12", "2013-03-12 13:03:12", "3abd1c", "dcvf");
select bit_or(a) from t1;
bit_or(a)
71
select bit_or(b) from t1;
bit_or(b)
71
select bit_or(c) from t1;
bit_or(c)
23
select bit_or(d) from t1;
bit_or(d)
47
select bit_or(e) from t1;
bit_or(e)
55
select bit_or(f) from t1;
bit_or(f)
55
select bit_or(g) from t1;
bit_or(g)
511
select bit_or(h) from t1;
bit_or(h)
127
select bit_or(i) from t1;
bit_or(i)
20175870
select bit_or(k) from t1;
bit_or(k)
20203467439576
select bit_or(l) from t1;
bit_or(l)
20340965113708
select bit_or(m) from t1;
bit_or(m)
3
select bit_or(n) from t1;
bit_or(n)
3
drop table t1;
create table t1(a tinyint, b SMALLINT, c bigint, d INT, e BIGINT, f FLOAT, g DOUBLE, h decimal(38,19), i DATE, k datetime, l TIMESTAMP, m char(255), n varchar(255));
insert into t1 values(1, 1, 2, 43, 5, 35.5, 31.133, 14.314, "2012-03-10", "2012-03-12 10:03:12", "2022-03-12 13:03:12", "ab23c", "d5cf");
insert into t1 values(71, 1, 2, 34, 5, 5.5, 341.13, 15.314, "2012-03-22", "2013-03-12 10:03:12", "2032-03-12 13:04:12", "abr23c", "3dcf");
insert into t1 values(1, 1, 21, 4, 54, 53.5, 431.13, 14.394, "2011-03-12", "2015-03-12 10:03:12", "2002-03-12 13:03:12", "afbc", "dct5f");
insert into t1 values(1, 71, 2, 34, 5, 5.5, 31.313, 124.314, "2012-01-12", "2019-03-12 10:03:12", "2013-03-12 13:03:12", "3abd1c", "dcvf");
select bit_xor(a) from t1;
bit_xor(a)
70
select bit_xor(b) from t1;
bit_xor(b)
70
select bit_xor(c) from t1;
bit_xor(c)
23
select bit_xor(d) from t1;
bit_xor(d)
47
select bit_xor(e) from t1;
bit_xor(e)
51
select bit_xor(f) from t1;
bit_xor(f)
22
select bit_xor(g) from t1;
bit_xor(g)
250
select bit_xor(h) from t1;
bit_xor(h)
115
select bit_xor(i) from t1;
bit_xor(i)
120876
select bit_xor(k) from t1;
bit_xor(k)
56443059200
select bit_xor(l) from t1;
bit_xor(l)
427281392740
select bit_xor(m) from t1;
bit_xor(m)
3
select bit_xor(n) from t1;
bit_xor(n)
3
drop table t1;
select BIT_AND(99999999999999999.99999), BIT_OR(99999999999999999.99999), BIT_XOR(99999999999999999.99999);
Function 'bit_and' with parameters [DECIMAL128] will be implemented in future version.
select BIT_AND(999999999999999933193939.99999),BIT_OR(999999999999999933193939.99999),BIT_XOR(999999999999999933193939.99999);
bit_and(999999999999999933193939.99999)	bit_or(999999999999999933193939.99999)	bit_xor(999999999999999933193939.99999)
18446744073709551615	18446744073709551615	18446744073709551615
select BIT_AND(9999999999999999999999999999999999.9999999999999),BIT_OR(9999999999999999999999999999999999.9999999999999),BIT_XOR(9999999999999999999999999999999999.9999999999999);
bit_and(9999999999999999999999999999999999.9999999999999)	bit_or(9999999999999999999999999999999999.9999999999999)	bit_xor(9999999999999999999999999999999999.9999999999999)
18446744073709551615	18446744073709551615	18446744073709551615
select BIT_AND(-99999999999999999.99999),BIT_OR(-99999999999999999.99999),BIT_XOR(-99999999999999999.99999);
bit_and(-99999999999999999.99999)	bit_or(-99999999999999999.99999)	bit_xor(-99999999999999999.99999)
0	0	0
select BIT_AND(-999999999999999933193939.99999),BIT_OR(-999999999999999933193939.99999),BIT_XOR(-999999999999999933193939.99999);
bit_and(-999999999999999933193939.99999)	bit_or(-999999999999999933193939.99999)	bit_xor(-999999999999999933193939.99999)
0	0	0
select BIT_AND(-9999999999999999999999999999999999.9999999999999),BIT_OR(-9999999999999999999999999999999999.9999999999999),BIT_XOR(-9999999999999999999999999999999999.9999999999999);
bit_and(-9999999999999999999999999999999999.9999999999999)	bit_or(-9999999999999999999999999999999999.9999999999999)	bit_xor(-9999999999999999999999999999999999.9999999999999)
0	0	0
create table t1(a bigint);
select BIT_AND(a),BIT_OR(a), BIT_XOR(a) from t1;
bit_and(a)	bit_or(a)	bit_xor(a)
null	null	null
insert into t1 values(null),(null),(null),(null);
select BIT_AND(a),BIT_OR(a), BIT_XOR(a)  from t1;
bit_and(a)	bit_or(a)	bit_xor(a)
null	null	null
insert into t1 values(12417249128419),(124124125124151),(5124125151415),(124125152651515);
select BIT_AND(a),BIT_OR(a), BIT_XOR(a) from t1;
bit_and(a)	bit_or(a)	bit_xor(a)
0	140668768616447	17479809270168
drop table t1;
create table t1(a bigint);
select BIT_AND(a),BIT_OR(a), BIT_XOR(a) from t1;
BIT_AND(a)	BIT_OR(a)	BIT_XOR(a)
18446744073709551615	0	0
insert into t1 values(null),(null),(null),(null);
select BIT_AND(a),BIT_OR(a), BIT_XOR(a)  from t1;
BIT_AND(a)	BIT_OR(a)	BIT_XOR(a)
18446744073709551615	0	0
insert into t1 values(12417249128419),(124124125124151),(5124125151415),(124125152651515);
select BIT_AND(a),BIT_OR(a), BIT_XOR(a) from t1;
BIT_AND(a)	BIT_OR(a)	BIT_XOR(a)
2097187	140668768616447	17479809270168
drop table t1;
create table t1 ( a int not null default 1, big bigint );
insert into t1 (big) values (-1),(1234567890167),(92233720368547),(18446744073709515);
select * from t1;
a	big
1	-1
1	1234567890167
1	92233720368547
1	18446744073709515
select distinct BIT_AND(big),BIT_OR(big), BIT_XOR(big),BIT_AND(big)-1, BIT_OR(big)-1, BIT_XOR(big)-1  from t1;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
select BIT_AND(big),BIT_OR(big), BIT_XOR(big),BIT_AND(big)-1, BIT_OR(big)-1, BIT_XOR(big)-1 from t1 group by a;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
insert into t1 (big) values (184467440737615);
select * from t1;
a	big
1	-1
1	1234567890167
1	92233720368547
1	18446744073709515
1	184467440737615
select distinct BIT_AND(big),BIT_OR(big), BIT_XOR(big),BIT_AND(big)-1, BIT_OR(big)-1, BIT_XOR(big)-1  from t1;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
select BIT_AND(big),BIT_OR(big), BIT_XOR(big),BIT_AND(big)-1, BIT_OR(big)-1, BIT_XOR(big)-1 from t1 group by a;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
drop table t1;
CREATE TABLE t1 (Fld1 int(11) default NULL,Fld2 int(11) default NULL);
INSERT INTO t1 VALUES (1,10),(1,20),(2,NULL),(2,NULL),(3,50);
select Fld1, BIT_AND(Fld2),BIT_OR(Fld2), BIT_XOR(Fld2) as q from t1 group by Fld1 having q is not null;
column "q" must appear in the GROUP BY clause or be used in an aggregate function
select Fld1, BIT_AND(Fld2),BIT_OR(Fld2), BIT_XOR(Fld2) from t1 group by Fld1 having BIT_AND(Fld2) is not null;
fld1	bit_and(fld2)	bit_or(fld2)	bit_xor(fld2)
1	0	30	30
3	50	50	50
select Fld1, BIT_AND(Fld2),BIT_OR(Fld2), BIT_XOR(Fld2) from t1 group by Fld1 having BIT_OR(Fld2) is not null;
fld1	bit_and(fld2)	bit_or(fld2)	bit_xor(fld2)
1	0	30	30
3	50	50	50
select Fld1, BIT_AND(Fld2),BIT_OR(Fld2), BIT_XOR(Fld2) from t1 group by Fld1 having BIT_XOR(Fld2) is not null;
fld1	bit_and(fld2)	bit_or(fld2)	bit_xor(fld2)
1	0	30	30
3	50	50	50
drop table t1;
SELECT BIT_AND(1)<BIT_AND(2), BIT_AND(1)>BIT_OR(3), BIT_AND(3)>BIT_XOR(5);
BIT_AND(1)<BIT_AND(2)	BIT_AND(1)>BIT_OR(3)	BIT_AND(3)>BIT_XOR(5)
true	false	false

select 0,256,00000000000000065536,2147483647,-2147483648,2147483648,+4294967296;
0	256	00000000000000065536	2147483647	-2147483648	2147483648	4294967296
0	256	65536	2147483647	-2147483648	2147483648	4294967296
select 9223372036854775807,-009223372036854775808;
9223372036854775807	-009223372036854775808
9223372036854775807	-9223372036854775808
select +9999999999999999999,-9999999999999999999;
9999999999999999999	-9999999999999999999
9999999999999999999	-9999999999999999999
select cast(9223372036854775808 as unsigned)+1;
Can't cast '9223372036854775808' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
select 9223372036854775808+1;
Can't cast '9223372036854775808' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
select -(0-3),round(-(0-3)), round(9999999999999999999);
-(0 - 3)	round(-(0 - 3))	round(9999999999999999999)
3	3	9999999999999999999
select 1,11,101,1001,10001,100001,1000001,10000001,100000001,1000000001,10000000001,100000000001,1000000000001,10000000000001,100000000000001,1000000000000001,10000000000000001,100000000000000001,1000000000000000001,10000000000000000001;
1	11	101	1001	10001	100001	1000001	10000001	100000001	1000000001	10000000001	100000000001	1000000000001	10000000000001	100000000000001	1000000000000001	10000000000000001	100000000000000001	1000000000000000001	10000000000000000001
1	11	101	1001	10001	100001	1000001	10000001	100000001	1000000001	10000000001	100000000001	1000000000001	10000000000001	100000000000001	1000000000000001	10000000000000001	100000000000000001	1000000000000000001	10000000000000000001
select -1,-11,-101,-1001,-10001,-100001,-1000001,-10000001,-100000001,-1000000001,-10000000001,-100000000001,-1000000000001,-10000000000001,-100000000000001,-1000000000000001,-10000000000000001,-100000000000000001,-1000000000000000001,-10000000000000000001;
-1	-11	-101	-1001	-10001	-100001	-1000001	-10000001	-100000001	-1000000001	-10000000001	-100000000001	-1000000000001	-10000000000001	-100000000000001	-1000000000000001	-10000000000000001	-100000000000000001	-1000000000000000001	-10000000000000000001
-1	-11	-101	-1001	-10001	-100001	-1000001	-10000001	-100000001	-1000000001	-10000000001	-100000000001	-1000000000001	-10000000000001	-100000000000001	-1000000000000001	-10000000000000001	-100000000000000001	-1000000000000000001	-10000000000000000001
create table t1 (a bigint unsigned not null, primary key(a));
insert into t1 values (18446744073709551615), (0xFFFFFFFFFFFFFFFE), (18446744073709551613), (18446744073709551612);
select * from t1 order by 1 asc;
a
18446744073709551612
18446744073709551613
18446744073709551614
18446744073709551615
select * from t1 where a=18446744073709551615 order by a asc;
a
18446744073709551615
delete from t1 where a=18446744073709551615;
select * from t1 order by 1 asc;
a
18446744073709551612
18446744073709551613
18446744073709551614
drop table t1;
create table t1 ( a int not null default 1, big bigint primary key );
insert into t1 (big) values (-1),(12345678901234567),(9223372036854775807);
select * from t1 order by a desc, big asc;
a	big
1	-1
1	12345678901234567
1	9223372036854775807
select min(big),max(big),max(big)-1 from t1;
min(big)	max(big)	max(big) - 1
-1	9223372036854775807	9223372036854775806
select min(big),max(big),max(big)-1 from t1 group by a;
min(big)	max(big)	max(big) - 1
-1	9223372036854775807	9223372036854775806
drop table t1;
create table t1 ( a int not null default 1, big bigint unsigned primary key);
insert into t1 (big) values (0),(18446744073709551615), (0xFFFFFFFFFFFFFFFE), (18446744073709551613), (18446744073709551612);
select * from t1;
a	big
1	0
1	18446744073709551612
1	18446744073709551613
1	18446744073709551614
1	18446744073709551615
select * from t1 order by big limit 1,3;
a	big
1	18446744073709551612
1	18446744073709551613
1	18446744073709551614
select * from t1 order by big limit 3 offset 1;
a	big
1	18446744073709551612
1	18446744073709551613
1	18446744073709551614
select min(big),max(big),max(big)-1 from t1;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
select min(big),max(big),max(big)-1 from t1 group by a;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
drop table t1;
create table t1 (id bigint primary key, a int);
insert into t1 values (1,1);
select * from t1;
id	a
1	1
select * from t1 limit 9999999999;
id	a
1	1
drop table if exists t1;
drop table if exists t2;
create table t1 (
value64  bigint unsigned  not null,
value32  integer          not null,
primary key(value64)
);
create table t2 (
value64  bigint unsigned  not null,
value32  integer          not null,
primary key(value64)
);
insert into t1 values(17156792991891826145, 1);
insert into t1 values( 9223372036854775807, 2);
insert into t2 values(17156792991891826145, 3);
insert into t2 values( 9223372036854775807, 4);
select * from t1 order by 1 asc, 2 desc;
value64	value32
9223372036854775807	2
17156792991891826145	1
select * from t2 order by 2 desc;
value64	value32
9223372036854775807	4
17156792991891826145	3
select * from t1 join t2 on t1.value64=t2.value64 order by t1.value64 asc, t2.value32 desc;
value64	value32	value64	value32
9223372036854775807	2	9223372036854775807	4
17156792991891826145	1	17156792991891826145	3
select * from t1 join t2 on t1.value64=t2.value64 where t1.value64=17156792991891826145 order by 1+2 desc;
value64	value32	value64	value32
17156792991891826145	1	17156792991891826145	3
drop table if exists t1;
drop table if exists t2;
create table t1 (sint64 bigint not null);
insert into t1 values (-9223372036854775808);
select * from t1 order by abs(1);
sint64
-9223372036854775808
drop table t1;
create table t1 (bigint_col bigint unsigned);
insert into t1 values (17666000000000000000);
select * from t1 where bigint_col=17666000000000000000;
bigint_col
17666000000000000000
select * from t1 where bigint_col='17666000000000000000';
bigint_col
17666000000000000000
drop table t1;
select cast(10000002383263201056 as unsigned) mod 50 as result;
Can't cast '10000002383263201056' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
select cast(19999999999999999999 as signed);
Can't cast '19999999999999999999' from DECIMAL128 type to BIGINT type. Reason: overflow
select cast(-19999999999999999999 as signed);
Can't cast '-19999999999999999999' from DECIMAL128 type to BIGINT type. Reason: overflow
CREATE TABLE t1 (id INT PRIMARY KEY,
a BIGINT(20) UNSIGNED,
b VARCHAR(20));
insert INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7FFFFFFFFFFFFFFF AS UNSIGNED)),
(3,CAST(0x8000000000000000 AS UNSIGNED)),
(4,CAST(0xFFFFFFFFFFFFFFFF AS UNSIGNED));
UPDATE t1 SET b = a;
select * from t1 where ((a = 18446744073709551615) and (b = '18446744073709551615')) order by a asc;
id	a	b
4	18446744073709551615	18446744073709551615
CREATE TABLE t_bigint(id BIGINT);
insert INTO t_bigint VALUES (1), (2);
SELECT id, id >= 1.1 FROM t_bigint;
id	id >= 1.1
1	false
2	true
SELECT id, 1.1 <= id FROM t_bigint;
id	1.1 <= id
1	false
2	true
SELECT id, id = 1.1 FROM t_bigint;
id	id = 1.1
1	false
2	false
SELECT id, 1.1 = id FROM t_bigint;
id	1.1 = id
1	false
2	false
SELECT * from t_bigint WHERE id = 1.1;
id
SELECT * from t_bigint WHERE id = 1.1e0;
id
SELECT * from t_bigint WHERE id = '1.1';
can't cast '1.1' from VARCHAR type to BIGINT type.
SELECT * from t_bigint WHERE id = '1.1e0';
can't cast '1.1e0' from VARCHAR type to BIGINT type.
SELECT * from t_bigint WHERE id IN (1.1, 2.2);
id
SELECT * from t_bigint WHERE id IN (1.1e0, 2.2e0);
id
SELECT * from t_bigint WHERE id IN ('1.1', '2.2');
can't cast '1.1' from VARCHAR type to BIGINT type.
SELECT * from t_bigint WHERE id IN ('1.1e0', '2.2e0');
can't cast '1.1e0' from VARCHAR type to BIGINT type.
SELECT * from t_bigint WHERE id BETWEEN 1.1 AND 1.9;
id
SELECT * from t_bigint WHERE id BETWEEN 1.1e0 AND 1.9e0;
can't cast '1.1' from VARCHAR type to BIGINT type.
SELECT * from t_bigint WHERE id BETWEEN '1.1' AND '1.9';
can't cast '1.1' from VARCHAR type to BIGINT type.
SELECT * from t_bigint WHERE id BETWEEN '1.1e0' AND '1.9e0';
can't cast '1.1e0' from VARCHAR type to BIGINT type.
drop table t1;
CREATE TABLE t1 (a BIGINT);
insert INTO t1 VALUES (1);
SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
a
SELECT * FROM t1 WHERE coalesce(a)=0.9;
a
SELECT * FROM t1 WHERE coalesce(a) in (0.8,0.9);
a
SELECT * FROM t1 WHERE a BETWEEN 0 AND 0.9;
a
SELECT * FROM t1 WHERE a=0.9;
a
SELECT * FROM t1 WHERE a IN (0.8,0.9) order by 1 desc;
a
drop table t1;
create table t (id bigint unsigned, b int);
insert into t values(8894754949779693574,1);
insert into t values(8894754949779693579,2);
insert into t values(17790886498483827171,3);
select count(*) from t
where id>=8894754949779693574 and id =17790886498483827171 order by 1 asc;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
select count(*) from t
where id between 8894754949779693574 and 17790886498483827171;
Can't cast column from BIGINT UNSIGNED type to BIGINT type because of one or more values in that column. Reason: overflow
drop table t;
SELECT (184467440737095 BETWEEN 0 AND 18446744073709551500);
Can't cast '18446744073709551500' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
SELECT 184467440737095 >= 0;
184467440737095 >= 0
true
SELECT CAST(100 AS UNSIGNED) BETWEEN 1 AND -1;
CAST(100 AS UNSIGNED) BETWEEN 1 AND -1
false
SELECT CAST(100 AS UNSIGNED) NOT BETWEEN 1 AND -1;
CAST(100 AS UNSIGNED) NOT BETWEEN 1 AND -1
true
SELECT CAST(0 AS UNSIGNED) BETWEEN 0 AND -1;
CAST(0 AS UNSIGNED) BETWEEN 0 AND -1
false
SELECT CAST(0 AS UNSIGNED) NOT BETWEEN 0 AND -1;
CAST(0 AS UNSIGNED) NOT BETWEEN 0 AND -1
true
SELECT ( 9223372036854775808 BETWEEN 9223372036854775808 AND 9223372036854775808 );
( 9223372036854775808 BETWEEN 9223372036854775808 AND 9223372036854775808 )
true
SELECT ( 9223372036854775807 BETWEEN 9223372036854775808 AND 1 );
Can't cast '9223372036854775808' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
SELECT ( -1 BETWEEN 9223372036854775808 AND 1 );
Can't cast '9223372036854775808' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
SELECT ( 0 BETWEEN 9223372036854775808 AND 1 );
Can't cast '9223372036854775808' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
SELECT ( 1 BETWEEN 9223372036854775808 AND 1 );
Can't cast '9223372036854775808' from BIGINT UNSIGNED type to BIGINT type. Reason: overflow
drop table if exists t1;
drop table if exists t2;
drop table if exists t3;
drop table if exists t11;
drop table if exists t12;
CREATE TABLE t1 (a bigint(3), b bigint(5) primary key);
insert INTO t1 VALUES (1,1),(1,2);
update t1 set a=2 where a=1 limit 1;
select * from t1;
a	b
2	1
1	2
insert INTO t1 VALUES (1,3);
update t1 set a=2 where a=1;
select * from t1;
a	b
2	1
2	2
2	3
drop table t1;
create table t1 (
a bigint not null,
b bigint not null default 0,
c bigint not null default 0,
d bigint not null default 0,
e bigint not null default 0,
f bigint not null default 0,
g bigint not null default 0,
h bigint not null default 0,
i bigint not null default 0,
j bigint not null default 0,
primary key (a));
insert into t1 (a) values (2),(4),(6),(8),(10),(12),(14),(16),(18),(20),(22),(24),(26),(23);
update t1 set a=a+101;
select a,b from t1;
a	b
103	0
105	0
107	0
109	0
111	0
113	0
115	0
117	0
119	0
121	0
123	0
124	0
125	0
127	0
update t1 set a=127 where a=25;
select a,b from t1;
a	b
103	0
105	0
107	0
109	0
111	0
113	0
115	0
117	0
119	0
121	0
123	0
124	0
125	0
127	0
update t1 set a=a-1 where 1 > 2;
select a,b from t1;
a	b
103	0
105	0
107	0
109	0
111	0
113	0
115	0
117	0
119	0
121	0
123	0
124	0
125	0
127	0
update t1 set a=a-1 where 3 > 2;
select a,b from t1;
a	b
102	0
104	0
106	0
108	0
110	0
112	0
114	0
116	0
118	0
120	0
122	0
123	0
124	0
126	0
drop table t1;
create table t1 (a bigint not null primary key, b char(32));
insert into t1 values (1,'apple'), (2,'apple');
select * from t1;
a	b
1	apple
2	apple
drop table if exists t1;
drop table if exists t2;
drop table if exists t3;
drop table if exists t11;
drop table if exists t12;
CREATE TABLE t1 (a bigint(3), b bigint(5) primary key);
insert INTO t1 VALUES (1,1),(1,2);
delete from t1 where a=1 limit 1;
select * from t1;
a	b
1	2
insert INTO t1 VALUES (1,3);
delete from t1 where a=1;
select * from t1;
a	b
drop table t1;
create table t1 (
a bigint not null,
b bigint not null default 0,
c bigint not null default 0,
d bigint not null default 0,
e bigint not null default 0,
f bigint not null default 0,
g bigint not null default 0,
h bigint not null default 0,
i bigint not null default 0,
j bigint not null default 0,
primary key (a));
insert into t1 (a) values (2),(4),(6),(8),(10),(12),(14),(16),(18),(20),(22),(24),(26),(23);
delete from t1 where a=2+2;
select a,b from t1;
a	b
2	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
23	0
24	0
26	0
delete from t1 where  a=24;
select a,b from t1;
a	b
2	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
23	0
26	0
delete from t1 where  3 < 2;
select a,b from t1;
a	b
2	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
23	0
26	0
delete from t1 where  1 < 2;
select a,b from t1;
a	b
drop table t1;
create table t1 (a bigint not null primary key, b char(32));
insert into t1 values (1,'apple'), (2,'apple');
select * from t1;
a	b
1	apple
2	apple

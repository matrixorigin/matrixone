#SELECT, 科学计算
select floor(5.5),floor(-5.5);
select floor(1.1e5);


#SELECT, 嵌套，EXTREME VALUE
select floor(cast(-2 as unsigned)), floor(18446744073709551614), floor(-2);
SELECT floor(ceil(12345678901234567890));

-- @bvt:issue#3588
SELECT floor(18446744073709551616);
SELECT floor(floor(18446744073709551616));
SELECT floor(floor(floor(18446744073709551616)));
-- @bvt:issue

#数据类型
CREATE TABLE t1(a BIGINT UNSIGNED);
INSERT INTO t1 VALUES(18446744073709551615);
SELECT CEILING(a) AS c, FLOOR(a) AS f FROM t1;
DROP TABLE t1;

#EXTREME VALUE

select floor(999999999999999999);

-- @bvt:issue#3588
select floor(9999999999999999999999);
-- @bvt:issue

-- @bvt:issue#3579
select floor(9.999999999999999999999);
-- @bvt:issue


select floor(-9.999999999999999999999);
select floor(-999999999999999999999.999);

#INSERT, EXTREME VALUE, DATA TYPE
#CREATE TABLE t1(a BIGINT UNSIGNED);
#INSERT INTO t1 VALUES(18446744073709551615);
#CREATE TABLE t2 AS
#SELECT CEILING(a) AS c, FLOOR(a) AS f FROM t1;
#SELECT * FROM t2;
#drop table t1;
#drop table t2;

# CREATE TABLE t AS SELECT CEILING(18446744073709551615) AS c, FLOOR(18446744073709551615) AS f;
# SELECT * FROM t;
# DROP TABLE t;
# CREATE TABLE t AS
# SELECT CEILING(CAST(1844674407370955161 AS DECIMAL(19, 0))) AS c,
# FLOOR(CAST(1844674407370955161 AS DECIMAL(19, 0))) AS f;
# SELECT * FROM t;
# DROP TABLE t;
# CREATE TABLE t AS
# SELECT CEILING(CAST(-9223372036854775808 AS DECIMAL(19, 0))) AS c,
# FLOOR(CAST(-9223372036854775808 AS DECIMAL(19, 0))) AS f;
# SELECT * FROM t;
# DROP TABLE t;
# CREATE TABLE t AS
# SELECT CEILING(CAST(184467440737095516 AS DECIMAL(18, 0))) AS c,
# FLOOR(CAST(184467440737095516 AS DECIMAL(18, 0))) AS f;
# SELECT * FROM t;
# DROP TABLE t;
# CREATE TABLE t AS
# SELECT CEILING(CAST(-922337203685477580 AS DECIMAL(18, 0))) AS c,
# FLOOR(CAST(-922337203685477580 AS DECIMAL(18, 0))) AS f;
# SELECT * FROM t;
# DROP TABLE t;
# #0.5 MO不支持这种写法
# CREATE TABLE t AS
# SELECT CEILING(CAST(99999999999999999.9 AS DECIMAL(18, 1))) AS c,
# FLOOR(CAST(-99999999999999999.9 AS DECIMAL(18, 1))) AS f;
# SELECT * FROM t;
# DROP TABLE t;
# #0.5 MO不支持这种写法
# CREATE TABLE t AS
# SELECT CEILING(CAST(999999999999999999.9 AS DECIMAL(19, 1))) AS c,
# FLOOR(CAST(-999999999999999999.9 AS DECIMAL(19, 1))) AS f;
# SELECT * FROM t;
# DROP TABLE t;

#WHERE
CREATE TABLE t1 (col1 INTEGER);
CREATE TABLE t2 (col1 INTEGER);
INSERT INTO t1 VALUES (1), (2);
INSERT INTO t2 VALUES (1), (2);
SELECT
t1.col1,
t2.col1
FROM
t1,
t2
WHERE
t1.col1 = t2.col1
AND t1.col1 = FLOOR(2);
drop table t1;
drop table t2;

#INSERT INTO

CREATE TABLE t1 (a VARCHAR(250), b INT, PRIMARY KEY (b));
insert into t1 (a) select (FLOOR(0.13 * 100));
insert into t1 (a) select FLOOR(1.32 * 100) from t1;
insert into t1 (a) select FLOOR(0.0044 * 100) from t1;
insert into t1 (a) select FLOOR(124.314 * 100) from t1;
insert into t1 (a) select FLOOR(0.3414 * 100) from t1;
insert into t1 (a) select FLOOR(12.4412 * 100) from t1;
insert into t1 (a) select FLOOR(124131.4123 * 100) from t1;
insert into t1 (a) select FLOOR(0.2314114 * 100) from t1;
insert into t1 (a) select FLOOR(13.45123 * 100) from t1;
insert into t1 (a) select FLOOR(0.44521 * 100) from t1;
insert into t1 (a) select FLOOR(0.577134 * 100) from t1;
insert into t1 (a) select FLOOR(1244.53 * 100) from t1;
insert into t1 (a) select FLOOR(6604.642222 * 100) from t1;
insert into t1 (a) select FLOOR(1415.313 * 100) from t1;
SELECT a,
(SELECT space(250) FROM t1 i1
WHERE i1.b=t1.a ORDER BY 1 LIMIT 1) AS a
FROM t1 ORDER BY a LIMIT 5;
DROP TABLE t1;


#0.5 MO不支持CREATE SELECT, 也不支持 WITH RECURSIVE AS
#CREATE TABLE t1(a INT, b INT);
#INSERT INTO t1 (a) VALUES (1), (2);
#CREATE TABLE t2 SELECT * FROM t1;
#SELECT (WITH RECURSIVE dt AS (SELECT t1.a AS a UNION
#SELECT a+1 FROM dt WHERE a<10)
#SELECT t1.a * CONCAT(COUNT(*), '.', FLOOR(AVG(dt.a)))
#FROM dt) AS subq
#FROM t1;
#DROP TABLE t1;

#嵌套
-- @bvt:issue#3588
SELECT DATE(FLOOR(20110512154559.616));
-- @bvt:issue

#INSERT INTO, distinct
CREATE table t1(a int, b float);
insert into t1 select floor(12124.413), floor(-4213.413); 
insert into t1 select floor(12124.123), floor(-42413.409);
select distinct floor(a) from t1;
drop table t1;

#null
select floor(null);

#算术操作
select floor(123.34)-floor(123.03);

#WHERE
drop table if exists t1;
create table t1(a INT,  b float);
insert into t1 select floor(12124.413), floor(-4213.413); 
insert into t1 select floor(12124.123), floor(-42413.409);
select * from t1 where floor(a)=12124;
drop table t1;


#ON CONDITION
create table t1(a INT,  b float);
create table t2(a INT,  b float);
insert into t1 select floor(12124.413), floor(-4213.413); 
insert into t1 select floor(12124.123), floor(-42413.409);
insert into t2 select floor(14124.413), floor(-4213.413);
insert into t2 select floor(984798.123), floor(-980.409);
SELECT t1.a, t2.a FROM t1 JOIN t2 ON (floor(t1.b) = floor(t2.b));
drop table t1;
drop table t2;

#HAVING，比较操作
drop table if exists t1;
create table t1(a INT,  b float);
insert into t1 select floor(14124.413), floor(-4213.413);
insert into t1 select floor(984798.123), floor(-980.409);
select b from t1 group by b having floor(b)<-1000;
drop table t1;


#MO支持的floor是clickhouse语义的，所以可以有两个参数, 以下在MO中运行测试,mysql跑不过
select floor(123.342, 1);
select floor(123.45, -1);
select floor(123.342124124214, 100);
select floor(-123.342124124214, -100);

select floor(123.342, null);

select floor(null, 1);

select floor(null, null);

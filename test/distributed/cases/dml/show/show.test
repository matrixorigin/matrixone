
-- @suite

-- @setup
drop database if exists test01;
create database test01;
use test01;
create table tt(col2 float comment '"%$^&*()_+@!\'');
show create table tt;
drop table tt;
create table t1 (id int not null, str char(10),name varchar(10));
create table t2 (a int);

-- @case
-- @desc:test for show tables
-- @label:bvt
show tables;

-- @case
-- @desc:test for show tables from
-- @label:bvt
show tables from test01;

-- @case
-- @desc:test for show columns from
-- @label:bvt
show columns from t1;
show full columns from t1;
show full columns from t1 like '%';
show full columns from t1 where `Field`='id';
drop database if exists test01;

-- @case
-- @desc:test for show charset
-- @label:bvt
show charset;
drop database if exists test02;
create database test02;
use test02;
create table t1(a tinyint, b smallint, c int, d bigint);
create database test01;
use test01;
show columns from test02.t1;
create database if not exists db11111111111;
show table status from db11111111111;
drop database db11111111111;
show variables where value = 'MatrixOne';

-- @case
-- @desc:test for show grants
-- @label:bvt
show grants;
show grants for 'root'@'localhost';
show grants for 'test'@'localhost';
create role role1;
grant all on table *.* to role1;
grant create table, drop table on database *.* to role1;
create user user1 identified by 'pass1';
grant role1 to user1;
show grants for 'user1'@'localhost';
drop user user1;
drop role role1;

-- @case
-- @desc:test for show full tables
-- @label:bvt
create database if not exists test03;
use test03;
drop view if exists v1;
drop table if exists t1;
create table t1(a int, b int);
insert into t1 values(1,1);
create view v1 as select * from t1;
show full tables;
show full tables from test03;

-- @case
-- @desc:test for sql injection in show statements
-- @label:bvt
show full tables from `1;drop table t1;`;
show tables like `1;drop table t1;`;
show full tables from "1;drop table t1;";
show create database `1;drop table t1;`;
show create table `1;drop table t1;`;
show columns from `1;drop table t1;`;
show table status from `1;drop table t1;`;
show index from `1;drop table t1;`;
show variables like `1;drop table t1;`;
select * from t1;

-- @case
-- @desc:test for show collation
-- @label:bvt
show collation;
show collation like '%';
show collation where 'Charset'='utf8mb4';

-- @case
-- @desc:test for set and show variables
-- @label:bvt
show variables like 'sql_safe_updates';
set sql_safe_updates=1;
show variables like 'sql_safe_updates';
set autocommit = on;
show variables like 'autocommit';
set autocommit = off;
show variables like 'autocommit';
set autocommit = 1;
show variables like 'autocommit';

-- @case
-- @desc:test for show create table while on update and default is not null
-- @label:bvt
drop table if exists t1;
create table t1(c1 int primary key auto_increment,c2 tinyint not null default 4,c3 smallint,c4 bigint,c5 tinyint unsigned,c6 smallint unsigned,c7 int unsigned,c8 bigint unsigned,c9 float,c10 double,c11 date,c12 datetime,c13 timestamp on update current_timestamp,c14 char,c15 varchar default 'q',c16 json,c17 decimal,c18 text,c19 blob,c20 uuid);
show create table t1;

SHOW TRIGGERS;
SHOW TRIGGERS like '*%';

use mo_catalog;
show tables;

show table_number from mo_catalog;

show column_number from mo_database;
show column_number from hdjshdj;

drop database if exists test01;
create database test01;
use test01;
create table t(a int, b int);
insert into t values(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6);
show table_values from t;
drop table t;

show node list;
show locks;

create role role1;
grant all on table *.* to role1;
grant create table, drop table on database *.* to role1;
create user user1 identified by 'pass1';
grant role1 to user1;
show grants for 'user1'@'localhost';
show grants for ROLE role1;
drop user user1;
drop role role1;

drop database if exists test01;
create database test01;
use test01;
create table t1(a int unique key, b int, c int);
show table_number from test01;
drop table t1;

drop database if exists test01;
create database test01;
use test01;
create table t(a int, b int, c json);
insert into t values(1, 1, '{"a":1,"b":2,"c":3}'), (2, 2, '{"a":1,"b":2,"c":3}'), (3, 3, '{"a":1,"b":2,"c":3}'), (4, 4, '{"a":1,"b":2,"c":3}'), (5, 5, '{"a":1,"b":2,"c":3}'), (6, 6, '{"a":1,"b":2,"c":3}');
show table_values from t;
drop table t;

create database `.quote`;
show tables from `.quote`;
drop database if exists `.quote`;

drop database if exists showDB;
create database showDB;
use showDB;
create table a (a int,b int);
create view va as select a from a;

begin;
show create table a;
show create table va;
show create view va;
show collation;
show collation like '%';
rollback;
drop database if exists showDb;

-- SHOW INDEX FROM tbl_name [FROM db_name]
-- @suite
-- @setup
DROP DATABASE IF EXISTS test;
CREATE DATABASE test;
USE test;
DROP TABLE IF EXISTS show_01;
CREATE TABLE show_01(sname varchar(30),id int);
show INDEX FROM show_01;
DROP TABLE show_01;


-- @suite
-- @setup
DROP TABLE IF EXISTS show_02;
CREATE TABLE show_02 (
  h1 varchar(16) NOT NULL default '',
  u1 varchar(16) NOT NULL default '',
  PRIMARY KEY  (h1,u1)
);
show INDEX FROM show_02;
DROP TABLE show_02;


-- @suite
-- @setup
DROP TABLE IF EXISTS show_03;
CREATE TABLE show_03(a int, b int);
CREATE unique index x ON show_03(a) comment 'x';
show CREATE table show_03;
show INDEX FROM show_03;
DROP TABLE show_03;


-- @suite
-- @setup
CREATE TABLE show_04(a int, b int, unique key(a));
show CREATE TABLE show_04;
CREATE INDEX b ON show_04(b);
show INDEX FROM show_04;
DROP TABLE show_04;

-- SHOW FUNCTION STATUS [like_or_where]
-- @bvt:issue#7367
DROP DATABASE IF EXISTS show_03;
USE show_03;
delimiter $$
CREATE FUNCTION myfun(ia int,ib int) returns int
BEGIN
RETURN ia + ib;
end
$$
delimiter;

show FUNCTION status;
show FUNCTION status LIKE 'pattern';
show FUNCTION status where db = 'show_03';
-- @bvt:issue

DROP DATABASE test;

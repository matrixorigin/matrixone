# test cn-write-s3
# 1. bulk insert test
drop table if exists t;
create table t(a int);
insert into t values(1);
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
insert into t select * from t;
select count(*) from t;
# transaction test
begin;
insert into t select * from t;
select count(*) from t;
commit;
select count(*) from t;
drop table t;
# 2.primary key test
create table t(a int primary key);
insert into t select * from generate_series(1,200000) g;
select count(*) from t;
# abort,duplicate key
-- @bvt:issue#7682
insert into t select * from t;
-- @bvt:issue
# transaction test
begin;
-- @bvt:issue#7682
insert into t select * from t;
-- @bvt:issue
select count(*) from t;
-- @bvt:issue#7682
commit;
-- @bvt:issue
select count(*) from t;
# not-null test
insert into t select null;
drop table t;
# 3.compiste primary key test
create table t(a int,b int,primary key(a,b));
create table temp(c int);
insert into temp select * from generate_series(1,200000) g;
insert into t select c,c from temp;
select count(*) from t;
# abort,duplicate key
-- @bvt:issue#7682
insert into t select * from t;
-- @bvt:issue#
# transaction test
begin;
insert into t select * from t;
select count(*) from t;
commit;
select count(*) from t;
# not-null test
insert into t select null,null;
drop table t;
drop table temp;
# 4.unique key test
create table t(a int unique);
insert into t select * from generate_series(1,200000) g;
select count(*) from t;
# abort,duplicate key
insert into t select * from t;
# transaction test
begin;
insert into t select * from t;
select count(*) from t;
commit;
select count(*) from t;
# not-null test
insert into t select null;
select count(*) from t;
drop table t;
# 5.auto increment test
create table t(a int auto_increment,b int);
insert into t(b) select * from generate_series(1,200000) g;
select count(*) from t;
select a from t where a > 199990;
drop table t;
# 6.all load goes through s3
drop table if exists t1;
create table t1(
col1 tinyint,
col2 smallint,
col3 int,
col4 bigint,
col5 tinyint unsigned,
col6 smallint unsigned,
col7 int unsigned,
col8 bigint unsigned
);
load data infile '$resources/load_data/integer_numbers_3.csv' into table t1;
select * from t1;
drop table t1;
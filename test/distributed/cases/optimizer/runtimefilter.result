drop database if exists d1;
create database d1;
use d1;
select enable_fault_injection();
enable_fault_injection()
true
drop table if exists t1;
drop table if exists t2;
create table t1(c1 int primary key, c2 int, c3 int, key(c3));
create table t2(c1 int primary key, c2 int, c3 int);
select add_fault_point('fj/cn/flush_small_objs',':::','echo',40,'d1.t1');
add_fault_point(fj/cn/flush_small_objs, :::, echo, 40, d1.t1)
true
select add_fault_point('fj/cn/flush_small_objs',':::','echo',40,'d1.t2');
add_fault_point(fj/cn/flush_small_objs, :::, echo, 40, d1.t2)
true
insert into t1 select *,*,* from generate_series(300000) g;
insert into t2 select *,*,* from generate_series(30000) g;
explain select * from t1 where t1.c2 in( select c1 from t2 where t2.c2=1);
QUERY PLAN
Project
  ->  Join
        Join Type: SEMI   hashOnPK
        Join Cond: (t1.c2 = t2.c1)
        Runtime Filter Build: #[-1,0]
        ->  Table Scan on d1.t1
              Runtime Filter Probe: t1.c2
        ->  Table Scan on d1.t2
              Filter Cond: (t2.c2 = 1)
              Block Filter Cond: (t2.c2 = 1)
select * from t1 where t1.c2 in( select c1 from t2 where t2.c2=1);
c1    c2    c3
1    1    1
explain select * from t1,t2 where t1.c1=t2.c1 and t2.c2=1;
QUERY PLAN
Project
  ->  Join
        Join Type: INNER   hashOnPK
        Join Cond: (t1.c1 = t2.c1)
        Runtime Filter Build: #[-1,0]
        ->  Table Scan on d1.t1
              Runtime Filter Probe: t1.c1
        ->  Table Scan on d1.t2
              Filter Cond: (t2.c2 = 1)
              Block Filter Cond: (t2.c2 = 1)
select * from t1,t2 where t1.c1=t2.c1 and t2.c2=1;
c1    c2    c3    c1    c2    c3
1    1    1    1    1    1
select * from t1,t2 where t1.c1=t2.c1 and t2.c2 between 20 and 25;
c1    c2    c3    c1    c2    c3
20    20    20    20    20    20
21    21    21    21    21    21
22    22    22    22    22    22
23    23    23    23    23    23
24    24    24    24    24    24
25    25    25    25    25    25
explain select * from t1,t2 where t1.c2=t2.c1 and t2.c2=1;
QUERY PLAN
Project
  ->  Join
        Join Type: INNER   hashOnPK
        Join Cond: (t1.c2 = t2.c1)
        Runtime Filter Build: #[-1,0]
        ->  Table Scan on d1.t1
              Runtime Filter Probe: t1.c2
        ->  Table Scan on d1.t2
              Filter Cond: (t2.c2 = 1)
              Block Filter Cond: (t2.c2 = 1)
select * from t1,t2 where t1.c2=t2.c1 and t2.c2=1;
c1    c2    c3    c1    c2    c3
1    1    1    1    1    1
select * from t1,t2 where t1.c2=t2.c1 and t2.c2 between 20 and 25;
c1    c2    c3    c1    c2    c3
20    20    20    20    20    20
21    21    21    21    21    21
22    22    22    22    22    22
23    23    23    23    23    23
24    24    24    24    24    24
25    25    25    25    25    25
set session optimizer_hints="forceOneCN=1";
select * from t1,t2 where t1.c3=t2.c3 and t2.c2=1;
c1    c2    c3    c1    c2    c3
1    1    1    1    1    1
set session optimizer_hints="";
drop table if exists t1;
drop table if exists t2;
create table t1(c1 int , c2 int , c3 int, primary key (c1,c2));
create table t2(c1 int , c2 int , c3 int, primary key (c1,c2));
insert into t1 select result,result%10000,result from generate_series(1,100000)g;
insert into t2 select result%10000,result,result from generate_series(1,100000)g;
explain select * from t1,t2 where t1.c1=t2.c2 and t2.c3<1000;
AP QUERY PLAN ON ONE CN(4 core)
Project
  ->  Join
        Join Type: INNER
        Join Cond: (t1.c1 = t2.c2)
        Runtime Filter Build: serial(#[-1,0])
        ->  Table Scan on d1.t1
              Runtime Filter Probe: t1.__mo_cpkey_col Match Prefix
        ->  Table Scan on d1.t2
              Filter Cond: (t2.c3 < 1000)
              Block Filter Cond: (t2.c3 < 1000)
select count(*) from t1,t2 where t1.c1=t2.c2 and t2.c3<10000;
count(*)
9999
explain select * from t1,t2 where t1.c2=t2.c1 and t2.c3<5;
TP QUERY PLAN
Project
  ->  Join
        Join Type: INNER
        Join Cond: (t1.c2 = t2.c1)
        Runtime Filter Build: #[-1,0]
        ->  Table Scan on d1.t1
              Runtime Filter Probe: t1.c2
        ->  Table Scan on d1.t2
              Filter Cond: (t2.c3 < 5)
              Block Filter Cond: (t2.c3 < 5)
select count(*) from t1,t2 where t1.c2=t2.c1 and t2.c3<5;
count(*)
40
drop database if exists d1;
select disable_fault_injection();
disable_fault_injection()
true
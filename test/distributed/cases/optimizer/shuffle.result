drop database if exists d1;
create database d1;
use d1;
drop table if exists t1;
drop table if exists t2;
create table t1(c1 int not null, c2 int not null, c3 int not null) cluster by c1;
create table t2(c1 int not null, c2 int not null, c3 int not null) cluster by c1;
insert into t1 select *,*,* from generate_series(10000000) g;
insert into t2 select *,*,* from generate_series(9000000) g;
select mo_ctl('dn', 'flush', 'd1.t1');
mo_ctl(dn, flush, d1.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select mo_ctl('dn', 'flush', 'd1.t2');
mo_ctl(dn, flush, d1.t2)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select Sleep(1);
sleep(1)
0
explain select count(*) from t1,t2 where t1.c1=t2.c1;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: INNER
              Join Cond: (t1.c1 = t2.c1) shuffle: range(t1.c1)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
select count(*) from t1,t2 where t1.c1=t2.c1;
count(*)
9000000
explain select count(*) as cnt from t1,t2 where t1.c1=t2.c1 group by t1.c1 having cnt>1;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Group Key: t1.c1 shuffle: REUSE
        Aggregate Functions: starcount(1)
        Filter Cond: (count(*) > 1)
        ->  Join
              Join Type: INNER
              Join Cond: (t1.c1 = t2.c1) shuffle: range(t1.c1)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
select count(*) as cnt from t1,t2 where t1.c1=t2.c1 group by t1.c1 having cnt>1;
cnt
explain select count(*) from t1,t2 where t1.c1=t2.c2;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: INNER
              Join Cond: (t1.c1 = t2.c2) shuffle: range(t1.c1)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
select count(*) from t1,t2 where t1.c1=t2.c2;
count(*)
9000000
explain select count(*) from t1,t2 where t1.c2=t2.c1;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: INNER
              Join Cond: (t1.c2 = t2.c1) shuffle: range(t1.c2)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
select count(*) from t1,t2 where t1.c2=t2.c1;
count(*)
9000000
explain select count(*) from t1,t2 where t1.c2=t2.c2;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: INNER
              Join Cond: (t1.c2 = t2.c2) shuffle: range(t1.c2)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
select count(*) from t1,t2 where t1.c2=t2.c2;
count(*)
9000000
explain select count(*) from t1,t2 where t1.c2=t2.c2 and t2.c3<500000;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: INNER
              Join Cond: (t1.c2 = t2.c2)
              Runtime Filter Build: #[-1,0]
              ->  Table Scan on d1.t1
                    Runtime Filter Probe: t1.c2
              ->  Table Scan on d1.t2
                    Filter Cond: (t2.c3 < 500000)
                    Block Filter Cond: (t2.c3 < 500000)
select count(*) from t1,t2 where t1.c2=t2.c2 and t2.c3<500000;
count(*)
499999
explain select count(*) from t1,t2 where t1.c2=t2.c2 and t2.c3<5000000;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: INNER
              Join Cond: (t1.c2 = t2.c2) shuffle: range(t1.c2)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
                    Filter Cond: (t2.c3 < 5000000)
                    Block Filter Cond: (t2.c3 < 5000000)
select count(*) from t1,t2 where t1.c2=t2.c2 and t2.c3<5000000;
count(*)
4999999
explain select count(*) from t1 group by c1 limit 5;
AP QUERY PLAN ON MULTICN(4 core)
Project
  Limit: 5
  ->  Aggregate
        Group Key: t1.c1 shuffle: range(t1.c1)
        Aggregate Functions: starcount(1)
        ->  Table Scan on d1.t1
select count(*) from t1 group by c1 limit 5;
count(*)
1
1
1
1
1
explain select count(*) from t1 group by c2 limit 5;
AP QUERY PLAN ON MULTICN(4 core)
Project
  Limit: 5
  ->  Aggregate
        Group Key: t1.c2 shuffle: range(t1.c2)
        Aggregate Functions: starcount(1)
        ->  Table Scan on d1.t1
select count(*) from t1 group by c2 limit 5;
count(*)
1
1
1
1
1
explain select count(*) from t1 where t1.c2 in ( select c2 from t2 where t2.c3>100000 );
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: SEMI
              Join Cond: (t1.c2 = t2.c2) shuffle: range(t1.c2)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
                    Filter Cond: (t2.c3 > 100000)
                    Block Filter Cond: (t2.c3 > 100000)
select count(*) from t1 where t1.c2 in ( select c2 from t2 where t2.c3>100000 );
count(*)
8900000
explain select count(*) from t1 where t1.c2 not in ( select c3 from t2 where t2.c3 between 100 and 7000000 );
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: ANTI
              Join Cond: (t1.c2 = t2.c3) shuffle: range(t1.c2)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
                    Filter Cond: t2.c3 BETWEEN 100 AND 7000000
                    Block Filter Cond: t2.c3 BETWEEN 100 AND 7000000
select count(*) from t1 where t1.c2 not in ( select c3 from t2 where t2.c3 between 100 and 7000000 );
count(*)
3000099
explain select count(*) from t1 where t1.c3<800000 and t1.c2 not in ( select c3 from t2 where t2.c3 between 10000 and 6000000 );
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: RIGHT ANTI
              Join Cond: (t2.c3 = t1.c2) shuffle: range(t2.c3)
              ->  Table Scan on d1.t2
                    Filter Cond: t2.c3 BETWEEN 10000 AND 6000000
                    Block Filter Cond: t2.c3 BETWEEN 10000 AND 6000000
              ->  Table Scan on d1.t1
                    Filter Cond: (t1.c3 < 800000)
                    Block Filter Cond: (t1.c3 < 800000)
select count(*) from t1 where  t1.c3<800000 and t1.c2 not in ( select c3 from t2 where t2.c3 between 10000 and 6000000 );
count(*)
9999
explain select count(*) from t1 where t1.c1 <300000 and  t1.c2 in ( select c2 from t2 where t2.c3>100000 );
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: RIGHT SEMI
              Join Cond: (t2.c2 = t1.c2) shuffle: range(t2.c2)
              ->  Table Scan on d1.t2
                    Filter Cond: (t2.c3 > 100000)
                    Block Filter Cond: (t2.c3 > 100000)
              ->  Table Scan on d1.t1
                    Filter Cond: (t1.c1 < 300000)
                    Block Filter Cond: (t1.c1 < 300000)
select count(*) from t1 where t1.c1 <300000 and  t1.c2 in ( select c2 from t2 where t2.c3>100000 );
count(*)
199999
explain select count(*) from t1 left join t2 on t1.c1=t2.c1 where t1.c3 >5000000;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: RIGHT
              Join Cond: (t2.c1 = t1.c1) shuffle: range(t2.c1)
              ->  Table Scan on d1.t2
              ->  Table Scan on d1.t1
                    Filter Cond: (t1.c3 > 5000000)
                    Block Filter Cond: (t1.c3 > 5000000)
select count(*) from t1 left join t2 on t1.c1=t2.c1 where t1.c3 >5000000;
count(*)
5000000
explain select count(*) from t1 left join t2 on t1.c1=t2.c1 and t1.c3 >t2.c3;
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: LEFT
              Join Cond: (t1.c1 = t2.c1), (t1.c3 > t2.c3) shuffle: range(t1.c1)
              ->  Table Scan on d1.t1
              ->  Table Scan on d1.t2
select count(*) from t1 left join t2 on t1.c1=t2.c1 and t1.c3 >t2.c3;
count(*)
10000000
create table t3(c1 int not null, c2 int not null)cluster by c1;
insert into t3 select *,* from generate_series(1,1000000)g;
explain select count(*) from t3 where t3.c2 in (select c3 from t1 where t1.c2!=20000 and  t1.c2 not in ( select c2 from t2 where t2.c3>150000 ));
AP QUERY PLAN ON MULTICN(4 core)
Project
  ->  Aggregate
        Aggregate Functions: starcount(1)
        ->  Join
              Join Type: SEMI
              Join Cond: (t3.c2 = t1.c3)
              Runtime Filter Build: #[-1,0]
              ->  Table Scan on d1.t3
                    Runtime Filter Probe: t3.c2
              ->  Join
                    Join Type: ANTI
                    Join Cond: (t1.c2 = t2.c2) shuffle: range(t1.c2)
                    ->  Table Scan on d1.t1
                          Filter Cond: (t1.c2 <> 20000)
                    ->  Table Scan on d1.t2
                          Filter Cond: (t2.c3 > 150000)
                          Block Filter Cond: (t2.c3 > 150000)
select count(*) from t3 where t3.c2 in (select c3 from t1 where t1.c2!=20000 and  t1.c2 not in ( select c2 from t2 where t2.c3>150000 ));
count(*)
149999
select count(*) from t3 where t3.c1<100000 and t3.c2 not in (select c3 from t1 where t1.c2!=30000 and  t1.c2  in ( select c2 from t2 where t2.c3<850000 ));
count(*)
1
select count(*) from t1,t2,t3 where t1.c1=t2.c1 and t1.c2=t3.c2 and t2.c2<900000 and t3.c1<500000;
count(*)
499999
drop table t3;
drop database if exists d1;
CREATE TABLE shirts (
name VARCHAR(40),
size ENUM('x-small', 'small', 'medium', 'large', 'x-large')
);
INSERT INTO shirts (name, size) VALUES ('dress shirt','large'), ('t-shirt','medium'), ('polo shirt','small');
SELECT name, size FROM shirts;
name    size
dress shirt    large
t-shirt    medium
polo shirt    small
SELECT name, size FROM shirts WHERE size = 'medium';
name    size
t-shirt    medium
DELETE FROM shirts where size = 'large';
SELECT name, size FROM shirts;
name    size
t-shirt    medium
polo shirt    small
DROP TABLE shirts;
create table t_enum(a int,b enum('1','2','3','4','5'));
insert into t_enum values(1,1);
select * from t_enum;
a    b
1    1
drop table t_enum;
drop table if exists enum01;
create table enum01(col1 enum(132142,'*&*',6278131));
SQL parser error: You have an error in your SQL syntax; check the manual that corresponds to your MatrixOne server version for the right syntax to use. syntax error at line 1 column 36 near "132142,'*&*',6278131));";
drop table enum02;
no such table enum.enum02
drop table if exists enum02;
create table enum02(col1 enum('123214','*&*(234','database数据库'));
insert into enum02 values('1232145');
internal error: convert to MySQL enum failed: number 52497 overflow enum boundary [1, 3]
insert into enum02 values('*&*(2344');
internal error: convert to MySQL enum failed: item *&*(2344 is not in enum [123214 *&*(234 database数据库]
drop table enum02;
drop table if exists enum01;
create table enum01 (col1 enum('red','blue','green'));
insert into enum01 values ('red'),('blue'),('green');
desc enum01;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('red','blue','green')    YES        null        
select * from enum01;
col1
red
blue
green
update enum01 set col1 ='blue' where col1 = 'green';
delete from enum01 where col1 = 'blue';
show create table enum01;
Table    Create Table
enum01    CREATE TABLE `enum01` (\n`col1` ENUM('red','blue','green') DEFAULT NULL\n)
select table_name, COLUMN_NAME, data_type, is_nullable from information_schema.columns where table_name like 'enum01' and COLUMN_NAME not like '__mo%';
table_name    column_name    data_type    is_nullable
enum01    col1    ENUM    YES
select * from enum01;
col1
red
drop table if exists enum02;
create table enum02 (col1 enum('red','blue','green'));
insert into enum02 values ('red'),('blue'),('green');
insert into enum02 values (null);
insert into enum02 values ('');
internal error: convert to MySQL enum failed: item  is not in enum [red blue green]
select * from enum02;
col1
red
blue
green
null
show columns from enum03;
no such table enum.enum03
select table_name,COLUMN_NAME, data_type,is_nullable from information_schema.columns where table_name like 'enum02' and COLUMN_NAME not like '__mo%';
table_name    column_name    data_type    is_nullable
enum02    col1    ENUM    YES
drop table enum02;
drop table if exists enum03;
create table enum03 (col1 enum('ejwuijfew', 'ewrwrewretr', 'werwre') not null);
insert into enum03 values ('ejwuijfew');
insert into enum03 values (null);
constraint violation: Column 'col1' cannot be null
select * from enum03;
col1
ejwuijfew
show create table enum03;
Table    Create Table
enum03    CREATE TABLE `enum03` (\n`col1` ENUM('ejwuijfew','ewrwrewretr','werwre') NOT NULL\n)
show columns from enum03;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('ejwuijfew','ewrwrewretr','werwre')    NO        null        
select table_name, COLUMN_NAME, data_type, is_nullable from information_schema.columns where table_name like 'enum02' and COLUMN_NAME not like '__mo%';
table_name    column_name    data_type    is_nullable
drop table enum03;
drop table if exists enum02;
drop table if exists enum03;
create table enum02(col1 enum('数据库','数据库管理','数据库管理软件'));
insert into enum02 values('数据库');
insert into enum02 values('数据库管理');
insert into enum02 values('数据库管理软件');
insert into enum02 values(null);
select * from enum02;
col1
数据库
数据库管理
数据库管理软件
null
create table enum03(col1 enum('数据库','数据库管理','数据库管理软件'));
insert into enum03 select * from enum02;
select * from enum03;
col1
数据库
数据库管理
数据库管理软件
null
drop table enum02;
drop table enum03;
drop table if exists enum04;
create table enum04 (col1 enum ('2133212312hsay899323--__', 'euijn2fde324', 'e32rew'));
insert into enum04 values ('2133212312hsay899323--__');
insert into enum04 values ('euijn2fde324');
insert into enum04 (col1) values ('welll');
internal error: convert to MySQL enum failed: item welll is not in enum [2133212312hsay899323--__ euijn2fde324 e32rew]
select * from enum04;
col1
2133212312hsay899323--__
euijn2fde324
drop table enum04;
drop table if exists enum05;
create table enum05 (a int,b enum('4','3','2','1'));
insert into enum05 values(1,1);
select * from enum05;
a    b
1    1
insert into enum05 values(2,'1');
select * from enum05;
a    b
1    1
2    4
drop table enum05;
drop table if exists pri01;
create table pri01 (col1 enum('qy4iujd3wi4fu4h3f', '323242r34df432432', '32e3ewfdewrew'));
show create table pri01;
Table    Create Table
pri01    CREATE TABLE `pri01` (\n`col1` ENUM('qy4iujd3wi4fu4h3f','323242r34df432432','32e3ewfdewrew') DEFAULT NULL\n)
insert into pri01 values ('qy4iujd3wi4fu4h3f');
insert into pri01 values ('qy4iujd3wi4fu4h3f');
insert into pri01 (col1) values ('323242r34df432432');
insert into pri01 (col1) values (null);
select * from pri01;
col1
qy4iujd3wi4fu4h3f
qy4iujd3wi4fu4h3f
323242r34df432432
null
show create table pri01;
Table    Create Table
pri01    CREATE TABLE `pri01` (\n`col1` ENUM('qy4iujd3wi4fu4h3f','323242r34df432432','32e3ewfdewrew') DEFAULT NULL\n)
show columns from pri01;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('qy4iujd3wi4fu4h3f','323242r34df432432','32e3ewfdewrew')    YES        null        
drop table pri01;
drop table if exists pri02;
create table pri02 (col1 int, col2 enum('数据库', '数据库系统', '数据库管理系统'));
insert into pri02 values (1, '数据库');
insert into pri02 values (2, '数据库');
select * from pri02;
col1    col2
1    数据库
2    数据库
alter table pri02 add primary key (col2);
not supported: ENUM column 'col2' cannot be in primary key
show create table pri02;
Table    Create Table
pri02    CREATE TABLE `pri02` (\n`col1` INT DEFAULT NULL,\n`col2` ENUM('数据库','数据库系统','数据库管理系统') DEFAULT NULL\n)
show columns from pri02;
Field    Type    Null    Key    Default    Extra    Comment
col1    INT(32)    YES        null        
col2    ENUM('数据库','数据库系统','数据库管理系统')    YES        null        
select table_name, COLUMN_NAME, data_type, is_nullable from information_schema.columns where table_name like 'pri02' and COLUMN_NAME not like '__mo%';
table_name    column_name    data_type    is_nullable
pri02    col1    INT    YES
pri02    col2    ENUM    YES
drop table pri02;
drop table if exists pri03;
create table pri03 (col1 int, col2 enum('数据库', '数据库系统', '数据库管理系统'));
insert into pri03 values (1, '数据库');
insert into pri03 values (2, '数据库系统');
select * from pri03;
col1    col2
1    数据库
2    数据库系统
alter table pri03 add primary key (col2);
not supported: ENUM column 'col2' cannot be in primary key
show create table pri03;
Table    Create Table
pri03    CREATE TABLE `pri03` (\n`col1` INT DEFAULT NULL,\n`col2` ENUM('数据库','数据库系统','数据库管理系统') DEFAULT NULL\n)
show columns from pri03;
Field    Type    Null    Key    Default    Extra    Comment
col1    INT(32)    YES        null        
col2    ENUM('数据库','数据库系统','数据库管理系统')    YES        null        
select table_name, COLUMN_NAME, data_type, is_nullable from information_schema.columns where table_name like 'pri03' and COLUMN_NAME not like '__mo%';
table_name    column_name    data_type    is_nullable
pri03    col1    INT    YES
pri03    col2    ENUM    YES
drop table pri03;
drop table if exists pri04;
create table pri04 (col1 int, col2 enum('database', 'database management', 'database management system'));
insert into pri04 (col1, col2) values (1, 'database');
insert into pri04 values (2, 'database management system');
show create table pri04;
Table    Create Table
pri04    CREATE TABLE `pri04` (\n`col1` INT DEFAULT NULL,\n`col2` ENUM('database','database management','database management system') DEFAULT NULL\n)
show create table pri04;
Table    Create Table
pri04    CREATE TABLE `pri04` (\n`col1` INT DEFAULT NULL,\n`col2` ENUM('database','database management','database management system') DEFAULT NULL\n)
show columns from pri04;
Field    Type    Null    Key    Default    Extra    Comment
col1    INT(32)    YES        null        
col2    ENUM('database','database management','database management system')    YES        null        
select * from pri04 where col2 = 'database';
col1    col2
1    database
select table_name, COLUMN_NAME, data_type, is_nullable from information_schema.columns where table_name like 'pri04' and COLUMN_NAME not like '__mo%';
table_name    column_name    data_type    is_nullable
pri04    col1    INT    YES
pri04    col2    ENUM    YES
drop table pri04;
drop table if exists inert01;
create table insert01 (id int primary key,
order_number VARCHAR(20),
status enum('Pending', 'Processing', 'Completed', 'Cancelled')
);
insert into insert01 values(1,'111',1),(2,'222',2),(3,'333',3),(4,'444','Cancelled');
select * from insert01;
id    order_number    status
1    111    Pending
2    222    Processing
3    333    Completed
4    444    Cancelled
show create table insert01;
Table    Create Table
insert01    CREATE TABLE `insert01` (\n`id` INT NOT NULL,\n`order_number` VARCHAR(20) DEFAULT NULL,\n`status` ENUM('Pending','Processing','Completed','Cancelled') DEFAULT NULL,\nPRIMARY KEY (`id`)\n)
show columns from insert01;
Field    Type    Null    Key    Default    Extra    Comment
id    INT(32)    NO    PRI    null        
order_number    VARCHAR(20)    YES        null        
status    ENUM('Pending','Processing','Completed','Cancelled')    YES        null        
delete from insert01 where status=3;
invalid argument cast to int, bad value Pending
update insert01 set status='Pending' where status=2;
invalid argument cast to int, bad value Pending
select * from insert01;
id    order_number    status
1    111    Pending
2    222    Processing
3    333    Completed
4    444    Cancelled
select * from insert01 where status=4;
invalid argument cast to int, bad value Pending
select * from insert01 where status in ('Pending',4);
invalid argument cast to int, bad value Pending
drop table insert01;
drop table if exists default01;
create table default01 (`col1` enum('T', 'E') not null default 'T');
desc default01;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('T','E')    NO        'T'        
insert into default01 values(default);
select * from default01;
col1
T
drop table default01;
drop table if exists default02;
create table default02 (`col1` enum('T', 'E') not null default '1');
desc default02;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('T','E')    NO        '1'        
insert into default02 values(default);
select * from default02;
col1
T
drop table default02;
drop table if exists default03;
create table default03 (`col1` enum('T', 'E') not null default 1);
desc default03;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('T','E')    NO        1        
insert into default03 values(default);
select * from default03;
col1
T
drop table default03;
drop table if exists default04;
create table default04 (`col1` enum('T', 'E') not null default 2);
desc default04;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('T','E')    NO        2        
insert into default04 values(default);
select * from default04;
col1
E
drop table default04;
drop table if exists default05;
create table default05 (`col1` enum('T', 'E') not null default '2');
desc default05;
Field    Type    Null    Key    Default    Extra    Comment
col1    ENUM('T','E')    NO        '2'        
insert into default05 values(default);
select * from default05;
col1
E
drop table default05;
drop table if exists enum04;
create table enum04(col1 int,col2 enum('38921384','abc','','MOMOMO','矩阵起源'));
insert into enum04 values(1,'38921384');
insert into enum04 values(2,'');
insert into enum04 values(3,'矩阵起源');
select * from enum04;
col1    col2
1    38921384
2    
3    矩阵起源
select * from enum04 where col2 = '';
col1    col2
2    
select * from enum04 where col2 != '';
col1    col2
1    38921384
3    矩阵起源
select * from enum04 where col2 > '38921384';
col1    col2
3    矩阵起源
select * from enum04 where col2 >= '38921384';
col1    col2
1    38921384
3    矩阵起源
select * from enum04 where col2 < '矩阵起源';
col1    col2
1    38921384
2    
select * from enum04 where col2 <= '矩阵起源';
col1    col2
1    38921384
2    
3    矩阵起源
select * from enum04 where col2 between '38921384' and '矩阵起源';
col1    col2
1    38921384
3    矩阵起源
select * from enum04 where col2 not between '38921384' and '矩阵起源';
col1    col2
2    
select * from enum04 where col2 in('38921384','');
col1    col2
1    38921384
2    
select * from enum04 where col2 not in('38921384','');
col1    col2
3    矩阵起源
select * from enum04 where col2 like '%921384';
col1    col2
1    38921384
select coalesce(null,null,col2) from enum04;
coalesce(null, null, col2)
38921384

矩阵起源
drop table enum04;
drop table if exists builtin01;
create table builtin01(col1 enum('  云原生数据库  ','存储引擎 TAE', 'database system') not null,col2 enum(' database','engine ','index meta data'));
insert into builtin01 values('  云原生数据库  ',' database');
insert into builtin01 values('存储引擎 TAE','engine ');
insert into builtin01 values('database system','engine ');
select * from builtin01;
col1    col2
  云原生数据库       database
存储引擎 TAE    engine 
database system    engine 
select concat_ws(',,,',col1,col2) from builtin01;
concat_ws(,,,, col1, col2)
  云原生数据库  ,,, database
存储引擎 TAE,,,engine 
database system,,,engine 
select find_in_set('  云原生数据库  ',col1) from builtin01;
find_in_set(  云原生数据库  , col1)
1
0
0
select length(col1) as length_col1, length(col2) as length_col2 from builtin01;
length_col1    length_col2
22    9
16    7
15    7
select char_length(col1),char_length(col2) from builtin01;
char_length(col1)    char_length(col2)
10    9
8    7
15    7
select ltrim(col1) from builtin01;
ltrim(col1)
云原生数据库  
存储引擎 TAE
database system
select rtrim(col2) from builtin01;
rtrim(col2)
 database
engine
engine
select lpad(col1,20,'-') from builtin01;
lpad(col1, 20, -)
----------  云原生数据库  
------------存储引擎 TAE
-----database system
select rpad(col2,10,'****') from builtin01;
rpad(col2, 10, ****)
 database*
engine ***
engine ***
select startswith(col2,'eng') from builtin01;
startswith(col2, eng)
false
true
true
select endswith(col1,'数据表') from builtin01;
endswith(col1, 数据表)
false
false
false
select reverse(col1),reverse(col2) from builtin01;
reverse(col1)    reverse(col2)
  库据数生原云      esabatad 
EAT 擎引储存     enigne
metsys esabatad     enigne
select substring(col1,4,6),substring(col2,1,6) from builtin01;
substring(col1, 4, 6)    substring(col2, 1, 6)
原生数据库      datab
擎 TAE    engine
abase     engine
select * from builtin01 where col1 = space(5);
col1    col2
select bit_length(col2) from builtin01;
bit_length(col2)
72
56
56
select empty(col2) from builtin01;
empty(col2)
false
false
false
select count(col1) as count_col1 from builtin01;
count_col1
3
select max(col1), max(col2) from builtin01;
max(col1)    max(col2)
存储引擎 TAE    engine 
select min(col1), min(col2) from builtin01;
min(col1)    min(col2)
  云原生数据库       database
select group_concat(col1,col2) from builtin01;
group_concat(col1, col2, ,)
  云原生数据库   database,存储引擎 TAEengine ,database systemengine 
drop table builtin01;
drop table if exists agg01;
create table agg01 (col1 int, col2 enum('egwjqebwq', 'qwewqewqeqewq', 'weueiwqeowqehwgqjhenw'));
insert into agg01 values (1, 'egwjqebwq');
insert into agg01 values (2, 'weueiwqeowqehwgqjhenw');
insert into agg01 values (3, 'qwewqewqeqewq');
insert into agg01 values (4, null);
select max(col2) from agg01;
max(col2)
weueiwqeowqehwgqjhenw
select min(col2) from agg01;
min(col2)
egwjqebwq
select * from agg01;
col1    col2
1    egwjqebwq
2    weueiwqeowqehwgqjhenw
3    qwewqewqeqewq
4    null
drop table agg01;
drop table if exists cte01;
create table cte01(col1 int, col2 enum('hfjsa','123214321','&**())_'));
insert into cte01 VALUES(1, 'hfjsa');
insert into cte01 VALUES(2, '123214321');
insert into cte01 VALUES(3, '&**())_');
select * from cte01;
col1    col2
1    hfjsa
2    123214321
3    &**())_
with cte_1 as(select * from cte01 where col2 = 'hfjsa') select col2 from cte_1 where col2 = 'hfjsa';
col2
hfjsa
with cte_2 as(select col1,col2 from cte01 where col1 = 3) select col2 from cte_2 where col2 = '&**())_';
col2
&**())_
drop table cte01;
drop table if exists agg01;
create table agg01 (col1 int, col2 enum('egwjqebwq', 'qwewqewqeqewq', 'weueiwqeowqehwgqjhenw') primary key);
not supported: ENUM column 'col2' cannot be in primary key
drop table if exists agg01;

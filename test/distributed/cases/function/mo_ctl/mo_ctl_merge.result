drop table if exists t1;

create table t1(
a int primary key,
b varchar(10)
);

select mo_ctl('dn', 'inspect', 'policy -r 0 -m 0');
mo_ctl(dn, inspect, policy -r 0 -m 0)
\nmsg: success. arg (*) maxMergeObjN: 0, minRowsQualified: 0, cnSize: 80000MB, hints: [Auto]\n\n<empty>
insert into t1 values (100, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
insert into t1 values (110, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select mo_ctl('dn', 'mergeobjects', 'mo_ctl_merge.t1:all:small');
mo_ctl(dn, mergeobjects, mo_ctl_merge.t1:all:small)
\nmsg: merged success\n018f2834-dcb3-7e7d-8ae5-215ad781e835_00000, rows 2, blks 1, osize 1.54KB, csize 687B\n\n\n
select rows_cnt from metadata_scan('mo_ctl_merge.t1', 'a') g;
rows_cnt
2
insert into t1 values (105, 'a');
insert into t1 values (115, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
insert into t1 values (120, 'a');
insert into t1 values (125, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select mo_ctl('dn', 'mergeobjects', 'mo_ctl_merge.t1:all:overlap');
mo_ctl(dn, mergeobjects, mo_ctl_merge.t1:all:overlap)
\nmsg: merged success\n018f283b-2dcd-78db-9399-df2bd74d53e5_00000, rows 4, blks 1, osize 1.60KB, csize 704B\n\n\n
select rows_cnt, bit_cast(`min` as int), bit_cast(`max` as int) from metadata_scan('mo_ctl_merge.t1', 'a') g;
rows_cnt    bit_cast(min as int)    bit_cast(max as int)
4    100    115
2    120    125
drop table t1;
create table t1(
a int,
b varchar(10)
);
insert into t1 values (100, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
insert into t1 values (110, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select mo_ctl('dn', 'mergeobjects', 'mo_ctl_merge.t1:all:small');
mo_ctl(dn, mergeobjects, mo_ctl_merge.t1:all:small)
\nmsg: merged success\n018f2834-dcb3-7e7d-8ae5-215ad781e835_00000, rows 2, blks 1, osize 1.54KB, csize 687B\n\n\n
select rows_cnt from metadata_scan('mo_ctl_merge.t1', 'a') g;
rows_cnt
2
insert into t1 values (105, 'a');
insert into t1 values (115, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
insert into t1 values (120, 'a');
insert into t1 values (125, 'a');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select mo_ctl('dn', 'mergeobjects', 'mo_ctl_merge.t1:all:overlap');
mo_ctl(dn, mergeobjects, mo_ctl_merge.t1:all:overlap)
\nmsg: merged success\n018f283b-2dcd-78db-9399-df2bd74d53e5_00000, rows 4, blks 1, osize 1.60KB, csize 704B\n\n\n
select rows_cnt, bit_cast(`min` as int), bit_cast(`max` as int) from metadata_scan('mo_ctl_merge.t1', 'a') g;
rows_cnt    bit_cast(min as int)    bit_cast(max as int)
6    100    125
drop table t1;
create table t1(
a varchar(100) primary key,
b varchar(10)
);
insert into t1 values ('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxya', 'b');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
insert into t1 values ('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz', 'b');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select mo_ctl('dn', 'mergeobjects', 'mo_ctl_merge.t1:all:small');
mo_ctl(dn, mergeobjects, mo_ctl_merge.t1:all:small)
\nmsg: merged success\n018f2834-dcb3-7e7d-8ae5-215ad781e835_00000, rows 2, blks 1, osize 1.54KB, csize 687B\n\n\n
select rows_cnt from metadata_scan('mo_ctl_merge.t1', 'a') g;
rows_cnt
2
insert into t1 values ('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyb', 'b');
insert into t1 values ('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyc', 'b');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
insert into t1 values ('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxaa', 'b');
insert into t1 values ('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxab', 'b');
select mo_ctl('dn', 'flush', 'mo_ctl_merge.t1');
mo_ctl(dn, flush, mo_ctl_merge.t1)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select mo_ctl('dn', 'mergeobjects', 'mo_ctl_merge.t1:all:overlap');
mo_ctl(dn, mergeobjects, mo_ctl_merge.t1:all:overlap)
\nmsg: merged success\n018f283b-2dcd-78db-9399-df2bd74d53e5_00000, rows 4, blks 1, osize 1.60KB, csize 704B\n\n\n
select rows_cnt, min, max from metadata_scan('mo_ctl_merge.t1', 'a') g;
rows_cnt    min    max
6    abcdefghijklmnopqrstuvwxyzabcd    abcdefghijklmnopqrstuvwxyzabce
drop table t1;
select mo_ctl('dn', 'inspect', 'policy');
mo_ctl(dn, inspect, policy)
\nmsg: success. arg (*) maxMergeObjN: 4, minRowsQualified: 40960, cnSize: 80000MB, hints: [Auto]\n\n<empty>
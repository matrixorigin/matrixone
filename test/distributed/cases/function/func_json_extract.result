select json_extract('{"a":1,"b":2,"c":3}','$.a');
json_extract({"a":1,"b":2,"c":3}, $.a)
1
select json_extract('{"a":1,"b":2,"c":3}','$.b');
json_extract({"a":1,"b":2,"c":3}, $.b)
2
select json_extract('{"a":{"q":[1,2,3]}}','$.a.q[1]');
json_extract({"a":{"q":[1,2,3]}}, $.a.q[1])
2
select json_extract('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]','$[1].a');
json_extract([{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}], $[1].a)
4
select json_extract('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q[1]');
json_extract({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q[1])
{"a": 2}
select json_extract('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q');
json_extract({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q)
[{"a": 1}, {"a": 2}, {"a": 3}]
select json_extract('[1,2,3]','$[*]');
json_extract([1,2,3], $[*])
null
select json_extract('{"a":[1,2,3,{"b":4}]}','$.a[3].b');
json_extract({"a":[1,2,3,{"b":4}]}, $.a[3].b)
4
select json_extract('{"a":[1,2,3,{"b":4}]}','$.a[3].c');
json_extract({"a":[1,2,3,{"b":4}]}, $.a[3].c)
null
select json_extract('{"a":[1,2,3,{"b":4}],"c":5}','$.*');
internal error: panic bytejson simple path should not contain *: 
github.com/matrixorigin/matrixone/pkg/container/bytejson.ByteJson.querySimple
	/Users/fengttt/m/matrixone/pkg/container/bytejson/bytejson.go:408
github.com/matrixorigin/matrixone/pkg/container/bytejson.ByteJson.QuerySimple
	/Users/fengttt/m/matrixone/pkg/container/bytejson/bytejson.go:443
github.com/matrixorigin/matrixone/pkg/sql/plan/function.computeStringSimple
	/Users/fengttt/m/matrixone/pkg/sql/plan/function/func_builtin_json.go:87
github.com/matrixorigin/matrixone/pkg/sql/plan/function.(*opBuiltInJsonExtract).jsonExtract
	/Users/fengttt/m/matrixone/pkg/sql/plan/function/func_builtin_json.go:239
github.com/matrixorigin/matrixone/pkg/sql/colexec.NewExpressionExecutor
	/Users/fengttt/m/matrixone/pkg/sql/colexec/evalExpression.go:199
github.com/matrixorigin/matrixone/pkg/sql/colexec.EvalExpressionOnce
	/Users/fengttt/m/matrixone/pkg/sql/colexec/evalExpression.go:234
github.com/matrixorigin/matrixone/pkg/sql/plan/rule.(*ConstantFold).constantFold
	/Users/fengttt/m/matrixone/pkg/sql/plan/rule/constant_fold.go:183
github.com/matrixorigin/matrixone/pkg/sql/plan/rule.(*ConstantFold).Apply
	/Users/fengttt/m/matrixone/pkg/sql/plan/rule/constant_fold.go:77
github.com/matrixorigin/matrixone/pkg/sql/plan.(*BaseOptimizer).exploreNode
	/Users/fengttt/m/matrixone/pkg/sql/plan/optimize.go:87
github.com/matrixorigin/matrixone/pkg/sql/plan.(*BaseOptimizer).optimize
	/Users/fengttt/m/matrixone/pkg/sql/plan/optimize.go:73
github.com/matrixorigin/matrixone/pkg/sql/plan.(*BaseOptimizer).Optimize
	/Users/fengttt/m/matrixone/pkg/sql/plan/optimize.go:65
github.com/matrixorigin/matrixone/pkg/frontend.buildPlan
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:1881
github.com/matrixorigin/matrixone/pkg/frontend.(*TxnComputationWrapper).Compile
	/Users/fengttt/m/matrixone/pkg/frontend/computation_wrapper.go:205
github.com/matrixorigin/matrixone/pkg/frontend.executeStmt
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2600
github.com/matrixorigin/matrixone/pkg/frontend.dispatchStmt
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2500
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithIncrStmt
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2469
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithWorkspace
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2426
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithTxn
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2317
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithResponse
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2281
github.com/matrixorigin/matrixone/pkg/frontend.doComQuery
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2877
github.com/matrixorigin/matrixone/pkg/frontend.ExecRequest
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2952
github.com/matrixorigin/matrixone/pkg/frontend.(*Routine).handleRequest
	/Users/fengttt/m/matrixone/pkg/frontend/routine.go:291
github.com/matrixorigin/matrixone/pkg/frontend.(*RoutineManager).Handler
	/Users/fengttt/m/matrixone/pkg/frontend/routine_manager.go:379
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleRequest
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:461
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleMessage
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:434
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleLoop
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:197
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleConn
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:188
runtime.goexit
	/usr/local/go/src/runtime/asm_arm64.s:1222
select json_extract('{"a":[1,2,3,{"a":4}]}','$**.a');
json_extract({"a":[1,2,3,{"a":4}]}, $**.a)
null
select json_extract('{"a":[1,2,3,{"a":4}]}','$.a[*].a');
json_extract({"a":[1,2,3,{"a":4}]}, $.a[*].a)
null
select json_extract('{"a":1}','$[0]');
json_extract({"a":1}, $[0])
{"a": 1}
select json_extract('{"a":1}','$[0].a');
json_extract({"a":1}, $[0].a)
1
select json_extract('{"a":1}','$[0].b');
json_extract({"a":1}, $[0].b)
null
select json_extract('{"a":1}','$[1]');
json_extract({"a":1}, $[1])
null
select json_extract('{"af": [1, "2", {"aaf": "bb"}],"eab":"888"}','$**.f');
json_extract({"af": [1, "2", {"aaf": "bb"}],"eab":"888"}, $**.f)
null
select json_extract('{"a": [1, "2", {"a": "bb"}]}','$**.a');
json_extract({"a": [1, "2", {"a": "bb"}]}, $**.a)
null
select  json_extract('{"a":"a1","b":"b1"}','$.**');
invalid input: invalid json path '$.**'
select  json_extract('{"a":"a1","b":"b1"}','$**.1');
invalid input: invalid json path '$**.1'
drop table if exists t1;
create table t1 (a json,b int);
insert into t1(a,b) values ('{"a":1,"b":2,"c":3}',1);
select json_extract(t1.a,'$.a') from t1 where t1.b=1;
json_extract(t1.a, $.a)
1
insert into t1(a,b) values ('{"a":4,"b":5,"c":6}',2);
select json_extract(t1.a,'$.b') from t1 where t1.b=2;
json_extract(t1.a, $.b)
5
select json_extract(t1.a,'$.a') from t1;
json_extract(t1.a, $.a)
1
4
insert into t1(a,b) values ('{"a":{"q":[1,2,3]}}',3);
select json_extract(t1.a,'$.a.q[1]') from t1 where t1.b=3;
json_extract(t1.a, $.a.q[1])
2
insert into t1(a,b) values ('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]',4);
select json_extract(t1.a,'$[1].a') from t1 where t1.b=4;
json_extract(t1.a, $[1].a)
4
insert into t1(a,b) values ('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}',5);
select json_extract(t1.a,'$.a.q[1]') from t1 where t1.b=5;
json_extract(t1.a, $.a.q[1])
{"a": 2}
select json_extract(t1.a,'$.a.q') from t1 where t1.b=5;
json_extract(t1.a, $.a.q)
[{"a": 1}, {"a": 2}, {"a": 3}]
insert into t1(a,b) values ('[1,2,3]',6);
select json_extract(t1.a,'$[*]') from t1 where t1.b=6;
json_extract(t1.a, $[*])
null
insert into t1(a,b) values ('{"a":[1,2,3,{"b":4}]}',7);
select json_extract(t1.a,'$.a[3].b') from t1 where t1.b=7;
json_extract(t1.a, $.a[3].b)
4
select json_extract(t1.a,'$.a[3].c') from t1 where t1.b=7;
json_extract(t1.a, $.a[3].c)
null
insert into t1(a,b) values ('{"a":[1,2,3,{"b":4}],"c":5}',8);
select json_extract(t1.a,'$.*') from t1 where t1.b=8;
internal error: panic bytejson simple path should not contain *: 
github.com/matrixorigin/matrixone/pkg/container/bytejson.ByteJson.querySimple
	/Users/fengttt/m/matrixone/pkg/container/bytejson/bytejson.go:408
github.com/matrixorigin/matrixone/pkg/container/bytejson.ByteJson.QuerySimple
	/Users/fengttt/m/matrixone/pkg/container/bytejson/bytejson.go:443
github.com/matrixorigin/matrixone/pkg/sql/plan/function.computeJsonSimple
	/Users/fengttt/m/matrixone/pkg/sql/plan/function/func_builtin_json.go:79
github.com/matrixorigin/matrixone/pkg/sql/plan/function.(*opBuiltInJsonExtract).jsonExtract
	/Users/fengttt/m/matrixone/pkg/sql/plan/function/func_builtin_json.go:239
github.com/matrixorigin/matrixone/pkg/sql/colexec.(*FunctionExpressionExecutor).Eval
	/Users/fengttt/m/matrixone/pkg/sql/colexec/evalExpression.go:607
github.com/matrixorigin/matrixone/pkg/sql/colexec.(*Projection).EvalProjection
	/Users/fengttt/m/matrixone/pkg/sql/colexec/evalProjection.go:65
github.com/matrixorigin/matrixone/pkg/sql/colexec/projection.(*Projection).Call
	/Users/fengttt/m/matrixone/pkg/sql/colexec/projection/projection.go:69
github.com/matrixorigin/matrixone/pkg/vm.ChildrenCall
	/Users/fengttt/m/matrixone/pkg/vm/types.go:259
github.com/matrixorigin/matrixone/pkg/sql/colexec/output.(*Output).Call
	/Users/fengttt/m/matrixone/pkg/sql/colexec/output/output.go:48
github.com/matrixorigin/matrixone/pkg/vm/pipeline.(*Pipeline).run
	/Users/fengttt/m/matrixone/pkg/vm/pipeline/pipeline.go:107
github.com/matrixorigin/matrixone/pkg/vm/pipeline.(*Pipeline).Run
	/Users/fengttt/m/matrixone/pkg/vm/pipeline/pipeline.go:64
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Scope).Run
	/Users/fengttt/m/matrixone/pkg/sql/compile/scope.go:205
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Scope).ParallelRun
	/Users/fengttt/m/matrixone/pkg/sql/compile/scope.go:425
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Scope).RemoteRun
	/Users/fengttt/m/matrixone/pkg/sql/compile/scope.go:351
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Compile).run
	/Users/fengttt/m/matrixone/pkg/sql/compile/compile.go:357
github.com/matrixorigin/matrixone/pkg/sql/compile.(*Compile).runOnce.func2
	/Users/fengttt/m/matrixone/pkg/sql/compile/compile.go:499
github.com/panjf2000/ants/v2.(*goWorker).run.func1
	/Users/fengttt/go/pkg/mod/github.com/panjf2000/ants/v2@v2.7.4/worker.go:67
runtime.goexit
	/usr/local/go/src/runtime/asm_arm64.s:1222
insert into t1(a,b) values ('{"a":[1,2,3,{"a":4}]}',9);
select json_extract(t1.a,'$**.a') from t1 where t1.b=9;
json_extract(t1.a, $**.a)
null
select json_extract(t1.a,'$.a[*].a') from t1 where t1.b=9;
json_extract(t1.a, $.a[*].a)
null
drop table t1;
create table t1 (a json);
insert into t1(a) values ('{"a":1}'),('[1,2]'),('{"xa":1}');
drop table if exists t2;
create table t2 (a varchar(100));
insert into t2 values ('$[0]'),('$.a');
select json_extract(t1.a,t2.a) qqq,t1.a,t2.a from t2, t1;
qqq    a    a
{"a": 1}    {"a": 1}    $[0]
1    {"a": 1}    $.a
1    [1, 2]    $[0]
null    [1, 2]    $.a
{"xa": 1}    {"xa": 1}    $[0]
null    {"xa": 1}    $.a
drop table if exists json_table_1;
create table json_table_1 (j1 json);
insert into json_table_1 values('{"key10": "value1", "key2": "value2"}'),('{"key1": "@#$_%^&*()!@", "123456": "中文mo"}'),('{"芝士面包": "12abc", "123456": "中文mo"}'),('{"": "", "123456": "中文mo"}'),('{"a 1": "b 1", "123456": "中文mo"}'),('{"d1": "2020-10-09", "d2": "2019-08-20 12:30:00"}'),('{"d1": [true,false]}'),('{}');
select json_extract('{"a":"a1","b":"b1"}','$.*') from json_table_1;
internal error: panic bytejson simple path should not contain *: 
github.com/matrixorigin/matrixone/pkg/container/bytejson.ByteJson.querySimple
	/Users/fengttt/m/matrixone/pkg/container/bytejson/bytejson.go:408
github.com/matrixorigin/matrixone/pkg/container/bytejson.ByteJson.QuerySimple
	/Users/fengttt/m/matrixone/pkg/container/bytejson/bytejson.go:443
github.com/matrixorigin/matrixone/pkg/sql/plan/function.computeStringSimple
	/Users/fengttt/m/matrixone/pkg/sql/plan/function/func_builtin_json.go:87
github.com/matrixorigin/matrixone/pkg/sql/plan/function.(*opBuiltInJsonExtract).jsonExtract
	/Users/fengttt/m/matrixone/pkg/sql/plan/function/func_builtin_json.go:239
github.com/matrixorigin/matrixone/pkg/sql/colexec.NewExpressionExecutor
	/Users/fengttt/m/matrixone/pkg/sql/colexec/evalExpression.go:199
github.com/matrixorigin/matrixone/pkg/sql/colexec.EvalExpressionOnce
	/Users/fengttt/m/matrixone/pkg/sql/colexec/evalExpression.go:234
github.com/matrixorigin/matrixone/pkg/sql/plan/rule.(*ConstantFold).constantFold
	/Users/fengttt/m/matrixone/pkg/sql/plan/rule/constant_fold.go:183
github.com/matrixorigin/matrixone/pkg/sql/plan/rule.(*ConstantFold).Apply
	/Users/fengttt/m/matrixone/pkg/sql/plan/rule/constant_fold.go:77
github.com/matrixorigin/matrixone/pkg/sql/plan.(*BaseOptimizer).exploreNode
	/Users/fengttt/m/matrixone/pkg/sql/plan/optimize.go:87
github.com/matrixorigin/matrixone/pkg/sql/plan.(*BaseOptimizer).optimize
	/Users/fengttt/m/matrixone/pkg/sql/plan/optimize.go:73
github.com/matrixorigin/matrixone/pkg/sql/plan.(*BaseOptimizer).Optimize
	/Users/fengttt/m/matrixone/pkg/sql/plan/optimize.go:65
github.com/matrixorigin/matrixone/pkg/frontend.buildPlan
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:1881
github.com/matrixorigin/matrixone/pkg/frontend.(*TxnComputationWrapper).Compile
	/Users/fengttt/m/matrixone/pkg/frontend/computation_wrapper.go:205
github.com/matrixorigin/matrixone/pkg/frontend.executeStmt
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2600
github.com/matrixorigin/matrixone/pkg/frontend.dispatchStmt
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2500
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithIncrStmt
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2469
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithWorkspace
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2426
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithTxn
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2317
github.com/matrixorigin/matrixone/pkg/frontend.executeStmtWithResponse
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2281
github.com/matrixorigin/matrixone/pkg/frontend.doComQuery
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2877
github.com/matrixorigin/matrixone/pkg/frontend.ExecRequest
	/Users/fengttt/m/matrixone/pkg/frontend/mysql_cmd_executor.go:2952
github.com/matrixorigin/matrixone/pkg/frontend.(*Routine).handleRequest
	/Users/fengttt/m/matrixone/pkg/frontend/routine.go:291
github.com/matrixorigin/matrixone/pkg/frontend.(*RoutineManager).Handler
	/Users/fengttt/m/matrixone/pkg/frontend/routine_manager.go:379
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleRequest
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:461
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleMessage
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:434
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleLoop
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:197
github.com/matrixorigin/matrixone/pkg/frontend.(*MOServer).handleConn
	/Users/fengttt/m/matrixone/pkg/frontend/server.go:188
runtime.goexit
	/usr/local/go/src/runtime/asm_arm64.s:1222
create view v1 as select json_extract('{"a":1}','$.a');
desc v1;
Field    Type    Null    Key    Default    Extra    Comment
json_extract({"a":1}, $.a)    JSON(0)    NO        null        
select json_extract('{"a":1}',null);
json_extract({"a":1}, null)
null
select json_extract(null,'$');
json_extract(null, $)
null
select json_extract(null,null);
json_extract(null, null)
null
select json_extract('{"a":1}',null) from json_table_1;
json_extract({"a":1}, null)
null
null
null
null
null
null
null
null
select json_extract(null,'$') from json_table_1;
json_extract(null, $)
null
null
null
null
null
null
null
null
select json_extract('[1,2,3]','$[last]');
json_extract([1,2,3], $[last])
3
select json_extract('[1,2,3]','$[last-1]');
json_extract([1,2,3], $[last-1])
2
select json_extract('[1,2,3]','$[last-2]');
json_extract([1,2,3], $[last-2])
1
select json_extract('[1,2,3]','$[last-3]');
json_extract([1,2,3], $[last-3])
null
select json_extract('[1,2,3]','$[0 to 2]');
json_extract([1,2,3], $[0 to 2])
null
select json_extract('[1,2,3]','$[0 to last]');
json_extract([1,2,3], $[0 to last])
null
select json_extract('[1,2,3]','$[0 to last-1]');
json_extract([1,2,3], $[0 to last-1])
null
select json_extract('[1,2,3]','$[last-2 to last]');
json_extract([1,2,3], $[last-2 to last])
null
select json_extract('[1,2,3]','$[last-1 to last-2]');
invalid input: invalid json path '$[last-1 to last-2]'
select json_extract('[1,2,3]','$[last-8 to last-2]');
json_extract([1,2,3], $[last-8 to last-2])
null
select json_extract('[1,2,3]','$[last-2 to last-8]');
invalid input: invalid json path '$[last-2 to last-8]'
select json_extract('[1,2,3]','$[0 to last-8]');
json_extract([1,2,3], $[0 to last-8])
null
select json_extract('{"a":1,"b":2,"c":3}','$.a','$.b');
json_extract({"a":1,"b":2,"c":3}, $.a, $.b)
[1, 2]
select json_extract('{"a":1,"b":2,"c":3}','$.a','$.b','$.c');
json_extract({"a":1,"b":2,"c":3}, $.a, $.b, $.c)
[1, 2, 3]
select json_extract('{"a":1,"b":2,"c":3}','$.c','$.d');
json_extract({"a":1,"b":2,"c":3}, $.c, $.d)
[3]
select json_extract('[0,1,2]', '$[0]', '$[1]');
json_extract([0,1,2], $[0], $[1])
[0, 1]
select json_extract('[0,1,2]', '$[1]', '$[0]');
json_extract([0,1,2], $[1], $[0])
[1, 0]
select json_extract('[0,1,2]', '$[last-1]', '$[0]', '$[2]');
json_extract([0,1,2], $[last-1], $[0], $[2])
[1, 0, 2]
select json_extract('[0,1,2]','$[4]');
json_extract([0,1,2], $[4])
null
select json_extract('[0,1,2]','$[100]');
json_extract([0,1,2], $[100])
null
select json_extract('[0,234,32432,423,5234,11443242,44242342424,23424323]','$[2000]');
json_extract([0,234,32432,423,5234,11443242,44242342424,23424323], $[2000])
null
select json_extract_string('{"a":1,"b":2,"c":3}','$.a');
invalid input: expecting a path that retrives a single string value
select json_extract_string('{"a":1,"b":2,"c":3}','$.b');
invalid input: expecting a path that retrives a single string value
select json_extract_string('{"a":"x","b":"y","c":"z"}','$.a');
json_extract_string({"a":"x","b":"y","c":"z"}, $.a)
x
select json_extract_string('{"a":"x","b":"y","c":"z"}','$.b');
json_extract_string({"a":"x","b":"y","c":"z"}, $.b)
y
select json_extract_string('{"a":{"q":[1,2,3]}}','$.a.q[1]');
invalid input: expecting a path that retrives a single string value
select json_extract_string('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]','$[1].a');
invalid input: expecting a path that retrives a single string value
select json_extract_string('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q[1]');
invalid input: expecting a path that retrives a single string value
select json_extract_string('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q');
invalid input: expecting a path that retrives a single string value
select json_extract_string('[1,2,3]','$[*]');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_string('{"a":[1,2,3,{"b":4}]}','$.a[3].b');
invalid input: expecting a path that retrives a single string value
select json_extract_string('{"a":[1,2,3,{"b":4}]}','$.a[3].c');
json_extract_string({"a":[1,2,3,{"b":4}]}, $.a[3].c)
null
select json_extract_string('{"a":[1,2,3,{"b":4}],"c":5}','$.*');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_string('{"a":[1,2,3,{"a":4}]}','$**.a');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_string('{"a":[1,2,3,{"a":4}]}','$.a[*].a');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_string('{"a":1}','$[0]');
invalid input: expecting a path that retrives a single string value
select json_extract_string('{"a":1}','$[0].a');
invalid input: expecting a path that retrives a single string value
select json_extract_string('{"a":1}','$[0].b');
json_extract_string({"a":1}, $[0].b)
null
select json_extract_string('{"a":1}','$[1]');
json_extract_string({"a":1}, $[1])
null
select json_extract_string('{"af": [1, "2", {"aaf": "bb"}],"eab":"888"}','$**.f');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_string('{"a": [1, "2", {"a": "bb"}]}','$**.a');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_string('{"a":"a1","b":"b1"}','$.**');
invalid input: invalid json path '$.**'
select json_extract_string('{"a":"a1","b":"b1"}','$**.1');
invalid input: invalid json path '$**.1'
select json_extract_float64('{"a":1,"b":2,"c":3}','$.a');
json_extract_float64({"a":1,"b":2,"c":3}, $.a)
1.0
select json_extract_float64('{"a":1,"b":2,"c":3}','$.b');
json_extract_float64({"a":1,"b":2,"c":3}, $.b)
2.0
select json_extract_float64('{"a":"x","b":"y","c":"z"}','$.a');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('{"a":"x","b":"y","c":"z"}','$.b');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('{"a":{"q":[1,2,3]}}','$.a.q[1]');
json_extract_float64({"a":{"q":[1,2,3]}}, $.a.q[1])
2.0
select json_extract_float64('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]','$[1].a');
json_extract_float64([{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}], $[1].a)
4.0
select json_extract_float64('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q[1]');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('[1,2,3]','$[*]');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_float64('{"a":[1,2,3,{"b":4}]}','$.a[3].b');
json_extract_float64({"a":[1,2,3,{"b":4}]}, $.a[3].b)
4.0
select json_extract_float64('{"a":[1,2,3,{"b":4}]}','$.a[3].c');
json_extract_float64({"a":[1,2,3,{"b":4}]}, $.a[3].c)
null
select json_extract_float64('{"a":[1,2,3,{"b":4}],"c":5}','$.*');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_float64('{"a":[1,2,3,{"a":4}]}','$**.a');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_float64('{"a":[1,2,3,{"a":4}]}','$.a[*].a');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_float64('{"a":1}','$[0]');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('{"a":1}','$[0].a');
json_extract_float64({"a":1}, $[0].a)
1.0
select json_extract_float64('{"a":1}','$[0].b');
json_extract_float64({"a":1}, $[0].b)
null
select json_extract_float64('{"a":1}','$[1]');
json_extract_float64({"a":1}, $[1])
null
select json_extract_float64('{"af": [1, "2", {"aaf": "bb"}],"eab":"888"}','$**.f');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_float64('{"a": [1, "2", {"a": "bb"}]}','$**.a');
invalid input: json_extract_value should use a path that retrives a single value
select json_extract_float64('{"a":"a1","b":"b1"}','$.**');
invalid input: invalid json path '$.**'
select json_extract_float64('{"a":"a1","b":"b1"}','$**.1');
invalid input: invalid json path '$**.1'
select json_extract_float64('{"a":123456789012345678901234567890,"b":2,"c":3}','$.a');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('{"a":-123456789012345678901234567890,"b":2,"c":3}','$.a');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('{"a":null,"b":2,"c":3}','$.a');
json_extract_float64({"a":null,"b":2,"c":3}, $.a)
null
select json_extract_float64('{"a":NaN,"b":2,"c":3}','$.a');
invalid input: json text {"a":NaN,"b":2,"c":3}
select json_extract_float64('{"a":1e10,"b":2,"c":3}','$.a');
invalid input: expecting a path that retrives a single numeric value
select json_extract_float64('{"a":3.1415926535897e1,"b":2,"c":3}','$.a');
invalid input: expecting a path that retrives a single numeric value
drop table if exists jtags;
create table jtags(id int, tags json, metrics json);
insert into jtags values
(1, '{"tag1": "xxx", "tag2": "yyy1", "tag13": "zzz"}', '{"metric1": 1, "metric2": 1.0, "metric13": 1}'),
(2, '{"tag1": "xxx", "tag2": "yyy2", "tag23": "zzz"}', '{"metric1": 2, "metric2": 2.0, "metric23": 2}'),
(3, '{"tag1": "xxx", "tag2": "yyy3", "tag33": "zzz"}', '{"metric1": 3, "metric2": 3.0, "metric33": 3}'),
(4, '{"tag1": "xxx", "tag2": "yyy4", "tag43": "zzz"}', '{"metric1": 4, "metric2": 4.0, "metric43": 4}'),
(5, '{"tag1": "xxx", "tag2": "yyy5", "tag53": "zzz"}', '{"metric1": 5, "metric2": 5.0, "metric53": 5}'),
(6, '{"tag1": "xxx", "tag2": "yyy6", "tag63": "zzz"}', '{"metric1": 6, "metric2": 6.0, "metric63": 6}'),
(7, '{"tag1": "xxx", "tag2": "yyy7", "tag73": "zzz"}', '{"metric1": 7, "metric2": 7.0, "metric73": 7}'),
(8, '{"tag1": "xxx", "tag2": "yyy8", "tag83": "zzz"}', '{"metric1": 8, "metric2": 8.0, "metric83": 8}'),
(9, '{"tag1": "xxx", "tag2": "yyy9", "tag93": "zzz"}', '{"metric1": 9, "metric2": 9.0, "metric93": 9}');
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags;
s1    s33
45.0    3.0
select count(json_extract_float64(jtags.metrics, '$.metric1')) c1, count(json_extract_float64(jtags.metrics, '$.metric33')) c33 from jtags;
c1    c33
9    1
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag1') = 'xxx';
s1    s33
45.0    3.0
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag2') = 'yyy3';
s1    s33
3.0    3.0
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag2') = 'yyy5';
s1    s33
5.0    null
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag33') = 'zzz';
s1    s33
3.0    3.0
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag53') = 'zzz';
s1    s33
5.0    null
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag35') = 'zzz';
s1    s33
null    null

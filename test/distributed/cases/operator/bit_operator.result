SELECT 1 ^ 1, 9 &4& 2, 1 ^ 0;
1 ^ 1    9 & 4 & 2    1 ^ 0
0    0    1
SELECT 29 & 15;
29 & 15
13
SELECT ~0, 64 << 2, '40' << 2;
~0    64 << 2    40 << 2
18446744073709551615    256    160
SELECT 1 << 2;
1 << 2
4
SELECT 4 >> 2;
4 >> 2
1
SELECT 100 << ABS(-3);
100 << abs(-3)
800
SELECT BIN(~1);
bin(~1)
1111111111111111111111111111111111111111111111111111111111111110
SELECT 3 & ~8;
Data truncation: data out of range: data type int64,
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(
tiny TINYINT NOT NULL,
small SMALLINT NOT NULL,
int_test INT NOT NULL,
big BIGINT NOT NULL
);
INSERT INTO t1(tiny, small, int_test, big) VALUES(0, SIN(1), 1, -0);
INSERT INTO t1() VALUES('2', 32767, '1', 9223372036854775807);
SELECT tiny & small FROM t1;
tiny & small
0
2
SELECT tiny << small FROM t1;
tiny << small
0
0
SELECT tiny >> big FROM t1;
tiny >> big
0
0
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(
tiny TINYINT UNSIGNED NOT NULL,
small SMALLINT UNSIGNED NOT NULL,
int_test INT UNSIGNED NOT NULL,
big BIGINT UNSIGNED NOT NULL
);
INSERT INTO t1(tiny, small, int_test, big) VALUES(0, SIN(1)-COS(0), 1, 9223372036854775807);
INSERT INTO t1() VALUES(1, 927, LENGTH('abcd'), 90);
SELECT big >> COS(0) FROM t1;
big >> cos(0)
4611686018427387903
45
SELECT tiny & int_test | small ^ big FROM t1;
tiny & int_test | small ^ big
9223372036854775807
965
SELECT tiny << int_test | small >> big FROM t1;
tiny << int_test | small >> big
0
16
SELECT tiny << LENGTH('abcdefghijklmnopqrst') FROM t1 ORDER BY tiny;
tiny << length(abcdefghijklmnopqrst)
0
1048576
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(
int_test INT UNSIGNED NOT NULL,
float_32 FLOAT NOT NULL,
float_64 DOUBLE NOT NULL
);
INSERT INTO t1() VALUES(1, 0.0, 123.146484666486456);
INSERT INTO t1() VALUES('99', 0.000001, 1.0);
SELECT int_test & float_32 FROM t1;
int_test & float_32
0
0
SELECT float_32 | float_64 FROM t1;
float_32 | float_64
123
1
SELECT float_32 ^ float_64 + 11 FROM t1;
float_32 ^ float_64 + 11
134
12
SELECT float_32 >> int_test FROM t1;
float_32 >> int_test
0
0
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(
int_test INT UNSIGNED NOT NULL,
float_32 FLOAT NOT NULL,
d1 DECIMAL NOT NULL
);
INSERT INTO t1() VALUES(1, 0.000001, 1.00000000000000000000000001);
INSERT INTO t1() VALUES(YEAR('2022-02-02'), SIN(1), LENGTH('abcdefghijk') - MONTH('2022-09-09'));
SELECT ~float_32 & float_32 FROM t1;
Data truncation: data out of range: data type int64, 
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(
str1 CHAR(10),
str2 VARCHAR(10)
);
INSERT INTO t1() VALUES('abc', '123');
INSERT INTO t1() VALUES(NULL, 'dc');
SELECT LENGTH(str1) | LENGTH(str2) FROM t1;
length(str1) | length(str2)
3
null
SELECT STARTSWITH(str1, 'a') | LENGTH(str2) FROM t1;
startswith(str1, a) | length(str2)
3
null
DELETE FROM t1;
INSERT INTO t1() VALUES('123', 23), (LENGTH('abc'), 0), ('0', NULL);
SELECT str1 << '1' FROM t1;
str1 << 1
246
6
0
SELECT str1 & '0' FROM t1;
str1 & 0
0
0
0
SELECT str1 & '11111' | '000101' & BIN(12) FROM t1;
str1 & 11111 | 000101 & bin(12)
103
71
68
SELECT str1 & '5555' | SPACE(100)+'1' & BIN(16) FROM t1;
str1 & 5555 | space(100) + 1 & bin(16)
51
3
0
SELECT str1 ^ '000000000000000'+'1'+'000000000000000' & '000000000000000'+'1'+'000000000000000' FROM t1;
str1 ^ 000000000000000 + 1 + 000000000000000 & 000000000000000 + 1 + 000000000000000
0
0
0
DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;
CREATE TABLE t1(
str1 VARCHAR(10),
PRIMARY KEY (str1)
);
CREATE TABLE t2(
n1 INT,
PRIMARY KEY (n1)
);
INSERT INTO t1() VALUES('101'),('-1'),(TRUE),(FALSE);
INSERT INTO t2() VALUES(101),(-1),(FALSE),(TRUE);
SELECT str1 & n1 FROM t1,t2 LIMIT 4;
str1 & n1
101
101
0
1
SELECT str1 & ABS(-SIN(7)) FROM t1;
str1 & abs(-sin(7))
1
1
1
0
SELECT n1 & str1 & n1 & '111' & n1 & '1001' FROM t1,t2;
n1 & str1 & n1 & 111 & n1 & 1001
97
97
0
1
97
105
0
1
1
1
0
1
0
0
0
0
SELECT 1 << n1 FROM t2;
1 << n1
0
0
1
2
SELECT n1 << n1 >> n1 FROM t2;
n1 << n1 >> n1
0
0
0
1
SELECT n1 ^ str1 | n1 & str1 >> n1 << str1 FROM t1,t2;
n1 ^ str1 | n1 & str1 >> n1 << str1
0
-102
101
100
-102
0
-1
-2
100
-2
1
0
101
-1
0
1
SELECT n1 ^ 1 | n1 & '111' >> n1 << '1001' FROM t1,t2;
n1 ^ 1 | n1 & 111 >> n1 << 1001
100
-2
1
0
100
-2
1
0
100
-2
1
0
100
-2
1
0
SELECT '0150' | str1 | n1 | '000111' | n1 | '101010' FROM t1,t2;
0150 | str1 | n1 | 000111 | n1 | 101010
101119
-1
101119
101119
-1
-1
-1
-1
101119
-1
101119
101119
101119
-1
101119
101119
DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;
CREATE TABLE t1(
id INT,
str1 VARCHAR(10),
PRIMARY KEY (id)
);
CREATE TABLE t2(
id INT,
n1 INT,
PRIMARY KEY (id)
);
INSERT INTO t1() VALUES(1, '1'), (2, 'red'), (3, 'United'), (4, FALSE);
INSERT INTO t2() VALUES(1, 101), (2, 01010), (4, -1);
SELECT str1 | n1 FROM t1, t2 WHERE t1.id = t2.id AND t1.id = 1;
str1 | n1
101
UPDATE t1 JOIN t2 ON t1.id = t2.id SET str1 = n1 << 2;
UPDATE t1,t2 SET str1 = 2 >> str1, n1 = 3 >> 3 WHERE t1.id = 1;
INSERT INTO t1() VALUES(2 << 4, 'shift'), (3 & 0, 'bit');
INSERT INTO t1 SELECT 2 << 8, 'UK';
SELECT * FROM t1;
id    str1
3    United
2    4040
4    -4
1    0
32    shift
0    bit
512    UK
DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;
CREATE TABLE t1(
id INT,
class VARCHAR(10),
name VARCHAR(10),
PRIMARY KEY (id)
);
CREATE TABLE t2(
id INT,
grade VARCHAR(10),
score FLOAT,
PRIMARY KEY (id)
);
INSERT INTO t1() VALUES(1,'c1','nion'), (2,'c2','unitd'), (3,'c1','jake'), (4,'c2','hadd'), (5,'c3','laik');
INSERT INTO t2() VALUES(1,'A',70.1), (2,'B',59.3), (3,'C',81.2), (4,'B',48.3), (5,'C',99.4);
SELECT id,MAX(score),grade FROM t2 GROUP BY id,grade HAVING id > (2 << 2);
id    max(score)    grade
SELECT t1.id, t1.name, t2.grade FROM t1, t2 WHERE t1.id = t2.id AND t1.id < (2 << 2);
id    name    grade
1    nion    A
2    unitd    B
3    jake    C
4    hadd    B
5    laik    C
SELECT score FROM t2 WHERE t2.score BETWEEN 2 << 5 AND 2 << 8;
score
70.1
81.2
99.4
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(
id INT,
str1 VARCHAR(10),
PRIMARY KEY (id)
);
INSERT INTO t1() VALUES(1,'c1'), (2,'11'), (3,'cd'), (4,'df');
SELECT id | BIN(100), id & HEX(100) FROM t1;
id | bin(100)    id & hex(100)
1100101    0
1100102    0
1100103    0
1100100    0
INSERT INTO t1(id) VALUES(0 & BIN(4));
INSERT INTO t1(id) VALUES(-1 & HEX(8));
SELECT id << HEX(88), id >> BIN(88) FROM t1;
id << hex(88)    id >> bin(88)
288230376151711744    0
576460752303423488    0
864691128455135232    0
1152921504606846976    0
0    0
2305843009213693952    0
SELECT HEX(88) & BIN(88), BIN(id) | BIN(88) FROM t1;
hex(88) & bin(88)    bin(id) | bin(88)
56    1011001
56    1011002
56    1011003
56    1011068
56    1011000
56    1011704
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(
str1 VARCHAR(10),
PRIMARY KEY (str1)
);
INSERT INTO t1() VALUES ('111'), ('222'), ('0'), ('333');
SELECT HEX(str1) & BIN(88), BIN(str1) | HEX(88) FROM t1;
hex(str1) & bin(88)    bin(str1) | hex(88)
279848    1101119
289824    11011134
24    58
328720    101001151
SELECT HEX(str1) & BIN(88) ^ BIN(str1) | HEX(100) FROM t1;
hex(str1) & bin(88) ^ bin(str1) | hex(100)
294987
288832
88
597
SELECT HEX(str1) >> BIN(88) << BIN(str1) >> HEX(100) FROM t1;
hex(str1) >> bin(88) << bin(str1) >> hex(100)
0
0
0
0
DROP TABLE t1;
select binary(3) & binary(4);
binary(3) & binary(4)
0
select binary(3) | binary(4);
binary(3) | binary(4)
7

DROP TABLE IF EXISTS t00;
DROP TABLE IF EXISTS t01;
DROP VIEW IF EXISTS v0;
CREATE TABLE t00(a INTEGER);
INSERT INTO t00 VALUES (1),(2);
CREATE TABLE t01(a INTEGER);
INSERT INTO t01 VALUES (1);
CREATE VIEW v0 AS SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a);
SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a);
a    b
1    1
2    null
SELECT * FROM v0 WHERE b >= 0;
a    b
1    1
SHOW CREATE VIEW v0;
View    Create View    character_set_client    collation_connection
v0    CREATE VIEW v0 AS SELECT t00.a, t01.a AS b FROM t00 LEFT JOIN t01 USING(a);    utf8mb4    utf8mb4_general_ci
ALTER VIEW v0 AS SELECT t00.a FROM t00;
SELECT t00.a FROM t00;
a
1
2
SELECT * FROM v0;
a
1
2
SHOW CREATE VIEW v0;
View    Create View    character_set_client    collation_connection
v0    CREATE VIEW v0 AS SELECT t00.a FROM t00;    utf8mb4    utf8mb4_general_ci
SELECT * FROM t00;
a
1
2
DROP TABLE IF EXISTS t00;
DROP TABLE IF EXISTS t01;
DROP TABLE IF EXISTS v0;
CREATE VIEW v1 AS SELECT 1;
create view v2 as select 'foo' from dual;
SELECT * from v1;
1
1
SELECT * from v2;
foo
foo
alter view v1 as select 'foo' from dual;
alter view v2 as SELECT 1;
SELECT * from v1;
foo
foo
SELECT * from v2;
1
1
DROP TABLE IF EXISTS v1;
DROP TABLE IF EXISTS v2;
CREATE VIEW v1 AS SELECT CAST(1/3 AS DOUBLE), CAST(1/3 AS FLOAT(2)), CAST(1/3 AS FLOAT(50));
table v1 already exists
SHOW CREATE VIEW v1;
View    Create View    character_set_client    collation_connection
v1    create view v1 as select 'foo' from dual;    utf8mb4    utf8mb4_general_ci
SELECT * FROM v1;
foo
foo
alter view if exists v1 AS SELECT CAST(1/3 AS DOUBLE), CAST(1/3 AS FLOAT(2)), CAST(1/3 AS FLOAT(50));
alter view v1 AS SELECT CAST(1/3 AS DOUBLE), CAST(1/3 AS FLOAT(2)), CAST(1/3 AS FLOAT(50));
SHOW CREATE VIEW v1;
View    Create View    character_set_client    collation_connection
v1    create view v1 AS SELECT CAST(1/3 AS DOUBLE), CAST(1/3 AS FLOAT(2)), CAST(1/3 AS FLOAT(50));    utf8mb4    utf8mb4_general_ci
SELECT * FROM v1;
cast(1 / 3 as double)    cast(1 / 3 as float(2))    cast(1 / 3 as float(50))
0.3333333333333333    0.33333334    0.3333333333333333
DROP VIEW v1;
drop table if exists t;
drop VIEW if exists v;
CREATE TABLE t(f1 INTEGER);
insert into t values(1),(2),(3),(6);
CREATE VIEW v AS SELECT f1 FROM t;
SELECT f1 FROM (SELECT f1 FROM v) AS dt1 NATURAL JOIN v dt2 WHERE f1 > 5;
f1
6
SELECT f1 FROM v NATURAL JOIN v dt2 WHERE f1 > 5;
f1
6
ALTER VIEW v AS SELECT f1 FROM (SELECT f1 FROM v) AS dt1 NATURAL JOIN v dt2 WHERE f1 > 5;
internal error: there is a recursive reference to the view v
SELECT * FROM v;
f1
1
2
3
6
drop table if exists t;
drop VIEW if exists v;
DROP TABLE if exists t2;
DROP TABLE if exists t1;
DROP VIEW if exists v1;
DROP VIEW if exists v2;
CREATE TABLE t1(f1 int, f11 int);
CREATE TABLE t2(f2 int, f22 int);
INSERT INTO t1 VALUES(1,1),(2,2),(3,3),(5,5),(9,9),(7,7);
INSERT INTO t2 VALUES(1,1),(3,3),(2,2),(4,4),(8,8),(6,6);
CREATE VIEW v1 AS SELECT * FROM t1;
CREATE VIEW v2 AS SELECT * FROM t1 JOIN t2 ON f1=f2;
CREATE VIEW v3 AS SELECT * FROM t1 WHERE f1 IN (2,3);
CREATE VIEW v4 AS SELECT * FROM t2 WHERE f2 IN (2,3);
SELECT * FROM v1;
f1    f11
1    1
2    2
3    3
5    5
9    9
7    7
SELECT * FROM v2;
f1    f11    f2    f22
1    1    1    1
2    2    2    2
3    3    3    3
SELECT * FROM v3 WHERE f11 IN (1,3);
f1    f11
3    3
SELECT * FROM v3 JOIN v4 ON f1=f2;
f1    f11    f2    f22
2    2    2    2
3    3    3    3
SELECT * FROM v4 WHERE f2 IN (1,3);
f2    f22
3    3
ALTER VIEW v1 AS SELECT * FROM t2 WHERE f2 IN (2,3);
ALTER VIEW v2 AS SELECT * FROM t1 WHERE f1 IN (2,3);
ALTER VIEW v3 AS SELECT * FROM t1 JOIN t2 ON f1=f2;
ALTER VIEW v4 AS SELECT * FROM t1;
SELECT * FROM v1;
f2    f22
3    3
2    2
SELECT * FROM v2;
f1    f11
2    2
3    3
SELECT * FROM v3 WHERE f11 IN (1,3);
f1    f11    f2    f22
1    1    1    1
3    3    3    3
SELECT * FROM v3 JOIN v4 ON f1=f2;
invalid input: ambiguouse column reference to 'f1'
SELECT * FROM v4 WHERE f2 IN (1,3);
invalid input: column f2 does not exist
DROP TABLE if exists t2;
DROP TABLE if exists t1;
DROP VIEW v1;
DROP VIEW v2;
DROP VIEW v3;
DROP VIEW v4;
CREATE TABLE t1 (f1 VARCHAR(1), key(f1));
INSERT INTO t1 VALUES ('a');
CREATE VIEW v1 AS SELECT f1 FROM t1 ORDER BY 1 LIMIT 0;
CREATE VIEW v2 AS SELECT f1 FROM t1 ORDER BY 1 LIMIT 1;
SELECT * FROM v1;
f1
SELECT * FROM v2;
f1
a
ALTER VIEW v1 AS SELECT f1 FROM t1 ORDER BY 1 LIMIT 1;
ALTER VIEW v2 AS SELECT f1 FROM t1 ORDER BY 1 LIMIT 0;
SELECT * FROM v1;
f1
a
SELECT * FROM v2;
f1
DROP VIEW v1;
DROP VIEW v2;
DROP TABLE t1;
CREATE TABLE t1 (f1 VARCHAR(1), key(f1));
CREATE TABLE t2 (f1 VARCHAR(1), key(f1));
INSERT INTO t1 VALUES ('a');
CREATE VIEW t2 AS SELECT * FROM t1;
table t2 already exists
DROP VIEW IF EXISTS t2;
invalid view 'alter_view.t2'
DROP TABLE t1;
DROP TABLE t2;

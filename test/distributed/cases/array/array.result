drop database if exists vecdb;
create database vecdb;
use vecdb;
drop table if exists vec_table;
create table vec_table(a int, b vecf32(3), c vecf64(3));
insert into vec_table values(1, "[1,2,3]", "[4,5,6]");
select * from vec_table;
a    b    c
1    [1, 2, 3]    [4, 5, 6]
select b+b from vec_table;
b + b
[2, 4, 6]
select b-b from vec_table;
b - b
[0, 0, 0]
select b*b from vec_table;
b * b
[1, 4, 9]
select b/b from vec_table;
b / b
[1, 1, 1]
select * from vec_table where b> "[1,2,3]";
a    b    c
select * from vec_table where b< "[1,2,3]";
a    b    c
select * from vec_table where b>= "[1,2,3]";
a    b    c
1    [1, 2, 3]    [4, 5, 6]
select * from vec_table where b<= "[1,2,3]";
a    b    c
1    [1, 2, 3]    [4, 5, 6]
select * from vec_table where b!= "[1,2,3]";
a    b    c
select * from vec_table where b= "[1,2,3]";
a    b    c
1    [1, 2, 3]    [4, 5, 6]
select * from vec_table where b= cast("[1,2,3]" as vecf32(3));
a    b    c
1    [1, 2, 3]    [4, 5, 6]
select b + "[1,2,3]" from vec_table;
b + [1,2,3]
[2, 4, 6]
select b + "[1,2]" from vec_table;
invalid input: dimension mismatch. 3 != 2
select b + "[1,2,3,4]" from vec_table;
invalid input: dimension mismatch. 3 != 4
select cast("[1,2,3]" as vecf32(3));
cast([1,2,3] as vecf32(3))
[1, 2, 3]
select b + "[1,2,3]" from vec_table;
b + [1,2,3]
[2, 4, 6]
select b + sqrt(b) from vec_table;
b + sqrt(b)
[2, 3.414213562373095, 4.732050807568877]
select b + c from vec_table;
b + c
[5, 7, 9]
select abs(b) from vec_table;
abs(b)
[1, 2, 3]
select abs(cast("[-1,-2,3]" as vecf32(3)));
abs(cast([-1,-2,3] as vecf32(3)))
[1, 2, 3]
select sqrt(b) from vec_table;
sqrt(b)
[1, 1.4142135623730951, 1.7320508075688772]
select summation(b) from vec_table;
summation(b)
6.0
select l1_norm(b) from vec_table;
l1_norm(b)
6.0
select l2_norm(b) from vec_table;
l2_norm(b)
3.7416573867739413
select vector_dims(b) from vec_table;
vector_dims(b)
3
select inner_product(b,"[1,2,3]") from vec_table;
inner_product(b, [1,2,3])
14.0
select cosine_similarity(b,"[1,2,3]") from vec_table;
cosine_similarity(b, [1,2,3])
1.0
select * FROM vec_table ORDER BY cosine_similarity(b, '[3,1,2]') LIMIT 5;
a    b    c
1    [1, 2, 3]    [4, 5, 6]
select b + "[1,2,3" from vec_table;
internal error: malformed vector input: [1,2,3
select b + "1,2,3" from vec_table;
internal error: malformed vector input: 1,2,3
create table t2(a int, b vecf32(3) primary key);
not supported: VECTOR column 'b' cannot be in primary key
create unique index t3 on vec_table(b);
not supported: VECTOR column 'b' cannot be in index
create table t3(a int, b vecf32(65537));
Data truncation: data out of range: data type vecf32,  typeLen is over the MaxVectorLen : 65536
select sqrt(cast("[1,2,-3]" as vecf32(3)));
invalid argument Sqrt, bad value -3
select b/(cast("[1,2,0]" as vecf32(3))) from vec_table;
Data truncation: division by zero
select count(b) from vec_table;
count(b)
1
create table t4(a int, b vecf32(5), c vecf64(5));
insert into t4 values(1, "[1,2,3,4,5]", "[1,2,3,4,5]");
insert into t4 values(1, "[1,2]", "[1,2]");
insert into t4 values(1, "[1,2,3,4,5,6]", "[1,2,3,4,5,6]");
internal error: Can't cast '1,2,3,4,5,6' to VECTOR FLOAT type. Src length 6 is larger than Dest length 5
select * from t4;
a    b    c
1    [1, 2, 3, 4, 5]    [1, 2, 3, 4, 5]
1    [1, 2, 0, 0, 0]    [1, 2, 0, 0, 0]
insert into vec_table values(2, "[0,2,3]", "[4,4,6]");
insert into vec_table values(3, "[1,3,3]", "[4,1,6]");
select mo_ctl('dn', 'flush', 'vecdb.vec_table');
mo_ctl(dn, flush, vecdb.vec_table)
{\n  "method": "Flush",\n  "result": [\n    {\n      "returnStr": "OK"\n    }\n  ]\n}\n
select * from vec_table where b> "[1,2,3]";
a    b    c
3    [1, 3, 3]    [4, 1, 6]
select * from vec_table where b!= "[1,2,3]";
a    b    c
2    [0, 2, 3]    [4, 4, 6]
3    [1, 3, 3]    [4, 1, 6]
select * from vec_table where b= "[1,2,3]";
a    b    c
1    [1, 2, 3]    [4, 5, 6]
drop database vecdb;

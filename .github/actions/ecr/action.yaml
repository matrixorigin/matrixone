name: ecr
description: "push image to ecr"
inputs: 
  tag:
    description: "image tag"
    required: true
    default: "latest"
  repo:
    description: "ecr repo"
    required: true
    default: "matrixone"
  region:
    description: "aws region of ecr"
    required: true
    default: "us-east-1"
  role: 
    description: "ecr push role"
    required: true
    default: ""
  alias:
    description:  "ecr public repo alias"
    required: true
    default: "p4n7f8j9"

runs:
  using: "composite"

# ref: https://github.com/aws-actions/amazon-ecr-login
  steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          image: tonistiigi/binfmt:latest
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # github OIDC https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ inputs.role }}
          aws-region: ${{ inputs.region }}
      
      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        shell: bash
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: ${{ inputs.alias }}
          REPOSITORY: ${{ inputs.repo }}
          IMAGE_TAG: ${{ inputs.tag }}
        run: |
            docker buildx build --platform linux/arm64,linux/amd64 -f ./optools/images/Dockerfile -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG --push .

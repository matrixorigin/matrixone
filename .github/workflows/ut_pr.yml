name: PR Unit Test Coverage
on:
  pull_request_target:
    types: [ opened, synchronize,reopened ]

jobs:
  test-name:
    runs-on: ubuntu-latest
    name: Get Change Paths

    steps:
      - name: Get PR Changed Paths
        uses: guguducken/change-paths-action@v0.0.3
        id: ut-pr
        with:
          github-token: ${{ secrets.ACTION_TOKEN }}
          ignore: "etc/,optools/,LICENSES/,cgo/,cmd/generate-config/test/,docs/,proto/,test/"

      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./matrixone
          repository: ${{ steps.ut-pr.outputs.resource }}
          ref: ${{ steps.ut-pr.outputs.branch }}

      - name: Set Variables
        run: |
          echo "raw_ut_coverage='ut_coverage.raw'" >> $GITHUB_ENV
          
      - name: Set up Go
        uses: ./matrixone/.github/actions/setup_env

      - name: PR Unit Test
        timeout-minutes: 60
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          test_scope=${{ steps.ut-pr.outputs.paths }}
          echo "ut start"
          CGO_CFLAGS="-I${GITHUB_WORKSPACE}/matrixone/cgo"
          CGO_LDFLAGS="-L${GITHUB_WORKSPACE}/matrixone/cgo -lmo"
          go test -v -tags matrixone_test -p 1 -covermode=count --count=1 -coverpkg=${test_scope} | grep -a -P "(?m)(?<=ok|\?){1}.*(?=%|])" | tee ${ raw_ut_coverage }
          echo "ut finished"
          

      - name: Coverage Calculate
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          awk -F '[ %\t]+' '{if($1=="ok"){if($5 == "[no"){print "warning: please move tested code file to "$2;} else if($5 < 75) {print "error: the code coverage of "$2" is "$5"% is below 75%";} else {print "The code coverage of "$1" is up to standard"}} else if($1 == "?"){print "error: There are no test files in this path -- "$2;}}' ${raw_ut_coverage}
          rm -rf ${{ env.raw_ut_coverage }}
          echo "ut_coverage finished"

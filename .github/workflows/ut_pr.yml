name: PR Unit Test Coverage
on:
  pull_request_target:
    types: [ opened, synchronize ]

concurrency: 
  group: ${{ github.event.pull_request.head.repo.full_name}}/${{ github.event.pull_request.head.ref }}/${{ github.workflow }}
  cancel-in-progress: true

jobs:
  ut_coverage:
    runs-on: ubuntu-latest
    name: PR Unit Test Coverage

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./matrixone
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set Variables
        run: |
          echo "raw_ut_coverage='ut_coverage.raw'" >> $GITHUB_ENV
          echo "ut_report='UT-Report.out'" >> $GITHUB_ENV

      - name: Set up Go
        uses: ./matrixone/.github/actions/setup_env

      - name: Set env
        run: |
          echo "endpoint=${{ secrets.S3ENDPOINT }}" >> $GITHUB_ENV
          echo "region=${{ secrets.S3REGION }}" >> $GITHUB_ENV
          echo "apikey=${{ secrets.S3APIKEY }}" >> $GITHUB_ENV
          echo "apisecret=${{ secrets.S3APISECRET }}" >> $GITHUB_ENV
          echo "bucket=${{ secrets.S3BUCKET }}" >> $GITHUB_ENV
          
      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/matrixone && make clean && make config && make build
          echo "test_scope=$(go list ./... | grep -v 'driver\|engine/aoe\|engine/memEngine\|pkg/catalog' | xargs)" >> $GITHUB_ENV
          echo ${{ env.test_scope }}
          
      - name: Get Changed Paths
        uses: guguducken/change-paths-action@v0.0.6
        id: ut-pr 
        with:
          github-token: ${{ secrets.TOKEN_ACTION }}
          ignore: "/,etc/,optools/,LICENSES/,cgo/,cmd/,docs/,proto/,test/,.github/,pkg/pb/"
          source-path: ${{ env.test_scope }}
      
      - name: PR Unit Test
        if: ${{ steps.ut-pr.outputs.paths != '' }}
        timeout-minutes: 60
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          echo "-----------------------ut start-----------------------"
          CGO_CFLAGS="-I${GITHUB_WORKSPACE}/matrixone/cgo"
          CGO_LDFLAGS="-L${GITHUB_WORKSPACE}/matrixone/cgo -lmo -lm"
          go test -v -cover -tags matrixone_test -p 1 -covermode=count --count=1 ${{ steps.ut-pr.outputs.paths }} | tee ${{ env.ut_report }}
          cat ${{ env.ut_report }} | grep -a -P "^[ok|\?|FAIL].*[\]|s]$" > ${{ env.raw_ut_coverage }}
          echo "-----------------------ut finish-----------------------"
          
      - name: Coverage Calculate
        if: ${{ steps.ut-pr.outputs.paths != '' }}
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          echo "--------------------ut_coverage start--------------------"
          awk -F '[ %\t]+' 'BEGIN{flag=1}{if($1=="ok"){if($5 == "[no"){print "Warning: please move/create test code file to `"$2"`";flag=0} else if($5 < 75) {print "Error: the code coverage of `"$2"` is "$5"% which is below 75%";flag=0} else {print "Output: The code coverage of `"$2"` is "$5"%, this is up to standard -- 75%"}} else if($1 == "?"){print "Error: There are no test files in this path -- `"$2"`";flag=0} else if($1 == "FAIL"){print "Error: The `"$2"` failed to run the test";falg=0}} END{if(flag==0){exit 1;}}' ${{ env.raw_ut_coverage }}
          rm -rf ${{ env.raw_ut_coverage }} ${{ env.ut_report }}
          echo "--------------------ut_coverage finished--------------------"

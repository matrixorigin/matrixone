# Define workflow name.
name: MatrixOne CI

on:
  pull_request_target:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]

  workflow_dispatch:
  
concurrency: 
  group: ${{ github.event.pull_request.head.repo.full_name}}/${{ github.event.pull_request.head.ref }}/${{ github.workflow }}
  cancel-in-progress: true

jobs:

  ut-linux-x86:
    runs-on: ubuntu-latest
    name: UT Test on Ubuntu/x64
      
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./.github/actions/setup_env
        
      - name: Set env
        run: |
          echo "endpoint=${{ secrets.S3ENDPOINT }}" >> $GITHUB_ENV
          echo "region=${{ secrets.S3REGION }}" >> $GITHUB_ENV
          echo "apikey=${{ secrets.S3APIKEY }}" >> $GITHUB_ENV
          echo "apisecret=${{ secrets.S3APISECRET }}" >> $GITHUB_ENV
          echo "bucket=${{ secrets.S3BUCKET }}" >> $GITHUB_ENV

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        continue-on-error: true
        with:
          name: ut_linux_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  ut-mac-x86:
    runs-on: macos-12
    name: UT Test on Darwin/x86

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./.github/actions/setup_env

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        continue-on-error: true
        with:
          name: ut_darwin_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  ut-linux-arm:
    runs-on: arm64-runner
    name: UT Test on Linux/Arm

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./.github/actions/setup_env

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        continue-on-error: true
        with:
          name: ut_linux_arm_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7

  bvt-linux-x86:
    runs-on: ubuntu-latest
    name: BVT Test on Ubuntu/x64
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make debug
          git rev-parse --short HEAD

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-service -cfg ./etc/cn-standalone-test.toml &>mo-service.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check mo-service Status
        if: ${{ always() && !cancelled() }}
        run: |
          if [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-service; else echo 'current mo-service has already crashed'; exit 1; fi
        
      - name: remove some files
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-service"  ]; then rm -rf ./head/mo-service; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        continue-on-error: true
        with:
          name: linux_x86_ci_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  bvt-linux-arm:
    runs-on: arm64-runner
    name: BVT Test on Linux/Arm
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make debug
          git rev-parse --short HEAD

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-service -cfg ./etc/cn-standalone-test.toml &>mo-service.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for arm64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          architecture: arm64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          export LC_ALL="C.UTF-8"
          locale
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check mo-service Status
        if: ${{ always() && !cancelled() }}
        run: |
          if [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-service; else echo 'current mo-service has already crashed'; exit 1; fi
        
      - name: remove some files
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-service"  ]; then rm -rf ./head/mo-service; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        continue-on-error: true
        with:
          name: ci_linux_arm_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  bvt-darwin-x86:
    runs-on: macos-12
    name: BVT Test on Darwin/x86
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make debug
          git rev-parse --short HEAD

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-service -cfg ./etc/cn-standalone-test.toml &>mo-service.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          sleep 60
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Service Status
        if: ${{ always() && !cancelled() }}
        run: |
          if [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-service; else echo 'current mo-service has already crashed'; exit 1; fi
        
      - name: remove some files
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-service"  ]; then rm -rf ./head/mo-service; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        continue-on-error: true
        with:
          name: ci_darwin_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7

  lint-docs:
    name: Lint Docs
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "No build required" '
       
  sca:
    runs-on: ubuntu-latest
    name: SCA Test on Ubuntu/x64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./.github/actions/setup_env
          
      - name: Prepare ENV
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config && make build
          make install-static-check-tools
          
      - name: Static Code Analysis
        run: |
          cd $GITHUB_WORKSPACE
          make static-check
          

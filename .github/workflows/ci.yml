# Define workflow name.
name: MatrixOne CI

# Controls when the workflow will run.
on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: main

  workflow_dispatch:

jobs:
  sca:
    runs-on: ubuntu-latest
    name: SCA Test on Ubuntu/x64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
          
      - name: Formats Check
        run: |
          cd $GITHUB_WORKSPACE && make clean
          if [ "$(make fmt | grep -v gofmt | wc -l)" -gt 0 ]; then exit 1; fi
          
      - name: Detect non-ascii characters
        run: |
          na_characters=$(find ${{ github.workspace }} -type f -name "*.go" -exec grep -P  '[\xE5-\xE9][\x80-\xBF][\x80-\xBF]|\xE4[\xB8-\xBF][\x80-\xBF]' {} + || true)
          if [[ -n $na_characters ]]; then
            echo "Detected non-ascii characters in annotation or log info. Please refer to CONTRIBUTING.md."
            printf '%s\n' "${na_characters[*]}"
            exit 1
          fi
          
      - name: Static Code Analysis
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config && make build
          make install-static-check-tools
          make static-check

  ut-linux-x86:
    runs-on: ubuntu-latest
    name: UT Test on Ubuntu/x64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ut_linux_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  ut-mac-x86:
    runs-on: macos-12
    name: UT Test on Darwin/x86

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ut_darwin_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  ut-linux-arm:
    runs-on: arm64-runner
    name: UT Test on Linux/Arm

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ut_linux_arm_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7

  bvt-linux-x86:
    runs-on: ubuntu-latest
    name: BVT Test on Ubuntu/x64
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make build
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          timedatectl status
          sudo timedatectl set-timezone "Asia/Shanghai"
          timedatectl status
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
        
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          if  [ -d  "./base/"  ]; then rm -rf ./base/; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: linux_x86_ci_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  bvt-linux-arm:
    runs-on: ubuntu-latest
    name: BVT Test on Linux/Arm
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make build
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          timedatectl status
          sudo timedatectl set-timezone "Asia/Shanghai"
          timedatectl status
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
        
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          if  [ -d  "./base/"  ]; then rm -rf ./base/; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ci_linux_arm_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  bvt-darwin-x86:
    runs-on: macos-12
    name: BVT Test on Darwin/x86
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make build
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          sudo systemsetup -settimezone "Asia/Shanghai"
          sleep 60
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
        
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          if  [ -d  "./base/"  ]; then rm -rf ./base/; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ci_darwin_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7

  linux-x86-bvt-race:
    runs-on: ubuntu-latest
    name: BVT RACE Test on CentOS/x64
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make debug
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          timedatectl status
          sudo timedatectl set-timezone "Asia/Shanghai"
          timedatectl status
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
          
      - name: Check race warnings
        run: |
          if [ "$(grep 'DATA RACE' $GITHUB_WORKSPACE/head/mo-server.log | wc -l || 0)" -gt 0 ]; then grep -A 5 'DATA RACE' $GITHUB_WORKSPACE/head/mo-server.log; exit 1; fi
                          
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: linux_x86_race_ci_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  lint-docs:
    name: Lint Docs
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "No build required" '
      
      
  more-sca:
    runs-on: ubuntu-latest
    name: More SCA Test on Ubuntu/x64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
          
      - name: Prepare ENV
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config && make build
          make install-static-check-tools
          
      - name: Run golangci-lint for pkg
        id: sca-1
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          golangci-lint run -E misspell -E exportloopref -E rowserrcheck -E depguard -D unconvert   -E prealloc -E gofmt -E stylecheck ./pkg/...

      - name: Run golangci-lint for cmd
        id: sca-2
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          golangci-lint run -E misspell -E exportloopref -E rowserrcheck -E depguard -D unconvert   -E prealloc -E gofmt -E stylecheck ./cmd/...
          
      - name: Run more staticcheck checks
        id: sca-3
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          staticcheck -checks QF1001,QF1002,QF1003,QF1004,QF1005,QF1006,QF1007,QF1008,QF1009,QF1010,QF1011,QF1012,S1000,S1001,S1002,S1003,S1004,S1005,S1006,S1007,S1008,S1009,S1010,S1011,S1012,S1016,S1017,S1018,S1019,S1020,S1021,S1023,S1024,S1025,S1028,S1029,S1030,S1031,S1032,S1033,S1034,S1035,S1036,S1037,S1038,S1039,S1040,SA1000,SA1001,SA1002,SA1003,SA1004,SA1005,SA1006,SA1007,SA1008,SA1010,SA1011,SA1012,SA1013,SA1014,SA1015,SA1016,SA1017,SA1018,SA1019,SA1020,SA1021,SA1023,SA1024,SA1025,SA1026,SA1027,SA1028,SA1029,SA1030,SA2000,SA2001,SA2002,SA2003,SA3000,SA3001,SA4000,SA4001,SA4003,SA4004,SA4005,SA4006,SA4008,SA4009,SA4010,SA4011,SA4012,SA4013,SA4014,SA4015,SA4016,SA4017,SA4018,SA4019,SA4020,SA4021,SA4022,SA4023,SA4024,SA4025,SA4026,SA4027,SA4028,SA4029,SA4030,SA4031,SA5000,SA5001,SA5002,SA5003,SA5004,SA5005,SA5007,SA5008,SA5009,SA5010,SA5011,SA5012,SA6000,SA6001,SA6002,SA6003,SA6005,SA9001,SA9002,SA9003,SA9004,SA9005,SA9006,SA9007,SA9008,ST1001,ST1005,ST1006,ST1008,ST1011,ST1012,ST1013,ST1015,ST1016,ST1017,ST1018,ST1019,ST1020,ST1021,ST1022,ST1023 ./...
      
      - name: Check on failures
        if: steps.sca-3.outcome != 'success' || steps.sca-2.outcome != 'success' || steps.sca-1.outcome != 'success'
        run: exit 1
          

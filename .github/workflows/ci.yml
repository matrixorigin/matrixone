# Define workflow name.
name: MatrixOne CI

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: main

  workflow_dispatch:

jobs:

  ut-linux-x86:
    runs-on: ubuntu-latest
    name: UT Test on Ubuntu/x64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: ./.github/actions/setup_env

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ut_linux_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  ut-mac-x86:
    runs-on: macos-12
    name: UT Test on Darwin/x86

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: ./.github/actions/setup_env

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ut_darwin_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  ut-linux-arm:
    runs-on: arm64-runner
    name: UT Test on Linux/Arm

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: ./.github/actions/setup_env

      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ut_linux_arm_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7

  bvt-linux-x86:
    runs-on: ubuntu-latest
    name: BVT Test on Ubuntu/x64
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make build
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          timedatectl status
          sudo timedatectl set-timezone "Asia/Shanghai"
          timedatectl status
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
        
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          if  [ -d  "./base/"  ]; then rm -rf ./base/; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: linux_x86_ci_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  bvt-linux-arm:
    runs-on: ubuntu-latest
    name: BVT Test on Linux/Arm
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make build
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          timedatectl status
          sudo timedatectl set-timezone "Asia/Shanghai"
          timedatectl status
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
        
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          if  [ -d  "./base/"  ]; then rm -rf ./base/; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ci_linux_arm_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  bvt-darwin-x86:
    runs-on: macos-12
    name: BVT Test on Darwin/x86
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make build
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          sudo systemsetup -settimezone "Asia/Shanghai"
          sleep 60
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
        
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          if  [ -d  "./base/"  ]; then rm -rf ./base/; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: ci_darwin_x86_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7

  linux-x86-bvt-race:
    runs-on: ubuntu-latest
    name: BVT RACE Test on CentOS/x64
    timeout-minutes: 30

    steps:
      - name: checkout head
        uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./head

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make config && make debug
          git rev-parse --short HEAD
          echo "base sha: ${{ github.event.pull_request.base.sha }}"
          echo "head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./mo-server ./system_vars_config.toml &>mo-server.log &

      - name: Clone test-tool repository
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          timedatectl status
          sudo timedatectl set-timezone "Asia/Shanghai"
          timedatectl status
          sleep 60s
          cd $GITHUB_WORKSPACE/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/head/test/cases 2>&1

      - name: Check MO-Server Status
        if: ${{ always() }}
        run: |
          if [ "$(ps -ef | grep 'mo-server' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-server; else echo 'current mo-server has already crashed'; exit 1; fi
          
      - name: Check race warnings
        run: |
          if [ "$(grep 'DATA RACE' $GITHUB_WORKSPACE/head/mo-server.log | wc -l || 0)" -gt 0 ]; then grep -A 5 'DATA RACE' $GITHUB_WORKSPACE/head/mo-server.log; exit 1; fi
                          
      - name: remove some files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if  [ -d  "./head/mo-server"  ]; then rm -rf ./head/mo-server; fi
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: linux_x86_race_ci_reports
          path: |
            ${{ github.workspace }}
          retention-days: 7
          
  lint-docs:
    name: Lint Docs
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "No build required" '
      
      
  sca:
    runs-on: ubuntu-latest
    name: SCA Test on Ubuntu/x64

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: ./.github/actions/setup_env
          
      - name: Prepare ENV
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config && make build
          make install-static-check-tools
          
      - name: Static Code Analysis
        run: |
          cd $GITHUB_WORKSPACE
          make static-check
          
      
          

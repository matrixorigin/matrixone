name: MatrixOne e2e CI(Standalone)

on:
  workflow_call:

jobs:
  bvt-linux-x86:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    name: e2e BVT Test on Linux/x64(LAUNCH)
    timeout-minutes: 90
    steps:
      - name: checkout head
        uses: actions/checkout@v3
        with:
          fetch-depth: '3'
          path: ./head
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Go
        uses: ./head/.github/actions/setup_env
      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make build
          git rev-parse --short HEAD
      - name: echo config
        run: |
          cd $GITHUB_WORKSPACE/head
          echo ""  >> ./etc/launch/cn.toml
          echo '[cn.txn]' >> ./etc/launch/cn.toml
          echo 'mode = "Optimistic"' >> ./etc/launch/cn.toml
          echo ""  >> ./etc/launch/tn.toml
          echo '[tn.txn]' >> ./etc/launch/tn.toml
          echo 'mode = "Optimistic"' >> ./etc/launch/tn.toml
          cat ./etc/launch/cn.toml
          cat ./etc/launch/tn.toml
      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/head launch
      - name: Clone test-tool repository
        uses: actions/checkout@v3
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main
      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64
      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/mo-tester
          sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
          cat mo.yml
          echo "============================="

          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/head/test/distributed/cases -e pessimistic_transaction 2>&1
      - name: Dump mo-service goroutines
        if: ${{ always() && !cancelled() }}
        run: |
          max_retry=5
          retry=0
          while [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; do
            curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/head/dump-stacks${retry}.log
            pkill -9 mo-service
            retry=$((retry+1))
            if [ ${retry} -ge ${max_retry} ]; then
              echo 'after retry, still cannot shutdown mo-service'
              exit 1
            fi
            sleep 2
          done
      - name: Restart the Version of Head of MO
        run: |
          cd $GITHUB_WORKSPACE/head
          mv mo-service.log mo-service.r1.log
          
          # delete for clear the start finish status of mo
          rm -rf mo-data/local/system_init_completed
          
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/head launch
      - name: Start BVT Test for MO with Version of Head Restarted
        id: bvt_on_latest_head_version_run2
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/mo-tester
          sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
          cat mo.yml
          echo "============================="

          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/head/test/distributed/cases -e pessimistic_transaction 2>&1
      - name: Dump restarted mo-service goroutines 
        if: ${{ always() && !cancelled() }}
        run: |
          if [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; then curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/head/restarted-dump-stacks.log; pkill -9 mo-service; else echo 'current mo-service has already crashed'; exit 1; fi               
      - name: Check Log Messages Count per second
        if: ${{ always() && !cancelled() }}
        run: |
          cd $GITHUB_WORKSPACE/head
          # 4 nodes in one Process
          ./optools/check_log_count.sh 4000 60 # {count threshold} {metric collected interval}
      - name: generate upload files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          mkdir -p ${{ github.workspace }}/upload
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib
          mv ${{ github.workspace }}/head/mo-service.log ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/mo-tester ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/head/dump-stacks* ${{ github.workspace }}/upload/
      - uses: actions/upload-artifact@v3
        if: ${{ failure() || cancelled()}}
        continue-on-error: true
        with:
          name: e2e-linux-x86-reports
          path: |
            ${{ github.workspace }}/upload
          retention-days: 7

  multi-cn-proxy-bvt-linux-x86:
    runs-on: ubuntu-latest
    name: Multi-CN e2e BVT Test on Linux/x64(LAUNCH, PROXY)
    timeout-minutes: 60
    env:
      mo_reuse_enable_checker_verbose: true
    steps:
      - name: checkout head
        uses: actions/checkout@v3
        with:
          fetch-depth: '3'
          path: ./head
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Go
        uses: ./head/.github/actions/setup_env
      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make build
          git rev-parse --short HEAD
      - name: echo cn.toml tn.toml
        run: |
          cd $GITHUB_WORKSPACE/head
          cat ./etc/launch-with-proxy/cn1.toml
          cat ./etc/launch-with-proxy/cn2.toml
          cat ./etc/launch-with-proxy/tn.toml
      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/head launch-with-proxy -with-proxy
      - name: Clone test-tool repository
        uses: actions/checkout@v3
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main
      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64
      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/mo-tester
          sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
          cat mo.yml
          echo "============================="

          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/head/test/distributed/cases -e optimistic 2>&1
      - name: Dump mo-service goroutines
        if: ${{ always() && !cancelled() }}
        run: |
          if [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; then curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/head/dump-stacks.log; else echo 'current mo-service has already crashed'; exit 1; fi
      - name: Check Log Messages Count per second
        if: ${{ always() && !cancelled() }}
        run: |
          cd $GITHUB_WORKSPACE/head
          # 5 nodes in one Process
          ./optools/check_log_count.sh 5000 60 # {count threshold} {metric collected interval}
      - name: generate upload files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          mkdir -p ${{ github.workspace }}/upload
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib
          mv ${{ github.workspace }}/head/mo-service.log ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/mo-tester ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/head/dump-stacks.log ${{ github.workspace }}/upload/
      - uses: actions/upload-artifact@v3
        if: ${{ failure() || cancelled()}}
        continue-on-error: true
        with:
          name: multi-cn-e2e-with-proxy-linux-x86-reports
          path: |
            ${{ github.workspace }}/upload
          retention-days: 7

  pessimistic-bvt-linux-x86:
    runs-on: ubuntu-latest
    name: e2e BVT Test on Linux/x64(LAUNCH, PESSIMISTIC)
    timeout-minutes: 60
    env:
      mo_reuse_enable_checker_verbose: true
    steps:
      - name: checkout head
        uses: actions/checkout@v3
        with:
          fetch-depth: '3'
          path: ./head
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Go
        uses: ./head/.github/actions/setup_env

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE/head && make clean && make build
          git rev-parse --short HEAD

      - name: echo config
        run: |
          cd $GITHUB_WORKSPACE/head
          cat ./etc/launch/cn.toml
          cat ./etc/launch/tn.toml

      - name: Start MO
        run: |
          cd $GITHUB_WORKSPACE/head
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/head launch

      - name: Clone test-tool repository
        uses: actions/checkout@v3
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main

      - name: Set up JDK 8 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64

      - name: Start BVT Test
        id: bvt_on_pr_version
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/mo-tester
          sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
          cat mo.yml
          echo "============================="
          
          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/head/test/distributed/cases -s  $GITHUB_WORKSPACE/head/test/distributed/resources -e optimistic 2>&1

      - name: Dump mo-service goroutines
        if: ${{ always() && !cancelled() }}
        run: |
          if [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; then curl http://localhost:12345/debug/pprof/goroutine\?debug=2 -o ${{ github.workspace }}/head/dump-stacks.log; else echo 'current mo-service has already crashed'; exit 1; fi

      - name: Check Log Messages Count per second
        if: ${{ always() && !cancelled() }}
        run: |
          cd $GITHUB_WORKSPACE/head
          # 4 nodes in one Process
          ./optools/check_log_count.sh 4000 60 # {count threshold} {metric collected interval}

      - name: Check mo-service Status
        if: ${{ always() && !cancelled() }}
        run: |
          if [ "$(ps -ef | grep 'mo-service' | grep -v "grep" | wc -l)" -gt 0 ]; then pkill -9 mo-service; else echo 'current mo-service has already crashed'; exit 1; fi

      - name: generate upload files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          mkdir -p ${{ github.workspace }}/upload
          rm -rf ./mo-tester/.git
          rm -rf ./mo-tester/lib
          mv ${{ github.workspace }}/head/mo-service.log ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/mo-tester ${{ github.workspace }}/upload/
          mv ${{ github.workspace }}/head/dump-stacks.log ${{ github.workspace }}/upload/

      - uses: actions/upload-artifact@v3
        if: ${{ failure() || cancelled()}}
        continue-on-error: true
        with:
          name: 1-cn-e2e-linux-x86-reports
          path: |
            ${{ github.workspace }}/upload
          retention-days: 7

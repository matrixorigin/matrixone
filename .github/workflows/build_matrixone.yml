# Define workflow name.
name: Build MatrixOne

# Controls when the workflow will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch.
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: main
    paths-ignore:
      - 'docs/**'

  # Allows dev to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Trigger workflow at 21:00 UTC to cover time-consuming tests
  # schedule:
  # * is a special character in YAML so you have to quote this string
  # - cron:  '00 21 * * *'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    name: Build on CentOS/x64

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it.
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Formats Check
        run: |
          cd $GITHUB_WORKSPACE && make clean
          if [ "$(make fmt | grep -v gofmt | wc -l)" -gt 0 ]; then exit 1; fi

      - name: Detect non-ascii characters
        run: |
          na_characters=$(find ${{ github.workspace }} -type f -name "*.go" -exec grep -P  '[\xE5-\xE9][\x80-\xBF][\x80-\xBF]|\xE4[\xB8-\xBF][\x80-\xBF]' {} + || true)
          if [[ -n $na_characters ]]; then
            echo "Detected non-ascii characters in annotation or log info. Please refer to CONTRIBUTING.md."
            printf '%s\n' "${na_characters[*]}"
            exit 1
          fi

      - name: Build MatrixOne
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config && make build

      - name: Static Code Analysis
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          make install-static-check-tools
          make static-check &>lint.out

      - name: Unit Testing
        run: |
          if [[ 'schedule' == ${{ github.event_name }} ]]; then
            make ut
          else
            make ut SKIP_TEST="race"
          fi

      - name: Build Verification Testing
        run: |
          make bvt

      - name: Archive Files
        run: |
          cd ${{ github.workspace }}
          tar zcvf code_quality_reports.tar.gz coverage.html lint.out

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        continue-on-error: true
        with:
          name: test_reports
          path: |
            ${{ github.workspace }}/code_quality_reports.tar.gz
          retention-days: 7 

// Code generated by command: go run x86.go -out x86.s -stubs x86_stubs.go. DO NOT EDIT.
// +build 386 amd64

#include "textflag.h"

// func andX86Asm(x []int64, y []int64, r []int64) int64
TEXT Â·andX86Asm(SB), NOSPLIT, $0-80
	MOVQ x_base+0(FP), DX
	MOVQ y_base+24(FP), R11
	MOVQ r_base+48(FP), SI
	MOVQ x_len+8(FP), AX
	MOVQ y_len+32(FP), CX
	MOVQ DX, DI
	MOVQ R11, R8
	MOVQ SI, R9
	SHLQ $0x03, AX
	SHLQ $0x03, CX
	ADDQ AX, DI
	ADDQ CX, R8
	XORQ AX, AX
	XORQ BX, BX
	XORQ CX, CX

loop:
	CMPQ  DX, DI
	JE    done
	CMPQ  R11, R8
	JE    done
	MOVQ  (DX), R10
	MOVQ  R10, (SI)
	CMPQ  R10, (R11)
	SETLE AL
	SETGE BL
	SETEQ CL
	SHLB  $0x03, AL
	SHLB  $0x03, BL
	SHLB  $0x03, CL
	ADDQ  AX, DX
	ADDQ  BX, R11
	ADDQ  CX, SI
	JMP   loop

done:
	SUBQ R9, SI
	SHRQ $0x03, SI
	MOVQ SI, ret+72(FP)
	RET

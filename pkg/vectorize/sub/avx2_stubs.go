// Code generated by command: go run avx2.go -out avx2.s -stubs avx2_stubs.go. DO NOT EDIT.

package sub

func int8SubAvx2Asm(x []int8, y []int8, r []int8)

func int8SubScalarAvx2Asm(x int8, y []int8, r []int8)

func int8SubByScalarAvx2Asm(x int8, y []int8, r []int8)

func int16SubAvx2Asm(x []int16, y []int16, r []int16)

func int16SubScalarAvx2Asm(x int16, y []int16, r []int16)

func int16SubByScalarAvx2Asm(x int16, y []int16, r []int16)

func int32SubAvx2Asm(x []int32, y []int32, r []int32)

func int32SubScalarAvx2Asm(x int32, y []int32, r []int32)

func int32SubByScalarAvx2Asm(x int32, y []int32, r []int32)

func int64SubAvx2Asm(x []int64, y []int64, r []int64)

func int64SubScalarAvx2Asm(x int64, y []int64, r []int64)

func int64SubByScalarAvx2Asm(x int64, y []int64, r []int64)

func uint8SubAvx2Asm(x []uint8, y []uint8, r []uint8)

func uint8SubScalarAvx2Asm(x uint8, y []uint8, r []uint8)

func uint8SubByScalarAvx2Asm(x uint8, y []uint8, r []uint8)

func uint16SubAvx2Asm(x []uint16, y []uint16, r []uint16)

func uint16SubScalarAvx2Asm(x uint16, y []uint16, r []uint16)

func uint16SubByScalarAvx2Asm(x uint16, y []uint16, r []uint16)

func uint32SubAvx2Asm(x []uint32, y []uint32, r []uint32)

func uint32SubScalarAvx2Asm(x uint32, y []uint32, r []uint32)

func uint32SubByScalarAvx2Asm(x uint32, y []uint32, r []uint32)

func uint64SubAvx2Asm(x []uint64, y []uint64, r []uint64)

func uint64SubScalarAvx2Asm(x uint64, y []uint64, r []uint64)

func uint64SubByScalarAvx2Asm(x uint64, y []uint64, r []uint64)

func float32SubAvx2Asm(x []float32, y []float32, r []float32)

func float32SubScalarAvx2Asm(x float32, y []float32, r []float32)

func float32SubByScalarAvx2Asm(x float32, y []float32, r []float32)

func float64SubAvx2Asm(x []float64, y []float64, r []float64)

func float64SubScalarAvx2Asm(x float64, y []float64, r []float64)

func float64SubByScalarAvx2Asm(x float64, y []float64, r []float64)

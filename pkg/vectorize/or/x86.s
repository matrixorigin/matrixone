// Code generated by command: go run x86.go -out x86.s -stubs x86_stubs.go. DO NOT EDIT.
// +build 386 amd64

#include "textflag.h"

// func orX86Asm(x []int64, y []int64, r []int64) int64
// Requires: CMOV
TEXT Â·orX86Asm(SB), NOSPLIT, $0-80
	MOVQ x_base+0(FP), SI
	MOVQ y_base+24(FP), DX
	MOVQ r_base+48(FP), DI
	MOVQ x_len+8(FP), AX
	MOVQ y_len+32(FP), BX
	MOVQ SI, CX
	MOVQ DX, R11
	MOVQ DI, R8
	SHLQ $0x03, AX
	SHLQ $0x03, BX
	ADDQ AX, CX
	ADDQ BX, R11
	XORQ AX, AX
	XORQ BX, BX

loop:
	CMPQ    SI, CX
	JE      tail2
	CMPQ    DX, R11
	JE      tail1
	MOVQ    (SI), R9
	MOVQ    (DX), R10
	CMPQ    R9, R10
	SETLE   AL
	SETGE   BL
	CMOVQGT R10, R9
	MOVQ    R9, (DI)
	SHLB    $0x03, AL
	SHLB    $0x03, BL
	ADDQ    AX, SI
	ADDQ    BX, DX
	ADDQ    $0x00000008, DI
	JMP     loop

tail2:
	MOVQ DX, SI
	MOVQ R11, CX

tail1:
	SUBQ SI, CX
	REP; MOVSB
	SUBQ R8, DI
	SHRQ $0x03, DI
	MOVQ DI, ret+72(FP)
	RET

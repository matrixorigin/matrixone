// Copyright 2023 Matrix Origin
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.0
// source: udf.proto

package udf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestType int32

const (
	RequestType_UnknownRequest RequestType = 0
	RequestType_DataRequest    RequestType = 1 // request with data for function result
	RequestType_PkgResponse    RequestType = 2 // response with package
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0: "UnknownRequest",
		1: "DataRequest",
		2: "PkgResponse",
	}
	RequestType_value = map[string]int32{
		"UnknownRequest": 0,
		"DataRequest":    1,
		"PkgResponse":    2,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_udf_proto_enumTypes[0].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_udf_proto_enumTypes[0]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{0}
}

type ResponseType int32

const (
	ResponseType_UnknownResponse ResponseType = 0
	ResponseType_DataResponse    ResponseType = 1 // response with function result
	ResponseType_PkgRequest      ResponseType = 2 // request for package
)

// Enum value maps for ResponseType.
var (
	ResponseType_name = map[int32]string{
		0: "UnknownResponse",
		1: "DataResponse",
		2: "PkgRequest",
	}
	ResponseType_value = map[string]int32{
		"UnknownResponse": 0,
		"DataResponse":    1,
		"PkgRequest":      2,
	}
)

func (x ResponseType) Enum() *ResponseType {
	p := new(ResponseType)
	*p = x
	return p
}

func (x ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_udf_proto_enumTypes[1].Descriptor()
}

func (ResponseType) Type() protoreflect.EnumType {
	return &file_udf_proto_enumTypes[1]
}

func (x ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseType.Descriptor instead.
func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{1}
}

type DataType int32

const (
	DataType_UNKNOWN    DataType = 0
	DataType_BOOL       DataType = 10
	DataType_INT8       DataType = 20
	DataType_INT16      DataType = 21
	DataType_INT32      DataType = 22
	DataType_INT64      DataType = 23
	DataType_UINT8      DataType = 30
	DataType_UINT16     DataType = 31
	DataType_UINT32     DataType = 32
	DataType_UINT64     DataType = 33
	DataType_FLOAT32    DataType = 40
	DataType_FLOAT64    DataType = 41
	DataType_CHAR       DataType = 50
	DataType_VARCHAR    DataType = 51
	DataType_TEXT       DataType = 52
	DataType_JSON       DataType = 53
	DataType_UUID       DataType = 54
	DataType_TIME       DataType = 60
	DataType_DATE       DataType = 61
	DataType_DATETIME   DataType = 62
	DataType_TIMESTAMP  DataType = 63
	DataType_DECIMAL64  DataType = 70
	DataType_DECIMAL128 DataType = 71
	DataType_BINARY     DataType = 80
	DataType_VARBINARY  DataType = 81
	DataType_BLOB       DataType = 82
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0:  "UNKNOWN",
		10: "BOOL",
		20: "INT8",
		21: "INT16",
		22: "INT32",
		23: "INT64",
		30: "UINT8",
		31: "UINT16",
		32: "UINT32",
		33: "UINT64",
		40: "FLOAT32",
		41: "FLOAT64",
		50: "CHAR",
		51: "VARCHAR",
		52: "TEXT",
		53: "JSON",
		54: "UUID",
		60: "TIME",
		61: "DATE",
		62: "DATETIME",
		63: "TIMESTAMP",
		70: "DECIMAL64",
		71: "DECIMAL128",
		80: "BINARY",
		81: "VARBINARY",
		82: "BLOB",
	}
	DataType_value = map[string]int32{
		"UNKNOWN":    0,
		"BOOL":       10,
		"INT8":       20,
		"INT16":      21,
		"INT32":      22,
		"INT64":      23,
		"UINT8":      30,
		"UINT16":     31,
		"UINT32":     32,
		"UINT64":     33,
		"FLOAT32":    40,
		"FLOAT64":    41,
		"CHAR":       50,
		"VARCHAR":    51,
		"TEXT":       52,
		"JSON":       53,
		"UUID":       54,
		"TIME":       60,
		"DATE":       61,
		"DATETIME":   62,
		"TIMESTAMP":  63,
		"DECIMAL64":  70,
		"DECIMAL128": 71,
		"BINARY":     80,
		"VARBINARY":  81,
		"BLOB":       82,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_udf_proto_enumTypes[2].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_udf_proto_enumTypes[2]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{2}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Udf     *Udf              `protobuf:"bytes,1,opt,name=udf,proto3" json:"udf,omitempty"`
	Vectors []*DataVector     `protobuf:"bytes,2,rep,name=vectors,proto3" json:"vectors,omitempty"`
	Length  int64             `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Type    RequestType       `protobuf:"varint,4,opt,name=type,proto3,enum=udf.RequestType" json:"type,omitempty"`
	Context map[string]string `protobuf:"bytes,5,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // currently just transfer, not used
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_udf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_udf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetUdf() *Udf {
	if x != nil {
		return x.Udf
	}
	return nil
}

func (x *Request) GetVectors() []*DataVector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

func (x *Request) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Request) GetType() RequestType {
	if x != nil {
		return x.Type
	}
	return RequestType_UnknownRequest
}

func (x *Request) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector *DataVector  `protobuf:"bytes,1,opt,name=vector,proto3" json:"vector,omitempty"`
	Type   ResponseType `protobuf:"varint,2,opt,name=type,proto3,enum=udf.ResponseType" json:"type,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_udf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_udf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetVector() *DataVector {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Response) GetType() ResponseType {
	if x != nil {
		return x.Type
	}
	return ResponseType_UnknownResponse
}

type Udf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handler      string   `protobuf:"bytes,1,opt,name=handler,proto3" json:"handler,omitempty"`
	IsImport     bool     `protobuf:"varint,2,opt,name=isImport,proto3" json:"isImport,omitempty"`
	Body         string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	ImportPkg    *Package `protobuf:"bytes,4,opt,name=importPkg,proto3" json:"importPkg,omitempty"`
	RetType      DataType `protobuf:"varint,5,opt,name=retType,proto3,enum=udf.DataType" json:"retType,omitempty"`
	Language     string   `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	ModifiedTime string   `protobuf:"bytes,7,opt,name=modifiedTime,proto3" json:"modifiedTime,omitempty"`
	Db           string   `protobuf:"bytes,8,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *Udf) Reset() {
	*x = Udf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_udf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Udf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Udf) ProtoMessage() {}

func (x *Udf) ProtoReflect() protoreflect.Message {
	mi := &file_udf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Udf.ProtoReflect.Descriptor instead.
func (*Udf) Descriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{2}
}

func (x *Udf) GetHandler() string {
	if x != nil {
		return x.Handler
	}
	return ""
}

func (x *Udf) GetIsImport() bool {
	if x != nil {
		return x.IsImport
	}
	return false
}

func (x *Udf) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Udf) GetImportPkg() *Package {
	if x != nil {
		return x.ImportPkg
	}
	return nil
}

func (x *Udf) GetRetType() DataType {
	if x != nil {
		return x.RetType
	}
	return DataType_UNKNOWN
}

func (x *Udf) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Udf) GetModifiedTime() string {
	if x != nil {
		return x.ModifiedTime
	}
	return ""
}

func (x *Udf) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Last bool   `protobuf:"varint,2,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_udf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_udf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{3}
}

func (x *Package) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Package) GetLast() bool {
	if x != nil {
		return x.Last
	}
	return false
}

type DataVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []*Data  `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Const  bool     `protobuf:"varint,2,opt,name=const,proto3" json:"const,omitempty"`
	Length int64    `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Type   DataType `protobuf:"varint,4,opt,name=type,proto3,enum=udf.DataType" json:"type,omitempty"`
	Scale  int32    `protobuf:"varint,5,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *DataVector) Reset() {
	*x = DataVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_udf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVector) ProtoMessage() {}

func (x *DataVector) ProtoReflect() protoreflect.Message {
	mi := &file_udf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataVector.ProtoReflect.Descriptor instead.
func (*DataVector) Descriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{4}
}

func (x *DataVector) GetData() []*Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataVector) GetConst() bool {
	if x != nil {
		return x.Const
	}
	return false
}

func (x *DataVector) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *DataVector) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_UNKNOWN
}

func (x *DataVector) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Val:
	//
	//	*Data_BoolVal
	//	*Data_IntVal
	//	*Data_Int64Val
	//	*Data_UintVal
	//	*Data_Uint64Val
	//	*Data_FloatVal
	//	*Data_DoubleVal
	//	*Data_StringVal
	//	*Data_BytesVal
	Val isData_Val `protobuf_oneof:"val"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_udf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_udf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_udf_proto_rawDescGZIP(), []int{5}
}

func (m *Data) GetVal() isData_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (x *Data) GetBoolVal() bool {
	if x, ok := x.GetVal().(*Data_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

func (x *Data) GetIntVal() int32 {
	if x, ok := x.GetVal().(*Data_IntVal); ok {
		return x.IntVal
	}
	return 0
}

func (x *Data) GetInt64Val() int64 {
	if x, ok := x.GetVal().(*Data_Int64Val); ok {
		return x.Int64Val
	}
	return 0
}

func (x *Data) GetUintVal() uint32 {
	if x, ok := x.GetVal().(*Data_UintVal); ok {
		return x.UintVal
	}
	return 0
}

func (x *Data) GetUint64Val() uint64 {
	if x, ok := x.GetVal().(*Data_Uint64Val); ok {
		return x.Uint64Val
	}
	return 0
}

func (x *Data) GetFloatVal() float32 {
	if x, ok := x.GetVal().(*Data_FloatVal); ok {
		return x.FloatVal
	}
	return 0
}

func (x *Data) GetDoubleVal() float64 {
	if x, ok := x.GetVal().(*Data_DoubleVal); ok {
		return x.DoubleVal
	}
	return 0
}

func (x *Data) GetStringVal() string {
	if x, ok := x.GetVal().(*Data_StringVal); ok {
		return x.StringVal
	}
	return ""
}

func (x *Data) GetBytesVal() []byte {
	if x, ok := x.GetVal().(*Data_BytesVal); ok {
		return x.BytesVal
	}
	return nil
}

type isData_Val interface {
	isData_Val()
}

type Data_BoolVal struct {
	BoolVal bool `protobuf:"varint,1,opt,name=boolVal,proto3,oneof"` // bool
}

type Data_IntVal struct {
	IntVal int32 `protobuf:"zigzag32,2,opt,name=intVal,proto3,oneof"` // int8, int16, int32
}

type Data_Int64Val struct {
	Int64Val int64 `protobuf:"zigzag64,3,opt,name=int64Val,proto3,oneof"` // int64
}

type Data_UintVal struct {
	UintVal uint32 `protobuf:"varint,4,opt,name=uintVal,proto3,oneof"` // uint8, uint16, uint32
}

type Data_Uint64Val struct {
	Uint64Val uint64 `protobuf:"varint,5,opt,name=uint64Val,proto3,oneof"` // uint64
}

type Data_FloatVal struct {
	FloatVal float32 `protobuf:"fixed32,6,opt,name=floatVal,proto3,oneof"` // float32
}

type Data_DoubleVal struct {
	DoubleVal float64 `protobuf:"fixed64,7,opt,name=doubleVal,proto3,oneof"` // float64
}

type Data_StringVal struct {
	StringVal string `protobuf:"bytes,8,opt,name=stringVal,proto3,oneof"` // char, varchar, text, json, uuid | time, date, datetime, timestamp | Decimal64, Decimal128
}

type Data_BytesVal struct {
	BytesVal []byte `protobuf:"bytes,9,opt,name=bytesVal,proto3,oneof"` // binary, varbinary, blob
}

func (*Data_BoolVal) isData_Val() {}

func (*Data_IntVal) isData_Val() {}

func (*Data_Int64Val) isData_Val() {}

func (*Data_UintVal) isData_Val() {}

func (*Data_Uint64Val) isData_Val() {}

func (*Data_FloatVal) isData_Val() {}

func (*Data_DoubleVal) isData_Val() {}

func (*Data_StringVal) isData_Val() {}

func (*Data_BytesVal) isData_Val() {}

var File_udf_proto protoreflect.FileDescriptor

var file_udf_proto_rawDesc = []byte{
	0x0a, 0x09, 0x75, 0x64, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x75, 0x64, 0x66,
	0x22, 0xff, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03,
	0x75, 0x64, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x64, 0x66, 0x2e,
	0x55, 0x64, 0x66, 0x52, 0x03, 0x75, 0x64, 0x66, 0x12, 0x29, 0x0a, 0x07, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x64, 0x66, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x64, 0x66, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x64, 0x66, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x5a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x75, 0x64, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x75, 0x64, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf4,
	0x01, 0x0a, 0x03, 0x55, 0x64, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x2a, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6b, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x64, 0x66, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6b, 0x67, 0x12, 0x27, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x75, 0x64, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x64, 0x62, 0x22, 0x31, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x74,
	0x61, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x64, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x75, 0x64, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x99, 0x02,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x11, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x48, 0x00,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x07, 0x75, 0x69,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x75,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x09, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56,
	0x61, 0x6c, 0x42, 0x05, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x2a, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x6b, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x2a, 0x45,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6b, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x02, 0x2a, 0xbf, 0x02, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x54,
	0x38, 0x10, 0x14, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x15, 0x12, 0x09,
	0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x16, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54,
	0x36, 0x34, 0x10, 0x17, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x1e, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x55,
	0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x20, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x36,
	0x34, 0x10, 0x21, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x32, 0x10, 0x28,
	0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x29, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x48, 0x41, 0x52, 0x10, 0x32, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x41, 0x52, 0x43, 0x48,
	0x41, 0x52, 0x10, 0x33, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x34, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x35, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x10, 0x36, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x3c, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x3d, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49,
	0x4d, 0x45, 0x10, 0x3e, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d,
	0x50, 0x10, 0x3f, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x36, 0x34,
	0x10, 0x46, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x31, 0x32, 0x38,
	0x10, 0x47, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x50, 0x12, 0x0d,
	0x0a, 0x09, 0x56, 0x41, 0x52, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x51, 0x12, 0x08, 0x0a,
	0x04, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x52, 0x32, 0x33, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x0c, 0x2e, 0x75, 0x64, 0x66, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x75, 0x64, 0x66, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x6f, 0x6e,
	0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x64, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_udf_proto_rawDescOnce sync.Once
	file_udf_proto_rawDescData = file_udf_proto_rawDesc
)

func file_udf_proto_rawDescGZIP() []byte {
	file_udf_proto_rawDescOnce.Do(func() {
		file_udf_proto_rawDescData = protoimpl.X.CompressGZIP(file_udf_proto_rawDescData)
	})
	return file_udf_proto_rawDescData
}

var file_udf_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_udf_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_udf_proto_goTypes = []interface{}{
	(RequestType)(0),   // 0: udf.RequestType
	(ResponseType)(0),  // 1: udf.ResponseType
	(DataType)(0),      // 2: udf.DataType
	(*Request)(nil),    // 3: udf.Request
	(*Response)(nil),   // 4: udf.Response
	(*Udf)(nil),        // 5: udf.Udf
	(*Package)(nil),    // 6: udf.Package
	(*DataVector)(nil), // 7: udf.DataVector
	(*Data)(nil),       // 8: udf.Data
	nil,                // 9: udf.Request.ContextEntry
}
var file_udf_proto_depIdxs = []int32{
	5,  // 0: udf.Request.udf:type_name -> udf.Udf
	7,  // 1: udf.Request.vectors:type_name -> udf.DataVector
	0,  // 2: udf.Request.type:type_name -> udf.RequestType
	9,  // 3: udf.Request.context:type_name -> udf.Request.ContextEntry
	7,  // 4: udf.Response.vector:type_name -> udf.DataVector
	1,  // 5: udf.Response.type:type_name -> udf.ResponseType
	6,  // 6: udf.Udf.importPkg:type_name -> udf.Package
	2,  // 7: udf.Udf.retType:type_name -> udf.DataType
	8,  // 8: udf.DataVector.data:type_name -> udf.Data
	2,  // 9: udf.DataVector.type:type_name -> udf.DataType
	3,  // 10: udf.Service.run:input_type -> udf.Request
	4,  // 11: udf.Service.run:output_type -> udf.Response
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_udf_proto_init() }
func file_udf_proto_init() {
	if File_udf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_udf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_udf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_udf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Udf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_udf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_udf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_udf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_udf_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Data_BoolVal)(nil),
		(*Data_IntVal)(nil),
		(*Data_Int64Val)(nil),
		(*Data_UintVal)(nil),
		(*Data_Uint64Val)(nil),
		(*Data_FloatVal)(nil),
		(*Data_DoubleVal)(nil),
		(*Data_StringVal)(nil),
		(*Data_BytesVal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_udf_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_udf_proto_goTypes,
		DependencyIndexes: file_udf_proto_depIdxs,
		EnumInfos:         file_udf_proto_enumTypes,
		MessageInfos:      file_udf_proto_msgTypes,
	}.Build()
	File_udf_proto = out.File
	file_udf_proto_rawDesc = nil
	file_udf_proto_goTypes = nil
	file_udf_proto_depIdxs = nil
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const FLOAT = 57438
const HEXNUM = 57439
const BIT_LITERAL = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const IVFFLAT = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const LISTS = 57667
const SIMILARITY_FUNCTION = 57668
const EXPIRE = 57669
const ACCOUNT = 57670
const ACCOUNTS = 57671
const UNLOCK = 57672
const DAY = 57673
const NEVER = 57674
const PUMP = 57675
const MYSQL_COMPATIBILITY_MODE = 57676
const MODIFY = 57677
const CHANGE = 57678
const SECOND = 57679
const ASCII = 57680
const COALESCE = 57681
const COLLATION = 57682
const HOUR = 57683
const MICROSECOND = 57684
const MINUTE = 57685
const MONTH = 57686
const QUARTER = 57687
const REPEAT = 57688
const REVERSE = 57689
const ROW_COUNT = 57690
const WEEK = 57691
const REVOKE = 57692
const FUNCTION = 57693
const PRIVILEGES = 57694
const TABLESPACE = 57695
const EXECUTE = 57696
const SUPER = 57697
const GRANT = 57698
const OPTION = 57699
const REFERENCES = 57700
const REPLICATION = 57701
const SLAVE = 57702
const CLIENT = 57703
const USAGE = 57704
const RELOAD = 57705
const FILE = 57706
const TEMPORARY = 57707
const ROUTINE = 57708
const EVENT = 57709
const SHUTDOWN = 57710
const NULLX = 57711
const AUTO_INCREMENT = 57712
const APPROXNUM = 57713
const SIGNED = 57714
const UNSIGNED = 57715
const ZEROFILL = 57716
const ENGINES = 57717
const LOW_CARDINALITY = 57718
const AUTOEXTEND_SIZE = 57719
const ADMIN_NAME = 57720
const RANDOM = 57721
const SUSPEND = 57722
const ATTRIBUTE = 57723
const HISTORY = 57724
const REUSE = 57725
const CURRENT = 57726
const OPTIONAL = 57727
const FAILED_LOGIN_ATTEMPTS = 57728
const PASSWORD_LOCK_TIME = 57729
const UNBOUNDED = 57730
const SECONDARY = 57731
const RESTRICTED = 57732
const USER = 57733
const IDENTIFIED = 57734
const CIPHER = 57735
const ISSUER = 57736
const X509 = 57737
const SUBJECT = 57738
const SAN = 57739
const REQUIRE = 57740
const SSL = 57741
const NONE = 57742
const PASSWORD = 57743
const SHARED = 57744
const EXCLUSIVE = 57745
const MAX_QUERIES_PER_HOUR = 57746
const MAX_UPDATES_PER_HOUR = 57747
const MAX_CONNECTIONS_PER_HOUR = 57748
const MAX_USER_CONNECTIONS = 57749
const FORMAT = 57750
const VERBOSE = 57751
const CONNECTION = 57752
const TRIGGERS = 57753
const PROFILES = 57754
const LOAD = 57755
const INLINE = 57756
const INFILE = 57757
const TERMINATED = 57758
const OPTIONALLY = 57759
const ENCLOSED = 57760
const ESCAPED = 57761
const STARTING = 57762
const LINES = 57763
const ROWS = 57764
const IMPORT = 57765
const DISCARD = 57766
const JSONTYPE = 57767
const MODUMP = 57768
const OVER = 57769
const PRECEDING = 57770
const FOLLOWING = 57771
const GROUPS = 57772
const DATABASES = 57773
const TABLES = 57774
const SEQUENCES = 57775
const EXTENDED = 57776
const FULL = 57777
const PROCESSLIST = 57778
const FIELDS = 57779
const COLUMNS = 57780
const OPEN = 57781
const ERRORS = 57782
const WARNINGS = 57783
const INDEXES = 57784
const SCHEMAS = 57785
const NODE = 57786
const LOCKS = 57787
const ROLES = 57788
const TABLE_NUMBER = 57789
const COLUMN_NUMBER = 57790
const TABLE_VALUES = 57791
const TABLE_SIZE = 57792
const NAMES = 57793
const GLOBAL = 57794
const PERSIST = 57795
const SESSION = 57796
const ISOLATION = 57797
const LEVEL = 57798
const READ = 57799
const WRITE = 57800
const ONLY = 57801
const REPEATABLE = 57802
const COMMITTED = 57803
const UNCOMMITTED = 57804
const SERIALIZABLE = 57805
const LOCAL = 57806
const EVENTS = 57807
const PLUGINS = 57808
const CURRENT_TIMESTAMP = 57809
const DATABASE = 57810
const CURRENT_TIME = 57811
const LOCALTIME = 57812
const LOCALTIMESTAMP = 57813
const UTC_DATE = 57814
const UTC_TIME = 57815
const UTC_TIMESTAMP = 57816
const REPLACE = 57817
const CONVERT = 57818
const SEPARATOR = 57819
const TIMESTAMPDIFF = 57820
const CURRENT_DATE = 57821
const CURRENT_USER = 57822
const CURRENT_ROLE = 57823
const SECOND_MICROSECOND = 57824
const MINUTE_MICROSECOND = 57825
const MINUTE_SECOND = 57826
const HOUR_MICROSECOND = 57827
const HOUR_SECOND = 57828
const HOUR_MINUTE = 57829
const DAY_MICROSECOND = 57830
const DAY_SECOND = 57831
const DAY_MINUTE = 57832
const DAY_HOUR = 57833
const YEAR_MONTH = 57834
const SQL_TSI_HOUR = 57835
const SQL_TSI_DAY = 57836
const SQL_TSI_WEEK = 57837
const SQL_TSI_MONTH = 57838
const SQL_TSI_QUARTER = 57839
const SQL_TSI_YEAR = 57840
const SQL_TSI_SECOND = 57841
const SQL_TSI_MINUTE = 57842
const RECURSIVE = 57843
const CONFIG = 57844
const DRAINER = 57845
const SOURCE = 57846
const STREAM = 57847
const HEADERS = 57848
const CONNECTOR = 57849
const CONNECTORS = 57850
const DAEMON = 57851
const PAUSE = 57852
const CANCEL = 57853
const TASK = 57854
const RESUME = 57855
const MATCH = 57856
const AGAINST = 57857
const BOOLEAN = 57858
const LANGUAGE = 57859
const WITH = 57860
const QUERY = 57861
const EXPANSION = 57862
const WITHOUT = 57863
const VALIDATION = 57864
const ADDDATE = 57865
const BIT_AND = 57866
const BIT_OR = 57867
const BIT_XOR = 57868
const CAST = 57869
const COUNT = 57870
const APPROX_COUNT = 57871
const APPROX_COUNT_DISTINCT = 57872
const APPROX_PERCENTILE = 57873
const CURDATE = 57874
const CURTIME = 57875
const DATE_ADD = 57876
const DATE_SUB = 57877
const EXTRACT = 57878
const GROUP_CONCAT = 57879
const MAX = 57880
const MID = 57881
const MIN = 57882
const NOW = 57883
const POSITION = 57884
const SESSION_USER = 57885
const STD = 57886
const STDDEV = 57887
const MEDIAN = 57888
const CLUSTER_CENTERS = 57889
const SPHERICAL_KMEANS = 57890
const STDDEV_POP = 57891
const STDDEV_SAMP = 57892
const SUBDATE = 57893
const SUBSTR = 57894
const SUBSTRING = 57895
const SUM = 57896
const SYSDATE = 57897
const SYSTEM_USER = 57898
const TRANSLATE = 57899
const TRIM = 57900
const VARIANCE = 57901
const VAR_POP = 57902
const VAR_SAMP = 57903
const AVG = 57904
const RANK = 57905
const ROW_NUMBER = 57906
const DENSE_RANK = 57907
const BIT_CAST = 57908
const NEXTVAL = 57909
const SETVAL = 57910
const CURRVAL = 57911
const LASTVAL = 57912
const ARROW = 57913
const ROW = 57914
const OUTFILE = 57915
const HEADER = 57916
const MAX_FILE_SIZE = 57917
const FORCE_QUOTE = 57918
const PARALLEL = 57919
const UNUSED = 57920
const BINDINGS = 57921
const DO = 57922
const DECLARE = 57923
const LOOP = 57924
const WHILE = 57925
const LEAVE = 57926
const ITERATE = 57927
const UNTIL = 57928
const CALL = 57929
const PREV = 57930
const SLIDING = 57931
const FILL = 57932
const SPBEGIN = 57933
const BACKEND = 57934
const SERVERS = 57935
const HANDLER = 57936
const PERCENT = 57937
const SAMPLE = 57938
const KILL = 57939
const BACKUP = 57940
const FILESYSTEM = 57941
const PARALLELISM = 57942
const QUERY_RESULT = 57943

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"FLOAT",
	"HEXNUM",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"SIMILARITY_FUNCTION",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"PARALLELISM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10945

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 690,
	21, 690,
	-2, 683,
	-1, 137,
	236, 1073,
	238, 980,
	-2, 1028,
	-1, 161,
	42, 519,
	238, 519,
	265, 526,
	266, 526,
	459, 519,
	-2, 552,
	-1, 202,
	622, 1813,
	-2, 435,
	-1, 496,
	622, 1929,
	-2, 341,
	-1, 554,
	622, 1988,
	-2, 339,
	-1, 555,
	622, 1989,
	-2, 340,
	-1, 556,
	622, 1990,
	-2, 342,
	-1, 681,
	317, 133,
	431, 133,
	432, 133,
	-2, 1718,
	-1, 745,
	81, 1505,
	-2, 1868,
	-1, 746,
	81, 1523,
	-2, 1839,
	-1, 750,
	81, 1524,
	-2, 1867,
	-1, 778,
	81, 1435,
	-2, 2061,
	-1, 779,
	81, 1436,
	-2, 2060,
	-1, 780,
	81, 1437,
	-2, 2050,
	-1, 781,
	81, 2021,
	-2, 2043,
	-1, 782,
	81, 2022,
	-2, 2044,
	-1, 783,
	81, 2023,
	-2, 2052,
	-1, 784,
	81, 2024,
	-2, 2032,
	-1, 785,
	81, 2025,
	-2, 2041,
	-1, 786,
	81, 2026,
	-2, 2053,
	-1, 787,
	81, 2027,
	-2, 2054,
	-1, 788,
	81, 2028,
	-2, 2059,
	-1, 789,
	81, 2029,
	-2, 2064,
	-1, 790,
	81, 2030,
	-2, 2065,
	-1, 791,
	81, 2031,
	-2, 2020,
	-1, 792,
	81, 1501,
	-2, 1904,
	-1, 793,
	81, 1502,
	-2, 1702,
	-1, 794,
	81, 1503,
	-2, 1912,
	-1, 795,
	81, 1504,
	-2, 1711,
	-1, 797,
	81, 1507,
	-2, 1719,
	-1, 798,
	81, 1508,
	-2, 1936,
	-1, 800,
	81, 1511,
	-2, 1738,
	-1, 802,
	81, 1513,
	-2, 1947,
	-1, 803,
	81, 1514,
	-2, 1946,
	-1, 804,
	81, 1515,
	-2, 1782,
	-1, 805,
	81, 1516,
	-2, 1863,
	-1, 808,
	81, 1519,
	-2, 1959,
	-1, 810,
	81, 1521,
	-2, 1962,
	-1, 811,
	81, 1522,
	-2, 1964,
	-1, 812,
	81, 1525,
	-2, 1972,
	-1, 813,
	81, 1526,
	-2, 1848,
	-1, 814,
	81, 1527,
	-2, 1893,
	-1, 815,
	81, 1528,
	-2, 1858,
	-1, 816,
	81, 1529,
	-2, 1883,
	-1, 827,
	81, 1413,
	-2, 2055,
	-1, 828,
	81, 1414,
	-2, 2056,
	-1, 829,
	81, 1415,
	-2, 2057,
	-1, 913,
	454, 552,
	455, 552,
	-2, 520,
	-1, 959,
	122, 1702,
	133, 1702,
	153, 1702,
	-2, 1676,
	-1, 1068,
	21, 717,
	-2, 666,
	-1, 1169,
	11, 690,
	21, 690,
	-2, 1300,
	-1, 1244,
	21, 717,
	-2, 666,
	-1, 1555,
	81, 1576,
	-2, 1865,
	-1, 1556,
	81, 1577,
	-2, 1866,
	-1, 1698,
	82, 866,
	-2, 872,
	-1, 2105,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	278, 1018,
	-2, 1011,
	-1, 2245,
	11, 690,
	21, 690,
	-2, 810,
	-1, 2277,
	82, 1662,
	154, 1662,
	-2, 1850,
	-1, 2278,
	82, 1662,
	154, 1662,
	-2, 1849,
	-1, 2279,
	82, 1638,
	154, 1638,
	-2, 1836,
	-1, 2280,
	82, 1639,
	154, 1639,
	-2, 1841,
	-1, 2281,
	82, 1640,
	154, 1640,
	-2, 1770,
	-1, 2282,
	82, 1641,
	154, 1641,
	-2, 1764,
	-1, 2283,
	82, 1642,
	154, 1642,
	-2, 1692,
	-1, 2284,
	82, 1643,
	154, 1643,
	-2, 1838,
	-1, 2285,
	82, 1644,
	154, 1644,
	-2, 1768,
	-1, 2286,
	82, 1645,
	154, 1645,
	-2, 1763,
	-1, 2287,
	82, 1646,
	154, 1646,
	-2, 1752,
	-1, 2288,
	82, 1662,
	154, 1662,
	-2, 1753,
	-1, 2289,
	82, 1662,
	154, 1662,
	-2, 1754,
	-1, 2291,
	82, 1651,
	154, 1651,
	-2, 1883,
	-1, 2292,
	82, 1629,
	154, 1629,
	-2, 1868,
	-1, 2293,
	82, 1660,
	154, 1660,
	-2, 1839,
	-1, 2294,
	82, 1660,
	154, 1660,
	-2, 1867,
	-1, 2295,
	82, 1660,
	154, 1660,
	-2, 1720,
	-1, 2296,
	82, 1658,
	154, 1658,
	-2, 1858,
	-1, 2297,
	82, 1655,
	154, 1655,
	-2, 1743,
	-1, 2298,
	81, 1610,
	82, 1610,
	154, 1610,
	389, 1610,
	390, 1610,
	391, 1610,
	-2, 1691,
	-1, 2299,
	81, 1611,
	82, 1611,
	154, 1611,
	389, 1611,
	390, 1611,
	391, 1611,
	-2, 1693,
	-1, 2300,
	81, 1612,
	82, 1612,
	154, 1612,
	389, 1612,
	390, 1612,
	391, 1612,
	-2, 1909,
	-1, 2301,
	81, 1614,
	82, 1614,
	154, 1614,
	389, 1614,
	390, 1614,
	391, 1614,
	-2, 1840,
	-1, 2302,
	81, 1616,
	82, 1616,
	154, 1616,
	389, 1616,
	390, 1616,
	391, 1616,
	-2, 1822,
	-1, 2303,
	81, 1618,
	82, 1618,
	154, 1618,
	389, 1618,
	390, 1618,
	391, 1618,
	-2, 1769,
	-1, 2304,
	81, 1620,
	82, 1620,
	154, 1620,
	389, 1620,
	390, 1620,
	391, 1620,
	-2, 1748,
	-1, 2305,
	81, 1621,
	82, 1621,
	154, 1621,
	389, 1621,
	390, 1621,
	391, 1621,
	-2, 1749,
	-1, 2306,
	81, 1623,
	82, 1623,
	154, 1623,
	389, 1623,
	390, 1623,
	391, 1623,
	-2, 1690,
	-1, 2307,
	82, 1665,
	154, 1665,
	389, 1665,
	390, 1665,
	391, 1665,
	-2, 1725,
	-1, 2308,
	82, 1665,
	154, 1665,
	389, 1665,
	390, 1665,
	391, 1665,
	-2, 1739,
	-1, 2309,
	82, 1668,
	154, 1668,
	389, 1668,
	390, 1668,
	391, 1668,
	-2, 1721,
	-1, 2310,
	82, 1668,
	154, 1668,
	389, 1668,
	390, 1668,
	391, 1668,
	-2, 1785,
	-1, 2311,
	82, 1665,
	154, 1665,
	389, 1665,
	390, 1665,
	391, 1665,
	-2, 1806,
	-1, 2501,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	278, 1018,
	-2, 1012,
	-1, 2514,
	79, 611,
	154, 611,
	-2, 1186,
	-1, 2870,
	191, 1018,
	302, 1268,
	-2, 1240,
	-1, 3027,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1129,
	-1, 3029,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1129,
	-1, 3039,
	79, 611,
	154, 611,
	-2, 1187,
	-1, 3047,
	191, 1018,
	302, 1268,
	-2, 1241,
	-1, 3182,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1130,
	-1, 3574,
	82, 1091,
	154, 1091,
	-2, 1018,
	-1, 3578,
	82, 1091,
	154, 1091,
	-2, 1018,
	-1, 3592,
	82, 1095,
	154, 1095,
	-2, 1018,
	-1, 3600,
	82, 1096,
	154, 1096,
	-2, 1018,
}

const yyPrivate = 57344

const yyLast = 43679

var yyAct = [...]int{
	712, 1779, 3596, 3595, 3578, 3577, 191, 3586, 3557, 3438,
	1535, 689, 691, 3503, 685, 714, 3526, 3464, 3446, 2536,
	3447, 3364, 3349, 699, 2888, 3129, 2361, 3061, 1385, 3340,
	3123, 3223, 1531, 2954, 1202, 3368, 3167, 3170, 3260, 3249,
	588, 2955, 742, 3169, 3297, 1324, 1069, 2471, 958, 3127,
	604, 1461, 609, 609, 2997, 3350, 3352, 693, 609, 625,
	634, 3118, 1731, 634, 3014, 3174, 1733, 2147, 3048, 3188,
	3146, 3181, 2952, 2517, 1538, 2802, 2633, 2842, 2634, 3184,
	2632, 1868, 2831, 3003, 2616, 2556, 2885, 2867, 2427, 3030,
	2626, 645, 1591, 1833, 1936, 1971, 176, 2800, 2695, 2940,
	2275, 2874, 2273, 2655, 639, 2150, 2920, 2629, 2491, 1865,
	2815, 2812, 2239, 2873, 683, 2848, 2810, 2803, 2115, 1378,
	1062, 2502, 2223, 2082, 2073, 1956, 1967, 1883, 2344, 1944,
	1945, 1937, 2668, 1910, 1678, 2738, 1465, 2177, 1299, 2072,
	889, 2327, 55, 688, 2678, 1457, 1861, 1966, 2240, 1836,
	2228, 1470, 1462, 1297, 1834, 2475, 2480, 2538, 2148, 1450,
	1771, 2509, 1761, 187, 8, 588, 186, 7, 6, 2114,
	1708, 2271, 1968, 1014, 1487, 603, 2396, 1529, 2001, 1424,
	1394, 116, 1364, 2096, 35, 1978, 1520, 2805, 682, 2804,
	1585, 191, 1743, 191, 2143, 1005, 1006, 2428, 1080, 692,
	1569, 1943, 609, 999, 1000, 1940, 700, 1431, 1004, 1528,
	921, 26, 1363, 690, 1926, 951, 1900, 2247, 15, 1361,
	1309, 1707, 618, 1313, 1742, 831, 888, 13, 1417, 14,
	1592, 1534, 23, 647, 16, 36, 177, 10, 32, 1423,
	866, 621, 1325, 1203, 1333, 952, 886, 633, 908, 871,
	167, 1242, 1975, 644, 3291, 173, 2461, 2461, 2461, 1002,
	1985, 3017, 2947, 2384, 2333, 648, 2331, 2330, 1691, 2328,
	630, 1434, 997, 998, 1438, 175, 605, 626, 1276, 2071,
	1261, 2785, 833, 998, 834, 587, 628, 1001, 629, 1003,
	998, 2782, 2787, 2784, 631, 3511, 1346, 627, 3051, 1685,
	2453, 2451, 1257, 1471, 1436, 3116, 614, 2691, 2689, 1915,
	637, 967, 3256, 1334, 1138, 1139, 1140, 1137, 1138, 1139,
	1140, 1137, 3250, 3119, 2953, 1953, 3354, 1939, 1197, 832,
	2764, 3429, 2185, 3156, 843, 1101, 3063, 3308, 2370, 8,
	2455, 1972, 7, 2470, 996, 2472, 3147, 2107, 2378, 3054,
	964, 3277, 3387, 966, 1404, 1403, 1262, 1402, 1841, 3049,
	970, 968, 174, 969, 3071, 3072, 174, 51, 163, 138,
	3050, 1271, 1702, 2762, 1983, 174, 1289, 174, 51, 163,
	138, 3309, 822, 643, 821, 823, 824, 2100, 825, 826,
	174, 174, 2265, 1485, 174, 164, 1135, 174, 2253, 174,
	2266, 2252, 156, 1365, 2254, 1367, 165, 3055, 1478, 2661,
	608, 608, 174, 51, 163, 138, 616, 1263, 684, 1138,
	1139, 1140, 1137, 1482, 1845, 115, 3486, 174, 51, 163,
	138, 168, 3279, 2662, 2663, 168, 1846, 1847, 1475, 115,
	103, 1878, 2710, 844, 1484, 2703, 168, 115, 1521, 2345,
	962, 1525, 963, 1342, 2786, 930, 1343, 1692, 1693, 1477,
	168, 2477, 1757, 168, 2783, 1321, 168, 3139, 168, 1331,
	1332, 2478, 1329, 1537, 1133, 1524, 1328, 1331, 1332, 3450,
	3451, 168, 961, 940, 1128, 960, 3357, 1505, 3356, 3426,
	1116, 3357, 3420, 1117, 3355, 3484, 168, 2060, 1612, 3472,
	1270, 3070, 3342, 2151, 3356, 3419, 3355, 3418, 684, 3422,
	3468, 3469, 3261, 3262, 3263, 3264, 3258, 2697, 2696, 2698,
	2476, 1119, 120, 121, 3345, 122, 123, 2956, 3059, 2956,
	3253, 3342, 1541, 1109, 1083, 2365, 1111, 1074, 1987, 2572,
	1437, 1435, 1345, 3361, 2969, 1856, 2456, 1852, 3004, 2824,
	3056, 3060, 3058, 3057, 1516, 1862, 3011, 1526, 2464, 1979,
	616, 3161, 877, 2217, 1112, 1626, 2094, 1923, 1131, 1132,
	3431, 3432, 2826, 3073, 1444, 1443, 3424, 2726, 3285, 2183,
	1523, 2728, 3427, 3428, 2816, 1130, 2375, 1104, 3065, 3066,
	3117, 2690, 3288, 137, 162, 172, 2820, 101, 678, 1114,
	2620, 680, 3138, 2220, 2821, 2822, 679, 2219, 609, 3158,
	3140, 1083, 2224, 3488, 3479, 161, 155, 154, 609, 1073,
	2823, 2840, 57, 2886, 2887, 1984, 936, 934, 137, 935,
	172, 3449, 2849, 3073, 3085, 3313, 634, 634, 1072, 609,
	3379, 3374, 1105, 2510, 636, 3052, 1540, 1539, 635, 2625,
	161, 3064, 2102, 1273, 1272, 3273, 2454, 3274, 3078, 1608,
	1355, 1319, 1115, 3369, 3587, 1605, 3571, 1107, 3517, 1607,
	1604, 1606, 1610, 1611, 3305, 2483, 1260, 1609, 3483, 1110,
	1113, 3440, 3524, 157, 158, 159, 1308, 1008, 3551, 3088,
	1876, 1877, 2194, 1126, 1127, 3360, 3273, 1522, 3274, 1612,
	3214, 1141, 1344, 3436, 3437, 1106, 3440, 3529, 2818, 1170,
	2193, 3276, 166, 3130, 3268, 941, 1973, 1179, 1087, 1973,
	3203, 3290, 1973, 2972, 2732, 2460, 2489, 1085, 1084, 2214,
	2215, 1066, 111, 1374, 1096, 937, 160, 1373, 112, 1118,
	1094, 1186, 3275, 1306, 1073, 1305, 1547, 1550, 1551, 1323,
	1322, 1304, 3276, 1990, 1992, 1993, 2890, 1548, 3588, 3558,
	3298, 1063, 998, 1207, 998, 3582, 998, 967, 998, 2781,
	2146, 998, 998, 3031, 3594, 3430, 3307, 3114, 2002, 2959,
	1078, 3069, 1108, 3275, 632, 2495, 2497, 2498, 2499, 2496,
	1974, 1277, 3314, 1986, 879, 113, 880, 2472, 939, 1331,
	1332, 1206, 643, 2329, 1085, 1084, 964, 1439, 50, 966,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1615, 1616, 1617, 1618, 1619, 1620, 1613, 1614, 3339,
	1362, 3306, 3209, 2882, 630, 630, 832, 967, 2371, 3489,
	1282, 626, 626, 3530, 2452, 632, 52, 2257, 3157, 3068,
	628, 628, 629, 629, 3280, 1268, 604, 52, 631, 631,
	1608, 627, 627, 2379, 1076, 1077, 1605, 1068, 1331, 1332,
	1607, 1604, 1606, 1610, 1611, 938, 964, 1240, 1609, 966,
	1245, 2827, 1320, 1089, 1090, 139, 1863, 3286, 889, 139,
	2729, 2817, 169, 170, 3581, 171, 1095, 1067, 139, 963,
	139, 1121, 2153, 2156, 1122, 2819, 1093, 52, 1177, 1173,
	1174, 1175, 1176, 139, 139, 3423, 2573, 139, 2574, 2575,
	139, 1612, 139, 3162, 2886, 2887, 2163, 169, 170, 2181,
	171, 1855, 1124, 1853, 1330, 139, 2166, 609, 2731, 1357,
	1517, 2153, 2146, 2168, 1976, 588, 588, 2889, 2156, 1287,
	139, 3593, 1286, 1327, 588, 588, 2657, 2659, 1389, 1389,
	3269, 609, 114, 39, 3351, 2268, 1064, 3205, 1285, 49,
	1101, 3204, 638, 5, 3527, 3528, 1071, 2991, 1274, 118,
	119, 2482, 3216, 634, 1418, 604, 1549, 1391, 1427, 1427,
	1387, 1387, 2600, 1991, 2883, 1215, 1216, 1092, 1171, 191,
	2167, 3269, 1426, 1426, 2570, 3270, 2960, 1294, 588, 1396,
	1120, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1615, 1616, 1617, 1618, 1619, 1620, 1613, 1614,
	1302, 1269, 2463, 931, 2157, 1307, 2076, 2486, 2487, 2152,
	2146, 2151, 1317, 2149, 2154, 878, 1988, 1989, 1125, 1266,
	1336, 1337, 2485, 1339, 1340, 1341, 1100, 1498, 1499, 1469,
	1695, 1472, 850, 3210, 3211, 1445, 1480, 3224, 3225, 3226,
	3229, 3228, 3227, 1123, 1696, 1383, 1384, 2838, 2152, 2157,
	2740, 2739, 1608, 2154, 2075, 1244, 1694, 1503, 1605, 846,
	1246, 881, 1607, 1604, 1606, 1610, 1611, 2206, 2155, 847,
	1609, 1389, 3189, 1389, 1073, 2591, 2592, 1275, 2673, 2674,
	883, 884, 885, 849, 1486, 1734, 933, 852, 851, 932,
	2078, 2077, 2658, 1536, 1734, 1315, 1316, 1264, 1265, 3604,
	2237, 1356, 2162, 2854, 1296, 3532, 2160, 2155, 1278, 1279,
	1280, 1281, 2098, 1283, 1347, 1348, 3416, 2034, 1288, 1502,
	2033, 1542, 1543, 1544, 1545, 1546, 1518, 1501, 1070, 1335,
	1419, 3602, 1338, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1448, 1136, 1451, 1452, 1580,
	1581, 1459, 1460, 2917, 1590, 3590, 1101, 931, 1453, 1454,
	1369, 1371, 3572, 1467, 2884, 1587, 1588, 1589, 1639, 1381,
	1382, 3603, 2085, 1623, 3567, 967, 2839, 1464, 2516, 967,
	1468, 1633, 1372, 1310, 1314, 1314, 1314, 1410, 614, 1397,
	2347, 3561, 1136, 2913, 1648, 2086, 2087, 2590, 1428, 1533,
	1416, 2180, 1099, 3603, 2515, 1429, 3555, 1310, 1310, 2601,
	2603, 2604, 2605, 2602, 1615, 1616, 1617, 1618, 1619, 1620,
	1613, 1614, 2238, 1440, 2238, 942, 2097, 3591, 1680, 1073,
	1098, 2917, 3560, 2994, 1981, 3538, 989, 994, 995, 2971,
	933, 1418, 2065, 932, 2370, 3505, 3568, 1705, 1687, 1389,
	1710, 1711, 1624, 1713, 1714, 609, 1676, 1552, 2892, 609,
	630, 1514, 1389, 1981, 3458, 1353, 889, 626, 1476, 1732,
	1511, 1136, 1483, 3452, 1389, 3397, 628, 1508, 629, 3332,
	1357, 3331, 1489, 1903, 631, 625, 1507, 627, 3327, 1395,
	1494, 1510, 3326, 1509, 1512, 1679, 1506, 1519, 1638, 3325,
	3324, 2791, 1530, 1527, 1981, 1756, 1099, 1981, 2789, 1621,
	1622, 1752, 1625, 1762, 1762, 3293, 1357, 3506, 1357, 1357,
	1640, 2238, 609, 609, 3150, 1705, 1705, 1704, 3092, 1389,
	1830, 1831, 1843, 1647, 1760, 1649, 3459, 1532, 2676, 3023,
	1571, 2901, 2516, 1712, 2652, 3294, 588, 3294, 1389, 1578,
	1579, 3333, 2434, 2119, 1748, 2131, 1138, 1139, 1140, 1137,
	3294, 2426, 2386, 1680, 3294, 2466, 2368, 2356, 1680, 1680,
	1755, 3294, 3294, 1758, 1759, 2354, 609, 1705, 1389, 2349,
	1888, 2342, 609, 609, 609, 1893, 1894, 3294, 2340, 1682,
	2457, 2360, 1898, 1899, 2352, 2268, 3151, 1905, 1070, 1972,
	2268, 2338, 2760, 1781, 191, 1825, 1826, 191, 191, 2336,
	191, 3024, 1879, 2902, 1740, 1741, 2238, 1913, 1650, 1844,
	1916, 1901, 2118, 1919, 1136, 2141, 1921, 991, 992, 993,
	2070, 1750, 1751, 1136, 1136, 1101, 1857, 1677, 2119, 2350,
	2064, 1138, 1139, 1140, 1137, 2063, 2038, 2355, 1639, 1639,
	1947, 2350, 1963, 2343, 2066, 1639, 1639, 1885, 1683, 1849,
	2341, 1851, 1958, 1871, 1872, 1874, 1629, 1630, 1631, 1699,
	1887, 1869, 1870, 2337, 1864, 1957, 1763, 1295, 1583, 1645,
	1709, 2337, 1646, 1728, 1735, 1736, 1732, 2130, 1375, 3507,
	1389, 1970, 1729, 1724, 2119, 1739, 1656, 1657, 2045, 3042,
	1914, 2044, 1952, 1917, 1918, 1737, 1920, 1745, 1765, 1890,
	1891, 1892, 1749, 1675, 2032, 836, 837, 838, 839, 2855,
	1700, 1701, 2023, 1703, 1754, 2013, 2065, 2022, 1744, 2021,
	1746, 1747, 1980, 1495, 1716, 1717, 1718, 836, 837, 838,
	839, 1241, 1766, 1767, 1753, 2680, 2249, 1948, 1964, 1832,
	1829, 1848, 2518, 1850, 1138, 1139, 1140, 1137, 1999, 2000,
	1709, 1858, 2373, 2372, 2364, 2136, 2029, 2014, 2005, 3010,
	1136, 2009, 3375, 1136, 1962, 1908, 1896, 1491, 1942, 1183,
	1086, 1065, 1060, 1058, 3238, 1942, 1136, 1886, 1310, 2859,
	967, 1400, 3090, 1764, 1136, 1628, 1627, 967, 1873, 1136,
	2012, 1136, 1314, 1153, 1981, 1496, 2850, 2723, 1911, 1530,
	3547, 2020, 3190, 1715, 1314, 1909, 3376, 1719, 1065, 2027,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153, 848, 964,
	1311, 2328, 966, 1300, 1954, 3034, 964, 1301, 2041, 966,
	3533, 1928, 3032, 2046, 2047, 2048, 3508, 1379, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 3191, 1951, 1380, 2178,
	1949, 841, 1628, 1627, 3292, 1961, 3265, 3207, 683, 3206,
	3163, 609, 609, 3016, 609, 1965, 2918, 630, 2911, 3035,
	1768, 1769, 2851, 841, 626, 967, 3033, 609, 609, 609,
	2906, 2903, 2945, 628, 2833, 629, 2622, 2493, 2462, 2116,
	2383, 631, 2353, 2259, 627, 1662, 1291, 1960, 2393, 2123,
	1357, 1156, 1157, 1158, 1159, 1160, 1153, 1290, 1377, 2120,
	1138, 1139, 1140, 1137, 964, 1075, 2852, 966, 2003, 2322,
	1994, 2948, 1586, 1912, 1884, 1357, 1138, 1139, 1140, 1137,
	1884, 1884, 1884, 3417, 1996, 2007, 1312, 2332, 2682, 2173,
	1571, 1586, 853, 2008, 1651, 1652, 1653, 1654, 1997, 1998,
	1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1655, 1138, 1139, 1140, 1137, 2125, 2126, 1432,
	1706, 1912, 2946, 642, 1137, 1577, 3219, 2128, 2129, 1151,
	1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153,
	2179, 1574, 1576, 1573, 2753, 1575, 3218, 715, 725, 2242,
	2242, 1843, 2242, 1140, 1137, 2699, 716, 1376, 717, 721,
	724, 720, 718, 719, 1138, 1139, 1140, 1137, 2067, 2562,
	588, 588, 2561, 2395, 1680, 2544, 1680, 2542, 1073, 2059,
	2061, 2062, 3164, 3165, 1389, 609, 1995, 3198, 3576, 1138,
	1139, 1140, 1137, 3564, 1680, 1680, 2079, 1207, 2324, 3518,
	609, 1185, 2132, 2752, 3513, 2099, 1073, 2312, 604, 3512,
	2492, 722, 1427, 1184, 1843, 3442, 2263, 2317, 2445, 2319,
	2446, 3550, 3406, 191, 3159, 2276, 1426, 3377, 3317, 1138,
	1139, 1140, 1137, 2140, 2184, 1206, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 723, 2246, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 3310, 2207, 2208, 2209,
	2210, 2211, 2244, 2212, 2248, 2039, 2040, 2137, 2042, 2255,
	2145, 2256, 2144, 2366, 2124, 2049, 1970, 2314, 2158, 2159,
	3160, 2164, 3549, 1389, 3015, 1389, 2321, 1389, 3008, 2260,
	2261, 2091, 1073, 967, 2135, 3251, 1138, 1139, 1140, 1137,
	2385, 2612, 3443, 3193, 2127, 1433, 3192, 2316, 1643, 2133,
	2610, 2380, 2134, 1138, 1139, 1140, 1137, 2376, 2608, 2323,
	2597, 1432, 1644, 2221, 1389, 2412, 3036, 2270, 1138, 1139,
	1140, 1137, 964, 2394, 3007, 966, 2825, 2250, 2719, 2694,
	2419, 2693, 2413, 2414, 3009, 1389, 2025, 2627, 2595, 2594,
	2416, 2417, 2411, 2362, 2363, 2593, 1387, 2611, 2421, 1138,
	1139, 1140, 1137, 2422, 2267, 2264, 2609, 2585, 2579, 2089,
	2090, 2418, 2092, 2420, 2607, 2578, 2596, 1387, 3367, 2577,
	2576, 2458, 2069, 2313, 1314, 2108, 2109, 2110, 1931, 1542,
	1680, 2315, 2811, 1930, 1929, 1073, 2423, 2424, 1925, 1073,
	1924, 1882, 609, 1881, 1138, 1139, 1140, 1137, 1389, 1880,
	1492, 2490, 2024, 3537, 2467, 1369, 1371, 1705, 2276, 1259,
	3536, 2397, 2397, 3478, 2514, 1138, 1139, 1140, 1137, 3477,
	2520, 3474, 3124, 3470, 2377, 3363, 2382, 2358, 1138, 1139,
	1140, 1137, 678, 2429, 2430, 680, 3168, 2530, 2369, 2435,
	679, 3348, 2017, 3337, 1073, 2524, 2525, 2449, 2391, 3321,
	2374, 3316, 2541, 1138, 1139, 1140, 1137, 3315, 3289, 1073,
	1073, 1073, 1762, 2367, 3142, 1073, 3287, 2552, 2553, 2554,
	1073, 3252, 2558, 2559, 3132, 2560, 2387, 2388, 3200, 2547,
	2548, 3131, 3177, 3122, 2551, 2503, 2402, 2504, 2400, 2557,
	1138, 1139, 1140, 1137, 2523, 3120, 3099, 3096, 2242, 2526,
	1138, 1139, 1140, 1137, 1530, 3094, 2617, 1138, 1139, 1140,
	1137, 3006, 2613, 2511, 2521, 3005, 2390, 3002, 2979, 2977,
	588, 1781, 2912, 3082, 2908, 1705, 1073, 1843, 1843, 1843,
	1843, 2899, 2479, 1395, 1138, 1139, 1140, 1137, 1073, 1843,
	2532, 2898, 2242, 2469, 2834, 2635, 2474, 2795, 1884, 1138,
	1139, 1140, 1137, 2794, 2793, 2539, 2074, 2635, 1389, 2539,
	2468, 2535, 2733, 2522, 2730, 2692, 2666, 2606, 2488, 609,
	609, 2598, 2527, 2528, 2588, 2586, 2546, 2582, 2581, 2580,
	2459, 8, 2359, 2513, 7, 2011, 2519, 1933, 1152, 1151,
	1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153,
	2531, 1927, 2534, 777, 776, 3589, 2537, 2036, 1690, 1689,
	1493, 2543, 1214, 1210, 2648, 1209, 1061, 2568, 2569, 845,
	727, 117, 3384, 3380, 2550, 191, 117, 3266, 3154, 1709,
	191, 2583, 2584, 1161, 1162, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1153, 2686, 3143, 2688, 2587, 3029, 2010, 3028,
	3027, 1639, 2993, 1639, 2989, 2619, 2709, 2987, 2986, 1138,
	1139, 1140, 1137, 1680, 2985, 2718, 2984, 2983, 1680, 2974,
	2982, 1389, 2618, 2978, 2725, 1957, 615, 2677, 2623, 117,
	2529, 2636, 2637, 2638, 2639, 2976, 2961, 2647, 2649, 2951,
	2651, 2950, 2936, 2650, 2935, 1138, 1139, 1140, 1137, 2860,
	174, 2660, 163, 138, 2798, 2664, 2667, 2788, 2758, 2751,
	2736, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1142, 2743,
	2742, 2683, 1138, 1139, 1140, 1137, 2687, 2756, 2737, 2540,
	1679, 2675, 2465, 2757, 2339, 2708, 2335, 2334, 1452, 2050,
	1459, 1460, 2043, 2037, 2035, 2031, 2706, 1467, 1453, 1454,
	2473, 2030, 2712, 1138, 1139, 1140, 1137, 2028, 2746, 2684,
	2748, 1464, 2019, 2722, 1468, 2621, 2681, 2016, 2685, 168,
	3546, 1073, 2512, 2727, 2755, 2015, 1932, 1673, 1672, 2700,
	2814, 2705, 2707, 2702, 1671, 1642, 2715, 1641, 2714, 965,
	2829, 2713, 967, 1632, 1401, 609, 117, 2721, 174, 967,
	1138, 1139, 1140, 1137, 1399, 3540, 2843, 1073, 1073, 1073,
	3525, 117, 3522, 117, 2765, 2766, 1843, 2116, 3520, 2858,
	2767, 2768, 2769, 2770, 2734, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2735, 3405, 2741, 1204, 3334, 3323, 2872,
	3318, 2875, 1447, 2875, 2875, 2749, 2750, 2754, 1073, 3233,
	2790, 3217, 2837, 2747, 3213, 3107, 3105, 3080, 3079, 3076,
	2879, 3075, 2894, 2744, 2745, 3018, 2808, 168, 2797, 1389,
	1389, 2807, 1458, 1138, 1139, 1140, 1137, 1449, 1463, 2891,
	1466, 2503, 986, 1455, 2893, 2704, 2792, 1298, 2614, 2861,
	2796, 2545, 2711, 2508, 2862, 2863, 2507, 2895, 2896, 2506,
	2505, 1387, 1387, 2444, 2845, 2846, 2847, 2348, 2258, 2856,
	2213, 3396, 2117, 2830, 2088, 609, 2443, 2068, 1572, 168,
	2814, 3394, 2442, 2836, 1895, 3392, 2441, 2670, 2671, 1698,
	1686, 1705, 1705, 2853, 2880, 2857, 1515, 2870, 1479, 1456,
	2871, 1258, 1138, 1139, 1140, 1137, 2440, 2865, 1138, 1139,
	1140, 1137, 1138, 1139, 1140, 1137, 2876, 2877, 2439, 1243,
	1239, 1238, 1237, 1236, 1235, 2881, 2438, 1234, 2864, 1233,
	1232, 1231, 1138, 1139, 1140, 1137, 967, 1073, 2437, 1230,
	2403, 2412, 1229, 1228, 1138, 1139, 1140, 1137, 1227, 1226,
	2949, 1225, 1138, 1139, 1140, 1137, 2276, 1224, 1223, 1222,
	2916, 1221, 1220, 1219, 1138, 1139, 1140, 1137, 1057, 1053,
	1054, 1055, 1056, 1218, 2408, 2928, 2407, 2406, 2404, 1217,
	1213, 1212, 1211, 1208, 981, 976, 971, 975, 979, 1201,
	1200, 2905, 609, 2910, 2909, 2904, 1198, 1197, 2914, 2915,
	1196, 2907, 2900, 3390, 2436, 2925, 1195, 1194, 1351, 1352,
	1193, 1354, 984, 1358, 1359, 1360, 974, 1192, 2929, 1191,
	1190, 1189, 1188, 2932, 2933, 2934, 1187, 1182, 2973, 2866,
	1138, 1139, 1140, 1137, 1181, 2975, 1180, 1103, 1059, 2938,
	3077, 2944, 2122, 2405, 2104, 1405, 1406, 1407, 1408, 1409,
	1091, 1411, 1412, 1413, 1414, 1415, 2921, 2922, 2962, 1421,
	1422, 2433, 3494, 3492, 2988, 2963, 3575, 982, 2998, 1073,
	2432, 3448, 2967, 2964, 985, 2924, 2431, 2494, 2968, 2269,
	2425, 1935, 1102, 2878, 2927, 2926, 2980, 1138, 1139, 1140,
	1137, 2641, 2640, 2357, 972, 2644, 1138, 1139, 1140, 1137,
	2645, 3022, 1138, 1139, 1140, 1137, 1138, 1139, 1140, 1137,
	2351, 1292, 2832, 2835, 2242, 1843, 3039, 983, 1152, 1151,
	1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153,
	1073, 2230, 2233, 2234, 2235, 2231, 606, 2232, 2236, 2872,
	2642, 2415, 2717, 1073, 2990, 2643, 1726, 1727, 2646, 3045,
	2234, 2235, 2564, 1073, 1721, 1722, 1723, 973, 1389, 2565,
	2566, 2567, 3084, 102, 2182, 54, 3000, 1138, 1139, 1140,
	1137, 53, 2557, 2868, 1705, 2869, 2965, 2966, 1073, 2409,
	2410, 3013, 1680, 3040, 3087, 2939, 3091, 1817, 1441, 610,
	1387, 3043, 3041, 1680, 3109, 2346, 3104, 2635, 3074, 3106,
	2381, 3110, 967, 117, 117, 965, 1488, 191, 3038, 967,
	3067, 1473, 967, 2362, 2363, 3044, 3112, 2392, 2809, 611,
	1073, 612, 2095, 3101, 2225, 1897, 3037, 613, 1097, 3083,
	3086, 2806, 2799, 1884, 980, 3019, 3020, 3021, 3089, 2635,
	3081, 3025, 3026, 1138, 1139, 1140, 1137, 3093, 2533, 3095,
	3108, 2139, 2112, 3098, 3100, 1073, 3102, 3111, 1730, 1697,
	3103, 2230, 2233, 2234, 2235, 2231, 3461, 2232, 2236, 1628,
	1627, 977, 3320, 978, 2897, 1169, 2222, 3097, 2218, 1073,
	1389, 1389, 1254, 1255, 1828, 2843, 1252, 1253, 1350, 3183,
	1349, 3183, 1582, 1250, 1251, 2992, 3125, 3126, 3171, 1248,
	1249, 3148, 2995, 3115, 1129, 3001, 2931, 2669, 3173, 1959,
	1303, 1284, 1387, 3175, 1326, 3541, 1389, 3434, 1138, 1139,
	1140, 1137, 3412, 3199, 3410, 3133, 3370, 3134, 3347, 3346,
	3149, 3344, 3155, 3335, 609, 3246, 1073, 1073, 3245, 3121,
	1073, 1073, 2981, 3179, 3180, 2958, 2957, 2942, 3175, 2169,
	2970, 1490, 3145, 2941, 2679, 3171, 3171, 3236, 1734, 3171,
	3171, 3187, 3178, 3186, 3194, 3195, 1732, 3235, 3243, 2720,
	3230, 3496, 3495, 3041, 3196, 3074, 3197, 3247, 3248, 3221,
	3222, 3201, 2106, 3231, 3232, 2018, 1088, 3067, 3495, 836,
	837, 838, 839, 3496, 1070, 3215, 3152, 3153, 2937, 1070,
	178, 3, 1318, 62, 2, 2389, 3509, 3240, 3510, 1,
	2450, 1684, 2998, 1256, 840, 1247, 835, 1366, 2251, 1875,
	1393, 3272, 1688, 3239, 842, 2653, 2654, 2930, 3241, 1152,
	1151, 1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1153, 2656, 1977, 2624, 3300, 2216, 2093, 3296, 3254, 2828,
	1293, 882, 1634, 3267, 3271, 1500, 988, 1082, 1497, 1081,
	1079, 1584, 3284, 729, 1938, 2615, 3281, 2589, 3242, 3460,
	3282, 3283, 3502, 3404, 3463, 1513, 713, 3338, 3257, 3408,
	3259, 3128, 1982, 3295, 1889, 1134, 2701, 904, 3237, 767,
	740, 1199, 3303, 3301, 1073, 1481, 3302, 1474, 1389, 2763,
	2761, 3311, 990, 739, 3012, 2484, 3113, 2672, 3304, 3565,
	987, 905, 1922, 3171, 3255, 1442, 1446, 2138, 3319, 3312,
	3585, 3574, 3556, 3539, 3439, 3570, 3329, 3482, 3523, 3137,
	1387, 3135, 3136, 3516, 3435, 649, 1854, 3328, 3359, 586,
	949, 3234, 1934, 650, 1398, 3141, 2121, 3425, 615, 3322,
	863, 1186, 3353, 2103, 3336, 1073, 864, 856, 3343, 2501,
	3341, 3371, 1152, 1151, 1161, 1162, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1153, 3171, 2500, 1553, 1143, 1570, 117,
	2779, 2780, 3366, 1178, 1073, 687, 2006, 2481, 3362, 3062,
	2665, 1389, 3365, 3381, 3399, 3402, 61, 60, 59, 3373,
	58, 1904, 199, 3171, 731, 198, 3389, 3391, 3393, 3395,
	3166, 3401, 3465, 711, 3382, 710, 709, 3378, 708, 3398,
	707, 706, 2229, 1387, 2227, 2226, 3403, 3388, 1838, 1837,
	1902, 3409, 2841, 1389, 3407, 3411, 3330, 3413, 3414, 2555,
	2549, 2165, 2170, 117, 3444, 1770, 3445, 117, 3385, 3386,
	3212, 2599, 1720, 2161, 3433, 1787, 2571, 1784, 1783, 117,
	2563, 3441, 3208, 3202, 1814, 1387, 3467, 2996, 3182, 117,
	3046, 3047, 3053, 2111, 1013, 1009, 1011, 1012, 1010, 2401,
	2142, 3466, 3453, 2801, 3454, 3457, 3455, 2084, 3456, 2083,
	2081, 2080, 3220, 1267, 3358, 1073, 3421, 3144, 2274, 3372,
	3473, 3353, 2272, 3471, 2923, 2919, 1946, 1955, 2716, 1839,
	1835, 2105, 3278, 1725, 3480, 857, 2101, 99, 3383, 152,
	3501, 48, 3485, 3487, 89, 88, 3493, 3491, 3490, 98,
	150, 47, 183, 182, 3504, 3497, 3498, 3499, 3500, 185,
	3514, 184, 1073, 181, 2325, 2326, 180, 1430, 179, 3415,
	3185, 830, 3515, 38, 37, 33, 3519, 12, 3521, 1031,
	11, 1536, 34, 21, 22, 20, 1504, 3467, 3535, 19,
	25, 31, 30, 3531, 110, 109, 29, 108, 107, 106,
	105, 1073, 3466, 1073, 3534, 104, 28, 18, 42, 41,
	40, 3543, 9, 3545, 97, 95, 27, 3548, 96, 93,
	1536, 94, 1536, 92, 90, 3504, 3552, 1073, 3554, 73,
	72, 3559, 71, 86, 85, 84, 3566, 3563, 83, 3569,
	82, 81, 79, 80, 3475, 3476, 1536, 903, 70, 69,
	68, 67, 66, 91, 77, 87, 3580, 3573, 78, 76,
	3584, 75, 74, 65, 3583, 64, 63, 136, 3592, 135,
	134, 133, 132, 130, 3580, 131, 129, 3600, 3601, 3599,
	128, 127, 3584, 1164, 3597, 1168, 3605, 126, 125, 3597,
	124, 43, 44, 45, 46, 146, 145, 147, 3597, 1017,
	149, 1165, 1167, 1163, 151, 1166, 1152, 1151, 1161, 1162,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153, 3544, 1039,
	1043, 1045, 1047, 1049, 1050, 1052, 148, 1057, 1053, 1054,
	1055, 1056, 3542, 1034, 1035, 1036, 1037, 1015, 1016, 1040,
	153, 1018, 143, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1030, 1032, 1028, 1029, 1038, 2759, 141, 144,
	142, 140, 1842, 56, 1042, 1044, 1046, 1048, 1051, 100,
	17, 1152, 1151, 1161, 1162, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1153, 24, 4, 1152, 1151, 1161, 1162, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 1153, 0, 2004, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 0, 0,
	1152, 1151, 1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1153, 1152, 1151, 1161, 1162, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1153, 117, 0, 0, 117, 117, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 965, 747,
	0, 0, 0, 0, 0, 965, 0, 0, 357, 0,
	480, 512, 502, 520, 469, 0, 117, 0, 0, 0,
	0, 701, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 791, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 738, 515, 468, 388,
	341, 534, 533, 0, 0, 801, 809, 0, 2398, 2399,
	0, 0, 0, 0, 0, 0, 0, 694, 0, 0,
	728, 777, 776, 715, 725, 0, 0, 270, 197, 464,
	581, 465, 716, 0, 717, 721, 724, 720, 718, 719,
	0, 793, 0, 1169, 0, 0, 0, 0, 686, 698,
	0, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 696, 0, 0, 0,
	0, 748, 0, 697, 0, 0, 743, 722, 726, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 723,
	746, 750, 291, 815, 744, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	816, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 1041, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 741, 0, 578, 0, 420, 0, 0, 799, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 745,
	0, 378, 359, 812, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 1636, 1635, 1637, 432, 325, 326,
	304, 252, 253, 595, 797, 355, 544, 577, 470, 0,
	811, 792, 794, 795, 798, 802, 803, 804, 805, 806,
	808, 810, 814, 594, 0, 523, 538, 597, 537, 591,
	361, 2245, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 813, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 749, 518, 519, 345, 346, 347,
	348, 800, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 1842, 0, 509, 510, 508, 602,
	0, 568, 569, 117, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	822, 796, 821, 823, 824, 820, 825, 826, 807, 705,
	0, 753, 818, 817, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 1031, 254, 476,
	328, 0, 369, 302, 540, 541, 784, 760, 761, 762,
	703, 763, 757, 758, 759, 785, 751, 781, 782, 730,
	754, 764, 780, 765, 783, 786, 787, 827, 828, 771,
	755, 222, 829, 768, 788, 779, 778, 766, 752, 789,
	790, 737, 732, 769, 770, 756, 772, 773, 774, 704,
	733, 734, 735, 736, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 174, 51, 163,
	138, 524, 536, 570, 0, 579, 580, 582, 584, 775,
	0, 596, 466, 467, 576, 164, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 1017, 117, 0,
	0, 1007, 0, 0, 892, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 168, 1039, 1043, 1045,
	1047, 1049, 1050, 1052, 0, 1057, 1053, 1054, 1055, 1056,
	0, 1034, 1035, 1036, 1037, 1015, 1016, 1040, 0, 1018,
	0, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1030, 1032, 1028, 1029, 1038, 0, 0, 0, 0, 0,
	0, 0, 1042, 1044, 1046, 1048, 1051, 0, 0, 0,
	0, 0, 0, 891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 121, 0, 122, 123, 0, 0, 0,
	1033, 0, 0, 0, 0, 1017, 0, 1842, 1842, 1842,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 1039, 1043, 1045, 1047, 1049,
	1050, 1052, 0, 1057, 1053, 1054, 1055, 1056, 0, 1034,
	1035, 1036, 1037, 1015, 1016, 1040, 0, 1018, 0, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1030, 1032,
	1028, 1029, 1038, 137, 162, 172, 933, 101, 0, 932,
	1042, 1044, 1046, 1048, 1051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 155, 154, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 917, 0, 1033, 0,
	117, 0, 0, 0, 893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 158, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 879, 0, 880, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 916, 915, 160, 0, 112, 0,
	0, 0, 0, 861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 914, 0, 874, 0, 870, 0,
	0, 0, 0, 0, 0, 890, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 894, 926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	922, 0, 0, 660, 659, 666, 656, 0, 50, 0,
	1041, 0, 0, 0, 0, 663, 664, 0, 665, 669,
	0, 0, 651, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 923, 927, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 911, 52, 909, 913,
	930, 0, 0, 0, 910, 907, 906, 0, 912, 897,
	898, 896, 899, 900, 901, 902, 0, 928, 0, 929,
	0, 0, 0, 0, 0, 876, 0, 869, 0, 0,
	924, 925, 169, 170, 0, 171, 873, 872, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 0, 0, 0, 862, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 920, 0, 0,
	0, 0, 0, 919, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 868, 114, 39, 0, 867, 0, 0, 0, 49,
	0, 854, 0, 0, 0, 860, 0, 0, 0, 118,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 918, 0, 652,
	654, 653, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 877, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 677, 0,
	0, 747, 0, 0, 0, 655, 0, 0, 859, 0,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 297, 1681, 0,
	327, 516, 499, 791, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 738, 515,
	468, 388, 341, 534, 533, 0, 0, 801, 809, 0,
	117, 0, 0, 0, 0, 0, 1866, 117, 0, 694,
	117, 0, 728, 777, 776, 715, 725, 0, 0, 270,
	197, 464, 581, 465, 716, 875, 717, 721, 724, 720,
	718, 719, 0, 793, 0, 0, 0, 0, 0, 0,
	686, 698, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 661, 667, 1842, 668, 670, 0, 0,
	671, 672, 673, 0, 865, 675, 676, 695, 696, 0,
	0, 0, 0, 748, 0, 697, 0, 0, 1867, 722,
	726, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 723, 746, 750, 291, 815, 744, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 816, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 117, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 741, 0, 578, 0, 420, 0, 0,
	799, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 745, 0, 378, 359, 812, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 797, 355, 544, 577,
	470, 0, 811, 792, 794, 795, 798, 802, 803, 804,
	805, 806, 808, 810, 814, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 813, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 749, 518, 519, 345,
	346, 347, 348, 800, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 822, 796, 821, 823, 824, 820, 825, 826,
	807, 705, 0, 753, 818, 817, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 784, 760,
	761, 762, 703, 763, 757, 758, 759, 785, 751, 781,
	782, 730, 754, 764, 780, 765, 783, 786, 787, 827,
	828, 771, 755, 222, 829, 768, 788, 779, 778, 766,
	752, 789, 790, 737, 732, 769, 770, 756, 772, 773,
	774, 704, 733, 734, 735, 736, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 775, 0, 596, 466, 467, 576, 174, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	791, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 1172, 515, 468, 388, 341,
	534, 533, 0, 0, 801, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 694, 0, 0, 728,
	777, 776, 715, 725, 0, 0, 270, 197, 464, 581,
	465, 716, 0, 717, 721, 724, 720, 718, 719, 0,
	793, 0, 0, 0, 0, 0, 0, 686, 698, 0,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 696, 0, 0, 0, 0,
	748, 0, 697, 0, 0, 743, 722, 726, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 723, 746,
	750, 291, 815, 744, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 816,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	741, 0, 578, 0, 420, 0, 0, 799, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 745, 0,
	378, 359, 812, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 797, 355, 544, 577, 470, 0, 811,
	792, 794, 795, 798, 802, 803, 804, 805, 806, 808,
	810, 814, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 813, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 749, 518, 519, 345, 346, 347, 348,
	800, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 822,
	796, 821, 823, 824, 820, 825, 826, 807, 705, 0,
	753, 818, 817, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	139, 369, 302, 540, 541, 784, 760, 761, 762, 703,
	763, 757, 758, 759, 785, 751, 781, 782, 730, 754,
	764, 780, 765, 783, 786, 787, 827, 828, 771, 755,
	222, 829, 768, 788, 779, 778, 766, 752, 789, 790,
	737, 732, 769, 770, 756, 772, 773, 774, 704, 733,
	734, 735, 736, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 775, 747,
	596, 466, 467, 576, 0, 0, 0, 0, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 791, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 738, 515, 468, 388,
	341, 534, 533, 0, 0, 801, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 694, 0, 0,
	728, 777, 776, 715, 725, 0, 0, 270, 197, 464,
	581, 465, 716, 0, 717, 721, 724, 720, 718, 719,
	0, 793, 0, 0, 0, 0, 0, 0, 686, 698,
	0, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 696, 0, 0, 0,
	0, 748, 0, 697, 0, 0, 743, 722, 726, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 723,
	746, 750, 291, 815, 744, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	816, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 741, 0, 578, 0, 420, 0, 0, 799, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 745,
	0, 378, 359, 812, 3598, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 797, 355, 544, 577, 470, 0,
	811, 792, 794, 795, 798, 802, 803, 804, 805, 806,
	808, 810, 814, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 813, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 749, 518, 519, 345, 346, 347,
	348, 800, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	822, 796, 821, 823, 824, 820, 825, 826, 807, 705,
	0, 753, 818, 817, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 784, 760, 761, 762,
	703, 763, 757, 758, 759, 785, 751, 781, 782, 730,
	754, 764, 780, 765, 783, 786, 787, 827, 828, 771,
	755, 222, 829, 768, 788, 779, 778, 766, 752, 789,
	790, 737, 732, 769, 770, 756, 772, 773, 774, 704,
	733, 734, 735, 736, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 775,
	747, 596, 466, 467, 576, 0, 0, 0, 0, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 297, 3553, 0, 327,
	516, 499, 791, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 738, 515, 468,
	388, 341, 534, 533, 0, 0, 801, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 0,
	0, 728, 777, 776, 715, 725, 0, 0, 270, 197,
	464, 581, 465, 716, 0, 717, 721, 724, 720, 718,
	719, 0, 793, 0, 0, 0, 0, 0, 0, 686,
	698, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 696, 0, 0,
	0, 0, 748, 0, 697, 0, 0, 743, 722, 726,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	723, 746, 750, 291, 815, 744, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 816, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 741, 0, 578, 0, 420, 0, 0, 799,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	745, 0, 378, 359, 812, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 797, 355, 544, 577, 470,
	0, 811, 792, 794, 795, 798, 802, 803, 804, 805,
	806, 808, 810, 814, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 813, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 749, 518, 519, 345, 346,
	347, 348, 800, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 822, 796, 821, 823, 824, 820, 825, 826, 807,
	705, 0, 753, 818, 817, 819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 784, 760, 761,
	762, 703, 763, 757, 758, 759, 785, 751, 781, 782,
	730, 754, 764, 780, 765, 783, 786, 787, 827, 828,
	771, 755, 222, 829, 768, 788, 779, 778, 766, 752,
	789, 790, 737, 732, 769, 770, 756, 772, 773, 774,
	704, 733, 734, 735, 736, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	775, 747, 596, 466, 467, 576, 0, 0, 0, 0,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 297, 1681, 0,
	327, 516, 499, 791, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 738, 515,
	468, 388, 341, 534, 533, 0, 0, 801, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 694,
	0, 0, 728, 777, 776, 715, 725, 0, 0, 270,
	197, 464, 581, 465, 716, 0, 717, 721, 724, 720,
	718, 719, 0, 793, 0, 0, 0, 0, 0, 0,
	686, 698, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 695, 696, 0,
	0, 0, 0, 748, 0, 697, 0, 0, 743, 722,
	726, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 723, 746, 750, 291, 815, 744, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 816, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 741, 0, 578, 0, 420, 0, 0,
	799, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 745, 0, 378, 359, 812, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 797, 355, 544, 577,
	470, 0, 811, 792, 794, 795, 798, 802, 803, 804,
	805, 806, 808, 810, 814, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 813, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 749, 518, 519, 345,
	346, 347, 348, 800, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 822, 796, 821, 823, 824, 820, 825, 826,
	807, 705, 0, 753, 818, 817, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 784, 760,
	761, 762, 703, 763, 757, 758, 759, 785, 751, 781,
	782, 730, 754, 764, 780, 765, 783, 786, 787, 827,
	828, 771, 755, 222, 829, 768, 788, 779, 778, 766,
	752, 789, 790, 737, 732, 769, 770, 756, 772, 773,
	774, 704, 733, 734, 735, 736, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 775, 747, 596, 466, 467, 576, 0, 0, 0,
	0, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 791, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 738,
	515, 468, 388, 341, 534, 533, 0, 0, 801, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 0, 0, 728, 777, 776, 715, 725, 0, 0,
	270, 197, 464, 581, 465, 716, 0, 717, 721, 724,
	720, 718, 719, 0, 793, 0, 0, 0, 0, 0,
	0, 686, 698, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 695, 696,
	1425, 0, 0, 0, 748, 0, 697, 0, 0, 743,
	722, 726, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 723, 746, 750, 291, 815, 744, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 816, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 741, 0, 578, 0, 420, 0,
	0, 799, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 745, 0, 378, 359, 812, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 797, 355, 544,
	577, 470, 0, 811, 792, 794, 795, 798, 802, 803,
	804, 805, 806, 808, 810, 814, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 813, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 749, 518, 519,
	345, 346, 347, 348, 800, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 822, 796, 821, 823, 824, 820, 825,
	826, 807, 705, 0, 753, 818, 817, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 784,
	760, 761, 762, 703, 763, 757, 758, 759, 785, 751,
	781, 782, 730, 754, 764, 780, 765, 783, 786, 787,
	827, 828, 771, 755, 222, 829, 768, 788, 779, 778,
	766, 752, 789, 790, 737, 732, 769, 770, 756, 772,
	773, 774, 704, 733, 734, 735, 736, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 775, 0, 596, 466, 467, 576, 747, 0,
	0, 2026, 0, 0, 0, 0, 0, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	791, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 738, 515, 468, 388, 341,
	534, 533, 0, 0, 801, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 694, 0, 0, 728,
	777, 776, 715, 725, 0, 0, 270, 197, 464, 581,
	465, 716, 0, 717, 721, 724, 720, 718, 719, 0,
	793, 0, 0, 0, 0, 0, 0, 686, 698, 0,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 696, 0, 0, 0, 0,
	748, 0, 697, 0, 0, 743, 722, 726, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 723, 746,
	750, 291, 815, 744, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 816,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	741, 0, 578, 0, 420, 0, 0, 799, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 745, 0,
	378, 359, 812, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 797, 355, 544, 577, 470, 0, 811,
	792, 794, 795, 798, 802, 803, 804, 805, 806, 808,
	810, 814, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 813, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 749, 518, 519, 345, 346, 347, 348,
	800, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 822,
	796, 821, 823, 824, 820, 825, 826, 807, 705, 0,
	753, 818, 817, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 784, 760, 761, 762, 703,
	763, 757, 758, 759, 785, 751, 781, 782, 730, 754,
	764, 780, 765, 783, 786, 787, 827, 828, 771, 755,
	222, 829, 768, 788, 779, 778, 766, 752, 789, 790,
	737, 732, 769, 770, 756, 772, 773, 774, 704, 733,
	734, 735, 736, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 775, 747,
	596, 466, 467, 576, 0, 0, 0, 0, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 791, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 738, 515, 468, 388,
	341, 534, 533, 0, 0, 801, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 694, 0, 0,
	728, 777, 776, 715, 725, 0, 0, 270, 197, 464,
	581, 465, 716, 0, 717, 721, 724, 720, 718, 719,
	0, 793, 0, 0, 0, 0, 0, 0, 686, 698,
	0, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 696, 1674, 0, 0,
	0, 748, 0, 697, 0, 0, 743, 722, 726, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 723,
	746, 750, 291, 815, 744, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	816, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 741, 0, 578, 0, 420, 0, 0, 799, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 745,
	0, 378, 359, 812, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 797, 355, 544, 577, 470, 0,
	811, 792, 794, 795, 798, 802, 803, 804, 805, 806,
	808, 810, 814, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 813, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 749, 518, 519, 345, 346, 347,
	348, 800, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	822, 796, 821, 823, 824, 820, 825, 826, 807, 705,
	0, 753, 818, 817, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 784, 760, 761, 762,
	703, 763, 757, 758, 759, 785, 751, 781, 782, 730,
	754, 764, 780, 765, 783, 786, 787, 827, 828, 771,
	755, 222, 829, 768, 788, 779, 778, 766, 752, 789,
	790, 737, 732, 769, 770, 756, 772, 773, 774, 704,
	733, 734, 735, 736, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 775,
	747, 596, 466, 467, 576, 0, 0, 0, 0, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 791, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 738, 515, 468,
	388, 341, 534, 533, 0, 0, 801, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 0,
	0, 728, 777, 776, 715, 725, 0, 0, 270, 197,
	464, 581, 465, 716, 0, 717, 721, 724, 720, 718,
	719, 0, 793, 0, 0, 0, 0, 0, 0, 686,
	698, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 696, 0, 0,
	0, 0, 748, 0, 697, 0, 0, 743, 722, 726,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	723, 746, 750, 291, 815, 744, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 816, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 741, 0, 578, 0, 420, 0, 0, 799,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	745, 0, 378, 359, 812, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 797, 355, 544, 577, 470,
	0, 811, 792, 794, 795, 798, 802, 803, 804, 805,
	806, 808, 810, 814, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 813, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 749, 518, 519, 345, 346,
	347, 348, 800, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 822, 796, 821, 823, 824, 820, 825, 826, 807,
	705, 0, 753, 818, 817, 819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 784, 760, 761,
	762, 703, 763, 757, 758, 759, 785, 751, 781, 782,
	730, 754, 764, 780, 765, 783, 786, 787, 827, 828,
	771, 755, 222, 829, 768, 788, 779, 778, 766, 752,
	789, 790, 737, 732, 769, 770, 756, 772, 773, 774,
	704, 733, 734, 735, 736, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	775, 747, 596, 466, 467, 576, 0, 0, 0, 0,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 791, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 738, 515,
	468, 388, 341, 534, 533, 0, 0, 801, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 694,
	0, 0, 728, 777, 776, 715, 725, 0, 0, 270,
	197, 464, 581, 465, 2447, 0, 2448, 721, 724, 720,
	718, 719, 0, 793, 0, 0, 0, 0, 0, 0,
	686, 698, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 695, 696, 0,
	0, 0, 0, 748, 0, 697, 0, 0, 743, 722,
	726, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 723, 746, 750, 291, 815, 744, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 816, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 741, 0, 578, 0, 420, 0, 0,
	799, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 745, 0, 378, 359, 812, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 797, 355, 544, 577,
	470, 0, 811, 792, 794, 795, 798, 802, 803, 804,
	805, 806, 808, 810, 814, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 813, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 749, 518, 519, 345,
	346, 347, 348, 800, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 822, 796, 821, 823, 824, 820, 825, 826,
	807, 705, 0, 753, 818, 817, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 784, 760,
	761, 762, 703, 763, 757, 758, 759, 785, 751, 781,
	782, 730, 754, 764, 780, 765, 783, 786, 787, 827,
	828, 771, 755, 222, 829, 768, 788, 779, 778, 766,
	752, 789, 790, 737, 732, 769, 770, 756, 772, 773,
	774, 704, 733, 734, 735, 736, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 775, 747, 596, 466, 467, 576, 0, 0, 0,
	0, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	1554, 0, 0, 0, 701, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 791, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 738,
	515, 468, 388, 341, 534, 533, 0, 0, 801, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 0, 0, 728, 777, 776, 715, 725, 0, 0,
	270, 197, 464, 581, 465, 716, 0, 717, 721, 724,
	720, 718, 719, 0, 793, 0, 0, 0, 0, 0,
	0, 0, 698, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 695, 696,
	0, 0, 0, 0, 748, 0, 697, 0, 0, 743,
	722, 726, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 723, 746, 750, 291, 815, 744, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 816, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 741, 0, 578, 0, 420, 0,
	0, 799, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 745, 0, 378, 359, 812, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 1555, 1556, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 797, 355, 544,
	577, 470, 0, 811, 792, 794, 795, 798, 802, 803,
	804, 805, 806, 808, 810, 814, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 813, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 749, 518, 519,
	345, 346, 347, 348, 800, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 822, 796, 821, 823, 824, 820, 825,
	826, 807, 705, 0, 753, 818, 817, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 784,
	760, 761, 762, 703, 763, 757, 758, 759, 785, 751,
	781, 782, 730, 754, 764, 780, 765, 783, 786, 787,
	827, 828, 771, 755, 222, 829, 768, 788, 779, 778,
	766, 752, 789, 790, 737, 732, 769, 770, 756, 772,
	773, 774, 704, 733, 734, 735, 736, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 775, 747, 596, 466, 467, 576, 0, 0,
	0, 0, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 791, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	738, 515, 468, 388, 341, 534, 533, 0, 0, 801,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 694, 0, 0, 728, 777, 776, 715, 725, 0,
	0, 270, 197, 464, 581, 465, 716, 0, 717, 721,
	724, 720, 718, 719, 0, 793, 0, 0, 0, 0,
	0, 0, 0, 698, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 695,
	696, 0, 0, 0, 0, 748, 0, 697, 0, 0,
	743, 722, 726, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 723, 746, 750, 291, 815, 744, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 816, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 741, 0, 578, 0, 420,
	0, 0, 799, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 745, 0, 378, 359, 812, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 797, 355,
	544, 577, 470, 0, 811, 792, 794, 795, 798, 802,
	803, 804, 805, 806, 808, 810, 814, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 813, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 749, 518,
	519, 345, 346, 347, 348, 800, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 822, 796, 821, 823, 824, 820,
	825, 826, 807, 705, 0, 753, 818, 817, 819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	784, 760, 761, 762, 703, 763, 757, 758, 759, 785,
	751, 781, 782, 730, 754, 764, 780, 765, 783, 786,
	787, 827, 828, 771, 755, 222, 829, 768, 788, 779,
	778, 766, 752, 789, 790, 737, 732, 769, 770, 756,
	772, 773, 774, 704, 733, 734, 735, 736, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 775, 747, 596, 466, 467, 576, 0,
	0, 0, 0, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 791, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 738, 515, 468, 388, 341, 534, 533, 0, 0,
	801, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 777, 776, 715, 725,
	0, 0, 270, 197, 464, 581, 465, 716, 0, 717,
	721, 724, 720, 718, 719, 0, 793, 0, 0, 0,
	0, 0, 0, 686, 698, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 696, 0, 0, 0, 0, 748, 0, 697, 0,
	0, 743, 722, 726, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 723, 746, 750, 291, 815, 744,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 816, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 741, 0, 578, 0,
	420, 0, 0, 799, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 745, 0, 378, 359, 812, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 797,
	355, 544, 577, 470, 0, 811, 792, 794, 795, 798,
	802, 803, 804, 805, 806, 808, 810, 814, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 813,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 749,
	518, 519, 345, 346, 347, 348, 800, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 822, 796, 821, 823, 824,
	820, 825, 826, 807, 705, 0, 753, 818, 817, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 784, 760, 761, 762, 703, 763, 757, 758, 759,
	785, 751, 781, 782, 730, 754, 764, 780, 765, 783,
	786, 787, 827, 828, 771, 755, 222, 829, 768, 788,
	779, 778, 766, 752, 789, 790, 737, 732, 769, 770,
	756, 772, 773, 774, 704, 733, 734, 735, 736, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 775, 0, 596, 466, 467, 576,
	174, 51, 163, 138, 0, 0, 0, 0, 0, 0,
	357, 0, 480, 512, 502, 520, 469, 0, 164, 0,
	0, 0, 0, 0, 0, 156, 0, 297, 0, 165,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 115, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 168,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 137, 162, 172, 0,
	101, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	189, 0, 0, 0, 392, 0, 0, 324, 161, 155,
	154, 436, 0, 378, 359, 201, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 554, 555, 556, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 415, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 192, 526, 529, 461, 202, 0, 523, 538, 496,
	537, 203, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 113, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 200, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 370, 265, 403, 381, 0,
	254, 476, 328, 139, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 204, 39, 190, 193, 195,
	194, 0, 49, 524, 536, 570, 5, 579, 580, 582,
	584, 583, 118, 205, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 196,
	0, 0, 715, 725, 0, 0, 270, 197, 464, 581,
	465, 716, 0, 717, 721, 724, 720, 718, 719, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 723, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 174, 51, 163, 138, 0, 0,
	0, 0, 0, 0, 357, 619, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 624, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 620, 622, 275,
	443, 371, 632, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 139, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 2153, 2156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 2157, 420, 0,
	0, 0, 2152, 0, 2151, 392, 2149, 2154, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 2155, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 1031, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 2298, 2301, 2302, 2303,
	2304, 2305, 2306, 0, 2311, 2307, 2308, 2309, 2310, 0,
	2293, 2294, 2295, 2296, 1015, 2277, 2299, 0, 2278, 353,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2290,
	2291, 2288, 2289, 2297, 365, 331, 366, 314, 343, 342,
	344, 1042, 1044, 1046, 1048, 1051, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 2292,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 2300,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 1906, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1907, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 1138, 1139, 1140, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 2172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 2171, 420,
	0, 0, 0, 2176, 2174, 0, 392, 0, 2175, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 174, 596, 466, 467, 576, 0,
	0, 0, 0, 0, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 115, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 1950, 0, 196, 0, 0, 0,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 139, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 174, 596, 466, 467,
	576, 0, 0, 0, 0, 0, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 115, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 1941, 0, 196, 0,
	0, 0, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 139,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 948, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 955, 956, 0, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 393,
	943, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 933,
	418, 264, 932, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 946, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 947, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 950,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 957,
	944, 953, 945, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 954, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 174, 596, 466, 467, 576,
	0, 0, 0, 0, 0, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 115, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 139, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 955, 956, 0, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 933, 418,
	264, 932, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 957, 1859,
	953, 1860, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 954, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 2628, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 2631, 0, 0,
	2630, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 1392, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1390, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1388, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 1386, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1390, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3462, 0, 196, 777, 0, 0, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1390, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1388, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1390,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3176, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 2241, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 2243, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 0, 420, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 2262, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1390, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3562, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 777, 0, 0, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3481, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 3400, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3172, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2999, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 3244, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2844,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 0, 420, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 2813, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1390, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2243, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2318,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 2113, 596, 466, 467,
	576, 0, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1390, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 1738, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 1420, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 617, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 887, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	607, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 0, 420, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 1370, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 1368, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 681, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 640, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 641, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 1815, 0, 0, 0, 0,
	1777, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	1786, 0, 0, 1815, 0, 0, 0, 0, 0, 1818,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 659, 666, 656,
	0, 0, 0, 0, 0, 0, 0, 1808, 663, 664,
	0, 665, 669, 0, 0, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 678, 0,
	0, 680, 0, 0, 0, 0, 679, 0, 1776, 1778,
	1775, 0, 1772, 0, 0, 0, 0, 1796, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 1824,
	0, 0, 1791, 1793, 1795, 1796, 1797, 1798, 1799, 1803,
	1804, 1805, 1807, 1810, 1811, 1812, 1802, 0, 0, 0,
	1792, 0, 0, 1800, 1809, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 1790, 1824, 0, 0,
	1791, 1793, 1795, 0, 1797, 1798, 1799, 1803, 1804, 1805,
	1807, 1810, 1811, 1812, 0, 0, 0, 1816, 0, 0,
	0, 1800, 1809, 1801, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1774, 3299, 0, 0, 0, 1808, 0, 0,
	0, 0, 652, 654, 653, 1816, 0, 0, 1817, 1813,
	0, 0, 658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 1789, 0, 0, 0,
	0, 677, 0, 1788, 0, 0, 0, 0, 655, 0,
	0, 0, 646, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 1792,
	0, 0, 0, 0, 1789, 0, 1794, 0, 0, 0,
	0, 1788, 0, 0, 0, 0, 0, 1796, 0, 1821,
	1820, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 0, 0, 1790, 1824,
	0, 0, 1791, 1793, 1795, 0, 1797, 1798, 1799, 1803,
	1804, 1805, 1807, 1810, 1811, 1812, 1808, 0, 0, 0,
	0, 0, 1782, 1800, 1809, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 661, 667, 0, 668,
	670, 0, 0, 671, 672, 673, 0, 0, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 659, 666, 656, 0,
	0, 0, 0, 0, 0, 0, 1796, 663, 664, 1813,
	665, 669, 0, 0, 651, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 674, 0, 1789, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 0, 1790, 1824, 0,
	0, 1791, 1793, 1795, 0, 1797, 1798, 1799, 1803, 1804,
	1805, 1807, 1810, 1811, 1812, 0, 0, 1806, 0, 0,
	0, 0, 1800, 1809, 1801, 0, 1794, 678, 0, 0,
	680, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 1788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 652, 654, 653, 0, 0, 0, 0, 0, 0,
	0, 658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 661, 667, 0, 668, 670,
	0, 0, 671, 672, 673, 0, 0, 675, 676,
}

var yyPact = [...]int{
	365, -1000, -1000, -1000, -344, 12878, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39769,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39769,
	-342, 39172, 39172, -1000, -1000, 2388, -1000, 37978, 14082, 39769,
	330, 326, 39769, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 736, -1000, 42157, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 560, 42884, 41560, 9867, -260, -1000, 1561, -93, 2232,
	927, 940, 951, 951, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4660, 885, 38575,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4418, 390, 885, 18271, 36, 33, 1561, 387, -165,
	-163, -166, 2489, -1000, 1235, 4375, 153, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9867, 9867,
	12878, -363, 12878, 9867, 39769, 39769, -1000, -1000, -1000, -1000,
	-342, 37978, 560, 42884, 9867, 2232, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -163, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-165, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -166, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4287, -1000, 1460, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2697, 1459, 2229, 502, 39769, -1000, 1458,
	502, -1000, -1000, -1000, 1561, 3123, -1000, 39769, 39769, 110,
	1633, -1000, 415, 354, 379, 1457, -1000, -1000, -1000, -1000,
	-1000, -1000, 443, 3110, -1000, 39769, 39769, 2711, 39769, -1000,
	2048, 473, 43293, 2933, 1182, 816, 2744, -1000, -1000, 2696,
	-1000, 218, 297, 254, 665, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 245, -1000, 3018, -1000, -1000, 211, -1000, -1000,
	191, -1000, -1000, -1000, 25, -1000, -1000, -1000, -1000, -1000,
	-1000, -85, -1000, -1000, 1022, 1941, 9867, 2289, -1000, 3491,
	-1000, -1000, -1000, -1000, 5655, 11670, 11670, 11670, 11670, -1000,
	-1000, 2538, 9867, 2695, 2693, 2686, -1000, -1000, -1000, -1000,
	-1000, -1000, 1456, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1804, -1000, -1000, -1000, 12271, -1000, 2685, 2681,
	2680, 2679, 2678, 2676, 2669, 2666, 2665, 2659, 2656, 2655,
	2649, 2648, 2455, 13475, 2642, 2228, 2226, 2641, 2640, 2639,
	2225, 2455, 2455, 2638, 2632, 2622, 2621, 2620, 2618, 2617,
	2616, 2610, 2608, 2607, 2602, 2601, 2598, 2590, 2589, 2588,
	2586, 2583, 2582, 2581, 2580, 2579, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1417, -1000, 2578, 3128, 2486, -1000, 3008, 3002, 2995, 2991,
	-304, 2560, 2013, -1000, -1000, 60, -1000, -118, -1000, -1000,
	962, -1000, 882, -1000, 39769, 39769, 132, 739, 549, 549,
	549, 549, 549, 602, 549, 3028, 732, 716, 713, 549,
	-116, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1625, 1614,
	2793, 838, -1000, -1000, -1000, -1000, 1353, 39769, -1000, 2506,
	1533, 1533, 3027, 486, 480, 478, 1533, 381, -1000, 1644,
	1644, 1644, 1644, 1533, 423, 484, 3033, 3033, 23, 1644,
	3, 1533, 1533, 3, 1533, 1533, 1533, 217, -314, -1000,
	-1000, -1000, -1000, 1644, 1644, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3000, 2998, 560, 560, 39769, 141, 39769, 560,
	560, 560, 589, -69, 40963, 40366, 2048, 470, 466, 1364,
	1725, -1000, 1555, 39769, 39769, 1555, 1555, 21261, 20664, -1000,
	39769, -1000, 3128, 2486, 2422, 1539, 2412, 2486, -172, -174,
	-175, 560, 560, 560, 560, 560, 180, 560, 560, 560,
	560, 560, 39769, 39769, 37381, 560, 560, 8059, 8059, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12878, 1895,
	1878, 152, -59, -329, 210, -1000, -1000, 39769, 2888, 185,
	-1000, -1000, -1000, 2461, -1000, 2496, 2496, 2496, 2496, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2496, 2496,
	2502, 2558, -1000, -1000, 2491, 2491, 2491, 2461, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2497, 2497, 2499, 2499, 2497, 39769, 9867,
	39769, 2913, 378, 2557, -1000, 39769, 363, 3128, 2908, 3033,
	3071, -1000, -1000, 1454, 2004, 2223, -1000, -1000, 415, 1481,
	-1000, 955, -1000, -1000, -1000, -1000, 39769, -85, 400, -1000,
	-1000, 2218, 2555, -1000, 523, 1078, 1311, -1000, 212, 4801,
	32604, 2048, 32604, 39769, -1000, -1000, -1000, -1000, -1000, -1000,
	24, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 215, -1000, 9867, 9867, 9867, 9867,
	9867, -1000, 645, 11069, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11670, 11670, 11670, 11670, 11670, 11670, 11670, 11670, 11670,
	11670, 11670, 11670, 2537, 1701, 11670, 11670, 11670, 11670, 1539,
	2950, 1354, 247, -1000, -1000, -1000, -1000, -1000, 1646, 1941,
	9867, 9867, 9867, 39769, -1000, -1000, 311, 9867, 9867, 512,
	9867, 2978, 9867, 9867, 9867, 2411, 3786, 39769, 9867, -1000,
	2405, 2403, -1000, -1000, 1916, 9867, -1000, -1000, 9867, -1000,
	-1000, 9867, 11670, 9867, -1000, -1000, -1000, 734, 2978, 2978,
	2978, 1661, 9867, 9867, 2978, 2978, 2978, 1594, 2978, 2978,
	2978, 2978, 2978, 2978, 2978, 2978, 2402, 2396, 2395, 9266,
	3033, -260, -1000, 7458, 2908, 3033, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -308, 2549, 39769, 2222,
	2221, -352, -18, 923, 894, 909, -1000, 2965, -1000, 2548,
	39769, 549, 549, -150, 549, -1000, 39769, 1698, 32604, 39769,
	39769, 2048, 39769, 39769, 39769, 549, 549, 549, 39769, -1000,
	2842, 32604, 2831, 589, -1000, 39769, 1353, 2964, 39769, 3081,
	11670, 11670, -1000, 36784, 1644, 1533, 1533, -1000, -1000, 39769,
	-1000, -1000, -1000, 1644, 39769, 1644, 1644, 3081, 1644, -1000,
	-1000, -1000, 1533, 1533, -1000, -1000, 9867, -1000, -1000, 1644,
	1644, -1000, -1000, 3081, 39769, 13, 3081, 3081, 15, -1000,
	-1000, -1000, 39769, 39769, 549, 39769, -1000, 39769, 39769, -1000,
	-1000, 39769, 39769, 42749, 39769, 36187, 2994, -1000, 32604, 39769,
	39769, 30216, -1000, 1295, -1000, -49, -1000, -39, -69, 1555,
	-69, 1555, -1000, 516, 514, 19470, 468, 32604, 5048, -1000,
	-1000, 1555, 1555, 5048, 5048, 1479, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1341, -1000, 216, 3033, -1000, -1000, -1000,
	-1000, -1000, 2003, 1997, 1995, 39769, 39769, 32604, 2048, 39769,
	560, 39769, 39769, 39769, 39769, 39769, -1000, 2543, 1453, -1000,
	2930, 39769, 39769, 1297, -1000, -1000, 15873, 1452, 1297, -1000,
	1693, -1000, 9867, 12878, -290, 9867, 12878, 12878, 9867, 12878,
	-1000, 9867, 176, -1000, -1000, -1000, -1000, 1994, -1000, 1992,
	-1000, -1000, -1000, -1000, -1000, 2214, 2214, -1000, 1988, -1000,
	-1000, -1000, -1000, 1987, -1000, -1000, 1982, -1000, -1000, -1000,
	2394, 1022, -1000, 2200, 2743, -262, -1000, 17674, 39769, 39769,
	-1000, -1000, -262, -1000, 17072, 39769, 3033, -1000, -265, 2908,
	9867, 39769, -1000, 3026, -1000, 415, 302, -1000, -1000, -1000,
	-1000, -1000, -1000, 1451, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1328, -1000, 39769, -1000, -1000, 212, 32604,
	33798, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 187, -1000,
	-1000, 167, -1000, 704, 150, 1480, -1000, -1000, 133, 173,
	113, 826, 1941, -1000, 1733, 1733, 1703, -1000, 652, -1000,
	-1000, -1000, -1000, 2538, -1000, -1000, -1000, 2196, 1683, -1000,
	1600, 1600, 1487, 1487, 1487, 1487, 1487, 1511, 1511, -1000,
	-1000, -1000, 5655, 2537, 11670, 11670, 11670, 11670, 524, 524,
	2723, 3607, -1000, 9867, 1665, -1000, 9867, 2314, 2251, 1476,
	1444, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2393, 2385, 2126, 3109, 2380, 9867, -1000, -1000, 1477,
	1475, 1470, -1000, 2020, 8665, -1000, -1000, -1000, 2375, 1443,
	2369, -1000, -1000, -1000, 2363, 1462, 1068, 2362, 2153, 2361,
	1322, 9867, 9867, 9867, 9867, 2360, 1449, 1446, 9867, 9867,
	9867, 9867, 2357, 9867, 9867, 9867, 9867, 9867, 9867, 9867,
	9867, 53, 53, 53, 1321, 1316, -1000, -1000, 1402, -1000,
	1941, -1000, -1000, 2908, -1000, 2536, 1976, 1306, -1000, -1000,
	-338, 2169, -1000, -1000, 920, 869, 954, 39769, 1070, 2533,
	39769, 39769, 549, 39769, 171, -1000, 2927, 1102, -1000, 150,
	-98, 335, 1032, 2705, 3106, -188, 39769, 39769, 39769, 2958,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35590, -1000,
	2531, 1370, -1000, -1000, 9867, -1000, -1000, 2703, 39769, 39769,
	3081, 3081, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1644,
	3081, 3081, 1363, 1533, 1644, -1000, -1000, 1644, -1000, -1000,
	1644, -1000, 1442, -1000, 39769, -1000, -1000, -1000, 2957, 2506,
	1301, -1000, 796, 526, 526, 892, 698, 3069, 16470, -1000,
	1567, 1082, 689, 2862, 209, -1000, 1567, -207, 1567, 1567,
	1567, 1567, 1567, 1567, 1567, 434, 416, 1567, 1567, 1567,
	1567, 1567, 1567, 1567, 1567, 1567, 1567, 1567, 938, 1567,
	1567, 1567, 1567, 1567, -1000, 1567, 2529, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 458, 168, 2988, 256, 252, 1102,
	2986, 267, 2934, 1100, -1000, -1000, -1000, -1000, 23649, 23649,
	18873, 23649, -1000, 1495, -69, -76, -1000, -1000, 1295, 5048,
	1295, 5048, -1000, -1000, 607, -1000, -1000, 1032, -1000, 39769,
	39769, -1000, -1000, 2527, 1611, -1000, -1000, 13475, -1000, 5048,
	5048, -1000, -1000, 24246, 39769, -1000, -89, -1000, -75, 2908,
	-1000, -1000, -1000, 1271, -1000, -1000, 1275, 1032, 2741, 39769,
	1271, 1271, 1271, -1000, -1000, 15276, 39769, 39769, -1000, -1000,
	3081, 8059, -1000, 30216, -1000, -1000, 34992, -1000, 34395, 3081,
	1640, -1000, 12878, 1771, 149, -1000, 206, -336, 147, 1658,
	145, 1941, -1000, -1000, 2355, 2354, 1357, -1000, 1349, 2352,
	1336, 1329, -1000, -5, -1000, 2896, 1066, -1000, 2526, -1000,
	1327, 2790, -1000, 1270, -1000, 1610, 1323, -1000, 1066, 1315,
	2773, 1270, 2908, 2195, -1000, 1267, -1000, 2007, 1441, 108,
	-1000, -1000, 39769, 2218, 1314, 33798, 1120, -1000, 598, 1440,
	1439, -1000, 32604, 213, 32604, -1000, 32604, -1000, -1000, 328,
	-1000, 39769, 2902, -1000, -1000, -1000, 2169, 1608, -357, 39769,
	-1000, -1000, -1000, -1000, -1000, 1310, -1000, 524, 524, 2723,
	3034, -1000, 11670, -1000, 11670, 2875, 1619, -1000, 9867, 1746,
	3469, 3469, 2530, 22455, 39769, -1000, -1000, 9867, 9867, -1000,
	2799, -1000, -1000, -1000, -1000, 9867, 9867, 2045, -1000, 39769,
	-1000, -1000, -1000, -1000, 22455, -1000, 11670, -1000, 9867, 1147,
	1147, 2738, 1309, 53, 53, 53, 2734, 2728, 2719, 1300,
	53, 2662, 2596, 2584, 2576, 2564, 2544, 2540, 2534, -1000,
	2522, -1000, -1000, 1812, 10468, 7458, -1000, -1000, 239, 1266,
	1975, 2193, 104, -1000, 1606, -1000, -1000, -1000, 865, 177,
	2350, 1241, -1000, -1000, 39769, -1000, -1000, -1000, 15276, 2506,
	262, 39769, 2506, 64, 1567, -1000, 634, 32604, 459, -1000,
	39769, 1806, 1605, 2739, 453, 2887, 39769, 2519, 2518, 2515,
	2512, 321, 4395, 39769, 1218, -1000, 1429, 4375, -1000, 39769,
	1941, -1000, 2048, -1000, 1533, -1000, -1000, 3081, -1000, -1000,
	9867, 9867, 3081, 1533, 1533, 1644, 39769, -1000, 321, 4395,
	2954, 42749, -1000, 39769, -1000, -1000, -1000, 835, -1000, 841,
	549, 39769, 1760, 841, 1758, 2510, -1000, -1000, 39769, 39769,
	39769, 39769, -1000, -1000, 39769, -1000, 39769, 39769, 39769, 39769,
	-1000, 39769, 39769, -1000, 39769, 1755, 1752, 2852, -1000, 1567,
	1567, 813, -1000, -1000, 499, -1000, 1974, 1973, 1969, 1962,
	2192, 2191, 2190, 1567, 1567, 1961, 2188, 33201, 2187, 1061,
	1949, 1943, 1942, 1970, 2184, 952, -1000, 2180, 1968, 1960,
	1951, 39769, 2507, 2119, -1000, -1000, 64, 1567, 249, 39769,
	1604, 634, 332, 1946, 20067, 39769, 30216, 30216, 30216, 30216,
	-1000, 2765, 2764, -1000, 2813, 2768, 2821, 39769, 30216, 2506,
	-1000, 33201, -1000, -1000, -1000, 1539, 1292, 2804, 881, 9867,
	-1000, -1000, -65, -45, -1000, -1000, -1000, 32604, 2179, 468,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3024, 39769, 39769,
	811, 2349, 1214, -1000, -1000, -1000, 4395, 2496, 2496, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2496, 2496,
	2502, -1000, -1000, 2491, 2491, 2491, 2461, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2497, 2497, 2499,
	2499, 2497, -1000, -1000, 3076, -1000, 1197, -1000, -1000, 1422,
	-1000, 3076, 1663, -346, 12878, 1645, 1541, -1000, 9867, 12878,
	9867, -291, 228, -293, -1000, -1000, -1000, 2178, -1000, -1000,
	-1000, 1935, -1000, 1933, 80, 84, 1738, -262, 7458, 385,
	39769, -262, 39769, 7458, -1000, 39769, 382, -262, 3024, -5,
	9867, 2839, -1000, -1000, 39769, 1932, -1000, -1000, -1000, 3093,
	32604, 2048, 1496, 32007, -1000, 203, -1000, 184, 494, 2177,
	-1000, 702, 103, 2175, 2169, -1000, -1000, -1000, -1000, 11670,
	-1000, -1000, -1000, -1000, 1941, 9867, 2346, -1000, 906, 906,
	2338, 2337, -1000, 2496, 2496, -1000, 2461, 2491, 2461, 906,
	906, 2327, -1000, 1811, 2465, -1000, 2392, 2345, 9867, -1000,
	2326, 3595, 1278, -121, -235, 53, 53, -1000, -1000, -1000,
	-1000, 53, 53, 53, 53, -1000, 53, 53, 53, 53,
	53, 53, 53, 53, 510, -148, -319, -158, -320, -1000,
	2325, 1184, -1000, -1000, -1000, -1000, -1000, 512, 1177, -1000,
	-1000, 2169, 2167, -1000, 2166, 2160, 1070, 4395, 2322, 2938,
	14679, 2937, 2490, 2485, 2924, 1991, -1000, -1000, -1000, 31410,
	493, -1000, -1000, -1000, 556, 205, 1930, 476, -1000, 39769,
	267, 2801, 1602, 2157, 39769, -1000, -1000, -1000, -1000, -1000,
	-1000, 2887, -1000, 928, 296, 29022, 14679, 14679, 14679, 308,
	1616, -1000, 502, 1054, 1396, 30216, 39769, -1000, 29619, 2317,
	-1000, 1032, 3081, -1000, 1941, 1941, -1000, 3081, 3081, 1533,
	-1000, 308, -1000, 350, -1000, 2869, 4395, -1000, 39769, -1000,
	39769, -1000, 39769, 39769, 549, 9867, 2869, 39769, 593, -1000,
	-1000, 964, 293, 644, 644, 1134, -1000, 2917, -1000, -1000,
	-1000, 39769, -1000, -1000, -1000, -1000, -1000, -1000, 22455, 22455,
	2984, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2154, 2144, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 39769, 1289, -1000, 1599, 1991, 31410,
	1598, 1555, 2137, 493, 1806, 1586, -1000, 2135, -1000, 1069,
	39769, 39769, -1000, 1107, -1000, 1584, 2718, 2737, 2718, -1000,
	-1000, -1000, -1000, 2758, -1000, 2757, -1000, -1000, 1107, -1000,
	-1000, -1000, -1000, -1000, 881, -1000, 3023, 841, 841, 841,
	2312, -1000, -1000, -1000, 1120, 2310, -1000, -1000, -1000, 3124,
	-1000, -1000, -1000, -1000, -1000, -1000, 15276, 2885, 3074, 3067,
	30813, 3074, -1000, -346, 1603, -1000, 1695, 143, 1642, 39769,
	-1000, -1000, -1000, 2309, 2307, -267, 96, 3066, 3065, 765,
	-1000, 2304, 1118, -262, -1000, -1000, 1066, -1000, -1000, -1000,
	-262, -1000, 1066, -1000, 80, -1000, -1000, 2872, -1000, -1000,
	2048, -1000, 181, -1000, -1000, -1000, -1000, -1000, -1000, 126,
	-1000, 39769, -1000, 1115, 102, -1000, 1941, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9867, -1000, -1000, -1000, 2287, -1000, -1000,
	9867, 2303, 2132, 2291, 2131, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3128,
	-1000, 3062, 2288, 2285, 2284, 2282, 2276, 2275, -1000, 9867,
	2272, 512, -1000, -1000, -1000, -1000, -1000, -1000, 743, 350,
	2270, 1109, -1000, -1000, -1000, -1000, 350, 27828, 14679, 350,
	-1000, 2130, 139, -1000, -1000, -1000, 2128, 2124, 1928, -1000,
	-1000, 1938, 1447, 155, -1000, -1000, -1000, -1000, -1000, -1000,
	1946, 1883, 1581, -359, -1000, 2484, -1000, 1567, 1567, 1567,
	39769, 1287, -1000, 1567, 1567, 2268, 2267, 2265, 515, 1576,
	1569, -1000, 1920, 23649, 30216, 29619, 1098, -1000, 1376, -1000,
	-1000, -1000, -1000, -1000, 3081, 515, -1000, -1000, -1000, 39769,
	258, 2480, -1000, 2478, 2701, 346, 2477, 2476, 39769, 2141,
	-1000, 2869, 39769, 594, 2884, -1000, -1000, -1000, -1000, -1000,
	386, -1000, 39769, -1000, -1000, 1473, -1000, 22455, -1000, -1000,
	1276, -1000, 2119, 2118, -1000, 139, 2110, 5048, -1000, -1000,
	2801, 2109, -1000, 39769, 1069, 1069, 3128, 39769, 7458, -1000,
	-1000, 9867, 2475, -1000, 9867, -1000, -1000, -1000, -1000, -1000,
	2474, 2923, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1750,
	-1000, 9867, 9867, -1000, -1000, 535, 12878, -295, 227, -1000,
	-1000, -1000, -269, 2108, -1000, -1000, 3059, 2096, 2035, 39769,
	-1000, -1000, 1066, 1066, -267, -1000, -1000, 1032, -1000, -1000,
	15, 438, -1000, 2099, -1000, 2092, 53, -1000, 53, -1000,
	163, 9867, -1000, -1000, -1000, -1000, -1000, -1000, 2082, -1000,
	2262, 4395, -189, -190, 14679, -1000, 1272, -1000, 1567, 1567,
	2246, -189, -1000, -1000, 313, -1000, -1000, 261, -1000, -1000,
	1874, 521, -1000, -1000, -1000, 1578, 1770, 2049, 27231, 22455,
	23052, 2095, -1000, -1000, 29022, 1750, 1750, 43078, 215, 43078,
	944, 1546, -1000, 1900, -1000, 1897, -1000, 3081, 1098, 1376,
	-1000, -1000, 1478, -1000, 944, -1000, -1000, 258, -1000, -1000,
	1776, 11670, -1000, -1000, 2091, 23052, 680, 1577, 1575, 792,
	2473, -1000, 398, 3121, -1000, -1000, -1000, 791, 2470, -1000,
	1729, 1709, -1000, 39769, -1000, 27231, 27231, 735, 735, 27231,
	27231, 2468, 644, -1000, -1000, 11670, -1000, -1000, -1000, -1000,
	1567, 1465, -1000, -1000, -1000, -1000, -1000, -1000, 1883, -1000,
	-1000, 3033, -1000, -1000, 1941, 39769, 1941, 28425, -1000, 3058,
	3055, -1000, 1941, 1022, -1000, -346, 39769, 39769, -271, 1889,
	-1000, 2084, 95, -1000, -1000, 1029, -269, -282, 78, 79,
	1574, -1000, -1000, -1000, -1000, 2245, -1000, 600, -1000, -1000,
	-1000, 1022, -1000, -1000, -183, -1000, -1000, 373, -1000, -1000,
	-1000, 27828, 1750, 1750, -190, -1000, 491, 2079, -1000, -1000,
	244, -1000, -1000, 2071, -1000, -1000, 100, -1000, 1572, 1263,
	-1000, 2461, 9867, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 501, 42949, -1000, 1082, -1000, 15, 501, 508, 241,
	-1000, 1850, -1000, -1000, 3128, -1000, 469, -1000, -1000, 2723,
	-1000, -1000, -1000, -1000, -1000, -1000, 2070, 2064, -1000, -1000,
	-1000, -1000, -1000, 1822, 2459, -102, 2982, 2062, -1000, -1000,
	2457, 1248, 1247, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1240, 1236, 27231, -1000, -1000, 2723, 22455, 1567, -1000,
	-1000, 1229, 1227, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2456, -1000, -1000, 3053, -271, -1000, 2056, 588, 94, 79,
	-1000, 3051, 89, 3049, 3048, 2054, -1000, -1000, 559, -263,
	49, 43, 41, -1000, -1000, -1000, 9867, 39769, 393, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 125, -1000, -1000, -1000,
	-1000, 2049, 2038, -1000, 27231, 2917, 1986, 352, 3046, 43078,
	-1000, 1567, -1000, 352, -1000, 318, -1000, 1506, -1000, 1821,
	-1000, 3033, -1000, 317, -1000, -1000, -1000, 2241, 9867, 2455,
	1567, 2240, -179, 27231, 2664, 2546, 2542, 2532, 1223, -1000,
	22455, -1000, -1000, 26634, 39769, 2035, -1000, -1000, 2453, 1816,
	96, 65, 3044, -1000, 2035, 3042, 2035, 2035, 992, 1662,
	-1000, 61, 59, 46, -1000, -1000, -1000, -1000, 475, -1000,
	202, -1000, -1000, -1000, 240, -1000, -1000, 2917, -1000, 3037,
	399, -1000, 22455, -1000, -1000, -1000, 1809, -1000, -1000, -1000,
	-1000, 1910, -1000, 39769, -1000, 2733, -1000, 179, 1221, 240,
	735, 240, 735, 240, 735, 240, 735, 198, -1000, -1000,
	-1000, 1212, -1000, -1000, 2976, 21858, 72, -1000, -1000, -1000,
	2036, -1000, 2035, -1000, -1000, -1000, 57, 559, -1000, -1000,
	-1000, 2034, -1000, -1000, -1000, -1000, 1567, 1567, 2032, 2026,
	285, -1000, -1000, -1000, 26037, 370, 414, 345, -1000, 506,
	-1000, -1000, -1000, 644, -1000, -1000, 2725, 2724, 3097, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39769,
	-1000, 39769, -1000, 1193, -1000, -1000, -1000, 1366, -1000, -1000,
	-1000, -1000, 1554, -1000, -316, 1803, 1798, -1000, -1000, 39769,
	-1000, 39769, 359, 1793, 11670, 2437, 11670, 2431, 376, 2429,
	-1000, -1000, 3119, -1000, 3113, 677, 677, 240, 240, 240,
	240, -1000, 981, -1000, 1548, -1000, 25440, 39769, 2023, -1000,
	-1000, 2016, -1000, -1000, -1000, 1183, 2424, 3035, -1000, 3570,
	39769, 3556, 39769, 2389, 1518, 11670, -1000, -1000, -1000, 1871,
	389, -1000, 39769, 6857, -1000, 1083, -1000, -1000, -1000, -1000,
	500, 374, -1000, 1180, -1000, 1139, 24843, 1787, 3167, -1000,
	-1000, -1000, -1000, -1000, 1941, 39769, 1122, -1000, 39769, 356,
	-1000, -1000, -1000, 1110, -1000, -1000, -1000, -1000, 500, 2746,
	-1000, 1782, -1000, -1000, 42787, 633, -1000, -1000, 42787, 355,
	-1000, 496, 2224, -1000, -1000, 1103, -1000, 39769, 693, 6256,
	-1000, 355, 43078, -1000, 6256, 1079, -1000, 1941, -1000, -1000,
	43078, 1047, -1000, 6256, -1000, -1000,
}

var yyPgo = [...]int{
	0, 168, 3140, 236, 166, 3704, 96, 237, 227, 218,
	234, 3703, 3690, 3689, 2911, 2905, 3683, 3681, 3680, 3679,
	3678, 3662, 3660, 3646, 3624, 3620, 3617, 3616, 3615, 3614,
	3613, 3612, 3611, 3610, 3608, 3607, 3601, 3600, 3596, 3595,
	3593, 3592, 3591, 3590, 3589, 3587, 232, 3586, 3585, 3583,
	3582, 3581, 3579, 3578, 3575, 3574, 3573, 3572, 3571, 3570,
	3569, 3568, 3567, 3563, 3562, 3561, 3560, 3558, 3555, 3554,
	3553, 3552, 3550, 3549, 3544, 3543, 3541, 3539, 3538, 211,
	3536, 2903, 3535, 3534, 3532, 3530, 3529, 3528, 3527, 241,
	3526, 3525, 3520, 3519, 3518, 3517, 3516, 3515, 3514, 3512,
	3511, 238, 3510, 3509, 3506, 3505, 3504, 3503, 229, 3502,
	163, 184, 3500, 3497, 3495, 3494, 3493, 3491, 225, 174,
	74, 3490, 49, 3489, 3488, 207, 3487, 133, 3486, 141,
	3485, 3484, 3483, 3481, 3479, 3473, 3472, 3471, 3470, 3469,
	3465, 3464, 3461, 3459, 3457, 3456, 90, 3455, 249, 3453,
	70, 3452, 3451, 122, 235, 181, 250, 2320, 255, 239,
	179, 169, 93, 3450, 2876, 3449, 154, 217, 149, 26,
	3448, 125, 3447, 251, 46, 45, 242, 130, 62, 153,
	120, 3446, 205, 107, 106, 3445, 3444, 132, 228, 171,
	3442, 102, 3438, 3437, 3436, 3434, 3433, 188, 175, 3431,
	3430, 123, 3429, 3427, 97, 3423, 75, 189, 158, 187,
	3420, 358, 118, 127, 117, 176, 3419, 100, 3418, 3417,
	3416, 3415, 173, 3414, 3413, 135, 68, 3412, 3411, 3410,
	71, 3408, 47, 3407, 28, 3404, 65, 3403, 3402, 3400,
	3398, 3397, 3396, 3395, 3393, 3392, 3391, 3390, 61, 3389,
	3388, 16, 18, 20, 3386, 27, 3385, 160, 3382, 3381,
	3380, 87, 85, 3379, 86, 1, 54, 77, 3372, 3370,
	216, 66, 99, 144, 3369, 284, 3368, 3365, 3364, 150,
	3362, 565, 3361, 3360, 3358, 3356, 3355, 3353, 19, 3352,
	214, 39, 3351, 124, 139, 3350, 36, 48, 192, 224,
	3345, 3344, 3342, 137, 194, 112, 32, 0, 3341, 148,
	3340, 3338, 3337, 247, 3336, 222, 223, 162, 138, 248,
	244, 3330, 3329, 67, 3327, 156, 57, 56, 143, 11,
	23, 213, 3326, 14, 2, 178, 3325, 200, 3323, 151,
	3, 303, 131, 3321, 3320, 34, 243, 3318, 3317, 3316,
	121, 3315, 3299, 278, 79, 3297, 3296, 3293, 3290, 43,
	3289, 37, 21, 3287, 91, 3286, 265, 3283, 231, 126,
	177, 170, 147, 209, 221, 78, 76, 3282, 1658, 146,
	95, 24, 3281, 215, 3280, 245, 119, 3279, 109, 3276,
	233, 253, 186, 3275, 172, 10, 44, 35, 3274, 9,
	3273, 88, 197, 3272, 3271, 22, 55, 3269, 25, 3268,
	3267, 3265, 3264, 8, 3263, 3262, 3261, 4, 7, 3260,
	5, 206, 161, 115, 89, 69, 3259, 3257, 51, 159,
	3256, 145, 152, 136, 3255, 72, 3254, 3252, 3251, 1813,
	3250, 240, 3248, 3247, 3245, 3244, 3243, 3242, 3240, 3239,
	3237, 3235, 94, 42, 3231, 3230, 3229, 3227, 81, 134,
	3226, 3225, 3222, 3221, 38, 128, 3220, 30, 3219, 33,
	29, 41, 3218, 98, 3217, 15, 199, 3216, 3215, 17,
	3214, 3213, 12, 13, 3212, 3209, 113, 3208, 101, 31,
	157, 105, 3207, 3205, 84, 201, 129, 3204, 3203, 92,
	230, 190, 3201, 142, 226, 246, 3200, 198, 3199, 3198,
	3197, 3196, 3195, 3192, 1091, 3191, 3190, 219, 73, 80,
	111, 3189, 3186, 3185, 83, 155, 116, 110, 64, 82,
	3183, 108, 185, 3182, 183, 3181, 3167, 103, 3166, 3165,
	3164, 3162, 180, 3160, 3159, 182, 212, 3158, 3157, 282,
	3156, 3154, 3153, 3151, 3150, 3149, 3148, 3146, 3144, 3143,
	220, 313, 3142,
}

//line mysql_sql.y:10945
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 555, 558, 558, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 540, 540, 540, 541,
	541, 112, 134, 133, 136, 136, 135, 135, 132, 132,
	128, 131, 131, 130, 130, 129, 124, 126, 126, 125,
	127, 127, 113, 101, 114, 485, 485, 484, 484, 483,
	483, 436, 436, 482, 482, 482, 481, 481, 481, 480,
	480, 479, 479, 478, 478, 476, 476, 477, 475, 474,
	474, 474, 472, 472, 472, 468, 468, 470, 469, 469,
	471, 463, 463, 466, 466, 464, 464, 464, 464, 467,
	462, 462, 462, 461, 461, 100, 100, 100, 380, 380,
	99, 99, 394, 394, 394, 394, 394, 392, 392, 392,
	392, 392, 392, 391, 391, 390, 390, 395, 395, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 90,
	90, 90, 90, 90, 95, 95, 95, 546, 546, 545,
	545, 547, 547, 547, 547, 548, 548, 93, 93, 93,
	94, 389, 389, 389, 91, 92, 92, 379, 379, 384,
	384, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 388, 388, 388, 386, 386, 385,
	385, 387, 387, 84, 84, 84, 87, 86, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 376, 376, 375, 96, 96, 97, 543, 543,
	542, 544, 544, 544, 544, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 510, 510, 510, 512, 512, 311,
	312, 559, 314, 310, 310, 310, 506, 506, 507, 508,
	509, 509, 509, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 256, 256, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 244,
	244, 244, 239, 239, 239, 239, 240, 240, 241, 241,
	242, 242, 242, 242, 243, 243, 304, 304, 261, 261,
	261, 263, 263, 262, 260, 258, 258, 258, 258, 258,
	258, 259, 259, 259, 264, 264, 76, 82, 82, 82,
	523, 523, 77, 534, 534, 439, 439, 325, 325, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 444, 445, 321, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 365, 365, 51, 560, 560, 299, 299,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 457,
	457, 562, 562, 562, 71, 72, 438, 438, 438, 61,
	60, 59, 58, 57, 57, 49, 49, 48, 48, 54,
	140, 141, 318, 318, 318, 320, 320, 316, 561, 561,
	408, 408, 319, 319, 47, 47, 47, 47, 74, 317,
	317, 298, 315, 315, 315, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 373, 373, 370, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 161, 161, 212,
	212, 518, 518, 514, 514, 515, 515, 515, 516, 516,
	517, 517, 108, 451, 451, 451, 451, 451, 451, 8,
	183, 183, 450, 450, 450, 450, 450, 450, 377, 377,
	377, 495, 495, 495, 496, 182, 182, 177, 177, 452,
	452, 342, 497, 497, 460, 460, 459, 459, 458, 458,
	180, 180, 181, 181, 164, 164, 119, 119, 465, 465,
	465, 465, 473, 473, 435, 435, 248, 248, 291, 291,
	292, 292, 154, 154, 155, 155, 155, 155, 155, 155,
	549, 549, 550, 551, 552, 552, 553, 553, 553, 554,
	554, 554, 554, 554, 503, 503, 505, 505, 504, 179,
	179, 175, 175, 176, 176, 176, 174, 174, 173, 172,
	172, 171, 169, 169, 169, 170, 170, 170, 187, 187,
	157, 157, 157, 156, 156, 156, 156, 156, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	158, 158, 511, 511, 511, 440, 440, 440, 447, 447,
	272, 272, 273, 273, 271, 271, 159, 159, 160, 160,
	160, 160, 270, 270, 269, 162, 162, 168, 167, 167,
	163, 163, 163, 163, 280, 280, 279, 279, 279, 279,
	111, 117, 117, 118, 186, 186, 278, 277, 277, 277,
	185, 185, 184, 184, 178, 178, 166, 166, 166, 166,
	276, 165, 274, 539, 539, 538, 538, 537, 535, 535,
	535, 536, 536, 536, 536, 487, 487, 487, 487, 487,
	305, 305, 305, 309, 309, 308, 308, 308, 308, 308,
	313, 7, 7, 7, 7, 7, 7, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	38, 196, 197, 39, 198, 198, 199, 199, 200, 200,
	201, 202, 203, 203, 203, 203, 37, 188, 188, 189,
	189, 190, 190, 191, 192, 192, 192, 195, 193, 194,
	194, 557, 557, 556, 36, 36, 29, 147, 147, 148,
	148, 148, 150, 150, 245, 245, 245, 149, 149, 151,
	151, 151, 519, 522, 520, 520, 524, 524, 524, 525,
	525, 525, 525, 526, 526, 30, 137, 142, 529, 529,
	529, 528, 528, 530, 530, 531, 531, 295, 295, 296,
	296, 145, 146, 146, 144, 139, 153, 153, 153, 153,
	153, 138, 143, 521, 527, 527, 527, 374, 374, 371,
	372, 372, 369, 368, 368, 368, 533, 533, 532, 532,
	532, 306, 306, 31, 364, 364, 366, 367, 367, 367,
	358, 358, 358, 358, 35, 362, 362, 363, 363, 363,
	363, 363, 363, 363, 359, 359, 361, 361, 357, 357,
	357, 357, 357, 357, 34, 152, 152, 356, 356, 353,
	353, 351, 351, 352, 352, 350, 350, 350, 354, 354,
	42, 75, 43, 44, 45, 41, 41, 41, 355, 355,
	33, 33, 33, 121, 120, 120, 120, 120, 120, 123,
	123, 294, 294, 293, 293, 122, 40, 224, 224, 427,
	427, 422, 422, 422, 422, 422, 442, 442, 442, 423,
	423, 423, 424, 424, 424, 426, 426, 426, 425, 425,
	425, 425, 425, 441, 441, 443, 443, 443, 396, 396,
	397, 397, 397, 400, 400, 414, 414, 415, 415, 413,
	413, 420, 420, 419, 419, 418, 418, 417, 417, 416,
	416, 416, 416, 411, 411, 410, 410, 398, 398, 398,
	398, 398, 399, 399, 399, 409, 409, 412, 412, 268,
	268, 267, 267, 232, 232, 233, 233, 266, 266, 230,
	230, 231, 231, 231, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 493,
	493, 494, 235, 235, 246, 246, 246, 246, 246, 246,
	234, 234, 236, 236, 213, 213, 211, 211, 204, 204,
	205, 205, 206, 206, 206, 210, 210, 209, 209, 209,
	209, 207, 207, 208, 208, 208, 208, 208, 208, 382,
	382, 490, 490, 491, 491, 486, 486, 486, 489, 489,
	489, 489, 489, 489, 492, 492, 492, 488, 488, 214,
	289, 289, 289, 307, 307, 307, 307, 288, 288, 288,
	229, 229, 228, 228, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 381, 381, 322, 322,
	323, 323, 255, 254, 254, 254, 254, 254, 252, 253,
	251, 251, 251, 251, 251, 250, 250, 249, 249, 249,
	360, 360, 247, 247, 238, 238, 238, 237, 237, 237,
	421, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 286, 286, 286,
	287, 287, 287, 287, 287, 287, 332, 332, 338, 338,
	502, 502, 501, 215, 215, 215, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 225, 225, 225, 405, 405,
	405, 405, 406, 406, 406, 406, 407, 407, 407, 403,
	403, 404, 404, 343, 344, 344, 448, 448, 449, 449,
	401, 401, 402, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 456, 456, 456, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 513, 513, 513, 498, 498, 498, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 284, 284, 284,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 345, 345, 346, 346, 453,
	453, 453, 453, 453, 453, 454, 454, 455, 455, 455,
	455, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	330, 281, 281, 281, 347, 339, 339, 340, 340, 341,
	341, 333, 333, 333, 333, 333, 333, 334, 334, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 335, 335, 337, 337, 349, 349, 349, 348, 348,
	348, 348, 348, 348, 348, 227, 227, 227, 227, 327,
	327, 327, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 217, 217, 217, 217, 221, 221,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 222, 222, 222, 222, 222, 220,
	220, 220, 220, 220, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 109, 110, 110, 219, 290, 290, 428, 428,
	431, 431, 429, 429, 430, 432, 432, 432, 433, 433,
	433, 434, 434, 434, 437, 437, 297, 297, 297, 303,
	303, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	4, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 6, 4, 5, 7, 4, 5,
	0, 1, 3, 8, 0, 6, 0, 4, 6, 1,
	1, 1, 1, 1, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 14, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 1,
	1, 0, 1, 2, 9, 9, 7, 1, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 3, 2,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	8, 2, 4, 4, 4, 9, 10, 8, 0, 2,
	11, 9, 11, 2, 2, 9, 4, 5, 3, 0,
	4, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	2, 0, 3, 2, 4, 3, 0, 2, 1, 0,
	2, 3, 0, 2, 3, 0, 2, 1, 0, 3,
	2, 4, 3, 0, 1, 0, 1, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 1,
	3, 3, 3, 0, 4, 1, 3, 3, 3, 0,
	1, 1, 3, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 1,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 1, 1, 7, 9, 7,
	9, 2, 1, 7, 9, 7, 9, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 3, 3, 2, 2, 1, 5, 6, 4,
	1, 1, 1, 5, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	6, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	7, 7, 7, 7, 7, 7, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 2, 0, 2,
	0, 1, 6, 8, 8, 6, 6, 5, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -555, -558, -2, -5, 608, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -154, -115, -116, 598,
	-85, -86, -87, -32, -31, -30, -29, -137, -142, 604,
	443, 13, 492, -14, -15, -503, -16, 257, -310, -311,
	-312, -314, -559, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -140, -141,
	-74, -56, -75, -77, -76, -82, -78, -83, -139, -144,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 367, 373, 430, 597, 60, -155, -157, 614, 615,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 535,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-138, -24, -143, -22, 252, 251, 37, 318, 319, 320,
	371, 250, 229, 14, 30, 41, 347, -156, 81, 527,
	528, 530, 230, -158, 12, 619, -6, -3, -2, -124,
	-128, -132, -135, -136, -133, -134, -4, -110, 115, 242,
	599, -307, 363, 600, 602, 601, 84, 92, -300, -302,
	443, 257, 367, 373, 597, 615, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 564, 565, 555, 556, 557, 558, 559, 560, 561,
	562, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 495, 584, 585, 586, 587,
	523, 583, 345, 346, 532, 269, 293, 398, 299, 306,
	157, 176, 170, 198, 190, 528, 165, 273, 311, 274,
	91, 160, 478, 105, 455, 427, 163, 288, 290, 292,
	524, 525, 357, 295, 522, 294, 296, 298, 526, 275,
	348, 186, 181, 287, 271, 179, 276, 39, 277, 203,
	278, 279, 537, 451, 344, 457, 303, 51, 425, 180,
	452, 291, 454, 207, 211, 469, 470, 174, 175, 459,
	472, 202, 205, 206, 249, 342, 343, 42, 534, 261,
	473, 209, 201, 197, 481, 307, 305, 200, 173, 196,
	272, 64, 213, 212, 214, 421, 422, 423, 424, 280,
	281, 361, 468, 193, 182, 349, 166, 22, 476, 256,
	456, 374, 282, 300, 308, 208, 210, 263, 268, 536,
	527, 429, 267, 304, 474, 178, 260, 289, 255, 477,
	167, 530, 376, 283, 161, 297, 471, 480, 63, 389,
	172, 164, 246, 158, 265, 270, 284, 285, 286, 521,
	310, 309, 301, 529, 194, 262, 199, 184, 171, 195,
	159, 264, 479, 390, 595, 347, 408, 192, 189, 266,
	239, 475, 458, 162, 412, 391, 187, 312, 591, 592,
	593, 362, 341, 313, 314, 185, 253, 449, 450, 317,
	418, 333, 392, 428, 399, 393, 220, 221, 321, 461,
	463, 204, 594, 322, 323, 324, 453, 325, 326, 327,
	328, 366, 55, 57, 93, 95, 616, 617, 62, 28,
	352, 355, 387, 394, 335, 596, 533, 332, 336, 356,
	24, 410, 378, 414, 413, 47, 48, 49, 52, 53,
	54, 56, 58, 59, 50, 520, 371, 384, 482, 44,
	46, 381, 26, 358, 409, 431, 331, 411, 442, 440,
	441, 462, 25, 360, 359, 61, 43, 417, 419, 420,
	27, 315, 329, 369, 605, 483, 364, 380, 383, 365,
	334, 354, 385, 66, 65, 377, 606, 372, 370, 330,
	538, 539, 337, 563, 350, 426, 517, 516, 515, 514,
	513, 512, 511, 510, 318, 319, 320, 395, 396, 397,
	407, 400, 401, 402, 403, 404, 405, 406, 445, 446,
	607, 464, 466, 467, 465, 234, 618, 351, 237, 609,
	610, 94, 611, 613, 612, 45, -387, -385, -307, 528,
	597, 373, 527, 530, 367, 347, 615, 371, 257, 318,
	319, 320, 443, -198, -307, 618, -164, 38, -211, -307,
	-164, -81, -15, -14, -156, -157, -211, 236, -315, 23,
	425, -89, 426, 232, 81, -307, -9, -101, -8, -108,
	-79, -154, 430, -313, -307, 318, 318, -313, 236, -307,
	267, 406, -439, 242, -391, -364, 268, -390, -366, -393,
	-367, 31, 228, 230, 229, 264, 15, 371, 238, 13,
	12, 372, 250, 24, 25, 27, 14, 373, 375, 28,
	376, 379, 380, 381, 41, 384, 385, 257, 84, 92,
	87, 275, -197, -307, -341, -333, 112, -336, -328, -329,
	-331, -482, -476, -326, 81, 139, 140, 147, 113, -330,
	-421, 35, 115, 544, 583, 493, -282, -283, -284, -285,
	-286, -287, -307, -477, -475, 87, 96, 98, 102, 103,
	101, 99, 151, 183, 100, 88, 152, -157, 84, -498,
	553, -301, 576, 584, 585, 586, 587, 575, 60, -446,
	-455, 235, -453, 150, 188, 253, 184, 13, 145, 418,
	185, 550, 572, 495, 554, 564, 579, 546, 547, 548,
	541, 542, 543, 545, 555, 557, 571, -456, 567, 577,
	578, 563, 580, 581, 582, 613, 86, 85, 570, 569,
	556, 551, 552, 558, 540, 549, 559, 560, 568, 573,
	574, 45, 355, 105, 356, 357, 485, 348, 358, 242,
	425, 69, 359, 360, 361, 362, 363, 492, 364, 70,
	365, 354, 257, 408, 366, 187, 204, 497, 496, 498,
	489, 486, 484, 487, 488, 490, 491, 561, 562, 566,
	-117, -118, 589, -549, -275, -550, 6, 7, 8, 9,
	-551, 152, -540, 427, 536, 87, 162, 159, -378, 162,
	111, 167, 166, -378, 321, 263, -355, -147, 345, 408,
	325, 93, 267, -358, -356, 524, -441, 315, 311, 237,
	108, -148, 247, 246, 106, 485, 235, 382, 306, 55,
	57, -514, -515, 225, 226, 227, -505, 518, -504, -307,
	357, 95, 26, 236, 368, 263, 463, 461, 462, 464,
	465, 466, 467, -62, -457, -438, 458, 457, -319, 450,
	456, 448, 460, 451, 346, 327, 326, 228, 609, 525,
	519, -297, 392, 428, 482, 483, 369, 429, 469, 471,
	452, 105, 191, 188, 237, 239, 236, 345, 485, 408,
	93, 325, -514, 159, 469, 471, 267, 406, 40, -384,
	418, -383, -385, 470, 481, 85, 86, 468, -297, 105,
	449, 449, -549, -275, -155, -157, -111, -503, 526, 526,
	526, 237, 345, 408, 267, 238, 236, 522, 524, 239,
	485, 235, 318, 368, 263, 325, 93, -440, -511, 31,
	-447, 222, 223, 224, 32, 33, -1, 119, 619, -333,
	-333, -6, 622, -6, -333, -307, -307, 154, -217, -221,
	-218, -220, -219, -223, -222, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 30, 204, 253, 184, 185, 186, 187, 207, 170,
	190, 533, 215, 171, 216, 172, 217, 173, 218, 174,
	175, 219, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -180, 259, -211, 153, -180, -549, -173, -174,
	11, -211, -288, -307, 427, 122, -89, -89, 426, -506,
	-507, -508, -510, 232, 426, 425, 153, 275, 16, -313,
	-313, 79, -211, -366, 267, -391, -364, 35, 78, 154,
	240, 154, 78, 81, 369, 345, 408, 370, 485, 236,
	382, 239, 267, 383, 345, 408, 236, 239, 485, 267,
	345, 236, 239, 408, 267, 383, 448, 449, 239, 26,
	374, 377, 378, 449, -461, 481, 154, 111, 108, 109,
	110, -333, 129, -348, 122, 123, 124, 125, 126, 127,
	128, 136, 135, 146, 139, 140, 141, 142, 143, 144,
	145, 137, 138, 132, 112, 130, 134, 131, 114, -157,
	-333, -341, 60, -331, -331, -331, -331, -421, -338, -333,
	81, 81, 81, 153, 99, 87, -333, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, -454,
	81, 81, -345, -346, 81, 81, -326, -288, 81, 87,
	87, 81, 81, 81, 87, -346, -346, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-174, 154, -173, 81, -173, -174, -158, -157, 31, 32,
	31, 32, 31, 32, 31, 32, -552, 606, 81, 96,
	616, 220, 474, 535, 165, 166, 167, -196, -307, -198,
	368, 239, 522, 521, 239, -148, -353, 242, -353, -353,
	-353, -353, 238, -353, 23, 236, 236, 236, -353, 492,
	122, 122, 58, -516, 169, 154, -505, -179, 81, -318,
	130, 134, -318, 23, 265, 265, 265, -318, 305, -560,
	-561, 16, 132, -316, -561, -316, -316, -318, -562, 238,
	459, 42, 266, 265, -175, -176, 21, -175, 453, 449,
	-408, 454, 455, -320, -561, -319, -318, -318, -319, -318,
	-318, -318, 236, 239, 485, 325, 610, -560, -560, 30,
	30, -439, -439, -211, -439, 519, -298, -307, -439, -439,
	-439, -517, 241, -546, -545, 472, -548, 474, 159, -385,
	159, -385, -366, 267, 267, 154, 122, 23, -386, 122,
	133, -385, -385, -386, -386, -234, 40, -306, 150, -307,
	87, -234, 40, -543, -542, -211, -174, -158, -157, 82,
	82, 82, 529, 529, 529, -439, -439, -439, -439, -439,
	-441, -439, -439, -439, -439, -439, -313, -188, -307, -198,
	242, -439, -439, -159, -160, 141, -333, -307, -159, -3,
	-126, -125, 116, 117, 119, 600, 363, 599, 603, 597,
	-385, 40, -434, 390, 389, -428, -430, 81, -429, 81,
	-429, -429, -429, -429, -429, 81, 81, -431, 81, -431,
	-431, -428, -432, 81, -432, -433, 81, -433, -432, -307,
	-339, -341, -307, 38, -450, 60, -154, 81, 30, 81,
	-307, -451, 60, -154, 81, 30, -174, -119, 38, -176,
	20, 153, 96, 87, -89, 82, 154, -509, 102, 103,
	-512, 202, 194, -307, -104, 87, -7, -8, -9, -10,
	-46, -79, -154, -478, -476, 81, 31, 417, 78, 16,
	-392, 236, 485, 368, 263, 239, 345, -390, -373, -370,
	-368, -306, -366, -369, -368, -395, -288, 449, -120, 432,
	431, 317, -333, -333, -333, -333, -333, 101, 112, 341,
	102, 103, -328, -349, 31, 313, 314, -329, -329, -329,
	-329, -329, -329, -329, -329, -329, -329, -329, -329, -337,
	-347, -421, 81, 132, 130, 134, 131, 114, -331, -331,
	-329, -329, 82, 154, -502, -501, 116, -333, -333, -333,
	-307, -499, -500, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 359, 354, 360, 358, 348, 366,
	361, 362, 187, 516, 517, 510, 511, 512, 513, 514,
	515, -339, -339, -333, -499, -339, -281, 32, 31, -341,
	-341, -341, 82, -333, -513, 339, 338, 340, -177, -307,
	-339, 82, 82, 82, 96, -341, -341, -339, -329, -339,
	-500, -281, -281, -281, -281, 141, -341, -341, -281, -281,
	-281, -281, 141, -281, -281, -281, -281, -281, -281, -281,
	-281, 82, 82, 82, 141, -341, -175, -118, -459, -458,
	-333, 40, -119, -176, -553, 607, 81, -288, -541, 87,
	87, 620, 475, 476, 163, 166, 165, 34, 81, -188,
	-353, -353, 522, -353, -519, -307, 112, -374, -371, -368,
	-307, -307, -364, -307, -307, -211, -353, -353, -353, -211,
	-245, 52, 53, 54, -368, -149, 55, 56, -517, -504,
	34, -178, -307, -271, 17, -331, -331, -368, 267, -560,
	-318, -318, -299, -298, -320, -315, -320, -320, -271, -316,
	-318, -318, -333, -320, -316, -271, -307, 449, -271, -271,
	-408, -317, -307, -317, -353, -298, -299, -299, -211, -211,
	-256, -257, 233, 352, 353, 231, 229, 11, 230, -265,
	306, -354, 493, -240, -241, 76, 41, -243, 394, 387,
	269, 273, 91, 274, 427, 275, 238, 277, 278, 279,
	294, 296, 249, 280, 281, 282, 418, 283, 158, 295,
	284, 285, 286, 370, -235, 6, 328, 40, 50, 51,
	441, 440, 538, 535, 270, -519, -519, 30, 30, -374,
	-307, -307, -167, -162, -166, -163, -168, -274, -276, -165,
	81, -211, -157, -307, 154, 473, 475, 476, -546, -386,
	-546, -386, 31, 417, -389, 417, 31, -364, -383, 469,
	471, -379, 87, 418, -369, -388, 78, 150, -458, -386,
	-386, -388, -388, 149, 154, -544, 474, 475, 225, -175,
	96, 96, 96, -213, -211, -519, -373, -364, -307, -439,
	-213, -213, -213, -307, -307, 81, 153, 35, -307, -307,
	-270, 154, -269, 16, -308, -307, 34, 87, 153, -270,
	-127, -125, 118, -333, -6, 599, -333, -6, -6, -333,
	-6, -333, -437, 391, 96, 96, -290, 87, -290, 96,
	96, 96, 82, 87, -377, 78, -452, -342, -497, 589,
	-182, 82, -177, -495, -496, -177, -181, -307, -452, -182,
	82, -495, -175, 590, -119, -172, -171, -333, -307, 23,
	-89, -507, 153, 154, -178, -392, -372, -369, -394, 141,
	-307, -380, 154, 535, 623, 85, 240, -533, -532, 409,
	82, 154, -462, 241, 492, 87, 620, 425, 220, 221,
	101, 341, 102, 103, -421, -341, -337, -331, -331, -329,
	-329, -335, 254, -335, 111, -333, -332, -501, 118, -333,
	34, 34, 154, 79, 153, 82, 82, 16, 16, 82,
	-333, 82, 82, 82, 82, 16, 16, -333, 82, 153,
	82, 82, 82, 82, 79, 82, 154, 82, 154, -341,
	-341, -333, -341, 82, 82, 82, -333, -333, -333, -341,
	82, -333, -333, -333, -333, -333, -333, -333, -333, -402,
	444, -402, -402, 154, 154, 154, 82, -119, 81, 96,
	154, 617, -294, -293, 87, 164, 167, 167, 166, -197,
	-199, -200, -201, -202, -203, 132, 155, 156, 81, -211,
	-211, -353, -211, -522, 395, 35, -534, 154, 40, -532,
	485, -145, 317, -357, 79, -152, 16, 535, -211, -211,
	-211, -224, 34, 16, -161, -212, -307, 81, 82, 154,
	-333, -365, 79, -307, -299, -271, -271, -320, -271, -271,
	154, 22, -318, -320, -320, -316, 153, -298, -427, 34,
	-179, 154, -210, -304, -207, -209, 244, -323, -208, 247,
	-491, 245, 243, 106, 248, 302, 107, 238, -304, -304,
	244, -244, 240, 34, -304, -259, 238, 302, 245, 20,
	-258, 238, 107, -307, 244, 248, 243, -303, 122, -297,
	149, 240, 42, 370, -303, 539, -303, -303, -303, -303,
	-303, -303, -303, 276, 276, -303, -303, -303, -303, -303,
	-303, -303, -303, -303, -303, -303, 159, -303, -303, -303,
	-303, -303, -303, 81, 271, 272, -523, 395, 30, 351,
	351, -534, 30, -153, 345, 30, -277, -278, -279, -280,
	67, 71, 73, 68, 69, 70, 74, 30, 154, -305,
	-309, 34, -307, 87, -305, -157, -162, -167, -305, 81,
	-545, -547, 477, 474, 480, -388, -388, 240, 81, 122,
	-388, -388, 40, -306, -542, 481, 475, -119, 154, 78,
	-213, -189, -190, -191, -192, -217, -288, 189, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 204, 253, 184, 185, 186, 187, 207, 170, 190,
	533, 171, 172, 173, 174, 175, 176, 179, 180, 181,
	182, 178, -307, -198, -271, -160, -162, -307, 87, -307,
	141, -271, 119, -6, 117, -131, -130, -129, 120, 597,
	603, 119, 119, 119, 82, 82, 82, 154, 82, 82,
	82, 154, 82, 154, -465, 454, 39, 154, 81, 82,
	154, 60, 154, 122, 82, 154, 82, 60, -119, 87,
	154, -169, 36, 37, 153, 427, -307, -476, 82, -394,
	154, 240, 153, 153, -370, 373, -306, -372, 20, 535,
	-288, 38, -294, 122, 620, -307, 82, -335, -335, 111,
	-331, -328, 82, 119, -333, 117, -215, -217, 389, 390,
	-215, -216, -222, 150, 188, 253, 187, 186, 184, 389,
	390, -234, -307, -333, -333, 82, -333, -333, 16, -307,
	-234, -329, -333, -174, -174, 82, 82, -401, -402, -401,
	-401, 82, 82, 82, 82, -401, 82, 82, 82, 82,
	82, 82, 82, 82, 81, 96, 98, 96, 98, -458,
	-554, 62, 605, 61, 417, 101, 307, 154, 96, 87,
	621, 154, 122, 167, 381, 82, 154, -288, -189, -179,
	81, -232, 535, -211, -179, -525, 456, 397, 407, -303,
	-325, -324, 347, 41, -444, 418, 403, 404, -371, 267,
	-307, -531, 94, 122, 78, 332, 336, 333, 334, 335,
	-351, -352, -350, -354, -519, 81, 81, 81, 81, -422,
	322, -217, -211, -161, -307, 16, 154, -518, 153, -1,
	-307, -364, -318, -271, -333, -333, -271, -318, -318, -320,
	-307, -422, -217, 34, -257, -214, -288, -208, -490, -491,
	-353, -307, 107, -490, 107, 81, -214, -288, -288, -260,
	-317, -288, -307, -307, -307, -263, -262, -288, -307, -307,
	-307, 107, 107, -239, 40, 47, 48, 49, -303, -303,
	191, -242, 40, 417, 419, 420, 96, 96, 96, 96,
	87, 87, 87, -303, -303, 96, 87, -309, 87, -492,
	166, 44, 45, 96, 96, 96, 96, 40, 87, -246,
	40, 287, 291, 288, 289, 290, 87, 96, 40, 96,
	40, 96, 40, -307, 81, -493, -494, 87, -525, -303,
	351, -385, 122, -325, -530, 317, -146, 91, 31, -183,
	233, 230, -519, -376, -375, -288, -166, -166, -166, -166,
	67, 67, 67, 72, 67, 72, 67, -279, -376, -168,
	-179, -309, 82, -539, -538, -537, -535, 75, 241, 76,
	-339, 474, 478, 479, -372, -321, 87, -379, -187, 23,
	-211, -211, -443, 297, 298, 82, 154, -217, -273, 18,
	153, -273, 115, -6, -127, -129, -333, -6, -333, 599,
	363, 600, 87, 96, 96, -473, 438, 433, 435, 107,
	-342, -460, -459, 60, -154, -177, -452, -496, -458, -307,
	60, -154, -452, -187, -465, -171, -170, 43, -307, 96,
	16, -369, -364, 141, 141, -307, 374, -380, 87, 396,
	87, 236, 621, 87, -294, -328, -333, 82, -225, 175,
	174, -225, 82, 82, -429, -429, -428, -431, -428, -225,
	-225, 82, 82, 23, 82, 82, 82, -333, 82, 82,
	154, -448, 494, -449, 565, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -344,
	-343, 259, 439, 612, 612, 439, 612, 612, 82, 154,
	-499, 154, -293, 87, 87, 87, -201, -217, 82, 34,
	-204, -205, -206, -214, -207, -209, 34, 81, 81, 34,
	-526, 91, -520, 87, -307, -527, 91, 398, 152, 349,
	40, 399, 400, 415, 344, 96, 96, 405, -521, -307,
	-153, -529, 51, 122, 87, -211, -350, -297, 149, 278,
	325, -268, -267, -307, 87, -204, -204, -204, -423, 324,
	20, 96, 140, -180, 79, 153, -162, -212, -307, 141,
	82, -271, -271, -271, -318, -423, -154, -261, 44, 46,
	-217, -488, -307, -486, -488, -307, -486, -486, -353, -333,
	-261, -214, 240, 30, 230, -264, 330, 331, -381, 303,
	112, -381, 154, -169, -307, -234, -234, 30, 87, 87,
	-213, 82, 154, 122, -526, -520, 122, -386, 87, -527,
	-531, 122, 87, 154, -183, -183, -271, 154, 122, -185,
	-184, 78, 79, -186, 78, -184, 67, 67, -271, -537,
	-536, 23, -491, -491, -491, 82, 82, 14, -191, 40,
	-272, 19, 20, 141, -272, 119, 117, 119, 119, -307,
	82, 82, -435, 591, -469, -471, 433, 20, 20, 14,
	241, 82, -452, -452, -473, 44, 45, -364, -380, 418,
	-211, 154, 621, -333, 82, -333, 82, 87, 82, 87,
	-174, 20, 82, 82, 82, 82, 82, 82, -333, 82,
	-499, 234, -154, 82, 154, -154, -233, -266, -307, 87,
	-204, -154, 87, -524, 409, 87, 87, 96, 40, 96,
	152, 401, -445, -146, -528, 91, 122, 620, 81, -303,
	-303, -303, -307, 82, 154, -303, -303, 82, 82, 82,
	-424, 258, 96, 140, 96, 140, 96, -305, -162, -307,
	-271, -518, 153, -271, -424, -288, -229, -228, -226, 101,
	112, 40, 387, -227, 91, 149, 292, 295, 294, 270,
	293, -255, -322, 78, 393, 330, 331, -354, 591, 523,
	243, 106, 107, 375, -323, 81, 81, 79, 312, 81,
	81, -488, 82, -261, -288, 40, -264, 40, 303, -262,
	149, -234, 82, -494, 87, -524, 87, -388, -529, 87,
	-519, -174, -375, -458, -333, 81, -333, 81, 67, 11,
	18, -326, -333, -341, 242, -6, 600, 363, -248, 592,
	87, 20, 87, -467, 87, -376, -435, -122, -463, -408,
	275, 82, 82, -401, -401, -404, -403, -407, 439, 304,
	447, -341, 82, 82, -193, -217, -150, 535, -232, -206,
	82, 154, -303, -303, 82, -150, 20, 535, 348, 40,
	96, 40, 402, 122, 102, 103, -295, -296, 87, -359,
	-361, -288, 81, -234, -236, -306, 150, 87, -267, -326,
	-326, -230, -231, -265, -354, -121, -120, -230, -425, 158,
	96, 140, 96, 96, -271, -271, -425, -226, 101, -329,
	87, -236, -237, 40, 291, 287, 122, 122, -238, 40,
	271, 272, -247, 81, 302, 14, 191, 81, 107, 107,
	-211, -359, -359, -489, 332, 333, 334, 337, 336, 335,
	-489, -359, -359, 81, -382, -381, -329, -303, 149, -528,
	-175, -178, -487, -307, 243, 20, 20, -307, -307, -291,
	593, 96, 87, 435, -248, -436, 594, -472, 438, -466,
	-464, 433, 434, 435, 436, 122, 82, -406, 114, 401,
	405, -327, -330, 96, 98, 183, 152, 534, -151, 59,
	481, -266, -326, -326, -232, 87, 396, 87, 348, 87,
	621, 154, 122, 82, 154, -428, -333, -396, 259, 154,
	-265, -297, -122, -396, -442, 166, 323, 535, 96, 140,
	96, -174, -426, 166, 323, 87, 87, 96, 81, -453,
	30, 87, -360, 81, 82, 82, 82, 82, -359, -234,
	-303, 82, 82, 154, 81, 20, -291, 87, -474, 241,
	-470, -471, 437, -464, 20, 435, 20, 20, 87, -405,
	-406, 405, -327, -330, 589, 445, 445, 445, -195, -307,
	302, 418, -296, 87, -362, -361, -169, 82, -397, 311,
	20, -265, -303, -397, 323, 96, 140, 96, -175, 323,
	82, -333, -345, -303, 82, -250, -249, 531, -359, -362,
	79, -362, 79, -362, 79, -362, 79, 82, -234, -307,
	243, -292, -307, -467, -481, 81, 96, -469, -468, -470,
	20, -467, 20, -467, -467, -123, 154, 111, 446, 446,
	446, -194, 34, 440, 374, -363, 249, 342, 343, 91,
	535, 330, 331, -169, 20, -398, 304, 305, -399, -412,
	307, -234, 96, 82, -307, -254, -252, -253, 78, 452,
	300, 301, 82, -489, -489, -489, -489, -255, 82, 154,
	-485, 30, 82, -480, -479, -289, -475, -307, 438, 439,
	87, -467, 442, -405, 87, -303, -303, 87, 87, 329,
	-288, 81, -410, 308, 81, -408, 81, -408, 107, 333,
	-381, -253, 78, -252, 78, 15, 14, -362, -362, -362,
	-362, -307, -484, -483, -482, 82, 154, 153, 122, -557,
	-556, 611, 96, 96, -307, -395, -400, 309, 96, -329,
	81, -329, 81, -409, 306, 81, -251, 297, 298, 30,
	166, -251, 154, 122, -479, -307, 87, 87, 82, -414,
	81, 20, 82, -395, 82, -395, 81, 122, -329, 101,
	40, 299, -483, 40, -333, 153, -415, -413, 259, -399,
	82, 82, 82, -395, 96, 82, -307, 82, 154, -307,
	-411, 310, 82, -413, -416, 60, 96, -420, -417, 81,
	-265, 261, 132, -420, -265, -419, -418, 309, 262, 81,
	82, 154, -307, 258, 81, -340, -334, -333, 258, -418,
	-417, -340, 82, 154, 82, -334,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 841, 842, 843, 844, 845, 846, 0,
	0, 0, 0, 600, 601, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, -2, 613, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 613, 0, 0, 0, 690, 0, 0,
	0, 0, 0, 733, 755, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1233, 1234, 1235, 1236,
	2002, 1972, -2, 1747, 1724, 1898, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, -2, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, -2, -2, -2, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 0, 261, 259, 1694,
	1724, 1747, 1801, 1812, 1813, 1847, 1898, 1929, 1972, 1988,
	1989, 1990, 2002, 0, 864, 0, 660, 0, 665, 1186,
	660, 289, 602, 603, 690, 716, 565, 0, 325, 0,
	1738, 329, 1979, 0, 0, 562, 319, 320, 321, 322,
	323, 324, 0, 0, 840, 0, 0, 315, 0, 283,
	1803, 2001, 0, 0, 0, 0, 0, 153, 974, 155,
	976, 159, 166, 0, 0, 171, 172, 175, 176, 177,
	178, 179, 0, 183, 0, 185, 188, 0, 190, 191,
	0, 194, 195, 196, 0, 206, 207, 208, 977, 978,
	979, -2, 84, 862, 1652, 1539, 0, 1546, 1559, 1570,
	1313, 1314, 1315, 1316, 0, 0, 0, 0, 0, 1323,
	1324, 0, 1348, 2036, 2077, 0, 1331, 1332, 1333, 1334,
	1335, 1336, 93, 105, 106, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 0, 1600, 1601, 1602, 1510, 1300, 1233, 0,
	2045, 0, 2067, 2072, 2073, 2074, 2075, 2066, 0, 0,
	1495, 0, 1485, 0, 0, -2, -2, 0, 0, 1872,
	-2, 2042, 2063, 2071, 2046, 2047, 2070, 2038, 2039, 2040,
	2033, 2034, 2035, 2037, 2049, 2051, 2062, 0, 2058, 2068,
	2069, 1977, 0, 0, 0, 2018, 107, 108, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1506, -2, -2, 1509,
	-2, 1512, -2, -2, -2, -2, 1517, 1518, -2, 1520,
	-2, -2, -2, -2, -2, -2, -2, 1497, 1498, 1499,
	1500, 1489, 1490, 1491, 1492, 1493, 1494, -2, -2, -2,
	716, 791, 0, 716, 0, 691, 738, 741, 744, 747,
	694, 0, 0, 57, 58, 0, 278, 279, 267, 269,
	0, 273, 0, 266, 0, 0, 0, 0, 1009, 1009,
	1009, 1009, 1009, 0, 1009, 0, 0, 0, 0, 1009,
	0, 897, 981, 982, 983, 1007, 1008, 1074, 0, 0,
	0, 618, 614, 615, 616, 617, 704, 0, 706, 709,
	542, 542, 490, 0, 0, 0, 542, 0, 504, 496,
	0, 0, 0, 542, 0, 0, 711, 711, 0, 545,
	552, 542, 542, -2, 542, 542, 542, 0, 0, 1021,
	510, 511, 512, 496, 496, 515, 516, 517, 527, 528,
	553, 1676, 0, 0, 435, 435, 0, 435, 0, 435,
	435, 435, 620, 1842, 1745, 1818, 1803, 2001, 0, 234,
	1872, 239, 0, 1746, 1765, 0, 0, 1783, 0, -2,
	0, 305, 716, 0, 0, 690, 0, 0, 0, 0,
	0, 435, 435, 435, 435, 435, 1073, 435, 435, 435,
	435, 435, 0, 0, 0, 435, 435, 0, 0, 756,
	757, 752, 753, 754, 758, 759, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 63, 62, 0, 1653, 1671,
	1605, 1606, 1607, 1658, 1609, 1662, 1662, 1662, 1662, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1662, 1662,
	0, 0, 1651, 1629, 1660, 1660, 1660, 1658, 1655, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1665, 1665, 1668, 1668, 1665, 0, 1535,
	0, 0, 0, 0, 664, 0, 0, 716, -2, 0,
	0, 566, 326, 1237, 0, 0, 330, 331, 0, 0,
	346, 0, 349, 334, 335, 336, 0, 133, 0, 317,
	318, 0, 0, 285, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 163, 160, 167, 170, 180, 187,
	0, 199, 201, 204, 161, 168, 173, 174, 181, 202,
	162, 164, 165, 169, 203, 205, 182, 186, 200, 184,
	189, 192, 193, 198, 0, 134, 0, 0, 0, 0,
	0, 1545, 0, 0, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1539, 0, 0, 1319, 1320, 1321, 1322, 1325, 0, 1349,
	0, 0, 0, 0, 1599, 1603, 0, 1535, 1535, 0,
	1535, 1531, 0, 0, 0, 0, 0, 0, 1535, 1471,
	0, 0, 1473, 1486, 0, 0, 1475, 1476, 0, 1479,
	1480, 1535, 0, 1535, 1484, 1467, 1468, 0, 1531, 1531,
	1531, 1531, 0, 0, 1531, 1531, 1531, 1531, 1531, 1531,
	1531, 1531, 1531, 1531, 1531, 1531, 0, 0, 0, 0,
	711, 0, 717, 0, -2, 0, 735, 737, 739, 740,
	742, 743, 745, 746, 748, 749, 696, 0, 0, 59,
	0, 0, 0, 0, 271, 0, 276, 0, 861, 0,
	0, 1009, 1009, 0, 1009, 898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1009, 1009, 1009, 0, 1029,
	0, 0, 0, 620, 619, 0, 705, 0, 0, 764,
	0, 0, 489, 0, 496, 542, 542, 502, 503, 498,
	497, 548, 549, 545, 0, 545, 545, 764, 0, 521,
	522, 523, 542, 542, 529, 712, 0, 530, 531, 545,
	0, 550, 551, 764, 0, 0, 764, 764, 0, 539,
	540, 541, 0, 0, 1009, 0, 558, 498, 498, 1677,
	1678, 0, 0, 1018, 0, 0, 0, 561, 0, 0,
	0, 0, 621, 214, 217, 0, 220, 0, 1842, 0,
	1842, 0, 227, 0, 0, 0, 0, 0, 0, 257,
	258, 0, 0, 0, 0, 248, 251, 1180, 1181, 971,
	972, 252, 253, 297, 298, 0, 711, 734, 736, 730,
	731, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 596, 0, 877, 598,
	0, 0, 0, 772, 766, 768, 835, 93, 772, 8,
	80, 77, 0, 19, 0, 0, 19, 19, 0, 19,
	262, 0, 1674, 1672, 1673, 1608, 1659, 0, 1634, 0,
	1635, 1636, 1637, 1647, 1648, 0, 0, 1630, 0, 1631,
	1632, 1633, 1624, 0, 1625, 1626, 0, 1627, 1628, 260,
	0, 1536, 865, 0, 638, 652, 633, 0, 641, 0,
	1187, 622, 652, 624, 0, 641, 711, 688, 0, 666,
	0, 0, 327, 0, 332, 0, 0, 348, 350, 351,
	352, 337, 338, 563, 313, 314, 306, 307, 308, 309,
	310, 311, 312, 316, 103, 0, 286, 287, 0, 0,
	0, 147, 148, 149, 150, 151, 152, 154, 138, 585,
	587, 963, 975, 0, 966, 0, 157, 197, 130, 0,
	0, 0, 1540, 1541, 1542, 1543, 1544, 1549, 0, 1551,
	1553, 1555, 1557, 0, 1575, -2, -2, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1560,
	1573, 1574, 0, 0, 0, 0, 0, 0, 1571, 1571,
	1566, 0, 1317, 0, 1346, 1350, 0, 0, 0, 0,
	94, 1530, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 0, 0, 1539, 0, 0, 0, 1532, 1533, 0,
	0, 0, 1426, 0, 0, 1432, 1433, 1434, 0, 647,
	0, 1496, 1472, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 790, 792, 0, 656,
	658, 659, 685, 666, 692, 0, 0, 0, 55, 60,
	0, 1043, 280, 281, 0, 0, 275, 0, -2, 0,
	0, 0, 1009, 0, 0, 912, 0, 433, 957, 0,
	0, 0, 973, 998, 1005, 0, 0, 0, 0, 1047,
	899, 904, 905, 906, 900, 901, 907, 908, 0, 707,
	0, 0, 804, 488, 0, 543, 544, 493, 1803, 498,
	764, 764, 505, 499, 506, 547, 507, 508, 509, 545,
	764, 764, 713, 542, 545, 532, 546, 545, 535, 536,
	0, 554, 559, 555, 0, 557, 513, 514, 1049, 709,
	364, 365, 406, 406, 406, 389, 406, 0, 0, 377,
	1679, 0, 0, 0, 0, 386, 1679, 0, 1679, 1679,
	1679, 1679, 1679, 1679, 1679, 0, 0, 1679, 1679, 1679,
	1679, 1679, 1679, 1679, 1679, 1679, 1679, 1679, 0, 1679,
	1679, 1679, 1679, 1679, 1166, 1679, 0, 1019, 396, 397,
	398, 399, 404, 405, 0, 430, 0, 0, 0, 433,
	0, 946, 777, 0, 778, 779, 775, 806, 830, 830,
	0, 830, 810, 1186, 0, 0, 225, 226, 215, 0,
	216, 0, 228, 229, 0, 231, 232, 233, 240, 1745,
	1818, 235, 237, 0, 0, 241, 254, 255, 256, 0,
	0, 246, 247, 0, 0, 300, 301, 303, 0, 666,
	1022, 1023, 1024, 582, 1184, 583, 584, 588, 0, 0,
	591, 592, 593, 594, 595, 879, 0, 0, 951, 952,
	764, 0, 773, 0, 769, 836, 0, 838, 0, 764,
	0, 78, 19, 0, 71, 68, 0, 0, 0, 0,
	0, 1654, 1604, 1675, 0, 0, 0, 1656, 0, 0,
	0, 0, 61, 668, 629, 0, 632, 649, 0, 653,
	0, 0, 645, 637, 642, 0, 0, 662, 623, 0,
	0, 628, 666, 0, 689, 718, 719, 722, 1238, 0,
	333, 347, 0, 0, 0, 0, 141, 960, 0, 142,
	146, 136, 0, 0, 0, 965, 0, 962, 967, 0,
	156, 0, 0, 131, 132, 1034, 1043, 0, 0, 0,
	1550, 1552, 1554, 1556, 1558, 0, 1561, 1571, 1571, 1567,
	0, 1562, 0, 1564, 0, 1540, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 1416, 1417, 0, 0, 1421,
	0, 1423, 1424, 1425, 1427, 0, 0, 0, 1431, 0,
	1470, 1488, 1474, 1477, 0, 1481, 0, 1483, 0, 716,
	716, 0, 0, 1390, 1390, 1390, 0, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 1338, 1339, 0, 0, 0, 793, 686, 0, 0,
	0, 0, 0, 1041, 0, 282, 270, 272, 0, 0,
	0, 867, 868, 870, 0, 873, 874, 875, 879, 709,
	1123, 0, 709, 919, 1679, 1010, 437, 0, 0, 959,
	0, 935, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 607, 611, 23, 710, 0,
	765, 491, 0, 492, 542, 500, 501, 764, 524, 525,
	0, 0, 764, 542, 542, 545, 0, 556, 1051, 0,
	0, 1018, 367, 0, 1195, 1196, 407, 0, 1202, 1211,
	1009, 1270, 0, 1211, 0, 0, 1213, 1214, 0, 0,
	0, 0, 390, 391, 0, 376, 0, 0, 0, 0,
	375, 0, 0, 417, 0, 0, 0, 0, 1680, 1679,
	1679, 0, 384, 385, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 1679, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 0, 0, 0, 1172, 1173, 919, 1679, 0, 0,
	0, 437, 933, 942, 0, 0, 0, 0, 0, 0,
	797, 0, 0, 796, 0, 0, 0, 0, 0, 709,
	831, 0, 833, 834, 808, -2, 0, 777, 813, 1535,
	218, 219, 0, 0, 224, 242, 244, 0, 0, 0,
	243, 245, 249, 250, 299, 302, 304, 728, 0, 0,
	1075, 0, 880, 881, 883, 884, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1729, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 878, 599, 762, 767, 774, 837, 839, 94,
	770, 762, 0, 81, 19, 80, 72, 73, 0, 19,
	0, 0, 0, 0, 1664, 1663, 1649, 0, 1650, 1661,
	1666, 0, 1669, 0, 672, 0, 0, 652, 654, 0,
	0, 652, 0, 0, 661, 0, 0, 652, 728, 668,
	0, 725, 723, 724, 0, 0, 564, 104, 353, 0,
	0, 0, 0, 0, 586, 0, 964, 138, 0, 0,
	158, 0, 0, 0, 1043, 1038, 1534, 1563, 1565, 0,
	1572, 1568, 1318, 1326, 1347, 0, 0, 1353, 1365, 1365,
	0, 0, 1356, 1662, 1662, 1359, 1658, 1660, 1658, 1365,
	1365, 0, 95, 0, 0, 1422, 0, 0, 0, 648,
	0, 0, 0, 1386, 1388, 1390, 1390, 1397, 1391, 1398,
	1399, 1390, 1390, 1390, 1390, 1404, 1390, 1390, 1390, 1390,
	1390, 1390, 1390, 1390, 1384, 0, 0, 1593, 1594, 657,
	0, 0, 699, 700, 701, 702, 703, 0, 0, 53,
	54, 1043, 0, 274, 0, 0, 872, 0, 0, 0,
	1188, 0, 0, 0, 0, 923, 920, 921, 922, 0,
	954, 438, 439, 440, 441, 0, 0, 0, 958, 0,
	946, 928, 0, 0, 0, 999, 1000, 1001, 1002, 1003,
	1004, -2, 1013, 0, 0, 0, 1188, 1188, 1188, 1059,
	0, 1048, 660, 0, -2, 0, 0, 609, 0, 0,
	805, 494, 764, 518, 714, 715, 533, 764, 764, 542,
	560, 1059, 1050, 0, 366, 408, 0, 1201, 1227, 1212,
	1227, 1271, 1227, 1227, 1009, 0, 408, 0, 0, 378,
	414, 0, 0, 0, 0, 374, 411, 722, 415, 416,
	418, 0, 420, 380, 392, 393, 394, 395, 0, 0,
	0, 387, 400, 401, 402, 403, 1134, 1135, 1136, 1139,
	1140, 1141, 1142, 0, 0, 1145, 1146, 1147, 1148, 1149,
	1224, 1225, 1226, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1174, 1175, 1176, 1177, 1178, 1179, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 0, 0, 1169, 0, 923, 0,
	0, 0, 0, 954, 935, 0, 945, 0, 947, 948,
	0, 0, 630, 764, 292, 0, 800, 794, 0, 783,
	798, 799, 786, 0, 788, 0, 784, 785, 764, 776,
	807, 832, 809, 812, 814, 815, 821, 0, 0, 0,
	0, 221, 222, 223, 230, 0, 457, 236, 684, 0,
	1185, 589, 590, 1076, 1077, 597, 0, 885, 760, 0,
	0, 760, 76, 79, 0, 74, 0, 0, 0, 0,
	66, 64, 1657, 0, 0, 674, 118, 0, 0, 0,
	650, 0, 655, 652, 636, 646, 635, 643, 644, 663,
	652, 627, 626, 687, 672, 720, 721, 0, 1239, 328,
	0, 961, 138, 143, 144, 145, 139, 137, 968, 0,
	970, 0, 1036, 0, 0, 1569, 1352, 1327, 1354, 1366,
	1367, 1355, 1328, 1329, 1357, 1358, 1360, 1361, 1362, 1363,
	1364, 1330, 1418, 0, 1420, 1428, 1429, 0, 1478, 1482,
	0, 0, 0, 0, 0, 1395, 1396, 1400, 1401, 1402,
	1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 716,
	1385, 0, 0, 0, 0, 0, 0, 0, 697, 0,
	0, 0, 1042, 1044, 860, 863, 869, 871, 0, 0,
	0, 1189, 1190, 1192, 1193, 1194, 0, 0, 1188, 0,
	896, 0, 0, 914, 915, 925, 0, 0, 0, 443,
	444, 0, 0, 0, 456, 452, 453, 454, 434, 953,
	942, 931, 0, 0, 941, 0, 1014, 1679, 1679, 1679,
	0, 0, 1119, 1679, 1679, 0, 0, 0, 1062, 0,
	0, 1053, 0, 830, 0, 0, 764, 608, 611, 612,
	708, 495, 537, 534, 764, 1062, 363, 379, 409, 0,
	-2, 0, 1228, 0, 1215, 1228, 0, 0, 1227, 0,
	368, 408, 0, 0, 0, 421, 424, 425, 422, 1266,
	0, 423, 0, 413, 419, 1137, 1138, 0, 1143, 1144,
	0, 1168, 0, 0, 426, 0, 0, 0, 427, 432,
	928, 0, 943, 0, 949, 950, 716, 0, 0, 780,
	801, 0, 0, 781, 0, 782, 787, 789, 291, 816,
	0, 0, 818, 819, 820, 811, 238, 729, 882, 0,
	750, 0, 0, 771, 751, 0, 19, 0, 0, 69,
	1667, 1670, 676, 0, 673, 119, 0, 0, 0, 0,
	640, 651, 634, 625, 674, 726, 727, 140, 135, 969,
	121, 0, 1037, 0, 1430, 0, 1390, 1387, 1390, 1389,
	1381, 0, 1340, 1341, 1342, 1343, 1344, 1345, 0, 695,
	0, 0, 902, 1123, 0, 1027, 0, 1125, 1679, 1679,
	0, 902, 924, 913, 0, 955, 956, 0, 445, 446,
	0, 449, 455, 926, 927, 0, 0, 939, 0, 0,
	0, 0, 1006, 1020, 0, 0, 0, -2, 0, -2,
	1068, 0, 1060, 0, 1052, 0, 1055, 764, 764, -2,
	605, 610, 0, 538, 1068, 410, 1229, -2, 1242, 1244,
	0, 1019, 1247, 1248, 0, 0, 0, 0, 0, 0,
	1292, 1256, 0, 0, 1260, 1261, 1262, 0, 0, 1265,
	0, 1587, 1588, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 1209, 369, 370, 0, 372, 373, 1267, 412,
	1679, 382, 1167, 1170, 1171, 431, 428, 429, 931, 934,
	631, 711, 293, 294, 802, 0, 795, 825, 822, 0,
	0, 886, 761, 763, 70, 75, 0, 0, 678, 0,
	675, 0, 669, 671, 129, 639, 676, 91, 112, 0,
	0, 1419, 1469, 1393, 1394, 0, 1382, 0, 1376, 1377,
	1378, 1383, 698, 693, 0, 888, 895, 909, 1025, 1191,
	1124, 0, 0, 0, 1123, 894, 0, 0, 442, 447,
	0, 450, 451, 0, 929, 930, 0, 937, 0, 0,
	994, 1658, 0, 1015, 1016, 1182, 1183, 1017, 1120, 1121,
	1122, 1078, -2, 1131, 0, 1031, 121, 1078, 1056, 0,
	1063, 0, 1061, 1054, 716, 606, 1065, 1243, 1245, 1246,
	1249, 1250, 1251, 1297, 1298, 1299, 0, 0, 1254, 1294,
	1295, 1296, 1255, 0, 0, 0, 0, 0, 1585, 1586,
	1290, 0, 0, 1216, 1218, 1219, 1220, 1221, 1222, 1223,
	1217, 0, 0, 0, 1208, 1210, 371, 0, 1679, 944,
	290, 0, 0, 826, 828, 823, 824, 65, 67, 82,
	0, 677, 120, 0, 678, 83, 0, 109, 0, 122,
	123, 0, 0, 0, 0, 0, 1392, 1379, 0, 0,
	0, 0, 0, 1589, 1590, 1591, 0, 0, 0, 910,
	911, 1126, 1127, 1128, 1026, 916, 0, 918, 448, 932,
	936, 939, 0, 985, 0, 722, 0, 1080, 0, 1018,
	1133, 1679, 1033, 1080, 1046, 0, 1058, 0, 1070, 0,
	1064, 711, 362, 0, 1067, 1252, 1253, 0, 0, 1485,
	1679, 0, 1285, 0, 985, 985, 985, 985, 0, 381,
	0, 803, 817, 0, 0, 0, 667, 92, 96, 0,
	118, 115, 0, 124, 0, 0, 0, 0, 1039, 0,
	1368, 0, 0, 0, 1372, 1373, 1374, 1375, 0, 887,
	0, 917, 938, 940, 984, 995, 996, 722, 1030, 0,
	1117, 1132, 0, 1032, 1057, 1069, 0, 1072, 604, 1066,
	1293, 0, 1259, 0, 1264, 1273, 1286, 0, 0, 1197,
	0, 1199, 0, 1203, 0, 1205, 0, 0, 383, 827,
	829, 0, 680, 670, 85, 0, 0, 113, 114, 116,
	0, 125, 0, 127, 128, 1035, 0, 0, 1369, 1370,
	1371, 0, 889, 890, 903, 986, 1679, 1679, 0, 0,
	0, 992, 993, 997, 0, 1105, 0, 0, 1111, 0,
	1118, 1137, 1071, 1257, 1263, 1272, 1274, 1275, 0, 1287,
	1288, 1289, 1291, 985, 985, 985, 985, 1207, 679, 0,
	1045, 0, 97, 0, 99, 101, 102, 1230, 110, 111,
	117, 126, 0, 1380, 891, 0, 0, 989, 990, 0,
	1081, 0, 1083, 0, 0, 0, 0, 0, 1115, 0,
	1258, 1276, 0, 1277, 0, 0, 0, 1198, 1200, 1204,
	1206, 681, 86, 87, 0, 98, 0, 0, 0, 876,
	892, 0, 987, 988, 991, 0, 1085, 0, 1106, 0,
	0, 0, 0, 0, 0, 0, 1278, 1280, 1281, 0,
	0, 1279, 0, 0, 100, 1231, 1040, 893, 1082, 1079,
	0, 1117, 1107, 0, 1109, 0, 0, 0, 0, 1282,
	1284, 1283, 88, 89, 90, 0, 0, 1087, 0, 1103,
	1108, 1110, 1112, 0, 1116, 1114, 1232, 1086, 0, 1099,
	1084, 0, 1113, 1088, -2, 0, 1104, 1089, -2, 0,
	1097, 0, 0, 1090, 1098, 0, 1093, 0, 0, 0,
	1092, 0, -2, 1100, 0, 0, 1537, 1547, 1548, 1094,
	-2, 0, 1102, 0, 1101, 1538,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 622, 619,
	123, 122, 124, 3, 623, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 620, 135, 621, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:790
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:797
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:803
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:836
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:840
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:846
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:851
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:887
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp:   yyDollar[2].str,
				IsS3:        false,
				Dir:         yyDollar[4].str,
				Parallelism: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:934
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:940
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:947
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:955
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:961
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:988
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:996
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1004
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1014
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1022
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1032
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1039
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1048
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1062
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1068
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1072
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1097
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1101
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1126
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1160
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1171
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1177
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1181
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1194
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1220
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1224
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1228
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1241
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1247
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1256
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1267
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1271
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1277
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1281
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1287
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1291
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1297
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1321
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1340
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1344
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1348
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1357
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1364
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1372
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1379
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1384
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1391
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1424
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1428
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1440
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1458
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1475
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1521
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1562
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1572
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1598
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1625
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1661
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1665
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1687
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1691
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1885
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1889
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1930
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1934
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1940
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1947
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1955
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1959
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1973
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1990
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2006
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2044
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2056
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2067
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2073
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2083
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2091
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2125
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2148
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2216
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2224
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2234
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2240
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2244
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2250
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2254
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2288
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2292
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2304
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2308
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2326
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2369
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2386
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2397
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2408
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2412
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2434
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2438
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2444
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2486
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2506
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2565
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2616
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2620
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2632
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2637
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2638
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2639
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2688
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2697
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2701
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2707
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2723
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2762
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2771
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2783
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2787
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2791
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2795
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2810
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2814
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2818
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2822
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2826
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2830
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2834
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2838
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2843
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2874
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2878
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2904
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2908
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2979
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2995
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2999
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3034
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3047
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3053
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3084
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3088
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3093
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3097
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3149
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3179
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3184
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.ShowCollation{
				Like:  yyDollar[3].comparisionExprUnion(),
				Where: yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3250
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3263
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3274
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3278
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3283
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3317
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3341
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3347
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3384
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3399
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3401
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3420
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3429
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3437
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3470
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3528
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3534
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3541
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3550
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3554
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3559
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3563
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3569
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3582
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3586
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3597
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3601
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3611
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3617
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3627
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3633
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3637
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3641
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3651
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3703
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3707
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3722
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3731
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3757
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3763
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3767
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3773
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3779
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3806
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3811
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3818
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3834
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3847
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3858
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3862
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3868
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3873
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3880
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3882
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3885
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3894
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3898
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3903
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3912
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3919
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3925
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3933
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3947
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3967
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3977
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3981
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3987
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3994
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4000
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4008
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4015
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4022
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4041
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4045
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4049
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4058
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4062
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4068
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4077
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4081
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4087
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4091
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4097
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4101
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4107
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4112
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4123
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4127
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4143
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4149
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4153
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4159
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4163
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4172
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4185
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4192
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4199
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4217
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4236
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4242
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4253
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4266
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4270
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4275
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4279
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4286
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4291
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4304
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4308
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4316
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4320
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4324
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4333
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4339
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4349
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4368
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4423
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4430
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4439
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4443
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4449
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4461
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4470
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4484
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4493
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4499
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4505
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4509
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4520
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4524
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4528
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4537
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4541
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4550
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4558
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4562
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4566
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4580
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4584
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4594
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4604
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4626
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4634
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4642
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4659
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4667
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4691
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4707
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4750
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4754
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4758
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4763
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4767
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4784
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4793
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4802
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4808
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4812
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4822
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4836
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4844
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4850
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4858
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4876
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4882
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4891
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4909
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4919
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4923
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4933
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4937
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4941
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4945
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4951
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4961
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4965
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4971
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4981
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4987
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4993
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4997
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5001
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5011
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5017
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5021
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5031
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5037
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5041
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5051
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5064
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5070
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5076
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5089
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5107
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5111
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5117
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5127
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5131
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5135
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5152
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5161
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5165
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5169
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5173
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5178
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5182
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5186
		{
			yyVAL.str = yyDollar[2].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5192
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5202
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5206
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5210
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5220
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5259
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5269
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5275
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5281
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5291
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5296
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5302
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5313
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5334
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5342
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5349
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5373
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5378
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5395
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5401
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5407
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5411
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5421
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5433
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5437
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5443
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5450
		{
			yyVAL.str = yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5456
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5465
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5489
		{
			yyVAL.str = yyDollar[1].str
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5493
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5499
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5503
		{
			yyVAL.str = "DEFINER = "
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5507
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5512
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5516
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5530
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5538
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5554
		{
			yyVAL.str = yyDollar[1].str
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5558
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5564
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5585
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5591
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5605
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5613
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5619
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5640
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5652
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5664
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5691
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5699
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5705
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5713
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5719
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5728
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5732
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5737
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5741
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5748
		{
			yyVAL.str = yyDollar[3].str
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5753
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5757
		{
			yyVAL.str = yyDollar[2].str
		}
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5763
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5777
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5791
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5797
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5803
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5809
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5818
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5827
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5836
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5841
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5847
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5855
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5961
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5965
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5971
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5981
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5985
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6001
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6005
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6009
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6018
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6024
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6031
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6037
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6046
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6053
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6062
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6066
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6072
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6086
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6090
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6094
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6099
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6103
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6107
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6111
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6117
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6142
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorSimilarityFn) > 0 {
					opt1.AlgoParamVectorSimilarityFn = opt2.AlgoParamVectorSimilarityFn
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6168
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6172
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6176
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorSimilarityFn: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6180
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6184
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6188
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6192
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6198
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6202
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6208
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6213
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6226
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6230
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6244
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6259
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6273
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6282
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6288
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6292
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6298
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6302
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6306
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6311
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6315
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6321
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6330
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6336
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6354
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6372
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6390
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6401
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6412
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6433
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6445
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6454
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6467
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6474
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6484
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6497
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6505
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6514
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6523
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:6527
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6533
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6537
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6542
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6546
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6553
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6564
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6577
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6591
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6599
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6609
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6616
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6623
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6630
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6637
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6641
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6653
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6660
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6678
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6689
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6695
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6705
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6712
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6719
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6726
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6733
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6737
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6742
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6746
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6759
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6773
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6780
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6791
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6804
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6810
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6814
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6820
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6829
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6843
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6849
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6853
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6859
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6866
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6888
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6893
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6897
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6902
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6906
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6916
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6920
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6931
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6939
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6947
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6955
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6966
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6975
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6985
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6995
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6999
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7014
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7018
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7024
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7028
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7037
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7043
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7047
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7053
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7057
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7066
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7072
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7076
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7080
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7086
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7090
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7094
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7098
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7102
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7106
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7110
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7131
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7135
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7143
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7147
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7151
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7155
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7159
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7163
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7167
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7171
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7183
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7187
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7191
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7195
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7199
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7203
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7207
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7223
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7229
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7233
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7239
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7245
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7249
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7293
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7302
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7307
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7313
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7320
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7324
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7330
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7334
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7338
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7344
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7348
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7354
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7363
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7372
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7401
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7432
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7446
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7452
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7461
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7470
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7479
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7488
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7498
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7506
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7512
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7526
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7532
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7538
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7558
		{
			yyVAL.str = ""
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7562
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7568
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7623
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7629
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7633
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7639
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7643
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7647
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7651
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7655
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7659
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7680
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7684
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7688
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7692
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7696
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7713
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7717
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7721
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7729
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7733
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7743
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7748
		{
			yyVAL.str = ""
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7752
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7758
		{
			yyVAL.str = ""
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7762
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7768
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7780
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7787
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7794
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7801
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7808
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7817
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7823
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7829
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7833
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7837
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7841
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7845
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7850
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7857
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7861
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7865
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7874
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7879
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7883
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7899
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7905
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7909
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7913
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7917
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7921
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7925
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7929
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7933
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7937
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7941
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7945
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7949
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7953
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7959
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7963
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7971
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7975
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7979
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7983
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7987
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7991
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7999
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8003
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8008
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8016
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8020
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8024
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8028
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8037
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8041
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8045
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8049
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8053
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8057
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8063
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8071
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8079
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8089
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8099
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8108
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8118
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8128
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8137
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8151
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8160
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8166
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8170
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8176
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8185
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8197
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8231
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8244
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8298
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8313
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8330
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8345
		{
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8352
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8356
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8360
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8366
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8370
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8374
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8378
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8384
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8388
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8392
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8398
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8406
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8420
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8427
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8436
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8441
		{
			yyVAL.str = ","
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8445
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8450
		{
			yyVAL.str = "1,vector_cosine_ops"
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8454
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8466
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8503
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8514
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8524
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8534
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8544
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8553
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8562
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8572
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8582
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8592
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8602
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8612
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8622
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8642
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8652
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8662
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8672
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8701
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8709
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8717
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8725
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8733
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8743
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8751
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8760
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8768
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8776
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8784
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8792
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8813
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8825
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8836
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8858
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8894
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8906
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8929
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8937
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8944
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8951
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8963
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8971
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8981
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8991
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8999
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9010
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9019
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9028
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9036
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9046
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9054
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9068
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9078
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9097
		{
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9099
		{
		}
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9140
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9151
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9155
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9159
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9165
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9174
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9180
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9184
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9190
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9194
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9201
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9205
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9209
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9217
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9221
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9225
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9230
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9234
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9240
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9244
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9248
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9252
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9256
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9260
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9264
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9268
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9272
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9276
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9284
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9288
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9292
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9296
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9300
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9304
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9308
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9312
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9316
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9320
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9330
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9336
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9340
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9347
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9351
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9355
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9361
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9365
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9369
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9373
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9377
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9381
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9385
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9391
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9395
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9399
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9403
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9409
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9422
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9427
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9433
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9437
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9450
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9455
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9459
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9463
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9467
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9471
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9478
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9482
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9486
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9490
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9497
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9508
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9513
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9519
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9531
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9555
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9581
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9607
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9620
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9646
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9659
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9700
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9727
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9769
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9805
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9841
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9870
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9890
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9910
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9930
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9959
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9985
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9998
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10034
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10058
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10070
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10082
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10106
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10119
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10132
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10145
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10173
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10181
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10190
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10200
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10223
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10228
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10234
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10241
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10245
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10250
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10254
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10260
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10266
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10273
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10280
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10289
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10296
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10303
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10320
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10326
		{
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10328
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10338
		{
			yyVAL.str = ""
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10342
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

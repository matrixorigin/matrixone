// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PROPERTIES = 57624
const PARSER = 57625
const VISIBLE = 57626
const INVISIBLE = 57627
const BTREE = 57628
const HASH = 57629
const RTREE = 57630
const BSI = 57631
const ZONEMAP = 57632
const LEADING = 57633
const BOTH = 57634
const TRAILING = 57635
const UNKNOWN = 57636
const EXPIRE = 57637
const ACCOUNT = 57638
const ACCOUNTS = 57639
const UNLOCK = 57640
const DAY = 57641
const NEVER = 57642
const PUMP = 57643
const MYSQL_COMPATBILITY_MODE = 57644
const SECOND = 57645
const ASCII = 57646
const COALESCE = 57647
const COLLATION = 57648
const HOUR = 57649
const MICROSECOND = 57650
const MINUTE = 57651
const MONTH = 57652
const QUARTER = 57653
const REPEAT = 57654
const REVERSE = 57655
const ROW_COUNT = 57656
const WEEK = 57657
const REVOKE = 57658
const FUNCTION = 57659
const PRIVILEGES = 57660
const TABLESPACE = 57661
const EXECUTE = 57662
const SUPER = 57663
const GRANT = 57664
const OPTION = 57665
const REFERENCES = 57666
const REPLICATION = 57667
const SLAVE = 57668
const CLIENT = 57669
const USAGE = 57670
const RELOAD = 57671
const FILE = 57672
const TEMPORARY = 57673
const ROUTINE = 57674
const EVENT = 57675
const SHUTDOWN = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const ENGINES = 57683
const LOW_CARDINALITY = 57684
const ADMIN_NAME = 57685
const RANDOM = 57686
const SUSPEND = 57687
const ATTRIBUTE = 57688
const HISTORY = 57689
const REUSE = 57690
const CURRENT = 57691
const OPTIONAL = 57692
const FAILED_LOGIN_ATTEMPTS = 57693
const PASSWORD_LOCK_TIME = 57694
const UNBOUNDED = 57695
const SECONDARY = 57696
const USER = 57697
const IDENTIFIED = 57698
const CIPHER = 57699
const ISSUER = 57700
const X509 = 57701
const SUBJECT = 57702
const SAN = 57703
const REQUIRE = 57704
const SSL = 57705
const NONE = 57706
const PASSWORD = 57707
const MAX_QUERIES_PER_HOUR = 57708
const MAX_UPDATES_PER_HOUR = 57709
const MAX_CONNECTIONS_PER_HOUR = 57710
const MAX_USER_CONNECTIONS = 57711
const FORMAT = 57712
const VERBOSE = 57713
const CONNECTION = 57714
const TRIGGERS = 57715
const PROFILES = 57716
const LOAD = 57717
const INFILE = 57718
const TERMINATED = 57719
const OPTIONALLY = 57720
const ENCLOSED = 57721
const ESCAPED = 57722
const STARTING = 57723
const LINES = 57724
const ROWS = 57725
const IMPORT = 57726
const MODUMP = 57727
const OVER = 57728
const PRECEDING = 57729
const FOLLOWING = 57730
const GROUPS = 57731
const DATABASES = 57732
const TABLES = 57733
const EXTENDED = 57734
const FULL = 57735
const PROCESSLIST = 57736
const FIELDS = 57737
const COLUMNS = 57738
const OPEN = 57739
const ERRORS = 57740
const WARNINGS = 57741
const INDEXES = 57742
const SCHEMAS = 57743
const NODE = 57744
const LOCKS = 57745
const TABLE_NUMBER = 57746
const COLUMN_NUMBER = 57747
const TABLE_VALUES = 57748
const NAMES = 57749
const GLOBAL = 57750
const SESSION = 57751
const ISOLATION = 57752
const LEVEL = 57753
const READ = 57754
const WRITE = 57755
const ONLY = 57756
const REPEATABLE = 57757
const COMMITTED = 57758
const UNCOMMITTED = 57759
const SERIALIZABLE = 57760
const LOCAL = 57761
const EVENTS = 57762
const PLUGINS = 57763
const CURRENT_TIMESTAMP = 57764
const DATABASE = 57765
const CURRENT_TIME = 57766
const LOCALTIME = 57767
const LOCALTIMESTAMP = 57768
const UTC_DATE = 57769
const UTC_TIME = 57770
const UTC_TIMESTAMP = 57771
const REPLACE = 57772
const CONVERT = 57773
const SEPARATOR = 57774
const TIMESTAMPDIFF = 57775
const CURRENT_DATE = 57776
const CURRENT_USER = 57777
const CURRENT_ROLE = 57778
const SECOND_MICROSECOND = 57779
const MINUTE_MICROSECOND = 57780
const MINUTE_SECOND = 57781
const HOUR_MICROSECOND = 57782
const HOUR_SECOND = 57783
const HOUR_MINUTE = 57784
const DAY_MICROSECOND = 57785
const DAY_SECOND = 57786
const DAY_MINUTE = 57787
const DAY_HOUR = 57788
const YEAR_MONTH = 57789
const SQL_TSI_HOUR = 57790
const SQL_TSI_DAY = 57791
const SQL_TSI_WEEK = 57792
const SQL_TSI_MONTH = 57793
const SQL_TSI_QUARTER = 57794
const SQL_TSI_YEAR = 57795
const SQL_TSI_SECOND = 57796
const SQL_TSI_MINUTE = 57797
const RECURSIVE = 57798
const CONFIG = 57799
const DRAINER = 57800
const MATCH = 57801
const AGAINST = 57802
const BOOLEAN = 57803
const LANGUAGE = 57804
const WITH = 57805
const QUERY = 57806
const EXPANSION = 57807
const ADDDATE = 57808
const BIT_AND = 57809
const BIT_OR = 57810
const BIT_XOR = 57811
const CAST = 57812
const COUNT = 57813
const APPROX_COUNT_DISTINCT = 57814
const APPROX_PERCENTILE = 57815
const CURDATE = 57816
const CURTIME = 57817
const DATE_ADD = 57818
const DATE_SUB = 57819
const EXTRACT = 57820
const GROUP_CONCAT = 57821
const MAX = 57822
const MID = 57823
const MIN = 57824
const NOW = 57825
const POSITION = 57826
const SESSION_USER = 57827
const STD = 57828
const STDDEV = 57829
const MEDIAN = 57830
const STDDEV_POP = 57831
const STDDEV_SAMP = 57832
const SUBDATE = 57833
const SUBSTR = 57834
const SUBSTRING = 57835
const SUM = 57836
const SYSDATE = 57837
const SYSTEM_USER = 57838
const TRANSLATE = 57839
const TRIM = 57840
const VARIANCE = 57841
const VAR_POP = 57842
const VAR_SAMP = 57843
const AVG = 57844
const NEXTVAL = 57845
const ARROW = 57846
const ROW = 57847
const OUTFILE = 57848
const HEADER = 57849
const MAX_FILE_SIZE = 57850
const FORCE_QUOTE = 57851
const PARALLEL = 57852
const UNUSED = 57853
const BINDINGS = 57854
const DO = 57855
const DECLARE = 57856
const KILL = 57857
const QUERY_RESULT = 57858

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"NEXTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8805

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 95,
	21, 567,
	-2, 548,
	-1, 104,
	215, 759,
	-2, 828,
	-1, 124,
	42, 396,
	215, 396,
	242, 403,
	243, 403,
	417, 396,
	-2, 426,
	-1, 443,
	291, 93,
	393, 93,
	-2, 1392,
	-1, 502,
	67, 1198,
	-2, 1532,
	-1, 503,
	67, 1216,
	-2, 1503,
	-1, 507,
	67, 1217,
	-2, 1531,
	-1, 529,
	67, 1130,
	-2, 1586,
	-1, 530,
	67, 1131,
	-2, 1585,
	-1, 531,
	67, 1132,
	-2, 1575,
	-1, 532,
	67, 1550,
	-2, 1570,
	-1, 533,
	67, 1551,
	-2, 1571,
	-1, 534,
	67, 1552,
	-2, 1577,
	-1, 535,
	67, 1553,
	-2, 1560,
	-1, 536,
	67, 1554,
	-2, 1568,
	-1, 537,
	67, 1555,
	-2, 1578,
	-1, 538,
	67, 1556,
	-2, 1579,
	-1, 539,
	67, 1557,
	-2, 1584,
	-1, 540,
	67, 1558,
	-2, 1589,
	-1, 541,
	67, 1559,
	-2, 1590,
	-1, 543,
	67, 1195,
	-2, 1384,
	-1, 550,
	67, 1204,
	-2, 1410,
	-1, 554,
	67, 1208,
	-2, 1449,
	-1, 555,
	67, 1209,
	-2, 1527,
	-1, 563,
	67, 1219,
	-2, 1512,
	-1, 565,
	67, 1221,
	-2, 1522,
	-1, 566,
	67, 1222,
	-2, 1545,
	-1, 577,
	67, 1111,
	-2, 1580,
	-1, 578,
	67, 1112,
	-2, 1581,
	-1, 579,
	67, 1113,
	-2, 1582,
	-1, 586,
	21, 568,
	-2, 531,
	-1, 642,
	412, 426,
	413, 426,
	-2, 397,
	-1, 688,
	104, 1384,
	115, 1384,
	135, 1384,
	-2, 1359,
	-1, 726,
	21, 568,
	-2, 531,
	-1, 827,
	21, 567,
	-2, 1019,
	-1, 1158,
	67, 1266,
	-2, 1529,
	-1, 1159,
	67, 1267,
	-2, 1530,
	-1, 1321,
	1, 785,
	68, 785,
	534, 785,
	-2, 792,
	-1, 1365,
	1, 309,
	68, 309,
	534, 309,
	-2, 792,
	-1, 1604,
	68, 1345,
	136, 1345,
	-2, 1514,
	-1, 1605,
	68, 1345,
	136, 1345,
	-2, 1513,
	-1, 1606,
	68, 1323,
	136, 1323,
	-2, 1500,
	-1, 1607,
	68, 1324,
	136, 1324,
	-2, 1505,
	-1, 1608,
	68, 1325,
	136, 1325,
	-2, 1437,
	-1, 1609,
	68, 1326,
	136, 1326,
	-2, 1431,
	-1, 1610,
	68, 1327,
	136, 1327,
	-2, 1375,
	-1, 1611,
	68, 1328,
	136, 1328,
	-2, 1502,
	-1, 1612,
	68, 1329,
	136, 1329,
	-2, 1435,
	-1, 1613,
	68, 1330,
	136, 1330,
	-2, 1430,
	-1, 1614,
	68, 1331,
	136, 1331,
	-2, 1423,
	-1, 1616,
	68, 1334,
	136, 1334,
	-2, 1545,
	-1, 1617,
	68, 1314,
	136, 1314,
	-2, 1532,
	-1, 1618,
	68, 1343,
	136, 1343,
	-2, 1503,
	-1, 1619,
	68, 1343,
	136, 1343,
	-2, 1531,
	-1, 1620,
	68, 1343,
	136, 1343,
	-2, 1393,
	-1, 1621,
	68, 1341,
	136, 1341,
	-2, 1522,
	-1, 1622,
	68, 1338,
	136, 1338,
	-2, 1415,
	-1, 1623,
	67, 1296,
	68, 1296,
	136, 1296,
	355, 1296,
	356, 1296,
	357, 1296,
	-2, 1374,
	-1, 1624,
	67, 1297,
	68, 1297,
	136, 1297,
	355, 1297,
	356, 1297,
	357, 1297,
	-2, 1376,
	-1, 1625,
	67, 1300,
	68, 1300,
	136, 1300,
	355, 1300,
	356, 1300,
	357, 1300,
	-2, 1504,
	-1, 1626,
	67, 1302,
	68, 1302,
	136, 1302,
	355, 1302,
	356, 1302,
	357, 1302,
	-2, 1487,
	-1, 1627,
	67, 1304,
	68, 1304,
	136, 1304,
	355, 1304,
	356, 1304,
	357, 1304,
	-2, 1436,
	-1, 1628,
	67, 1306,
	68, 1306,
	136, 1306,
	355, 1306,
	356, 1306,
	357, 1306,
	-2, 1419,
	-1, 1629,
	67, 1307,
	68, 1307,
	136, 1307,
	355, 1307,
	356, 1307,
	357, 1307,
	-2, 1420,
	-1, 1630,
	67, 1309,
	68, 1309,
	136, 1309,
	355, 1309,
	356, 1309,
	357, 1309,
	-2, 1373,
	-1, 1631,
	68, 1348,
	136, 1348,
	355, 1348,
	356, 1348,
	357, 1348,
	-2, 1398,
	-1, 1632,
	68, 1348,
	136, 1348,
	355, 1348,
	356, 1348,
	357, 1348,
	-2, 1411,
	-1, 1633,
	68, 1351,
	136, 1351,
	355, 1351,
	356, 1351,
	357, 1351,
	-2, 1394,
	-1, 1634,
	68, 1348,
	136, 1348,
	355, 1348,
	356, 1348,
	357, 1348,
	-2, 1472,
	-1, 1647,
	1, 786,
	68, 786,
	534, 786,
	-2, 792,
	-1, 1754,
	21, 567,
	-2, 659,
	-1, 1936,
	65, 474,
	136, 474,
	-2, 923,
	-1, 1953,
	276, 987,
	-2, 966,
	-1, 2192,
	276, 987,
	-2, 967,
	-1, 2319,
	88, 792,
	131, 792,
	168, 792,
	171, 792,
	-2, 871,
	-1, 2322,
	88, 792,
	131, 792,
	168, 792,
	171, 792,
	-2, 871,
	-1, 2332,
	65, 474,
	136, 474,
	-2, 924,
	-1, 2414,
	88, 792,
	131, 792,
	168, 792,
	171, 792,
	-2, 872,
	-1, 2707,
	68, 843,
	136, 843,
	-2, 792,
	-1, 2711,
	68, 843,
	136, 843,
	-2, 792,
	-1, 2725,
	68, 847,
	136, 847,
	-2, 792,
	-1, 2730,
	68, 848,
	136, 848,
	-2, 792,
}

const yyPrivate = 57344

const yyLast = 30889

var yyAct = [...]int{
	472, 1366, 2711, 1224, 2719, 2710, 2686, 2665, 454, 2589,
	2389, 2521, 474, 452, 2628, 1139, 2639, 2563, 2461, 2267,
	2204, 2543, 2445, 2544, 2411, 1594, 2515, 2528, 2268, 2532,
	995, 2409, 2410, 2480, 855, 2459, 2455, 1287, 2433, 145,
	145, 1329, 587, 499, 1331, 145, 389, 396, 2413, 1939,
	396, 2169, 1142, 1785, 1081, 1473, 2011, 2303, 2012, 1427,
	2315, 2004, 2214, 1684, 2193, 456, 1397, 2265, 1497, 1826,
	1793, 2259, 1405, 1748, 2033, 2242, 407, 1689, 2148, 401,
	2145, 1440, 2213, 1794, 2143, 1657, 1283, 720, 2167, 1044,
	957, 445, 1600, 582, 1825, 446, 2053, 1602, 1278, 1493,
	451, 1480, 1474, 1420, 1867, 1297, 1749, 623, 2047, 693,
	972, 144, 144, 1400, 1905, 1481, 2094, 380, 1909, 1957,
	1685, 1737, 3, 697, 42, 1223, 696, 30, 394, 31,
	1492, 1656, 582, 393, 19, 687, 1342, 1305, 390, 8,
	892, 718, 391, 6, 145, 1341, 1648, 1369, 1317, 392,
	7, 1788, 1133, 455, 1494, 1598, 1053, 1525, 1072, 1640,
	1479, 985, 1398, 1504, 1339, 1582, 444, 1188, 1172, 42,
	1124, 1340, 94, 737, 1468, 1132, 1450, 691, 453, 385,
	1288, 679, 937, 1756, 463, 1316, 1138, 2414, 1355, 1023,
	1194, 1193, 622, 382, 1036, 981, 584, 409, 996, 16,
	9, 4, 1071, 137, 1511, 586, 395, 680, 1424, 410,
	955, 1828, 2088, 2088, 638, 620, 722, 1501, 134, 140,
	139, 2511, 2456, 1135, 1786, 2266, 1301, 2572, 1476, 585,
	974, 850, 856, 138, 138, 1703, 38, 126, 105, 2580,
	2402, 138, 138, 595, 38, 126, 105, 138, 138, 138,
	138, 1214, 2488, 1091, 2401, 1821, 399, 757, 138, 1813,
	646, 378, 717, 42, 1498, 1025, 30, 2497, 31, 1088,
	405, 2117, 1438, 19, 1509, 1214, 1772, 138, 8, 38,
	126, 105, 6, 93, 2275, 2068, 93, 793, 1773, 7,
	1090, 135, 1907, 661, 1789, 2489, 660, 1109, 135, 135,
	581, 1408, 1409, 656, 135, 135, 135, 135, 694, 2624,
	1008, 1351, 141, 1009, 992, 1084, 1026, 572, 1141, 571,
	573, 574, 999, 575, 576, 998, 1001, 1002, 2622, 1001,
	1002, 786, 447, 791, 135, 596, 2547, 2548, 703, 698,
	702, 704, 766, 764, 1906, 768, 796, 797, 798, 795,
	690, 1077, 2466, 689, 1868, 774, 773, 2513, 775, 2573,
	2574, 406, 2643, 2644, 2269, 2054, 2565, 1125, 2565, 701,
	1129, 2568, 2458, 769, 2516, 2517, 2518, 2519, 2055, 2269,
	2056, 1144, 145, 730, 1808, 740, 777, 731, 2579, 1421,
	2527, 2283, 2304, 662, 1128, 1413, 1120, 588, 396, 396,
	1210, 145, 1912, 1505, 1207, 2159, 2407, 729, 1209, 1206,
	1208, 1212, 1213, 2311, 2472, 2149, 1211, 706, 2083, 1730,
	1229, 725, 727, 1639, 1210, 1579, 1272, 1271, 1207, 104,
	1900, 136, 1209, 1206, 1208, 1212, 1213, 2211, 699, 2157,
	1211, 1818, 761, 1417, 789, 790, 740, 2081, 760, 788,
	1798, 124, 664, 2008, 728, 771, 1732, 2475, 2626, 707,
	2404, 829, 724, 2582, 2583, 763, 2617, 1130, 1920, 1921,
	1922, 1923, 2546, 748, 2465, 2173, 2153, 767, 770, 2536,
	2467, 752, 440, 1143, 1932, 442, 398, 990, 1127, 726,
	441, 2154, 2155, 779, 2485, 397, 780, 700, 2533, 1436,
	1437, 762, 2360, 1510, 2621, 2703, 2156, 2659, 2720, 2652,
	42, 42, 980, 2504, 772, 2434, 2435, 2436, 2438, 2437,
	663, 1713, 784, 785, 782, 1019, 2591, 404, 1514, 1516,
	1517, 2663, 692, 2353, 2447, 1712, 2228, 1010, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1217,
	1218, 1219, 1220, 1221, 1222, 1215, 1216, 2587, 2588, 2631,
	2591, 694, 1083, 742, 741, 705, 733, 734, 657, 765,
	2151, 2344, 1918, 1217, 1218, 1219, 1220, 1221, 1222, 1215,
	1216, 1032, 776, 1031, 1150, 1153, 1154, 750, 1989, 1012,
	2366, 2367, 979, 778, 1126, 1151, 994, 993, 954, 956,
	2348, 1499, 978, 1499, 745, 746, 2721, 2715, 1499, 2687,
	2727, 1926, 749, 2287, 2087, 2481, 2295, 721, 2324, 1526,
	735, 958, 623, 405, 742, 741, 934, 2562, 1024, 783,
	694, 2035, 2037, 1814, 1763, 1502, 1693, 831, 832, 833,
	834, 962, 2581, 2086, 966, 2486, 757, 965, 659, 835,
	964, 658, 781, 2487, 1001, 1002, 400, 1000, 2139, 2575,
	2576, 1513, 145, 969, 1021, 2096, 2095, 1512, 997, 617,
	618, 619, 2627, 1001, 1002, 2632, 1911, 2039, 886, 39,
	1760, 1500, 582, 582, 582, 1029, 585, 1048, 1048, 991,
	145, 959, 960, 961, 1412, 963, 2160, 1411, 1422, 967,
	2403, 2150, 2473, 106, 106, 1759, 2084, 396, 956, 1075,
	1075, 106, 106, 666, 39, 1822, 2446, 106, 106, 106,
	106, 1078, 1055, 1410, 1086, 1697, 667, 756, 106, 1915,
	1916, 2714, 2420, 2408, 1017, 1927, 710, 715, 716, 1762,
	1761, 866, 867, 1914, 1107, 1414, 1121, 106, 1027, 1028,
	2733, 2178, 2732, 2152, 670, 1515, 1092, 1048, 2681, 1048,
	730, 1694, 1054, 1746, 589, 794, 751, 982, 986, 986,
	2723, 1555, 1690, 1693, 1554, 2704, 692, 1050, 2726, 1332,
	2699, 799, 1801, 2239, 1140, 982, 939, 982, 2036, 757,
	828, 2320, 941, 1416, 987, 2346, 1102, 1103, 837, 2345,
	2629, 2630, 669, 589, 1332, 586, 672, 671, 2349, 2350,
	1122, 1152, 1990, 1992, 1993, 1994, 1991, 1588, 794, 842,
	794, 1937, 1938, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1020, 1453, 971, 2724, 1183,
	1184, 1192, 794, 1507, 1011, 657, 1013, 2310, 2700, 1082,
	1696, 1239, 1232, 1089, 1003, 1700, 1698, 1006, 1137, 42,
	1699, 1592, 1245, 1246, 988, 1813, 1805, 2690, 42, 1747,
	1747, 1004, 1005, 1116, 1007, 1253, 1254, 1248, 1115, 1042,
	1043, 794, 755, 1112, 1030, 1106, 582, 1111, 1707, 1039,
	1040, 1041, 1902, 1105, 2689, 1774, 1056, 754, 1694, 1747,
	1123, 1118, 1155, 1687, 712, 713, 714, 1688, 1691, 1093,
	1046, 1046, 1076, 1069, 1498, 1098, 378, 2670, 1070, 983,
	935, 2667, 1536, 2601, 2239, 659, 1094, 1593, 658, 1273,
	796, 797, 798, 795, 1294, 1507, 2554, 586, 796, 797,
	798, 795, 1938, 1134, 1114, 1113, 1110, 2549, 796, 797,
	798, 795, 1559, 1131, 2506, 1489, 1434, 1451, 145, 1692,
	1315, 1048, 1507, 1320, 1321, 1295, 1238, 1136, 145, 755,
	1225, 623, 1228, 1787, 1330, 1591, 2505, 1240, 1048, 2502,
	2501, 1642, 1021, 2115, 2500, 1507, 2499, 389, 1247, 2668,
	1249, 2602, 1276, 1535, 1279, 1280, 1298, 2476, 1285, 1286,
	970, 1186, 1181, 1182, 2477, 2393, 1174, 1033, 2368, 1356,
	1356, 2698, 1021, 2230, 1021, 2477, 2058, 145, 984, 1315,
	1315, 757, 2507, 1048, 1407, 1354, 2030, 1891, 2669, 1889,
	1312, 1887, 1885, 1345, 582, 2335, 1048, 1227, 1319, 723,
	1325, 1074, 1074, 1314, 1661, 2179, 1873, 2477, 2477, 1352,
	1353, 1829, 2477, 1811, 2477, 1322, 1323, 1324, 2049, 1250,
	1940, 1816, 145, 1315, 1048, 2477, 1445, 145, 145, 1448,
	1803, 1774, 668, 2059, 1799, 1455, 1774, 1641, 1815, 145,
	1433, 2231, 1795, 2183, 2059, 1239, 1472, 1807, 1660, 1361,
	1677, 1239, 1239, 1268, 1747, 1892, 1484, 1890, 1589, 1886,
	1886, 1358, 1392, 1393, 1550, 1563, 1537, 1562, 1488, 1418,
	1458, 1290, 1311, 1293, 794, 982, 1553, 1095, 1544, 794,
	1330, 1661, 1302, 1506, 1048, 1496, 1346, 1145, 1146, 1147,
	1148, 1149, 1296, 1344, 1441, 1423, 1099, 986, 1796, 1441,
	1441, 1444, 1800, 933, 840, 1349, 1442, 1318, 1446, 1447,
	1796, 1441, 743, 723, 1333, 1334, 1661, 811, 1326, 2174,
	1461, 1490, 1350, 1327, 1335, 615, 1588, 1231, 1230, 1758,
	2078, 1190, 1191, 794, 1337, 794, 1359, 1226, 1360, 1519,
	1343, 983, 1233, 975, 794, 1845, 794, 976, 1016, 2682,
	1018, 1507, 1022, 1523, 1524, 2679, 1704, 1035, 1357, 2240,
	1470, 2235, 2232, 673, 1100, 1365, 1470, 1396, 1395, 1318,
	1338, 932, 929, 930, 931, 1419, 2089, 1850, 2175, 1849,
	1848, 1846, 2009, 42, 1347, 1348, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1428, 1429, 1430, 723, 1439, 1443,
	819, 820, 812, 813, 814, 815, 816, 817, 818, 811,
	1134, 1431, 1432, 1459, 1806, 1560, 1037, 694, 1765, 1259,
	732, 2176, 1567, 694, 2537, 1477, 1836, 1038, 1189, 1299,
	2421, 1313, 2327, 1303, 1487, 1482, 1306, 1483, 1034, 1486,
	984, 798, 795, 1847, 814, 815, 816, 817, 818, 811,
	1251, 1252, 665, 1491, 1255, 1256, 1257, 1258, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 2325, 2538, 475, 484,
	445, 730, 1635, 2422, 476, 2328, 483, 477, 481, 480,
	478, 479, 2614, 145, 145, 145, 795, 1658, 2541, 2339,
	796, 797, 798, 795, 2356, 1603, 2355, 1665, 1021, 1838,
	1527, 1518, 1189, 1668, 1532, 1520, 2057, 1670, 694, 2326,
	2662, 796, 797, 798, 795, 1531, 1521, 1522, 1967, 1021,
	1966, 1174, 1180, 1961, 730, 1956, 2709, 1702, 485, 1299,
	796, 797, 798, 795, 2405, 1299, 1299, 1177, 1179, 1176,
	1243, 1178, 2308, 1667, 2693, 2653, 1860, 2648, 1683, 2390,
	2605, 1244, 1671, 1672, 2661, 1650, 1651, 1652, 482, 440,
	2592, 2539, 442, 1751, 1751, 1407, 1751, 441, 1851, 1852,
	2000, 2490, 1998, 2406, 1996, 1680, 2108, 1986, 2427, 1669,
	2424, 2309, 2423, 1636, 812, 813, 814, 815, 816, 817,
	818, 811, 487, 95, 1048, 145, 810, 809, 819, 820,
	812, 813, 814, 815, 816, 817, 818, 811, 1584, 1999,
	730, 1997, 1075, 1995, 1407, 1557, 1985, 1780, 2329, 1782,
	2307, 2107, 796, 797, 798, 795, 2158, 1239, 1315, 1649,
	2134, 1755, 1679, 2133, 1603, 379, 1597, 1753, 95, 1757,
	2074, 1546, 1643, 2051, 796, 797, 798, 795, 2531, 1809,
	2694, 986, 1496, 1984, 1983, 1777, 1674, 1675, 1982, 1048,
	1979, 1048, 1666, 1048, 1784, 1706, 1534, 1054, 730, 1973,
	1970, 796, 797, 798, 795, 1969, 1676, 1587, 1586, 1529,
	1779, 1791, 1533, 1585, 1797, 1581, 1595, 1596, 1580, 1096,
	1678, 952, 1823, 2144, 1545, 2645, 2616, 1048, 1854, 810,
	809, 819, 820, 812, 813, 814, 815, 816, 817, 818,
	811, 1861, 2577, 2560, 2474, 1733, 1048, 796, 797, 798,
	795, 2457, 1543, 796, 797, 798, 795, 1548, 695, 2388,
	2386, 1863, 95, 2372, 2370, 2005, 1540, 694, 2341, 2318,
	1673, 796, 797, 798, 795, 1561, 2306, 2305, 1564, 1565,
	1566, 1771, 2302, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 2292, 1577, 1865, 1705, 1776, 1708, 1709, 1710, 1711,
	1778, 2286, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1853, 1792, 1827, 1834,
	2236, 2226, 1840, 1820, 2520, 2396, 2225, 1766, 1767, 1768,
	2492, 2138, 1048, 1810, 2132, 1862, 1812, 2085, 1893, 2052,
	2042, 1817, 796, 797, 798, 795, 1936, 1770, 796, 797,
	798, 795, 1942, 1987, 1980, 1662, 1976, 1975, 1869, 1974,
	528, 527, 2722, 1874, 1590, 1583, 1844, 1462, 1951, 1830,
	1831, 1460, 1308, 1097, 865, 1134, 2395, 1955, 802, 803,
	804, 805, 806, 807, 808, 800, 2365, 1963, 1964, 1965,
	861, 1903, 860, 1968, 1280, 1833, 1285, 1286, 841, 796,
	797, 798, 795, 719, 1945, 2322, 2321, 1751, 1947, 796,
	797, 798, 795, 2319, 1819, 2297, 2296, 2001, 1934, 2291,
	2289, 1897, 2279, 2258, 2257, 730, 1407, 1407, 1407, 1407,
	2184, 1943, 1894, 2113, 2106, 2098, 2093, 730, 1407, 2046,
	1901, 1751, 1933, 796, 797, 798, 795, 1888, 1884, 2013,
	1046, 1299, 1299, 1299, 1048, 1883, 1958, 1568, 1958, 138,
	1558, 2013, 126, 105, 1556, 145, 145, 1552, 1551, 1046,
	1959, 1953, 1941, 42, 1074, 1925, 30, 1935, 31, 1549,
	1917, 1542, 1539, 19, 1924, 1649, 1538, 1239, 8, 1242,
	1241, 2064, 6, 2026, 1060, 1954, 1239, 1946, 2073, 7,
	1960, 138, 1058, 1290, 1048, 1293, 2678, 2080, 2672, 95,
	95, 695, 1950, 1981, 2660, 2657, 135, 2655, 1318, 810,
	809, 819, 820, 812, 813, 814, 815, 816, 817, 818,
	811, 2604, 2508, 857, 2006, 1275, 2443, 2044, 2045, 2431,
	2060, 2428, 2010, 2379, 2377, 2363, 2362, 2029, 2361, 2028,
	2070, 2027, 1298, 2358, 586, 1837, 2072, 2025, 135, 2043,
	2352, 2313, 2119, 1855, 1856, 1908, 1284, 1277, 2063, 1858,
	1859, 973, 2002, 1962, 2038, 1930, 2101, 1929, 2103, 2082,
	827, 2077, 1864, 2050, 2040, 1928, 1289, 1944, 2014, 2015,
	2016, 2017, 1292, 730, 2065, 1948, 1949, 2071, 2067, 2147,
	1281, 1802, 2061, 2076, 858, 1764, 1728, 1659, 1175, 2162,
	145, 1299, 135, 2090, 1895, 1896, 1306, 1603, 1467, 730,
	730, 730, 2069, 2091, 1449, 1310, 2102, 1282, 1407, 1658,
	1119, 2182, 1971, 1972, 2099, 2100, 1085, 2186, 1977, 1978,
	936, 884, 883, 1683, 1683, 1683, 882, 2215, 2217, 2097,
	2215, 2215, 881, 880, 879, 878, 2007, 2222, 2104, 2105,
	877, 2118, 1048, 1048, 2111, 2120, 2121, 2122, 2123, 876,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2110, 2185,
	875, 2135, 2163, 2187, 2188, 2140, 874, 796, 797, 798,
	795, 2359, 2109, 145, 2180, 2597, 1882, 873, 2147, 872,
	871, 796, 797, 798, 795, 1881, 870, 2212, 2170, 2171,
	2216, 942, 2177, 1880, 2181, 796, 797, 798, 795, 796,
	797, 798, 795, 2142, 869, 868, 864, 863, 796, 797,
	798, 795, 2218, 2219, 2676, 862, 796, 797, 798, 795,
	1854, 859, 2220, 1879, 854, 853, 2238, 851, 850, 849,
	1315, 2223, 2224, 611, 1315, 848, 847, 590, 591, 592,
	593, 2250, 846, 845, 844, 1441, 796, 797, 798, 795,
	589, 2190, 843, 839, 2229, 1878, 838, 145, 2234, 2237,
	759, 2233, 2247, 810, 809, 819, 820, 812, 813, 814,
	815, 816, 817, 818, 811, 1664, 2264, 2251, 796, 797,
	798, 795, 1645, 2254, 2255, 2256, 2243, 2244, 2277, 747,
	2595, 2545, 2263, 2246, 2280, 1057, 1919, 1775, 1464, 1059,
	379, 758, 2022, 2020, 2278, 1299, 2249, 2023, 2021, 1299,
	2248, 2019, 2024, 2274, 1743, 1744, 2282, 2018, 2382, 1877,
	2381, 1466, 2281, 95, 2708, 2136, 2137, 95, 2285, 2284,
	2062, 2164, 2165, 2166, 1804, 1048, 1048, 1465, 95, 1899,
	77, 2092, 796, 797, 798, 795, 41, 95, 1751, 1407,
	2332, 2189, 2141, 40, 2380, 1391, 613, 2273, 608, 2276,
	599, 1876, 1269, 2112, 1824, 1046, 1046, 610, 609, 142,
	1790, 1048, 938, 2298, 1875, 1595, 1596, 2301, 1079, 1637,
	2340, 753, 145, 375, 796, 797, 798, 795, 602, 376,
	2526, 2217, 1952, 1872, 1904, 2333, 377, 796, 797, 798,
	795, 2336, 2334, 1654, 2337, 1328, 1309, 2300, 2636, 374,
	730, 1231, 1230, 950, 951, 2331, 796, 797, 798, 795,
	1731, 2330, 1871, 1394, 2314, 1015, 2212, 2338, 1014, 607,
	787, 2342, 940, 606, 2013, 2384, 948, 949, 2253, 597,
	946, 947, 2673, 730, 1485, 796, 797, 798, 795, 1870,
	2611, 2373, 977, 2364, 2357, 2609, 1866, 600, 944, 945,
	2585, 2570, 2371, 2369, 2569, 2221, 2567, 2013, 2374, 2534,
	2375, 1857, 796, 797, 798, 795, 2509, 2454, 598, 796,
	797, 798, 795, 2453, 730, 2399, 2387, 1835, 2271, 2385,
	2270, 730, 614, 2261, 796, 797, 798, 795, 943, 2391,
	1185, 2392, 589, 2260, 2048, 1332, 2398, 2599, 2598, 2394,
	796, 797, 798, 795, 2075, 1683, 601, 590, 591, 592,
	593, 1541, 2400, 796, 797, 798, 795, 744, 2598, 730,
	589, 2599, 730, 730, 730, 2354, 989, 2272, 49, 1435,
	1052, 2418, 2415, 1, 2417, 2425, 2426, 1307, 1330, 594,
	2451, 2031, 2334, 1734, 2032, 2252, 2034, 1503, 1046, 2316,
	2432, 1729, 1638, 2440, 2441, 2442, 2397, 2161, 2429, 2439,
	968, 616, 2471, 2468, 2448, 1234, 1739, 1742, 1743, 1744,
	1740, 1104, 1741, 1745, 612, 709, 1702, 739, 1101, 2449,
	738, 736, 1187, 489, 2316, 1475, 2003, 2450, 2635, 2664,
	2603, 2638, 730, 2196, 1117, 473, 2561, 2469, 2512, 2607,
	2674, 2288, 2514, 2460, 730, 1508, 792, 2066, 2290, 2478,
	634, 522, 2483, 2482, 497, 852, 1406, 2206, 1087, 1080,
	2116, 711, 496, 2498, 2494, 2312, 1913, 2484, 2491, 605,
	2199, 708, 635, 1578, 2510, 2503, 1270, 2194, 730, 1291,
	1274, 2419, 2209, 2210, 2323, 2172, 1931, 2718, 2195, 810,
	809, 819, 820, 812, 813, 814, 815, 816, 817, 818,
	811, 2707, 2685, 2671, 2530, 2590, 2702, 2620, 2555, 2558,
	2529, 2658, 2464, 2535, 2462, 2463, 2651, 695, 2586, 411,
	2559, 1832, 2540, 695, 2200, 1415, 580, 2550, 2551, 2552,
	2553, 677, 95, 2444, 2571, 1463, 412, 1663, 2578, 2430,
	603, 2566, 2564, 1644, 810, 809, 819, 820, 812, 813,
	814, 815, 816, 817, 818, 811, 604, 2584, 1647, 1646,
	1156, 801, 1173, 2293, 2593, 2294, 2596, 2594, 836, 450,
	1530, 462, 1910, 1299, 2205, 2600, 2376, 2041, 2610, 2378,
	2612, 2613, 2608, 2606, 48, 47, 730, 46, 45, 1454,
	149, 491, 138, 2383, 38, 126, 105, 148, 2557, 625,
	2640, 471, 470, 2634, 469, 2642, 2623, 2625, 827, 468,
	2618, 1738, 131, 2208, 2633, 1686, 1736, 2641, 2649, 119,
	730, 1735, 2646, 132, 1402, 1401, 2647, 1452, 93, 1695,
	1362, 2542, 2495, 2496, 2351, 2650, 2654, 1988, 2656, 2347,
	2202, 2343, 2227, 78, 1140, 2666, 2191, 2192, 2198, 135,
	1653, 891, 887, 889, 890, 888, 730, 1843, 730, 1839,
	1681, 657, 2201, 2203, 1682, 2168, 953, 2470, 2299, 2642,
	2684, 2675, 1601, 2677, 2680, 1599, 2245, 2241, 1471, 730,
	1140, 2641, 1140, 2688, 1304, 2683, 1898, 1403, 2701, 2695,
	2666, 1399, 2416, 583, 2692, 32, 27, 5, 29, 2705,
	28, 14, 15, 1140, 13, 1108, 12, 2706, 18, 2713,
	26, 25, 24, 2717, 87, 86, 23, 2716, 85, 127,
	128, 2725, 129, 130, 84, 83, 2728, 2713, 2730, 2729,
	82, 2731, 2717, 22, 2211, 11, 1739, 1742, 1743, 1744,
	1740, 659, 1741, 1745, 658, 2479, 2197, 81, 80, 79,
	21, 75, 2207, 73, 20, 74, 71, 72, 59, 58,
	57, 2493, 69, 68, 67, 66, 65, 64, 2114, 633,
	56, 55, 796, 797, 798, 795, 54, 53, 644, 70,
	63, 62, 61, 60, 52, 51, 626, 104, 125, 136,
	50, 76, 103, 102, 101, 100, 99, 2525, 98, 97,
	33, 34, 35, 36, 907, 113, 112, 114, 116, 124,
	118, 117, 115, 649, 110, 2615, 44, 810, 809, 819,
	820, 812, 813, 814, 815, 816, 817, 818, 811, 1389,
	108, 111, 109, 107, 43, 10, 17, 1754, 2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	0, 0, 0, 0, 0, 2525, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 121, 122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 624, 133, 0, 0,
	1371, 0, 0, 0, 0, 0, 895, 627, 652, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 123,
	0, 89, 0, 0, 915, 919, 921, 923, 925, 926,
	928, 647, 932, 929, 930, 931, 0, 0, 910, 911,
	912, 913, 893, 894, 916, 1389, 896, 2525, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 908, 914,
	0, 0, 0, 648, 653, 0, 0, 918, 920, 922,
	924, 927, 0, 0, 90, 0, 0, 0, 0, 1391,
	640, 0, 642, 656, 37, 0, 0, 639, 637, 636,
	0, 641, 628, 629, 630, 631, 632, 1210, 654, 655,
	0, 1207, 0, 0, 909, 1209, 1206, 1208, 1212, 1213,
	650, 651, 0, 1211, 0, 2697, 1371, 809, 819, 820,
	812, 813, 814, 815, 816, 817, 818, 811, 0, 39,
	1364, 0, 0, 1363, 0, 0, 0, 422, 1375, 421,
	428, 418, 0, 0, 0, 0, 0, 645, 0, 1379,
	0, 425, 426, 0, 427, 431, 0, 0, 413, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 436, 1368,
	0, 0, 0, 1370, 1372, 1374, 0, 1376, 1377, 1378,
	1380, 1381, 1382, 1384, 1385, 1386, 1387, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 440, 0, 0,
	442, 0, 0, 0, 0, 441, 0, 0, 0, 0,
	0, 0, 91, 92, 96, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 0, 0, 0, 0, 0, 1841,
	1842, 0, 0, 0, 0, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1217, 1218, 1219, 1220,
	1221, 1222, 1215, 1216, 1375, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 1379, 0, 0, 1406, 1406,
	1406, 1406, 0, 0, 0, 0, 1367, 0, 0, 0,
	1406, 0, 0, 0, 0, 1368, 0, 0, 0, 1370,
	1372, 1374, 1528, 1376, 1377, 1378, 1380, 1381, 1382, 1384,
	1385, 1386, 1387, 0, 0, 1383, 0, 0, 0, 0,
	0, 0, 1373, 0, 0, 810, 809, 819, 820, 812,
	813, 814, 815, 816, 817, 818, 811, 0, 0, 0,
	0, 0, 414, 416, 415, 0, 95, 0, 1390, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 917, 0, 424, 0, 0, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 408, 317, 504, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 1367, 0, 0, 0, 0, 464, 0, 0,
	0, 224, 0, 0, 249, 0, 0, 0, 495, 0,
	0, 309, 263, 0, 0, 0, 0, 551, 559, 0,
	0, 1383, 0, 0, 0, 0, 0, 0, 1373, 457,
	0, 0, 488, 528, 527, 475, 484, 95, 0, 205,
	147, 476, 0, 483, 477, 481, 480, 478, 479, 0,
	543, 0, 0, 0, 0, 0, 0, 448, 461, 2522,
	465, 0, 0, 0, 419, 423, 429, 0, 430, 432,
	1406, 0, 433, 434, 435, 0, 0, 437, 438, 0,
	0, 0, 0, 458, 459, 95, 0, 0, 0, 505,
	0, 460, 0, 0, 500, 485, 486, 0, 0, 196,
	314, 330, 206, 305, 343, 211, 312, 201, 278, 301,
	0, 0, 198, 328, 311, 260, 243, 244, 197, 0,
	296, 222, 235, 218, 276, 482, 503, 507, 217, 565,
	501, 338, 200, 0, 337, 275, 324, 329, 261, 255,
	199, 326, 259, 254, 247, 226, 566, 239, 287, 253,
	288, 240, 265, 264, 266, 0, 0, 0, 0, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 340, 0,
	0, 549, 0, 0, 0, 313, 0, 0, 248, 0,
	0, 95, 502, 95, 299, 281, 562, 449, 0, 297,
	251, 325, 289, 331, 315, 339, 293, 290, 191, 316,
	220, 262, 202, 204, 216, 223, 225, 227, 228, 271,
	272, 284, 304, 318, 319, 320, 219, 212, 298, 213,
	237, 214, 192, 306, 215, 194, 285, 323, 0, 233,
	294, 258, 195, 257, 286, 322, 321, 203, 347, 353,
	354, 358, 0, 359, 0, 0, 0, 367, 371, 372,
	373, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 352, 231, 188, 189, 335, 547, 277,
	0, 0, 561, 542, 544, 545, 548, 552, 553, 554,
	555, 556, 558, 560, 564, 302, 0, 0, 0, 0,
	0, 242, 283, 0, 303, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 310, 333, 345,
	362, 365, 0, 0, 0, 193, 364, 0, 2523, 0,
	0, 0, 2524, 0, 563, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 506, 267, 268, 269, 270, 550,
	0, 210, 363, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 230, 236, 0, 238, 209, 282, 232, 342, 245,
	0, 368, 0, 0, 0, 0, 274, 241, 307, 246,
	252, 295, 341, 280, 300, 207, 332, 308, 256, 0,
	0, 572, 546, 571, 573, 574, 570, 575, 576, 557,
	467, 0, 510, 568, 567, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 250, 0, 291, 229, 535, 515, 516, 517, 466,
	518, 513, 514, 536, 508, 532, 533, 490, 511, 519,
	531, 520, 534, 537, 538, 577, 578, 526, 579, 523,
	539, 530, 529, 521, 509, 540, 541, 494, 492, 524,
	525, 512, 493, 317, 504, 0, 348, 349, 350, 370,
	334, 0, 221, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 464, 0, 0,
	0, 224, 0, 0, 249, 0, 0, 0, 495, 0,
	0, 309, 263, 0, 0, 0, 0, 551, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 0, 488, 528, 527, 475, 484, 0, 0, 205,
	147, 476, 0, 483, 477, 481, 480, 478, 479, 822,
	543, 826, 0, 0, 0, 0, 0, 448, 461, 0,
	465, 0, 0, 0, 0, 0, 823, 825, 821, 0,
	824, 810, 809, 819, 820, 812, 813, 814, 815, 816,
	817, 818, 811, 458, 459, 0, 0, 0, 0, 505,
	0, 460, 0, 0, 500, 485, 486, 0, 0, 196,
	314, 330, 206, 305, 343, 211, 312, 201, 278, 301,
	0, 0, 198, 328, 311, 260, 243, 244, 197, 0,
	296, 222, 235, 218, 276, 482, 503, 507, 217, 565,
	501, 338, 200, 0, 337, 275, 324, 329, 261, 255,
	199, 326, 259, 254, 247, 226, 566, 239, 287, 253,
	288, 240, 265, 264, 266, 0, 0, 0, 0, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 340, 0,
	0, 549, 0, 0, 0, 313, 0, 0, 248, 0,
	0, 0, 502, 0, 299, 281, 562, 449, 0, 297,
	251, 325, 289, 331, 315, 339, 293, 290, 191, 316,
	220, 262, 202, 204, 216, 223, 225, 227, 228, 271,
	272, 284, 304, 318, 319, 320, 219, 212, 298, 213,
	237, 214, 192, 306, 215, 194, 285, 323, 0, 233,
	294, 258, 195, 257, 286, 322, 321, 203, 347, 353,
	354, 358, 0, 359, 0, 0, 0, 367, 371, 372,
	373, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	1236, 1235, 1237, 352, 231, 188, 189, 335, 547, 277,
	0, 0, 561, 542, 544, 545, 548, 552, 553, 554,
	555, 556, 558, 560, 564, 302, 0, 0, 0, 0,
	0, 242, 283, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 333, 345,
	362, 365, 0, 0, 0, 193, 364, 0, 0, 0,
	0, 0, 0, 0, 563, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 506, 267, 268, 269, 270, 550,
	0, 210, 363, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 230, 236, 0, 238, 209, 282, 232, 342, 245,
	0, 368, 0, 0, 0, 0, 274, 241, 307, 246,
	252, 295, 341, 280, 300, 207, 332, 308, 256, 0,
	0, 572, 546, 571, 573, 574, 570, 575, 576, 557,
	467, 0, 510, 568, 567, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 250, 0, 291, 229, 535, 515, 516, 517, 466,
	518, 513, 514, 536, 508, 532, 533, 490, 511, 519,
	531, 520, 534, 537, 538, 577, 578, 526, 579, 523,
	539, 530, 529, 521, 509, 540, 541, 494, 492, 524,
	525, 512, 493, 317, 504, 0, 348, 349, 350, 370,
	334, 0, 221, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 464, 0, 0,
	0, 224, 0, 0, 249, 0, 0, 0, 495, 0,
	0, 309, 263, 0, 0, 0, 0, 551, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 0, 488, 528, 527, 475, 484, 0, 0, 205,
	147, 476, 0, 483, 477, 481, 480, 478, 479, 0,
	543, 0, 0, 0, 0, 0, 0, 448, 461, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 459, 0, 0, 0, 0, 505,
	0, 460, 0, 0, 500, 485, 486, 0, 0, 196,
	314, 330, 206, 305, 343, 211, 312, 201, 278, 301,
	0, 0, 198, 328, 311, 260, 243, 244, 197, 0,
	296, 222, 235, 218, 276, 482, 503, 507, 217, 565,
	501, 338, 200, 0, 337, 275, 324, 329, 261, 255,
	199, 326, 259, 254, 247, 226, 566, 239, 287, 253,
	288, 240, 265, 264, 266, 0, 0, 0, 0, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 340, 0,
	0, 549, 0, 0, 0, 313, 0, 0, 248, 0,
	0, 0, 502, 0, 299, 281, 562, 449, 0, 297,
	251, 325, 289, 331, 315, 339, 293, 290, 191, 316,
	220, 262, 202, 204, 216, 223, 225, 227, 228, 271,
	272, 284, 304, 318, 319, 320, 219, 212, 298, 213,
	237, 214, 192, 306, 215, 194, 285, 323, 0, 233,
	294, 258, 195, 257, 286, 322, 321, 203, 347, 353,
	354, 358, 0, 359, 0, 0, 0, 367, 371, 372,
	373, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 352, 231, 188, 189, 335, 547, 277,
	0, 0, 561, 542, 544, 545, 548, 552, 553, 554,
	555, 556, 558, 560, 564, 302, 0, 0, 0, 0,
	0, 242, 283, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 333, 345,
	362, 365, 0, 0, 0, 193, 364, 0, 2523, 0,
	0, 0, 2524, 0, 563, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 506, 267, 268, 269, 270, 550,
	0, 210, 363, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 230, 236, 0, 238, 209, 282, 232, 342, 245,
	0, 368, 0, 0, 0, 0, 274, 241, 307, 246,
	252, 295, 341, 280, 300, 207, 332, 308, 256, 0,
	0, 572, 546, 571, 573, 574, 570, 575, 576, 557,
	467, 0, 510, 568, 567, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 250, 0, 291, 229, 535, 515, 516, 517, 466,
	518, 513, 514, 536, 508, 532, 533, 490, 511, 519,
	531, 520, 534, 537, 538, 577, 578, 526, 579, 523,
	539, 530, 529, 521, 509, 540, 541, 494, 492, 524,
	525, 512, 493, 317, 504, 0, 348, 349, 350, 370,
	334, 0, 221, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 464, 0, 0,
	0, 224, 1300, 0, 249, 0, 0, 0, 495, 0,
	0, 309, 263, 0, 0, 0, 0, 551, 559, 0,
	0, 0, 0, 0, 0, 0, 1425, 0, 0, 457,
	0, 0, 488, 528, 527, 475, 484, 0, 0, 205,
	147, 476, 0, 483, 477, 481, 480, 478, 479, 0,
	543, 0, 0, 0, 0, 0, 0, 448, 461, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 459, 0, 0, 0, 0, 505,
	0, 460, 0, 0, 1426, 485, 486, 0, 0, 196,
	314, 330, 206, 305, 343, 211, 312, 201, 278, 301,
	0, 0, 198, 328, 311, 260, 243, 244, 197, 0,
	296, 222, 235, 218, 276, 482, 503, 507, 217, 565,
	501, 338, 200, 0, 337, 275, 324, 329, 261, 255,
	199, 326, 259, 254, 247, 226, 566, 239, 287, 253,
	288, 240, 265, 264, 266, 0, 0, 0, 0, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 340, 0,
	0, 549, 0, 0, 0, 313, 0, 0, 248, 0,
	0, 0, 502, 0, 299, 281, 562, 449, 0, 297,
	251, 325, 289, 331, 315, 339, 293, 290, 191, 316,
	220, 262, 202, 204, 216, 223, 225, 227, 228, 271,
	272, 284, 304, 318, 319, 320, 219, 212, 298, 213,
	237, 214, 192, 306, 215, 194, 285, 323, 0, 233,
	294, 258, 195, 257, 286, 322, 321, 203, 347, 353,
	354, 358, 0, 359, 0, 0, 0, 367, 371, 372,
	373, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 0, 0, 352, 231, 188, 189, 335, 547, 277,
	0, 0, 561, 542, 544, 545, 548, 552, 553, 554,
	555, 556, 558, 560, 564, 302, 0, 0, 0, 0,
	0, 242, 283, 0, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 333, 345,
	362, 365, 0, 0, 0, 193, 364, 0, 0, 0,
	0, 0, 0, 0, 563, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 506, 267, 268, 269, 270, 550,
	0, 210, 363, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 230, 236, 0, 238, 209, 282, 232, 342, 245,
	0, 368, 0, 0, 0, 0, 274, 241, 307, 246,
	252, 295, 341, 280, 300, 207, 332, 308, 256, 0,
	0, 572, 546, 571, 573, 574, 570, 575, 576, 557,
	467, 0, 510, 568, 567, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 250, 0, 291, 229, 535, 515, 516, 517, 466,
	518, 513, 514, 536, 508, 532, 533, 490, 511, 519,
	531, 520, 534, 537, 538, 577, 578, 526, 579, 523,
	539, 530, 529, 521, 509, 540, 541, 494, 492, 524,
	525, 512, 493, 138, 317, 504, 348, 349, 350, 370,
	334, 0, 221, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 0, 0, 249, 0, 0, 0, 830,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 448, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 449, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 106, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 317, 504, 0, 348, 349, 350,
	370, 334, 0, 221, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 2696, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 448, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 449, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 317, 504, 0, 348, 349, 350,
	370, 334, 0, 221, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 1300, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 448, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 449, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 317, 504, 0, 348, 349, 350,
	370, 334, 0, 221, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 0, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 448, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 1073, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 449, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 0, 0, 0, 348, 349, 350,
	370, 334, 0, 221, 317, 504, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 0, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 448, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 449, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 317, 504, 0, 348, 349, 350,
	370, 334, 0, 221, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 0, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 448, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 449, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 317, 504, 0, 348, 349, 350,
	370, 334, 0, 221, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 464, 0,
	0, 0, 224, 0, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 0, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	1158, 1159, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 317, 504, 0, 348, 349, 350,
	370, 334, 0, 221, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 0, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 448, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 449, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 317, 504, 0, 348, 349, 350,
	370, 334, 0, 221, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 224, 0, 0, 249, 0, 0, 0, 495,
	0, 0, 309, 263, 0, 0, 0, 0, 551, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 488, 528, 527, 475, 484, 0, 0,
	205, 147, 476, 0, 483, 477, 481, 480, 478, 479,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 459, 0, 0, 0, 0,
	505, 0, 460, 0, 0, 500, 485, 486, 0, 0,
	196, 314, 330, 206, 305, 343, 211, 312, 201, 278,
	301, 0, 0, 198, 328, 311, 260, 243, 244, 197,
	0, 296, 222, 235, 218, 276, 482, 503, 507, 217,
	565, 501, 338, 200, 0, 337, 275, 324, 329, 261,
	255, 199, 326, 259, 254, 247, 226, 566, 239, 287,
	253, 288, 240, 265, 264, 266, 0, 0, 0, 0,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 340,
	0, 0, 549, 0, 0, 0, 313, 0, 0, 248,
	0, 0, 0, 502, 0, 299, 281, 562, 0, 0,
	297, 251, 325, 289, 331, 315, 339, 293, 290, 191,
	316, 220, 262, 202, 204, 216, 223, 225, 227, 228,
	271, 272, 284, 304, 318, 319, 320, 219, 212, 298,
	213, 237, 214, 192, 306, 215, 194, 285, 323, 0,
	233, 294, 258, 195, 257, 286, 322, 321, 203, 347,
	353, 354, 358, 0, 359, 0, 0, 0, 367, 371,
	372, 373, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 352, 231, 188, 189, 335, 547,
	277, 0, 0, 561, 542, 544, 545, 548, 552, 553,
	554, 555, 556, 558, 560, 564, 302, 0, 0, 0,
	0, 0, 242, 283, 0, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 333,
	345, 362, 365, 0, 0, 0, 193, 364, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 506, 267, 268, 269, 270,
	550, 0, 210, 363, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 230, 236, 0, 238, 209, 282, 232, 342,
	245, 0, 368, 0, 0, 0, 0, 274, 241, 307,
	246, 252, 295, 341, 280, 300, 207, 332, 308, 256,
	0, 0, 572, 546, 571, 573, 574, 570, 575, 576,
	557, 467, 0, 510, 568, 567, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 250, 0, 291, 229, 535, 515, 516, 517,
	466, 518, 513, 514, 536, 508, 532, 533, 490, 511,
	519, 531, 520, 534, 537, 538, 577, 578, 526, 579,
	523, 539, 530, 529, 521, 509, 540, 541, 494, 492,
	524, 525, 512, 493, 0, 0, 0, 348, 349, 350,
	370, 334, 0, 221, 138, 317, 38, 126, 105, 0,
	0, 0, 0, 0, 0, 0, 279, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 309, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 205, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 314, 330, 206, 305, 343, 211, 312, 201,
	278, 301, 0, 0, 198, 328, 311, 260, 243, 244,
	197, 0, 296, 222, 235, 218, 276, 0, 327, 355,
	217, 346, 0, 338, 200, 0, 337, 275, 324, 329,
	261, 255, 199, 326, 259, 254, 247, 226, 369, 239,
	287, 253, 288, 240, 265, 264, 266, 0, 0, 0,
	0, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	248, 0, 0, 0, 356, 0, 299, 281, 0, 0,
	0, 297, 251, 325, 289, 331, 315, 339, 293, 290,
	191, 316, 220, 262, 202, 204, 216, 223, 225, 227,
	228, 271, 272, 284, 304, 318, 319, 320, 219, 212,
	298, 213, 237, 214, 192, 306, 215, 194, 285, 323,
	0, 233, 294, 258, 195, 257, 286, 322, 321, 203,
	347, 353, 354, 358, 0, 359, 0, 0, 0, 367,
	371, 372, 373, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 352, 231, 188, 189, 335,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 351, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 242, 283, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	333, 345, 362, 365, 0, 0, 0, 193, 364, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 360, 267, 268, 269,
	270, 384, 386, 210, 363, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 230, 236, 0, 238, 209, 282, 232,
	342, 245, 0, 368, 0, 0, 0, 0, 274, 241,
	307, 246, 252, 295, 341, 280, 300, 207, 332, 308,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 39, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 250, 106, 291, 229, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 0,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 187, 317, 0, 0, 348, 349,
	350, 370, 334, 0, 221, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 907, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 309, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 205, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 0, 0,
	0, 196, 314, 330, 206, 305, 343, 211, 312, 201,
	278, 301, 0, 0, 1623, 1625, 1626, 1627, 1628, 1629,
	1630, 0, 1634, 1631, 1632, 1633, 276, 0, 1618, 1619,
	1620, 1621, 893, 1604, 1624, 0, 1605, 275, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1622,
	287, 253, 288, 240, 265, 264, 266, 918, 920, 922,
	924, 927, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	248, 0, 0, 0, 1617, 0, 299, 281, 0, 0,
	0, 297, 251, 325, 289, 331, 315, 339, 293, 290,
	191, 316, 220, 262, 202, 204, 216, 223, 225, 227,
	228, 271, 272, 284, 304, 318, 319, 320, 219, 212,
	298, 213, 237, 214, 192, 306, 215, 194, 285, 323,
	0, 233, 294, 258, 195, 257, 286, 322, 321, 203,
	347, 353, 354, 358, 0, 359, 0, 0, 0, 367,
	371, 372, 373, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 352, 231, 188, 189, 335,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 351, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 242, 283, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	333, 345, 362, 365, 0, 0, 0, 193, 364, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 360, 267, 268, 269,
	270, 234, 0, 210, 363, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 230, 236, 0, 238, 209, 282, 232,
	342, 245, 0, 368, 0, 0, 0, 0, 274, 241,
	307, 246, 252, 295, 341, 280, 300, 207, 332, 308,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 917, 250, 0, 291, 229, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 0,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 187, 317, 0, 0, 348, 349,
	350, 370, 334, 0, 221, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 309, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 205, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 1690, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 314, 330, 206, 305, 343, 211, 312, 201,
	278, 301, 0, 0, 198, 328, 311, 260, 243, 244,
	197, 0, 296, 222, 235, 218, 276, 0, 327, 355,
	217, 346, 0, 338, 200, 0, 337, 275, 324, 329,
	261, 255, 199, 326, 259, 254, 247, 226, 369, 239,
	287, 253, 288, 240, 265, 264, 266, 0, 0, 0,
	0, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	340, 0, 0, 0, 1687, 0, 1686, 313, 1688, 1691,
	248, 0, 0, 0, 356, 0, 299, 281, 0, 0,
	0, 297, 251, 325, 289, 331, 315, 339, 293, 290,
	191, 316, 220, 262, 202, 204, 216, 223, 225, 227,
	228, 271, 272, 284, 304, 318, 319, 320, 219, 212,
	298, 213, 237, 214, 192, 306, 215, 194, 285, 323,
	1692, 233, 294, 258, 195, 257, 286, 322, 321, 203,
	347, 353, 354, 358, 0, 359, 0, 0, 0, 367,
	371, 372, 373, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 352, 231, 188, 189, 335,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 351, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 242, 283, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	333, 345, 362, 365, 0, 0, 0, 193, 364, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 360, 267, 268, 269,
	270, 234, 0, 210, 363, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 230, 236, 0, 238, 209, 282, 232,
	342, 245, 0, 368, 0, 0, 0, 0, 274, 241,
	307, 246, 252, 295, 341, 280, 300, 207, 332, 308,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 250, 0, 291, 229, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 0,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 187, 317, 0, 0, 348, 349,
	350, 370, 334, 0, 221, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1456, 0,
	0, 0, 0, 224, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 309, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 1457, 0, 0,
	0, 205, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 796, 797, 798, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 314, 330, 206, 305, 343, 211, 312, 201,
	278, 301, 0, 0, 198, 328, 311, 260, 243, 244,
	197, 0, 296, 222, 235, 218, 276, 0, 327, 355,
	217, 346, 0, 338, 200, 0, 337, 275, 324, 329,
	261, 255, 199, 326, 259, 254, 247, 226, 369, 239,
	287, 253, 288, 240, 265, 264, 266, 0, 0, 0,
	0, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	248, 0, 0, 0, 356, 0, 299, 281, 0, 0,
	0, 297, 251, 325, 289, 331, 315, 339, 293, 290,
	191, 316, 220, 262, 202, 204, 216, 223, 225, 227,
	228, 271, 272, 284, 304, 318, 319, 320, 219, 212,
	298, 213, 237, 214, 192, 306, 215, 194, 285, 323,
	0, 233, 294, 258, 195, 257, 286, 322, 321, 203,
	347, 353, 354, 358, 0, 359, 0, 0, 0, 367,
	371, 372, 373, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 352, 231, 188, 189, 335,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 351, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 242, 283, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	333, 345, 362, 365, 0, 0, 0, 193, 364, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 360, 267, 268, 269,
	270, 234, 0, 210, 363, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 230, 236, 0, 238, 209, 282, 232,
	342, 245, 0, 368, 0, 0, 0, 0, 274, 241,
	307, 246, 252, 295, 341, 280, 300, 207, 332, 308,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 250, 0, 291, 229, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 0,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 187, 317, 0, 0, 348, 349,
	350, 370, 334, 0, 221, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 676, 0, 249, 0, 0, 0,
	0, 0, 0, 309, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 684, 685, 0, 0, 0,
	0, 205, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 314, 330, 206, 305, 343, 211, 312, 201,
	278, 301, 0, 0, 198, 328, 311, 260, 243, 244,
	197, 0, 296, 222, 235, 218, 276, 0, 327, 355,
	217, 346, 659, 338, 200, 658, 337, 275, 324, 329,
	261, 255, 199, 326, 259, 254, 247, 226, 369, 239,
	287, 253, 288, 240, 265, 264, 266, 0, 0, 0,
	0, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	248, 0, 0, 0, 356, 0, 299, 281, 0, 0,
	0, 297, 251, 325, 289, 331, 315, 339, 674, 290,
	191, 316, 220, 262, 202, 204, 216, 223, 225, 227,
	228, 271, 272, 284, 304, 318, 319, 320, 219, 212,
	298, 213, 237, 214, 192, 306, 215, 194, 285, 323,
	0, 233, 294, 258, 195, 257, 286, 322, 321, 203,
	347, 353, 354, 358, 0, 359, 0, 0, 0, 367,
	371, 372, 373, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 0, 0, 352, 231, 188, 189, 335,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 351, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 242, 283, 0, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	333, 345, 362, 365, 0, 0, 0, 193, 364, 0,
	0, 0, 0, 0, 0, 675, 336, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 678, 267, 268, 269,
	270, 234, 0, 210, 363, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 230, 236, 0, 238, 209, 282, 232,
	342, 245, 0, 368, 0, 0, 0, 0, 686, 681,
	682, 246, 252, 295, 341, 280, 300, 207, 332, 308,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 250, 0, 291, 229, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 0,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 187, 138, 317, 0, 348, 349,
	350, 370, 334, 0, 221, 0, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 93, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 1478, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 293,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 106, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 138, 317, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 249, 0,
	0, 0, 93, 0, 0, 309, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 1469, 0, 146, 0, 0, 0,
	0, 0, 0, 205, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 314, 330, 206, 305, 343, 211,
	312, 201, 278, 301, 0, 0, 198, 328, 311, 260,
	243, 244, 197, 0, 296, 222, 235, 218, 276, 0,
	327, 355, 217, 346, 0, 338, 200, 0, 337, 275,
	324, 329, 261, 255, 199, 326, 259, 254, 247, 226,
	369, 239, 287, 253, 288, 240, 265, 264, 266, 0,
	0, 0, 0, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 248, 0, 0, 0, 356, 0, 299, 281,
	0, 0, 0, 297, 251, 325, 289, 331, 315, 339,
	293, 290, 191, 316, 220, 262, 202, 204, 216, 223,
	225, 227, 228, 271, 272, 284, 304, 318, 319, 320,
	219, 212, 298, 213, 237, 214, 192, 306, 215, 194,
	285, 323, 0, 233, 294, 258, 195, 257, 286, 322,
	321, 203, 347, 353, 354, 358, 0, 359, 0, 0,
	0, 367, 371, 372, 373, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 0, 0, 352, 231, 188,
	189, 335, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 351, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 242, 283, 0, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 333, 345, 362, 365, 0, 0, 0, 193,
	364, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 360, 267,
	268, 269, 270, 234, 0, 210, 363, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 230, 236, 0, 238, 209,
	282, 232, 342, 245, 0, 368, 0, 0, 0, 0,
	274, 241, 307, 246, 252, 295, 341, 280, 300, 207,
	332, 308, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 250, 106, 291, 229, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 0, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 187, 138, 317, 0,
	348, 349, 350, 370, 334, 0, 221, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 93, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 106, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 684, 685,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 659, 338, 200, 658, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 686, 681, 682, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 1051, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1049, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 1045, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1049, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2637, 0, 146, 528, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1049, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2317,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1752, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1049, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1047,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 1769, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1049, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2691, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 528, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2619, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 2556, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2412, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 2452, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	2146, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1049, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1752, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 317, 0,
	0, 348, 349, 350, 370, 334, 0, 221, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	1781, 0, 0, 0, 205, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 314, 330, 206, 305, 343,
	211, 312, 201, 278, 301, 0, 0, 198, 328, 311,
	260, 243, 244, 197, 0, 296, 222, 235, 218, 276,
	0, 327, 355, 217, 346, 0, 338, 200, 0, 337,
	275, 324, 329, 261, 255, 199, 326, 259, 254, 247,
	226, 369, 239, 287, 253, 288, 240, 265, 264, 266,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 248, 0, 0, 0, 356, 0, 299,
	281, 0, 0, 0, 297, 251, 325, 289, 331, 315,
	339, 293, 290, 191, 316, 220, 262, 202, 204, 216,
	223, 225, 227, 228, 271, 272, 284, 304, 318, 319,
	320, 219, 212, 298, 213, 237, 214, 192, 306, 215,
	194, 285, 323, 0, 233, 294, 258, 195, 257, 286,
	322, 321, 203, 347, 353, 354, 358, 0, 359, 0,
	0, 0, 367, 371, 372, 373, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 352, 231,
	188, 189, 335, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 351, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 242, 283, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 333, 345, 362, 365, 0, 0, 0,
	193, 364, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 360,
	267, 268, 269, 270, 234, 0, 210, 363, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 230, 236, 0, 238,
	209, 282, 232, 342, 245, 0, 368, 0, 0, 0,
	0, 274, 241, 307, 246, 252, 295, 341, 280, 300,
	207, 332, 308, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 250, 0, 291, 229,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 187, 0, 0,
	0, 348, 349, 350, 370, 334, 317, 221, 0, 0,
	1655, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 293,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 317, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 1049, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 1336,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 317, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 293,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 621, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 317, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 402,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 403, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 317, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 293,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 317, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 293,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 317, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 293,
	290, 191, 316, 220, 262, 202, 204, 216, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	0, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 317, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 309, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 205, 147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 314, 330, 206, 305, 343, 211, 312,
	201, 278, 301, 0, 0, 198, 328, 311, 260, 243,
	244, 197, 0, 296, 222, 235, 218, 276, 0, 327,
	355, 217, 346, 0, 338, 200, 0, 337, 275, 324,
	329, 261, 255, 199, 326, 259, 254, 247, 226, 369,
	239, 287, 253, 288, 240, 265, 264, 266, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 248, 0, 0, 0, 356, 0, 299, 281, 0,
	0, 0, 297, 251, 325, 289, 331, 315, 339, 293,
	290, 191, 316, 220, 262, 202, 204, 443, 223, 225,
	227, 228, 271, 272, 284, 304, 318, 319, 320, 219,
	212, 298, 213, 237, 214, 192, 306, 215, 194, 285,
	323, 0, 233, 294, 258, 195, 257, 286, 322, 321,
	203, 347, 353, 354, 358, 0, 359, 0, 0, 0,
	367, 371, 372, 373, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 352, 231, 188, 189,
	335, 0, 277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 351, 0, 0, 0, 0, 302, 0,
	0, 0, 0, 0, 242, 283, 0, 303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 333, 345, 362, 365, 0, 0, 0, 193, 364,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 360, 267, 268,
	269, 270, 234, 0, 210, 363, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 230, 236, 0, 238, 209, 282,
	232, 342, 245, 0, 368, 0, 0, 0, 0, 274,
	241, 307, 246, 252, 295, 341, 280, 300, 207, 332,
	308, 256, 907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 250, 0, 291, 229, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	907, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 187, 0, 0, 0, 348,
	349, 350, 370, 334, 0, 221, 0, 0, 0, 0,
	1389, 0, 0, 0, 895, 0, 0, 0, 885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 915, 919, 921, 923, 925, 926, 928, 0,
	932, 929, 930, 931, 1391, 0, 910, 911, 912, 913,
	893, 894, 916, 0, 896, 0, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 908, 914, 0, 0,
	0, 2712, 0, 0, 0, 918, 920, 922, 924, 927,
	0, 1371, 895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	915, 919, 921, 923, 925, 926, 928, 0, 932, 929,
	930, 931, 909, 0, 910, 911, 912, 913, 893, 894,
	916, 1389, 896, 0, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 908, 914, 0, 0, 0, 0,
	0, 0, 0, 918, 920, 922, 924, 927, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	909, 0, 0, 0, 422, 0, 421, 428, 418, 0,
	0, 0, 1371, 0, 0, 0, 0, 0, 425, 426,
	0, 427, 431, 0, 0, 413, 0, 422, 0, 421,
	428, 418, 0, 0, 0, 436, 0, 0, 0, 1375,
	0, 425, 426, 0, 427, 431, 0, 0, 413, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 440, 0, 0, 442, 0, 0,
	1368, 1701, 441, 0, 1370, 1372, 1374, 0, 1376, 1377,
	1378, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1388, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1367, 0, 0,
	917, 1368, 0, 0, 0, 1370, 1372, 1374, 0, 1376,
	1377, 1378, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 414,
	416, 415, 0, 0, 0, 0, 1383, 0, 0, 420,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	0, 424, 414, 416, 415, 0, 0, 0, 439, 0,
	0, 0, 420, 0, 1390, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 917, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 0,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 419, 423, 429, 0, 430, 432, 0, 0, 433,
	434, 435, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 423, 429, 0, 430, 432,
	0, 0, 433, 434, 435, 0, 0, 437, 438,
}

var yyPact = [...]int{
	2582, -1000, -314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -221, 28795, 28795,
	-1000, -1000, 1759, -1000, 28285, 9914, 29305, 203, 194, 29305,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 443, -1000, 27775, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 404, 3027,
	29815, 7863, 29305, -293, -1000, 2341, -146, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1974, 467, 27265, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2573, 80, 467, 571, 587, 660,
	660, 11954, -55, -58, 2341, 240, 125, -1000, 705, 2582,
	29305, 1640, 381, 29305, -1000, 1018, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 381, -1000, -1000, -1000, 2341, 2341,
	-1000, 29305, 29305, -2, 1156, -1000, 267, 232, 237, 1017,
	-1000, -1000, -1000, -1000, -1000, 2342, -1000, 29305, 29305, 2054,
	29305, -1000, 1329, 343, 30514, 2176, 833, 510, 2067, -1000,
	-1000, 2023, -1000, 113, 129, 142, 280, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115, -1000, 2234, -1000, -1000, 109,
	-1000, -1000, 101, -1000, -1000, -1000, -75, -1000, -1000, -1000,
	-1000, -1000, -1000, -149, -1000, -1000, 629, 1279, 7863, -1000,
	1584, -1000, 3764, -1000, -1000, -1000, -1000, 5303, 9393, 9393,
	9393, 9393, -1000, -1000, 1855, 7863, 2019, 2016, -1000, -1000,
	-1000, -1000, 1009, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1635, 8883, -1000, 2015, 2007,
	2006, 2005, 1999, 1998, 1992, 1991, 1990, 1988, 1987, 1776,
	1847, 1984, 1629, 1627, 1978, 1970, 1969, 1611, 1776, 1776,
	1968, 1967, 1949, 1943, 1942, 1940, 1929, 1923, 1912, 1903,
	1898, 1897, 1896, 1895, 1889, 1885, 1884, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	30222, -1000, 1008, 784, -1000, 1883, 2164, 2241, 1801, 2308,
	2257, 2239, 2235, 2212, 1452, -1000, -1000, 29305, 29305, 402,
	402, 402, 402, 426, 402, 437, 434, 431, 402, -1000,
	-1000, -1000, -1000, -1000, -1000, 514, -1000, -1000, -1000, -1000,
	864, 29305, -1000, 1814, 1071, 2259, 360, 350, 233, -1000,
	1166, 1166, 1166, 1071, 272, 354, 2241, 2241, -86, -107,
	1071, 1071, -107, 1071, 97, -1000, -1000, -1000, 1166, 347,
	1166, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2228, 2225,
	404, 29305, 51, 29305, 404, 410, -1000, -164, -1000, -1000,
	603, -1000, 538, -1000, 1329, 339, 337, 871, 1174, -1000,
	1152, 29305, 29305, 29305, 1152, 1152, 15017, 14507, -1000, 29305,
	-1000, 2241, 1801, -1000, 1744, 2061, 1736, 1801, 404, 404,
	404, 404, 404, 404, 404, 404, 29305, 29305, 6833, 6833,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 313, 2170,
	248, 1879, -1000, 29305, 223, 2241, 2164, 2241, -1000, -1000,
	982, 1450, 1610, -1000, -1000, 267, 1068, -1000, 711, -1000,
	-1000, -1000, -1000, 29305, 224, -1000, -1000, 1599, 1873, -1000,
	365, 746, 885, -1000, 154, 30537, 23687, 1329, 23687, 29305,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -90, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 90, -1000, 7863, 7863, 7863, 7863, 7863, -1000,
	500, 8373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9393,
	9393, 9393, 9393, 9393, 9393, 9393, 9393, 9393, 9393, 9393,
	9393, 1851, 1265, 9393, 9393, 9393, 9393, 2061, 2262, 865,
	164, -1000, -1000, -1000, -1000, -1000, 1169, 1279, 7863, 7863,
	29305, -1000, 2681, 7863, 7863, 84, 7863, 2210, 7863, 3772,
	29305, 7863, -1000, 1732, 1731, -1000, -1000, 1312, 7863, 7863,
	-1000, -1000, 7863, 9393, 7863, -1000, -1000, -1000, 108, 2210,
	2210, 7863, 7863, 2210, 2210, 2210, 1136, 2210, 2210, 2210,
	2210, 2210, 2210, 2210, 2210, 29305, 2152, 71, -1000, -1000,
	-1000, 1778, -1000, 1810, 1810, 1810, 1810, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1843, 1870, -1000, -1000,
	1809, 1809, 1809, 1778, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1829,
	1829, 1835, 1829, 29305, 2241, -293, 6323, -1000, -297, 2164,
	7863, -1000, -1000, 7863, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1609, 2202, -1000, 1868, 977, 29305, 1176, 29305,
	23687, 1329, 29305, 29305, 402, 402, 402, 29305, 410, -1000,
	29305, 864, 2201, 29305, 2319, 9393, 9393, 26755, 1166, 1071,
	-1000, 29305, -1000, -1000, -1000, 1166, 29305, 1166, 2319, 1166,
	-1000, -1000, -1000, 1071, 1071, -1000, -1000, -1000, -1000, 1166,
	1166, -1000, -1000, -97, 2319, 2319, -83, -1000, 29305, 29305,
	402, 29305, -1000, 29305, -1000, -1000, 29305, 2823, 29305, 29305,
	2223, -1000, 23687, 21647, -1000, -129, 580, 551, 549, -1000,
	-1000, 364, 412, 13997, 316, 23687, 4792, -1000, -1000, 1152,
	1152, 1152, 4792, 4792, 949, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 820, -1000, 70, 2164, -1000, -1000, -1000, -1000,
	-1000, 29305, 29305, 23687, 1329, 29305, 29305, 29305, 29305, -1000,
	1867, 821, -1000, -1000, 11444, 975, 821, 1608, 29305, 1604,
	2064, 2121, -1000, 1861, 12976, 29305, -1000, -1000, -294, -1000,
	12465, 29305, 2164, -1000, 2164, 29305, -1000, 2251, -1000, 267,
	176, -1000, -1000, -1000, -1000, -1000, -1000, 973, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 819, -1000, 29305,
	-1000, -1000, 154, 23687, 24707, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 128, -1000, -1000, 146, -1000, 418, 30, 1055,
	-1000, -1000, 56, 131, 463, 1279, -1000, 1188, 1188, 1232,
	-1000, 444, -1000, -1000, -1000, -1000, 1855, -1000, -1000, -1000,
	1121, 2899, -1000, 1161, 1161, 1029, 1029, 1029, 1029, 1029,
	1303, 1303, -1000, -1000, -1000, 5303, 1851, 9393, 9393, 9393,
	9393, 388, 388, 1712, 3098, -1000, 7863, 1243, -1000, 7863,
	1472, 857, 971, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1728, 629, 1724, 1561, 2336, 1723, 7863,
	-1000, -1000, 1050, 1466, 7353, -1000, -1000, -1000, 1721, 969,
	1710, -1000, -1000, -1000, 1709, 1048, 706, 1706, 1319, 1702,
	816, 7863, 7863, 1039, 1037, 7863, 7863, 7863, 7863, 1699,
	7863, 7863, 7863, 7863, 7863, 7863, 7863, 7863, -1000, 7863,
	68, -1000, -1000, -1000, -1000, 1449, -1000, 1446, -1000, -1000,
	-1000, 1602, 1602, -1000, 1444, -1000, -1000, -1000, -1000, 1439,
	-1000, -1000, 1438, -1000, -1000, -1000, -1000, 1030, -1000, 1279,
	-1000, 1601, -1000, 839, 791, -1000, 1490, -1000, -1000, 29305,
	10424, 29305, 1814, 2174, 63, -1000, 941, -1000, 30, 653,
	2047, 2145, 29305, 29305, 29305, 2199, 26245, -1000, 1850, 1020,
	-1000, -1000, 7863, -1000, -1000, 2040, 29305, 29305, 2319, -1000,
	-1000, -1000, 29305, -1000, -1000, -1000, 29305, 2319, 2319, 1071,
	1166, 1166, -1000, -1000, 1166, -1000, 955, -1000, 29305, -1000,
	-1000, 1814, -1000, 10934, 635, 30455, -1000, 1092, 1092, 757,
	1092, 1092, 1092, 1092, 282, 268, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1849, -1000, 59, 2220, 137, 941, 2353, 733, -1000, -1000,
	-1000, -1000, 16547, 16547, 13487, 16547, -1000, 1102, -1000, -1000,
	561, 533, 593, -1000, -1000, 417, -1000, -1000, 653, -1000,
	-1000, -1000, 1848, 1154, -1000, -1000, 1847, -1000, 4792, 4792,
	4792, -1000, -1000, 17567, 29305, -1000, -160, -1000, -142, -1000,
	759, -1000, -1000, 778, 653, 2063, 759, 759, -1000, 10424,
	2319, 6833, -1000, 21647, -1000, -1000, 25727, -1000, 25217, 2319,
	-301, 935, -118, -1000, 2161, -294, 29305, 29305, 1014, 136,
	-1000, 1006, -1000, 646, -1000, 1844, -1000, 1002, 2118, 730,
	-1000, 1150, -1000, -1000, 952, -5, -1000, -1000, 29305, 1599,
	985, 24707, 729, -1000, 416, 943, 926, -1000, 23687, 102,
	23687, -1000, 23687, -1000, -1000, 235, -1000, 29305, 2156, -1000,
	-1000, -1000, 1555, -325, -1000, -1000, -1000, -1000, -1000, 983,
	-1000, 388, 388, 1712, 2427, -1000, 9393, -1000, 9393, 2249,
	1164, -1000, 7863, 1239, 2774, 1053, 17057, 29305, -1000, -1000,
	7863, 7863, -1000, 2233, -1000, -1000, 7863, 7863, 1371, -1000,
	29305, -1000, -1000, -1000, -1000, 17057, -1000, 9393, -1000, 7863,
	745, 2218, -49, -49, 2211, 2184, 2155, 978, -49, 2136,
	2123, 2081, 2017, 1985, 1955, 1947, 1938, 1279, -1000, -1000,
	1697, 1690, 964, -1000, 963, 1689, 961, 959, 6323, -1000,
	-118, 7863, 7863, 7863, 2126, -1000, -1000, 83, 1682, 756,
	-1000, -1000, -1000, 30290, 1810, 1810, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1843, -1000, -1000, 1809, 1809,
	1809, 1778, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1829, 1829, 1835, 1829, -1000, 2190, -1000, -70, 1092,
	361, 23687, 328, -1000, 2062, 165, -1000, 2145, -1000, 480,
	1828, 1820, 1818, 188, 30290, 29305, 806, -1000, 925, 2582,
	-1000, 29305, 1279, -1000, 1329, -1000, 1071, -1000, -1000, 2319,
	904, -1000, -1000, 2319, 1071, 1071, 1166, 29305, -1000, 2188,
	-1000, -1000, -1000, 30290, 683, -1000, 29305, 1275, 546, 402,
	546, 1273, 1816, -1000, -1000, -1000, 29305, 29305, 29305, 1270,
	1268, 2939, -1000, 1436, -1000, 1431, 1092, 1092, 1430, 1596,
	1594, 1593, 1092, 1092, 1421, 1591, 24197, 1419, 1415, 1414,
	1377, 1590, 548, 1374, 1372, 1370, 29305, 1815, 1502, -70,
	1092, 134, 1118, 361, 29305, 21647, 21647, 21647, 21647, -1000,
	2094, 2088, -1000, 2080, 2079, 2089, 29305, 21647, 1814, -1000,
	24197, -1000, -1000, -1000, 2061, 958, 2683, 570, 7863, -1000,
	-1000, -1000, 530, 23687, 1577, 316, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 29305, 29305, 1681, 2317, -1000, 734,
	-1000, -1000, 923, -1000, 2317, -1000, 1404, 1576, -34, -16,
	1256, 646, 730, 948, -1000, 136, 29305, 2114, 1811, -1000,
	29305, -294, 6323, 239, -294, 29305, 6323, 29305, 1401, -1000,
	-1000, -1000, 2329, 23687, 1329, 1047, 23177, -1000, 107, -1000,
	123, 345, 1574, -1000, 430, 77, -1000, 1112, 1555, -1000,
	-1000, -1000, 9393, -1000, -1000, -1000, -1000, 1279, 7863, 1678,
	-1000, 511, 511, 1677, -1000, 1810, 1810, -1000, 1778, 1809,
	1778, 511, 511, 1676, -1000, 1393, 1934, -1000, 1920, 1906,
	7863, -1000, 1675, 2700, 847, -178, -49, -1000, 1805, -1000,
	-49, -49, -49, -49, -1000, -49, -49, -49, -49, -49,
	-49, -49, -49, -1000, -1000, -1000, 1571, -1000, -1000, -1000,
	1394, -1000, 1391, -1000, -34, 1279, 1279, -1000, -1000, 2111,
	1568, 447, 10424, 2142, 231, 1456, -1000, -1000, 22667, 338,
	-1000, -1000, -1000, 436, 127, 1387, 326, -1000, 29305, 29305,
	-1000, -1000, -1000, -1000, -1000, 1092, 1092, 1092, 10934, 10934,
	10934, 177, 1139, -1000, 381, 686, 910, 21647, 29305, -1000,
	21137, 1672, -1000, 653, 2319, -1000, 29305, -1000, 2319, 2319,
	1071, -1000, 231, 2393, -1000, -1000, 29305, 29305, -1000, 29305,
	29305, 402, 7863, -1000, -1000, -1000, 29305, -1000, -1000, -1000,
	-1000, 17057, 17057, -1000, -1000, -1000, -1000, 1563, 1558, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 289, 29305, 945, -1000, 1098, 1456, 22667, 1097, 1557,
	338, 788, -1000, 1095, 2052, 2059, 2052, -1000, -1000, -1000,
	-1000, 2087, -1000, 2083, -1000, -1000, 788, -1000, -1000, -1000,
	-1000, -1000, 570, -1000, 2245, 546, 546, 546, 1666, -1000,
	729, 1665, -1000, -1000, -1000, -1000, -1000, 2315, 2303, 22157,
	2315, -1000, -301, -299, -15, 2300, 2298, 2354, 231, 29305,
	238, -1000, -294, 29305, -1000, -1000, 1664, 681, -294, -1000,
	646, -1000, -1000, -1000, -1000, 1329, -1000, 121, -1000, -1000,
	-1000, -1000, -1000, -1000, 9, -1000, 29305, -1000, 1555, 1538,
	76, -1000, 1279, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7863, -1000,
	-1000, -1000, 1662, -1000, -1000, 7863, 1661, 1528, -1000, 380,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1658, 1657, -299, -1000, -1000, -1000, 30290,
	-1000, 1235, -1000, -1000, 1519, 19, -1000, -1000, -1000, 1514,
	1513, 1381, -1000, -1000, 1342, 713, 47, -1000, -1000, -1000,
	-1000, -1000, -1000, 1804, 17057, 16037, 1506, 1655, 655, -1000,
	1648, 1647, 383, 1227, 1193, -1000, 1379, 16547, 21647, 21137,
	763, -1000, 900, -1000, -1000, -1000, 2319, -1000, -1000, 2319,
	-1000, -1000, 2393, -1000, -1000, 1245, 9393, -1000, -1000, 1505,
	16037, 531, 560, 1803, -1000, 257, 2352, -1000, 1246, 1244,
	-1000, 29305, -1000, 1796, 1936, 216, 1791, -1000, 1789, 1788,
	29305, 1628, -1000, -1000, -1000, -1000, -1000, -1000, 342, 940,
	-1000, 1502, 1501, -1000, 19, 1500, -1000, -1000, 2313, 29305,
	6323, -1000, -1000, 7863, 1787, -1000, 7863, -1000, -1000, -1000,
	-1000, -1000, 1786, 2131, -1000, -1000, -1000, -1000, -1000, -1000,
	7863, 7863, -1000, -1000, -1000, -301, 1497, -1000, -1000, 2296,
	1496, 1316, 29305, -1000, -1000, -294, -1000, 646, 937, -1000,
	646, 653, -1000, -1000, 136, -1000, -1000, -1000, 1618, -1000,
	1567, -49, -1000, 2313, -1000, 2295, -1000, -1000, -301, -225,
	-1000, -1000, -1000, -1000, 220, -1000, -1000, 144, -1000, -1000,
	1334, 366, -1000, 20117, -1000, -1000, -1000, -1000, -1000, 2939,
	10934, 90, 2939, 594, 1191, -1000, 1343, -1000, 1341, -1000,
	2319, 763, 900, -1000, -1000, 960, -1000, -1000, -1000, -1000,
	1712, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1339, 1784, -122, -1000, -1000, 1782, 20117, 212,
	212, 20117, 20117, 20117, 1779, 439, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2241, -1000, -1000, 1279, 29305, 1279, 20627,
	-1000, 2293, 2287, 1279, 629, -304, -1000, 1488, -24, -1000,
	-1000, 647, 646, -1000, -83, -1000, -1000, -1000, 74, 7863,
	-304, 29305, 341, 1481, -1000, -1000, 141, -1000, -1000, 929,
	-1000, 1778, 7863, 379, 30455, -1000, -1000, -83, 379, 348,
	173, -1000, 1332, -1000, -1000, 2313, -1000, 1572, 7863, 1776,
	-209, 20117, 918, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	916, 912, 911, 20117, -1000, -1000, -1000, 236, -1000, 908,
	886, -1000, -1000, -1000, -1000, -1000, 1775, -1000, 2286, -306,
	-42, -20, 1566, -1000, 3262, -1000, -1000, -1000, 629, -1000,
	2186, -1000, -1000, 8, -1000, -1000, -1000, 20117, 2169, 1420,
	213, 2279, -1000, 213, -1000, 182, -1000, 1185, -1000, 1322,
	-1000, 2241, -1000, 1260, -1000, 2057, -1000, 62, 879, -1000,
	-1000, -1000, -1000, 868, -1000, -1000, -1000, 19607, 29305, 1316,
	-1000, 1480, 409, -30, -20, -1000, 2276, -25, 2274, 2271,
	-1000, -1000, 4282, -295, -45, 255, 1479, -1000, 162, -1000,
	-1000, 2169, -1000, 2270, 279, -1000, -1000, -1000, 1321, -1000,
	-1000, 439, -1000, 2056, 1941, 2324, -1000, -1000, -1000, -1000,
	162, 162, 162, 162, 96, -1000, -1000, 855, -1000, -1000,
	-1000, 1774, 1311, -15, -32, 2265, -1000, 1316, 2260, 1316,
	1316, 1228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1092,
	1463, 166, -1000, -1000, -1000, 19097, 222, 261, 242, -1000,
	368, -1000, -1000, -1000, -1000, 2348, -1000, 2344, 529, 529,
	-1000, -1000, 29305, 2208, 15527, -37, -1000, -1000, -1000, 1462,
	-1000, 1316, -1000, -1000, 4282, 1308, -1000, 29305, -1000, 29305,
	226, 1306, 9393, 1760, 9393, 1758, 227, 1757, -1000, -1000,
	-1000, 1310, 258, -1000, -1000, -1000, 29305, -1000, 853, -1000,
	-1000, -1000, 893, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	849, 1751, 2252, -1000, 2372, 29305, 1976, 29305, 1749, 1091,
	9393, -1000, -1000, -1000, 622, -1000, 1085, -1000, 18587, 29305,
	-1000, -1000, 373, 245, -1000, 826, -1000, 799, 18077, 1305,
	1422, 29305, 5813, -1000, 876, 712, -1000, 29305, 221, -1000,
	-1000, -1000, 707, -1000, -1000, -1000, -1000, 1279, 29305, -1000,
	373, 2108, -1000, 1287, -1000, -1000, -1000, 30344, 493, -1000,
	-1000, 30344, 225, -1000, 367, 1605, -1000, -1000, 702, -1000,
	29305, 543, 7863, -1000, 225, 2939, -1000, 7863, 684, -1000,
	2939, 682, -1000, -1000,
}

var yyPgo = [...]int{
	0, 122, 2838, 201, 142, 138, 200, 2836, 2835, 2183,
	2176, 2834, 2833, 2832, 2831, 2830, 2814, 2812, 2808, 2807,
	2806, 2805, 2803, 2802, 2801, 2800, 2799, 2798, 2796, 2795,
	2794, 2793, 2792, 199, 2790, 2785, 2784, 2783, 2782, 2781,
	2780, 2779, 2777, 2776, 2771, 2770, 2769, 2767, 2766, 2765,
	2764, 2763, 2762, 2760, 2759, 2758, 2757, 2756, 2755, 133,
	2754, 2170, 2753, 2751, 2750, 2749, 2748, 2747, 2735, 179,
	2733, 2730, 2725, 2724, 2718, 2716, 2715, 2714, 2712, 2711,
	2710, 2708, 2706, 2705, 2704, 2702, 2701, 149, 2700, 2698,
	126, 2697, 2696, 2695, 2693, 196, 182, 52, 2692, 35,
	128, 172, 218, 1432, 203, 202, 158, 131, 66, 2691,
	2199, 2687, 162, 183, 113, 25, 2686, 137, 2684, 109,
	42, 30, 198, 115, 41, 110, 87, 2678, 174, 54,
	70, 75, 2677, 2676, 210, 155, 2675, 92, 2672, 2668,
	2667, 2666, 166, 88, 2665, 51, 2664, 120, 72, 85,
	81, 2660, 2659, 2657, 97, 2655, 2654, 2653, 2652, 140,
	2651, 2650, 116, 64, 2648, 2647, 2646, 48, 187, 89,
	2642, 60, 2641, 2639, 2637, 2634, 53, 2633, 2632, 14,
	21, 23, 2631, 20, 2630, 2629, 1, 2627, 176, 44,
	71, 108, 2625, 397, 2624, 2621, 2616, 121, 2611, 420,
	2609, 2604, 2602, 2601, 24, 2600, 165, 36, 2598, 69,
	94, 135, 171, 164, 2597, 2591, 2590, 235, 73, 223,
	0, 2589, 106, 2588, 2587, 2585, 206, 2584, 193, 161,
	188, 230, 214, 145, 2577, 2574, 63, 2572, 118, 65,
	100, 13, 2571, 178, 2570, 332, 157, 2569, 168, 2568,
	125, 3, 102, 2565, 2563, 34, 232, 2562, 2561, 2560,
	146, 2559, 2558, 90, 147, 2556, 2543, 2540, 31, 2539,
	32, 27, 2538, 76, 2537, 209, 2536, 186, 99, 152,
	148, 130, 175, 185, 58, 56, 2535, 1072, 103, 68,
	22, 2533, 181, 2531, 207, 194, 2526, 208, 2525, 197,
	361, 170, 2519, 154, 15, 33, 29, 2518, 9, 2516,
	104, 2515, 2514, 11, 2512, 18, 2511, 2507, 2506, 2505,
	6, 2503, 2502, 2501, 2, 4, 2487, 5, 184, 2486,
	2485, 2484, 2481, 37, 98, 2480, 86, 180, 2479, 2476,
	67, 2474, 2473, 2472, 527, 2471, 2469, 2467, 2466, 2465,
	2462, 2461, 2460, 2459, 2458, 55, 43, 2455, 2454, 2451,
	2450, 59, 105, 2447, 2446, 2445, 2443, 26, 151, 2442,
	10, 2439, 19, 17, 28, 2438, 96, 2436, 12, 153,
	2435, 2434, 16, 2431, 2430, 8, 7, 2429, 2428, 82,
	2427, 62, 38, 119, 77, 2426, 61, 160, 101, 2425,
	2423, 191, 190, 167, 2422, 123, 192, 215, 2421, 173,
	2420, 2418, 2417, 2415, 2411, 2405, 1165, 2401, 2400, 189,
	49, 83, 80, 2397, 2392, 2391, 57, 114, 84, 78,
	163, 2387, 159, 2386, 2385, 74, 2384, 2381, 2379, 2377,
	2373, 156, 2370, 2369, 2368, 195, 136, 2366,
}

//line mysql_sql.y:8805
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 440, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 93, 438, 438, 438, 439, 439,
	91, 91, 91, 80, 92, 388, 388, 387, 387, 386,
	386, 341, 341, 385, 385, 385, 384, 384, 384, 383,
	383, 382, 382, 381, 381, 379, 379, 380, 378, 377,
	377, 377, 375, 375, 375, 371, 371, 373, 372, 372,
	374, 366, 366, 369, 369, 367, 367, 367, 367, 370,
	365, 365, 365, 364, 364, 79, 79, 79, 289, 289,
	78, 78, 303, 303, 303, 303, 303, 301, 301, 301,
	301, 301, 301, 300, 300, 299, 299, 304, 304, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 70, 70, 70, 70, 73, 73, 73, 74, 298,
	298, 298, 71, 72, 72, 288, 288, 293, 293, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 297, 297, 297, 295, 295, 294, 294, 296, 296,
	64, 64, 64, 67, 66, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 65, 65, 65, 65, 65, 65,
	60, 60, 60, 60, 60, 59, 59, 61, 61, 285,
	285, 284, 75, 75, 76, 442, 442, 441, 443, 443,
	443, 443, 77, 83, 83, 83, 83, 83, 83, 83,
	82, 82, 85, 85, 84, 86, 69, 69, 69, 69,
	69, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	412, 412, 412, 414, 414, 224, 225, 444, 227, 223,
	223, 223, 408, 408, 409, 410, 411, 411, 411, 81,
	7, 7, 7, 7, 7, 58, 63, 184, 184, 184,
	185, 185, 185, 185, 185, 56, 62, 62, 425, 425,
	57, 432, 432, 344, 344, 238, 238, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 348, 349, 234, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 40, 39, 39,
	39, 274, 274, 38, 445, 445, 213, 213, 47, 48,
	49, 50, 51, 52, 37, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 55, 55, 360, 360, 447, 447,
	447, 53, 54, 343, 343, 343, 45, 44, 43, 42,
	42, 36, 36, 35, 35, 41, 231, 231, 231, 233,
	233, 229, 446, 446, 315, 315, 232, 232, 34, 34,
	34, 230, 230, 212, 228, 228, 228, 8, 8, 6,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	18, 19, 21, 282, 282, 279, 20, 14, 13, 16,
	12, 15, 17, 5, 5, 5, 5, 9, 9, 10,
	107, 107, 149, 149, 420, 420, 416, 416, 417, 417,
	417, 418, 418, 419, 419, 87, 354, 354, 354, 354,
	354, 354, 4, 129, 129, 130, 130, 353, 353, 353,
	353, 353, 353, 353, 286, 286, 397, 397, 397, 398,
	128, 128, 123, 123, 355, 355, 252, 399, 399, 363,
	363, 362, 362, 361, 361, 126, 126, 127, 127, 110,
	110, 96, 96, 368, 368, 368, 368, 376, 376, 340,
	340, 176, 176, 207, 207, 208, 208, 100, 100, 101,
	101, 101, 101, 101, 101, 405, 405, 407, 407, 406,
	125, 125, 121, 121, 122, 122, 122, 120, 120, 119,
	118, 118, 117, 115, 115, 115, 116, 116, 116, 103,
	103, 103, 102, 102, 102, 102, 102, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 104,
	104, 413, 413, 413, 345, 345, 345, 351, 351, 190,
	190, 191, 191, 189, 189, 105, 105, 106, 106, 106,
	106, 188, 188, 187, 108, 108, 114, 113, 113, 109,
	109, 109, 109, 198, 198, 197, 197, 197, 197, 90,
	94, 94, 95, 133, 133, 196, 195, 195, 195, 132,
	132, 131, 131, 124, 124, 112, 112, 112, 112, 194,
	111, 192, 437, 437, 436, 436, 435, 433, 433, 433,
	434, 434, 434, 434, 390, 390, 390, 390, 390, 218,
	218, 218, 222, 222, 221, 221, 221, 221, 221, 226,
	3, 3, 3, 3, 25, 25, 25, 25, 25, 25,
	25, 31, 141, 142, 30, 134, 134, 135, 135, 136,
	136, 137, 138, 138, 138, 140, 139, 29, 22, 421,
	424, 422, 422, 426, 426, 426, 427, 427, 427, 428,
	428, 23, 423, 429, 429, 429, 283, 283, 280, 281,
	281, 278, 277, 277, 277, 431, 431, 430, 430, 430,
	219, 219, 24, 273, 273, 275, 276, 276, 276, 267,
	267, 267, 267, 28, 271, 271, 272, 272, 272, 272,
	272, 268, 268, 270, 270, 266, 266, 266, 266, 266,
	27, 265, 265, 263, 263, 261, 261, 262, 262, 260,
	260, 260, 264, 264, 26, 26, 26, 98, 97, 97,
	97, 210, 210, 209, 209, 99, 32, 161, 161, 329,
	329, 329, 329, 329, 347, 347, 347, 330, 330, 330,
	331, 331, 331, 332, 332, 332, 332, 332, 346, 346,
	305, 305, 306, 306, 306, 309, 309, 321, 321, 322,
	322, 320, 320, 327, 327, 326, 326, 325, 325, 324,
	324, 323, 323, 323, 323, 318, 318, 317, 317, 307,
	307, 307, 307, 307, 308, 308, 308, 316, 316, 319,
	319, 167, 167, 168, 168, 168, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 395, 395, 396, 170, 170,
	170, 174, 174, 174, 174, 174, 174, 169, 169, 171,
	171, 150, 150, 148, 148, 143, 143, 144, 144, 145,
	145, 146, 146, 147, 147, 147, 147, 147, 147, 291,
	291, 393, 393, 394, 394, 389, 389, 389, 392, 392,
	392, 392, 392, 391, 391, 151, 205, 205, 205, 220,
	220, 220, 220, 204, 204, 204, 166, 166, 165, 165,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 290, 290, 235, 235, 236,
	236, 183, 182, 182, 182, 182, 182, 180, 181, 179,
	179, 179, 179, 179, 178, 178, 177, 177, 177, 269,
	269, 175, 175, 173, 173, 173, 172, 172, 172, 328,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 244, 244, 249, 249, 404, 404, 403,
	152, 152, 152, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 162, 162, 162, 313, 313, 313, 313, 313,
	314, 314, 314, 311, 311, 312, 312, 253, 254, 254,
	352, 352, 310, 310, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 359, 359, 359, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 415, 415, 415,
	400, 400, 400, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 202, 202, 202, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 255, 255,
	256, 256, 356, 356, 356, 356, 356, 356, 357, 357,
	358, 358, 358, 358, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 242, 199, 199, 199, 257, 250, 250,
	251, 251, 245, 245, 245, 245, 245, 245, 245, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 246, 246, 248, 248, 259, 259, 259, 258, 258,
	258, 258, 258, 258, 258, 164, 164, 164, 164, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	154, 154, 154, 154, 158, 158, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	159, 159, 159, 159, 157, 157, 157, 157, 157, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 88, 89, 89, 156, 206,
	206, 333, 333, 336, 336, 334, 334, 335, 337, 337,
	337, 338, 338, 338, 339, 339, 339, 342, 342, 211,
	211, 211, 217, 217, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 2, 3, 4, 7, 2, 3, 3, 4, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 7, 4, 2, 2, 1,
	2, 2, 2, 3, 2, 7, 7, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 4, 4, 4, 1, 1, 1, 3, 2,
	3, 1, 1, 1, 6, 8, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 3, 0, 2, 2, 0,
	2, 2, 1, 1, 1, 1, 0, 1, 4, 4,
	5, 1, 3, 1, 1, 3, 5, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 6, 1, 1, 2, 2, 11, 8, 9,
	1, 3, 2, 4, 0, 2, 0, 1, 1, 1,
	1, 0, 1, 0, 1, 4, 2, 1, 5, 4,
	4, 2, 5, 0, 4, 1, 3, 3, 1, 5,
	6, 5, 5, 3, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 12, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 4, 1, 1, 7, 7, 1,
	4, 1, 1, 3, 4, 3, 0, 1, 1, 0,
	2, 7, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 1, 0,
	1, 1, 1, 11, 0, 2, 3, 2, 3, 1,
	1, 1, 3, 3, 4, 0, 2, 2, 2, 2,
	5, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 5, 6, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 1,
	1, 1, 1, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 6, 8, 6, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -440, -2, -1, -3, -91, -4, -87, -5, -6,
	-8, -68, -82, -84, -86, -85, -33, -7, -81, -59,
	-60, -64, -70, -75, -78, -79, -80, -92, -88, -89,
	-90, -100, -93, -25, -24, -23, -22, 402, 12, 447,
	-9, -10, -405, -11, 234, -223, -224, -225, -227, -444,
	-34, -35, -36, -42, -43, -44, -45, -53, -54, -55,
	-37, -38, -39, -40, -47, -48, -49, -50, -51, -52,
	-41, -57, -56, -62, -58, -63, 209, -61, 61, -65,
	-66, -67, -71, -72, -73, -74, -76, -77, 333, 339,
	392, 530, 531, 46, -101, -103, 532, -26, -27, -28,
	-29, -30, -31, -32, 205, 14, 480, -12, -15, -13,
	-16, -14, -20, -21, -19, -17, -18, 229, 228, 37,
	292, 293, 294, 337, 227, 206, 13, 137, 138, 140,
	141, 30, 41, 315, -102, 67, 207, -104, 10, 534,
	440, 533, -110, 38, -148, -220, 70, 78, -214, -216,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 450, 520, 313, 314,
	477, 246, 270, 363, 273, 280, 137, 156, 150, 178,
	170, 145, 250, 285, 251, 77, 140, 433, 88, 413,
	389, 143, 265, 267, 269, 272, 252, 166, 161, 264,
	248, 530, 159, 253, 39, 254, 183, 255, 256, 482,
	409, 312, 415, 277, 387, 160, 410, 268, 412, 185,
	189, 425, 339, 154, 155, 417, 427, 182, 226, 42,
	479, 238, 428, 187, 181, 177, 436, 281, 279, 180,
	153, 176, 249, 50, 191, 190, 192, 383, 384, 385,
	386, 257, 258, 327, 424, 173, 162, 317, 146, 22,
	431, 233, 414, 340, 259, 274, 282, 186, 188, 240,
	245, 481, 391, 244, 278, 429, 158, 237, 266, 232,
	432, 147, 333, 342, 260, 141, 271, 426, 435, 49,
	355, 152, 144, 223, 138, 242, 247, 11, 261, 262,
	263, 284, 283, 275, 174, 239, 179, 164, 151, 175,
	139, 241, 434, 356, 528, 315, 372, 172, 169, 243,
	216, 430, 416, 142, 376, 357, 167, 286, 524, 525,
	526, 328, 311, 287, 288, 165, 230, 408, 289, 291,
	382, 304, 358, 390, 364, 359, 198, 295, 419, 184,
	527, 296, 297, 298, -110, -61, -10, -9, -102, -103,
	-148, 213, -228, 23, 387, -69, 388, 209, 67, -220,
	-5, -4, -87, -59, -100, -226, -220, 292, 292, -226,
	213, -220, 244, 371, -344, 219, -300, -273, 245, -299,
	-275, -302, -276, 31, 205, 207, 206, 241, 14, 337,
	215, 12, 10, 338, 227, 24, 25, 27, 13, 339,
	341, 28, 342, 345, 346, 347, 41, 350, 351, 234,
	70, 78, 73, 252, -142, -220, -251, -245, 95, 235,
	-247, -240, -241, -243, -385, -379, -239, 67, 121, 122,
	129, 96, -242, -328, 35, 98, 487, 448, -200, -201,
	-202, -203, -220, -380, -378, 73, 79, 82, 85, 86,
	84, 83, 163, 81, 74, 133, 134, -103, 70, -400,
	495, -215, 516, 520, 515, 46, -350, -358, 212, -356,
	132, 168, 230, 164, 12, 127, 382, 165, 492, 512,
	450, 496, 519, 489, 490, 484, 485, 486, 488, 497,
	499, 511, -359, 507, 517, 518, 505, 72, 71, 510,
	509, 498, 493, 494, 500, 483, 491, 501, 502, 508,
	513, 514, 321, 88, 322, 323, 440, 316, 324, 219,
	387, 55, 325, 326, 327, 328, 329, 447, 330, 56,
	331, 320, 234, 372, 332, 167, 184, 452, 451, 453,
	444, 441, 439, 442, 443, 445, 446, 503, 504, 506,
	-296, -294, -220, -94, -95, 522, -119, -120, -193, 19,
	6, 7, 8, 9, -438, 389, 481, 295, 334, 216,
	313, 372, 244, -267, -265, -346, 289, 285, 214, 224,
	223, 89, 440, 212, 348, -416, -417, 202, 203, 204,
	-407, 473, -406, -220, 323, 26, 213, 334, 419, 420,
	421, 422, 423, -46, -360, -343, 416, 415, -232, 414,
	407, 418, 409, 314, 205, 474, -211, 358, 390, 240,
	437, 438, 335, 391, 425, 426, 410, 88, 171, 168,
	216, 213, 313, 440, 372, -416, 142, 139, -287, 142,
	94, 147, 146, -287, 244, 371, 40, -293, 382, -292,
	-294, 425, 426, 436, 71, 72, 424, -211, 88, 408,
	408, -120, -193, -119, -101, -103, -90, -405, 214, 313,
	372, 244, 215, 213, 216, 440, 292, 334, -345, -413,
	31, -351, 199, 200, 201, 32, 33, -1, -220, 73,
	-126, 236, -148, 135, -126, -120, -119, -120, -148, -204,
	-220, 389, 104, -69, -69, 388, -408, -409, -410, -412,
	209, 388, 387, 135, 15, -226, -226, 65, -148, -275,
	244, -300, -273, 35, 64, 136, 217, 136, 64, 67,
	335, 313, 372, 336, 214, 440, 213, 348, 216, 244,
	349, 313, 372, 214, 213, 216, 440, 244, 313, 213,
	216, 372, 244, 349, 407, 408, 216, 26, 340, 343,
	344, 408, -364, 436, 136, 94, 91, 92, 93, -245,
	111, -258, 104, 105, 106, 107, 108, 109, 110, 118,
	117, 128, 121, 122, 123, 124, 125, 126, 127, 119,
	120, 114, 95, 112, 116, 113, 97, -103, -245, -251,
	46, -243, -243, -243, -243, -328, -249, -245, 67, 67,
	135, 73, -245, 67, 67, 67, 67, 67, 67, 67,
	67, 67, -357, 67, 67, -255, -256, 67, 67, 67,
	73, 73, 67, 67, 67, 73, -256, -256, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 136, -154, -158, -155, -157,
	-156, -160, -159, 168, 169, 132, 172, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 30, 184, 230,
	164, 165, 166, 167, 185, 150, 170, 478, 193, 151,
	194, 152, 195, 153, 196, 154, 155, 197, 156, 159,
	160, 161, 158, 135, -120, 136, 67, -96, 38, -122,
	21, -104, -103, 20, 31, 32, 31, 32, 31, 32,
	31, 32, 79, -141, -220, -134, -220, -263, 219, -263,
	-263, -263, 215, -263, 213, 213, 213, -263, -418, 149,
	136, -407, -125, 67, -231, 112, 116, 23, 242, 242,
	279, -445, -446, 15, 114, -229, -446, -229, -231, -447,
	215, 417, 42, 243, 242, -121, -122, -121, 411, 408,
	-315, 412, 413, -232, -231, -231, -232, -231, 213, 216,
	440, -445, 242, -445, 30, 30, -344, -148, -344, 474,
	-212, -220, -344, -419, 218, 429, 480, 145, 146, 147,
	-275, 244, 244, 136, 104, 23, -295, 104, 115, -294,
	-294, -294, -295, -295, -169, 40, -219, 132, -220, 73,
	-169, 40, -442, -441, -148, -121, -104, -103, 68, 68,
	68, -344, -344, -344, -344, -344, -344, -344, -344, -226,
	-134, -105, -106, 123, -245, -220, -105, 38, 408, 38,
	-353, -129, -100, 314, 67, 67, -220, -354, 46, -100,
	67, 30, -121, -96, -122, 135, 79, 73, -69, 68,
	136, -411, 85, 86, -414, 182, 174, -220, -83, 73,
	-3, -4, -5, -6, -33, -59, -100, -381, -379, 67,
	31, 381, 64, 15, -301, 213, 440, 334, 240, 216,
	313, -299, -282, -279, -277, -219, -275, -278, -277, -304,
	-204, 408, -97, 393, 291, -245, -245, -245, -245, -245,
	84, 95, 311, 85, 86, -240, -259, 31, 287, 288,
	-241, -241, -241, -241, -241, -241, -241, -241, -241, -241,
	-241, -241, -248, -257, -328, 67, 114, 112, 116, 113,
	97, -243, -243, -241, -241, 68, 136, -404, -403, 99,
	-245, -245, -220, -401, -402, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 325, 320, 326, 324,
	316, 332, 327, 328, 167, 471, 472, 465, 466, 467,
	468, 469, 470, -250, -251, -250, -245, -401, -250, -199,
	32, 31, -251, -245, -415, 309, 308, 310, -123, -220,
	-250, 68, 68, 68, 79, -251, -251, -250, -241, -250,
	-402, -199, -199, -251, -251, -199, -199, -199, -199, 123,
	-199, -199, -199, -199, -199, -199, -199, -199, -294, 40,
	-339, 356, 355, -333, -335, 67, -334, 67, -334, -334,
	-334, 67, 67, -336, 67, -336, -336, -333, -337, 67,
	-337, -338, 67, -337, -220, -121, -95, -362, -361, -245,
	40, 523, -96, -245, -118, -117, -245, -439, 73, 34,
	67, 135, -148, 95, -421, -220, -283, -280, -277, -273,
	-220, -220, -263, -263, -263, -148, -419, -406, 34, -124,
	-220, -189, 16, -243, -243, -277, 244, -445, -231, -213,
	-212, -233, -446, -228, -233, -189, -446, -231, -231, -233,
	-229, 408, -189, -189, -315, -230, -220, -230, -263, -213,
	-213, -148, -184, 210, 207, -168, -186, 353, 246, -264,
	250, 77, 251, 389, 252, 215, 254, 255, 256, 226,
	257, 258, 259, 382, 260, 261, 262, 263, 336, 6,
	299, 40, -421, -421, 30, -283, -113, -108, -112, -109,
	-114, -192, -194, -111, 67, -148, -103, -220, 430, 431,
	143, 146, 145, 31, 381, -298, 381, 31, -273, -292,
	-288, 73, 382, -278, -297, 64, 132, -361, -295, -295,
	-295, -297, -297, 131, 136, -443, 429, 430, 202, -96,
	-150, -148, -421, -282, -273, -220, -150, -150, -220, 67,
	-188, 136, -187, 15, -221, -220, 34, 73, 135, -188,
	73, -150, 73, -286, 64, 46, 30, 67, -128, 68,
	-123, -127, -220, -355, -252, -399, 522, -128, 68, -397,
	-398, -123, -96, -96, -220, 23, -69, -409, 135, 136,
	-124, -301, -281, -278, -303, 123, -220, -289, 136, 480,
	535, 71, 217, -431, -430, 373, 68, 136, -365, 218,
	447, 73, 536, 198, 84, 311, 85, 86, -328, -251,
	-248, -243, -243, -241, -241, -246, 231, -246, 94, -245,
	-244, -403, 101, -245, 34, 136, 65, 135, 68, 68,
	15, 15, 68, -245, 68, 68, 15, 15, -245, 68,
	135, 68, 68, 68, 68, 65, 68, 136, 68, 136,
	-251, -245, 68, 68, -245, -245, -245, -251, 68, -245,
	-245, -245, -245, -245, -245, -245, -245, -245, -342, 357,
	79, 79, -206, 73, -206, 79, 79, 79, 136, 68,
	73, 136, 22, 136, -115, 36, 37, -142, -135, -136,
	-137, -138, -154, -204, 169, 172, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 230, 164, 165,
	166, 167, 185, 150, 170, 151, 152, 153, 154, 155,
	156, 159, 160, 161, 158, -220, -125, 35, -424, 360,
	-432, 136, 40, -430, -266, 65, -261, -262, -260, -264,
	-148, -148, -148, -161, 34, 15, -107, -149, -220, 67,
	68, 136, -245, -274, 65, -220, -213, -189, -220, -148,
	-220, -189, -189, -231, -233, -233, -229, 135, -212, -125,
	-145, -151, -146, -204, -236, -147, 222, 220, 224, -394,
	89, 225, 276, 90, 215, -185, 215, 90, 221, 225,
	220, 136, -186, -217, 104, -217, -211, 131, -217, -217,
	-217, -217, 253, 253, -217, -217, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, -217, -217, -217, 67, -425,
	360, 30, 319, -432, 30, -195, -196, -197, -198, 53,
	57, 59, 54, 55, 56, 60, 30, 136, -218, -222,
	34, -220, 73, -218, -103, -108, -113, -218, 67, 144,
	147, 147, 146, 217, 67, 104, -297, -297, -297, 40,
	-219, -441, 436, 430, 136, 64, -135, -189, -106, -108,
	-220, 73, -220, 123, -189, -176, 525, 38, -368, 412,
	39, -355, -397, -130, -421, 68, 136, -129, 314, 68,
	136, 136, 67, 68, 46, 136, 104, 135, 389, -220,
	-379, 68, -303, 136, 217, 135, 135, -279, 339, -219,
	-281, 20, 480, -204, 38, -210, -209, 73, 536, 68,
	-246, -246, 94, -243, -240, 68, 102, -245, 100, -152,
	-154, 355, 356, -153, -159, 132, 168, 230, 167, 166,
	164, 355, 356, -169, -220, -245, -245, 68, -245, -245,
	15, -220, -169, -241, -245, -120, 68, -310, 403, -310,
	68, 68, 68, 68, -310, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 136, 68, 68, 68,
	136, 68, 136, -361, -368, -245, -245, -117, -116, 43,
	347, 68, 136, -154, 34, -427, 414, 362, -217, -238,
	-237, 315, 41, -348, 382, 368, 369, -280, 244, 64,
	303, 304, 305, 306, -260, -211, 131, 255, 67, 67,
	67, -329, 296, -154, -148, -107, -220, 15, 136, -420,
	135, -1, -220, -273, -231, -189, -446, -189, -231, -231,
	-233, -220, 34, -154, -147, -220, 90, -393, -394, -263,
	-393, 90, 67, -220, -220, -220, 90, 90, -186, 79,
	79, -217, -217, 79, 73, 73, 73, -217, -217, 79,
	73, -222, 79, 79, 79, 79, 40, 73, -174, 40,
	264, 268, 265, 266, 267, 79, 40, 79, 40, 79,
	40, -220, 67, -395, -396, 73, -427, -217, 319, 104,
	-238, -285, -284, -204, -112, -112, -112, -112, 53, 53,
	53, 58, 53, 58, 53, -197, -285, -114, -125, -222,
	68, -437, -436, -435, -433, 61, 218, 62, -250, 147,
	-281, -234, 73, -288, -148, -148, 68, -191, 17, 135,
	-191, 79, 73, -376, 399, 394, 396, 90, 68, 136,
	-129, -123, 46, 67, -220, -252, -363, -362, 46, -100,
	-355, -398, -361, -220, 79, 15, -278, -273, 123, 123,
	-220, 340, -289, 73, 361, 73, 213, 537, 136, 104,
	-210, -240, -245, 68, -162, 155, 154, -162, 68, -334,
	-334, -333, -336, -333, -162, -162, 68, 68, 23, 68,
	68, 68, -245, 68, 68, 136, -352, 449, -310, 67,
	-310, -310, -310, -310, -310, -310, -310, -310, -310, -310,
	-310, -310, 73, 79, 79, -376, 44, 45, 73, 211,
	-137, 40, -100, -428, 77, -422, 73, -220, -429, 77,
	363, 134, 317, 40, 364, 365, 379, 312, 79, 79,
	370, -423, -220, -148, -217, -217, -217, -143, -144, -145,
	-143, -143, -330, 298, 20, 79, 122, -126, 65, 135,
	-108, -149, -220, 123, 68, -189, -220, -189, -189, -231,
	-100, -166, -165, -163, 84, 95, 40, 353, -164, 77,
	131, 269, 247, 270, -183, -235, 64, 359, 220, 89,
	90, 341, -236, -389, -391, -220, -391, -220, -389, -389,
	-263, -245, -220, -169, -169, 73, 73, -170, 247, -150,
	68, 136, 104, -428, -422, 104, 73, -429, -189, 136,
	104, -132, -131, 64, 65, -133, 64, -131, 53, 53,
	-189, -435, -434, 23, -394, -394, -394, 68, 68, -190,
	18, 20, 123, -190, -176, -340, 524, -372, -374, 394,
	20, 20, 13, -100, -421, 46, -100, -355, -130, 68,
	-355, -273, -289, 382, -148, -209, 73, 537, -245, 68,
	-245, 68, 73, -254, -253, 236, 68, 68, -340, -139,
	-154, -239, 73, -426, 373, 73, 73, 79, 40, 79,
	134, 366, -349, 67, -169, -171, -219, 132, 73, 68,
	136, 68, 68, -331, 235, 79, 122, 79, 122, 79,
	-218, -108, -220, -189, -420, 135, -189, -189, -163, 84,
	-241, 73, -171, -172, 40, 268, 264, -173, 40, 248,
	249, -175, 67, 276, 13, 90, 90, -148, 67, 65,
	286, 67, 67, 67, -391, 68, 248, 249, 68, -396,
	73, -426, 73, -120, -284, -361, -245, 67, -245, 67,
	53, 19, 17, -245, -251, -176, 73, 20, 73, -370,
	73, -285, -355, 68, -129, 68, 68, -310, -120, 20,
	-176, 479, 20, 480, 316, 40, 79, 40, 367, -268,
	-270, -204, 67, -167, -168, -145, -98, -97, -167, -332,
	138, 79, 122, 79, 79, -189, -189, 79, 67, -356,
	-269, 67, -268, -392, 303, 304, 305, 307, 306, -392,
	-268, -268, -268, 67, -291, -290, 277, 95, -121, -124,
	-390, -220, 220, 20, 20, -207, 526, 73, 396, -99,
	-366, -315, -312, -311, -314, 400, 278, 406, -251, -207,
	-140, -220, 73, 361, 73, 316, 68, 136, -333, -245,
	-305, 236, -99, -305, -347, 146, 297, 480, 79, 122,
	79, -120, 68, -245, -255, -178, -177, 476, -268, 68,
	68, 68, 68, -268, 277, 68, 68, 136, 67, 20,
	-341, 527, -375, 399, -369, -367, 394, 395, 396, 397,
	68, -313, 97, 366, 370, -245, 34, 382, -271, -270,
	-115, 68, -306, 285, 20, -306, 297, 79, 122, 79,
	-121, 68, -182, -180, -181, 64, 410, 274, 275, 68,
	-271, -271, -271, -271, 68, -220, 220, -208, -220, -370,
	73, -377, 218, -373, -374, 398, -367, 20, 396, 20,
	20, -313, 522, 404, 405, 404, 405, 73, -272, 226,
	77, 480, 301, 302, -115, 20, -307, 278, 279, -308,
	-319, 281, 79, -290, -181, 64, -180, 64, 14, 13,
	-183, 68, 136, -384, 67, 79, -372, -371, -373, 20,
	-370, 20, -370, -370, 94, -217, 73, 300, -204, 67,
	-317, 282, 67, -315, 67, -315, 90, 304, -179, 271,
	272, 30, 146, -179, -220, -388, 30, 68, -383, -382,
	-205, -378, -220, 399, 400, 73, -370, -313, 79, -220,
	-304, -309, 283, 79, -241, 67, -241, 67, -316, 280,
	67, 84, 40, 273, -387, -386, -385, 68, 136, 135,
	68, -321, 67, 20, 68, -304, 68, -304, 67, 104,
	-241, 136, 104, -382, -220, -322, -320, 236, -308, 68,
	68, 68, -304, 79, 68, -386, 40, -245, 135, 68,
	136, -220, -318, 284, 68, -220, -320, -323, 46, 79,
	-327, -324, 67, -186, 238, 114, -327, -186, -326, -325,
	283, 239, 67, 68, 136, -220, 235, 67, -251, -325,
	-324, -251, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 690, 691, 692, 693, 0, 0, 0,
	463, 464, 0, 439, 0, 0, 0, 0, 0, 0,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 300, 301, 302, 303, 304, 0, 235, 231, 210,
	211, 212, 171, 172, 173, 174, 242, 243, 323, 0,
	0, 0, 0, 0, 547, -2, 35, 694, 695, 696,
	697, 698, 699, 700, -2, 476, 0, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 289, 290, 291,
	285, 286, 288, 287, -2, 0, 476, 224, 0, 215,
	215, 0, 0, 0, 567, 0, 0, 582, 604, 33,
	0, 0, 525, 0, 530, 923, 959, 960, 961, 962,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 525, 236, 465, 466, 567, 567,
	437, 0, 271, 0, 1410, 275, 0, 0, 0, 434,
	266, 267, 268, 269, 270, 0, 689, 0, 0, 262,
	0, 230, 1469, 0, 0, 0, 0, 0, 0, 113,
	753, 115, 755, 119, 126, 0, 0, 133, 134, 137,
	138, 139, 140, 141, 0, 145, 0, 147, 150, 0,
	152, 153, 0, 156, 157, 158, 0, 168, 169, 170,
	756, 757, 758, -2, 44, 703, 1335, 1230, 0, 1237,
	1238, 1249, 1260, 1032, 1033, 1034, 1035, 0, 0, 0,
	0, 0, 1042, 1043, 0, 1055, 1564, 0, 1049, 1050,
	1051, 1052, 53, 65, 66, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 0, 1203, 1019, 959, 0,
	1572, 0, 1592, 1597, 1591, 0, 0, 1188, 0, 1178,
	0, 0, -2, -2, 0, 0, 1536, -2, 1569, 1588,
	1596, 1573, 1595, 1566, 1567, 1561, 1562, 1563, 1565, 1574,
	1576, 1587, 0, 1583, 1593, 1594, 0, 67, 68, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1194, -2, 1196, 1197, 1199, 1200, 1201, 1202,
	-2, 1205, 1206, 1207, -2, -2, 1210, 1211, 1212, 1213,
	1214, 1215, 1218, -2, 1220, -2, -2, 1190, 1191, 1192,
	1193, 1182, 1183, 1184, 1185, 1186, 1187, -2, -2, -2,
	0, 208, 206, 567, 640, 0, -2, 0, 0, 0,
	587, 590, 593, 596, 0, 36, 37, 0, 0, 783,
	783, 783, 783, 0, 783, 0, 0, 0, 783, 760,
	761, 762, 781, 782, 829, 481, 477, 478, 479, 480,
	555, 0, 557, 560, 416, 368, 0, 0, 0, 380,
	374, 0, 0, 416, 0, 0, 562, 562, 0, 426,
	416, 416, -2, 416, 0, 385, 386, 387, 374, 0,
	374, 391, 392, 393, 404, 405, 427, 1359, 0, 0,
	323, 0, 323, 0, 323, 483, 225, 226, 214, 216,
	0, 220, 0, 213, 1469, 0, 0, 182, 1536, 187,
	0, 1417, 1483, 1432, 0, 0, 1450, 0, -2, 0,
	252, 562, 0, 568, 0, 567, 0, 0, 323, 323,
	323, 323, 323, 323, 323, 323, 0, 0, 0, 0,
	605, 606, 601, 602, 603, 607, 608, 3, 0, 0,
	493, 0, 529, 0, 0, 562, -2, 0, 438, 272,
	963, 0, 0, 276, 277, 0, 0, 292, 0, 295,
	280, 281, 282, 0, 0, 264, 265, 0, 0, 232,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	123, 120, 127, 130, 131, 142, 149, 0, 161, 163,
	166, 121, 128, 132, 135, 136, 143, 164, 122, 124,
	125, 129, 165, 167, 144, 148, 162, 146, 151, 154,
	155, 160, 0, 94, 0, 0, 0, 0, 0, 1236,
	0, 0, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1230, 0,
	0, 1038, 1039, 1040, 1041, 1044, 0, 1056, 0, 0,
	0, 1289, 0, 1228, 1228, 0, 1228, 1224, 0, 0,
	0, 1228, 1166, 0, 0, 1168, 1179, 0, 0, 0,
	1172, 1173, 1228, 0, 1228, 1177, 1162, 1163, 0, 1224,
	1224, 0, 0, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 0, 1336, 1354, 1291, 1292,
	1293, 1341, 1295, 1345, 1345, 1345, 1345, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 0, 0, 1334, 1314,
	1343, 1343, 1343, 1341, 1338, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1348,
	1348, 1351, 1348, 0, 562, 0, 0, 550, 0, 531,
	0, 584, 586, 0, 588, 589, 591, 592, 594, 595,
	597, 598, 38, 0, 702, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 783, 783, 783, 0, 483, 482,
	0, 556, 0, 0, 613, 0, 0, 0, 374, 416,
	379, 376, 375, 422, 423, 419, 0, 419, 613, 0,
	398, 399, 400, 416, 416, 406, 563, 407, 408, 419,
	0, 424, 425, 0, 613, 613, 0, 415, 0, 0,
	783, 376, 389, 376, 1360, 1361, 0, 792, 0, 0,
	0, 433, 0, 0, 484, 0, 0, 218, 0, 223,
	175, 0, 0, 0, 0, 0, 0, 204, 205, 0,
	0, 0, 0, 0, 195, 198, 917, 918, 750, 751,
	199, 200, 244, 245, 0, 531, 583, 585, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 621, 615, 617, 684, 53, 621, 0, 0, 0,
	504, 0, 498, 0, 0, 0, 924, 485, 517, 487,
	0, 506, 531, 553, 531, 0, 273, 0, 278, 0,
	0, 294, 296, 297, 298, 283, 284, 435, 260, 261,
	253, 254, 255, 256, 257, 258, 259, 263, 63, 0,
	233, 234, 0, 0, 0, 107, 108, 109, 110, 111,
	112, 114, 98, 453, 455, 742, 754, 0, 745, 0,
	117, 159, 90, 0, 0, 1231, 1232, 1233, 1234, 1235,
	1239, 0, 1241, 1243, 1245, 1247, 0, 1265, -2, -2,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1250, 1263, 1264, 0, 0, 0, 0, 0,
	0, 1261, 1261, 1256, 0, 1036, 0, 1053, 1057, 0,
	0, 0, 54, 1223, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 0, 1229, 0, 1230, 0, 0, 0,
	1225, 1226, 0, 0, 0, 1127, 1128, 1129, 0, 512,
	0, 1189, 1167, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	1357, 1355, 1356, 1294, 1342, 0, 1319, 0, 1320, 1321,
	1322, 0, 0, 1315, 0, 1316, 1317, 1318, 1310, 0,
	1311, 1312, 0, 1313, 207, 639, 641, 0, 521, 523,
	524, 0, 551, 564, 569, 570, 573, 34, 39, 0,
	707, 0, 560, 0, 0, 719, 321, 736, 0, 752,
	775, -2, 0, 0, 0, 807, 0, 558, 0, 0,
	653, 367, 0, 417, 418, 371, 1469, 376, 613, 381,
	377, 382, 0, 421, 383, 384, 0, 613, 613, 416,
	419, 419, 411, 412, 0, 428, 431, 429, 0, 388,
	390, 560, 306, 0, 0, -2, 873, 1362, 1362, 0,
	1362, 1362, 1362, 1362, 0, 0, 1362, 1362, 1362, 1362,
	1362, 1362, 1362, 1362, 1362, 1362, 1362, 1362, 1362, 1362,
	0, 793, 318, 0, 0, 321, 626, 0, 627, 628,
	624, 655, 679, 679, 0, 679, 659, 923, 227, 228,
	0, 0, 222, 176, 177, 0, 179, 180, 181, 188,
	183, 185, 0, 0, 189, 201, 202, 203, 0, 0,
	0, 193, 194, 0, 0, 247, 248, 250, 0, 549,
	450, 921, 451, 452, 456, 0, 458, 459, 460, 707,
	613, 0, 622, 0, 618, 685, 0, 687, 0, 613,
	541, 0, 533, 492, 0, 517, 506, 0, 0, 493,
	510, 0, 527, 486, 514, 0, 518, 0, 0, 491,
	507, 0, 552, 554, 964, 0, 279, 293, 0, 0,
	0, 0, 101, 739, 0, 102, 106, 96, 0, 0,
	0, 744, 0, 741, 746, 0, 116, 0, 0, 91,
	92, 798, 803, 0, 1240, 1242, 1244, 1246, 1248, 0,
	1251, 1261, 1261, 1257, 0, 1252, 0, 1254, 0, 1231,
	0, 1058, 0, 0, 0, 0, 0, 0, 1114, 1115,
	0, 0, 1119, 0, 1121, 1122, 0, 0, 0, 1126,
	0, 1165, 1181, 1169, 1170, 0, 1174, 0, 1176, 0,
	567, 0, 1092, 1092, 0, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 1290, 1358,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 642,
	533, 0, 0, 0, 576, 574, 575, 0, 0, 708,
	709, 711, 712, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1402, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 706, 0, 784, 726, 1362,
	325, 0, 0, 738, 0, 0, 780, -2, 787, 0,
	0, 0, 0, 809, 0, 0, 0, 470, 474, 33,
	561, 0, 614, 369, 0, 370, 416, 378, 420, 613,
	923, 401, 402, 613, 416, 416, 419, 0, 430, 0,
	307, 929, 930, 0, 0, 932, 989, 0, 941, 783,
	941, 0, 0, 943, 944, 308, 0, 0, 0, 0,
	0, 792, 875, 0, 1363, 0, 1362, 1362, 0, 0,
	0, 0, 1362, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	1362, 0, 0, 325, 0, 0, 0, 0, 0, 646,
	0, 0, 645, 0, 0, 0, 0, 0, 560, 680,
	0, 682, 683, 657, -2, 0, 626, 662, 1228, 229,
	217, 219, 0, 0, 0, 0, 190, 191, 192, 196,
	197, 246, 249, 251, 0, 0, 0, 611, 616, 623,
	686, 688, 54, 619, 611, 40, 0, 0, 537, 0,
	0, 497, 503, 0, 495, 493, 0, 0, 0, 526,
	0, 517, 519, 0, 517, 0, 0, 0, 0, 436,
	64, 299, 0, 0, 0, 0, 0, 454, 0, 743,
	98, 0, 0, 118, 0, 0, 801, 0, 803, 1227,
	1253, 1255, 0, 1262, 1258, 1037, 1045, 1054, 0, 0,
	1060, 1072, 1072, 0, 1063, 1345, 1345, 1066, 1341, 1343,
	1341, 1072, 1072, 0, 55, 0, 0, 1120, 0, 0,
	0, 513, 0, 0, 0, 1090, 1092, 1096, 0, 1097,
	1092, 1092, 1092, 1092, 1102, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1347, 1346, 1332, 0, 1333, 1344, 1349,
	0, 1352, 0, 522, 537, 565, 566, 571, 572, 0,
	0, 0, 0, 713, 0, 729, 727, 728, 0, 733,
	326, 327, 328, 329, 0, 0, 0, 737, 0, 0,
	776, 777, 778, 779, 788, 1362, 1362, 1362, 925, 925,
	925, 817, 0, 808, 525, 0, -2, 0, 0, 472,
	0, 0, 654, 372, 613, 394, 0, 409, 613, 613,
	416, 432, 0, -2, 931, 990, 953, 953, 942, 953,
	953, 783, 0, 310, 311, 312, 0, 314, 874, 876,
	877, 0, 0, 880, 881, 882, 883, 0, 0, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 911,
	912, 913, 914, 915, 916, 896, 897, 898, 899, 900,
	901, 908, 0, 0, 905, 0, 729, 0, 0, 0,
	733, 613, 239, 0, 649, 643, 0, 632, 647, 648,
	635, 0, 637, 0, 633, 634, 613, 625, 656, 681,
	658, 661, 663, 664, 670, 0, 0, 0, 0, 221,
	178, 0, 345, 184, 922, 457, 462, 609, 0, 0,
	609, 542, 541, 539, 78, 0, 0, 0, 494, 0,
	0, 511, 517, 0, 528, 515, 0, 520, 517, 490,
	489, 508, 509, 965, 274, 0, 740, 98, 103, 104,
	105, 99, 97, 747, 0, 749, 0, 799, 803, 0,
	0, 1259, 1059, 1046, 1061, 1073, 1074, 1062, 1047, 1064,
	1065, 1067, 1068, 1069, 1070, 1071, 1048, 1116, 0, 1118,
	1123, 1124, 0, 1171, 1175, 0, 0, 0, 1095, 1088,
	1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1340, 0, 0, 539, 577, 578, 701, 0,
	710, 0, 717, 718, 0, 0, 721, 722, 731, 0,
	0, 0, 331, 332, 0, 0, 0, 344, 340, 341,
	342, 322, 732, 0, 0, 0, 0, 0, 926, 927,
	0, 0, 820, 0, 0, 811, 0, 679, 0, 0,
	613, 471, 474, 475, 559, 373, 613, 413, 410, 613,
	305, 955, -2, 968, 970, 0, 0, 973, 974, 0,
	0, 0, 0, 1011, 980, 0, 0, 984, 0, 1277,
	1278, 0, 988, 0, 945, 954, 0, 954, 0, 0,
	953, 0, 313, 878, 879, 884, 885, 902, 0, 0,
	904, 0, 0, 315, 0, 0, 316, 320, 567, 0,
	0, 629, 650, 0, 0, 630, 0, 631, 636, 638,
	238, 665, 0, 0, 667, 668, 669, 660, 186, 599,
	0, 0, 620, 600, 41, 541, 0, 538, 79, 0,
	0, 0, 0, 499, 496, 517, 502, 501, 0, 516,
	488, 100, 95, 748, 493, 802, 804, 800, 0, 1125,
	0, 1092, 1091, 567, 1089, 0, 1350, 1353, 541, 0,
	716, 714, 730, 720, 0, 734, 735, 0, 333, 334,
	0, 337, 343, 0, 789, 790, 919, 920, 791, -2,
	0, 0, -2, 823, 0, 818, 0, 810, 0, 813,
	613, 613, -2, 468, 473, 0, 395, 414, 969, 971,
	972, 975, 976, 977, 1016, 1017, 1018, 978, 1013, 1014,
	1015, 979, 0, 0, 0, 1275, 1276, 1009, 0, 0,
	0, 0, 0, 0, 0, 939, 909, 910, 903, 906,
	907, 319, 317, 562, 240, 241, 651, 0, 644, 674,
	671, 0, 0, 610, 612, 543, 540, 0, 534, 536,
	89, 505, 500, 494, 81, 1117, 1164, 1094, 1085, 0,
	543, 0, 0, 0, 330, 335, 0, 338, 339, 0,
	771, 1341, 0, 830, -2, 928, 795, 81, 830, 814,
	0, 821, 0, 819, 812, 567, 469, 0, 0, 1178,
	1004, 0, 0, 946, 948, 949, 950, 951, 952, 947,
	0, 0, 0, 0, 938, 940, 985, 0, 237, 0,
	0, 675, 677, 672, 673, 42, 0, 80, 0, 51,
	72, 0, 0, 1086, 0, 1080, 1081, 1082, 1087, 532,
	0, 715, 723, 0, 725, 336, 764, 0, 573, 0,
	832, 0, 797, 832, 806, 0, 816, 0, 825, 0,
	822, 562, 1012, 0, 983, 992, 1005, 0, 0, 764,
	764, 764, 764, 0, 986, 652, 666, 0, 0, 0,
	43, 0, 69, 0, 82, 83, 0, 0, 0, 0,
	1093, 1083, 0, 0, 0, 0, 0, 724, 763, 772,
	773, 573, 794, 0, 869, 796, 815, 824, 0, 827,
	467, 981, 991, 993, 994, 0, 1006, 1007, 1008, 1010,
	933, 934, 935, 936, 0, 676, 678, 0, 545, 535,
	52, 56, 0, 78, 75, 0, 84, 0, 0, 0,
	0, 0, 1075, 1076, 1078, 1077, 1079, 704, 765, 1362,
	0, 0, 769, 770, 774, 0, 857, 0, 0, 863,
	0, 870, 826, 982, 995, 0, 996, 0, 0, 0,
	937, 544, 0, 45, 0, 0, 73, 74, 76, 0,
	85, 0, 87, 88, 0, 0, 767, 0, 833, 0,
	835, 0, 0, 0, 0, 0, 867, 0, 997, 999,
	1000, 0, 0, 998, 546, 805, 0, 57, 0, 59,
	61, 62, 956, 70, 71, 77, 86, 1084, 766, 768,
	0, 837, 0, 858, 0, 0, 0, 0, 0, 0,
	0, 1001, 1003, 1002, 46, 47, 0, 58, 0, 0,
	834, 831, 0, 869, 859, 0, 861, 0, 0, 0,
	0, 0, 0, 60, 957, 0, 839, 0, 855, 860,
	862, 864, 0, 868, 866, 48, 49, 50, 0, 838,
	0, 851, 836, 0, 865, 958, 840, -2, 0, 856,
	841, -2, 0, 849, 0, 0, 842, 850, 0, 845,
	0, 0, 0, 844, 0, -2, 852, 0, 0, 846,
	-2, 0, 854, 853,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 534,
	105, 104, 106, 3, 535, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 536, 117, 537, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:650
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:656
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:691
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:696
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:702
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:722
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:728
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:735
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:743
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:749
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:767
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:824
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:830
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:834
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:840
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:847
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:855
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:859
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:873
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:877
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:881
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:894
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:900
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:909
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:920
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:924
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:930
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:934
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:940
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:944
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:950
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:974
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:993
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:997
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1001
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1017
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1025
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1032
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1037
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1044
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1053
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1077
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1081
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1093
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1111
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1128
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1159
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1174
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1198
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1211
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1215
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1225
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1238
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1251
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1263
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1270
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1314
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1318
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1340
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1344
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_SEQUENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_SEQUENCE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1522
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1526
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1530
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1619
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1623
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1627
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1633
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1643
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1650
		{
			yyVAL.str = yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1656
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1660
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1666
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1683
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1691
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1699
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1722
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1745
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1752
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1767
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1774
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1781
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1804
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1808
		{
			yyVAL.str = yyDollar[1].str
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1814
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1818
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1824
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1828
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1839
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1866
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1936
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1953
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1960
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1971
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1982
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1986
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1992
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2002
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2008
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2012
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2018
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2024
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2028
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2036
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2054
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2064
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2070
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2074
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2080
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2086
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2114
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2130
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2148
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2189
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2193
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2199
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2205
		{
			yyVAL.str = yyDollar[1].str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2210
		{
			yyVAL.str = "true"
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2211
		{
			yyVAL.str = "false"
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2212
		{
			yyVAL.str = yyDollar[1].str
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2217
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2251
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2258
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2262
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2272
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2338
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2344
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2375
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2379
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2388
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2460
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2470
		{
			yyVAL.item = nil
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2475
		{
			yyVAL.item = nil
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2507
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2533
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2544
		{
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2548
		{
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2562
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2568
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2574
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2580
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2592
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2601
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2613
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2633
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2646
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2656
		{
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2658
		{
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2686
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2690
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2700
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2712
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2728
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2740
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2744
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2750
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2776
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2794
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2798
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2804
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2827
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2836
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2842
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2846
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2852
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2858
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2862
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2866
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2876
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2924
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2928
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2934
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2980
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2997
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3002
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3009
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3025
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3038
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3049
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3053
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3059
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3064
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3071
		{
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3073
		{
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3076
		{
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3085
		{
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3089
		{
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3103
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3116
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3124
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3138
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3158
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3171
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3177
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3181
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3187
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3208
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3217
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3233
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3253
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3257
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3266
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3270
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3285
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3289
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3295
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3299
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3305
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3309
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3315
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3320
		{
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3331
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3335
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3351
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3357
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3361
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3367
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3371
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3407
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3425
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3461
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3474
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3478
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3483
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3487
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3494
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3499
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3506
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3512
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3520
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3528
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3545
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3554
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3558
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3576
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3585
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3591
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3608
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3614
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3620
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3624
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3635
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3643
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3648
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3652
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3656
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3662
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3670
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3684
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3688
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3708
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3718
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3738
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3755
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3763
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3771
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3779
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3787
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3803
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3811
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3819
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3829
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3840
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3854
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3858
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3862
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3867
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3871
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3875
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3888
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3897
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3906
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3912
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3916
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3922
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3926
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3931
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3940
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3948
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3954
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3962
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3970
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3980
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3986
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3995
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4013
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4023
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4027
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4037
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4041
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4045
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4049
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4055
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4065
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4069
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4075
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4085
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4091
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4097
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4101
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4105
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4115
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4131
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4135
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4141
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4145
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4155
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4168
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4180
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4193
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4211
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4215
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4221
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4231
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4235
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4239
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4244
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4248
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4252
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4256
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4265
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4269
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4273
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4277
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4282
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4286
		{
			yyVAL.str = yyDollar[1].str
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4290
		{
			yyVAL.str = yyDollar[2].str
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4296
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4302
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4306
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4310
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4314
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4318
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4324
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 701:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4355
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4365
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4371
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 704:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4378
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4390
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4395
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4412
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4424
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4428
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4432
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4438
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4444
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4461
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4473
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4479
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4489
		{
			yyVAL.str = yyDollar[1].str
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4493
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4499
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4512
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4520
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4541
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4547
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4568
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4573
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4579
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4587
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4693
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4697
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4703
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4713
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4717
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4733
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4737
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4741
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4746
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4750
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4763
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4769
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4778
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4785
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4794
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4798
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4804
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4822
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4826
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4839
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4843
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4849
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4872
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4894
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4910
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4916
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4920
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4926
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4931
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4936
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4940
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4958
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4972
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4976
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4985
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4991
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4995
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5001
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5005
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5009
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5024
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5036
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5045
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5058
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5065
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5075
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5083
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5094
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5098
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5103
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5107
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5114
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5125
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5138
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5152
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5160
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5174
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5181
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5204
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5211
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5222
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5229
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5240
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5247
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5254
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5261
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5272
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5281
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5295
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5302
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5313
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5326
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5332
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5336
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5342
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5351
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5365
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5371
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5375
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5381
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5388
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5397
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5401
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5410
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5415
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5419
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5424
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5428
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5438
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5442
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5461
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5488
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5497
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5507
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5517
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5521
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5539
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5545
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5549
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5553
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5563
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5575
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5579
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5584
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5588
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5620
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5624
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5632
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5636
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5640
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5644
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5648
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5652
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5656
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5660
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5664
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5668
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5672
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5679
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5683
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5689
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5694
		{
			yyVAL.str = ""
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5698
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5702
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5712
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5716
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5720
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5724
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5728
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5742
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5746
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5755
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5760
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5773
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5777
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5787
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5793
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5805
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5811
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5820
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5829
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5871
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5879
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5885
		{
			yyVAL.str = ""
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5889
		{
			yyVAL.str = yyDollar[1].str
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5899
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5905
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5911
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5925
		{
			yyVAL.str = ""
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5929
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5935
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5941
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5945
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5949
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5955
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5959
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5963
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5967
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5973
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5977
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5986
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5990
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5996
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6000
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6006
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6010
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6014
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6022
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6026
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6031
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6035
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6039
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6043
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6047
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6051
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6055
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6059
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6072
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6087
		{
			yyVAL.str = ""
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6091
		{
			yyVAL.str = yyDollar[1].str
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6097
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6101
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6107
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6119
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6133
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6140
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6147
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6156
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6162
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6168
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6184
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6189
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6196
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6200
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6204
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6213
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6218
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6222
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6238
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6244
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6248
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6252
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6256
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6260
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6264
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6268
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6292
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6298
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6302
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6306
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6310
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6314
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6318
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6322
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6326
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6330
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6334
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6338
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6342
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6347
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6355
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6360
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6364
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6373
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6377
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6381
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6385
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6394
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6403
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6409
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6413
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6419
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6429
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6446
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6463
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6476
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6489
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6515
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6545
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6562
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6577
		{
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6587
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6591
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6597
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6601
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6609
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6613
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6617
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6623
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6630
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6643
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6650
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6659
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6664
		{
			yyVAL.str = ","
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6668
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6677
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6687
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6717
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6726
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6736
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6746
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6766
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6776
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6796
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6806
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6816
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6826
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6836
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6846
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6863
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6871
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6879
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6887
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6895
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6905
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6913
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6922
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6930
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6941
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6951
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6963
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6974
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6996
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7032
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7044
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7067
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7075
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7082
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7101
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7109
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7117
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7128
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7137
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7146
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7154
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7164
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7172
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7186
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7196
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7215
		{
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7217
		{
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7258
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7292
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7298
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7302
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7309
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7313
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7317
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7329
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7337
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7351
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7355
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7359
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7367
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7371
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7375
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7379
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7387
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7391
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7395
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7399
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7403
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7407
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7411
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7415
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7419
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7423
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7433
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7439
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7443
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7450
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7458
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7464
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7468
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7472
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7476
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7480
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7484
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7488
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7494
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7498
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7502
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7516
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7529
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7568
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7579
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7590
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7595
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7663
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7676
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7689
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7702
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7728
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7741
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7754
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7767
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7782
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7805
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7843
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7891
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7908
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7920
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7940
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7960
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7980
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8009
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8035
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8048
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8060
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8096
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8120
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8132
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8197
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8205
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8214
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8247
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8252
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8258
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8265
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8269
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8274
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8278
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8284
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8290
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8297
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8304
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8313
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default scale for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8320
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8327
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8336
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8350
		{
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8362
		{
			yyVAL.str = ""
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const SECOND = 57638
const ASCII = 57639
const COALESCE = 57640
const COLLATION = 57641
const HOUR = 57642
const MICROSECOND = 57643
const MINUTE = 57644
const MONTH = 57645
const QUARTER = 57646
const REPEAT = 57647
const REVERSE = 57648
const ROW_COUNT = 57649
const WEEK = 57650
const REVOKE = 57651
const FUNCTION = 57652
const PRIVILEGES = 57653
const TABLESPACE = 57654
const EXECUTE = 57655
const SUPER = 57656
const GRANT = 57657
const OPTION = 57658
const REFERENCES = 57659
const REPLICATION = 57660
const SLAVE = 57661
const CLIENT = 57662
const USAGE = 57663
const RELOAD = 57664
const FILE = 57665
const TEMPORARY = 57666
const ROUTINE = 57667
const EVENT = 57668
const SHUTDOWN = 57669
const NULLX = 57670
const AUTO_INCREMENT = 57671
const APPROXNUM = 57672
const SIGNED = 57673
const UNSIGNED = 57674
const ZEROFILL = 57675
const ENGINES = 57676
const LOW_CARDINALITY = 57677
const ADMIN_NAME = 57678
const RANDOM = 57679
const SUSPEND = 57680
const ATTRIBUTE = 57681
const HISTORY = 57682
const REUSE = 57683
const CURRENT = 57684
const OPTIONAL = 57685
const FAILED_LOGIN_ATTEMPTS = 57686
const PASSWORD_LOCK_TIME = 57687
const UNBOUNDED = 57688
const SECONDARY = 57689
const USER = 57690
const IDENTIFIED = 57691
const CIPHER = 57692
const ISSUER = 57693
const X509 = 57694
const SUBJECT = 57695
const SAN = 57696
const REQUIRE = 57697
const SSL = 57698
const NONE = 57699
const PASSWORD = 57700
const MAX_QUERIES_PER_HOUR = 57701
const MAX_UPDATES_PER_HOUR = 57702
const MAX_CONNECTIONS_PER_HOUR = 57703
const MAX_USER_CONNECTIONS = 57704
const FORMAT = 57705
const VERBOSE = 57706
const CONNECTION = 57707
const TRIGGERS = 57708
const PROFILES = 57709
const LOAD = 57710
const INFILE = 57711
const TERMINATED = 57712
const OPTIONALLY = 57713
const ENCLOSED = 57714
const ESCAPED = 57715
const STARTING = 57716
const LINES = 57717
const ROWS = 57718
const IMPORT = 57719
const MODUMP = 57720
const OVER = 57721
const PRECEDING = 57722
const FOLLOWING = 57723
const GROUPS = 57724
const DATABASES = 57725
const TABLES = 57726
const EXTENDED = 57727
const FULL = 57728
const PROCESSLIST = 57729
const FIELDS = 57730
const COLUMNS = 57731
const OPEN = 57732
const ERRORS = 57733
const WARNINGS = 57734
const INDEXES = 57735
const SCHEMAS = 57736
const NODE = 57737
const LOCKS = 57738
const TABLE_NUMBER = 57739
const TABLE_SIZE = 57740
const COLUMN_NUMBER = 57741
const TABLE_VALUES = 57742
const NAMES = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const LOCAL = 57755
const EVENTS = 57756
const PLUGINS = 57757
const CURRENT_TIMESTAMP = 57758
const DATABASE = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const SEPARATOR = 57768
const TIMESTAMPDIFF = 57769
const CURRENT_DATE = 57770
const CURRENT_USER = 57771
const CURRENT_ROLE = 57772
const SECOND_MICROSECOND = 57773
const MINUTE_MICROSECOND = 57774
const MINUTE_SECOND = 57775
const HOUR_MICROSECOND = 57776
const HOUR_SECOND = 57777
const HOUR_MINUTE = 57778
const DAY_MICROSECOND = 57779
const DAY_SECOND = 57780
const DAY_MINUTE = 57781
const DAY_HOUR = 57782
const YEAR_MONTH = 57783
const SQL_TSI_HOUR = 57784
const SQL_TSI_DAY = 57785
const SQL_TSI_WEEK = 57786
const SQL_TSI_MONTH = 57787
const SQL_TSI_QUARTER = 57788
const SQL_TSI_YEAR = 57789
const SQL_TSI_SECOND = 57790
const SQL_TSI_MINUTE = 57791
const RECURSIVE = 57792
const CONFIG = 57793
const DRAINER = 57794
const MATCH = 57795
const AGAINST = 57796
const BOOLEAN = 57797
const LANGUAGE = 57798
const WITH = 57799
const QUERY = 57800
const EXPANSION = 57801
const ADDDATE = 57802
const BIT_AND = 57803
const BIT_OR = 57804
const BIT_XOR = 57805
const CAST = 57806
const COUNT = 57807
const APPROX_COUNT_DISTINCT = 57808
const APPROX_PERCENTILE = 57809
const CURDATE = 57810
const CURTIME = 57811
const DATE_ADD = 57812
const DATE_SUB = 57813
const EXTRACT = 57814
const GROUP_CONCAT = 57815
const MAX = 57816
const MID = 57817
const MIN = 57818
const NOW = 57819
const POSITION = 57820
const SESSION_USER = 57821
const STD = 57822
const STDDEV = 57823
const MEDIAN = 57824
const STDDEV_POP = 57825
const STDDEV_SAMP = 57826
const SUBDATE = 57827
const SUBSTR = 57828
const SUBSTRING = 57829
const SUM = 57830
const SYSDATE = 57831
const SYSTEM_USER = 57832
const TRANSLATE = 57833
const TRIM = 57834
const VARIANCE = 57835
const VAR_POP = 57836
const VAR_SAMP = 57837
const AVG = 57838
const ARROW = 57839
const ROW = 57840
const OUTFILE = 57841
const HEADER = 57842
const MAX_FILE_SIZE = 57843
const FORCE_QUOTE = 57844
const UNUSED = 57845
const BINDINGS = 57846
const DO = 57847
const DECLARE = 57848
const KILL = 57849

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"TABLE_SIZE",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8352

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 92,
	21, 533,
	-2, 514,
	-1, 100,
	212, 731,
	-2, 778,
	-1, 119,
	42, 366,
	212, 366,
	239, 373,
	240, 373,
	410, 366,
	-2, 394,
	-1, 426,
	288, 88,
	386, 88,
	-2, 1520,
	-1, 485,
	67, 1146,
	-2, 1660,
	-1, 486,
	67, 1164,
	-2, 1631,
	-1, 490,
	67, 1165,
	-2, 1659,
	-1, 512,
	67, 1079,
	-2, 1708,
	-1, 513,
	67, 1080,
	-2, 1707,
	-1, 514,
	67, 1081,
	-2, 1697,
	-1, 515,
	67, 1672,
	-2, 1692,
	-1, 516,
	67, 1673,
	-2, 1693,
	-1, 517,
	67, 1674,
	-2, 1699,
	-1, 518,
	67, 1675,
	-2, 1682,
	-1, 519,
	67, 1676,
	-2, 1690,
	-1, 520,
	67, 1677,
	-2, 1700,
	-1, 521,
	67, 1678,
	-2, 1701,
	-1, 522,
	67, 1679,
	-2, 1706,
	-1, 523,
	67, 1680,
	-2, 1711,
	-1, 524,
	67, 1681,
	-2, 1712,
	-1, 526,
	67, 1143,
	-2, 1512,
	-1, 533,
	67, 1152,
	-2, 1538,
	-1, 537,
	67, 1156,
	-2, 1577,
	-1, 538,
	67, 1157,
	-2, 1655,
	-1, 546,
	67, 1167,
	-2, 1640,
	-1, 548,
	67, 1169,
	-2, 1650,
	-1, 560,
	67, 1061,
	-2, 1702,
	-1, 561,
	67, 1062,
	-2, 1703,
	-1, 562,
	67, 1063,
	-2, 1704,
	-1, 569,
	21, 534,
	-2, 497,
	-1, 624,
	405, 394,
	406, 394,
	-2, 367,
	-1, 667,
	103, 1512,
	114, 1512,
	133, 1512,
	-2, 1305,
	-1, 706,
	21, 534,
	-2, 497,
	-1, 805,
	21, 533,
	-2, 968,
	-1, 1126,
	67, 1212,
	-2, 1657,
	-1, 1127,
	67, 1213,
	-2, 1658,
	-1, 1286,
	1, 757,
	68, 757,
	525, 757,
	-2, 764,
	-1, 1412,
	133, 1315,
	-2, 1313,
	-1, 1414,
	133, 658,
	-2, 1310,
	-1, 1415,
	133, 659,
	-2, 1311,
	-1, 1709,
	68, 1291,
	134, 1291,
	-2, 1642,
	-1, 1710,
	68, 1287,
	134, 1287,
	-2, 1641,
	-1, 1711,
	68, 1269,
	134, 1269,
	-2, 1628,
	-1, 1712,
	68, 1270,
	134, 1270,
	-2, 1633,
	-1, 1713,
	68, 1271,
	134, 1271,
	-2, 1565,
	-1, 1714,
	68, 1272,
	134, 1272,
	-2, 1559,
	-1, 1715,
	68, 1273,
	134, 1273,
	-2, 1503,
	-1, 1716,
	68, 1274,
	134, 1274,
	-2, 1630,
	-1, 1717,
	68, 1275,
	134, 1275,
	-2, 1563,
	-1, 1718,
	68, 1276,
	134, 1276,
	-2, 1558,
	-1, 1719,
	68, 1277,
	134, 1277,
	-2, 1551,
	-1, 1721,
	68, 1260,
	134, 1260,
	-2, 1660,
	-1, 1722,
	68, 1289,
	134, 1289,
	-2, 1631,
	-1, 1723,
	68, 1289,
	134, 1289,
	-2, 1659,
	-1, 1724,
	68, 1289,
	134, 1289,
	-2, 1521,
	-1, 1725,
	68, 1287,
	134, 1287,
	-2, 1650,
	-1, 1726,
	68, 1284,
	134, 1284,
	-2, 1543,
	-1, 1727,
	67, 1242,
	68, 1242,
	134, 1242,
	348, 1242,
	349, 1242,
	350, 1242,
	-2, 1502,
	-1, 1728,
	67, 1243,
	68, 1243,
	134, 1243,
	348, 1243,
	349, 1243,
	350, 1243,
	-2, 1504,
	-1, 1729,
	67, 1246,
	68, 1246,
	134, 1246,
	348, 1246,
	349, 1246,
	350, 1246,
	-2, 1632,
	-1, 1730,
	67, 1248,
	68, 1248,
	134, 1248,
	348, 1248,
	349, 1248,
	350, 1248,
	-2, 1615,
	-1, 1731,
	67, 1250,
	68, 1250,
	134, 1250,
	348, 1250,
	349, 1250,
	350, 1250,
	-2, 1564,
	-1, 1732,
	67, 1252,
	68, 1252,
	134, 1252,
	348, 1252,
	349, 1252,
	350, 1252,
	-2, 1547,
	-1, 1733,
	67, 1253,
	68, 1253,
	134, 1253,
	348, 1253,
	349, 1253,
	350, 1253,
	-2, 1548,
	-1, 1734,
	67, 1255,
	68, 1255,
	134, 1255,
	348, 1255,
	349, 1255,
	350, 1255,
	-2, 1501,
	-1, 1735,
	68, 1294,
	134, 1294,
	348, 1294,
	349, 1294,
	350, 1294,
	-2, 1526,
	-1, 1736,
	68, 1294,
	134, 1294,
	348, 1294,
	349, 1294,
	350, 1294,
	-2, 1539,
	-1, 1737,
	68, 1297,
	134, 1297,
	348, 1297,
	349, 1297,
	350, 1297,
	-2, 1522,
	-1, 1738,
	68, 1294,
	134, 1294,
	348, 1294,
	349, 1294,
	350, 1294,
	-2, 1600,
	-1, 1751,
	1, 758,
	68, 758,
	525, 758,
	-2, 764,
	-1, 1807,
	21, 533,
	-2, 625,
	-1, 1984,
	65, 440,
	134, 440,
	-2, 873,
	-1, 2262,
	87, 764,
	129, 764,
	166, 764,
	169, 764,
	-2, 821,
	-1, 2264,
	273, 936,
	-2, 915,
	-1, 2292,
	87, 764,
	129, 764,
	166, 764,
	169, 764,
	-2, 821,
	-1, 2295,
	65, 440,
	134, 440,
	-2, 874,
	-1, 2335,
	87, 764,
	129, 764,
	166, 764,
	169, 764,
	-2, 822,
	-1, 2363,
	273, 936,
	-2, 916,
	-1, 2777,
	68, 793,
	134, 793,
	-2, 764,
	-1, 2781,
	68, 793,
	134, 793,
	-2, 764,
	-1, 2795,
	68, 797,
	134, 797,
	-2, 764,
	-1, 2800,
	68, 798,
	134, 798,
	-2, 764,
}

const yyPrivate = 57344

const yyLast = 30081

var yyAct = [...]int{
	457, 2336, 1191, 2781, 2780, 2757, 2789, 1106, 436, 2622,
	2402, 438, 2746, 2703, 459, 2659, 2687, 2587, 1804, 2520,
	2375, 2688, 2567, 2321, 2330, 2400, 1699, 1337, 833, 1371,
	2591, 2254, 1016, 2528, 1102, 2401, 483, 2421, 972, 137,
	137, 2575, 1800, 570, 1245, 137, 373, 380, 2439, 2287,
	380, 2319, 2385, 140, 2145, 1292, 666, 1987, 2334, 2141,
	1109, 1835, 2364, 2384, 1048, 1404, 136, 136, 1359, 378,
	31, 2268, 364, 2146, 1398, 2005, 1329, 385, 440, 2275,
	1874, 1959, 1604, 937, 1707, 1841, 1842, 428, 2026, 391,
	565, 430, 2150, 2220, 2203, 1294, 1799, 1916, 2158, 2161,
	1759, 2139, 700, 604, 1705, 2087, 2156, 1243, 1873, 1248,
	1405, 949, 435, 1409, 1412, 1600, 1262, 1406, 1399, 2040,
	1599, 1352, 2004, 670, 3, 1788, 1332, 565, 1330, 951,
	1956, 1304, 674, 42, 1282, 1190, 137, 377, 19, 374,
	8, 1961, 375, 6, 1758, 1752, 1253, 1632, 2339, 1105,
	673, 30, 695, 1100, 869, 1601, 439, 1040, 1270, 91,
	1703, 1302, 1744, 702, 1356, 396, 376, 7, 694, 961,
	1301, 668, 1154, 437, 1611, 427, 627, 1140, 42, 1687,
	1615, 1091, 447, 717, 1802, 1376, 1099, 696, 914, 369,
	658, 1393, 1281, 431, 1809, 603, 1319, 567, 366, 995,
	1161, 1160, 31, 393, 957, 16, 394, 9, 659, 4,
	1305, 1008, 127, 379, 973, 130, 569, 934, 601, 620,
	1039, 2080, 388, 932, 1618, 1876, 2080, 1608, 132, 2434,
	1836, 2253, 1266, 828, 2609, 1401, 568, 834, 131, 131,
	2650, 578, 1181, 2393, 131, 2332, 38, 121, 101, 131,
	737, 1861, 1869, 131, 131, 362, 131, 693, 38, 121,
	101, 131, 1605, 383, 131, 42, 997, 2640, 935, 1058,
	19, 936, 8, 133, 90, 6, 771, 1196, 131, 773,
	38, 121, 101, 30, 1616, 1055, 770, 969, 671, 2229,
	2057, 984, 593, 985, 2676, 128, 128, 1958, 564, 7,
	90, 128, 1340, 1341, 1944, 131, 1057, 38, 121, 101,
	128, 128, 1092, 128, 1096, 2674, 637, 998, 1051, 1076,
	555, 128, 554, 556, 557, 126, 558, 559, 978, 979,
	1045, 752, 114, 753, 579, 128, 2691, 2692, 1095, 976,
	764, 90, 975, 978, 979, 1315, 1108, 2430, 769, 1957,
	1917, 745, 2419, 747, 2610, 2611, 76, 2663, 2664, 2129,
	2513, 755, 128, 2130, 2516, 2131, 137, 710, 2436, 775,
	776, 777, 774, 2422, 2423, 2424, 2425, 709, 390, 2255,
	1856, 748, 380, 380, 720, 137, 2649, 1177, 711, 1353,
	1174, 1111, 2590, 708, 1176, 1173, 1175, 1179, 1180, 679,
	678, 680, 1178, 2237, 642, 1345, 705, 707, 1097, 2276,
	1612, 1349, 728, 1087, 595, 2398, 757, 2283, 758, 1783,
	2172, 1742, 1950, 571, 592, 591, 1964, 750, 1094, 677,
	122, 123, 2162, 124, 125, 720, 1684, 2073, 590, 2382,
	2170, 2496, 2075, 766, 807, 585, 760, 741, 2499, 100,
	424, 129, 2395, 425, 1237, 1236, 1866, 967, 2652, 2653,
	740, 704, 643, 2166, 2701, 2429, 767, 768, 2690, 743,
	119, 2431, 1846, 1118, 1121, 1122, 382, 682, 732, 381,
	2490, 746, 749, 2678, 1119, 751, 589, 706, 2529, 1110,
	588, 2167, 2168, 2774, 2790, 675, 580, 2712, 100, 120,
	129, 2673, 74, 42, 42, 742, 2169, 956, 2624, 2647,
	1617, 583, 756, 2719, 986, 683, 1622, 1624, 1625, 119,
	113, 112, 2620, 2621, 936, 2624, 44, 762, 763, 2483,
	2589, 581, 671, 2749, 2768, 1093, 1184, 1185, 1186, 1187,
	1188, 1189, 1182, 1183, 2452, 590, 2451, 761, 429, 2680,
	2681, 669, 2478, 676, 754, 2164, 2552, 722, 721, 1050,
	713, 714, 2576, 2577, 2578, 2580, 2579, 2474, 2630, 584,
	759, 1970, 1004, 1003, 744, 1972, 1973, 1974, 1975, 971,
	970, 931, 933, 988, 115, 116, 117, 730, 1914, 955,
	1606, 1606, 954, 729, 2791, 725, 726, 2785, 2797, 2758,
	2440, 671, 1606, 604, 2249, 701, 1633, 938, 722, 721,
	911, 2028, 2030, 389, 2511, 2241, 809, 810, 811, 812,
	2079, 84, 681, 996, 1862, 118, 778, 85, 1816, 1609,
	1325, 813, 978, 979, 737, 806, 2154, 2651, 594, 1276,
	941, 2083, 2078, 815, 977, 944, 943, 2750, 863, 715,
	384, 2135, 1620, 978, 979, 968, 2089, 2088, 974, 2032,
	946, 565, 565, 565, 1813, 821, 1020, 1020, 939, 940,
	1001, 942, 598, 599, 600, 39, 2612, 2613, 1619, 1343,
	86, 568, 1607, 380, 933, 1043, 1043, 1815, 1814, 87,
	37, 1354, 2679, 1046, 1963, 1120, 1344, 2394, 1812, 1022,
	1018, 1018, 102, 102, 1053, 2173, 1870, 1024, 102, 39,
	2588, 2163, 1342, 102, 736, 645, 772, 102, 102, 2784,
	102, 646, 2497, 2076, 1074, 102, 999, 1000, 102, 843,
	844, 2731, 773, 1849, 2165, 2399, 39, 1020, 1623, 1020,
	710, 1797, 102, 2803, 1059, 965, 1967, 1968, 1346, 638,
	1107, 1853, 981, 982, 1348, 1985, 1088, 2479, 2480, 2155,
	1966, 2802, 737, 2796, 649, 2029, 2793, 731, 638, 102,
	1049, 2747, 2748, 572, 1056, 2263, 1295, 2553, 2555, 2556,
	2557, 2554, 1693, 963, 964, 916, 669, 918, 2476, 2183,
	2775, 1978, 2475, 1861, 1083, 2770, 569, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 773,
	2446, 648, 1149, 1150, 1837, 651, 650, 88, 89, 93,
	1159, 948, 958, 962, 962, 962, 2761, 773, 640, 1205,
	1379, 639, 2794, 1112, 987, 1295, 989, 1069, 1070, 1211,
	958, 980, 958, 1660, 983, 1798, 1659, 640, 42, 1213,
	639, 1218, 1219, 2760, 1104, 1643, 1614, 42, 1986, 992,
	1002, 2771, 1082, 565, 1079, 993, 994, 1078, 1746, 1011,
	1012, 1013, 472, 92, 1986, 1014, 1015, 1089, 1042, 1042,
	775, 776, 777, 774, 1085, 1025, 1101, 362, 912, 2735,
	2705, 2698, 1614, 1123, 1798, 1060, 1037, 1798, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1065, 1044, 1038, 2693, 1952,
	1825, 1259, 773, 1238, 1979, 363, 1825, 1244, 92, 1614,
	1605, 2682, 1061, 2668, 1642, 1073, 2645, 2644, 1698, 569,
	1081, 2643, 1080, 1072, 1077, 1252, 2642, 2632, 1279, 1098,
	1020, 1090, 1664, 1286, 1103, 1697, 1204, 735, 604, 1377,
	1260, 1293, 2508, 2200, 1020, 1614, 2706, 2501, 1303, 1192,
	1285, 1195, 1745, 373, 1596, 1206, 959, 1113, 1114, 1115,
	1116, 1117, 734, 947, 2501, 1212, 1148, 1214, 1241, 2507,
	1152, 1005, 1263, 1142, 2755, 1320, 1320, 1825, 1303, 2669,
	1303, 1365, 2501, 2501, 1279, 1020, 1339, 2501, 1250, 1251,
	2500, 672, 2501, 2633, 2707, 92, 565, 1318, 1020, 2317,
	1156, 1157, 1158, 775, 776, 777, 774, 1193, 2509, 1277,
	2047, 1199, 2023, 2298, 1278, 2184, 1194, 1287, 1288, 2042,
	1284, 1279, 1020, 1988, 1370, 137, 137, 1864, 775, 776,
	777, 774, 735, 1381, 2282, 1763, 1215, 137, 686, 691,
	692, 1863, 1205, 1397, 1255, 695, 1258, 1696, 1205, 1205,
	737, 1309, 1372, 1372, 960, 1373, 2501, 1855, 1779, 1656,
	1322, 1233, 1644, 1595, 1372, 2048, 1387, 1316, 1317, 1384,
	1326, 1414, 2108, 1940, 703, 1300, 2048, 1293, 1798, 1283,
	696, 1020, 1062, 910, 1350, 1307, 1308, 1938, 2151, 2154,
	1311, 1312, 1936, 1297, 1934, 1267, 1922, 1264, 1313, 819,
	1261, 1268, 1878, 723, 1271, 703, 1415, 1367, 1859, 1851,
	1847, 790, 1369, 1355, 1216, 1217, 1296, 1843, 1220, 1221,
	1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1762, 1694, 1597, 1290, 1283, 1289, 1627, 1314, 647, 1941,
	2072, 1198, 1197, 1603, 1668, 1630, 1631, 596, 1323, 1299,
	1324, 1306, 1667, 1939, 2188, 958, 2070, 952, 1935, 1395,
	1935, 1811, 773, 1613, 1066, 1395, 1884, 1310, 773, 1363,
	1364, 1101, 1321, 582, 1763, 1844, 1848, 1327, 962, 959,
	1328, 2744, 1009, 1844, 2732, 1960, 1351, 1155, 2634, 42,
	1007, 2071, 1264, 1010, 1602, 1374, 1763, 1693, 1264, 1264,
	2201, 671, 2081, 1366, 688, 689, 690, 671, 1368, 1665,
	773, 1854, 2155, 1360, 1361, 1362, 1672, 2148, 773, 1818,
	1385, 2149, 2152, 1893, 712, 777, 774, 703, 1147, 1614,
	1067, 1224, 1280, 92, 92, 672, 2667, 1413, 1407, 1402,
	1408, 1594, 774, 1145, 1146, 1144, 1593, 2486, 2485, 909,
	906, 907, 908, 2767, 1155, 1898, 1638, 1897, 1896, 1894,
	2272, 1598, 2267, 2046, 652, 428, 710, 2469, 137, 644,
	1006, 2779, 2563, 2153, 2764, 2729, 1708, 960, 137, 137,
	1760, 2561, 2713, 1621, 793, 794, 795, 796, 797, 790,
	1303, 2559, 2549, 671, 641, 1740, 2766, 1626, 1700, 1701,
	2601, 1772, 2569, 2547, 805, 1755, 1756, 2546, 2396, 1629,
	2562, 1209, 1628, 1303, 695, 2545, 1637, 1142, 2542, 2560,
	1895, 1210, 2536, 2359, 2533, 2532, 2279, 1339, 1771, 2558,
	2548, 2280, 2171, 460, 469, 2127, 1635, 2126, 461, 1639,
	468, 462, 466, 465, 463, 464, 2397, 2066, 2044, 696,
	1739, 1692, 775, 776, 777, 774, 1020, 1754, 791, 792,
	793, 794, 795, 796, 797, 790, 710, 1691, 1043, 2281,
	1339, 1690, 1686, 1830, 1685, 1832, 1708, 1063, 1805, 1805,
	1650, 1805, 1205, 1279, 1654, 929, 1769, 2157, 2700, 424,
	1823, 470, 425, 2684, 2341, 2568, 2331, 1773, 1774, 2101,
	2665, 1666, 2628, 1808, 1669, 1670, 1671, 2627, 2617, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1689, 1682, 2550,
	2543, 467, 1806, 2539, 1810, 1753, 775, 776, 777, 774,
	697, 698, 699, 1775, 919, 1886, 1776, 1777, 2538, 2537,
	1702, 1899, 1900, 2498, 2100, 1652, 1829, 1840, 1747, 1845,
	2471, 2441, 2367, 2435, 1767, 1839, 2329, 2327, 1908, 2685,
	1768, 2290, 1827, 2278, 1770, 2277, 775, 776, 777, 774,
	2274, 1834, 2240, 2795, 1780, 1875, 2377, 2772, 1778, 1764,
	1784, 775, 776, 777, 774, 2635, 671, 2134, 2125, 2370,
	775, 776, 777, 774, 2110, 2365, 2077, 2045, 1651, 2035,
	2380, 2381, 511, 510, 2175, 2519, 2366, 781, 782, 783,
	784, 785, 786, 787, 779, 1819, 1820, 1821, 1695, 962,
	775, 776, 777, 774, 1688, 1828, 1826, 1386, 1273, 2345,
	1064, 1647, 1026, 775, 776, 777, 774, 363, 1781, 842,
	2349, 2371, 838, 837, 1264, 1264, 1264, 789, 788, 798,
	799, 791, 792, 793, 794, 795, 796, 797, 790, 2594,
	2338, 1042, 820, 92, 2340, 2342, 2344, 92, 2346, 2347,
	2348, 2350, 2351, 2352, 2354, 2355, 2356, 2357, 92, 2495,
	2292, 775, 776, 777, 774, 2291, 1857, 92, 131, 2323,
	2262, 121, 101, 2251, 2250, 2233, 1020, 2219, 1020, 2218,
	1020, 775, 776, 777, 774, 710, 775, 776, 777, 774,
	2360, 775, 776, 777, 774, 1871, 2322, 789, 788, 798,
	799, 791, 792, 793, 794, 795, 796, 797, 790, 2379,
	2189, 2147, 1867, 2109, 1020, 1902, 1662, 2106, 775, 776,
	777, 774, 2099, 2091, 2086, 128, 2358, 1909, 2244, 2039,
	1951, 1020, 2104, 2765, 1937, 1933, 2373, 1932, 1673, 1663,
	1661, 1911, 1658, 2337, 2103, 1640, 1901, 1657, 1018, 1655,
	775, 776, 777, 774, 775, 776, 777, 774, 2372, 2374,
	1649, 1646, 1645, 1910, 1208, 1018, 775, 776, 777, 774,
	1207, 1029, 2353, 131, 2102, 1027, 2792, 2743, 2489, 2343,
	789, 788, 798, 799, 791, 792, 793, 794, 795, 796,
	797, 790, 2737, 2720, 2717, 1888, 775, 776, 777, 774,
	1868, 775, 776, 777, 774, 2715, 835, 2600, 2585, 2573,
	137, 2570, 2565, 2525, 1240, 2493, 1020, 1882, 2492, 2491,
	2488, 2482, 2467, 1858, 1860, 1101, 2382, 2309, 1984, 1865,
	128, 2307, 1942, 2285, 1990, 2273, 1918, 1954, 2368, 950,
	1252, 1923, 2112, 1249, 2378, 1242, 2052, 1879, 1931, 1981,
	1999, 1980, 137, 1955, 1254, 1982, 710, 1339, 1339, 1339,
	1339, 1930, 1257, 1953, 1246, 1850, 2006, 1892, 710, 1339,
	775, 776, 777, 774, 2725, 1929, 817, 1881, 2006, 2000,
	1977, 1817, 1761, 775, 776, 777, 774, 1020, 1143, 128,
	1392, 1375, 1275, 1247, 1086, 137, 137, 775, 776, 777,
	774, 31, 1885, 1250, 1251, 1052, 913, 861, 860, 859,
	858, 1903, 1904, 857, 2022, 1205, 1906, 1907, 856, 2053,
	855, 854, 2037, 2038, 1205, 1805, 1991, 1947, 1912, 853,
	852, 851, 1020, 850, 849, 2002, 848, 1993, 1338, 847,
	846, 1995, 845, 841, 2064, 840, 839, 836, 832, 831,
	1969, 829, 828, 1255, 827, 1258, 1989, 1264, 826, 825,
	1945, 1946, 1271, 824, 42, 1283, 823, 1976, 1992, 19,
	1753, 8, 1983, 822, 6, 818, 1996, 1997, 2049, 2065,
	1998, 2021, 30, 2001, 816, 2007, 2008, 2009, 2010, 1263,
	2019, 2058, 2018, 2061, 672, 2020, 2003, 2059, 7, 739,
	672, 569, 573, 574, 575, 576, 1766, 2033, 2092, 92,
	2036, 2094, 1749, 2096, 727, 572, 2723, 2031, 2204, 2205,
	2689, 2074, 2069, 710, 2043, 2207, 710, 1971, 1824, 1389,
	2160, 738, 2050, 1708, 2060, 2210, 2144, 2056, 2054, 2062,
	2063, 2015, 137, 2013, 2209, 2012, 2016, 2068, 2014, 2778,
	2011, 710, 710, 1994, 2741, 2082, 1339, 1760, 1391, 2187,
	2051, 2144, 2144, 2084, 1028, 2191, 2090, 1852, 2017, 2176,
	1794, 1795, 2093, 2160, 1390, 2097, 2098, 2095, 1790, 1793,
	1794, 1795, 1791, 2111, 1792, 1796, 805, 2113, 2114, 2115,
	2116, 1949, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2137, 789, 788, 798, 799, 791, 792, 793, 794, 795,
	796, 797, 790, 1902, 1264, 1880, 2132, 2133, 1264, 1279,
	2312, 75, 2311, 1279, 41, 40, 1754, 2136, 1234, 2177,
	2178, 2179, 2185, 1838, 1877, 134, 2138, 789, 788, 798,
	799, 791, 792, 793, 794, 795, 796, 797, 790, 137,
	2085, 1872, 2180, 2181, 137, 2182, 2310, 2186, 2190, 1700,
	1701, 1743, 2192, 2193, 359, 915, 733, 360, 361, 2527,
	2199, 2197, 2105, 2198, 2208, 358, 2238, 2225, 2196, 2301,
	2261, 2242, 2195, 1291, 2212, 2211, 1274, 2227, 2656, 2230,
	991, 2215, 2216, 2217, 1198, 1197, 2231, 990, 2194, 927,
	928, 1928, 2234, 925, 926, 2228, 765, 2224, 2232, 2739,
	2214, 801, 1592, 804, 923, 924, 921, 922, 2266, 953,
	917, 2738, 2236, 775, 776, 777, 774, 2235, 802, 803,
	800, 2239, 789, 788, 798, 799, 791, 792, 793, 794,
	795, 796, 797, 790, 2618, 2605, 2221, 2603, 1020, 1020,
	1927, 2530, 2526, 2518, 1339, 2295, 789, 788, 798, 799,
	791, 792, 793, 794, 795, 796, 797, 790, 2517, 2515,
	2416, 710, 775, 776, 777, 774, 2415, 2246, 1926, 1807,
	2286, 2006, 1018, 2288, 2328, 1925, 2260, 2325, 2257, 2265,
	2259, 2256, 2222, 2271, 1924, 2314, 920, 1205, 572, 2264,
	775, 776, 777, 774, 2270, 2041, 1805, 775, 776, 777,
	774, 2067, 2269, 2303, 2269, 2297, 775, 776, 777, 774,
	1295, 1648, 1338, 573, 574, 575, 576, 2727, 2726, 2726,
	2294, 724, 2727, 2484, 710, 2226, 572, 966, 2386, 2388,
	2305, 2386, 2386, 49, 2144, 1921, 2304, 2302, 1, 2293,
	1272, 2296, 577, 1388, 2024, 2025, 710, 2299, 2213, 2027,
	2300, 2324, 2315, 1920, 1610, 2243, 1782, 775, 776, 777,
	774, 1741, 2245, 2318, 2316, 2174, 945, 597, 1293, 1200,
	2413, 1071, 685, 719, 2326, 775, 776, 777, 774, 2383,
	1068, 2387, 1919, 2361, 718, 716, 1153, 474, 2432, 1400,
	2566, 2333, 2412, 2438, 2389, 2390, 1915, 2442, 2655, 2702,
	2599, 2658, 2410, 1905, 775, 776, 777, 774, 1084, 458,
	2510, 2406, 2405, 2297, 2128, 1883, 2391, 2418, 775, 776,
	777, 774, 1641, 2411, 2512, 775, 776, 777, 774, 2420,
	2417, 2409, 1020, 1943, 2320, 2055, 2470, 775, 776, 777,
	774, 616, 505, 137, 775, 776, 777, 774, 481, 2407,
	2408, 830, 2388, 1054, 1047, 1264, 2445, 1913, 2306, 687,
	480, 2308, 2284, 1965, 684, 617, 2288, 1683, 2252, 1235,
	2487, 1256, 1239, 2788, 2777, 2313, 2756, 2736, 2383, 2443,
	2444, 2472, 2447, 2448, 2449, 2450, 2468, 2107, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2623, 2531, 2494, 2773, 1151, 2502, 2672, 2718,
	2428, 2506, 2426, 2427, 2711, 2505, 2619, 2504, 2514, 395,
	1347, 563, 656, 2586, 1765, 2648, 2564, 2392, 775, 776,
	777, 774, 2572, 586, 789, 788, 798, 799, 791, 792,
	793, 794, 795, 796, 797, 790, 1748, 587, 1751, 710,
	1750, 1124, 710, 710, 710, 780, 1141, 2247, 2544, 2248,
	814, 434, 710, 1636, 446, 1962, 2376, 2034, 48, 1805,
	2597, 47, 46, 45, 2574, 1380, 1410, 2582, 2583, 2584,
	476, 2571, 139, 1411, 2614, 2433, 2615, 2534, 2535, 2593,
	1634, 2660, 2581, 2540, 2541, 1020, 1020, 2592, 456, 2595,
	2604, 2608, 2606, 2607, 2602, 2596, 455, 454, 453, 1789,
	1787, 2616, 789, 788, 798, 799, 791, 792, 793, 794,
	795, 796, 797, 790, 1786, 1334, 137, 2625, 2626, 1018,
	1018, 1333, 1378, 2686, 710, 788, 798, 799, 791, 792,
	793, 794, 795, 796, 797, 790, 710, 2638, 2639, 2481,
	2551, 2477, 2473, 1372, 2629, 2631, 2335, 2503, 2362, 2641,
	2637, 2662, 2363, 2369, 868, 1181, 864, 866, 867, 865,
	1891, 2646, 1785, 1887, 2142, 2661, 2143, 2140, 930, 710,
	2437, 2654, 2524, 2258, 1706, 1704, 2206, 2202, 1396, 2670,
	2666, 1269, 1948, 1335, 92, 1790, 1793, 1794, 1795, 1791,
	1331, 1792, 1796, 2404, 2675, 2677, 566, 32, 27, 5,
	29, 28, 775, 776, 777, 774, 2683, 14, 15, 1338,
	1338, 1338, 1338, 13, 1075, 12, 18, 26, 2704, 25,
	2709, 1338, 710, 2694, 2695, 2696, 2697, 24, 23, 2710,
	83, 82, 1107, 2714, 81, 2716, 80, 2708, 884, 798,
	799, 791, 792, 793, 794, 795, 796, 797, 790, 22,
	11, 79, 78, 2721, 77, 2724, 21, 2662, 2734, 2722,
	20, 73, 71, 72, 59, 2524, 710, 58, 710, 2728,
	2730, 2661, 2733, 2740, 92, 2742, 1107, 1181, 1107, 2745,
	57, 2699, 70, 69, 68, 67, 66, 65, 64, 615,
	2751, 56, 55, 2704, 710, 2752, 54, 53, 2759, 63,
	1177, 2763, 62, 1174, 1107, 61, 2769, 1176, 1173, 1175,
	1179, 1180, 60, 52, 2636, 1178, 51, 50, 99, 98,
	97, 96, 95, 94, 33, 34, 35, 2776, 36, 2783,
	109, 108, 110, 2787, 111, 106, 2786, 104, 872, 107,
	105, 103, 43, 10, 17, 2798, 2, 2783, 0, 2800,
	2801, 2799, 2787, 0, 0, 0, 892, 896, 898, 900,
	902, 903, 905, 0, 909, 906, 907, 908, 0, 0,
	887, 888, 889, 890, 870, 871, 893, 0, 873, 0,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	885, 891, 0, 0, 0, 0, 0, 0, 0, 895,
	897, 899, 901, 904, 0, 0, 0, 0, 1338, 0,
	0, 2524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1177, 0, 0, 1174, 0, 0, 0, 1176,
	1173, 1175, 1179, 1180, 0, 886, 0, 1178, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1184,
	1185, 1186, 1187, 1188, 1189, 1182, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 0, 92, 0, 0, 0, 2754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 1890, 0, 0,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1184, 1185, 1186, 1187, 1188, 1189, 1182, 1183, 0,
	0, 0, 0, 0, 1526, 1568, 0, 0, 1515, 307,
	1473, 1528, 1446, 1462, 1536, 1463, 1464, 1501, 1425, 1483,
	269, 1460, 0, 0, 0, 0, 1338, 0, 1518, 1417,
	1449, 1450, 1419, 1456, 1420, 1447, 1475, 214, 1445, 1486,
	239, 1498, 1459, 1480, 1534, 0, 0, 299, 253, 0,
	0, 1478, 1520, 1481, 1506, 1472, 1502, 1433, 1494, 1529,
	1461, 0, 1499, 1530, 0, 0, 0, 0, 697, 698,
	699, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 1497, 1524, 1458, 0, 198, 1527, 1479, 1500, 0,
	0, 1418, 1495, 0, 1423, 1426, 1535, 1522, 1453, 1454,
	894, 0, 0, 0, 92, 0, 0, 0, 1476, 1482,
	1503, 1469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1451, 0, 1491, 0, 0, 0, 1428, 1424, 0,
	1474, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 92, 1567, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 1427, 328, 190, 1562, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 1546,
	1547, 1548, 1549, 1550, 356, 1558, 1559, 0, 1563, 1564,
	1565, 1432, 0, 1452, 1504, 0, 1416, 1591, 1513, 1521,
	1471, 330, 1523, 1468, 1467, 1553, 0, 1552, 303, 1554,
	1555, 238, 1519, 1448, 1457, 346, 1455, 289, 271, 1525,
	1490, 1566, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 1551, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	1560, 0, 1561, 342, 221, 178, 179, 325, 0, 267,
	0, 1516, 1421, 1431, 1429, 1465, 1492, 1493, 263, 341,
	1508, 1512, 1509, 1537, 292, 0, 0, 0, 0, 0,
	232, 273, 1510, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1422, 0, 300, 323, 335, 352,
	355, 1569, 1570, 1571, 183, 354, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 326, 1466, 1439, 1477, 334, 1442, 1440,
	1507, 1441, 1496, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 1487, 1470, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1488, 1580, 1581, 1582, 1583, 1584, 1444, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 1514,
	1585, 1586, 1587, 1588, 1589, 1590, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 1438, 1443, 1437, 1484, 1485, 1531, 1532, 1533, 1505,
	1430, 1517, 0, 1434, 1436, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 307, 487, 1489, 180,
	0, 240, 1538, 281, 219, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 479, 0, 0, 299, 253, 0, 0, 0, 0,
	534, 542, 0, 1556, 1557, 338, 339, 340, 324, 0,
	211, 1579, 441, 0, 0, 473, 511, 510, 460, 469,
	0, 0, 195, 461, 0, 468, 462, 466, 465, 463,
	464, 0, 526, 0, 0, 0, 0, 0, 0, 432,
	445, 2521, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	488, 0, 444, 0, 0, 451, 470, 471, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 467, 486, 490, 207,
	548, 484, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 549, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 330, 0,
	0, 532, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 485, 0, 289, 271, 545, 433, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 530, 267, 0, 544, 525,
	527, 528, 531, 535, 536, 537, 538, 539, 541, 543,
	547, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 2522, 0, 0, 0, 2523, 0,
	546, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	489, 257, 258, 259, 260, 533, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 555, 529,
	554, 556, 557, 553, 558, 559, 540, 452, 0, 493,
	551, 550, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 518, 498, 499, 500, 450, 501, 496, 497,
	519, 491, 515, 516, 475, 494, 502, 514, 503, 517,
	520, 521, 560, 561, 509, 562, 506, 522, 513, 512,
	504, 492, 523, 524, 478, 477, 507, 508, 495, 307,
	487, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 479, 0, 0, 299, 253, 0,
	0, 0, 0, 534, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 473, 511,
	510, 460, 469, 0, 0, 195, 461, 0, 468, 462,
	466, 465, 463, 464, 0, 526, 0, 0, 0, 0,
	0, 0, 432, 445, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 488, 0, 444, 0, 0, 451, 470,
	471, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 467,
	486, 490, 207, 548, 484, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	549, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 330, 0, 0, 532, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 485, 0, 289, 271, 545,
	433, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	1202, 1201, 1203, 342, 221, 178, 179, 325, 530, 267,
	0, 544, 525, 527, 528, 531, 535, 536, 537, 538,
	539, 541, 543, 547, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 489, 257, 258, 259, 260, 533, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 555, 529, 554, 556, 557, 553, 558, 559, 540,
	452, 0, 493, 551, 550, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 518, 498, 499, 500, 450,
	501, 496, 497, 519, 491, 515, 516, 475, 494, 502,
	514, 503, 517, 520, 521, 560, 561, 509, 562, 506,
	522, 513, 512, 504, 492, 523, 524, 478, 477, 507,
	508, 495, 307, 487, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 479, 0, 0,
	299, 253, 0, 0, 0, 0, 534, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 473, 511, 510, 460, 469, 0, 0, 195, 461,
	0, 468, 462, 466, 465, 463, 464, 0, 526, 0,
	0, 0, 0, 0, 0, 432, 445, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 488, 0, 444, 0,
	0, 451, 470, 471, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 467, 486, 490, 207, 548, 484, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 549, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 330, 0, 0, 532, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 485, 0,
	289, 271, 545, 433, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 530, 267, 0, 544, 525, 527, 528, 531, 535,
	536, 537, 538, 539, 541, 543, 547, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	2522, 0, 0, 0, 2523, 0, 546, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 489, 257, 258, 259,
	260, 533, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 555, 529, 554, 556, 557, 553,
	558, 559, 540, 452, 0, 493, 551, 550, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 518, 498,
	499, 500, 450, 501, 496, 497, 519, 491, 515, 516,
	475, 494, 502, 514, 503, 517, 520, 521, 560, 561,
	509, 562, 506, 522, 513, 512, 504, 492, 523, 524,
	478, 477, 507, 508, 495, 307, 487, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 448,
	0, 0, 0, 214, 1265, 0, 239, 0, 0, 0,
	479, 0, 0, 299, 253, 0, 0, 0, 0, 534,
	542, 0, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 441, 0, 0, 473, 511, 510, 460, 469, 0,
	0, 195, 461, 0, 468, 462, 466, 465, 463, 464,
	0, 526, 0, 0, 0, 0, 0, 0, 432, 445,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 488,
	0, 444, 0, 0, 1358, 470, 471, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 467, 486, 490, 207, 548,
	484, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 549, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 330, 0, 0,
	532, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 485, 0, 289, 271, 545, 433, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 530, 267, 0, 544, 525, 527,
	528, 531, 535, 536, 537, 538, 539, 541, 543, 547,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 489,
	257, 258, 259, 260, 533, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 555, 529, 554,
	556, 557, 553, 558, 559, 540, 452, 0, 493, 551,
	550, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 518, 498, 499, 500, 450, 501, 496, 497, 519,
	491, 515, 516, 475, 494, 502, 514, 503, 517, 520,
	521, 560, 561, 509, 562, 506, 522, 513, 512, 504,
	492, 523, 524, 478, 477, 507, 508, 495, 131, 307,
	487, 338, 339, 340, 324, 0, 211, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 808, 0, 0, 299, 253, 0,
	0, 0, 0, 534, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 473, 511,
	510, 460, 469, 0, 0, 195, 461, 0, 468, 462,
	466, 465, 463, 464, 0, 526, 0, 0, 0, 0,
	0, 0, 432, 445, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 488, 0, 444, 0, 0, 451, 470,
	471, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 467,
	486, 490, 207, 548, 484, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	549, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 330, 0, 0, 532, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 485, 0, 289, 271, 545,
	433, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 530, 267,
	0, 544, 525, 527, 528, 531, 535, 536, 537, 538,
	539, 541, 543, 547, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 489, 257, 258, 259, 260, 533, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 555, 529, 554, 556, 557, 553, 558, 559, 540,
	452, 0, 493, 551, 550, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 102, 281, 219, 518, 498, 499, 500, 450,
	501, 496, 497, 519, 491, 515, 516, 475, 494, 502,
	514, 503, 517, 520, 521, 560, 561, 509, 562, 506,
	522, 513, 512, 504, 492, 523, 524, 478, 477, 507,
	508, 495, 307, 487, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 0,
	214, 2753, 0, 239, 0, 0, 0, 479, 0, 0,
	299, 253, 0, 0, 0, 0, 534, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 473, 511, 510, 460, 469, 0, 0, 195, 461,
	0, 468, 462, 466, 465, 463, 464, 0, 526, 0,
	0, 0, 0, 0, 0, 432, 445, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 488, 0, 444, 0,
	0, 451, 470, 471, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 467, 486, 490, 207, 548, 484, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 549, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 330, 0, 0, 532, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 485, 0,
	289, 271, 545, 433, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 530, 267, 0, 544, 525, 527, 528, 531, 535,
	536, 537, 538, 539, 541, 543, 547, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 489, 257, 258, 259,
	260, 533, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 555, 529, 554, 556, 557, 553,
	558, 559, 540, 452, 0, 493, 551, 550, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 518, 498,
	499, 500, 450, 501, 496, 497, 519, 491, 515, 516,
	475, 494, 502, 514, 503, 517, 520, 521, 560, 561,
	509, 562, 506, 522, 513, 512, 504, 492, 523, 524,
	478, 477, 507, 508, 495, 307, 487, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 448,
	0, 0, 0, 214, 1265, 0, 239, 0, 0, 0,
	479, 0, 0, 299, 253, 0, 0, 0, 0, 534,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 473, 511, 510, 460, 469, 0,
	0, 195, 461, 0, 468, 462, 466, 465, 463, 464,
	0, 526, 0, 0, 0, 0, 0, 0, 432, 445,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 488,
	0, 444, 0, 0, 451, 470, 471, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 467, 486, 490, 207, 548,
	484, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 549, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 330, 0, 0,
	532, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 485, 0, 289, 271, 545, 433, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 530, 267, 0, 544, 525, 527,
	528, 531, 535, 536, 537, 538, 539, 541, 543, 547,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 489,
	257, 258, 259, 260, 533, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 555, 529, 554,
	556, 557, 553, 558, 559, 540, 452, 0, 493, 551,
	550, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 518, 498, 499, 500, 450, 501, 496, 497, 519,
	491, 515, 516, 475, 494, 502, 514, 503, 517, 520,
	521, 560, 561, 509, 562, 506, 522, 513, 512, 504,
	492, 523, 524, 478, 477, 507, 508, 495, 307, 487,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 479, 0, 0, 299, 253, 0, 0,
	0, 0, 534, 542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 441, 0, 0, 473, 511, 510,
	460, 469, 0, 0, 195, 461, 0, 468, 462, 466,
	465, 463, 464, 0, 526, 0, 0, 0, 0, 0,
	0, 432, 445, 0, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 443, 1041, 0,
	0, 0, 488, 0, 444, 0, 0, 451, 470, 471,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 467, 486,
	490, 207, 548, 484, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 549,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	330, 0, 0, 532, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 485, 0, 289, 271, 545, 433,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 530, 267, 0,
	544, 525, 527, 528, 531, 535, 536, 537, 538, 539,
	541, 543, 547, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 489, 257, 258, 259, 260, 533, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	555, 529, 554, 556, 557, 553, 558, 559, 540, 452,
	0, 493, 551, 550, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 518, 498, 499, 500, 450, 501,
	496, 497, 519, 491, 515, 516, 475, 494, 502, 514,
	503, 517, 520, 521, 560, 561, 509, 562, 506, 522,
	513, 512, 504, 492, 523, 524, 478, 477, 507, 508,
	495, 0, 0, 0, 338, 339, 340, 324, 0, 211,
	307, 487, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 479, 0, 0, 299, 253,
	0, 0, 0, 0, 534, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 473,
	511, 510, 460, 469, 0, 0, 195, 461, 0, 468,
	462, 466, 465, 463, 464, 0, 526, 0, 0, 0,
	0, 0, 0, 432, 445, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 488, 0, 444, 0, 0, 451,
	470, 471, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	467, 486, 490, 207, 548, 484, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 549, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 330, 0, 0, 532, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 485, 0, 289, 271,
	545, 433, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 530,
	267, 0, 544, 525, 527, 528, 531, 535, 536, 537,
	538, 539, 541, 543, 547, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 489, 257, 258, 259, 260, 533,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 555, 529, 554, 556, 557, 553, 558, 559,
	540, 452, 0, 493, 551, 550, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 518, 498, 499, 500,
	450, 501, 496, 497, 519, 491, 515, 516, 475, 494,
	502, 514, 503, 517, 520, 521, 560, 561, 509, 562,
	506, 522, 513, 512, 504, 492, 523, 524, 478, 477,
	507, 508, 495, 307, 487, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 448, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 479, 0,
	0, 299, 253, 0, 0, 0, 0, 534, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	0, 0, 473, 511, 510, 460, 469, 0, 0, 195,
	461, 0, 468, 462, 466, 465, 463, 464, 0, 526,
	0, 0, 0, 0, 0, 0, 432, 445, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 488, 0, 444,
	0, 0, 451, 470, 471, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 467, 486, 490, 207, 548, 484, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 549, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 330, 0, 0, 532, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 485,
	0, 289, 271, 545, 433, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 530, 267, 0, 544, 525, 527, 528, 531,
	535, 536, 537, 538, 539, 541, 543, 547, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 489, 257, 258,
	259, 260, 533, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 555, 529, 554, 556, 557,
	553, 558, 559, 540, 452, 0, 493, 551, 550, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 518,
	498, 499, 500, 450, 501, 496, 497, 519, 491, 515,
	516, 475, 494, 502, 514, 503, 517, 520, 521, 560,
	561, 509, 562, 506, 522, 513, 512, 504, 492, 523,
	524, 478, 477, 507, 508, 495, 307, 487, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1125, 0, 0, 0,
	448, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 479, 0, 0, 299, 253, 0, 0, 0, 0,
	534, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 473, 511, 510, 460, 469,
	0, 0, 195, 461, 0, 468, 462, 466, 465, 463,
	464, 0, 526, 0, 0, 0, 0, 0, 0, 0,
	445, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	488, 0, 444, 0, 0, 451, 470, 471, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 467, 486, 490, 207,
	548, 484, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 549, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 330, 0,
	0, 532, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 485, 0, 289, 271, 545, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 1126,
	1127, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 530, 267, 0, 544, 525,
	527, 528, 531, 535, 536, 537, 538, 539, 541, 543,
	547, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	489, 257, 258, 259, 260, 533, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 555, 529,
	554, 556, 557, 553, 558, 559, 540, 452, 0, 493,
	551, 550, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 518, 498, 499, 500, 450, 501, 496, 497,
	519, 491, 515, 516, 475, 494, 502, 514, 503, 517,
	520, 521, 560, 561, 509, 562, 506, 522, 513, 512,
	504, 492, 523, 524, 478, 477, 507, 508, 495, 307,
	487, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 479, 0, 0, 299, 253, 0,
	0, 0, 0, 534, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 511,
	510, 460, 469, 0, 0, 195, 461, 0, 468, 462,
	466, 465, 463, 464, 0, 526, 0, 0, 0, 0,
	0, 0, 432, 445, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 488, 0, 444, 0, 0, 451, 470,
	471, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 467,
	486, 490, 207, 548, 484, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	549, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 330, 0, 0, 532, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 485, 0, 289, 271, 545,
	433, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 530, 267,
	0, 544, 525, 527, 528, 531, 535, 536, 537, 538,
	539, 541, 543, 547, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 489, 257, 258, 259, 260, 533, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 555, 529, 554, 556, 557, 553, 558, 559, 540,
	452, 0, 493, 551, 550, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 518, 498, 499, 500, 450,
	501, 496, 497, 519, 491, 515, 516, 475, 494, 502,
	514, 503, 517, 520, 521, 560, 561, 509, 562, 506,
	522, 513, 512, 504, 492, 523, 524, 478, 477, 507,
	508, 495, 307, 487, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 479, 0, 0,
	299, 253, 0, 0, 0, 0, 534, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 473, 511, 510, 460, 469, 0, 0, 195, 461,
	0, 468, 462, 466, 465, 463, 464, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 445, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 488, 0, 444, 0,
	0, 451, 470, 471, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 467, 486, 490, 207, 548, 484, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 549, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 330, 0, 0, 532, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 485, 0,
	289, 271, 545, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 530, 267, 0, 544, 525, 527, 528, 531, 535,
	536, 537, 538, 539, 541, 543, 547, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 489, 257, 258, 259,
	260, 533, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 555, 529, 554, 556, 557, 553,
	558, 559, 540, 452, 0, 493, 551, 550, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 518, 498,
	499, 500, 450, 501, 496, 497, 519, 491, 515, 516,
	475, 494, 502, 514, 503, 517, 520, 521, 560, 561,
	509, 562, 506, 522, 513, 512, 504, 492, 523, 524,
	478, 477, 507, 508, 495, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 0,
	1738, 1735, 1736, 1737, 266, 0, 1722, 1723, 1724, 1725,
	870, 1709, 1728, 0, 1710, 265, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 885, 1726, 277, 243,
	278, 230, 255, 254, 256, 895, 897, 899, 901, 904,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 1721, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 894, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 0,
	0, 338, 339, 340, 324, 0, 211, 131, 307, 38,
	121, 101, 0, 0, 0, 0, 0, 0, 0, 269,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 368, 370, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 39, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 102, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 2151, 2154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2155, 330, 0, 0, 0, 2148, 0, 2147,
	303, 2149, 2152, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 2153, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 1383, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 775, 776, 777, 774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 655, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 663, 664, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 640, 328, 190, 639, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 653, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	654, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 657, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 665, 660, 661, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	131, 307, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 90, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 1403, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 102, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 131, 307, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	90, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 1394, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 102, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 131, 307,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 90, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 102, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 663, 664, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 640, 328, 190,
	639, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 665,
	660, 661, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 1023, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 1021, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1019, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 1017, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	1021, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1019, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2657, 0,
	138, 511, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 1021, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1019, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 1021,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2289, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 1822,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 1021, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2762, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 511, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2671, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2403, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 2598, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 2414, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 2159, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 1021, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 1831, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 0, 0, 338, 339, 340, 324, 307,
	211, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 1021, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 1298, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 386, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 387, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 426, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 697, 698, 699, 1803, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 307, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 269, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 697, 698, 699, 1803, 0,
	0, 0, 195, 180, 0, 240, 0, 281, 219, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 307,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	269, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 697, 698,
	699, 0, 0, 0, 0, 195, 180, 0, 240, 0,
	281, 219, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	884, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 0,
	872, 0, 0, 0, 862, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 0, 0, 0, 892, 896,
	898, 900, 902, 903, 905, 0, 909, 906, 907, 908,
	0, 0, 887, 888, 889, 890, 870, 871, 893, 0,
	873, 0, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 885, 891, 0, 338, 339, 340, 324, 638,
	211, 895, 897, 899, 901, 904, 0, 0, 0, 0,
	0, 0, 872, 0, 0, 0, 0, 0, 0, 2359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	892, 896, 898, 900, 902, 903, 905, 886, 909, 906,
	907, 908, 0, 0, 887, 888, 889, 890, 870, 871,
	893, 0, 873, 1754, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 885, 891, 0, 0, 0, 0,
	0, 0, 0, 895, 897, 899, 901, 904, 640, 0,
	2782, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	2341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 607, 2359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 0,
	405, 412, 402, 0, 0, 2341, 0, 0, 0, 0,
	0, 0, 409, 410, 0, 411, 415, 0, 0, 397,
	0, 0, 406, 0, 405, 412, 402, 0, 0, 420,
	0, 0, 0, 0, 0, 2345, 409, 410, 605, 411,
	415, 0, 0, 397, 0, 0, 2349, 0, 0, 608,
	633, 0, 0, 420, 0, 0, 0, 0, 424, 0,
	0, 425, 0, 0, 0, 0, 2338, 0, 0, 0,
	2340, 2342, 2344, 628, 2346, 2347, 2348, 2350, 2351, 2352,
	2354, 2355, 2356, 2357, 0, 0, 406, 0, 405, 412,
	402, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 0, 411, 415, 629, 634, 397, 0, 0,
	0, 0, 0, 0, 0, 0, 2360, 420, 0, 0,
	0, 0, 622, 0, 624, 637, 0, 0, 0, 621,
	619, 618, 0, 623, 609, 610, 611, 613, 612, 614,
	2345, 635, 636, 0, 0, 0, 424, 0, 0, 425,
	0, 2349, 2358, 631, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 894, 0, 0, 0, 0, 2337,
	0, 2338, 0, 0, 0, 2340, 2342, 2344, 0, 2346,
	2347, 2348, 2350, 2351, 2352, 2354, 2355, 2356, 2357, 0,
	626, 398, 400, 399, 0, 0, 0, 0, 2353, 0,
	404, 0, 0, 0, 0, 2343, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 398, 400, 399, 0, 423,
	0, 2360, 0, 0, 404, 0, 401, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 2358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2337, 0, 0, 0, 0, 398,
	400, 399, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 2353, 0, 0, 0, 423, 0, 0,
	2343, 0, 0, 0, 401, 0, 0, 0, 403, 407,
	413, 0, 414, 416, 0, 0, 417, 418, 419, 0,
	0, 421, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 407, 413, 0, 414, 416, 0, 0,
	417, 418, 419, 0, 0, 421, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 407, 413, 0,
	414, 416, 0, 0, 417, 418, 419, 0, 0, 421,
	422,
}

var yyPact = [...]int{
	295, -1000, -297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -161, 26653, 26653,
	-1000, -1000, 1588, -1000, 26150, 10547, 27156, 190, 187, 27156,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 439, -1000, 25647, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 397, 29648, 27659, 299, 8022, 27156,
	-279, -1000, 2247, -141, -1000, -1000, -1000, -1000, -1000, -1000,
	204, 472, 25144, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29382,
	97, 472, 575, 584, 671, 671, 12056, 2247, 254, 188,
	-1000, 1017, 295, 28948, 372, 27156, -1000, 982, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 372, -1000,
	-1000, -1000, 2247, 2247, -1000, 27156, 27156, 6, 1131, -1000,
	234, 268, 228, 980, -1000, -1000, -1000, -1000, -1000, 2246,
	-1000, 27156, 27156, 1879, 27156, -1000, 1329, 346, 29736, 2061,
	908, 500, 1897, -1000, -1000, 1862, -1000, 132, 140, 120,
	205, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 127, -1000,
	2110, -1000, -1000, 110, -1000, -1000, 130, -1000, -1000, -1000,
	-53, -1000, -1000, -1000, -1000, -1000, -154, -1000, -1000, -154,
	598, 1410, 8022, -1000, 1414, -1000, 2047, -1000, -1000, -1000,
	-1000, 5498, 9531, 9531, 9531, 9531, -1000, -1000, 1752, 8022,
	1847, 1739, 1838, -1000, -1000, -1000, -1000, 976, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1499, 9028, -1000, 1836, 1829, 1826, 1822, 1821, 1817, 1815,
	1814, 1812, 1811, 1669, 1810, 1480, 1479, 1809, 1808, 1806,
	1476, 1669, 1669, 1805, 1803, 1802, 1799, 1797, 1796, 1794,
	1793, 1792, 1784, 1783, 1781, 1776, 1773, 1772, 1771, 1770,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29280, -1000, 960, 754, -1000, 1769, 2057,
	2129, 1693, 2206, 2115, 2113, 2102, 2098, 1317, -1000, -1000,
	27156, 27156, 57, 391, 391, 391, 428, 391, 435, 434,
	-1000, -1000, -1000, -1000, -1000, -1000, 513, -1000, -1000, -1000,
	-1000, 839, 27156, -1000, 1702, 1056, 2126, 353, 350, 231,
	-1000, 1174, 1174, 1174, 1174, 1056, 245, 340, 2129, 2129,
	-62, -87, 1056, 1056, -87, 80, -1000, -1000, -1000, 1174,
	344, 1174, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2097,
	2090, -196, 397, 397, 408, -1000, -157, -1000, -1000, 583,
	-1000, 525, -1000, 1329, 332, 331, 847, 1177, -1000, 1089,
	27156, 27156, 27156, 1089, 1089, 15077, 14574, -1000, 2129, 1693,
	-1000, 1637, 1926, 1633, 1693, 397, 397, 397, 397, 397,
	397, 397, 27156, 27156, 7007, 7007, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 292, -1000, -1000, -1000, -1000, -1000,
	251, 1768, -1000, 27156, 239, 2129, 2057, 2129, -1000, -1000,
	959, 1309, 1467, -1000, -1000, 234, 1106, -1000, 753, -1000,
	-1000, -1000, -1000, 27156, 246, -1000, -1000, 1441, 1757, -1000,
	382, 813, 926, -1000, 101, 29672, 22622, 1329, 22622, 27156,
	-1000, -1000, -1000, -1000, -1000, -1000, -55, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	103, -1000, 103, 8022, 8022, 8022, 8022, 8022, -1000, 390,
	8525, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9531, 9531,
	9531, 9531, 9531, 9531, 9531, 9531, 9531, 9531, 9531, 9531,
	1751, 1142, 9531, 9531, 9531, 1926, 2378, 846, 166, -1000,
	-1000, -1000, -1000, -1000, 1099, 1410, 8022, 8022, 8022, 27156,
	-1000, 2562, 8022, 8022, 2440, 8022, 2093, 3988, 27156, 8022,
	-1000, 1632, 1626, -1000, -1000, 1253, 8022, -1000, -1000, 8022,
	9531, 8022, -1000, -1000, -1000, 77, 2093, 2093, 8022, 8022,
	2093, 2093, 2093, 1120, 2093, 2093, 2093, 2093, 2093, 2093,
	2093, 2093, 27156, 2018, 106, -1000, -1000, -1000, 1677, -1000,
	1708, 1708, 1677, 1677, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1727, 1756, -1000, -1000, 1706, 1706, 1706,
	1677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1717, 1717, 1725, 1717,
	27156, 2129, -279, 6504, -1000, -284, 2057, 8022, -1000, -1000,
	8022, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1465,
	2082, -1000, 1755, -1000, 426, 391, -1000, 27156, 1148, 22622,
	1329, 1370, 27156, 391, 391, 408, -1000, 27156, 839, 2079,
	27156, 2234, 9531, 24641, 1174, 1056, -1000, 27156, -1000, -1000,
	-1000, 1174, 27156, 1174, 1174, 2234, 1174, -1000, -1000, -1000,
	1056, 1056, -1000, -1000, -1000, -1000, 1174, 1174, -1000, -1000,
	-56, 2234, 2234, -77, 27156, 27156, 391, 27156, -1000, 27156,
	-1000, -1000, 417, 27156, 22622, 21113, -1000, -122, 571, 535,
	553, -1000, -1000, 374, 380, 14071, 316, 22622, 4994, -1000,
	-1000, 1089, 1089, 1089, 4994, 4994, 862, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2057, -1000, -1000, -1000, -1000, -1000,
	27156, 22622, 1329, 27156, 27156, 27156, 28948, -1000, 1754, 815,
	-1000, -1000, 11553, 946, 815, 1464, 27156, 1895, 1958, -1000,
	1753, 13064, 27156, -1000, -1000, -280, -1000, 12560, 27156, 2057,
	-1000, 2057, 3028, -1000, 2119, -1000, 234, 177, -1000, -1000,
	-1000, -1000, -1000, -1000, 940, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 830, -1000, 27156, -1000, -1000, 101,
	22622, 1083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 128,
	-1000, -1000, 156, -1000, 415, 44, 1105, -1000, -1000, 69,
	151, 456, 69, 1410, -1000, 1143, 1143, 1159, -1000, 433,
	-1000, -1000, -1000, -1000, 1752, -1000, -1000, -1000, 2572, 2459,
	-1000, 1173, 1173, 995, 995, 995, 995, 995, 1249, 1249,
	-1000, -1000, -1000, 5498, 1751, 9531, 9531, 9531, 378, 1442,
	2437, -1000, 8022, 1166, -1000, 8022, 1641, 2294, 790, 939,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1624, 598, 1623, 1526, 2236, 1622, 8022, -1000, -1000, 1440,
	7519, -1000, -1000, -1000, 1611, 936, 1609, -1000, -1000, -1000,
	1604, 778, 1602, 1512, 1601, 808, 8022, 8022, 1094, 1086,
	8022, 8022, 8022, 8022, 1600, 8022, 8022, 8022, 8022, 8022,
	8022, 8022, 8022, -1000, 8022, 86, -1000, -1000, -1000, -1000,
	1306, -1000, 1304, -1000, -1000, -1000, 1461, 1461, -1000, 1303,
	-1000, -1000, -1000, -1000, 1299, -1000, -1000, 1283, -1000, -1000,
	-1000, -1000, 1073, -1000, 1410, -1000, 1455, -1000, 923, 794,
	-1000, 1272, -1000, -1000, 27156, 10034, 391, 27156, 68, -1000,
	2056, 828, -1000, 44, 628, 1877, 2016, 27156, 27156, 24138,
	-1000, 1745, 1072, -1000, -1000, 8022, -1000, 1871, 1329, 27156,
	2234, -1000, -1000, -1000, -1000, 28948, -1000, -1000, -1000, -1000,
	27156, 2234, 2234, 1056, 1174, 1174, -1000, -1000, 1174, -1000,
	935, -1000, 27156, -1000, -1000, 397, 66, 828, 2582, 711,
	-1000, -1000, -1000, -1000, 28162, 28162, 13568, 28162, -1000, 1104,
	-1000, -1000, 556, 519, 543, -1000, -1000, 414, -1000, -1000,
	628, -1000, -1000, -1000, 1744, 1126, -1000, -1000, 1739, -1000,
	4994, 4994, 4994, -1000, -1000, 17089, -1000, -1000, 786, 628,
	1894, 782, -1000, 782, -1000, 10034, 2234, 7007, -1000, 21113,
	-1000, -1000, 23628, -1000, 23125, 2234, -288, 776, -1000, 2024,
	-280, 27156, 27156, 1059, 164, -1000, 1052, -1000, 599, -1000,
	1728, -1000, 1051, 1951, 617, -1000, 1118, -1000, -1000, -1000,
	934, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -2, -1000, -1000, 27156, 1441, 1050, 1083, 659,
	-1000, 410, 918, 904, -1000, 22622, 124, 22622, -1000, 22622,
	-1000, -1000, 232, -1000, 27156, 2043, -1000, -1000, -1000, 1412,
	-302, 2026, -1000, -1000, -1000, -1000, -1000, 1044, -1000, 378,
	1442, 1952, -1000, 9531, 9531, 2287, 1075, -1000, 8022, 1346,
	2658, -1000, 1103, 16083, 27156, -1000, -1000, 8022, 8022, -1000,
	2275, -1000, 8022, 8022, 1453, -1000, 27156, -1000, -1000, -1000,
	16083, -1000, 9531, -1000, 8022, 145, 2268, -46, -46, 2254,
	2225, 2207, 1038, -46, 2156, 2147, 2140, 2112, 2063, 1737,
	1723, 1710, 1410, -1000, -1000, 1599, 1597, 1036, -1000, 1034,
	1596, 1029, 1015, 6504, -1000, -101, 8022, 8022, 8022, 1978,
	-1000, -1000, 82, 1592, 775, -1000, -1000, -1000, 29352, 1708,
	1677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1727, -1000, 1706, 1706, 1706, 1677, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1717, 1717, 1725, 1717, 27156,
	1716, -58, 1092, -1000, 385, 22622, 330, -1000, 1893, 278,
	-1000, 2016, -1000, 662, -1000, 1714, 1712, 27156, 740, -1000,
	900, 295, -1000, 27156, 1410, -1000, 1329, -1000, 1056, -1000,
	-1000, 2234, 951, -1000, -1000, 2234, 1056, 1056, 1174, 27156,
	-1000, 27156, -58, 1092, 385, 27156, 21113, 21113, 21113, 21113,
	-1000, 1927, 1922, -1000, 1920, 1918, 1945, 27156, 21113, 1702,
	-1000, 28555, -1000, -1000, -1000, -1000, -1000, 1926, 954, 1955,
	550, 8022, -1000, -1000, -1000, 514, 22622, 1436, 316, -1000,
	-1000, -1000, -1000, -1000, 27156, 27156, 1591, 2218, -1000, 763,
	-1000, -1000, 896, -1000, 2218, -1000, 1280, 1434, 1184, 599,
	617, 952, -1000, 164, 27156, 1944, 1709, -1000, 27156, -280,
	6504, 244, -280, 27156, 6504, 3028, 1279, -1000, -1000, -1000,
	2226, 22622, 1329, 1045, 1080, -1000, 104, -1000, 117, 369,
	1433, -1000, 431, 92, -1000, 1109, 1412, 430, -1000, -1000,
	9531, -1000, -1000, -1000, -1000, 1410, 8022, 1586, -1000, 504,
	504, 1585, -1000, 1677, 1708, -1000, 1677, 1706, 1677, 504,
	504, 1584, -1000, 1386, 1636, -1000, 1606, 1594, 8022, -1000,
	1579, 2359, 948, 1575, 1431, -46, -1000, 1705, -1000, -46,
	-46, -46, -46, -1000, -46, -46, -46, -46, -46, -46,
	-46, -46, -1000, -1000, -1000, 1425, -1000, -1000, -1000, 1269,
	-1000, 1267, -1000, -33, -24, 1410, 1410, -1000, -1000, 2002,
	1424, 442, 10034, 1990, 1702, 11050, 1320, -1000, -1000, 22119,
	-1000, 355, -1000, -1000, -1000, 423, 134, 1264, 342, -1000,
	1444, 27156, -1000, -1000, -1000, -1000, -1000, 1092, 1092, 1092,
	11050, 11050, 372, 724, 892, 21113, 27156, -1000, 20610, 1572,
	-1000, 628, 2234, -1000, 27156, -1000, 2234, 2234, 1056, -1000,
	1702, 1320, 22119, 355, 819, -1000, 1107, 1884, 1891, 1884,
	-1000, -1000, -1000, -1000, 1921, -1000, 1912, -1000, -1000, 819,
	-1000, -1000, -1000, -1000, -1000, 550, -1000, 2117, 547, 547,
	547, 1541, -1000, 659, 1539, -1000, -1000, -1000, -1000, -1000,
	2158, 2202, 21616, 2158, -1000, -288, 2252, 229, 27156, 243,
	-1000, -280, 27156, -1000, -1000, 1537, 648, -280, -1000, 599,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1329, -1000, 116,
	-1000, -1000, -1000, -1000, -1000, -1000, 28, -1000, 27156, -1000,
	1412, 1409, 87, 27156, -1000, 1410, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8022, -1000, -1000, -1000, 1590, -1000, -1000, 8022, -46,
	-1000, -1000, 371, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1536, 1535, -286, -8,
	2201, 2198, -1000, -1000, -1000, 29352, -1000, 1270, 2076, 1532,
	641, -1000, -1000, -1000, 29352, 1010, -1000, 27156, 1183, 547,
	391, 547, 1181, 1698, -1000, -1000, -1000, 1407, 43, -1000,
	-1000, -1000, 1402, 1400, 1258, -1000, -1000, 1301, 912, 58,
	-1000, -1000, -1000, -1000, -1000, -1000, 1696, 16083, 16586, 1398,
	1527, 1522, 28162, 21113, 20610, 760, -1000, 890, -1000, -1000,
	-1000, 2234, -1000, -1000, 2234, 2075, -1000, 43, -1000, 2209,
	27156, 6504, -1000, -1000, 8022, 1694, -1000, 8022, -1000, -1000,
	-1000, -1000, -1000, 1690, 2033, -1000, -1000, -1000, -1000, -1000,
	-1000, 8022, 8022, -1000, -1000, -1000, 27156, -1000, -1000, -280,
	-1000, 599, 941, -1000, 599, 628, -1000, -1000, 164, -1000,
	-1000, -1000, -77, 1558, -1000, 1531, -1000, 2209, -1000, 2197,
	-1000, -1000, -288, 1394, -1000, 2194, 1393, 1333, -228, -1000,
	-1000, 229, 29588, 11050, 1422, -1000, -1000, 27156, 27156, -1000,
	27156, 27156, 391, 8022, -1000, -1000, 223, -1000, -1000, 142,
	-1000, -1000, 1278, 375, -1000, 19101, -1000, -1000, -1000, -1000,
	-1000, 103, 29588, 2234, 760, 890, -1000, -1000, 1043, -1000,
	-1000, 229, -1000, 2129, -1000, -1000, 1410, 27156, 1410, 20107,
	-1000, 2186, 2180, 1410, 598, 617, 599, -1000, -77, -1000,
	-40, -14, -1000, -1000, 72, 8022, -290, -1000, 1390, -21,
	-1000, -1000, 27156, -1000, 367, 1327, -1000, 1092, 1092, 681,
	1092, 1092, 1092, 1092, 296, 294, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1685, -1000, -1000, 1422, -1000, -1000, 1194, 9531, -1000, -1000,
	1387, 16586, 527, 512, 1684, -1000, 256, 2250, -1000, 1169,
	1168, -1000, 27156, -1000, 1683, 1643, 197, 1682, -1000, 1681,
	1678, 27156, 1521, 368, 1380, -1000, -1000, 138, -1000, -1000,
	932, -1000, 1677, 8022, -1000, -77, 367, 2209, -1000, -1000,
	-1000, 911, 884, -1000, -1000, -1000, -1000, -1000, 399, -31,
	-14, -1000, 2179, -25, 2178, 2163, 1447, -1000, 3485, -1000,
	-1000, -1000, 598, -1000, 1676, -1000, 2162, 2065, -1000, 206,
	2161, 29588, -1000, 1257, 1256, 1092, 1092, 1254, 1376, 1375,
	1360, 1092, 1092, 1250, 1357, 28555, 1247, 1239, 1235, 1262,
	1356, 516, 1261, 1251, 1242, 27156, 1675, 1332, -1000, -1000,
	1442, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1234, 1674, -113, -1000, -1000, 1672, 19101, 265,
	265, 19101, 19101, 19101, 1671, 436, -1000, 17, -1000, -1000,
	-1000, 19101, 2053, 1501, -1000, 206, 2129, -1000, -1000, 19604,
	1670, 1232, -8, 2157, -1000, 1333, 2155, 1333, 1333, -1000,
	-1000, 4491, -281, -43, 279, 27156, 1333, 1345, -1000, 2154,
	247, -1000, -1000, -1000, 16083, 16083, -1000, -1000, -1000, -1000,
	1344, 1339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 324, 27156, 869, -1000, 1095, 1427,
	8022, 1669, -203, 19101, 868, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 863, 859, 858, 19101, -1000, -1000, -1000, 235,
	-1000, 163, -1000, -1000, 2053, -1000, -1000, -1000, -1000, 2088,
	15580, -35, -1000, 1337, -1000, 1333, -1000, -1000, 1153, -1000,
	-1000, -1000, -1000, -1000, 855, -1000, -1000, -1000, 18598, 222,
	248, 227, -1000, 394, -1000, -1000, -1000, -1000, -1000, -1000,
	304, 853, -1000, 1332, 1330, -1000, 1401, -1000, 1886, -1000,
	65, 840, -1000, -1000, -1000, -1000, 823, -1000, -1000, 1092,
	1325, 170, -1000, -1000, -1000, -1000, 27156, -1000, 822, -1000,
	-1000, -1000, 871, -1000, -1000, -1000, -1000, 4491, -1000, 27156,
	-1000, 27156, 217, 1214, 9531, 1668, 9531, 1657, 236, 1656,
	-1000, -1000, -1000, -1000, -1000, 436, -1000, 1882, 1740, 2244,
	-1000, -1000, -1000, -1000, 163, 163, 163, 163, 105, 1207,
	-1000, 1370, 597, -1000, 1091, -1000, 18095, 27156, -1000, -1000,
	821, 1655, 2131, -1000, 2071, 27156, 1916, 27156, 1640, 1088,
	9531, -1000, -1000, 2249, -1000, 2245, 503, 503, -1000, -1000,
	-1000, 27156, 6001, -1000, 851, -1000, -1000, 366, 230, -1000,
	785, -1000, 758, 17592, 1206, 1595, -1000, -1000, -1000, 1223,
	264, -1000, -1000, -1000, 1410, 27156, 727, -1000, 1417, 212,
	-1000, -1000, -1000, 722, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 366, 1933, -1000, 1203, -1000, -1000, 29483, 484, -1000,
	-1000, 29483, 214, -1000, 358, 1639, -1000, -1000, 698, -1000,
	1413, 531, 8022, -1000, 214, 29588, -1000, 8022, 693, -1000,
	29588, 675, -1000, -1000,
}

var yyPgo = [...]int{
	0, 124, 2796, 209, 142, 139, 207, 2794, 2793, 2055,
	2054, 2792, 2791, 2790, 2789, 2787, 2785, 2784, 2782, 2781,
	2780, 2778, 2776, 2775, 2774, 2773, 2772, 2771, 2770, 2769,
	2768, 205, 2767, 2766, 2763, 2762, 2755, 2752, 2749, 2747,
	2746, 2742, 2741, 2739, 2738, 2737, 2736, 2735, 2734, 2733,
	2732, 2730, 2717, 2714, 2713, 2712, 2711, 137, 2710, 2051,
	2706, 2704, 2702, 2701, 2700, 189, 2699, 2686, 2684, 2681,
	2680, 2678, 2677, 2669, 2667, 2666, 2665, 2664, 2663, 2658,
	2657, 166, 2651, 2650, 150, 2649, 2648, 2647, 2646, 197,
	188, 60, 2643, 51, 69, 159, 212, 872, 215, 220,
	157, 144, 76, 2640, 2065, 2633, 128, 194, 126, 26,
	2632, 158, 2631, 123, 43, 38, 214, 117, 55, 111,
	102, 2628, 191, 64, 85, 94, 2627, 2626, 223, 160,
	2625, 104, 2624, 2623, 2620, 2618, 175, 101, 2617, 59,
	2616, 73, 27, 100, 29, 2614, 2613, 2610, 84, 2609,
	2608, 2607, 2606, 154, 2604, 105, 62, 2603, 2602, 2598,
	58, 2596, 32, 2594, 49, 2592, 2591, 2590, 2589, 61,
	2588, 2587, 12, 16, 21, 2573, 20, 1, 2572, 185,
	95, 93, 119, 2571, 423, 2565, 2564, 2550, 125, 2549,
	277, 2548, 2547, 2546, 2538, 10, 2531, 179, 2525, 2524,
	80, 108, 2523, 56, 161, 170, 2522, 2520, 114, 53,
	81, 113, 2516, 2515, 96, 184, 18, 34, 0, 168,
	42, 2513, 2512, 2511, 213, 2508, 198, 169, 196, 129,
	219, 131, 2507, 2506, 54, 2505, 141, 78, 112, 8,
	2504, 173, 2503, 193, 147, 2501, 177, 2500, 135, 2,
	118, 2499, 2497, 28, 237, 2496, 2495, 2491, 145, 2490,
	2488, 83, 148, 2487, 2486, 2473, 25, 2472, 35, 30,
	2465, 89, 2464, 206, 165, 149, 115, 153, 134, 120,
	186, 192, 75, 122, 1148, 121, 82, 17, 2463, 190,
	2462, 208, 211, 2461, 164, 2460, 203, 378, 181, 2459,
	155, 7, 48, 33, 2456, 9, 2454, 97, 2453, 2452,
	19, 2450, 23, 2449, 2448, 2445, 2442, 5, 2417, 2416,
	2414, 3, 6, 2413, 4, 182, 44, 107, 2412, 109,
	146, 2411, 2409, 2408, 2407, 2405, 222, 2404, 1183, 2403,
	2402, 2400, 2399, 2397, 2394, 2393, 74, 36, 2391, 2388,
	2382, 2381, 68, 116, 2375, 286, 180, 2374, 37, 2373,
	2369, 24, 2364, 31, 2357, 2354, 2350, 14, 156, 2349,
	2348, 15, 2341, 2340, 11, 13, 2339, 2338, 63, 2332,
	52, 41, 71, 92, 2330, 22, 65, 110, 2329, 2327,
	201, 200, 172, 2326, 132, 195, 218, 2325, 183, 2324,
	2320, 2313, 2312, 2311, 217, 2309, 1157, 2307, 2306, 199,
	57, 86, 98, 2305, 2301, 2296, 79, 130, 106, 99,
	174, 2294, 162, 2289, 2288, 88, 2285, 2284, 2283, 2282,
	2280, 2278, 2273, 204, 210, 2267,
}

//line mysql_sql.y:8352
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 431, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 87, 429, 429, 429, 430, 430,
	85, 85, 74, 73, 86, 377, 377, 376, 376, 375,
	375, 374, 374, 374, 373, 373, 373, 372, 372, 371,
	371, 370, 370, 368, 368, 369, 367, 366, 366, 366,
	364, 364, 362, 362, 363, 363, 357, 357, 360, 360,
	358, 358, 358, 358, 361, 356, 356, 356, 355, 355,
	72, 72, 72, 286, 286, 71, 71, 300, 300, 300,
	300, 300, 298, 298, 298, 298, 298, 298, 297, 297,
	296, 296, 301, 301, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 66, 66, 66, 66, 69, 69,
	69, 70, 295, 295, 295, 67, 68, 68, 285, 285,
	290, 290, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 294, 294, 294, 292, 292, 291,
	291, 293, 293, 60, 60, 60, 63, 62, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 61, 61, 61,
	61, 61, 61, 58, 58, 58, 58, 58, 57, 57,
	59, 59, 283, 283, 282, 77, 77, 77, 77, 77,
	77, 77, 76, 76, 79, 79, 78, 80, 65, 65,
	65, 65, 65, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 401, 401, 401, 403, 403, 222, 223, 432,
	225, 221, 221, 221, 397, 397, 398, 399, 400, 400,
	400, 75, 7, 7, 7, 56, 54, 415, 415, 55,
	422, 422, 336, 336, 236, 236, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 339, 340, 232, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 38, 37, 37, 37,
	272, 272, 36, 433, 433, 205, 205, 44, 45, 46,
	47, 48, 49, 50, 35, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 53, 53, 351, 351, 435, 435,
	435, 51, 52, 335, 335, 335, 42, 41, 40, 39,
	39, 34, 34, 33, 33, 229, 229, 231, 231, 227,
	434, 434, 312, 312, 230, 230, 32, 32, 32, 228,
	228, 204, 226, 226, 226, 8, 8, 6, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 20, 280,
	280, 277, 19, 14, 13, 16, 12, 15, 17, 5,
	5, 5, 5, 9, 9, 10, 101, 101, 143, 143,
	410, 410, 406, 406, 407, 407, 407, 408, 408, 409,
	409, 81, 345, 345, 345, 345, 345, 345, 4, 123,
	123, 124, 124, 344, 344, 344, 344, 344, 344, 344,
	428, 428, 386, 386, 386, 387, 122, 122, 117, 117,
	346, 346, 250, 388, 388, 354, 354, 353, 353, 352,
	352, 120, 120, 121, 121, 104, 104, 90, 90, 359,
	359, 359, 359, 365, 365, 333, 333, 169, 169, 198,
	198, 199, 199, 94, 94, 95, 95, 95, 95, 95,
	95, 394, 394, 396, 396, 395, 119, 119, 115, 115,
	116, 116, 116, 114, 114, 113, 112, 112, 111, 109,
	109, 109, 110, 110, 110, 97, 97, 97, 96, 96,
	96, 96, 96, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 98, 98, 402, 402, 402,
	337, 337, 337, 342, 342, 181, 181, 182, 182, 180,
	180, 99, 99, 100, 100, 100, 100, 179, 179, 178,
	102, 102, 108, 107, 107, 103, 103, 103, 103, 189,
	189, 188, 188, 188, 188, 84, 88, 88, 89, 127,
	127, 187, 186, 186, 186, 126, 126, 125, 125, 118,
	118, 106, 106, 106, 106, 185, 105, 183, 427, 427,
	426, 426, 425, 423, 423, 423, 424, 424, 424, 424,
	379, 379, 379, 379, 379, 214, 214, 214, 220, 220,
	213, 213, 213, 213, 213, 224, 219, 219, 215, 215,
	216, 216, 216, 3, 3, 3, 3, 24, 24, 24,
	24, 24, 24, 30, 135, 136, 29, 128, 129, 129,
	130, 130, 131, 132, 132, 132, 134, 133, 28, 404,
	404, 21, 411, 414, 412, 412, 416, 416, 416, 417,
	417, 417, 418, 418, 22, 413, 419, 419, 419, 281,
	281, 278, 279, 279, 276, 275, 275, 275, 421, 421,
	420, 420, 420, 217, 217, 23, 271, 271, 273, 274,
	274, 265, 265, 265, 265, 27, 269, 269, 270, 270,
	270, 270, 270, 266, 266, 268, 268, 264, 264, 264,
	264, 264, 26, 263, 263, 261, 261, 259, 259, 260,
	260, 258, 258, 258, 262, 262, 25, 25, 25, 92,
	91, 91, 91, 201, 201, 200, 200, 93, 338, 338,
	302, 302, 303, 303, 303, 306, 306, 318, 318, 319,
	319, 317, 317, 324, 324, 323, 323, 322, 322, 321,
	321, 320, 320, 320, 320, 315, 315, 314, 314, 304,
	304, 304, 304, 304, 305, 305, 305, 313, 313, 316,
	316, 160, 160, 161, 161, 161, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 384, 384, 385, 163, 163,
	163, 167, 167, 167, 167, 167, 167, 162, 162, 164,
	164, 144, 144, 142, 142, 137, 137, 138, 138, 139,
	139, 140, 140, 141, 141, 141, 141, 141, 141, 288,
	288, 382, 382, 383, 383, 378, 378, 378, 381, 381,
	381, 381, 381, 380, 380, 145, 196, 196, 196, 218,
	218, 218, 195, 195, 195, 159, 159, 158, 158, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 287, 287, 233, 233, 234, 234,
	176, 175, 175, 175, 175, 175, 173, 174, 172, 172,
	172, 172, 172, 171, 171, 170, 170, 170, 267, 267,
	168, 168, 166, 166, 166, 165, 165, 165, 325, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 242, 242, 247, 247, 393, 393, 392,
	146, 146, 146, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 155, 155, 155, 310, 310, 310, 310, 310,
	311, 311, 311, 308, 308, 309, 309, 251, 252, 252,
	343, 343, 307, 307, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 350, 350, 350, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 405, 405, 405, 389,
	389, 389, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 193, 193, 193, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 253, 253, 254, 254,
	347, 347, 347, 347, 347, 347, 348, 348, 349, 349,
	349, 349, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 240, 190, 190, 190, 255, 248, 248, 249, 249,
	243, 243, 243, 243, 243, 243, 243, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 244, 244, 246,
	246, 257, 257, 257, 256, 256, 256, 256, 256, 256,
	256, 157, 157, 157, 157, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 148, 148, 148, 148,
	152, 152, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 153, 153, 153, 153,
	151, 151, 151, 151, 151, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 82, 83, 83, 150, 197, 197, 326, 326, 329,
	329, 327, 327, 328, 330, 330, 330, 331, 331, 331,
	332, 332, 332, 334, 334, 203, 203, 203, 210, 210,
	202, 202, 211, 211, 212, 212, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 9, 10, 2, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 3, 1, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 1, 1, 1,
	1, 6, 1, 1, 1, 9, 7, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 3, 2,
	4, 4, 4, 4, 4, 1, 1, 1, 3, 2,
	3, 1, 1, 1, 6, 8, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 0, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 6, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 0,
	4, 1, 3, 3, 1, 5, 6, 5, 5, 3,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 12, 1, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 0,
	1, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 5, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 11, 9, 11, 2,
	2, 4, 5, 1, 3, 0, 3, 5, 0, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 4, 6, 6, 1,
	1, 1, 1, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 6, 7, 6, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 6,
	2, 2, 4, 6, 4, 2, 0, 1, 2, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 1, 1, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 1, 3, 4,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -431, -2, -1, -3, -85, -4, -81, -5, -6,
	-8, -64, -76, -78, -80, -79, -31, -7, -75, -57,
	-58, -60, -66, -71, -72, -73, -74, -86, -82, -83,
	-84, -94, -87, -24, -23, -22, -21, 395, 12, 441,
	-9, -10, -394, -11, 231, -221, -222, -223, -225, -432,
	-32, -33, -34, -39, -40, -41, -42, -51, -52, -53,
	-35, -36, -37, -38, -44, -45, -46, -47, -48, -49,
	-50, -55, -54, -56, 207, -59, 61, -61, -62, -63,
	-67, -68, -69, -70, 326, 332, 385, 394, 522, 523,
	46, -95, -97, 524, -25, -26, -27, -28, -29, -30,
	203, 14, 474, -12, -15, -13, -16, -14, -19, -20,
	-18, -17, 226, 225, 37, 289, 290, 291, 330, 224,
	204, 13, 135, 136, 138, 139, 30, -96, 67, 205,
	-98, 10, 525, 434, -104, 38, -142, -218, 70, -206,
	-209, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 444, 307, 308,
	471, 243, 267, 356, 270, 277, 135, 154, 148, 176,
	168, 143, 247, 282, 248, 77, 138, 427, 87, 406,
	382, 141, 262, 264, 266, 269, 249, 164, 159, 261,
	245, 522, 157, 250, 39, 251, 181, 252, 253, 476,
	402, 306, 408, 274, 380, 158, 403, 265, 405, 183,
	187, 419, 332, 152, 153, 410, 421, 180, 223, 42,
	473, 235, 422, 185, 179, 175, 430, 278, 276, 178,
	151, 174, 246, 50, 189, 188, 190, 376, 377, 378,
	379, 254, 255, 320, 418, 171, 160, 311, 144, 22,
	425, 230, 407, 333, 256, 271, 279, 184, 186, 237,
	242, 475, 384, 241, 275, 423, 156, 234, 263, 229,
	426, 145, 326, 335, 257, 139, 268, 420, 429, 49,
	348, 150, 142, 220, 136, 239, 244, 11, 258, 259,
	260, 281, 280, 272, 172, 236, 177, 162, 149, 173,
	137, 238, 428, 349, 520, 309, 365, 170, 167, 240,
	213, 424, 409, 140, 369, 350, 165, 283, 517, 518,
	519, 321, 305, 284, 285, 163, 227, 401, 286, 288,
	375, 298, 351, 383, 357, 352, 196, 292, -104, -59,
	-10, -9, -96, -97, -142, 211, -226, 23, 380, -65,
	381, 207, 67, -218, -5, -4, -81, -57, -94, -224,
	-218, 289, 289, -224, 211, -218, 241, 364, -336, 216,
	-297, -271, 242, -296, -273, -299, -274, 31, 203, 205,
	204, 238, 14, 330, 212, 12, 10, 331, 224, 24,
	25, 27, 13, 332, 334, 28, 335, 338, 339, 340,
	41, 343, 344, 231, 70, 73, 249, -136, -218, 249,
	-249, -243, 94, 232, -245, -238, -239, -241, -374, -368,
	-237, 67, 119, 120, 127, 95, -240, -325, 35, 97,
	481, 130, 442, -191, -192, -193, -194, -218, -369, -367,
	73, 78, 81, 84, 85, 83, 82, 161, 80, 74,
	131, 132, -97, 70, -389, 489, -207, 510, 509, 46,
	-341, -349, 210, -347, 166, 227, 162, 12, 125, 375,
	163, 486, 506, 444, 490, 513, 483, 484, 478, 479,
	480, 482, 491, 493, 505, -350, 501, 511, 512, 499,
	72, 71, 504, 503, 492, 487, 488, 494, 477, 485,
	495, 496, 502, 507, 508, 314, 87, 315, 316, 434,
	310, 317, 216, 380, 55, 318, 319, 320, 321, 322,
	441, 323, 56, 324, 313, 231, 365, 325, 165, 182,
	446, 445, 447, 438, 435, 433, 436, 437, 439, 440,
	497, 498, 500, -293, -291, -218, -88, -89, 515, -113,
	-114, -184, 19, 6, 7, 8, 9, -429, 382, 475,
	292, 327, -338, 307, 365, 241, -265, -263, 286, 282,
	341, 221, 220, 88, 434, 210, -406, -407, 200, 201,
	202, -396, 467, -395, -218, 316, 26, 211, 327, 412,
	413, 414, 416, 415, 417, -43, -351, -335, 409, 408,
	-230, 407, 400, 411, 402, 203, 468, -203, 351, 383,
	237, 431, 432, 328, 384, 419, 420, 403, 87, 169,
	166, -338, 307, 365, -406, 140, 137, -284, 140, 93,
	145, 144, -284, 241, 364, 40, -290, 375, -289, -291,
	419, 420, 430, 71, 72, 418, -203, 87, -114, -184,
	-113, -95, -97, -84, -394, 307, 365, 241, 212, 211,
	213, 434, 289, 327, -337, -402, 31, -342, 197, 198,
	199, 32, 33, -1, -219, -216, -209, 70, 71, 72,
	-120, 233, -142, 133, -120, -114, -113, -114, -142, -195,
	-218, 382, 103, -65, -65, 381, -397, -398, -399, -401,
	207, 381, 380, 133, 15, -224, -224, 65, -142, -273,
	241, -297, -271, 35, 64, 134, 214, 134, 64, 67,
	328, 307, 365, 329, 434, 211, 341, 213, 241, 342,
	307, 365, 211, 213, 434, 241, 307, 211, 213, 365,
	241, 342, 400, 401, 213, 26, 333, 336, 337, 401,
	-355, 430, -355, 134, 93, 90, 91, 92, -243, 110,
	-256, 103, 104, 105, 106, 107, 108, 109, 116, 115,
	126, 119, 120, 121, 122, 123, 124, 125, 117, 118,
	113, 94, 111, 112, 96, -97, -243, -249, 46, -241,
	-241, -241, -241, -325, -247, -243, 67, 67, 67, 133,
	73, -243, 67, 67, 67, 67, 67, 67, 67, 67,
	-348, 67, 67, -253, -254, 67, 67, 73, 73, 67,
	67, 67, 73, -254, -254, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 134, -148, -152, -149, -151, -150, -154, -153,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 227, 162, 163, 164,
	165, 183, 148, 168, 472, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	133, -114, 134, 67, -90, 38, -116, 21, -98, -97,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 78,
	-135, -218, -128, -218, -404, 211, 467, -261, 216, -261,
	-261, 212, -261, 211, 211, -408, 147, 134, -396, -119,
	67, -229, 111, 23, 239, 239, 276, -433, -434, 15,
	113, -227, -434, -227, -227, -229, -435, 212, 410, 42,
	240, 239, -115, -116, -115, 404, 401, -312, 405, 406,
	-230, -229, -229, -230, 211, 213, 434, -433, 239, -433,
	30, 30, -404, -336, -336, -409, 215, 423, 474, 143,
	144, 145, -273, 241, 241, 134, 103, 23, -292, 103,
	114, -291, -291, -291, -292, -292, -162, 40, -217, 130,
	-218, 73, -162, 40, -115, -98, -97, 68, 68, 68,
	-336, -336, -336, -336, -336, -336, -336, -224, -128, -99,
	-100, 121, -243, -218, -99, 38, 401, -344, -123, -94,
	308, 67, 67, -218, -345, 46, -94, 67, 30, -115,
	-90, -116, 133, 78, 73, -65, 68, 134, -400, 84,
	85, -403, 180, 172, -218, -77, 73, -3, -4, -5,
	-6, -31, -57, -94, -370, -368, 67, 31, 374, 64,
	15, -298, 211, 434, 327, 237, 213, 307, -296, -280,
	-277, -275, -217, -273, -276, -275, -301, -195, 401, -91,
	386, 288, -91, -243, -243, -243, -243, -243, 83, 94,
	305, 84, 85, -238, -257, 31, 284, 285, -239, -239,
	-239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
	-246, -255, -325, 67, 113, 111, 112, 96, -241, -239,
	-239, 68, 134, -393, -392, 98, -243, -243, -243, -218,
	-390, -391, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 318, 313, 319, 317, 310, 325, 320,
	321, 165, 465, 466, 459, 460, 461, 462, 463, 464,
	-248, -249, -248, -243, -390, -248, -190, 32, 31, -243,
	-405, 303, 302, 304, -117, -218, -248, 68, 68, 68,
	78, -249, -248, -239, -248, -391, -190, -190, -249, -249,
	-190, -190, -190, -190, 121, -190, -190, -190, -190, -190,
	-190, -190, -190, -291, 40, -332, 349, 348, -326, -328,
	67, -327, 67, -327, -326, -326, 67, 67, -329, 67,
	-329, -329, -326, -330, 67, -330, -331, 67, -330, -218,
	-115, -89, -353, -352, -243, 40, 516, -90, -243, -112,
	-111, -243, -430, 73, 34, 67, 213, -261, -411, -218,
	94, -281, -278, -275, -271, -216, -218, -261, -261, -409,
	-395, 34, -118, -218, -180, 16, -241, -275, 241, -433,
	-229, -205, -204, -218, -231, -434, -226, -231, -231, -180,
	-434, -229, -229, -231, -227, 401, -180, -180, -312, -228,
	-218, -228, -261, -205, -205, 213, -411, -281, -107, -102,
	-106, -103, -108, -183, -185, -105, 67, -142, -97, -218,
	424, 425, 141, 144, 143, 31, 374, -295, 374, 31,
	-271, -289, -285, 73, 375, -276, -294, 64, 130, -352,
	-292, -292, -292, -294, -294, 129, -90, -411, -280, -271,
	-218, -144, -142, -144, -219, 67, -179, 134, -178, 15,
	-213, -218, 34, 73, 133, -179, 73, -144, -428, 64,
	46, 30, 67, -122, 68, -117, -121, -218, -346, -250,
	-388, 515, -122, 68, -386, -387, -117, -90, -90, -211,
	-212, -202, -208, -215, -216, -209, 208, 31, 93, 34,
	36, 314, 346, 96, 130, 20, 97, 166, 129, 316,
	442, 315, 203, 59, 445, 447, 446, 435, 433, 367,
	371, 373, 370, 434, 400, 40, 14, 37, 225, 32,
	33, 123, 205, 100, 101, 228, 35, 226, 85, 44,
	23, 62, 15, 17, 18, 317, 366, 216, 215, 113,
	386, 212, 57, 12, 132, 38, 110, 368, 53, 89,
	45, 55, 111, 21, 436, 437, 41, 385, 394, 470,
	232, 125, 318, 319, 60, 94, 374, 83, 43, 64,
	90, 19, 58, 112, 206, 441, 56, 372, 322, 324,
	334, 467, 323, 210, 411, 10, 313, 443, 30, 224,
	54, 211, 99, 214, 84, 231, 6, 88, 13, 61,
	65, 438, 439, 440, 46, 98, 16, 325, 474, 387,
	388, 389, 390, 391, 392, 393, 191, 192, 193, 194,
	195, 273, 219, 217, 221, 222, 515, 516, 197, 198,
	302, 304, 169, 200, 201, 202, 233, 147, 7, 353,
	354, 355, 358, 359, 360, 361, 362, 363, 364, 523,
	395, 396, 397, 398, 399, 412, 413, 414, 415, 416,
	417, 209, 23, -65, -398, 133, 134, -118, -298, -279,
	-276, -300, 121, 70, -286, 134, 474, 526, 71, 214,
	-421, -420, 366, 68, 134, -356, 215, 441, 73, 527,
	196, -356, 83, 305, 84, 85, -325, -249, -246, -241,
	-239, -239, -244, 228, 93, -243, -242, -392, 100, -243,
	34, 68, 134, 65, 133, 68, 68, 15, 15, 68,
	-243, 68, 15, 15, -243, 68, 133, 68, 68, 68,
	65, 68, 134, 68, 134, -249, -243, 68, 68, -243,
	-243, -243, -249, 68, -243, -243, -243, -243, -243, -243,
	-243, -243, -243, -334, 350, 78, 78, -197, 73, -197,
	78, 78, 78, 134, 68, 73, 134, 22, 134, -109,
	36, 37, -136, -129, -130, -131, -132, -148, -195, 167,
	170, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 227, 162, 163, 164, 165, 183, 148, 168, 149,
	150, 151, 152, 153, 154, 157, 158, 159, 156, -261,
	-142, -414, 353, 35, -422, 134, 40, -420, -264, 65,
	-259, -260, -258, -262, 40, -142, -142, 15, -101, -143,
	-218, 67, 68, 134, -243, -272, 65, -274, -205, -180,
	-219, -142, -218, -180, -180, -229, -231, -231, -227, 133,
	-204, -336, -415, 353, -422, 30, -186, -187, -188, -189,
	53, 57, 59, 54, 55, 56, 60, 30, 134, -214,
	-220, 34, -215, 73, -216, -209, -214, -97, -102, -107,
	-214, 67, 142, 145, 145, 144, 214, 67, 103, -294,
	-294, -294, 40, -217, 64, 134, -129, -180, -100, -102,
	-218, 73, -218, 121, -180, -169, 518, 38, 39, -346,
	-386, -124, -411, 68, 134, -123, 308, 68, 134, 134,
	67, 68, 46, 134, 103, 133, 382, -218, -368, 68,
	-300, 134, 214, 133, 133, -277, 332, -217, -279, 20,
	474, -195, 38, -201, -200, 73, 527, 38, 68, -244,
	93, -241, -238, 68, 101, -243, 99, -146, -148, 348,
	349, -147, -153, 130, 166, 227, 165, 164, 162, 348,
	349, -162, -218, -243, -243, 68, -243, -243, 15, -218,
	-162, -239, -243, -343, 443, 68, -307, 396, -307, 68,
	68, 68, 68, -307, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 134, 68, 68, 68, 134,
	68, 134, -352, -359, 405, -243, -243, -111, -110, 43,
	340, 68, 134, -148, -142, 67, -417, 407, 355, -210,
	103, -236, -235, 309, 41, -339, 375, 361, 362, -278,
	241, 64, 297, 298, 299, 300, -258, -203, 129, 252,
	67, 67, -142, -101, -218, 15, 134, -410, 133, -1,
	-218, -271, -229, -180, -434, -180, -229, -229, -231, -218,
	-142, -417, -210, -236, -283, -282, -195, -106, -106, -106,
	-106, 53, 53, 53, 58, 53, 58, 53, -188, -283,
	-108, -119, -220, 68, -427, -426, -425, -423, 61, 215,
	62, -248, 145, -279, -232, 73, -285, -142, -142, 68,
	-182, 17, 133, -182, 78, 73, 89, 68, 134, -123,
	-117, 46, 67, -218, -250, -354, -353, 46, -94, -346,
	-387, -352, -211, -208, -216, -209, 78, 15, -276, -271,
	121, 121, 70, 333, -286, 73, 354, 73, 211, 528,
	134, 103, -201, 211, -238, -243, 68, -155, 153, 152,
	-155, 68, -326, -327, -326, -329, -326, -155, -155, 68,
	68, 23, 68, 68, 68, -243, 68, 68, 134, 68,
	73, -307, 67, -307, -307, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, -307, 73, 78, 78, -365, 392,
	387, 389, 44, 45, 73, 209, -131, 40, -119, -137,
	-138, -139, -145, -140, -195, -234, -141, 219, 217, 221,
	-383, 88, 222, 273, 89, 212, -418, 77, -412, 73,
	-218, -419, 77, 356, 132, 311, 40, 357, 358, 372,
	306, 78, 78, 363, -413, 70, -142, -210, -210, -210,
	-137, -137, -120, 65, 133, -102, -143, -218, 121, 68,
	-180, -218, -180, -180, -229, -119, -418, -412, -419, -180,
	134, 103, -126, -125, 64, 65, -127, 64, -125, 53,
	53, -180, -425, -424, 23, -383, -383, -383, 68, 68,
	-181, 18, 20, 121, -181, -169, 13, -94, -411, 46,
	-94, -346, -124, 68, -346, -271, -286, 375, -142, -200,
	73, 528, -142, -243, 68, -243, -307, -252, -251, 233,
	68, 68, -333, 517, -363, 387, 20, 20, -133, -148,
	-237, 34, 68, 134, -148, -141, -218, 89, -382, -383,
	-261, -382, 89, 67, 73, -416, 366, 73, 73, 78,
	40, 78, 132, 359, -340, 67, -162, -164, -217, 130,
	73, 68, 68, -214, -102, -218, -180, -410, 133, -180,
	-180, 34, -416, -114, -282, -352, -243, 67, -243, 67,
	53, 19, 17, -243, -249, -386, -346, 68, -123, -93,
	-357, -312, 68, 68, -114, 20, -169, 73, 20, 73,
	-361, 73, 473, -94, -160, -161, -177, 346, 243, -262,
	247, 77, 248, 382, 249, 212, 251, 252, 253, 223,
	254, 255, 256, 375, 257, 258, 259, 260, 329, 6,
	293, -139, -159, -158, -156, 83, 94, 40, 346, -157,
	77, 129, 266, 244, 267, -176, -233, 64, 352, 217,
	88, 89, 334, -234, -378, -380, -218, -380, -218, -378,
	-378, -261, -243, 20, 474, 310, 40, 78, 40, 360,
	-266, -268, -195, 67, -92, -91, -160, -180, -180, -94,
	-115, -118, -379, -218, 217, 20, 20, -93, -364, 392,
	-360, -358, 387, 388, 389, 390, -309, -308, -311, 393,
	275, 399, -249, -198, 519, 73, 389, -134, -218, -302,
	233, 134, -177, -210, -210, -203, 129, -210, -210, -210,
	-210, 250, 250, -210, -210, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, -210, -210, -210, 67, -156, 83,
	-239, 73, -164, -165, 40, 265, 261, -166, 40, 245,
	246, -168, 67, 273, 13, 89, 89, -142, 67, 65,
	283, 67, 67, 67, -380, 68, 73, 354, 73, 310,
	68, 134, -326, -243, -93, -302, -114, 68, 68, 134,
	-366, 215, -362, 391, -358, 20, 389, 20, 20, 68,
	-310, 96, 359, 363, -243, 67, 20, 34, -303, 282,
	20, -177, 78, 78, -210, -210, 78, 73, 73, 73,
	-210, -210, 78, 73, -220, 78, 78, 78, 78, 40,
	73, -167, 40, 261, 265, 262, 263, 264, 78, 40,
	78, 40, 78, 40, -218, 67, -384, -385, 73, 78,
	67, -347, -267, 67, -266, -381, 297, 298, 299, 301,
	300, -381, -266, -266, -266, 67, -288, -287, 274, 94,
	375, -269, -268, -109, 68, -303, -115, -218, 217, -373,
	67, 78, -363, 20, -361, 20, -361, -361, -310, 515,
	397, 398, 397, 398, -199, -218, -361, 73, 20, -304,
	275, 276, -305, -316, 278, -162, -162, 73, 73, -163,
	244, -144, 68, 134, 103, 68, -243, -253, -171, -170,
	470, -266, 68, 68, 68, 68, -266, 274, -270, 223,
	77, 474, 295, 296, -109, -377, 30, 68, -372, -371,
	-196, -367, -218, 392, 393, 73, -361, 93, 68, 134,
	-195, 67, -314, 279, 67, -312, 67, -312, 89, 298,
	245, 246, 68, -385, 73, 68, -175, -173, -174, 64,
	403, 271, 272, 68, -269, -269, -269, -269, 68, -210,
	73, 294, -376, -375, -374, 68, 134, 133, -310, -218,
	-301, -306, 280, 78, -239, 67, -239, 67, -313, 277,
	67, -287, -174, 64, -173, 64, 14, 13, -176, 78,
	-216, 134, 103, -371, -218, 68, -318, 67, 20, 68,
	-301, 68, -301, 67, 103, -239, -172, 268, 269, 30,
	144, -172, -375, 40, -243, 133, -319, -317, 233, -305,
	68, 68, 68, -301, 78, 68, 83, 40, 270, -218,
	68, 134, 70, -315, 281, 68, -317, -320, 46, 78,
	-324, -321, 67, -177, 235, 113, -324, -177, -323, -322,
	280, 236, 67, 68, 134, 70, 232, 67, -249, -322,
	-321, -249, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 663, 664, 665, 666, 0, 0, 0,
	429, 430, 0, 407, 0, 0, 0, 0, 0, 0,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 324,
	325, 326, 327, 328, 329, 330, 331, 332, 333, 334,
	335, 282, 283, 284, 0, 228, 224, 203, 204, 205,
	164, 165, 166, 167, 292, 0, 0, 0, 0, 0,
	0, 513, -2, 35, 667, 668, 669, 670, 671, 672,
	-2, 442, 0, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 271, 272, 273, 267, 268, 270, 269, -2,
	778, 442, 217, 0, 208, 208, 0, 533, 0, 0,
	548, 570, 33, 0, 491, 0, 496, 873, 909, 910,
	911, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 491, 229,
	431, 432, 533, 533, 405, 0, 253, 0, 1538, 257,
	0, 0, 0, 402, 248, 249, 250, 251, 252, 0,
	655, 0, 0, 244, 0, 223, 1597, 0, 0, 0,
	0, 0, 0, 108, 726, 110, 728, 114, 121, 0,
	0, 126, 127, 130, 131, 132, 133, 134, 0, 138,
	0, 140, 143, 0, 145, 146, 0, 149, 150, 151,
	0, 161, 162, 163, 729, 730, -2, 44, 675, 88,
	1281, 1178, 0, 1185, 1186, 1197, 1206, 981, 982, 983,
	984, 0, 0, 0, 0, 0, 991, 992, 0, 1005,
	1686, 0, 0, 999, 1000, 1001, 1002, 51, 63, 64,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	0, 1151, 968, 909, 0, 1694, 0, 1714, 1713, 0,
	0, 1136, 0, 1126, 0, -2, -2, 0, 0, 1664,
	-2, 1691, 1710, 1718, 1695, 1717, 1688, 1689, 1683, 1684,
	1685, 1687, 1696, 1698, 1709, 0, 1705, 1715, 1716, 0,
	65, 66, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1142, -2, 1144, 1145, 1147,
	1148, 1149, 1150, -2, 1153, 1154, 1155, -2, -2, 1158,
	1159, 1160, 1161, 1162, 1163, 1166, -2, 1168, -2, 1170,
	1138, 1139, 1140, 1141, 1130, 1131, 1132, 1133, 1134, 1135,
	-2, -2, -2, 0, 201, 199, 533, 606, 0, -2,
	0, 0, 0, 553, 556, 559, 562, 0, 36, 37,
	0, 0, 689, 755, 755, 755, 0, 755, 0, 0,
	779, 732, 733, 734, 753, 754, 447, 443, 444, 445,
	446, 521, 0, 523, 526, 385, 337, 0, 0, 0,
	349, 343, 0, 0, 0, 385, 0, 0, 528, 528,
	0, 394, 385, 385, -2, 0, 355, 356, 357, 343,
	0, 343, 361, 362, 363, 374, 375, 395, 1305, 0,
	0, 689, 292, 292, 449, 218, 219, 207, 209, 0,
	213, 0, 206, 1597, 0, 0, 175, 1664, 180, 0,
	1545, 1611, 1560, 0, 0, 1578, 0, -2, 528, 0,
	534, 0, 533, 0, 0, 292, 292, 292, 292, 292,
	292, 292, 0, 0, 0, 0, 571, 572, 567, 568,
	569, 573, 574, 3, 0, 656, 657, 660, 661, 662,
	459, 0, 495, 0, 0, 528, -2, 0, 406, 254,
	912, 0, 0, 258, 259, 0, 0, 274, 0, 277,
	262, 263, 264, 0, 0, 246, 247, 0, 0, 225,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 0,
	118, 115, 122, 125, 135, 142, 0, 154, 156, 159,
	116, 123, 128, 129, 136, 157, 117, 119, 120, 124,
	158, 160, 137, 141, 155, 139, 144, 147, 148, 153,
	0, 89, 0, 0, 0, 0, 0, 0, 1184, 0,
	0, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1178, 0, 0, 987,
	988, 989, 990, 993, 0, 1006, 0, 0, 0, 0,
	1235, 0, 1176, 1176, 0, 1176, 1172, 0, 0, 1176,
	1115, 0, 0, 1117, 1127, 0, 0, 1120, 1121, 1176,
	0, 1176, 1125, 1111, 1112, 0, 1172, 1172, 0, 0,
	1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172,
	1172, 1172, 0, 1282, 1300, 1237, 1238, 1239, 1287, 1241,
	1291, 1291, 1287, 1287, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 0, 0, 1280, 1260, 1289, 1289, 1289,
	1287, 1284, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1294, 1294, 1297, 1294,
	0, 528, 0, 0, 516, 0, 497, 0, 550, 552,
	0, 554, 555, 557, 558, 560, 561, 563, 564, 38,
	0, 674, 0, 677, 0, 755, 690, 0, 0, 0,
	0, 0, 0, 755, 755, 449, 448, 0, 522, 0,
	0, 579, 0, 0, 343, 385, 348, 345, 344, 390,
	391, 387, 0, 387, 387, 579, 0, 368, 369, 370,
	385, 385, 376, 529, 377, 378, 387, 0, 392, 393,
	0, 579, 579, 0, 0, 0, 755, 345, 359, 345,
	1306, 1307, 0, 0, 0, 0, 450, 0, 0, 211,
	0, 216, 168, 0, 0, 0, 0, 0, 0, 197,
	198, 0, 0, 0, 0, 0, 188, 191, 867, 868,
	723, 724, 192, 193, 497, 549, 551, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 587,
	581, 583, 650, 51, 587, 0, 0, 470, 0, 464,
	0, 0, 0, 874, 451, 483, 453, 0, 472, 497,
	519, 497, 0, 255, 0, 260, 0, 0, 276, 278,
	279, 280, 265, 266, 403, 242, 243, 235, 236, 237,
	238, 239, 240, 241, 245, 61, 0, 226, 227, 0,
	0, 0, 102, 103, 104, 105, 106, 107, 109, 93,
	419, 421, 715, 727, 0, 718, 0, 112, 152, 85,
	0, 0, 85, 1179, 1180, 1181, 1182, 1183, 1187, 0,
	1189, 1191, 1193, 1195, 0, 1211, -2, -2, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	1198, 1209, 1210, 0, 0, 0, 0, 0, 1207, 1202,
	0, 985, 0, 1003, 1007, 0, 0, 0, 0, 52,
	1171, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	0, 1177, 0, 1178, 0, 0, 0, 1173, 1174, 0,
	0, 1076, 1077, 1078, 0, 478, 0, 1137, 1116, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 1303, 1301, 1302, 1240, 1288,
	0, 1265, 0, 1266, 1267, 1268, 0, 0, 1261, 0,
	1262, 1263, 1264, 1256, 0, 1257, 1258, 0, 1259, 200,
	605, 607, 0, 487, 489, 490, 0, 517, 530, 535,
	536, 539, 34, 39, 0, 678, 755, 0, 0, 692,
	0, 290, 709, 0, 725, 747, -2, 0, 0, 0,
	524, 0, 0, 619, 336, 0, 386, 340, 1597, 345,
	579, 350, 346, 401, 351, 0, 389, 352, 353, 354,
	0, 579, 579, 385, 387, 387, 381, 382, 0, 396,
	399, 397, 0, 358, 360, 292, 287, 290, 592, 0,
	593, 594, 590, 621, 645, 645, 0, 645, 625, 873,
	220, 221, 0, 0, 215, 169, 170, 0, 172, 173,
	174, 181, 176, 178, 0, 0, 182, 194, 195, 196,
	0, 0, 0, 186, 187, 0, 515, 417, 418, 422,
	0, 424, 871, 425, 426, 678, 579, 0, 588, 0,
	584, 651, 0, 653, 0, 579, 507, 0, 458, 0,
	483, 472, 0, 0, 459, 476, 0, 493, 452, 480,
	0, 484, 0, 0, 457, 473, 0, 518, 520, 913,
	0, 1312, -2, 1314, -2, -2, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 0, 261, 275, 0, 0, 0, 0, 96,
	712, 0, 97, 101, 91, 0, 0, 0, 717, 0,
	714, 719, 0, 111, 0, 0, 86, 87, 770, 775,
	0, 0, 1188, 1190, 1192, 1194, 1196, 0, 1199, 1207,
	1203, 0, 1200, 0, 0, 1179, 0, 1008, 0, 0,
	0, 996, 0, 0, 0, 1064, 1065, 0, 0, 1069,
	0, 1071, 0, 0, 0, 1075, 0, 1114, 1129, 1118,
	0, 1122, 0, 1124, 0, 1040, 0, 1042, 1042, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 1283, 1236, 1304, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 608, 499, 0, 0, 0, 542,
	540, 541, 0, 0, 679, 680, 682, 683, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1530, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	0, 699, 1308, 756, 294, 0, 0, 711, 0, 0,
	752, -2, 759, 0, 765, 0, 0, 0, 0, 436,
	440, 33, 527, 0, 580, 338, 0, 339, 385, 347,
	388, 579, 873, 371, 372, 579, 385, 385, 387, 0,
	398, 0, 699, 1308, 294, 0, 0, 0, 0, 0,
	612, 0, 0, 611, 0, 0, 0, 0, 0, 526,
	646, 0, 648, 649, 658, 659, 623, -2, 0, 592,
	628, 1176, 222, 210, 212, 0, 0, 0, 0, 183,
	184, 185, 189, 190, 0, 0, 0, 577, 582, 589,
	652, 654, 52, 585, 577, 40, 0, 0, 0, 463,
	469, 0, 461, 459, 0, 0, 0, 492, 0, 483,
	485, 0, 483, 0, 0, 0, 0, 404, 62, 281,
	0, 0, 0, 0, 0, 420, 0, 716, 93, 0,
	0, 113, 0, 0, 773, 0, 775, 0, 1175, 1201,
	0, 1208, 1204, 986, 994, 1004, 0, 0, 1010, 1022,
	1022, 0, 1013, 1287, 1291, 1016, 1287, 1289, 1287, 1022,
	1022, 0, 53, 0, 0, 1070, 0, 0, 0, 479,
	0, 0, 0, 0, 0, 1042, 1046, 0, 1047, 1042,
	1042, 1042, 1042, 1052, 1042, 1042, 1042, 1042, 1042, 1042,
	1042, 1042, 1293, 1292, 1278, 0, 1279, 1290, 1295, 0,
	1298, 0, 488, 503, 0, 531, 532, 537, 538, 0,
	0, 0, 0, 684, 526, 875, 702, 700, 701, 0,
	1309, 706, 295, 296, 297, 298, 0, 0, 0, 710,
	0, 0, 748, 749, 750, 751, 760, 1308, 1308, 1308,
	875, 875, 491, 0, -2, 0, 0, 438, 0, 0,
	620, 341, 579, 364, 0, 379, 579, 579, 385, 400,
	526, 702, 0, 706, 579, 232, 0, 615, 609, 0,
	598, 613, 614, 601, 0, 603, 0, 599, 600, 579,
	591, 622, 647, 624, 627, 629, 630, 636, 0, 0,
	0, 0, 214, 171, 0, 314, 177, 423, 872, 428,
	575, 0, 0, 575, 508, 507, 0, 460, 0, 0,
	477, 483, 0, 494, 481, 0, 486, 483, 456, 455,
	474, 475, 914, 1313, 1310, 1311, 256, 0, 713, 93,
	98, 99, 100, 94, 92, 720, 0, 722, 0, 771,
	775, 0, 0, 0, 1205, 1009, 995, 1011, 1023, 1024,
	1012, 997, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 998,
	1066, 0, 1068, 1072, 1073, 0, 1119, 1123, 0, 1042,
	1041, 1045, 1038, 1048, 1049, 1050, 1051, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1286, 0, 0, 505, 74,
	0, 0, 543, 544, 673, 0, 681, 0, 0, 0,
	876, 877, 879, 880, 0, 0, 882, 938, 0, 891,
	755, 891, 0, 0, 893, 894, 691, 0, 0, 694,
	695, 704, 0, 0, 0, 300, 301, 0, 0, 0,
	313, 309, 310, 311, 291, 705, 0, 0, 0, 0,
	0, 0, 645, 0, 0, 579, 437, 440, 441, 525,
	342, 579, 383, 380, 579, 0, 286, 0, 289, 533,
	0, 0, 595, 616, 0, 0, 596, 0, 597, 602,
	604, 231, 631, 0, 0, 633, 634, 635, 626, 179,
	565, 0, 0, 586, 566, 41, 472, 465, 462, 483,
	468, 467, 0, 482, 454, 95, 90, 721, 459, 774,
	776, 772, 76, 0, 1074, 0, 1044, 533, 1039, 0,
	1296, 1299, 507, 0, 504, 0, 0, 0, 0, 687,
	685, 0, -2, 0, -2, 881, 939, 903, 903, 892,
	903, 903, 755, 0, 703, 693, 0, 707, 708, 0,
	302, 303, 0, 306, 312, 0, 761, 762, 869, 870,
	763, 0, -2, 579, 579, -2, 434, 439, 0, 365,
	384, 0, 288, 528, 233, 234, 617, 0, 610, 640,
	637, 0, 0, 576, 578, 471, 466, 460, 76, 42,
	70, 0, 1067, 1113, 1035, 0, 509, 506, 0, 500,
	502, 84, 0, 688, 780, -2, 823, 1308, 1308, 0,
	1308, 1308, 1308, 1308, 0, 0, 1308, 1308, 1308, 1308,
	1308, 1308, 1308, 1308, 1308, 1308, 1308, 1308, 1308, 1308,
	0, 878, 905, -2, 917, 919, 0, 0, 922, 923,
	0, 0, 0, 0, 960, 929, 0, 0, 933, 0,
	1223, 1224, 0, 937, 0, 895, 904, 0, 904, 0,
	0, 903, 0, 0, 0, 299, 304, 0, 307, 308,
	0, 743, 1287, 0, 767, 76, 780, 533, 435, 285,
	230, 0, 0, 641, 643, 638, 639, 43, 67, 72,
	77, 78, 0, 0, 0, 0, 0, 1036, 0, 1030,
	1031, 1032, 1037, 498, 0, 75, 0, 0, 686, 782,
	0, 764, 825, 0, 0, 1308, 1308, 0, 0, 0,
	0, 1308, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 918, 920,
	921, 924, 925, 926, 965, 966, 967, 927, 962, 963,
	964, 928, 0, 0, 0, 1221, 1222, 958, 0, 0,
	0, 0, 0, 0, 0, 889, 696, 0, 698, 305,
	736, 0, 539, 0, 769, 782, 528, 618, 632, 0,
	54, 0, 74, 0, 79, 0, 0, 0, 0, 1043,
	1033, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	819, 824, 826, 827, 0, 0, 830, 831, 832, 833,
	0, 0, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 861, 862, 863, 864, 865, 866, 846, 847,
	848, 849, 850, 851, 858, 0, 0, 855, 0, 0,
	0, 1126, 953, 0, 0, 896, 898, 899, 900, 901,
	902, 897, 0, 0, 0, 0, 888, 890, 934, 0,
	697, 735, 744, 745, 539, 768, 433, 642, 644, 45,
	0, 0, 71, 0, 80, 0, 82, 83, 0, 1025,
	1026, 1028, 1027, 1029, 0, 511, 501, 676, 0, 807,
	0, 0, 813, 0, 820, 828, 829, 834, 835, 852,
	0, 0, 854, 0, 0, 961, 0, 932, 941, 954,
	0, 0, 736, 736, 736, 736, 0, 935, 737, 1308,
	0, 0, 741, 742, 746, 777, 0, 55, 0, 57,
	59, 60, 906, 68, 69, 73, 81, 0, 510, 0,
	783, 0, 785, 0, 0, 0, 0, 0, 817, 0,
	859, 860, 853, 856, 857, 930, 940, 942, 943, 0,
	955, 956, 957, 959, 883, 884, 885, 886, 0, 0,
	739, 0, 46, 47, 0, 56, 0, 0, 1034, 512,
	0, 787, 0, 808, 0, 0, 0, 0, 0, 0,
	0, 931, 944, 0, 945, 0, 0, 0, 887, 738,
	740, 0, 0, 58, 907, 784, 781, 0, 819, 809,
	0, 811, 0, 0, 0, 0, 946, 948, 949, 0,
	0, 947, 48, 49, 50, 0, 0, 789, 0, 805,
	810, 812, 814, 0, 818, 816, 950, 952, 951, 908,
	788, 0, 801, 786, 0, 815, 790, -2, 0, 806,
	791, -2, 0, 799, 0, 0, 792, 800, 0, 795,
	0, 0, 0, 794, 0, -2, 802, 0, 0, 796,
	-2, 0, 804, 803,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 525,
	104, 103, 105, 3, 526, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 527, 115, 528, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:620
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:626
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:661
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:666
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:672
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:692
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:698
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:705
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:713
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:719
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:728
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:736
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:749
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:761
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:785
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:791
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:795
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:801
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:808
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:817
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:821
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:825
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:838
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:844
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:853
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:864
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:868
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:874
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:878
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:888
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:894
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:918
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:937
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:941
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:945
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:954
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:962
		{
			yyVAL.str = ""
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:966
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:971
		{
			yyVAL.str = "\n"
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:975
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:984
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1008
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1012
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1024
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1042
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1059
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1086
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1099
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1105
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1118
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1129
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1156
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1169
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1188
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1194
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1201
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1209
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1245
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1249
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1255
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1262
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1271
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1275
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1503
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1546
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1550
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1556
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1573
		{
			yyVAL.str = yyDollar[3].str
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1579
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1583
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1622
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1645
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1668
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1690
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1697
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1704
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1721
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1731
		{
			yyVAL.str = yyDollar[1].str
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1738
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1744
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1748
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1765
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1808
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1856
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1891
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1906
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1912
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1934
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1972
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1992
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2000
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2008
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2018
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2059
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2063
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2069
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2075
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2080
		{
			yyVAL.str = "true"
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2081
		{
			yyVAL.str = "false"
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2087
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2122
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2128
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2172
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2188
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2192
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2212
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2216
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2244
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2248
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2254
		{
			yyVAL.item = nil
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2259
		{
			yyVAL.item = nil
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2317
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2328
		{
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2332
		{
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2358
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2376
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2391
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2399
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2403
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2407
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2446
		{
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2448
		{
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2480
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2484
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2502
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2518
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2534
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2569
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2574
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2578
		{
			yyVAL.str = yyDollar[2].str
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2584
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2597
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2601
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2639
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2643
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2653
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2691
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2695
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2701
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2735
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2741
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2747
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2753
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2764
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2769
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2776
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2792
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2805
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2816
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2820
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2826
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2831
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2838
		{
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2840
		{
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2843
		{
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2852
		{
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2856
		{
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2861
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2870
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2883
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2891
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2905
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2925
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2938
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2944
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2948
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2954
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2975
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2984
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2992
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3000
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3024
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3047
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3051
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3076
		{
			yyVAL.str = yyDollar[1].str
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3080
		{
			yyVAL.str = yyDollar[3].str
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3086
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3090
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3096
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3101
		{
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3112
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3116
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3132
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3138
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3142
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3148
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3152
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3188
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3206
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3242
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3255
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3259
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3264
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3268
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3275
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3280
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3305
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3313
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3335
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3339
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3357
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3366
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3389
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3395
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3401
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3405
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3411
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3416
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3420
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3424
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3429
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3433
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3437
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3451
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3465
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3479
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3511
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3536
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3576
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3610
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3660
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3665
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3669
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3678
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3684
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3688
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3694
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3698
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3702
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3706
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3711
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3719
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3733
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3751
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3757
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3766
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3794
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3798
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3808
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3812
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3816
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3820
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3826
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3836
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3840
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3846
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3856
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3862
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3868
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3872
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3876
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3886
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3896
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3902
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3906
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3912
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3916
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3926
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3939
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3945
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3951
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3964
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3982
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3986
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3992
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4002
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4006
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4010
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4015
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4019
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4023
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4027
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4032
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4036
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4040
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4044
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4048
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4053
		{
			yyVAL.str = ""
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4057
		{
			yyVAL.str = yyDollar[1].str
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4061
		{
			yyVAL.str = yyDollar[2].str
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4070
		{
			yyVAL.str = ""
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4074
		{
			yyVAL.str = yyDollar[1].str
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4078
		{
			yyVAL.str = yyDollar[2].str
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4086
		{
			yyVAL.str = yyDollar[2].str
		}
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4122
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4132
		{
			yyVAL.str = yyDollar[1].str
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4138
		{
			yyVAL.str = yyDollar[1].str
		}
	case 676:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4145
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str))
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4162
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4169
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4173
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4179
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4185
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4189
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4193
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4205
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4211
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4222
		{
		}
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4239
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4245
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4255
		{
			yyVAL.str = yyDollar[1].str
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4259
		{
			yyVAL.str = yyDollar[1].str
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4265
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4272
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4278
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4286
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4292
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4299
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4307
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4334
		{
			yyVAL.str = yyDollar[1].str
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4339
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4345
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4353
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4459
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4463
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4479
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4483
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4489
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4503
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4516
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4535
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4557
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4561
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4584
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4588
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4592
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4596
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4602
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4625
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4647
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4655
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4659
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4663
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4669
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4673
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4679
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4684
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4693
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4697
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4701
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4705
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4711
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4725
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4729
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4738
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4744
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4748
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4754
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4762
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4767
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4789
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4811
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4818
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4832
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4841
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4845
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4850
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4854
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4861
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4876
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4885
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4899
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4930
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4936
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4940
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4955
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4969
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4975
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4979
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4992
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5001
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5005
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5014
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5019
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5023
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5028
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5032
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5042
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5046
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5057
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5065
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5073
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5081
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5092
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5101
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5111
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5121
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5125
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5130
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5134
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5143
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5149
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5153
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5157
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5163
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5167
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5171
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5175
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5179
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5183
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5199
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5207
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5215
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5219
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5231
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5239
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5243
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5247
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5251
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5255
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5259
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5263
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5282
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5286
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5297
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5301
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5305
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5311
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5349
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5358
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5363
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5369
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5376
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5380
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5390
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5396
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5406
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5412
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5430
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5462
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5472
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5480
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5486
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5490
		{
			yyVAL.str = yyDollar[1].str
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5500
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5506
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5512
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5526
		{
			yyVAL.str = ""
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5558
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5575
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5581
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5585
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5591
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5595
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5599
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5603
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5607
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5611
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5615
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5619
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5623
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5627
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5631
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5635
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5639
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5643
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5656
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5662
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5671
		{
			yyVAL.str = ""
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5675
		{
			yyVAL.str = yyDollar[1].str
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5681
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5685
		{
			yyVAL.str = yyDollar[2].str
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5691
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5703
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5717
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5724
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5731
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5740
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5746
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5752
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5756
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5760
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5764
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5768
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5773
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5780
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5784
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5788
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5797
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5802
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5806
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5822
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5828
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5832
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5836
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5840
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5848
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5852
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5856
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5860
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5864
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5868
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5876
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5882
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5886
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5890
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5894
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5902
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5906
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5910
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5914
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5918
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5922
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5926
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5931
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5939
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5943
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5955
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5959
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5968
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5972
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5976
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5980
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5989
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5998
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6004
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6008
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6014
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6024
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6058
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6071
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6096
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6140
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6157
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6172
		{
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6178
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6182
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6192
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6196
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6204
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6208
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6212
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6218
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6225
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6238
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6245
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6254
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6259
		{
			yyVAL.str = ","
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6263
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6272
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6282
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[7].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6312
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6321
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6371
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6381
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6391
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6401
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6441
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6458
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6474
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6482
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6490
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6507
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6516
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6524
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6541
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6550
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6572
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6608
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6620
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6642
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6650
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6657
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6664
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6676
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6684
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6695
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6704
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6713
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6721
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6731
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6739
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6753
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6763
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6782
		{
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6784
		{
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6825
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6835
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6843
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6858
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6864
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6868
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6875
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6879
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6883
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6903
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6913
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6921
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6925
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6945
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6953
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6969
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6973
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6977
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6981
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6991
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6997
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7001
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7008
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7012
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7016
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7022
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7026
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7030
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7034
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7038
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7042
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7046
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7052
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7056
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7060
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7064
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7070
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7074
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7087
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7112
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7126
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7130
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7137
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7148
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7153
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7159
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7171
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7221
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7260
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7340
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7363
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7397
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7445
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7462
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7474
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7494
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7514
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7534
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7550
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7576
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7614
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7626
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7638
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7686
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7751
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7759
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7768
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7778
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7801
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7806
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7812
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7819
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7823
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7828
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7832
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7838
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7844
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7851
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7858
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7867
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7874
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7881
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7890
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7898
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7904
		{
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7906
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7916
		{
			yyVAL.str = ""
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7920
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

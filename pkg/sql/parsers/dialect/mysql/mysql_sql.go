// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const STAGE = 57420
const CREDENTIALS = 57421
const ENABLE = 57422
const INTEGRAL = 57423
const HEX = 57424
const BIT_LITERAL = 57425
const FLOAT = 57426
const HEXNUM = 57427
const NULL = 57428
const TRUE = 57429
const FALSE = 57430
const LOWER_THAN_CHARSET = 57431
const CHARSET = 57432
const UNIQUE = 57433
const KEY = 57434
const OR = 57435
const PIPE_CONCAT = 57436
const XOR = 57437
const AND = 57438
const NOT = 57439
const BETWEEN = 57440
const CASE = 57441
const WHEN = 57442
const THEN = 57443
const ELSE = 57444
const END = 57445
const ELSEIF = 57446
const LOWER_THAN_EQ = 57447
const LE = 57448
const GE = 57449
const NE = 57450
const NULL_SAFE_EQUAL = 57451
const IS = 57452
const LIKE = 57453
const REGEXP = 57454
const IN = 57455
const ASSIGNMENT = 57456
const ILIKE = 57457
const SHIFT_LEFT = 57458
const SHIFT_RIGHT = 57459
const DIV = 57460
const MOD = 57461
const UNARY = 57462
const COLLATE = 57463
const BINARY = 57464
const UNDERSCORE_BINARY = 57465
const INTERVAL = 57466
const OUT = 57467
const INOUT = 57468
const BEGIN = 57469
const START = 57470
const TRANSACTION = 57471
const COMMIT = 57472
const ROLLBACK = 57473
const WORK = 57474
const CONSISTENT = 57475
const SNAPSHOT = 57476
const CHAIN = 57477
const NO = 57478
const RELEASE = 57479
const PRIORITY = 57480
const QUICK = 57481
const BIT = 57482
const TINYINT = 57483
const SMALLINT = 57484
const MEDIUMINT = 57485
const INT = 57486
const INTEGER = 57487
const BIGINT = 57488
const INTNUM = 57489
const REAL = 57490
const DOUBLE = 57491
const FLOAT_TYPE = 57492
const DECIMAL = 57493
const NUMERIC = 57494
const DECIMAL_VALUE = 57495
const TIME = 57496
const TIMESTAMP = 57497
const DATETIME = 57498
const YEAR = 57499
const CHAR = 57500
const VARCHAR = 57501
const BOOL = 57502
const CHARACTER = 57503
const VARBINARY = 57504
const NCHAR = 57505
const TEXT = 57506
const TINYTEXT = 57507
const MEDIUMTEXT = 57508
const LONGTEXT = 57509
const BLOB = 57510
const TINYBLOB = 57511
const MEDIUMBLOB = 57512
const LONGBLOB = 57513
const JSON = 57514
const ENUM = 57515
const UUID = 57516
const GEOMETRY = 57517
const POINT = 57518
const LINESTRING = 57519
const POLYGON = 57520
const GEOMETRYCOLLECTION = 57521
const MULTIPOINT = 57522
const MULTILINESTRING = 57523
const MULTIPOLYGON = 57524
const INT1 = 57525
const INT2 = 57526
const INT3 = 57527
const INT4 = 57528
const INT8 = 57529
const S3OPTION = 57530
const SQL_SMALL_RESULT = 57531
const SQL_BIG_RESULT = 57532
const SQL_BUFFER_RESULT = 57533
const LOW_PRIORITY = 57534
const HIGH_PRIORITY = 57535
const DELAYED = 57536
const CREATE = 57537
const ALTER = 57538
const DROP = 57539
const RENAME = 57540
const ANALYZE = 57541
const ADD = 57542
const RETURNS = 57543
const SCHEMA = 57544
const TABLE = 57545
const SEQUENCE = 57546
const INDEX = 57547
const VIEW = 57548
const TO = 57549
const IGNORE = 57550
const IF = 57551
const PRIMARY = 57552
const COLUMN = 57553
const CONSTRAINT = 57554
const SPATIAL = 57555
const FULLTEXT = 57556
const FOREIGN = 57557
const KEY_BLOCK_SIZE = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const MAXVALUE = 57567
const PARTITION = 57568
const REORGANIZE = 57569
const LESS = 57570
const THAN = 57571
const PROCEDURE = 57572
const TRIGGER = 57573
const STATUS = 57574
const VARIABLES = 57575
const ROLE = 57576
const PROXY = 57577
const AVG_ROW_LENGTH = 57578
const STORAGE = 57579
const DISK = 57580
const MEMORY = 57581
const CHECKSUM = 57582
const COMPRESSION = 57583
const DATA = 57584
const DIRECTORY = 57585
const DELAY_KEY_WRITE = 57586
const ENCRYPTION = 57587
const ENGINE = 57588
const MAX_ROWS = 57589
const MIN_ROWS = 57590
const PACK_KEYS = 57591
const ROW_FORMAT = 57592
const STATS_AUTO_RECALC = 57593
const STATS_PERSISTENT = 57594
const STATS_SAMPLE_PAGES = 57595
const DYNAMIC = 57596
const COMPRESSED = 57597
const REDUNDANT = 57598
const COMPACT = 57599
const FIXED = 57600
const COLUMN_FORMAT = 57601
const AUTO_RANDOM = 57602
const ENGINE_ATTRIBUTE = 57603
const SECONDARY_ENGINE_ATTRIBUTE = 57604
const INSERT_METHOD = 57605
const RESTRICT = 57606
const CASCADE = 57607
const ACTION = 57608
const PARTIAL = 57609
const SIMPLE = 57610
const CHECK = 57611
const ENFORCED = 57612
const RANGE = 57613
const LIST = 57614
const ALGORITHM = 57615
const LINEAR = 57616
const PARTITIONS = 57617
const SUBPARTITION = 57618
const SUBPARTITIONS = 57619
const CLUSTER = 57620
const TYPE = 57621
const ANY = 57622
const SOME = 57623
const EXTERNAL = 57624
const LOCALFILE = 57625
const URL = 57626
const PREPARE = 57627
const DEALLOCATE = 57628
const RESET = 57629
const EXTENSION = 57630
const INCREMENT = 57631
const CYCLE = 57632
const MINVALUE = 57633
const PUBLICATION = 57634
const SUBSCRIPTIONS = 57635
const PUBLICATIONS = 57636
const PROPERTIES = 57637
const PARSER = 57638
const VISIBLE = 57639
const INVISIBLE = 57640
const BTREE = 57641
const HASH = 57642
const RTREE = 57643
const BSI = 57644
const ZONEMAP = 57645
const LEADING = 57646
const BOTH = 57647
const TRAILING = 57648
const UNKNOWN = 57649
const EXPIRE = 57650
const ACCOUNT = 57651
const ACCOUNTS = 57652
const UNLOCK = 57653
const DAY = 57654
const NEVER = 57655
const PUMP = 57656
const MYSQL_COMPATIBILITY_MODE = 57657
const SECOND = 57658
const ASCII = 57659
const COALESCE = 57660
const COLLATION = 57661
const HOUR = 57662
const MICROSECOND = 57663
const MINUTE = 57664
const MONTH = 57665
const QUARTER = 57666
const REPEAT = 57667
const REVERSE = 57668
const ROW_COUNT = 57669
const WEEK = 57670
const REVOKE = 57671
const FUNCTION = 57672
const PRIVILEGES = 57673
const TABLESPACE = 57674
const EXECUTE = 57675
const SUPER = 57676
const GRANT = 57677
const OPTION = 57678
const REFERENCES = 57679
const REPLICATION = 57680
const SLAVE = 57681
const CLIENT = 57682
const USAGE = 57683
const RELOAD = 57684
const FILE = 57685
const TEMPORARY = 57686
const ROUTINE = 57687
const EVENT = 57688
const SHUTDOWN = 57689
const NULLX = 57690
const AUTO_INCREMENT = 57691
const APPROXNUM = 57692
const SIGNED = 57693
const UNSIGNED = 57694
const ZEROFILL = 57695
const ENGINES = 57696
const LOW_CARDINALITY = 57697
const AUTOEXTEND_SIZE = 57698
const ADMIN_NAME = 57699
const RANDOM = 57700
const SUSPEND = 57701
const ATTRIBUTE = 57702
const HISTORY = 57703
const REUSE = 57704
const CURRENT = 57705
const OPTIONAL = 57706
const FAILED_LOGIN_ATTEMPTS = 57707
const PASSWORD_LOCK_TIME = 57708
const UNBOUNDED = 57709
const SECONDARY = 57710
const RESTRICTED = 57711
const USER = 57712
const IDENTIFIED = 57713
const CIPHER = 57714
const ISSUER = 57715
const X509 = 57716
const SUBJECT = 57717
const SAN = 57718
const REQUIRE = 57719
const SSL = 57720
const NONE = 57721
const PASSWORD = 57722
const MAX_QUERIES_PER_HOUR = 57723
const MAX_UPDATES_PER_HOUR = 57724
const MAX_CONNECTIONS_PER_HOUR = 57725
const MAX_USER_CONNECTIONS = 57726
const FORMAT = 57727
const VERBOSE = 57728
const CONNECTION = 57729
const TRIGGERS = 57730
const PROFILES = 57731
const LOAD = 57732
const INFILE = 57733
const TERMINATED = 57734
const OPTIONALLY = 57735
const ENCLOSED = 57736
const ESCAPED = 57737
const STARTING = 57738
const LINES = 57739
const ROWS = 57740
const IMPORT = 57741
const MODUMP = 57742
const OVER = 57743
const PRECEDING = 57744
const FOLLOWING = 57745
const GROUPS = 57746
const DATABASES = 57747
const TABLES = 57748
const SEQUENCES = 57749
const EXTENDED = 57750
const FULL = 57751
const PROCESSLIST = 57752
const FIELDS = 57753
const COLUMNS = 57754
const OPEN = 57755
const ERRORS = 57756
const WARNINGS = 57757
const INDEXES = 57758
const SCHEMAS = 57759
const NODE = 57760
const LOCKS = 57761
const ROLES = 57762
const TABLE_NUMBER = 57763
const COLUMN_NUMBER = 57764
const TABLE_VALUES = 57765
const TABLE_SIZE = 57766
const NAMES = 57767
const GLOBAL = 57768
const PERSIST = 57769
const SESSION = 57770
const ISOLATION = 57771
const LEVEL = 57772
const READ = 57773
const WRITE = 57774
const ONLY = 57775
const REPEATABLE = 57776
const COMMITTED = 57777
const UNCOMMITTED = 57778
const SERIALIZABLE = 57779
const LOCAL = 57780
const EVENTS = 57781
const PLUGINS = 57782
const CURRENT_TIMESTAMP = 57783
const DATABASE = 57784
const CURRENT_TIME = 57785
const LOCALTIME = 57786
const LOCALTIMESTAMP = 57787
const UTC_DATE = 57788
const UTC_TIME = 57789
const UTC_TIMESTAMP = 57790
const REPLACE = 57791
const CONVERT = 57792
const SEPARATOR = 57793
const TIMESTAMPDIFF = 57794
const CURRENT_DATE = 57795
const CURRENT_USER = 57796
const CURRENT_ROLE = 57797
const SECOND_MICROSECOND = 57798
const MINUTE_MICROSECOND = 57799
const MINUTE_SECOND = 57800
const HOUR_MICROSECOND = 57801
const HOUR_SECOND = 57802
const HOUR_MINUTE = 57803
const DAY_MICROSECOND = 57804
const DAY_SECOND = 57805
const DAY_MINUTE = 57806
const DAY_HOUR = 57807
const YEAR_MONTH = 57808
const SQL_TSI_HOUR = 57809
const SQL_TSI_DAY = 57810
const SQL_TSI_WEEK = 57811
const SQL_TSI_MONTH = 57812
const SQL_TSI_QUARTER = 57813
const SQL_TSI_YEAR = 57814
const SQL_TSI_SECOND = 57815
const SQL_TSI_MINUTE = 57816
const RECURSIVE = 57817
const CONFIG = 57818
const DRAINER = 57819
const MATCH = 57820
const AGAINST = 57821
const BOOLEAN = 57822
const LANGUAGE = 57823
const WITH = 57824
const QUERY = 57825
const EXPANSION = 57826
const ADDDATE = 57827
const BIT_AND = 57828
const BIT_OR = 57829
const BIT_XOR = 57830
const CAST = 57831
const COUNT = 57832
const APPROX_COUNT_DISTINCT = 57833
const APPROX_PERCENTILE = 57834
const CURDATE = 57835
const CURTIME = 57836
const DATE_ADD = 57837
const DATE_SUB = 57838
const EXTRACT = 57839
const GROUP_CONCAT = 57840
const MAX = 57841
const MID = 57842
const MIN = 57843
const NOW = 57844
const POSITION = 57845
const SESSION_USER = 57846
const STD = 57847
const STDDEV = 57848
const MEDIAN = 57849
const STDDEV_POP = 57850
const STDDEV_SAMP = 57851
const SUBDATE = 57852
const SUBSTR = 57853
const SUBSTRING = 57854
const SUM = 57855
const SYSDATE = 57856
const SYSTEM_USER = 57857
const TRANSLATE = 57858
const TRIM = 57859
const VARIANCE = 57860
const VAR_POP = 57861
const VAR_SAMP = 57862
const AVG = 57863
const RANK = 57864
const ROW_NUMBER = 57865
const DENSE_RANK = 57866
const NEXTVAL = 57867
const SETVAL = 57868
const CURRVAL = 57869
const LASTVAL = 57870
const ARROW = 57871
const ROW = 57872
const OUTFILE = 57873
const HEADER = 57874
const MAX_FILE_SIZE = 57875
const FORCE_QUOTE = 57876
const PARALLEL = 57877
const UNUSED = 57878
const BINDINGS = 57879
const DO = 57880
const DECLARE = 57881
const LOOP = 57882
const WHILE = 57883
const LEAVE = 57884
const ITERATE = 57885
const UNTIL = 57886
const CALL = 57887
const SPBEGIN = 57888
const BACKEND = 57889
const SERVERS = 57890
const KILL = 57891
const QUERY_RESULT = 57892

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"ENABLE",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9926

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 113,
	21, 652,
	-2, 633,
	-1, 127,
	222, 890,
	-2, 961,
	-1, 150,
	42, 473,
	222, 473,
	249, 480,
	250, 480,
	433, 473,
	-2, 506,
	-1, 186,
	569, 1656,
	-2, 391,
	-1, 511,
	301, 130,
	408, 130,
	-2, 1568,
	-1, 574,
	68, 1367,
	-2, 1710,
	-1, 575,
	68, 1385,
	-2, 1681,
	-1, 579,
	68, 1386,
	-2, 1709,
	-1, 604,
	68, 1297,
	-2, 1772,
	-1, 605,
	68, 1298,
	-2, 1771,
	-1, 606,
	68, 1299,
	-2, 1761,
	-1, 607,
	68, 1736,
	-2, 1756,
	-1, 608,
	68, 1737,
	-2, 1757,
	-1, 609,
	68, 1738,
	-2, 1763,
	-1, 610,
	68, 1739,
	-2, 1746,
	-1, 611,
	68, 1740,
	-2, 1754,
	-1, 612,
	68, 1741,
	-2, 1764,
	-1, 613,
	68, 1742,
	-2, 1765,
	-1, 614,
	68, 1743,
	-2, 1770,
	-1, 615,
	68, 1744,
	-2, 1775,
	-1, 616,
	68, 1745,
	-2, 1776,
	-1, 618,
	68, 1364,
	-2, 1557,
	-1, 622,
	68, 1369,
	-2, 1569,
	-1, 625,
	68, 1373,
	-2, 1587,
	-1, 629,
	68, 1377,
	-2, 1627,
	-1, 630,
	68, 1378,
	-2, 1705,
	-1, 638,
	68, 1388,
	-2, 1690,
	-1, 639,
	68, 1389,
	-2, 1735,
	-1, 640,
	68, 1390,
	-2, 1700,
	-1, 641,
	68, 1391,
	-2, 1725,
	-1, 652,
	68, 1275,
	-2, 1766,
	-1, 653,
	68, 1276,
	-2, 1767,
	-1, 654,
	68, 1277,
	-2, 1768,
	-1, 658,
	21, 653,
	-2, 616,
	-1, 729,
	428, 506,
	429, 506,
	-2, 474,
	-1, 773,
	109, 1557,
	120, 1557,
	140, 1557,
	-2, 1532,
	-1, 876,
	21, 653,
	-2, 616,
	-1, 976,
	21, 652,
	-2, 1175,
	-1, 1332,
	68, 1435,
	-2, 1707,
	-1, 1333,
	68, 1436,
	-2, 1708,
	-1, 1467,
	69, 797,
	-2, 803,
	-1, 1815,
	69, 1518,
	141, 1518,
	-2, 1692,
	-1, 1816,
	69, 1518,
	141, 1518,
	-2, 1691,
	-1, 1817,
	69, 1496,
	141, 1496,
	-2, 1678,
	-1, 1818,
	69, 1497,
	141, 1497,
	-2, 1683,
	-1, 1819,
	69, 1498,
	141, 1498,
	-2, 1615,
	-1, 1820,
	69, 1499,
	141, 1499,
	-2, 1609,
	-1, 1821,
	69, 1500,
	141, 1500,
	-2, 1548,
	-1, 1822,
	69, 1501,
	141, 1501,
	-2, 1680,
	-1, 1823,
	69, 1502,
	141, 1502,
	-2, 1613,
	-1, 1824,
	69, 1503,
	141, 1503,
	-2, 1608,
	-1, 1825,
	69, 1504,
	141, 1504,
	-2, 1601,
	-1, 1827,
	69, 1507,
	141, 1507,
	-2, 1725,
	-1, 1828,
	69, 1487,
	141, 1487,
	-2, 1710,
	-1, 1829,
	69, 1516,
	141, 1516,
	-2, 1681,
	-1, 1830,
	69, 1516,
	141, 1516,
	-2, 1709,
	-1, 1831,
	69, 1516,
	141, 1516,
	-2, 1570,
	-1, 1832,
	69, 1514,
	141, 1514,
	-2, 1700,
	-1, 1833,
	69, 1511,
	141, 1511,
	-2, 1592,
	-1, 1834,
	68, 1468,
	69, 1468,
	141, 1468,
	368, 1468,
	369, 1468,
	370, 1468,
	-2, 1547,
	-1, 1835,
	68, 1469,
	69, 1469,
	141, 1469,
	368, 1469,
	369, 1469,
	370, 1469,
	-2, 1549,
	-1, 1836,
	68, 1472,
	69, 1472,
	141, 1472,
	368, 1472,
	369, 1472,
	370, 1472,
	-2, 1682,
	-1, 1837,
	68, 1474,
	69, 1474,
	141, 1474,
	368, 1474,
	369, 1474,
	370, 1474,
	-2, 1665,
	-1, 1838,
	68, 1476,
	69, 1476,
	141, 1476,
	368, 1476,
	369, 1476,
	370, 1476,
	-2, 1614,
	-1, 1839,
	68, 1478,
	69, 1478,
	141, 1478,
	368, 1478,
	369, 1478,
	370, 1478,
	-2, 1597,
	-1, 1840,
	68, 1479,
	69, 1479,
	141, 1479,
	368, 1479,
	369, 1479,
	370, 1479,
	-2, 1598,
	-1, 1841,
	68, 1481,
	69, 1481,
	141, 1481,
	368, 1481,
	369, 1481,
	370, 1481,
	-2, 1546,
	-1, 1842,
	69, 1521,
	141, 1521,
	368, 1521,
	369, 1521,
	370, 1521,
	-2, 1575,
	-1, 1843,
	69, 1521,
	141, 1521,
	368, 1521,
	369, 1521,
	370, 1521,
	-2, 1588,
	-1, 1844,
	69, 1524,
	141, 1524,
	368, 1524,
	369, 1524,
	370, 1524,
	-2, 1571,
	-1, 1845,
	69, 1524,
	141, 1524,
	368, 1524,
	369, 1524,
	370, 1524,
	-2, 1630,
	-1, 1846,
	69, 1521,
	141, 1521,
	368, 1521,
	369, 1521,
	370, 1521,
	-2, 1650,
	-1, 1861,
	92, 925,
	136, 925,
	175, 925,
	178, 925,
	262, 925,
	-2, 918,
	-1, 1983,
	21, 652,
	-2, 746,
	-1, 2175,
	92, 925,
	136, 925,
	175, 925,
	178, 925,
	262, 925,
	-2, 919,
	-1, 2187,
	66, 562,
	141, 562,
	-2, 1064,
	-1, 2209,
	178, 925,
	286, 1143,
	-2, 1117,
	-1, 2496,
	178, 925,
	286, 1143,
	-2, 1118,
	-1, 2638,
	92, 925,
	136, 925,
	175, 925,
	178, 925,
	-2, 1007,
	-1, 2641,
	92, 925,
	136, 925,
	175, 925,
	178, 925,
	-2, 1007,
	-1, 2651,
	66, 562,
	141, 562,
	-2, 1065,
	-1, 2759,
	92, 925,
	136, 925,
	175, 925,
	178, 925,
	-2, 1008,
	-1, 3083,
	69, 979,
	141, 979,
	-2, 925,
	-1, 3087,
	69, 979,
	141, 979,
	-2, 925,
	-1, 3101,
	69, 983,
	141, 983,
	-2, 925,
	-1, 3106,
	69, 984,
	141, 984,
	-2, 925,
}

const yyPrivate = 57344

const yyLast = 36708

var yyAct = [...]int{
	541, 3087, 1531, 3086, 3095, 3066, 177, 1251, 520, 2969,
	1313, 522, 2904, 3025, 543, 2991, 530, 3013, 2891, 2783,
	2510, 2922, 2720, 2725, 2921, 2590, 2794, 1793, 1114, 2883,
	2752, 2817, 1007, 2908, 2749, 2751, 2847, 2591, 2723, 428,
	1241, 659, 2807, 2892, 2894, 2629, 1489, 571, 2190, 434,
	1316, 439, 439, 2758, 2468, 2715, 2286, 439, 455, 464,
	2287, 1173, 464, 2661, 1608, 2269, 162, 2618, 2456, 2525,
	1977, 2285, 1900, 2497, 2588, 2279, 1309, 1536, 2076, 475,
	1701, 1670, 2308, 1813, 524, 2576, 2559, 2282, 2440, 2753,
	1573, 1166, 2166, 2524, 2437, 1903, 2435, 2205, 1870, 1071,
	469, 2176, 772, 2384, 870, 1620, 1961, 1803, 519, 1811,
	513, 1090, 1697, 1237, 1449, 1679, 1678, 2117, 514, 2466,
	1671, 2025, 2345, 2075, 1605, 1232, 1644, 2328, 1601, 1921,
	706, 1088, 1696, 778, 1978, 1250, 1576, 1966, 1574, 36,
	2155, 2211, 2150, 1901, 6, 54, 1869, 1518, 1122, 173,
	8, 1527, 172, 7, 428, 2469, 1312, 1475, 1245, 1457,
	824, 1307, 1729, 766, 2042, 1698, 523, 1206, 2005, 1809,
	1182, 1152, 2471, 112, 1242, 1852, 1501, 177, 1708, 177,
	1362, 815, 816, 2118, 1103, 531, 2470, 433, 1346, 512,
	35, 1298, 1045, 887, 1677, 1660, 514, 461, 776, 521,
	26, 1674, 427, 1213, 1634, 15, 1306, 13, 1500, 1491,
	765, 1151, 1474, 448, 1985, 1149, 14, 1367, 705, 477,
	32, 1099, 451, 1368, 656, 478, 23, 16, 1205, 10,
	163, 159, 156, 1115, 703, 463, 724, 1705, 1008, 2632,
	1715, 2078, 1069, 811, 2583, 813, 2031, 658, 2029, 688,
	2028, 2841, 2378, 736, 2378, 1220, 2026, 808, 460, 1216,
	812, 807, 808, 456, 808, 458, 1581, 161, 435, 1135,
	2713, 2341, 2339, 1218, 459, 1649, 2813, 2808, 457, 945,
	946, 947, 944, 945, 946, 947, 944, 444, 2716, 2589,
	1453, 1002, 2896, 1673, 657, 667, 2857, 467, 2960, 160,
	2738, 2071, 1061, 782, 2737, 908, 806, 2867, 2063, 1388,
	1702, 8, 160, 1123, 7, 473, 474, 438, 438, 2407,
	1713, 160, 160, 446, 50, 152, 128, 160, 1856, 2003,
	942, 779, 1265, 2004, 160, 1618, 50, 152, 128, 160,
	2858, 160, 2314, 50, 152, 128, 160, 1258, 781, 1262,
	1111, 1299, 160, 1062, 1303, 2315, 2316, 157, 2360, 647,
	1585, 646, 648, 649, 1255, 650, 651, 1153, 1991, 1155,
	1264, 1990, 1586, 1587, 1992, 2043, 2353, 1388, 1302, 157,
	157, 1461, 1462, 111, 745, 1257, 1283, 1120, 1121, 111,
	923, 668, 157, 924, 3009, 1131, 2152, 157, 1132, 157,
	1514, 1315, 660, 1118, 157, 935, 2153, 1117, 1120, 1121,
	157, 2925, 2926, 940, 775, 774, 2899, 2956, 2898, 2955,
	2899, 926, 2733, 2897, 2954, 2898, 2897, 1784, 2995, 2996,
	2818, 2819, 2820, 2821, 2592, 2592, 2815, 2346, 439, 2885,
	2885, 2347, 2888, 2348, 2811, 890, 3007, 1318, 439, 880,
	2151, 2058, 881, 2959, 754, 2901, 2601, 1304, 2449, 2619,
	1596, 1709, 2451, 1602, 1384, 2626, 464, 464, 1381, 439,
	1955, 2158, 1383, 1380, 1382, 1386, 1387, 2441, 1301, 1851,
	1385, 1592, 1657, 697, 1134, 1294, 875, 877, 1219, 1217,
	2142, 2743, 1226, 1225, 2273, 2836, 921, 938, 939, 2373,
	508, 2520, 2068, 510, 2371, 937, 911, 2839, 509, 1958,
	818, 2446, 2447, 2714, 2340, 1957, 2740, 1962, 2533, 2534,
	2829, 3002, 2475, 2830, 127, 2465, 158, 2448, 2913, 466,
	1109, 1402, 1384, 978, 2962, 2963, 1381, 2183, 879, 2445,
	1383, 1380, 1382, 1386, 1387, 874, 150, 465, 1385, 2732,
	2278, 1858, 903, 2924, 1317, 2734, 2685, 922, 890, 777,
	2909, 1714, 2784, 2785, 2786, 2788, 2787, 3080, 1718, 1720,
	1721, 2854, 3096, 880, 1616, 1617, 2832, 3034, 3006, 876,
	2967, 2968, 1143, 2971, 2971, 2829, 3041, 1098, 2830, 2676,
	1300, 3011, 461, 461, 750, 1932, 2874, 749, 3045, 1931,
	782, 2164, 894, 2824, 933, 934, 2007, 2831, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1391,
	1392, 1393, 1394, 1395, 1396, 1389, 1390, 2796, 779, 925,
	1096, 892, 891, 472, 1133, 1162, 916, 2665, 2443, 918,
	2671, 2832, 1952, 1953, 3016, 781, 2170, 2171, 2172, 2173,
	3097, 1161, 901, 460, 460, 1113, 1112, 1011, 456, 456,
	458, 458, 1012, 1703, 1095, 3067, 1703, 919, 1703, 459,
	459, 782, 2831, 457, 457, 883, 884, 1094, 1067, 434,
	1070, 2840, 2605, 755, 2377, 2253, 3103, 1391, 1392, 1393,
	1394, 1395, 1396, 1389, 1390, 2848, 900, 1042, 871, 779,
	751, 896, 897, 2423, 872, 706, 808, 1730, 808, 2643,
	808, 3091, 2856, 2711, 878, 1072, 781, 808, 984, 2961,
	473, 808, 2064, 808, 1995, 2855, 980, 981, 982, 983,
	2882, 462, 1150, 1920, 885, 899, 1716, 1704, 462, 2027,
	1706, 1110, 912, 1221, 892, 891, 2325, 2326, 1119, 1906,
	2376, 439, 1116, 1145, 1120, 1121, 1909, 1919, 2157, 428,
	428, 753, 908, 2452, 1078, 914, 1082, 3017, 428, 428,
	657, 928, 1177, 1177, 929, 439, 2442, 917, 920, 2739,
	2072, 1073, 1074, 1075, 1076, 1077, 1603, 1079, 129, 902,
	51, 1083, 1081, 464, 1070, 434, 2837, 51, 1209, 1209,
	2374, 129, 931, 913, 1719, 1184, 1120, 1121, 1080, 177,
	129, 129, 2161, 2162, 3012, 2795, 129, 2825, 428, 1020,
	1021, 2893, 515, 129, 1097, 1595, 746, 2160, 129, 2444,
	129, 1107, 2744, 752, 1179, 129, 468, 3090, 2431, 1125,
	1126, 129, 1128, 1129, 1130, 907, 1593, 777, 1175, 1175,
	1295, 1717, 1324, 1327, 1328, 2672, 2673, 700, 701, 702,
	3102, 1171, 1172, 1325, 1227, 2678, 1068, 1249, 2667, 1252,
	2463, 1085, 2666, 2141, 1260, 915, 1797, 927, 1065, 2310,
	2312, 1465, 2825, 1905, 1910, 673, 2826, 1796, 1907, 2386,
	2385, 1464, 1049, 1047, 1281, 3014, 3015, 1799, 1798, 1276,
	1277, 698, 1105, 1106, 1266, 1463, 746, 669, 1177, 748,
	1177, 880, 747, 932, 658, 1944, 2254, 2256, 2257, 2258,
	2255, 670, 1157, 1159, 1063, 1064, 2766, 3046, 1296, 1144,
	2188, 1169, 1170, 2480, 2244, 2245, 672, 1492, 930, 1087,
	675, 674, 1908, 1854, 799, 804, 805, 3109, 943, 1761,
	1926, 1230, 1760, 1233, 1234, 3064, 1806, 1239, 1240, 2556,
	1136, 1137, 908, 1124, 2045, 2552, 1127, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1807,
	1808, 1222, 1201, 1357, 1358, 3108, 1160, 2639, 3099, 748,
	1366, 1280, 747, 1787, 3081, 3076, 2464, 809, 810, 1279,
	1314, 3070, 814, 1415, 906, 1405, 1406, 1407, 2189, 1185,
	1256, 3069, 2063, 1976, 1263, 444, 782, 1141, 1421, 943,
	782, 1422, 1311, 1247, 943, 461, 1424, 1210, 1199, 1100,
	1104, 1104, 1104, 1429, 1430, 1290, 1200, 1244, 1195, 1211,
	1248, 1183, 2311, 2243, 1853, 2147, 945, 946, 947, 944,
	1492, 1637, 1100, 1100, 756, 3050, 2189, 943, 3027, 1329,
	3100, 661, 1976, 1975, 1308, 1292, 1711, 3077, 2985, 1267,
	2936, 1447, 439, 1711, 1473, 1177, 1477, 1478, 2144, 1480,
	1481, 2927, 2050, 1711, 439, 1740, 460, 706, 1326, 2876,
	1490, 456, 2405, 458, 1177, 2875, 1289, 2872, 2871, 2870,
	1145, 1286, 459, 1285, 2869, 455, 457, 2843, 1272, 1450,
	658, 1268, 2690, 1791, 945, 946, 947, 944, 1414, 801,
	802, 803, 1288, 1287, 1513, 1284, 1305, 1711, 1397, 1398,
	3028, 1401, 1519, 1519, 1310, 1145, 2007, 1145, 1145, 1416,
	2986, 439, 2844, 1473, 1473, 1472, 2540, 1177, 1570, 1571,
	1583, 1517, 1423, 2844, 1425, 2305, 1348, 1479, 2123, 661,
	1739, 2877, 2079, 2061, 428, 1101, 1177, 1874, 905, 2844,
	2844, 2844, 1355, 1356, 1976, 2556, 2844, 1635, 1702, 2844,
	1482, 1483, 1484, 943, 2007, 2054, 945, 946, 947, 944,
	1584, 439, 1473, 1177, 1893, 1625, 1297, 439, 1628, 1629,
	2052, 1792, 2047, 2040, 1632, 1633, 1765, 1498, 1499, 1639,
	1693, 2038, 1400, 1614, 1565, 1566, 177, 2036, 2541, 177,
	177, 2034, 177, 1873, 1508, 1509, 1086, 1976, 1360, 1788,
	943, 1476, 1790, 1521, 943, 1874, 1769, 1768, 1759, 1163,
	1454, 1750, 1597, 1749, 906, 3029, 1426, 1748, 1710, 1589,
	1495, 1591, 1502, 2654, 1504, 1505, 1273, 2048, 1415, 1415,
	1681, 1609, 1610, 1622, 2481, 1415, 1415, 1510, 1448, 1102,
	1688, 1987, 2053, 1624, 2048, 2041, 2330, 2191, 1604, 2066,
	1520, 1043, 1648, 2039, 2065, 1651, 1652, 2057, 1654, 2035,
	873, 1493, 1494, 2035, 1490, 1874, 1611, 1612, 1177, 1700,
	1486, 1787, 1627, 1476, 1511, 1487, 1890, 1613, 943, 943,
	943, 1522, 2625, 943, 2914, 943, 1497, 1506, 1503, 943,
	1711, 960, 908, 1756, 556, 113, 1741, 2485, 1274, 1692,
	113, 1642, 1512, 1469, 1269, 1515, 1516, 989, 1470, 948,
	1694, 893, 873, 873, 1682, 1523, 1524, 868, 977, 1308,
	1485, 866, 2368, 671, 2767, 1165, 986, 1723, 2915, 1569,
	2646, 2644, 1727, 1728, 1572, 1404, 1403, 1101, 1588, 3059,
	1590, 2476, 1091, 1676, 1598, 1167, 1092, 1619, 991, 445,
	1676, 3047, 113, 1140, 1922, 1142, 1168, 1146, 1147, 1148,
	961, 962, 963, 964, 965, 966, 967, 960, 2768, 1623,
	2842, 2669, 2668, 782, 2647, 2645, 2631, 1525, 1100, 2557,
	782, 2550, 2545, 461, 2542, 1643, 1645, 1190, 1191, 1192,
	1193, 1194, 1507, 1196, 1197, 1198, 2458, 1354, 2379, 1203,
	1204, 779, 1662, 1104, 2477, 1766, 2275, 2168, 779, 2051,
	1997, 1164, 1773, 1351, 1353, 1350, 882, 1352, 781, 963,
	964, 965, 966, 967, 960, 781, 2026, 1621, 1646, 1686,
	1685, 1687, 1435, 1621, 2581, 2086, 1683, 513, 1691, 880,
	1847, 1102, 676, 2020, 460, 1363, 1363, 1736, 2478, 456,
	2332, 458, 780, 439, 439, 439, 113, 1871, 1695, 1214,
	459, 1646, 947, 944, 457, 782, 1690, 1878, 1145, 1471,
	2953, 113, 944, 113, 945, 946, 947, 944, 1883, 945,
	946, 947, 944, 1794, 1795, 2584, 1722, 2680, 2679, 1731,
	2030, 2349, 1145, 779, 945, 946, 947, 944, 3085, 880,
	1914, 2223, 2222, 2582, 2217, 2215, 1348, 2746, 2747, 1724,
	781, 2658, 1735, 951, 952, 953, 954, 955, 956, 957,
	949, 1725, 1726, 3073, 3035, 1427, 1428, 3030, 1814, 1431,
	1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 3044, 945, 946, 947, 944, 544, 553, 2972, 1980,
	1980, 1583, 1980, 2944, 1419, 545, 2916, 552, 546, 550,
	549, 547, 548, 2859, 945, 946, 947, 944, 1420, 2741,
	428, 428, 1848, 2088, 945, 946, 947, 944, 880, 945,
	946, 947, 944, 2022, 1177, 439, 2623, 1214, 1899, 3043,
	1208, 1208, 1886, 945, 946, 947, 944, 439, 1783, 1785,
	1786, 880, 434, 2809, 2775, 2770, 1209, 2769, 1583, 1925,
	554, 2015, 2742, 2017, 2648, 2622, 2450, 177, 2364, 2344,
	1982, 2265, 1986, 2343, 2248, 1855, 1800, 1892, 2247, 2624,
	1887, 2263, 2246, 1888, 1923, 1924, 2238, 1927, 1928, 1929,
	1930, 1984, 551, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1895, 1945, 1946, 1947, 1948, 1949,
	2001, 1950, 1011, 2059, 2264, 2232, 1700, 1012, 1891, 2229,
	2261, 1898, 1889, 1177, 2262, 1177, 1879, 1177, 1880, 1881,
	2918, 2228, 880, 2021, 1993, 1897, 1994, 2250, 1884, 1885,
	1814, 945, 946, 947, 944, 2227, 782, 1665, 2014, 1664,
	1215, 1663, 2009, 1659, 1998, 1999, 945, 946, 947, 944,
	1658, 1177, 2104, 2260, 1270, 1959, 1060, 2457, 2167, 1863,
	1864, 1865, 2630, 2398, 779, 2861, 1988, 2111, 2280, 2436,
	2249, 3001, 1177, 1157, 1159, 2721, 1319, 1320, 1321, 1322,
	1323, 781, 2113, 2997, 1882, 2957, 2903, 113, 113, 780,
	2750, 2069, 2880, 2838, 2810, 2002, 959, 958, 968, 969,
	961, 962, 963, 964, 965, 966, 967, 960, 2774, 2397,
	2010, 2073, 2103, 2013, 3098, 1763, 880, 2907, 2115, 2773,
	1364, 1365, 508, 2757, 2745, 510, 1399, 1175, 2719, 2011,
	509, 2110, 2090, 2112, 1409, 945, 946, 947, 944, 1626,
	2717, 1104, 2697, 945, 946, 947, 944, 2694, 1175, 2070,
	2692, 2084, 1752, 2270, 2012, 2660, 1744, 2621, 2095, 2620,
	976, 2617, 2134, 2019, 1177, 2056, 2610, 2165, 2604, 1308,
	2060, 2062, 2077, 1473, 2067, 2551, 2547, 1451, 2538, 2187,
	2537, 1455, 2459, 2428, 1458, 2193, 865, 861, 862, 863,
	864, 1183, 2100, 2727, 2099, 2098, 2096, 2119, 2080, 2081,
	2427, 2202, 2124, 1621, 2375, 2145, 1751, 880, 2148, 2342,
	2094, 945, 946, 947, 944, 2214, 2319, 2259, 2251, 945,
	946, 947, 944, 2219, 2220, 2241, 2221, 2239, 2235, 2234,
	2224, 1519, 945, 946, 947, 944, 945, 946, 947, 944,
	2083, 2233, 1789, 2726, 2178, 1667, 1980, 603, 602, 2177,
	1661, 1460, 1234, 2689, 1239, 1240, 1271, 1019, 2097, 1015,
	2266, 2184, 2138, 1014, 2135, 990, 869, 2194, 428, 945,
	946, 947, 944, 1473, 880, 1583, 1583, 1583, 1583, 945,
	946, 947, 944, 2822, 2641, 2640, 880, 1583, 2638, 2609,
	1980, 2154, 2596, 2209, 160, 1050, 1899, 152, 128, 1451,
	2587, 2195, 2586, 2575, 1451, 1451, 1177, 2574, 2212, 2199,
	2200, 2486, 2212, 2213, 1247, 2403, 2396, 2607, 439, 439,
	1476, 2163, 2388, 2383, 2327, 2186, 2146, 2192, 1244, 2143,
	1738, 1248, 8, 177, 2037, 7, 2033, 2032, 177, 1774,
	1764, 1762, 2301, 945, 946, 947, 944, 1647, 2201, 1758,
	1650, 1757, 157, 1653, 2210, 2204, 1655, 2401, 2216, 1415,
	1755, 1415, 2208, 2288, 2359, 2230, 2231, 1746, 2363, 1743,
	1742, 2236, 2237, 1666, 1177, 2288, 1446, 2370, 2226, 1445,
	2240, 1444, 1418, 945, 946, 947, 944, 1417, 1408, 2101,
	2102, 945, 946, 947, 944, 2272, 1189, 1187, 3058, 2333,
	3052, 160, 2196, 3042, 2337, 3039, 2198, 2271, 3037, 2943,
	2276, 2878, 1186, 2289, 2290, 2291, 2292, 445, 1009, 2303,
	1229, 1450, 2300, 2302, 2304, 2792, 2358, 658, 2780, 2776,
	2705, 2274, 2703, 2313, 2687, 2686, 2320, 2683, 2317, 2935,
	2400, 2356, 2682, 113, 2675, 2185, 2633, 2362, 1238, 2391,
	1231, 2393, 1089, 2267, 2367, 2399, 2335, 2331, 880, 157,
	2334, 2372, 2218, 2181, 2180, 2439, 945, 946, 947, 944,
	2179, 2352, 1243, 1246, 2355, 2454, 2350, 2357, 1235, 2133,
	439, 945, 946, 947, 944, 2046, 2366, 1996, 1951, 1872,
	880, 880, 880, 1733, 1349, 157, 1737, 2354, 1630, 1583,
	1871, 2381, 2484, 782, 2361, 113, 2387, 2197, 2488, 113,
	782, 1468, 2380, 1467, 1293, 2394, 2395, 1259, 880, 1236,
	113, 1044, 2523, 2392, 2526, 1041, 2526, 2526, 1040, 1039,
	113, 2389, 2390, 2531, 1038, 1747, 1037, 1036, 1035, 2430,
	1034, 1177, 1177, 1754, 2408, 1033, 1032, 1814, 2409, 2410,
	2411, 2412, 1031, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 1767, 2429, 2177, 1770, 1771, 1772, 2432, 2424, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1030, 439, 1899,
	1899, 1899, 2455, 2439, 2322, 2323, 2132, 2461, 1029, 2482,
	2462, 2522, 2521, 1028, 1473, 1473, 1027, 2516, 2483, 2434,
	2479, 1026, 2535, 2536, 1025, 782, 1024, 2493, 1023, 1022,
	2472, 2473, 945, 946, 947, 944, 2494, 1175, 1175, 2527,
	2528, 1018, 1017, 2491, 1016, 1875, 1013, 2529, 968, 969,
	961, 962, 963, 964, 965, 966, 967, 960, 971, 1006,
	975, 2104, 1005, 1003, 1002, 1001, 1000, 2977, 3074, 999,
	2585, 998, 997, 2492, 996, 995, 972, 974, 970, 782,
	973, 959, 958, 968, 969, 961, 962, 963, 964, 965,
	966, 967, 960, 994, 2933, 2548, 2546, 2544, 2543, 993,
	2549, 2553, 2554, 2539, 992, 988, 987, 439, 2564, 958,
	968, 969, 961, 962, 963, 964, 965, 966, 967, 960,
	2568, 959, 958, 968, 969, 961, 962, 963, 964, 965,
	966, 967, 960, 910, 867, 2487, 2571, 2572, 2573, 2489,
	2490, 2131, 1451, 2931, 1451, 2560, 2561, 2580, 959, 958,
	968, 969, 961, 962, 963, 964, 965, 966, 967, 960,
	2929, 2684, 1451, 1451, 1877, 2597, 2460, 945, 946, 947,
	944, 2130, 2598, 1860, 898, 2599, 2975, 2923, 2600, 2129,
	2563, 2169, 2008, 1669, 909, 2297, 2295, 2603, 1208, 98,
	2298, 2296, 53, 2611, 2128, 52, 2637, 945, 946, 947,
	944, 2708, 2566, 2707, 1582, 945, 946, 947, 944, 2565,
	1980, 1583, 2651, 2299, 2294, 1972, 1973, 2293, 684, 436,
	945, 946, 947, 944, 3084, 2055, 2555, 2127, 2049, 2613,
	2206, 694, 2207, 2425, 2426, 1177, 2140, 1563, 2706, 2659,
	2126, 2567, 2433, 1223, 441, 2615, 2044, 442, 2616, 2074,
	443, 439, 796, 945, 946, 947, 944, 1794, 1795, 2900,
	2523, 2628, 1046, 2653, 1621, 2125, 945, 946, 947, 944,
	113, 440, 1253, 113, 113, 1849, 113, 1631, 904, 2203,
	2649, 2122, 2149, 1473, 1867, 1488, 1466, 880, 2988, 2087,
	2778, 945, 946, 947, 944, 1404, 1403, 2105, 2106, 2521,
	2657, 2650, 1058, 1059, 2516, 2108, 2109, 945, 946, 947,
	944, 2662, 780, 177, 1056, 1057, 2710, 1960, 2114, 780,
	1054, 1055, 2634, 2635, 2636, 1956, 880, 2699, 113, 2688,
	1052, 1053, 1568, 662, 663, 664, 665, 2691, 1139, 1138,
	1451, 936, 2693, 2136, 2137, 1458, 661, 2700, 2696, 2570,
	2735, 2006, 2701, 1689, 2698, 1093, 1048, 696, 3053, 691,
	2965, 680, 2950, 2948, 880, 1177, 1177, 2910, 693, 692,
	880, 2760, 2890, 2602, 2760, 2889, 2288, 2887, 2879, 2712,
	2121, 2804, 2722, 2803, 2718, 678, 2612, 2594, 2593, 685,
	2578, 791, 788, 783, 787, 789, 1188, 1051, 661, 2736,
	2577, 2695, 2329, 1492, 976, 2365, 945, 946, 947, 944,
	2979, 2978, 2979, 880, 880, 2288, 1862, 880, 880, 794,
	1745, 2763, 2652, 786, 2761, 2764, 2755, 895, 2655, 2756,
	2653, 2656, 2978, 690, 1490, 2789, 2801, 689, 2677, 2595,
	2321, 1175, 2662, 677, 2805, 2806, 1108, 683, 2781, 2782,
	164, 3, 2790, 2791, 61, 2777, 2, 2728, 2798, 1899,
	2120, 1154, 1989, 1615, 681, 1181, 1, 2116, 2835, 1459,
	666, 2306, 2797, 2307, 792, 2107, 2569, 2309, 2828, 1707,
	2799, 795, 2277, 1954, 1850, 679, 945, 946, 947, 944,
	2453, 1084, 2850, 945, 946, 947, 944, 699, 784, 697,
	2085, 945, 946, 947, 944, 2823, 2827, 1359, 1410, 2833,
	1278, 880, 798, 889, 1275, 888, 886, 2681, 1361, 793,
	558, 1672, 2268, 880, 2845, 682, 945, 946, 947, 944,
	2242, 2852, 2851, 945, 946, 947, 944, 2800, 2987, 3024,
	2863, 2942, 1963, 2860, 2990, 1291, 2868, 1968, 1971, 1972,
	1973, 1969, 542, 1970, 1974, 2881, 2814, 2946, 2873, 785,
	2816, 2724, 1712, 708, 941, 2351, 1968, 1971, 1972, 1973,
	1969, 2895, 1970, 1974, 720, 880, 594, 569, 2886, 2336,
	1004, 2338, 2911, 2884, 1261, 662, 663, 664, 665, 2771,
	2772, 1254, 2406, 800, 568, 2919, 2627, 695, 661, 1451,
	2159, 2324, 2853, 2906, 1451, 2905, 2902, 797, 2937, 2940,
	721, 1656, 2928, 2930, 2932, 2934, 2912, 2812, 1224, 2917,
	1228, 2765, 2642, 2474, 2182, 3094, 3083, 3065, 3051, 746,
	2970, 790, 2941, 3079, 3005, 1983, 3040, 2731, 2864, 2945,
	2949, 2382, 2951, 2952, 2947, 2729, 2730, 3033, 2966, 479,
	1594, 426, 763, 2793, 1668, 945, 946, 947, 944, 480,
	1876, 2958, 2779, 2402, 686, 2964, 1859, 687, 2175, 2174,
	1330, 950, 1347, 2974, 2994, 2973, 2421, 2976, 2422, 2980,
	985, 2981, 518, 2982, 1734, 2983, 2156, 2984, 2993, 2511,
	2318, 60, 1582, 59, 58, 57, 880, 1638, 185, 560,
	2895, 113, 2999, 2998, 184, 2748, 2939, 2992, 540, 539,
	538, 537, 748, 536, 1967, 747, 1965, 3023, 1964, 1578,
	1577, 3008, 3010, 3019, 3020, 3021, 3022, 3018, 1636, 2532,
	3026, 2225, 1918, 3031, 1388, 880, 1911, 1526, 2920, 2865,
	2866, 2674, 2252, 2670, 2664, 3032, 3036, 3056, 3038, 733,
	1560, 2759, 2495, 2496, 2502, 1866, 823, 709, 819, 2994,
	3049, 821, 822, 820, 2093, 2089, 1894, 2467, 880, 1805,
	880, 2530, 1804, 2993, 3048, 1802, 1801, 1066, 3055, 2834,
	3057, 3060, 2614, 1812, 711, 3003, 1810, 2562, 3026, 880,
	3061, 2558, 1680, 3068, 1456, 3075, 2139, 1579, 3078, 3072,
	959, 958, 968, 969, 961, 962, 963, 964, 965, 966,
	967, 960, 1575, 3082, 1861, 1857, 3089, 96, 142, 3000,
	3093, 3092, 47, 88, 1314, 87, 95, 3101, 140, 46,
	169, 168, 171, 3106, 3089, 3105, 3104, 170, 167, 3093,
	2023, 3107, 2024, 166, 1212, 165, 2762, 732, 731, 655,
	37, 33, 12, 11, 34, 21, 3054, 1314, 22, 1314,
	20, 1282, 19, 25, 730, 31, 30, 106, 105, 29,
	104, 103, 102, 707, 101, 2404, 100, 28, 1314, 18,
	41, 40, 39, 9, 710, 741, 94, 92, 27, 1384,
	93, 90, 91, 1381, 89, 72, 71, 1383, 1380, 1382,
	1386, 1387, 70, 85, 84, 1385, 83, 82, 737, 959,
	958, 968, 969, 961, 962, 963, 964, 965, 966, 967,
	960, 81, 80, 78, 79, 719, 69, 113, 959, 958,
	968, 969, 961, 962, 963, 964, 965, 966, 967, 960,
	68, 67, 738, 742, 66, 65, 76, 86, 77, 75,
	74, 2606, 73, 64, 63, 62, 125, 126, 2608, 727,
	124, 725, 729, 745, 123, 122, 121, 726, 723, 722,
	120, 728, 713, 714, 712, 715, 716, 717, 718, 119,
	743, 2082, 744, 42, 43, 44, 45, 136, 135, 137,
	139, 141, 138, 739, 740, 133, 131, 134, 132, 130,
	55, 17, 24, 4, 839, 959, 958, 968, 969, 961,
	962, 963, 964, 965, 966, 967, 960, 0, 0, 1582,
	1582, 1582, 1582, 0, 0, 0, 0, 0, 1732, 0,
	735, 1582, 0, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1391, 1392, 1393, 1394, 1395, 1396,
	1389, 1390, 959, 958, 968, 969, 961, 962, 963, 964,
	965, 966, 967, 960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 839, 0, 0, 0, 1451,
	0, 734, 113, 0, 0, 0, 0, 0, 0, 113,
	1451, 827, 0, 2702, 0, 0, 2704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2709, 847, 851, 853, 855, 857, 858, 860, 0, 865,
	861, 862, 863, 864, 0, 842, 843, 844, 845, 825,
	826, 848, 0, 828, 0, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 840, 846, 0, 0, 0,
	0, 0, 0, 0, 850, 852, 854, 856, 859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 113, 0, 817, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 847, 851, 853, 855, 857, 858, 860, 0,
	865, 861, 862, 863, 864, 0, 842, 843, 844, 845,
	825, 826, 848, 1582, 828, 0, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 840, 846, 113, 0,
	361, 576, 0, 0, 0, 850, 852, 854, 856, 859,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 567, 0, 0, 353,
	308, 0, 841, 0, 0, 626, 634, 2846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	557, 603, 602, 544, 553, 0, 0, 247, 183, 2862,
	0, 0, 545, 0, 552, 546, 550, 549, 547, 548,
	0, 618, 2091, 2092, 0, 0, 0, 0, 516, 529,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	0, 577, 0, 528, 0, 991, 572, 554, 555, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 551,
	575, 579, 263, 640, 573, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	641, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 0,
	0, 849, 384, 0, 0, 624, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 574, 0, 344, 326,
	637, 517, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 1582, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 849, 0, 0, 0, 406, 0, 0, 0,
	1412, 1411, 1413, 396, 276, 230, 231, 432, 622, 322,
	0, 0, 636, 617, 619, 620, 623, 627, 628, 629,
	630, 631, 633, 635, 639, 431, 0, 0, 0, 0,
	3063, 430, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 113, 0, 0,
	388, 0, 0, 0, 0, 0, 578, 312, 313, 314,
	315, 625, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 401, 402, 275, 281, 420, 283, 251, 327,
	277, 386, 290, 0, 413, 0, 414, 0, 0, 0,
	0, 319, 286, 287, 351, 291, 297, 340, 385, 325,
	345, 249, 376, 352, 301, 0, 0, 647, 621, 646,
	648, 649, 645, 650, 651, 632, 535, 0, 582, 643,
	642, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 295, 0, 336,
	274, 610, 587, 588, 589, 534, 590, 585, 586, 611,
	580, 607, 608, 559, 583, 591, 606, 592, 609, 612,
	613, 652, 653, 598, 654, 595, 614, 605, 604, 593,
	581, 615, 616, 566, 561, 596, 597, 584, 599, 600,
	601, 562, 563, 564, 565, 361, 576, 0, 392, 393,
	394, 416, 378, 0, 429, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 269, 1452, 0, 294, 0, 0, 0,
	0, 567, 0, 0, 353, 308, 0, 0, 0, 0,
	626, 634, 0, 0, 0, 0, 0, 0, 0, 1606,
	0, 0, 525, 0, 0, 557, 603, 602, 544, 553,
	0, 0, 247, 183, 0, 0, 0, 545, 0, 552,
	546, 550, 549, 547, 548, 0, 618, 0, 0, 0,
	0, 0, 0, 516, 529, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 0, 577, 0, 528, 0,
	0, 1607, 554, 555, 0, 0, 0, 0, 238, 358,
	374, 248, 349, 387, 253, 356, 243, 323, 346, 0,
	0, 240, 372, 355, 305, 288, 289, 239, 0, 341,
	267, 280, 264, 321, 551, 575, 579, 263, 640, 573,
	382, 242, 0, 381, 320, 368, 373, 306, 300, 241,
	370, 304, 299, 292, 271, 641, 284, 332, 298, 333,
	285, 310, 309, 311, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 0, 0, 0, 384, 0, 0,
	624, 0, 0, 0, 357, 0, 0, 293, 0, 0,
	0, 574, 0, 344, 326, 637, 517, 0, 342, 296,
	369, 334, 375, 359, 383, 338, 335, 233, 360, 266,
	307, 244, 246, 261, 268, 270, 272, 273, 316, 317,
	329, 348, 362, 363, 364, 265, 254, 343, 255, 282,
	256, 234, 258, 257, 259, 350, 260, 236, 330, 367,
	0, 278, 339, 303, 237, 302, 331, 366, 365, 245,
	391, 397, 398, 403, 0, 404, 0, 0, 0, 412,
	417, 418, 419, 421, 422, 423, 424, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 396, 276,
	230, 231, 432, 622, 322, 0, 0, 636, 617, 619,
	620, 623, 627, 628, 629, 630, 631, 633, 635, 639,
	431, 0, 0, 0, 0, 0, 430, 328, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 377, 389, 407, 410, 0, 0, 0,
	0, 235, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 578, 312, 313, 314, 315, 625, 0, 252, 408,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 647, 621, 646, 648, 649, 645, 650, 651,
	632, 535, 0, 582, 643, 642, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 610, 587, 588, 589,
	534, 590, 585, 586, 611, 580, 607, 608, 559, 583,
	591, 606, 592, 609, 612, 613, 652, 653, 598, 654,
	595, 614, 605, 604, 593, 581, 615, 616, 566, 561,
	596, 597, 584, 599, 600, 601, 562, 563, 564, 565,
	160, 361, 576, 392, 393, 394, 416, 378, 0, 429,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 979, 0, 0,
	353, 308, 0, 0, 0, 0, 626, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 557, 603, 602, 544, 553, 0, 0, 247, 183,
	0, 0, 0, 545, 0, 552, 546, 550, 549, 547,
	548, 0, 618, 0, 0, 0, 0, 0, 0, 516,
	529, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 577, 0, 528, 0, 0, 572, 554, 555,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	551, 575, 579, 263, 640, 573, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 641, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 384, 0, 0, 624, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 574, 0, 344,
	326, 637, 517, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 622,
	322, 0, 0, 636, 617, 619, 620, 623, 627, 628,
	629, 630, 631, 633, 635, 639, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 578, 312, 313,
	314, 315, 625, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 647, 621,
	646, 648, 649, 645, 650, 651, 632, 535, 0, 582,
	643, 642, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 129,
	336, 274, 610, 587, 588, 589, 534, 590, 585, 586,
	611, 580, 607, 608, 559, 583, 591, 606, 592, 609,
	612, 613, 652, 653, 598, 654, 595, 614, 605, 604,
	593, 581, 615, 616, 566, 561, 596, 597, 584, 599,
	600, 601, 562, 563, 564, 565, 361, 576, 0, 392,
	393, 394, 416, 378, 0, 429, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 269, 3062, 0, 294, 0, 0,
	0, 0, 567, 0, 0, 353, 308, 0, 0, 0,
	0, 626, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 557, 603, 602, 544,
	553, 0, 0, 247, 183, 0, 0, 0, 545, 0,
	552, 546, 550, 549, 547, 548, 0, 618, 0, 0,
	0, 0, 0, 0, 516, 529, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 0, 0, 0, 0, 577, 0, 528,
	0, 0, 572, 554, 555, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 551, 575, 579, 263, 640,
	573, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 641, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 0, 384, 0,
	0, 624, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 574, 0, 344, 326, 637, 517, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 622, 322, 0, 0, 636, 617,
	619, 620, 623, 627, 628, 629, 630, 631, 633, 635,
	639, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 578, 312, 313, 314, 315, 625, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 647, 621, 646, 648, 649, 645, 650,
	651, 632, 535, 0, 582, 643, 642, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 610, 587, 588,
	589, 534, 590, 585, 586, 611, 580, 607, 608, 559,
	583, 591, 606, 592, 609, 612, 613, 652, 653, 598,
	654, 595, 614, 605, 604, 593, 581, 615, 616, 566,
	561, 596, 597, 584, 599, 600, 601, 562, 563, 564,
	565, 361, 576, 0, 392, 393, 394, 416, 378, 0,
	429, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 269,
	1452, 0, 294, 0, 0, 0, 0, 567, 0, 0,
	353, 308, 0, 0, 0, 0, 626, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 557, 603, 602, 544, 553, 0, 0, 247, 183,
	0, 0, 0, 545, 0, 552, 546, 550, 549, 547,
	548, 0, 618, 0, 0, 0, 0, 0, 0, 516,
	529, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 577, 0, 528, 0, 0, 572, 554, 555,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	551, 575, 579, 263, 640, 573, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 641, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 384, 0, 0, 624, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 574, 0, 344,
	326, 637, 517, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 622,
	322, 0, 0, 636, 617, 619, 620, 623, 627, 628,
	629, 630, 631, 633, 635, 639, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 578, 312, 313,
	314, 315, 625, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 647, 621,
	646, 648, 649, 645, 650, 651, 632, 535, 0, 582,
	643, 642, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 610, 587, 588, 589, 534, 590, 585, 586,
	611, 580, 607, 608, 559, 583, 591, 606, 592, 609,
	612, 613, 652, 653, 598, 654, 595, 614, 605, 604,
	593, 581, 615, 616, 566, 561, 596, 597, 584, 599,
	600, 601, 562, 563, 564, 565, 361, 576, 0, 392,
	393, 394, 416, 378, 0, 429, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 567, 0, 0, 353, 308, 0, 0, 0,
	0, 626, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 557, 603, 602, 544,
	553, 0, 0, 247, 183, 0, 0, 0, 545, 0,
	552, 546, 550, 549, 547, 548, 0, 618, 0, 0,
	0, 0, 0, 0, 516, 529, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 1207, 0, 0, 0, 577, 0, 528,
	0, 0, 572, 554, 555, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 551, 575, 579, 263, 640,
	573, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 641, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 0, 384, 0,
	0, 624, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 574, 0, 344, 326, 637, 517, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 622, 322, 0, 0, 636, 617,
	619, 620, 623, 627, 628, 629, 630, 631, 633, 635,
	639, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 578, 312, 313, 314, 315, 625, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 647, 621, 646, 648, 649, 645, 650,
	651, 632, 535, 0, 582, 643, 642, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 610, 587, 588,
	589, 534, 590, 585, 586, 611, 580, 607, 608, 559,
	583, 591, 606, 592, 609, 612, 613, 652, 653, 598,
	654, 595, 614, 605, 604, 593, 581, 615, 616, 566,
	561, 596, 597, 584, 599, 600, 601, 562, 563, 564,
	565, 0, 0, 0, 392, 393, 394, 416, 378, 0,
	429, 361, 576, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 567, 0, 0,
	353, 308, 0, 0, 0, 0, 626, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 557, 603, 602, 544, 553, 0, 0, 247, 183,
	0, 0, 0, 545, 0, 552, 546, 550, 549, 547,
	548, 0, 618, 0, 0, 0, 0, 0, 0, 516,
	529, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 577, 0, 528, 0, 0, 572, 554, 555,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	551, 575, 579, 263, 640, 573, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 641, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 384, 0, 0, 624, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 574, 0, 344,
	326, 637, 517, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 622,
	322, 0, 0, 636, 617, 619, 620, 623, 627, 628,
	629, 630, 631, 633, 635, 639, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 578, 312, 313,
	314, 315, 625, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 647, 621,
	646, 648, 649, 645, 650, 651, 632, 535, 0, 582,
	643, 642, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 610, 587, 588, 589, 534, 590, 585, 586,
	611, 580, 607, 608, 559, 583, 591, 606, 592, 609,
	612, 613, 652, 653, 598, 654, 595, 614, 605, 604,
	593, 581, 615, 616, 566, 561, 596, 597, 584, 599,
	600, 601, 562, 563, 564, 565, 361, 576, 0, 392,
	393, 394, 416, 378, 0, 429, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 567, 0, 0, 353, 308, 0, 0, 0,
	0, 626, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 557, 603, 602, 544,
	553, 0, 0, 247, 183, 0, 0, 0, 545, 0,
	552, 546, 550, 549, 547, 548, 0, 618, 0, 0,
	0, 0, 0, 0, 516, 529, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 0, 0, 0, 0, 577, 0, 528,
	0, 0, 572, 554, 555, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 551, 575, 579, 263, 640,
	573, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 641, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 0, 384, 0,
	0, 624, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 574, 0, 344, 326, 637, 517, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 622, 322, 0, 0, 636, 617,
	619, 620, 623, 627, 628, 629, 630, 631, 633, 635,
	639, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 578, 312, 313, 314, 315, 625, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 647, 621, 646, 648, 649, 645, 650,
	651, 632, 535, 0, 582, 643, 642, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 610, 587, 588,
	589, 534, 590, 585, 586, 611, 580, 607, 608, 559,
	583, 591, 606, 592, 609, 612, 613, 652, 653, 598,
	654, 595, 614, 605, 604, 593, 581, 615, 616, 566,
	561, 596, 597, 584, 599, 600, 601, 562, 563, 564,
	565, 361, 576, 0, 392, 393, 394, 416, 378, 0,
	429, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 532, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 567, 0, 0,
	353, 308, 0, 0, 0, 0, 626, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 557, 603, 602, 544, 553, 0, 0, 247, 183,
	0, 0, 0, 545, 0, 552, 546, 550, 549, 547,
	548, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 577, 0, 528, 0, 0, 572, 554, 555,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	551, 575, 579, 263, 640, 573, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 641, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 384, 0, 0, 624, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 574, 0, 344,
	326, 637, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 1332, 1333, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 622,
	322, 0, 0, 636, 617, 619, 620, 623, 627, 628,
	629, 630, 631, 633, 635, 639, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 578, 312, 313,
	314, 315, 625, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 647, 621,
	646, 648, 649, 645, 650, 651, 632, 535, 0, 582,
	643, 642, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 610, 587, 588, 589, 534, 590, 585, 586,
	611, 580, 607, 608, 559, 583, 591, 606, 592, 609,
	612, 613, 652, 653, 598, 654, 595, 614, 605, 604,
	593, 581, 615, 616, 566, 561, 596, 597, 584, 599,
	600, 601, 562, 563, 564, 565, 361, 576, 0, 392,
	393, 394, 416, 378, 0, 429, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 567, 0, 0, 353, 308, 0, 0, 0,
	0, 626, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 603, 602, 544,
	553, 0, 0, 247, 183, 0, 0, 0, 545, 0,
	552, 546, 550, 549, 547, 548, 0, 618, 0, 0,
	0, 0, 0, 0, 516, 529, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 0, 0, 0, 0, 577, 0, 528,
	0, 0, 572, 554, 555, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 551, 575, 579, 263, 640,
	573, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 641, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 0, 384, 0,
	0, 624, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 574, 0, 344, 326, 637, 517, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 622, 322, 0, 0, 636, 617,
	619, 620, 623, 627, 628, 629, 630, 631, 633, 635,
	639, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 578, 312, 313, 314, 315, 625, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 647, 621, 646, 648, 649, 645, 650,
	651, 632, 535, 0, 582, 643, 642, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 610, 587, 588,
	589, 534, 590, 585, 586, 611, 580, 607, 608, 559,
	583, 591, 606, 592, 609, 612, 613, 652, 653, 598,
	654, 595, 614, 605, 604, 593, 581, 615, 616, 566,
	561, 596, 597, 584, 599, 600, 601, 562, 563, 564,
	565, 361, 576, 0, 392, 393, 394, 416, 378, 0,
	429, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 567, 0, 0,
	353, 308, 0, 0, 0, 0, 626, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 557, 603, 602, 544, 553, 0, 0, 247, 183,
	0, 0, 0, 545, 0, 552, 546, 550, 549, 547,
	548, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 577, 0, 528, 0, 0, 572, 554, 555,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	551, 575, 579, 263, 640, 573, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 641, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 384, 0, 0, 624, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 574, 0, 344,
	326, 637, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 622,
	322, 0, 0, 636, 617, 619, 620, 623, 627, 628,
	629, 630, 631, 633, 635, 639, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 578, 312, 313,
	314, 315, 625, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 647, 621,
	646, 648, 649, 645, 650, 651, 632, 535, 0, 582,
	643, 642, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 610, 587, 588, 589, 534, 590, 585, 586,
	611, 580, 607, 608, 559, 583, 591, 606, 592, 609,
	612, 613, 652, 653, 598, 654, 595, 614, 605, 604,
	593, 581, 615, 616, 566, 561, 596, 597, 584, 599,
	600, 601, 562, 563, 564, 565, 0, 0, 0, 392,
	393, 394, 416, 378, 0, 429, 160, 361, 50, 152,
	128, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 145, 0, 269, 0, 154, 294, 0,
	0, 0, 0, 111, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 157, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 127, 151,
	158, 0, 97, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 175, 0, 0, 0, 357, 0, 0, 293,
	150, 144, 143, 400, 0, 344, 326, 56, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 146, 147,
	148, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 379, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 178, 0,
	0, 425, 186, 0, 0, 0, 149, 0, 187, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 129, 336, 274, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 0, 0, 0, 392, 393, 394, 416, 378,
	361, 188, 38, 176, 179, 181, 180, 0, 48, 5,
	0, 324, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 353,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1010, 0, 0,
	182, 0, 0, 544, 553, 0, 0, 247, 183, 0,
	0, 0, 545, 0, 552, 546, 550, 549, 547, 548,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 551,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 432, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 431, 0, 0, 0, 0,
	0, 430, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 401, 402, 275, 281, 420, 283, 251, 327,
	277, 386, 290, 0, 413, 0, 414, 0, 0, 0,
	0, 319, 286, 287, 351, 291, 297, 340, 385, 325,
	345, 249, 376, 352, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 295, 0, 336,
	274, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 0, 0, 0, 392, 393,
	394, 416, 378, 0, 429, 160, 361, 50, 152, 128,
	0, 0, 0, 0, 0, 0, 0, 324, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 353, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 454, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 247, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 312, 313, 314, 315, 450, 452, 252,
	408, 337, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 129, 336, 274, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 361, 0, 0, 392, 393, 394, 416, 378, 0,
	429, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 1834, 1836, 1837,
	1838, 1839, 1840, 1841, 0, 1846, 1842, 1843, 1844, 1845,
	0, 1829, 1830, 1831, 1832, 825, 1815, 1835, 0, 1816,
	320, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1833, 332, 298, 333, 285, 310, 309, 311,
	850, 852, 854, 856, 859, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 1828, 0, 344,
	326, 0, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 262,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 395, 0, 0, 0, 425, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 405, 312, 313,
	314, 315, 279, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 849, 295, 0,
	336, 274, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 429, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 353, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 247, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 1906, 1909,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1910, 384, 0,
	0, 0, 1905, 1896, 1904, 357, 1902, 1907, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 1908, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 361, 0, 0, 392, 393, 394, 416, 378, 0,
	429, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 1906, 1909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	0, 371, 399, 263, 390, 0, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 415, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1910, 384, 0, 0, 0, 1905, 0, 1904,
	357, 1902, 1907, 293, 0, 0, 0, 400, 0, 344,
	326, 0, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 1908, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 262,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 395, 0, 0, 0, 425, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 405, 312, 313,
	314, 315, 279, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 429, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 353, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 1641,
	0, 0, 0, 247, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	945, 946, 947, 944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 361, 0, 0, 392, 393, 394, 416, 378, 0,
	429, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	762, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 769, 770, 0, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 358, 757, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	0, 371, 399, 263, 390, 748, 382, 242, 747, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 415, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 400, 0, 344,
	326, 0, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 760, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 432, 262,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 395, 0, 0, 0, 425, 431, 0, 0, 0,
	0, 0, 430, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 761, 0, 380, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 764, 312, 313,
	314, 315, 279, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 771, 758, 767, 759, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 429, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 353, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 247, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1912, 384, 0,
	0, 0, 1917, 1915, 0, 357, 0, 1916, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 432, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 431, 0, 0, 0, 0, 0, 430, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 160, 361, 0, 392, 393, 394, 416, 378, 0,
	429, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 111, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	1684, 0, 182, 0, 0, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 432,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 431, 0, 0,
	0, 0, 0, 430, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	129, 336, 274, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 160, 361, 0,
	392, 393, 394, 416, 378, 0, 429, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 294,
	0, 0, 0, 0, 111, 0, 0, 353, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 1675, 0, 182, 0,
	0, 0, 0, 0, 0, 247, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 432, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 431, 0, 0, 0, 0, 0, 430,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 275, 281, 420, 283, 251, 327, 277, 386,
	290, 0, 413, 0, 414, 0, 0, 0, 0, 319,
	286, 287, 351, 291, 297, 340, 385, 325, 345, 249,
	376, 352, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 295, 129, 336, 274, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 160, 361, 0, 392, 393, 394, 416,
	378, 0, 429, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	111, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1580, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 129, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	769, 770, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 748, 382, 242, 747, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	771, 1599, 767, 1600, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 2281, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 2284, 0, 0,
	2283, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1180, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 1178, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 1174, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 1178, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2989, 0, 182,
	603, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 1178, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2663, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 1178, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 1981, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 2000, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 1178, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3071, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	603, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3004, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 2938, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2754, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 2802, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 2438, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 1178, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 1981, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 429, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2018, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 432, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 431,
	0, 0, 0, 0, 0, 430, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 429, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 2016, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 432, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 431, 0, 0, 0, 0, 0,
	430, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 0, 0, 0, 392, 393, 394,
	416, 378, 361, 429, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 432,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 431, 0, 0,
	0, 0, 0, 430, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 361, 0, 0,
	392, 393, 394, 416, 378, 0, 429, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 293,
	0, 0, 0, 400, 0, 344, 326, 0, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 432, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 0, 0,
	0, 425, 431, 0, 0, 0, 0, 0, 430, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 429, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 1178, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 1496, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 432,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 431, 0, 0,
	0, 0, 0, 430, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 361, 0, 0,
	392, 393, 394, 416, 378, 0, 429, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 1202, 0, 0, 0, 357, 0, 0, 293,
	0, 0, 0, 400, 0, 344, 326, 0, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 432, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 0, 0,
	0, 425, 431, 0, 0, 0, 0, 0, 430, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 429, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 432,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 431, 0, 0,
	0, 0, 0, 430, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 361, 0, 0,
	392, 393, 394, 416, 378, 0, 429, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 293,
	0, 0, 0, 400, 0, 344, 326, 0, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 470, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 432, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 0, 0,
	0, 425, 431, 0, 0, 0, 0, 0, 430, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 471, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 429, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 447, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 432,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 431, 0, 0,
	0, 0, 0, 430, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 361, 0, 0,
	392, 393, 394, 416, 378, 0, 429, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 293,
	0, 0, 0, 400, 0, 344, 326, 0, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 432, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 0, 0,
	0, 425, 431, 0, 0, 0, 0, 0, 430, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 429, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 432,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 431, 0, 0,
	0, 0, 0, 430, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 361, 0, 0,
	392, 393, 394, 416, 378, 0, 429, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 1158, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 293,
	0, 0, 0, 400, 0, 344, 326, 0, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 432, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 0, 0,
	0, 425, 431, 0, 0, 0, 0, 0, 430, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 429, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 1156, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 432,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 431, 0, 0,
	0, 0, 0, 430, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 361, 0, 0,
	392, 393, 394, 416, 378, 0, 429, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 293,
	0, 0, 0, 400, 0, 344, 326, 0, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 511, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 432, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 0, 0,
	0, 425, 431, 0, 0, 0, 0, 0, 430, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 160, 414, 50, 152, 128, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 153, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 154, 0, 225, 0, 0, 0, 111,
	0, 839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	157, 0, 232, 0, 295, 0, 336, 274, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 0, 0, 0, 392, 393, 394, 416, 378,
	0, 429, 0, 160, 0, 50, 152, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 116, 0, 117,
	118, 0, 0, 153, 0, 0, 0, 0, 827, 0,
	145, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 847, 851,
	853, 855, 857, 858, 860, 99, 865, 861, 862, 863,
	864, 157, 842, 843, 844, 845, 825, 826, 848, 0,
	828, 0, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 840, 846, 127, 151, 158, 0, 97, 0,
	0, 850, 852, 854, 856, 859, 0, 0, 0, 0,
	1561, 0, 0, 0, 0, 0, 150, 144, 143, 0,
	0, 0, 0, 56, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 841, 0,
	0, 0, 0, 0, 1563, 0, 0, 115, 116, 0,
	117, 118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 0, 146, 147, 148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 127, 151, 158, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 149, 0, 108, 0, 0, 150, 144, 143,
	0, 0, 0, 0, 56, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 1561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 1563, 0, 0, 0, 0, 0, 0, 49,
	0, 0, 0, 0, 0, 146, 147, 148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 1529, 1532,
	3088, 1528, 0, 0, 0, 0, 1542, 0, 0, 0,
	1538, 155, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 107,
	0, 0, 0, 149, 0, 108, 0, 1535, 1564, 0,
	0, 1537, 1539, 1541, 0, 1543, 1544, 1545, 1549, 1550,
	1551, 1553, 1556, 1557, 1558, 0, 0, 0, 0, 0,
	0, 129, 1546, 1555, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 849, 0,
	0, 0, 0, 0, 0, 0, 1561, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 1562, 0, 0, 0,
	49, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 38, 0,
	1563, 0, 0, 0, 48, 5, 0, 0, 114, 0,
	0, 0, 0, 1559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1561, 0, 0, 51,
	1534, 0, 0, 0, 1542, 0, 0, 1533, 1538, 0,
	0, 0, 0, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1563, 1552, 129, 0, 0, 1535, 1564, 0, 1540, 1537,
	1539, 1541, 0, 1543, 1544, 1545, 1549, 1550, 1551, 1553,
	1556, 1557, 1558, 0, 0, 0, 0, 0, 0, 0,
	1546, 1555, 1547, 0, 0, 0, 0, 0, 1538, 0,
	0, 2849, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2500, 0, 110, 38,
	0, 0, 0, 0, 1562, 48, 0, 0, 0, 114,
	0, 0, 0, 0, 0, 490, 0, 489, 496, 486,
	0, 2512, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 0, 495, 499, 2503, 0, 481, 0, 0, 0,
	0, 1559, 0, 0, 2498, 1554, 504, 0, 0, 2518,
	2519, 0, 0, 0, 0, 2499, 0, 490, 1534, 489,
	496, 486, 1542, 0, 0, 1533, 0, 0, 0, 0,
	0, 493, 494, 1548, 495, 499, 508, 0, 481, 510,
	0, 0, 0, 0, 509, 0, 0, 0, 504, 1552,
	0, 0, 2504, 1535, 1564, 0, 1540, 1537, 1539, 1541,
	0, 1543, 1544, 1545, 1549, 1550, 1551, 1553, 1556, 1557,
	1558, 0, 0, 490, 0, 489, 496, 486, 1546, 1555,
	1547, 0, 1542, 0, 0, 0, 0, 493, 494, 0,
	495, 499, 0, 1548, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 1562, 1535, 1564, 0, 0, 1537, 1539, 1541,
	0, 1543, 1544, 1545, 1549, 1550, 1551, 1553, 1556, 1557,
	1558, 0, 0, 0, 508, 0, 0, 510, 1546, 1555,
	1547, 0, 509, 2517, 0, 1904, 0, 0, 0, 1559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	2508, 0, 1562, 1533, 0, 0, 0, 482, 484, 483,
	0, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 2505, 2509, 2507, 2506, 0, 1552, 0, 492,
	0, 0, 0, 0, 1540, 0, 507, 0, 0, 1559,
	0, 0, 0, 485, 0, 0, 0, 476, 0, 482,
	484, 483, 0, 0, 0, 0, 1534, 0, 0, 488,
	2514, 2515, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 485, 0, 1552, 0, 0,
	0, 0, 0, 0, 1540, 0, 0, 0, 0, 0,
	2520, 0, 0, 0, 0, 482, 484, 483, 0, 0,
	0, 0, 2501, 0, 0, 488, 0, 0, 2513, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 487, 491, 497, 0, 498,
	500, 0, 0, 501, 502, 503, 0, 0, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 491, 497,
	0, 498, 500, 0, 0, 501, 502, 503, 0, 0,
	505, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 491, 497, 0, 498, 500, 0,
	0, 501, 502, 503, 0, 0, 505, 506,
}

var yyPact = [...]int{
	35562, -1000, -1000, -1000, -301, 9426, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33531, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33531, -299,
	32996, 32996, -1000, -1000, 1974, -1000, 32461, 10515, 33531, 245,
	227, 33531, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 616, -1000, 31926,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 494, 36245, 35136,
	7275, -253, -1000, 2849, -109, 758, 775, 787, 787, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2408, 648, 31391,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2807, 374, 648, 13190, -8, -9, 2849, 336, 2442, -1000,
	913, 35683, 155, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7275, 7275, 9426, -309, 9426, 7275,
	33531, 33531, -1000, -1000, -1000, -1000, 494, 36245, 7275, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -9,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3335, -1000, 1211, -1000,
	-1000, -1000, -1000, 2336, 1207, 1882, 455, 33531, -1000, 1202,
	455, -1000, -1000, -1000, 2849, 2849, -1000, 33531, 33531, 48,
	1337, -1000, 324, 331, 342, 1201, -1000, -1000, -1000, -1000,
	-1000, -1000, 343, 2682, -1000, 33531, 33531, 2378, 33531, -1000,
	1741, 401, 36343, 2513, 1103, 621, 2389, -1000, -1000, 2335,
	-1000, 158, 416, 170, 551, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 182, -1000, 2585, -1000, -1000, 152, -1000, -1000,
	141, -1000, -1000, -1000, -10, -1000, -1000, -1000, -1000, -1000,
	-1000, -125, -1000, -1000, 807, 1528, 7275, -1000, 1434, -1000,
	2229, -1000, -1000, -1000, -1000, 4590, 8880, 8880, 8880, 8880,
	-1000, -1000, 2117, 7275, 2308, 2307, -1000, -1000, -1000, -1000,
	-1000, 1197, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1881, 8345, -1000, 2306, 2301, 2295,
	2277, 2276, 2274, 2273, 2271, 2268, 2267, 2266, 2265, 2264,
	2261, 2040, 9969, 2248, 1879, 1875, 2246, 2244, 2243, 1873,
	2040, 2040, 2231, 2230, 2228, 2226, 2223, 2218, 2215, 2210,
	2199, 2174, 2168, 2167, 2162, 2160, 2159, 2158, 2156, 2151,
	2150, 2147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1140, -1000, 2143, 2494, 2605,
	2081, 2647, 2569, 2559, 2553, 2541, 1663, -1000, -1000, -1000,
	-146, -1000, -1000, 772, -1000, 724, -1000, 33531, 33531, 33531,
	489, 489, 489, 489, 489, 489, 542, 489, 588, 572,
	546, 489, -1000, -1000, -1000, -1000, -1000, -1000, 715, -1000,
	-1000, -1000, -1000, 1085, 33531, -1000, 2074, 1255, 2602, 428,
	415, 381, 1255, 298, -1000, 1352, 1352, 1352, 1352, 1255,
	308, 406, 2605, 2605, -20, 1352, -42, 1255, 1255, -42,
	1255, 1255, 1255, 175, -296, -1000, -1000, -1000, 1352, 1352,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2579, 2578, 494,
	33531, 89, 33531, 494, 494, 494, 507, -79, 34601, 34066,
	1741, 400, 384, 1098, 1332, -1000, 1266, 33531, 33531, 1266,
	1266, 17473, 16938, -1000, 33531, -1000, 2605, 2081, -1000, 2018,
	2597, 2017, 2081, 494, 494, 494, 494, 494, 122, 494,
	494, 494, 33531, 33531, 30856, 494, 494, 6195, 6195, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9426, 1514,
	1626, 153, -69, -306, 188, -1000, -1000, 33531, 2473, 124,
	-1000, -1000, -1000, 2042, -1000, 2072, 2072, 2072, 2072, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2100, 2141,
	-1000, -1000, 2070, 2070, 2070, 2042, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2094, 2094, 2095, 2095, 2094, 33531, 7275, 33531, 2504,
	317, 2139, -1000, 33531, 302, 2605, 2494, 2605, -1000, -1000,
	1194, 1661, 1872, -1000, -1000, 324, 1187, -1000, 810, -1000,
	-1000, -1000, -1000, 33531, -125, 312, -1000, -1000, 1865, 2136,
	-1000, 454, 863, 1181, -1000, 131, 36287, 26568, 1741, 26568,
	33531, -1000, -1000, -1000, -1000, -1000, -1000, -22, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 146, -1000, 7275, 7275, 7275, 7275, 7275, -1000, 764,
	7810, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8880, 8880,
	8880, 8880, 8880, 8880, 8880, 8880, 8880, 8880, 8880, 8880,
	2116, 1326, 8880, 8880, 8880, 8880, 2597, 2708, 1087, 223,
	-1000, -1000, -1000, -1000, -1000, 1373, 1528, 7275, 7275, 33531,
	-1000, 2830, 7275, 7275, 135, 7275, 2534, 7275, 7275, 7275,
	2009, 3519, 33531, 7275, -1000, 2008, 2003, -1000, -1000, 1515,
	7275, -1000, -1000, 7275, -1000, -1000, 7275, 8880, 7275, -1000,
	-1000, -1000, 203, 2534, 2534, 7275, 7275, 2534, 2534, 2534,
	1334, 2534, 2534, 2534, 2534, 2534, 2534, 2534, 2534, 2002,
	2000, 1997, 2605, -253, 5660, -1000, -258, 2494, 7275, -1000,
	-1000, 7275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1867, -68, 755, 738, 729, -1000, 2522, -1000, 2135, 2133,
	1193, 33531, 1400, 33531, 26568, 33531, 33531, 1741, 33531, 33531,
	489, 489, 489, 33531, 507, -1000, 33531, 1085, 2521, 33531,
	2657, 8880, 8880, 30321, 1352, 1255, 1255, -1000, -1000, 33531,
	-1000, -1000, -1000, 1352, 33531, 1352, 1352, 2657, 1352, -1000,
	-1000, -1000, 1255, 1255, -1000, -1000, -1000, -1000, 1352, 1352,
	-1000, -1000, 2657, 33531, -23, 2657, 2657, -41, -1000, -1000,
	-1000, 33531, 33531, 489, 33531, -1000, 33531, 33531, -1000, -1000,
	33531, 35784, 33531, 29786, 2572, -1000, 26568, 33531, 33531, 24428,
	-1000, 1049, -1000, -87, -1000, -77, -79, 1266, -79, 1266,
	-1000, 450, 429, 15868, 389, 26568, 4054, -1000, -1000, 1266,
	1266, 4054, 4054, 1171, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1072, -1000, 126, 2494, -1000, -1000, -1000, -1000, -1000,
	33531, 33531, 26568, 1741, 33531, 494, 33531, 33531, 33531, -1000,
	2120, -1000, 2512, 33531, 33531, 1036, -1000, -1000, 12655, 1191,
	1036, -1000, 1386, -1000, 7275, 9426, -282, 7275, 9426, 9426,
	7275, 9426, -1000, 7275, 112, -1000, -1000, -1000, -1000, 1657,
	-1000, 1650, -1000, -1000, -1000, 1866, 1866, -1000, 1648, -1000,
	-1000, -1000, -1000, 1646, -1000, -1000, 1644, -1000, -1000, -1000,
	1994, 807, -1000, 1861, 2388, -254, -1000, 14797, 33531, 33531,
	-1000, -1000, -254, -1000, 14261, 33531, 2494, -1000, 2494, 33531,
	-1000, 2600, -1000, 324, 229, -1000, -1000, -1000, -1000, -1000,
	-1000, 1189, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1069, -1000, 33531, -1000, -1000, 131, 26568, 27638, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 169, -1000, -1000, 165,
	-1000, 516, 73, 1179, -1000, -1000, 95, 166, 646, 1528,
	-1000, 1395, 1395, 1404, -1000, 480, -1000, -1000, -1000, -1000,
	2117, -1000, -1000, -1000, 2194, 2256, -1000, 1321, 1321, 1188,
	1188, 1188, 1188, 1188, 1264, 1264, -1000, -1000, -1000, 4590,
	2116, 8880, 8880, 8880, 8880, 469, 469, 2296, 3200, -1000,
	7275, 1372, -1000, 7275, 1986, 1019, 1186, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1991, 1990, 1831,
	2675, 1988, 7275, -1000, -1000, 1178, 1174, 1172, -1000, 1827,
	6740, -1000, -1000, -1000, 1981, 1183, 1972, -1000, -1000, -1000,
	1970, 1169, 883, 1962, 1664, 1961, 1065, 7275, 7275, 1168,
	1167, 7275, 7275, 7275, 7275, 1960, 7275, 7275, 7275, 7275,
	7275, 7275, 7275, 7275, 9, 9, 9, -1000, -1000, 1160,
	-1000, 1528, -1000, 1858, -1000, 1091, 1060, -1000, 1477, -1000,
	-1000, -1000, -1000, 736, 722, 744, 33531, 837, 11050, 33531,
	2074, 2510, 105, -1000, 903, -1000, 73, -131, 250, 821,
	2377, 2671, 33531, 33531, 33531, 2520, 29251, -1000, 2111, 1154,
	-1000, -1000, 7275, -1000, -1000, 2368, 33531, 33531, 2657, 2657,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33531, 2657, 2657,
	1255, 1352, -1000, -1000, 1352, -1000, -1000, 1352, -1000, 1166,
	-1000, 33531, -1000, -1000, -1000, 2074, 1053, -1000, 11585, 13725,
	535, -1000, 509, 1275, 1275, 1275, 814, 1275, 1275, 1275,
	1275, 339, 335, 1275, 1275, 1275, 1275, 1275, 1275, 1275,
	1275, 1275, 1275, 1275, 769, 1275, 1275, 1275, 1275, 1275,
	-1000, 1275, 2110, -1000, 387, 96, 2565, 183, 177, 903,
	2557, 191, 2782, 1033, -1000, -1000, -1000, -1000, 19613, 19613,
	15333, 19613, -1000, 1203, -79, -80, -1000, -1000, 1049, 4054,
	1049, 4054, -1000, -1000, 500, -1000, -1000, 821, -1000, 33531,
	33531, -1000, -1000, 2109, 1331, -1000, -1000, 9969, -1000, 4054,
	4054, -1000, -1000, 20148, 33531, -1000, -126, -1000, -116, 2598,
	995, -1000, -1000, 1037, 821, 2387, 33531, 995, -1000, -1000,
	11050, 33531, -1000, -1000, 2657, 6195, -1000, 24428, -1000, -1000,
	28708, -1000, 28173, 2657, 1367, -1000, 9426, 1509, 149, -1000,
	184, -311, 142, 1414, 140, 1528, -1000, -1000, 1958, 1957,
	1152, -1000, 1148, 1955, 1142, 1134, -1000, -53, -1000, 2477,
	823, -1000, 2107, -1000, 1133, 2451, -1000, 941, -1000, 1330,
	1131, -1000, 823, 1116, 2448, 941, 2598, -1000, 1147, 47,
	-1000, -1000, 33531, 1865, 1094, 27638, 871, -1000, 498, 1144,
	1139, -1000, 26568, 150, 26568, -1000, 26568, -1000, -1000, 281,
	-1000, 33531, 2481, -1000, -1000, -1000, 1788, -329, -1000, -1000,
	-1000, -1000, -1000, 1093, -1000, 469, 469, 2296, 3153, -1000,
	8880, -1000, 8880, 2701, 1359, -1000, 7275, 1499, 3244, 1711,
	19078, 33531, -1000, -1000, 7275, 7275, -1000, 2676, -1000, -1000,
	-1000, -1000, 7275, 7275, 1806, -1000, 33531, -1000, -1000, -1000,
	-1000, 19078, -1000, 8880, -1000, 7275, 1042, 2668, 9, 9,
	2661, 2581, 2482, 1089, 9, 2466, 2441, 2428, 2395, 2380,
	2372, 2342, 2207, -1000, 2101, -1000, -1000, 5660, -1000, -53,
	7275, 7275, 7275, 2463, -1000, -1000, -1000, -1000, -1000, 719,
	130, 1950, 937, -1000, -1000, 33531, -1000, -1000, -1000, 1947,
	904, -1000, -1000, -1000, 35581, 2072, 2072, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2100, -1000, -1000, 2070,
	2070, 2070, 2042, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2094, 2094, 2095, 2095, 2094, -1000, 2518, -1000,
	20, 1275, 430, 26568, 350, -1000, 33531, 1667, 1328, 2386,
	330, 2467, 33531, 2092, 2086, 2085, 231, 35581, 33531, 915,
	-1000, 1137, 35683, -1000, 33531, 1528, -1000, 1741, -1000, 1255,
	-1000, -1000, 2657, 1150, -1000, -1000, 2657, 1255, 1255, 1352,
	33531, -1000, 2515, 35784, -1000, 2456, 33531, -1000, -1000, 35581,
	656, -1000, 662, 489, 33531, 1441, 662, 1440, 2084, -1000,
	-1000, -1000, 33531, 33531, -1000, 33531, 1438, 1437, -1000, 33531,
	33531, 1642, -1000, 1628, 1616, 1275, 1275, 1612, 1857, 1845,
	1844, 1275, 1275, 1583, 1843, 27103, 1841, 890, 1579, 1575,
	1571, 1677, 1834, 645, -1000, 1833, 1660, 1621, 1611, 33531,
	2075, 1769, -1000, -1000, 20, 1275, 162, 33531, 1327, 430,
	249, 1680, 16403, 33531, 24428, 24428, 24428, 24428, -1000, 2433,
	2430, -1000, 2402, 2401, 2429, 33531, 24428, 2074, -1000, 27103,
	-1000, -1000, -1000, 2597, 1086, 2763, 817, 7275, -1000, -1000,
	-106, -97, -1000, -1000, -1000, 26568, 1832, 389, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2697, 33531, 33531, 465,
	1945, -1000, 2655, -1000, 872, -1000, -1000, 1136, -1000, 2655,
	1378, -304, 9426, 1353, 1349, -1000, 7275, 9426, 7275, -285,
	172, -287, -1000, -1000, -1000, 1825, -1000, -1000, -1000, 1570,
	-1000, 1566, 23, 32, 1427, -254, 5660, 329, 33531, -254,
	33531, 5660, -1000, 33531, 311, -254, -1000, 33531, 1565, -1000,
	-1000, -1000, 2660, 26568, 1741, 1224, 26033, -1000, 151, -1000,
	167, 425, 1820, -1000, 530, 113, -1000, 1319, 1788, -1000,
	-1000, -1000, 8880, -1000, -1000, -1000, -1000, 1528, 7275, 1944,
	-1000, 728, 728, 1943, -1000, 2072, 2072, -1000, 2042, 2070,
	2042, 728, 728, 1937, -1000, 1730, 2076, -1000, 2061, 1978,
	7275, -1000, 1936, 3076, 951, -149, 9, -1000, -1000, -1000,
	9, 9, 9, 9, -1000, 9, 9, 9, 9, 9,
	9, 9, 9, 460, -1000, 23, 1528, 1528, -1000, -1000,
	2459, -1000, 1816, 1799, 837, 35581, 620, 11050, 2472, 289,
	1681, -1000, -1000, -1000, 25498, 399, -1000, -1000, -1000, 499,
	133, 1563, 379, -1000, 33531, 191, 1665, 1317, 1798, 33531,
	-1000, -1000, -1000, -1000, -1000, 2467, -1000, 734, 216, 12120,
	12120, 12120, 214, 1351, -1000, 455, 867, 1124, 24428, 33531,
	-1000, 23893, 1932, -1000, 821, 2657, -1000, 33531, -1000, 2657,
	2657, 1255, -1000, 289, -1000, -1000, -1000, 33531, 2456, 36196,
	-1000, 33531, -1000, 33531, -1000, 33531, 33531, 489, 7275, -1000,
	-1000, -1000, 33531, -1000, 204, -1000, -1000, -1000, -1000, -1000,
	19078, 19078, -1000, -1000, -1000, -1000, 1796, 1794, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33531, 1077, -1000,
	1305, 1681, 25498, 1303, 1266, 1792, 399, 1667, 1302, -1000,
	1791, -1000, 824, 33531, 33531, -1000, 1034, -1000, 1300, 2350,
	2385, 2350, -1000, -1000, -1000, -1000, 2425, -1000, 2418, -1000,
	-1000, 1034, -1000, -1000, -1000, -1000, -1000, 817, -1000, 2596,
	662, 662, 662, 1928, -1000, -1000, -1000, 871, 1924, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2652, 2640,
	24963, 2652, -1000, -304, 1358, -1000, 1429, 138, 1409, 33531,
	-1000, -1000, -1000, 1923, 1921, -260, 25, 2638, 2637, 2696,
	-1000, 1913, 852, -254, -1000, -1000, 823, -1000, -1000, -1000,
	-254, -1000, 823, -1000, -1000, 1741, -1000, 164, -1000, -1000,
	-1000, -1000, -1000, -1000, 59, -1000, 33531, -1000, 1788, 1784,
	111, -1000, 1528, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7275, -1000,
	-1000, -1000, 1938, -1000, -1000, 7275, 1910, 1782, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2649, -1000, 2636, -260, -1000, -1000, -1000, -1000, -1000,
	-1000, 35581, -1000, 1502, -1000, -1000, 1777, 71, -1000, -1000,
	-1000, 1775, 1773, 1562, -1000, -1000, 1576, 1173, 85, -1000,
	-1000, -1000, -1000, -1000, -1000, 1680, 1674, 1297, -331, -1000,
	2068, -1000, 1275, 1275, 1275, 33531, 1909, 846, -1000, -1000,
	-1000, -1000, 1906, 1905, 467, 1278, 1277, -1000, 1561, 19613,
	24428, 23893, 921, -1000, 1113, -1000, -1000, -1000, 2657, -1000,
	-1000, 2657, -1000, -1000, -1000, -1000, 36196, -1000, -1000, 1453,
	8880, -1000, -1000, 1771, 18543, 597, 1293, 1292, 600, 2066,
	-1000, 303, 2695, -1000, -1000, -1000, 687, 1424, 1423, -1000,
	33531, -1000, 2064, -1000, 2059, 2365, 260, 2057, 2056, 33531,
	1874, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1043,
	-1000, 1769, 1766, -1000, 71, 1763, 4054, -1000, -1000, 1665,
	1758, -1000, 33531, 824, 824, 2649, 33531, 5660, -1000, -1000,
	7275, 2054, -1000, 7275, -1000, -1000, -1000, -1000, -1000, 2052,
	2454, -1000, -1000, -1000, -1000, -1000, -1000, 7275, 7275, -1000,
	-1000, 487, 9426, -288, 171, -1000, -1000, -1000, -262, 1756,
	-1000, -1000, 2634, 1744, 1691, 33531, -1000, 823, 823, 821,
	-1000, -1000, -41, -1000, -1000, -1000, 1864, -1000, 1814, 9,
	-1000, 134, 7275, -262, -194, -1000, -1000, -1000, -1000, 280,
	-1000, -1000, 187, -1000, -1000, 1559, 451, -1000, -1000, -1000,
	1740, 1448, 1706, 22823, 19078, 18543, 1739, -1000, 36140, 12120,
	146, 36140, 781, 1271, -1000, 1554, -1000, 1552, -1000, 2657,
	921, 1113, -1000, -1000, 1199, -1000, -1000, -1000, -1000, 2296,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1735, 1724,
	-1000, -1000, -1000, -1000, -1000, 1551, 2051, -99, 2530, -1000,
	-1000, 2050, 22823, 22823, 246, 246, 22823, 22823, 2047, 528,
	-1000, -1000, -1000, -1000, -1000, -1000, 1674, -1000, -1000, 2605,
	-1000, -1000, 1528, 33531, 1528, 23358, -1000, 2633, 2631, 1528,
	807, -1000, -304, 33531, 33531, -274, 1550, -1000, 1710, 33,
	-1000, -1000, 818, -276, 22, 21, -1000, -1000, -1000, 1904,
	-1000, 502, -1000, -1000, -1000, 807, -274, 33531, 421, 1709,
	-1000, -1000, 178, -1000, -1000, -1000, -1000, -1000, 110, -1000,
	1291, 1038, -1000, 2042, 7275, -1000, -1000, -1000, 452, 36080,
	-1000, -1000, -1000, -41, 452, 418, 213, -1000, 1510, -1000,
	-1000, 2649, -1000, -1000, -1000, 1686, 7275, 2040, 1275, -188,
	22823, 1035, 1030, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1029, 1028, 22823, -1000, -1000, -1000, 309, -1000, -1000, 1026,
	1020, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2033, -1000,
	-1000, 2628, -1000, 1708, 505, 26, 21, -1000, 2627, 31,
	2625, 2622, -1000, -1000, 437, -255, 7, 6, 1, -1000,
	-1000, -1000, 7275, -1000, 2495, -1000, -1000, 58, -1000, -1000,
	-1000, 1706, 1702, -1000, 22823, 2491, 1738, 265, 2617, 36140,
	-1000, -1000, 265, -1000, 221, -1000, 1231, -1000, 1503, -1000,
	2605, -1000, 1641, -1000, 33531, 2382, -1000, 127, 1012, 2364,
	2347, 2298, 2063, 1001, -1000, -1000, -1000, 22288, 33531, 1691,
	-1000, 2031, 1500, 25, 27, 2613, -1000, 1691, 2612, 1691,
	1691, 1402, -1000, 4, -1, -3, -1000, -1000, -1000, -1000,
	1701, -1000, -1000, -1000, 220, -1000, -1000, 2491, -1000, 2610,
	292, -1000, -1000, -1000, -1000, 1495, -1000, -1000, 528, -1000,
	-1000, 2381, 2272, 2667, -1000, -1000, -1000, -1000, 220, 246,
	220, 246, 220, 246, 220, 246, 147, -1000, -1000, 999,
	-1000, -1000, 2528, 18008, 14, -1000, -1000, -1000, 1699, -1000,
	1691, -1000, -1000, 437, -1000, -1000, -1000, -1000, -1000, 1275,
	1687, 208, -1000, -1000, -1000, 21753, 286, 378, 326, -1000,
	497, -1000, -1000, -1000, -1000, 2669, -1000, 2688, 614, 614,
	-1000, -1000, -1000, -1000, -1000, -1000, 33531, -1000, 33531, -1000,
	989, -1000, -1000, -1000, 1105, -1000, -1000, -1000, -1000, -1000,
	1474, -1000, 33531, -1000, 33531, 284, 1471, 8880, 2030, 8880,
	2027, 296, 2025, -1000, -1000, -1000, 1531, 315, -1000, 220,
	220, 220, 220, -1000, 786, -1000, 1272, -1000, 21218, 33531,
	-1000, -1000, 986, 2022, 2608, -1000, 3057, 33531, 2948, 33531,
	2020, 1260, 8880, -1000, -1000, -1000, 33531, 5125, -1000, 815,
	-1000, -1000, 422, 293, -1000, 942, -1000, 932, 20683, 1470,
	2269, -1000, -1000, 1528, 33531, 926, -1000, 33531, 273, -1000,
	-1000, -1000, 925, -1000, -1000, -1000, -1000, 422, 2447, -1000,
	1445, -1000, -1000, 35932, 592, -1000, -1000, 35932, 279, -1000,
	404, 1736, -1000, -1000, 919, -1000, 33531, 618, 7275, -1000,
	279, 36140, -1000, 7275, 916, -1000, 36140, 878, -1000, -1000,
}

var yyPgo = [...]int{
	0, 144, 2720, 230, 152, 3273, 66, 229, 207, 205,
	227, 3272, 3271, 2465, 2462, 3270, 3269, 3268, 3267, 3266,
	3265, 3262, 3261, 3260, 3259, 3258, 3257, 3256, 3255, 3254,
	3253, 3249, 3240, 3236, 3235, 3234, 3230, 3227, 3226, 226,
	3225, 3224, 3223, 3222, 3220, 3219, 3218, 3217, 3216, 3215,
	3214, 3211, 3210, 3196, 3195, 3194, 3193, 3192, 3191, 3177,
	3176, 3174, 3173, 3172, 3166, 3165, 3164, 3162, 3161, 3160,
	200, 3158, 2459, 3157, 3156, 3153, 3152, 3151, 3150, 3149,
	222, 3147, 3146, 3144, 3142, 3141, 3140, 3139, 3138, 3137,
	3136, 3135, 220, 3133, 3132, 3131, 3130, 3128, 3125, 216,
	3124, 149, 190, 3123, 3122, 3121, 3120, 3119, 224, 192,
	50, 3116, 38, 3115, 203, 3114, 126, 3113, 121, 3112,
	3110, 3108, 3107, 3102, 3101, 3100, 3099, 3098, 3096, 3095,
	3093, 3092, 3088, 3087, 3085, 75, 3084, 106, 139, 173,
	232, 1324, 231, 228, 167, 146, 90, 3082, 2489, 3067,
	138, 214, 136, 27, 3066, 159, 3064, 133, 41, 28,
	233, 115, 46, 131, 104, 3062, 201, 87, 86, 3061,
	3057, 168, 242, 169, 3056, 109, 3053, 3052, 3049, 3047,
	189, 187, 3046, 3045, 107, 3042, 3039, 119, 3037, 54,
	186, 143, 172, 3036, 266, 98, 105, 155, 3035, 3034,
	83, 3033, 3032, 3031, 3028, 160, 3026, 3025, 103, 73,
	3024, 3023, 3022, 53, 3021, 61, 3020, 63, 3014, 3013,
	3012, 3011, 55, 3010, 3009, 17, 24, 21, 3008, 20,
	3007, 151, 3006, 3002, 3001, 97, 2999, 2, 2998, 204,
	209, 85, 127, 2990, 402, 2989, 2988, 2986, 137, 2984,
	531, 2983, 2981, 2980, 2979, 2978, 89, 2977, 195, 42,
	2976, 78, 123, 2975, 34, 102, 176, 208, 2974, 2969,
	2968, 129, 70, 76, 0, 2967, 134, 2965, 2964, 2963,
	235, 2961, 213, 184, 147, 111, 236, 148, 2960, 2959,
	72, 2956, 140, 84, 44, 108, 8, 16, 199, 2954,
	822, 162, 2952, 188, 2950, 135, 7, 120, 2948, 2946,
	32, 238, 2942, 2941, 2940, 101, 2939, 2938, 99, 77,
	2937, 2936, 2934, 35, 2932, 30, 12, 2931, 79, 2930,
	225, 2929, 156, 112, 161, 157, 132, 206, 212, 60,
	56, 2924, 1353, 128, 80, 26, 2923, 210, 2922, 163,
	91, 2921, 124, 2920, 219, 316, 191, 2919, 165, 10,
	36, 33, 2918, 9, 2917, 117, 183, 2916, 2915, 18,
	43, 2907, 23, 2906, 2904, 2903, 2900, 5, 2898, 2897,
	2896, 1, 4, 2895, 3, 185, 2894, 2893, 2892, 2891,
	40, 125, 2890, 113, 174, 158, 2888, 74, 2887, 2881,
	2880, 633, 2877, 249, 2872, 2871, 2870, 2866, 2864, 2863,
	2862, 2861, 2854, 81, 47, 2850, 2847, 2846, 2844, 64,
	114, 2835, 2834, 2832, 2831, 31, 164, 2830, 22, 2827,
	25, 29, 37, 2826, 122, 2825, 14, 166, 2822, 2815,
	15, 2814, 2811, 11, 13, 2809, 2808, 93, 2807, 69,
	19, 141, 95, 2800, 2792, 65, 194, 116, 2791, 2790,
	217, 223, 180, 2788, 145, 218, 234, 2786, 193, 2785,
	2784, 2783, 2782, 2780, 2778, 901, 2767, 2761, 215, 48,
	71, 94, 2760, 2754, 2753, 67, 142, 96, 88, 45,
	68, 2752, 92, 178, 2749, 175, 2747, 2746, 82, 2743,
	2741, 2740, 2739, 2736, 170, 2735, 2733, 171, 211, 2732,
	2731, 2726, 2724, 221, 313, 2716,
}

//line mysql_sql.y:9926
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 503, 511, 511, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 501, 501, 501, 502, 502, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 446, 446, 445, 445, 444, 444, 398, 398,
	443, 443, 443, 442, 442, 442, 441, 441, 440, 440,
	439, 439, 437, 437, 438, 436, 435, 435, 435, 433,
	433, 433, 429, 429, 431, 430, 430, 432, 424, 424,
	427, 427, 425, 425, 425, 425, 428, 423, 423, 423,
	422, 422, 91, 91, 91, 344, 344, 90, 90, 358,
	358, 358, 358, 358, 356, 356, 356, 356, 356, 356,
	355, 355, 354, 354, 359, 359, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 81, 81, 81, 81,
	81, 86, 86, 86, 508, 508, 507, 507, 509, 509,
	509, 509, 510, 510, 84, 84, 84, 85, 353, 353,
	353, 82, 83, 83, 343, 343, 348, 348, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 352, 352, 352, 350, 350, 349, 349, 351, 351,
	75, 75, 75, 78, 77, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 340,
	340, 339, 87, 87, 88, 505, 505, 504, 506, 506,
	506, 506, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 471, 471, 471, 473, 473, 278, 279, 512, 281,
	277, 277, 277, 467, 467, 468, 469, 470, 470, 470,
	93, 11, 11, 11, 11, 11, 11, 11, 69, 74,
	230, 230, 231, 231, 231, 231, 231, 231, 231, 235,
	235, 235, 234, 232, 232, 232, 232, 232, 232, 233,
	236, 236, 67, 73, 73, 73, 484, 484, 68, 495,
	495, 401, 401, 292, 292, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 406, 407, 288, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 46, 45, 45, 45, 329, 329, 44, 513,
	513, 267, 267, 56, 55, 48, 57, 58, 59, 60,
	61, 62, 43, 54, 54, 54, 54, 54, 54, 54,
	54, 65, 65, 418, 418, 515, 515, 515, 63, 64,
	400, 400, 400, 53, 52, 51, 50, 49, 49, 42,
	42, 41, 41, 47, 129, 130, 285, 285, 285, 287,
	287, 283, 514, 514, 372, 372, 286, 286, 40, 40,
	40, 40, 66, 284, 284, 266, 282, 282, 282, 12,
	12, 10, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 23, 24, 26, 337, 337,
	334, 25, 18, 17, 20, 16, 16, 19, 21, 22,
	22, 9, 9, 9, 9, 13, 13, 14, 145, 145,
	195, 195, 479, 479, 475, 475, 476, 476, 476, 477,
	477, 478, 478, 99, 412, 412, 412, 412, 412, 412,
	8, 167, 167, 411, 411, 411, 411, 411, 411, 341,
	341, 456, 456, 456, 457, 166, 166, 161, 161, 413,
	413, 307, 458, 458, 421, 421, 420, 420, 419, 419,
	164, 164, 165, 165, 148, 148, 109, 109, 426, 426,
	426, 426, 434, 434, 397, 397, 222, 222, 259, 259,
	260, 260, 138, 138, 139, 139, 139, 139, 139, 139,
	464, 464, 466, 466, 465, 163, 163, 159, 159, 160,
	160, 160, 158, 158, 157, 156, 156, 155, 153, 153,
	153, 154, 154, 154, 171, 171, 141, 141, 141, 140,
	140, 140, 140, 140, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 142, 142, 472, 472,
	472, 402, 402, 402, 409, 409, 241, 241, 242, 242,
	240, 240, 143, 143, 144, 144, 144, 144, 239, 239,
	238, 146, 146, 152, 151, 151, 147, 147, 147, 147,
	249, 249, 248, 248, 248, 248, 102, 107, 107, 108,
	170, 170, 247, 246, 246, 246, 169, 169, 168, 168,
	162, 162, 150, 150, 150, 150, 245, 149, 243, 500,
	500, 499, 499, 498, 496, 496, 496, 497, 497, 497,
	497, 448, 448, 448, 448, 448, 272, 272, 272, 276,
	276, 275, 275, 275, 275, 275, 280, 7, 7, 7,
	7, 7, 7, 30, 30, 30, 30, 30, 30, 30,
	30, 36, 179, 180, 37, 181, 181, 182, 182, 183,
	183, 184, 185, 186, 186, 186, 186, 35, 172, 172,
	173, 173, 174, 174, 175, 176, 176, 176, 178, 177,
	34, 27, 480, 483, 481, 481, 485, 485, 485, 486,
	486, 486, 486, 487, 487, 28, 126, 131, 490, 490,
	490, 489, 489, 491, 491, 492, 492, 263, 263, 264,
	264, 134, 135, 135, 133, 128, 137, 137, 137, 137,
	137, 127, 132, 482, 488, 488, 488, 338, 338, 335,
	336, 336, 333, 332, 332, 332, 494, 494, 493, 493,
	493, 273, 273, 29, 328, 328, 330, 331, 331, 331,
	322, 322, 322, 322, 33, 326, 326, 327, 327, 327,
	327, 327, 323, 323, 325, 325, 321, 321, 321, 321,
	321, 32, 136, 136, 320, 320, 318, 318, 316, 316,
	317, 317, 315, 315, 315, 319, 319, 31, 31, 31,
	111, 110, 110, 110, 262, 262, 261, 261, 112, 38,
	207, 207, 386, 386, 386, 386, 386, 404, 404, 404,
	387, 387, 387, 388, 388, 388, 389, 389, 389, 389,
	389, 403, 403, 405, 405, 405, 360, 360, 361, 361,
	361, 364, 364, 378, 378, 379, 379, 377, 377, 384,
	384, 383, 383, 382, 382, 381, 381, 380, 380, 380,
	380, 375, 375, 374, 374, 362, 362, 362, 362, 362,
	363, 363, 363, 373, 373, 376, 376, 213, 213, 214,
	214, 214, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 454, 454, 455,
	216, 216, 220, 220, 220, 220, 220, 220, 215, 215,
	217, 217, 196, 196, 194, 194, 187, 187, 188, 188,
	189, 189, 189, 193, 193, 192, 192, 192, 192, 190,
	190, 191, 191, 191, 191, 191, 191, 346, 346, 451,
	451, 452, 452, 447, 447, 447, 450, 450, 450, 450,
	450, 453, 453, 453, 449, 449, 197, 257, 257, 257,
	274, 274, 274, 274, 256, 256, 256, 212, 212, 211,
	211, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 345, 345, 289, 289, 290, 290, 229, 228, 228,
	228, 228, 228, 226, 227, 225, 225, 225, 225, 225,
	224, 224, 223, 223, 223, 324, 324, 221, 221, 219,
	219, 219, 218, 218, 218, 385, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	255, 255, 255, 299, 299, 304, 304, 463, 463, 462,
	198, 198, 198, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 208, 208, 208, 369, 369, 369, 369, 370,
	370, 370, 370, 371, 371, 371, 367, 367, 368, 368,
	308, 309, 309, 410, 410, 365, 365, 366, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 417, 417, 417, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 474, 474, 474, 459, 459, 459,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 461, 461, 461, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 253,
	253, 253, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 310, 310, 311,
	311, 414, 414, 414, 414, 414, 414, 415, 415, 416,
	416, 416, 416, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 297, 250, 250, 250, 312, 305, 305, 306,
	306, 300, 300, 300, 300, 300, 300, 300, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	301, 301, 303, 303, 314, 314, 314, 313, 313, 313,
	313, 313, 313, 313, 210, 210, 210, 210, 294, 294,
	294, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 200, 200, 200, 200, 204, 204, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 205, 205, 205, 205, 205, 203, 203, 203,
	203, 203, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 100, 101,
	101, 202, 258, 258, 390, 390, 393, 393, 391, 391,
	392, 394, 394, 394, 395, 395, 395, 396, 396, 396,
	399, 399, 265, 265, 265, 271, 271, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 2, 2, 1, 3, 3, 4, 0,
	1, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	1, 1, 7, 7, 8, 8, 0, 4, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 5, 0, 2, 7, 0,
	1, 0, 1, 5, 5, 3, 3, 2, 4, 4,
	4, 4, 4, 1, 1, 1, 3, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 4, 6, 7, 4,
	4, 7, 8, 3, 3, 3, 0, 2, 2, 0,
	2, 2, 1, 1, 1, 1, 0, 1, 4, 4,
	5, 4, 3, 1, 3, 1, 1, 3, 5, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 4, 1, 3,
	1, 4, 6, 6, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 5, 3, 4, 6, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 0, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	7, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 2, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 3, 2, 4, 3, 0, 2, 1,
	0, 2, 3, 0, 2, 3, 0, 3, 2, 4,
	3, 0, 1, 0, 1, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 5, 4, 1, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 1, 1, 1, 7, 9, 7, 9, 2,
	1, 7, 9, 7, 9, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 3,
	3, 2, 2, 1, 5, 6, 4, 1, 1, 1,
	5, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -503, -511, -2, -5, 563, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -138, -106, 556, -76,
	-77, -78, -30, -29, -28, -27, -126, -131, 562, 417,
	12, 466, -13, -14, -464, -15, 241, -277, -278, -279,
	-281, -512, -40, -41, -42, -49, -50, -51, -52, -53,
	-63, -64, -65, -43, -44, -45, -48, -46, -56, -55,
	-57, -58, -59, -60, -61, -62, -47, -129, -130, -66,
	-68, -67, -73, -69, -74, -128, -133, 216, -72, 62,
	-82, -83, -84, -85, -86, -88, -89, 346, 352, 407,
	555, 47, -139, -141, 566, 144, 145, 147, 148, -31,
	-32, -33, -34, -35, -36, -38, -37, 212, 14, 499,
	-16, -19, -17, -20, -18, -25, -26, -24, -21, -23,
	-127, -22, -132, 236, 235, 37, 302, 303, 304, 350,
	234, 213, 13, 30, 41, 328, -140, 68, 214, -142,
	10, 568, -6, -3, -2, -113, -117, -121, -124, -125,
	-122, -123, -4, -101, 102, 226, 557, -274, 342, 558,
	560, 559, 71, 79, -268, -270, 346, 352, 555, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 469, 542, 543, 544, 545,
	326, 327, 496, 253, 277, 377, 283, 290, 144, 163,
	157, 185, 177, 152, 257, 295, 258, 78, 147, 452,
	92, 429, 404, 150, 272, 274, 276, 279, 278, 280,
	282, 259, 329, 173, 168, 271, 255, 166, 260, 39,
	261, 190, 262, 263, 501, 425, 325, 431, 287, 402,
	167, 426, 275, 428, 192, 196, 443, 444, 161, 162,
	433, 446, 189, 233, 42, 498, 245, 447, 194, 188,
	184, 455, 291, 289, 187, 160, 183, 256, 51, 198,
	197, 199, 398, 399, 400, 401, 264, 265, 340, 442,
	180, 169, 330, 153, 22, 450, 240, 430, 353, 266,
	284, 292, 193, 195, 247, 252, 500, 406, 251, 288,
	448, 165, 244, 273, 239, 451, 154, 355, 267, 148,
	281, 445, 454, 50, 368, 159, 151, 230, 145, 249,
	254, 11, 268, 269, 270, 294, 293, 285, 181, 246,
	186, 171, 158, 182, 146, 248, 453, 369, 553, 328,
	387, 179, 176, 250, 223, 449, 432, 149, 391, 370,
	174, 296, 549, 550, 551, 341, 324, 297, 298, 172,
	237, 423, 424, 299, 301, 397, 317, 371, 405, 378,
	372, 205, 305, 435, 437, 191, 552, 306, 307, 308,
	427, 309, 310, 311, 312, 345, -351, -349, -274, 555,
	352, 346, 328, -181, -274, 567, -148, 38, -194, -274,
	-148, -72, -14, -13, -140, -141, -194, 220, -282, 23,
	402, -80, 403, 216, 68, -274, -9, -92, -8, -99,
	-70, -138, 407, -280, -274, 302, 302, -280, 220, -274,
	251, 385, -401, 226, -355, -328, 252, -354, -330, -357,
	-331, 31, 212, 214, 213, 248, 14, 350, 222, 12,
	10, 351, 234, 24, 25, 27, 13, 352, 354, 28,
	355, 358, 359, 360, 41, 363, 364, 241, 71, 79,
	74, 259, -180, -274, -306, -300, 99, 242, -302, -295,
	-296, -298, -443, -437, -293, 68, 126, 127, 134, 100,
	-297, -385, 35, 102, 506, 467, -251, -252, -253, -254,
	-255, -274, -438, -436, 74, 83, 86, 89, 90, 88,
	87, 170, 85, 75, 138, 139, -141, 71, -459, 514,
	-269, 535, 542, 543, 544, 545, 534, 47, -408, -416,
	219, -414, 137, 175, 237, 171, 12, 132, 397, 172,
	511, 531, 469, 515, 538, 508, 509, 503, 504, 505,
	507, 516, 518, 530, -417, 526, 536, 537, 524, 539,
	540, 541, 73, 72, 529, 528, 517, 512, 513, 519,
	502, 510, 520, 521, 527, 532, 533, 334, 92, 335,
	336, 459, 329, 337, 226, 402, 56, 338, 339, 340,
	341, 342, 466, 343, 57, 344, 333, 241, 387, 345,
	174, 191, 471, 470, 472, 463, 460, 458, 461, 462,
	464, 465, 522, 523, 525, -107, -108, 547, -157, -158,
	-244, 19, 6, 7, 8, 9, -501, 404, 500, 149,
	146, -342, 149, 98, 154, 153, -342, 305, 247, 347,
	223, 326, 387, 309, 80, 251, -322, -320, -403, 299,
	295, 221, 231, 230, 93, 459, 219, 361, -475, -476,
	209, 210, 211, -466, 492, -465, -274, 336, 26, 220,
	347, 247, 437, 435, 436, 438, 439, 440, 441, -54,
	-418, -400, 432, 431, -286, 424, 430, 422, 434, 425,
	327, 311, 310, 212, 564, 493, -265, 371, 405, 456,
	457, 348, 406, 443, 445, 426, 92, 178, 175, 223,
	220, 326, 459, 387, 80, 309, -475, 146, 443, 445,
	251, 385, 40, -348, 397, -347, -349, 444, 455, 72,
	73, 442, -265, 92, 423, 423, -158, -244, -157, -139,
	-141, -102, -464, 221, 326, 387, 251, 222, 220, 223,
	459, 219, 302, 347, 247, 309, 80, -402, -472, 31,
	-409, 206, 207, 208, 32, 33, -1, 106, 568, -300,
	-300, -6, 569, -6, -300, -274, -274, 141, -200, -204,
	-201, -203, -202, -206, -205, 175, 176, 137, 179, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 30,
	191, 237, 171, 172, 173, 174, 192, 157, 177, 497,
	200, 158, 201, 159, 202, 160, 203, 161, 162, 204,
	163, 166, 167, 168, 169, 165, 140, 68, 140, 74,
	-164, 243, -194, 140, -164, -158, -157, -158, -194, -256,
	-274, 404, 109, -80, -80, 403, -467, -468, -469, -471,
	216, 403, 402, 140, 259, 15, -280, -280, 66, -194,
	-330, 251, -355, -328, 35, 65, 141, 224, 141, 65,
	68, 348, 326, 387, 349, 459, 220, 361, 223, 251,
	362, 326, 387, 220, 223, 459, 251, 326, 220, 223,
	387, 251, 362, 422, 423, 223, 26, 353, 356, 357,
	423, -422, 455, 141, 98, 95, 96, 97, -300, 116,
	-313, 109, 110, 111, 112, 113, 114, 115, 123, 122,
	133, 126, 127, 128, 129, 130, 131, 132, 124, 125,
	119, 99, 117, 121, 118, 101, -141, -300, -306, 47,
	-298, -298, -298, -298, -385, -304, -300, 68, 68, 140,
	74, -300, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, -415, 68, 68, -310, -311, 68,
	68, -293, -256, 68, 74, 74, 68, 68, 68, 74,
	-311, -311, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, -158, 141, 68, -109, 38, -160, 21, -142,
	-141, 20, 31, 32, 31, 32, 31, 32, 31, 32,
	83, 448, 499, 152, 153, 154, -179, -274, -181, -172,
	-274, -318, 226, -318, -318, -318, -318, -318, 222, -318,
	220, 220, 220, -318, -477, 156, 141, -466, -163, 68,
	-285, 117, 121, 23, 249, 249, 249, -285, 289, -513,
	-514, 15, 119, -283, -514, -283, -283, -285, -515, 222,
	433, 42, 250, 249, -159, -160, -159, 427, 423, -372,
	428, 429, -287, -514, -286, -285, -285, -286, -285, -285,
	-285, 220, 223, 459, 309, 565, -513, -513, 30, 30,
	-401, -194, -401, 493, -266, -274, -401, -401, -401, -478,
	225, -508, -507, 446, -510, 448, 146, -349, 146, -349,
	-330, 251, 251, 141, 109, 23, -350, 109, 120, -349,
	-349, -350, -350, -215, 40, -273, 137, -274, 74, -215,
	40, -505, -504, -194, -159, -142, -141, 69, 69, 69,
	-401, -401, -401, -401, -401, -403, -401, -401, -401, -280,
	-172, -181, 226, -401, -401, -143, -144, 128, -300, -274,
	-143, -3, -115, -114, 103, 104, 106, 558, 342, 557,
	561, 555, -349, 40, -396, 369, 368, -390, -392, 68,
	-391, 68, -391, -391, -391, 68, 68, -393, 68, -393,
	-393, -390, -394, 68, -394, -395, 68, -395, -394, -274,
	-305, -306, -274, 38, -411, 47, -138, 68, 30, 68,
	-274, -412, 47, -138, 68, 30, -159, -109, -160, 140,
	83, 74, -80, 69, 141, -470, 89, 90, -473, 189,
	181, -274, -95, 74, -7, -8, -9, -10, -39, -70,
	-138, -439, -437, 68, 31, 396, 65, 15, -356, 220,
	459, 347, 247, 223, 326, -354, -337, -334, -332, -273,
	-330, -333, -332, -359, -256, 423, -110, 408, 301, -300,
	-300, -300, -300, -300, 88, 99, 324, 89, 90, -295,
	-314, 31, 297, 298, -296, -296, -296, -296, -296, -296,
	-296, -296, -296, -296, -296, -296, -303, -312, -385, 68,
	119, 117, 121, 118, 101, -298, -298, -296, -296, 69,
	141, -463, -462, 103, -300, -300, -274, -460, -461, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	338, 333, 339, 337, 329, 345, 340, 341, 174, 490,
	491, 484, 485, 486, 487, 488, 489, -305, -305, -300,
	-460, -305, -250, 32, 31, -306, -306, -306, 69, -300,
	-474, 322, 321, 323, -161, -274, -305, 69, 69, 69,
	83, -306, -306, -305, -296, -305, -461, -250, -250, -306,
	-306, -250, -250, -250, -250, 128, -250, -250, -250, -250,
	-250, -250, -250, -250, 69, 69, 69, -159, -108, -420,
	-419, -300, 40, 548, -109, -300, -156, -155, -300, -502,
	74, 449, 450, 150, 153, 152, 34, 68, 68, 140,
	-194, 99, -480, -274, -338, -335, -332, -274, -274, -328,
	-274, -274, -318, -318, -318, -194, -478, -465, 34, -162,
	-274, -240, 16, -298, -298, -332, 251, -513, -285, -285,
	-267, -266, -287, -282, -287, -287, -240, -514, -285, -285,
	-287, -283, -240, -274, 423, -240, -240, -372, -284, -274,
	-284, -318, -266, -267, -267, -194, -230, -231, 217, 214,
	213, -237, 215, 373, 366, 253, -319, 257, 78, 258,
	404, 259, 222, 261, 262, 263, 278, 280, 233, 264,
	265, 266, 397, 267, 145, 279, 268, 269, 270, 349,
	-216, 6, 312, 40, 254, -480, -480, 30, 30, -338,
	-274, -274, -151, -146, -150, -147, -152, -243, -245, -149,
	68, -194, -141, -274, 141, 447, 449, 450, -508, -350,
	-508, -350, 31, 396, -353, 396, 31, -328, -347, 443,
	445, -343, 74, 397, -333, -352, 65, 137, -419, -350,
	-350, -352, -352, 136, 141, -506, 448, 449, 209, -109,
	-196, -194, -480, -337, -328, -274, -401, -196, -274, -274,
	68, 35, -274, -274, -239, 141, -238, 15, -275, -274,
	34, 74, 140, -239, -116, -114, 105, -300, -6, 557,
	-300, -6, -6, -300, -6, -300, -399, 370, 83, 83,
	-258, 74, -258, 83, 83, 83, 69, 74, -341, 65,
	-413, -307, -458, 547, -166, 69, -161, -456, -457, -161,
	-165, -274, -413, -166, 69, -456, -109, -109, -274, 23,
	-80, -468, 140, 141, -162, -356, -336, -333, -358, 128,
	-274, -344, 141, 499, 572, 72, 224, -494, -493, 388,
	69, 141, -423, 225, 466, 74, 570, 205, 88, 324,
	89, 90, -385, -306, -303, -298, -298, -296, -296, -301,
	238, -301, 98, -300, -299, -462, 105, -300, 34, 141,
	66, 140, 69, 69, 15, 15, 69, -300, 69, 69,
	69, 69, 15, 15, -300, 69, 140, 69, 69, 69,
	69, 66, 69, 141, 69, 141, -306, -300, 69, 69,
	-300, -300, -300, -306, 69, -300, -300, -300, -300, -300,
	-300, -300, -300, -366, 418, -366, -366, 141, 69, 74,
	141, 22, 141, -153, 36, 37, 151, 154, 154, 153,
	-180, -182, -183, -184, -185, -186, 119, 142, 143, -173,
	-174, -175, -176, -200, -256, 176, 179, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 237, 171,
	172, 173, 174, 192, 157, 177, 158, 159, 160, 161,
	162, 163, 166, 167, 168, 169, 165, -274, -163, 35,
	-483, 374, -495, 141, 40, -493, 459, -134, 301, -321,
	66, -136, 15, -194, -194, -194, -207, 34, 15, -145,
	-195, -274, 68, 69, 141, -300, -329, 66, -274, -267,
	-240, -240, -194, -274, -240, -240, -285, -287, -287, -283,
	140, -266, -163, 141, -193, -197, 228, -190, -192, -256,
	-290, -191, 231, -452, 229, 227, 93, 232, 286, 94,
	222, -232, 222, 94, -274, 228, 232, 227, -233, 222,
	224, -271, 109, -271, -271, -265, 136, -271, -271, -271,
	-271, 260, 260, -271, -271, -271, -271, -271, -271, -271,
	-271, -271, -271, -271, 146, -271, -271, -271, -271, -271,
	-271, 68, 255, 256, -484, 374, 30, 332, 332, -495,
	30, -137, 326, 30, -246, -247, -248, -249, 54, 58,
	60, 55, 56, 57, 61, 30, 141, -272, -276, 34,
	-274, 74, -272, -141, -146, -151, -272, 68, -507, -509,
	451, 448, 454, -352, -352, 224, 68, 109, -352, -352,
	40, -273, -504, 455, 449, -171, 23, 141, 65, -196,
	-173, -181, -240, -144, -146, -274, 74, -274, 128, -240,
	106, -6, 104, -120, -119, -118, 107, 555, 561, 106,
	106, 106, 69, 69, 69, 141, 69, 69, 69, 141,
	69, 141, -426, 428, 39, 141, 68, 69, 141, 47,
	141, 109, 69, 141, 69, 47, -171, 140, 404, -274,
	-437, 69, -358, 141, 224, 140, 140, -334, 352, -273,
	-336, 20, 499, -256, 38, -262, -261, 74, 570, 69,
	-301, -301, 98, -298, -295, 69, 106, -300, 104, -198,
	-200, 368, 369, -199, -205, 137, 175, 237, 174, 173,
	171, 368, 369, -215, -274, -300, -300, 69, -300, -300,
	15, -274, -215, -296, -300, -158, 69, -365, -366, -365,
	69, 69, 69, 69, -365, 69, 69, 69, 69, 69,
	69, 69, 69, 68, -419, -426, -300, -300, -155, -154,
	43, 154, 360, 69, 141, -256, 69, 141, -200, 34,
	-486, 430, 376, 386, -271, -292, -291, 328, 41, -406,
	397, 382, 383, -335, 251, -274, -492, 81, 109, 65,
	316, 317, 318, 319, -316, -317, -315, -319, -480, 68,
	68, 68, -386, 306, -200, -194, -145, -274, 15, 141,
	-479, 140, -1, -274, -328, -285, -240, -514, -240, -285,
	-285, -287, -274, 34, -231, -235, 44, 46, -197, -200,
	-191, -451, -452, -318, -274, 94, -451, 94, 68, -274,
	-274, -274, 94, 94, -274, -234, -284, 83, 83, 83,
	-271, -271, 83, 74, 74, 74, -271, -271, 83, 74,
	-276, 74, -453, 153, 44, 45, 83, 83, 83, 83,
	40, 74, -220, 40, 271, 275, 272, 273, 274, 74,
	83, 40, 83, 40, 83, 40, -274, 68, -454, -455,
	74, -486, -271, 332, -349, 109, -292, -491, 301, -135,
	78, 31, -167, 217, 214, -480, -340, -339, -256, -150,
	-150, -150, -150, 54, 54, 54, 59, 54, 59, 54,
	-248, -340, -152, -163, -276, 69, -500, -499, -498, -496,
	62, 225, 63, -305, 448, 452, 453, -336, -288, 74,
	-343, 13, -194, -194, -405, 281, 282, 69, -242, 17,
	140, -242, 102, -6, -116, -118, -300, -6, -300, 557,
	342, 558, 74, 83, 83, -434, 414, 409, 411, 94,
	-307, -421, -420, 47, -138, -161, -413, -457, -419, -274,
	47, -138, -413, -274, 83, 15, -333, -328, 128, 128,
	-274, 353, -344, 74, 375, 74, 220, 571, 141, 109,
	-262, -295, -300, 69, -208, 162, 161, -208, 69, -391,
	-391, -390, -393, -390, -208, -208, 69, 69, 23, 69,
	69, 69, -300, 69, 69, 141, -410, 468, -365, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -309, -308, 243, -434, 44, 45, 74, 74, -184,
	-200, 218, -175, 40, -138, -487, 78, -481, 74, -274,
	-488, 78, 377, 139, 330, 40, 378, 379, 394, 325,
	83, 83, 384, -482, -274, -137, -490, 82, 109, 74,
	-194, -315, -265, 136, 262, 309, -187, -188, -189, -197,
	-190, -192, -187, -187, -387, 308, 20, 83, 127, -164,
	66, 140, -146, -195, -274, 128, 69, -240, -274, -240,
	-240, -285, -138, -256, -235, -212, -211, -209, 88, 99,
	40, 366, -210, 78, 136, 276, 279, 278, 254, 277,
	-229, -289, 65, 372, 314, 315, -319, 227, 93, 94,
	354, -290, -449, -274, -447, -449, -274, -447, -447, -318,
	-300, -274, -236, 314, 315, -215, -215, 74, 74, -196,
	69, 141, 109, -487, -481, 109, -350, 74, -488, -492,
	109, 74, 141, -167, -167, -240, 141, 109, -169, -168,
	65, 66, -170, 65, -168, 54, 54, -240, -498, -497,
	23, -452, -452, -452, 69, 69, -241, 18, 20, 128,
	-241, 106, 104, 106, 106, -274, 69, 69, -397, 549,
	-430, -432, 409, 20, 20, 13, 69, -413, -413, -328,
	-344, 397, -194, -261, 74, 571, -300, 69, -300, 69,
	74, -158, 20, -397, -177, -200, -293, 74, -485, 388,
	74, 74, 83, 40, 83, 139, 380, -407, -135, -489,
	78, 109, 570, 68, -271, -271, -271, -274, 69, 141,
	69, 69, -388, 242, 83, 127, 83, 127, 83, -272,
	-146, -274, -240, -479, 140, -240, -240, -209, 88, -296,
	74, -217, -273, 137, -218, 40, 275, 271, 109, 109,
	-219, 40, 255, 256, -221, 68, 286, 13, 178, 94,
	94, -194, 68, 68, 66, 296, 68, 68, -449, 69,
	69, -455, 74, -485, 74, -352, -490, 74, -480, -158,
	-339, -419, -300, 68, -300, 68, 54, 19, 17, -300,
	-306, 226, -6, 558, 342, -222, 550, 74, 20, 74,
	-428, 74, -340, -112, -424, -372, 69, 69, -365, -368,
	-367, -371, 415, 288, 421, -306, -222, 498, 20, 499,
	329, 40, 83, 40, 381, 74, 89, 90, -263, -264,
	74, -323, -325, -256, 68, -215, -217, 74, -213, -214,
	-237, -189, -111, -110, -213, -389, 145, 83, 127, 83,
	83, -240, -240, 74, 74, 83, 68, -414, 30, -324,
	68, -323, -323, -450, 316, 317, 318, 320, 319, -450,
	-323, -323, 68, -346, -345, 287, 99, -489, -159, -162,
	-448, -274, 227, 20, 20, -274, -274, -259, 551, 83,
	74, 411, -398, 552, -433, 414, -427, -425, 409, 410,
	411, 412, 69, -370, 101, 380, 384, -294, -297, 83,
	86, 170, 139, -259, -178, -274, 74, 375, 74, 329,
	571, 141, 109, 69, 141, -390, -300, -360, 243, 141,
	-237, -112, -360, -404, 153, 307, 499, 83, 127, 83,
	-158, 69, -300, -310, -271, -224, -223, 495, -323, 69,
	69, 69, 69, -323, 287, 69, 69, 141, 68, 20,
	74, -435, 225, -431, -432, 413, -425, 20, 411, 20,
	20, -369, -370, 384, -294, -297, 547, 419, 419, 419,
	34, 397, -264, 74, -326, -325, -153, 69, -361, 295,
	20, -237, -361, 307, 83, 127, 83, -159, 69, -274,
	-228, -226, -227, 65, 426, 284, 285, 69, -326, 66,
	-326, 66, -326, 66, -326, 66, 69, -274, 227, -260,
	-274, -428, -442, 68, 83, -430, -429, -431, 20, -428,
	20, -428, -428, 98, 420, 420, 420, 74, -327, 233,
	78, 499, 314, 315, -153, 20, -362, 288, 289, -363,
	-376, 291, 83, -345, -227, 65, -226, 65, 14, 13,
	-450, -450, -450, -450, -229, 69, 141, -446, 30, 69,
	-441, -440, -257, -436, -274, 414, 415, 74, -428, -369,
	-271, 74, 313, -256, 68, -374, 292, 68, -372, 68,
	-372, 94, 317, -225, 281, 282, 30, 153, -225, -326,
	-326, -326, -326, -274, -445, -444, -443, 69, 141, 140,
	83, -274, -359, -364, 293, 83, -296, 68, -296, 68,
	-373, 290, 68, 88, 40, 283, 141, 109, -440, -274,
	69, -378, 68, 20, 69, -359, 69, -359, 68, 109,
	-296, -444, 40, -300, 140, -379, -377, 243, -363, 69,
	69, 69, -359, 83, 69, -274, 69, 141, -274, -375,
	294, 69, -377, -380, 47, 83, -384, -381, 68, -237,
	245, 119, -384, -237, -383, -382, 293, 246, 68, 69,
	141, -274, 242, 68, -306, -382, -381, -306, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 777, 778, 779, 780, 781, 782, 0, 0,
	0, 0, 551, 552, 0, 521, 0, 0, 0, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	351, 352, 353, 354, 355, 356, 357, 0, 285, 281,
	206, 207, 208, 209, 210, 292, 293, 391, 0, 0,
	0, 0, 632, -2, 53, 274, 0, 265, 265, 783,
	784, 785, 786, 787, 788, 789, 790, -2, 564, 0,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 340, 341, 342, 336, 337, 339, 338,
	-2, 0, 564, 0, 0, 0, 652, 0, 0, 669,
	691, 23, 0, 7, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 0, 0, 19, 0, 19, 0,
	0, 0, 1110, 1111, 1112, 1113, -2, 1596, 1574, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 0, 258, 256, 1574,
	1596, 1656, 1689, 0, 795, 0, 610, 0, 615, 1064,
	610, 286, 553, 554, 652, 652, 519, 0, 322, 0,
	1587, 326, 0, 0, 0, 516, 316, 317, 318, 319,
	320, 321, 0, 0, 776, 0, 0, 312, 0, 280,
	1647, 0, 0, 0, 0, 0, 0, 150, 884, 152,
	886, 156, 163, 0, 0, 168, 169, 172, 173, 174,
	175, 176, 0, 180, 0, 182, 185, 0, 187, 188,
	0, 191, 192, 193, 0, 203, 204, 205, 887, 888,
	889, -2, 81, 793, 1508, 1399, 0, 1406, 1407, 1418,
	1429, 1188, 1189, 1190, 1191, 0, 0, 0, 0, 0,
	1198, 1199, 0, 1215, 1750, 0, 1205, 1206, 1207, 1208,
	1209, 90, 102, 103, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 0, 1372, 1175, 1110, 0, 1758,
	0, 1778, 1783, 1784, 1785, 1786, 1777, 0, 0, 1357,
	0, 1347, 0, 0, -2, -2, 0, 0, 1715, -2,
	1755, 1774, 1782, 1759, 1781, 1752, 1753, 1747, 1748, 1749,
	1751, 1760, 1762, 1773, 0, 1769, 1779, 1780, 0, 0,
	0, 0, 104, 105, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1363, -2, 1365,
	1366, 1368, -2, 1370, 1371, -2, 1374, 1375, 1376, -2,
	-2, 1379, 1380, 1381, 1382, 1383, 1384, 1387, -2, -2,
	-2, -2, 1359, 1360, 1361, 1362, 1351, 1352, 1353, 1354,
	1355, 1356, -2, -2, -2, 652, 727, 0, -2, 0,
	0, 0, 674, 677, 680, 683, 0, 54, 55, 275,
	276, 264, 266, 0, 270, 0, 263, 0, 0, 0,
	916, 916, 916, 916, 916, 916, 0, 916, 0, 0,
	0, 916, 891, 892, 893, 914, 915, 962, 569, 565,
	566, 567, 568, 640, 0, 642, 645, 496, 443, 0,
	0, 0, 496, 0, 457, 449, 0, 0, 0, 496,
	0, 0, 647, 647, 0, 499, 506, 496, 496, -2,
	496, 496, 496, 0, 0, 463, 464, 465, 449, 449,
	468, 469, 470, 481, 482, 507, 1532, 0, 0, 391,
	0, 391, 0, 391, 391, 391, 571, 1684, 1594, 1661,
	1647, 0, 0, 231, 1715, 236, 0, 1595, 1610, 0,
	0, 1628, 0, -2, 0, 302, 647, 0, 653, 0,
	652, 0, 0, 391, 391, 391, 391, 391, 961, 391,
	391, 391, 0, 0, 0, 391, 391, 0, 0, 692,
	693, 688, 689, 690, 694, 695, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 60, 59, 0, 1509, 1527,
	1463, 1464, 1465, 1514, 1467, 1518, 1518, 1518, 1518, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 0, 0,
	1507, 1487, 1516, 1516, 1516, 1514, 1511, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1521, 1521, 1524, 1524, 1521, 0, 1397, 0, 0,
	0, 0, 614, 0, 0, 647, -2, 0, 520, 323,
	1114, 0, 0, 327, 328, 0, 0, 343, 0, 346,
	331, 332, 333, 0, 130, 0, 314, 315, 0, 0,
	282, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 160, 157, 164, 167, 177, 184, 0, 196, 198,
	201, 158, 165, 170, 171, 178, 199, 159, 161, 162,
	166, 200, 202, 179, 183, 197, 181, 186, 189, 190,
	195, 0, 131, 0, 0, 0, 0, 0, 1405, 0,
	0, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1399, 0, 0,
	1194, 1195, 1196, 1197, 1200, 0, 1216, 0, 0, 0,
	1461, 0, 1397, 1397, 0, 1397, 1393, 0, 0, 0,
	0, 0, 0, 1397, 1333, 0, 0, 1335, 1348, 0,
	0, 1337, 1338, 0, 1341, 1342, 1397, 0, 1397, 1346,
	1329, 1330, 0, 1393, 1393, 0, 0, 1393, 1393, 1393,
	1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 0,
	0, 0, 647, 0, 0, 635, 0, 616, 0, 671,
	673, 0, 675, 676, 678, 679, 681, 682, 684, 685,
	56, 0, 0, 268, 0, 273, 0, 792, 0, 0,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	916, 916, 916, 0, 571, 570, 0, 641, 0, 0,
	700, 0, 0, 0, 449, 496, 496, 455, 456, 451,
	450, 502, 503, 499, 0, 499, 499, 700, 0, 475,
	476, 477, 496, 496, 483, 648, 484, 485, 499, 0,
	504, 505, 700, 0, 0, 700, 700, 0, 493, 494,
	495, 0, 0, 916, 0, 512, 451, 451, 1533, 1534,
	0, 925, 0, 0, 0, 515, 0, 0, 0, 0,
	572, 211, 214, 0, 217, 0, 1684, 0, 1684, 0,
	224, 0, 0, 0, 0, 0, 0, 254, 255, 0,
	0, 0, 0, 245, 248, 1058, 1059, 881, 882, 249,
	250, 294, 295, 0, 616, 670, 672, 666, 667, 668,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 547,
	0, 549, 0, 0, 0, 708, 702, 704, 771, 90,
	708, 8, 77, 74, 0, 19, 0, 0, 19, 19,
	0, 19, 259, 0, 1530, 1528, 1529, 1466, 1515, 0,
	1492, 0, 1493, 1494, 1495, 0, 0, 1488, 0, 1489,
	1490, 1491, 1482, 0, 1483, 1484, 0, 1485, 1486, 257,
	0, 1398, 796, 0, 589, 602, 584, 0, 591, 0,
	1065, 573, 602, 575, 0, 591, 616, 638, 616, 0,
	324, 0, 329, 0, 0, 345, 347, 348, 349, 334,
	335, 517, 310, 311, 303, 304, 305, 306, 307, 308,
	309, 313, 100, 0, 283, 284, 0, 0, 0, 144,
	145, 146, 147, 148, 149, 151, 135, 538, 540, 873,
	885, 0, 876, 0, 154, 194, 127, 0, 0, 1400,
	1401, 1402, 1403, 1404, 1408, 0, 1410, 1412, 1414, 1416,
	0, 1434, -2, -2, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1419, 1432, 1433, 0,
	0, 0, 0, 0, 0, 1430, 1430, 1425, 0, 1192,
	0, 1213, 1217, 0, 0, 0, 91, 1392, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 0, 0, 1399,
	0, 0, 0, 1394, 1395, 0, 0, 0, 1288, 0,
	0, 1294, 1295, 1296, 0, 597, 0, 1358, 1334, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 728, 0,
	606, 608, 609, 0, 636, 649, 654, 655, 658, 52,
	57, 277, 278, 0, 0, 272, 0, -2, 810, 0,
	645, 0, 0, 822, 389, 867, 0, 0, 0, 883,
	906, 912, 0, 0, 0, 940, 0, 643, 0, 0,
	740, 442, 0, 497, 498, 446, 1647, 451, 700, 700,
	458, 452, 459, 501, 460, 461, 462, 0, 700, 700,
	496, 499, 486, 500, 499, 489, 490, 0, 508, 513,
	509, 0, 511, 466, 467, 645, 359, 360, 0, 0,
	0, 365, 0, 1535, 1535, 1535, 0, 1535, 1535, 1535,
	1535, 0, 0, 1535, 1535, 1535, 1535, 1535, 1535, 1535,
	1535, 1535, 1535, 1535, 0, 1535, 1535, 1535, 1535, 1535,
	1044, 1535, 0, 926, 0, 386, 0, 0, 0, 389,
	0, 856, 713, 0, 714, 715, 711, 742, 766, 766,
	0, 766, 746, 1064, 0, 0, 222, 223, 212, 0,
	213, 0, 225, 226, 0, 228, 229, 230, 237, 1594,
	1661, 232, 234, 0, 0, 238, 251, 252, 253, 0,
	0, 243, 244, 0, 0, 297, 298, 300, 0, 664,
	535, 1062, 536, 537, 541, 0, 0, 544, 545, 546,
	810, 0, 861, 862, 700, 0, 709, 0, 705, 772,
	0, 774, 0, 700, 0, 75, 19, 0, 68, 65,
	0, 0, 0, 0, 0, 1510, 1462, 1531, 0, 0,
	0, 1512, 0, 0, 0, 0, 58, 618, 580, 0,
	583, 599, 0, 603, 0, 0, 595, 588, 592, 0,
	0, 612, 574, 0, 0, 579, 664, 639, 1115, 0,
	330, 344, 0, 0, 0, 0, 138, 870, 0, 139,
	143, 133, 0, 0, 0, 875, 0, 872, 877, 0,
	153, 0, 0, 128, 129, 931, 936, 0, 1409, 1411,
	1413, 1415, 1417, 0, 1420, 1430, 1430, 1426, 0, 1421,
	0, 1423, 0, 1400, 0, 1218, 0, 0, 0, 0,
	0, 0, 1278, 1279, 0, 0, 1283, 0, 1285, 1286,
	1287, 1289, 0, 0, 0, 1293, 0, 1332, 1350, 1336,
	1339, 0, 1343, 0, 1345, 0, 652, 0, 1255, 1255,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 1211, 1212, 0, 729, 618,
	0, 0, 0, 661, 659, 660, 279, 267, 269, 0,
	0, 0, 798, 799, 801, 0, 804, 805, 806, 0,
	811, 812, 814, 815, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1579, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 809, 0, 917,
	829, 1535, 393, 0, 0, 869, 0, 845, 0, 0,
	0, -2, 0, 0, 0, 0, 942, 0, 0, 0,
	558, 562, 23, 646, 0, 701, 444, 0, 445, 496,
	453, 454, 700, 1064, 478, 479, 700, 496, 496, 499,
	0, 510, 0, 925, 362, 369, 0, 1073, 1074, 0,
	0, 1080, 1089, 916, 1145, 0, 1089, 0, 0, 1091,
	1092, 363, 0, 0, 375, 0, 0, 0, 364, 0,
	0, 0, 1536, 0, 0, 1535, 1535, 0, 0, 0,
	0, 1535, 1535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 0, 0, 0,
	0, 0, 1050, 1051, 829, 1535, 0, 0, 0, 393,
	843, 852, 0, 0, 0, 0, 0, 0, 733, 0,
	0, 732, 0, 0, 0, 0, 0, 645, 767, 0,
	769, 770, 744, -2, 0, 713, 749, 1397, 215, 216,
	0, 0, 221, 239, 241, 0, 0, 0, 240, 242,
	246, 247, 296, 299, 301, 634, 0, 0, 0, 963,
	0, 550, 698, 703, 710, 773, 775, 91, 706, 698,
	0, 78, 19, 77, 69, 70, 0, 19, 0, 0,
	0, 0, 1520, 1519, 1505, 0, 1506, 1517, 1522, 0,
	1525, 0, 622, 0, 0, 602, 604, 0, 0, 602,
	0, 0, 611, 0, 0, 602, 637, 0, 0, 518,
	101, 350, 0, 0, 0, 0, 0, 539, 0, 874,
	135, 0, 0, 155, 0, 0, 934, 0, 936, 1396,
	1422, 1424, 0, 1431, 1427, 1193, 1201, 1214, 0, 0,
	1220, 1232, 1232, 0, 1223, 1518, 1518, 1226, 1514, 1516,
	1514, 1232, 1232, 0, 92, 0, 0, 1284, 0, 0,
	0, 598, 0, 0, 0, 1253, 1255, 1260, 1256, 1261,
	1255, 1255, 1255, 1255, 1266, 1255, 1255, 1255, 1255, 1255,
	1255, 1255, 1255, 1251, 607, 622, 650, 651, 656, 657,
	0, 271, 0, 0, 803, 0, 0, 0, 816, 0,
	833, 830, 831, 832, 0, 864, 394, 395, 396, 397,
	0, 0, 0, 868, 0, 856, 838, 0, 0, 0,
	907, 908, 909, 910, 911, -2, 920, 0, 0, 1066,
	1066, 1066, 950, 0, 941, 610, 0, -2, 0, 0,
	560, 0, 0, 741, 447, 700, 471, 0, 487, 700,
	700, 496, 514, 0, 361, 367, 370, 0, 369, -2,
	1079, 1104, 1090, 1104, 1146, 1104, 1104, 916, 0, 373,
	374, 376, 0, 378, 0, 366, 372, 1012, 1013, 1014,
	0, 0, 1017, 1018, 1019, 1020, 0, 0, 1023, 1024,
	1025, 1026, 1027, 1101, 1102, 1103, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1052, 1053, 1054, 1055, 1056, 1057, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 0, 0, 1047,
	0, 833, 0, 0, 0, 0, 864, 845, 0, 855,
	0, 857, 858, 0, 0, 581, 700, 289, 0, 736,
	730, 0, 719, 734, 735, 722, 0, 724, 0, 720,
	721, 700, 712, 743, 768, 745, 748, 750, 751, 757,
	0, 0, 0, 0, 218, 219, 220, 227, 0, 413,
	233, 665, 1063, 542, 543, 964, 965, 548, 696, 0,
	0, 696, 73, 76, 0, 71, 0, 0, 0, 0,
	63, 61, 1513, 0, 0, 624, 115, 0, 0, 0,
	600, 0, 605, 602, 587, 596, 586, 593, 594, 613,
	602, 578, 577, 1116, 325, 0, 871, 135, 140, 141,
	142, 136, 134, 878, 0, 880, 0, 932, 936, 0,
	0, 1428, 1219, 1202, 1221, 1233, 1234, 1222, 1203, 1224,
	1225, 1227, 1228, 1229, 1230, 1231, 1204, 1280, 0, 1282,
	1290, 1291, 0, 1340, 1344, 0, 0, 0, 1259, 1262,
	1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 652, 1252, 0, 624, 662, 663, 791, 794, 800,
	802, 0, 813, 0, 820, 821, 0, 0, 824, 825,
	835, 0, 0, 0, 399, 400, 0, 0, 0, 412,
	408, 409, 410, 390, 863, 852, 841, 0, 0, 851,
	0, 921, 1535, 1535, 1535, 0, 0, 1067, 1068, 1070,
	1071, 1072, 0, 0, 953, 0, 0, 944, 0, 766,
	0, 0, 700, 559, 562, 563, 644, 448, 700, 491,
	488, 700, 358, 371, 368, 1106, -2, 1119, 1121, 0,
	926, 1124, 1125, 0, 0, 0, 0, 0, 0, 1167,
	1133, 0, 0, 1137, 1138, 1139, 0, 0, 1446, 1447,
	0, 1144, 0, 1105, 0, 1093, 1105, 0, 0, 1104,
	0, 377, 379, 380, 381, 1015, 1016, 1021, 1022, 0,
	1046, 0, 0, 382, 0, 0, 0, 383, 388, 838,
	0, 853, 0, 859, 860, 652, 0, 0, 716, 737,
	0, 0, 717, 0, 718, 723, 725, 288, 752, 0,
	0, 754, 755, 756, 747, 235, 686, 0, 0, 707,
	687, 0, 19, 0, 0, 66, 1523, 1526, 626, 0,
	623, 116, 0, 0, 0, 0, 601, 585, 576, 137,
	132, 879, 118, 935, 937, 933, 0, 1292, 0, 1255,
	1254, 1248, 0, 626, 0, 819, 817, 834, 823, 0,
	865, 866, 0, 401, 402, 0, 405, 411, 836, 837,
	0, 0, 849, 0, 0, 0, 0, 913, -2, 0,
	0, -2, 956, 0, 951, 0, 943, 0, 946, 700,
	700, -2, 556, 561, 0, 472, 492, 1120, 1122, 1123,
	1126, 1127, 1060, 1061, 1128, 1172, 1173, 1174, 0, 0,
	1131, 1169, 1170, 1171, 1132, 0, 0, 0, 0, 1444,
	1445, 1165, 0, 0, 0, 0, 0, 0, 0, 1087,
	1045, 1048, 1049, 387, 384, 385, 841, 844, 582, 647,
	290, 291, 738, 0, 731, 761, 758, 0, 0, 697,
	699, 67, 72, 0, 0, 628, 0, 625, 0, 619,
	621, 126, 590, 88, 109, 0, 1281, 1331, 1258, 0,
	1249, 0, 1243, 1244, 1245, 1250, 628, 0, 0, 0,
	398, 403, 0, 406, 407, 842, 839, 840, 0, 847,
	0, 0, 902, 1514, 0, 922, 923, 924, 966, -2,
	1009, 1069, 928, 118, 966, 947, 0, 954, 0, 952,
	945, 652, 557, 1129, 1130, 0, 0, 1347, 1535, 1160,
	0, 0, 0, 1094, 1096, 1097, 1098, 1099, 1100, 1095,
	0, 0, 0, 1086, 1088, 1141, 0, 854, 287, 0,
	0, 762, 764, 759, 760, 62, 64, 79, 0, 627,
	117, 0, 80, 0, 106, 0, 119, 120, 0, 0,
	0, 0, 1257, 1246, 0, 0, 0, 0, 0, 1448,
	1449, 1450, 0, 617, 0, 818, 826, 0, 828, 404,
	846, 849, 0, 895, 0, 658, 0, 968, 0, 925,
	1011, 930, 968, 939, 0, 949, 0, 958, 0, 955,
	647, 1168, 0, 1136, 0, 1148, 1161, 0, 0, 895,
	895, 895, 895, 0, 1142, 739, 753, 0, 0, 0,
	89, 93, 0, 115, 112, 0, 121, 0, 0, 0,
	0, 0, 1235, 0, 0, 0, 1239, 1240, 1241, 1242,
	0, 827, 848, 850, 894, 903, 904, 658, 927, 0,
	1005, 1010, 929, 948, 957, 0, 960, 555, 1134, 1140,
	1147, 1149, 1150, 0, 1162, 1163, 1164, 1166, 1075, 0,
	1077, 0, 1081, 0, 1083, 0, 0, 763, 765, 0,
	630, 620, 82, 0, 0, 110, 111, 113, 0, 122,
	0, 124, 125, 0, 1236, 1237, 1238, 807, 896, 1535,
	0, 0, 900, 901, 905, 0, 993, 0, 0, 999,
	0, 1006, 959, 1135, 1151, 0, 1152, 0, 0, 0,
	895, 895, 895, 895, 1085, 629, 0, 938, 0, 94,
	0, 96, 98, 99, 1107, 107, 108, 114, 123, 1247,
	0, 898, 0, 969, 0, 971, 0, 0, 0, 0,
	0, 1003, 0, 1153, 1155, 1156, 0, 0, 1154, 1076,
	1078, 1082, 1084, 631, 83, 84, 0, 95, 0, 0,
	897, 899, 0, 973, 0, 994, 0, 0, 0, 0,
	0, 0, 0, 1157, 1159, 1158, 0, 0, 97, 1108,
	970, 967, 0, 1005, 995, 0, 997, 0, 0, 0,
	0, 85, 86, 87, 0, 0, 975, 0, 991, 996,
	998, 1000, 0, 1004, 1002, 1109, 974, 0, 987, 972,
	0, 1001, 976, -2, 0, 992, 977, -2, 0, 985,
	0, 0, 978, 986, 0, 981, 0, 0, 0, 980,
	0, -2, 988, 0, 0, 982, -2, 0, 990, 989,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 100, 3, 3, 3, 131, 123, 3,
	68, 69, 128, 126, 141, 127, 140, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 569, 568,
	110, 109, 111, 3, 572, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 570, 122, 571, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 101, 102, 103, 104,
	105, 106, 107, 108, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 124, 125, 130, 132, 135, 136,
	137, 138, 139, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:734
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:741
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:747
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:755
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:761
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:765
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:784
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:790
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:795
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:831
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:838
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:858
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:864
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:871
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:879
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:885
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:894
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:912
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:920
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:972
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:986
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:992
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:996
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1002
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1011
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1025
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1031
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1044
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1050
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1071
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1084
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1095
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1101
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1105
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1111
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1118
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1126
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1130
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1165
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1171
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1180
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1191
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1195
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1201
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1205
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1211
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1215
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1221
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1245
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1264
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1268
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1272
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1281
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1296
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1303
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1308
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1315
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1324
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1348
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1352
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1358
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1364
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1382
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1399
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1422
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1430
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1482
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1509
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1541
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1558
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1562
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1566
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1570
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1574
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1578
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1585
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1589
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1611
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1615
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1649
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1653
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1837
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1844
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1854
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1858
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1864
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1897
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1921
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1960
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1968
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1991
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1997
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2001
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2049
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2072
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2124
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2140
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2144
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2148
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2158
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2164
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2168
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2174
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2178
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2189
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2200
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2204
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2212
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2216
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2224
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2228
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2232
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2266
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2332
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2336
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2358
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2362
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2374
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2378
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2382
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2386
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2430
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2540
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2544
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2550
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2556
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2561
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2562
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2563
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2568
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2604
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2608
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2614
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2621
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2625
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2629
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2633
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2637
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2646
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2656
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2662
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2700
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2707
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2738
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2742
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2749
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2777
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2790
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2796
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2807
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2822
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2827
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2831
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2840
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2868
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2876
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2904
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2922
		{
			yyVAL.item = nil
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2927
		{
			yyVAL.item = nil
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2975
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2979
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2992
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2998
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3003
		{
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3007
		{
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3012
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3052
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3058
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3076
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3101
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3126
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3136
		{
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3138
		{
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3198
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3217
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3233
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3265
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3278
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3287
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3291
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3296
		{
			yyVAL.str = ""
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3300
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3306
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3319
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3323
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3354
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3358
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3364
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3370
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3374
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3378
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3384
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3388
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3439
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3443
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3467
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3483
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3499
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3532
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3537
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3544
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3560
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3573
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3584
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3588
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3594
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3599
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3606
		{
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3608
		{
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3611
		{
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3620
		{
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3624
		{
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3629
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3638
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3645
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3651
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3659
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3673
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3693
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3703
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3707
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3713
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3726
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3734
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3748
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3767
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3771
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3780
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3784
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3790
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3799
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3803
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3809
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3813
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3819
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3823
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3829
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3834
		{
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3845
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3849
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3856
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3865
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3871
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3875
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3881
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3885
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3894
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3914
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3921
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3939
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3958
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3964
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3975
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3988
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3992
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3997
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4001
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4008
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4013
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4020
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4026
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4042
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4046
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4052
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4059
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4068
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4072
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4078
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4090
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4099
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4105
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4109
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4113
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4122
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4128
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4134
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4138
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4144
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4149
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4153
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4162
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4166
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4170
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4179
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4191
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4195
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4209
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4213
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4223
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4243
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4263
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4280
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4288
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4304
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4320
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4336
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4365
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4379
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4383
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4387
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4400
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4413
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4422
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4437
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4441
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4447
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4451
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4456
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4460
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4465
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4473
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4487
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4505
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4511
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4548
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4552
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4562
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4566
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4570
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4574
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4580
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4590
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4594
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4600
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4610
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4616
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4622
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4626
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4630
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4640
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4646
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4650
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4656
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4660
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4666
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4680
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4705
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4718
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4736
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4740
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4746
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4756
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4760
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4764
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4769
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4773
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4777
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4781
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4790
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4794
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4798
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4802
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4807
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4811
		{
			yyVAL.str = yyDollar[1].str
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4815
		{
			yyVAL.str = yyDollar[2].str
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4821
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4831
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4835
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4839
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4843
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4849
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4883
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4893
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4899
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 794:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4905
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4915
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4920
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4933
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4937
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4949
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4954
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4966
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4985
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4990
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5007
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5033
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5039
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5045
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5056
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5068
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5084
		{
			yyVAL.str = yyDollar[1].str
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5088
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5094
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5101
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5107
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5121
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5128
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5135
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5158
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5170
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5182
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5194
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5200
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5207
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5215
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5229
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5243
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5258
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5262
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5267
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5271
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5278
		{
			yyVAL.str = yyDollar[3].str
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5283
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5287
		{
			yyVAL.str = yyDollar[2].str
		}
	case 854:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5293
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:      yyDollar[3].boolValUnion(),
				Name:             tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:        yyDollar[6].stageUrlUnion(),
				CredntialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:     yyDollar[8].stageStatusUnion(),
				Comment:          yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5307
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5321
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5327
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5333
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5339
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5348
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5357
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5366
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5377
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5491
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5495
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5501
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5511
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5515
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5521
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5531
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5535
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5539
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5548
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5554
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5561
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5567
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5576
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5592
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5596
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5602
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5620
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5624
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5629
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5647
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5670
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5692
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5696
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5700
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5704
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5708
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5714
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5718
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5724
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5729
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5734
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5738
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5742
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5746
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5750
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5756
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5771
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5781
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5785
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5794
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5800
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5804
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5810
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5814
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5818
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5823
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5827
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5833
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5854
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5867
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5874
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5884
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5892
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5903
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5907
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5912
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5916
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5923
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5934
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5947
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5961
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5969
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5983
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5990
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6005
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6031
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6038
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6049
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6056
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6063
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6070
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6103
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6117
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6124
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6135
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6148
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6154
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6158
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6164
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6173
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6187
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6193
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6197
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6203
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6210
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6219
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6223
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6232
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6237
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6241
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6246
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6250
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6260
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6264
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6275
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6283
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6299
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6310
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6329
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6339
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6343
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6361
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6367
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6371
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6375
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6381
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6385
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6389
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6393
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6401
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6405
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6434
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6438
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6446
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6450
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6458
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6462
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6466
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6474
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6478
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6482
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6486
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6490
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6494
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6498
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6502
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6506
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6510
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6514
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6518
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6524
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6528
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6534
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6540
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6544
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6550
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6554
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6562
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6566
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6570
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6584
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6588
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6597
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6602
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6608
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6615
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6619
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6625
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6629
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6633
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6639
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6643
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6649
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6658
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6667
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6690
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6715
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6729
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6735
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6744
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6753
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6762
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6771
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6781
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6789
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6795
		{
			yyVAL.str = ""
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6799
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6809
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6815
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6821
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6840
		{
			yyVAL.str = ""
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6844
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6860
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6864
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6870
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6888
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6892
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6896
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6905
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6911
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6915
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6921
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6925
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6937
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6941
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6946
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6950
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6962
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6966
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6970
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6978
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6982
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6995
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6999
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7003
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7013
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7017
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7022
		{
			yyVAL.str = ""
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7026
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7032
		{
			yyVAL.str = ""
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7036
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7042
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7054
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7061
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7068
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7075
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7082
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7091
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7097
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7103
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7107
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7124
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7131
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7135
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7148
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7153
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7157
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7173
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7183
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7187
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7191
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7195
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7199
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7203
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7227
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7233
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7237
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7273
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7277
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7282
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7290
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7299
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7308
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7312
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7316
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7320
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7324
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7330
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7359
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7368
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7374
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7378
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7384
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7393
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7405
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7422
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7439
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7452
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7477
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7506
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7521
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7553
		{
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7560
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7564
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7568
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7574
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7578
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7582
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7586
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7606
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7614
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7628
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7635
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7644
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7649
		{
			yyVAL.str = ","
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7653
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7665
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7691
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7702
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7721
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7730
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7740
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7750
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7760
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7770
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7780
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7790
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7800
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7810
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7830
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7840
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7850
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7867
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7875
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7909
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7917
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7926
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7934
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7942
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7950
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7958
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7969
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8002
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8024
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8060
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8072
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8084
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8095
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8103
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8110
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8129
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8147
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8157
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8165
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8176
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8185
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8194
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8202
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8212
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8220
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8234
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8244
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8263
		{
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8265
		{
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8306
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8317
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8321
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8325
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8331
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8340
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8346
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8350
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8357
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8361
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8365
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8373
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8377
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8381
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8385
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8391
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8395
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8399
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8403
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8407
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8411
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8415
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8419
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8423
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8427
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8435
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8439
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8443
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8447
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8451
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8455
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8459
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8463
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8467
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8471
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8481
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8487
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8491
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8498
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8502
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8506
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8512
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8516
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8520
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8524
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8528
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8532
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8536
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8542
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8546
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8550
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8554
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8560
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8573
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8578
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8584
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8588
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8601
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8606
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8610
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8614
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8618
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8622
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8626
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8640
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8644
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8651
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8662
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8667
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8673
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8697
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8709
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8722
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8735
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8748
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8761
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8787
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8800
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8826
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8839
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8854
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8881
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8923
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8959
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8995
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9012
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9024
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9044
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9064
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9100
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9113
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9139
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9176
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9200
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9236
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9260
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9301
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9309
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9318
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9328
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9351
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9356
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9362
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9369
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9373
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9378
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9382
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9388
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9394
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9401
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9408
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9417
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9424
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9431
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9444
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9448
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9454
		{
		}
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9456
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9466
		{
			yyVAL.str = ""
		}
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const LOWER_THAN_COMMA = 57354
const SELECT = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CONNECT = 57367
const MANAGE = 57368
const GRANTS = 57369
const OWNERSHIP = 57370
const REFERENCE = 57371
const LOWER_THAN_SET = 57372
const SET = 57373
const ALL = 57374
const DISTINCT = 57375
const DISTINCTROW = 57376
const AS = 57377
const EXISTS = 57378
const ASC = 57379
const DESC = 57380
const INTO = 57381
const DUPLICATE = 57382
const DEFAULT = 57383
const LOCK = 57384
const KEYS = 57385
const NULLS = 57386
const FIRST = 57387
const LAST = 57388
const AFTER = 57389
const INSTANT = 57390
const INPLACE = 57391
const COPY = 57392
const DISABLE = 57393
const ENABLE = 57394
const UNDEFINED = 57395
const MERGE = 57396
const TEMPTABLE = 57397
const DEFINER = 57398
const INVOKER = 57399
const SQL = 57400
const SECURITY = 57401
const CASCADED = 57402
const VALUES = 57403
const NEXT = 57404
const VALUE = 57405
const SHARE = 57406
const MODE = 57407
const SQL_NO_CACHE = 57408
const SQL_CACHE = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const LOWER_THAN_ON = 57420
const ON = 57421
const USING = 57422
const SUBQUERY_AS_EXPR = 57423
const LOWER_THAN_STRING = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const STRING = 57428
const VALUE_ARG = 57429
const LIST_ARG = 57430
const COMMENT = 57431
const COMMENT_KEYWORD = 57432
const QUOTE_ID = 57433
const STAGE = 57434
const CREDENTIALS = 57435
const STAGES = 57436
const INTEGRAL = 57437
const HEX = 57438
const BIT_LITERAL = 57439
const FLOAT = 57440
const HEXNUM = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const LOWER_THAN_CHARSET = 57445
const CHARSET = 57446
const UNIQUE = 57447
const KEY = 57448
const OR = 57449
const PIPE_CONCAT = 57450
const XOR = 57451
const AND = 57452
const NOT = 57453
const BETWEEN = 57454
const CASE = 57455
const WHEN = 57456
const THEN = 57457
const ELSE = 57458
const END = 57459
const ELSEIF = 57460
const LOWER_THAN_EQ = 57461
const LE = 57462
const GE = 57463
const NE = 57464
const NULL_SAFE_EQUAL = 57465
const IS = 57466
const LIKE = 57467
const REGEXP = 57468
const IN = 57469
const ASSIGNMENT = 57470
const ILIKE = 57471
const SHIFT_LEFT = 57472
const SHIFT_RIGHT = 57473
const DIV = 57474
const MOD = 57475
const UNARY = 57476
const COLLATE = 57477
const BINARY = 57478
const UNDERSCORE_BINARY = 57479
const INTERVAL = 57480
const OUT = 57481
const INOUT = 57482
const BEGIN = 57483
const START = 57484
const TRANSACTION = 57485
const COMMIT = 57486
const ROLLBACK = 57487
const WORK = 57488
const CONSISTENT = 57489
const SNAPSHOT = 57490
const CHAIN = 57491
const NO = 57492
const RELEASE = 57493
const PRIORITY = 57494
const QUICK = 57495
const BIT = 57496
const TINYINT = 57497
const SMALLINT = 57498
const MEDIUMINT = 57499
const INT = 57500
const INTEGER = 57501
const BIGINT = 57502
const INTNUM = 57503
const REAL = 57504
const DOUBLE = 57505
const FLOAT_TYPE = 57506
const DECIMAL = 57507
const NUMERIC = 57508
const DECIMAL_VALUE = 57509
const TIME = 57510
const TIMESTAMP = 57511
const DATETIME = 57512
const YEAR = 57513
const CHAR = 57514
const VARCHAR = 57515
const BOOL = 57516
const CHARACTER = 57517
const VARBINARY = 57518
const NCHAR = 57519
const TEXT = 57520
const TINYTEXT = 57521
const MEDIUMTEXT = 57522
const LONGTEXT = 57523
const BLOB = 57524
const TINYBLOB = 57525
const MEDIUMBLOB = 57526
const LONGBLOB = 57527
const JSON = 57528
const ENUM = 57529
const UUID = 57530
const VECF32 = 57531
const VECF64 = 57532
const GEOMETRY = 57533
const POINT = 57534
const LINESTRING = 57535
const POLYGON = 57536
const GEOMETRYCOLLECTION = 57537
const MULTIPOINT = 57538
const MULTILINESTRING = 57539
const MULTIPOLYGON = 57540
const INT1 = 57541
const INT2 = 57542
const INT3 = 57543
const INT4 = 57544
const INT8 = 57545
const S3OPTION = 57546
const STAGEOPTION = 57547
const SQL_SMALL_RESULT = 57548
const SQL_BIG_RESULT = 57549
const SQL_BUFFER_RESULT = 57550
const LOW_PRIORITY = 57551
const HIGH_PRIORITY = 57552
const DELAYED = 57553
const CREATE = 57554
const ALTER = 57555
const DROP = 57556
const RENAME = 57557
const ANALYZE = 57558
const ADD = 57559
const RETURNS = 57560
const SCHEMA = 57561
const TABLE = 57562
const SEQUENCE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const CONSTRAINT = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const FOREIGN = 57574
const KEY_BLOCK_SIZE = 57575
const SHOW = 57576
const DESCRIBE = 57577
const EXPLAIN = 57578
const DATE = 57579
const ESCAPE = 57580
const REPAIR = 57581
const OPTIMIZE = 57582
const TRUNCATE = 57583
const MAXVALUE = 57584
const PARTITION = 57585
const REORGANIZE = 57586
const LESS = 57587
const THAN = 57588
const PROCEDURE = 57589
const TRIGGER = 57590
const STATUS = 57591
const VARIABLES = 57592
const ROLE = 57593
const PROXY = 57594
const AVG_ROW_LENGTH = 57595
const STORAGE = 57596
const DISK = 57597
const MEMORY = 57598
const CHECKSUM = 57599
const COMPRESSION = 57600
const DATA = 57601
const DIRECTORY = 57602
const DELAY_KEY_WRITE = 57603
const ENCRYPTION = 57604
const ENGINE = 57605
const MAX_ROWS = 57606
const MIN_ROWS = 57607
const PACK_KEYS = 57608
const ROW_FORMAT = 57609
const STATS_AUTO_RECALC = 57610
const STATS_PERSISTENT = 57611
const STATS_SAMPLE_PAGES = 57612
const DYNAMIC = 57613
const COMPRESSED = 57614
const REDUNDANT = 57615
const COMPACT = 57616
const FIXED = 57617
const COLUMN_FORMAT = 57618
const AUTO_RANDOM = 57619
const ENGINE_ATTRIBUTE = 57620
const SECONDARY_ENGINE_ATTRIBUTE = 57621
const INSERT_METHOD = 57622
const RESTRICT = 57623
const CASCADE = 57624
const ACTION = 57625
const PARTIAL = 57626
const SIMPLE = 57627
const CHECK = 57628
const ENFORCED = 57629
const RANGE = 57630
const LIST = 57631
const ALGORITHM = 57632
const LINEAR = 57633
const PARTITIONS = 57634
const SUBPARTITION = 57635
const SUBPARTITIONS = 57636
const CLUSTER = 57637
const TYPE = 57638
const ANY = 57639
const SOME = 57640
const EXTERNAL = 57641
const LOCALFILE = 57642
const URL = 57643
const PREPARE = 57644
const DEALLOCATE = 57645
const RESET = 57646
const EXTENSION = 57647
const INCREMENT = 57648
const CYCLE = 57649
const MINVALUE = 57650
const PUBLICATION = 57651
const SUBSCRIPTIONS = 57652
const PUBLICATIONS = 57653
const PROPERTIES = 57654
const PARSER = 57655
const VISIBLE = 57656
const INVISIBLE = 57657
const BTREE = 57658
const HASH = 57659
const RTREE = 57660
const BSI = 57661
const IVFFLAT = 57662
const ZONEMAP = 57663
const LEADING = 57664
const BOTH = 57665
const TRAILING = 57666
const UNKNOWN = 57667
const LISTS = 57668
const OP_TYPE = 57669
const REINDEX = 57670
const EXPIRE = 57671
const ACCOUNT = 57672
const ACCOUNTS = 57673
const UNLOCK = 57674
const DAY = 57675
const NEVER = 57676
const PUMP = 57677
const MYSQL_COMPATIBILITY_MODE = 57678
const MODIFY = 57679
const CHANGE = 57680
const SECOND = 57681
const ASCII = 57682
const COALESCE = 57683
const COLLATION = 57684
const HOUR = 57685
const MICROSECOND = 57686
const MINUTE = 57687
const MONTH = 57688
const QUARTER = 57689
const REPEAT = 57690
const REVERSE = 57691
const ROW_COUNT = 57692
const WEEK = 57693
const REVOKE = 57694
const FUNCTION = 57695
const PRIVILEGES = 57696
const TABLESPACE = 57697
const EXECUTE = 57698
const SUPER = 57699
const GRANT = 57700
const OPTION = 57701
const REFERENCES = 57702
const REPLICATION = 57703
const SLAVE = 57704
const CLIENT = 57705
const USAGE = 57706
const RELOAD = 57707
const FILE = 57708
const TEMPORARY = 57709
const ROUTINE = 57710
const EVENT = 57711
const SHUTDOWN = 57712
const NULLX = 57713
const AUTO_INCREMENT = 57714
const APPROXNUM = 57715
const SIGNED = 57716
const UNSIGNED = 57717
const ZEROFILL = 57718
const ENGINES = 57719
const LOW_CARDINALITY = 57720
const AUTOEXTEND_SIZE = 57721
const ADMIN_NAME = 57722
const RANDOM = 57723
const SUSPEND = 57724
const ATTRIBUTE = 57725
const HISTORY = 57726
const REUSE = 57727
const CURRENT = 57728
const OPTIONAL = 57729
const FAILED_LOGIN_ATTEMPTS = 57730
const PASSWORD_LOCK_TIME = 57731
const UNBOUNDED = 57732
const SECONDARY = 57733
const RESTRICTED = 57734
const USER = 57735
const IDENTIFIED = 57736
const CIPHER = 57737
const ISSUER = 57738
const X509 = 57739
const SUBJECT = 57740
const SAN = 57741
const REQUIRE = 57742
const SSL = 57743
const NONE = 57744
const PASSWORD = 57745
const SHARED = 57746
const EXCLUSIVE = 57747
const MAX_QUERIES_PER_HOUR = 57748
const MAX_UPDATES_PER_HOUR = 57749
const MAX_CONNECTIONS_PER_HOUR = 57750
const MAX_USER_CONNECTIONS = 57751
const FORMAT = 57752
const VERBOSE = 57753
const CONNECTION = 57754
const TRIGGERS = 57755
const PROFILES = 57756
const LOAD = 57757
const INLINE = 57758
const INFILE = 57759
const TERMINATED = 57760
const OPTIONALLY = 57761
const ENCLOSED = 57762
const ESCAPED = 57763
const STARTING = 57764
const LINES = 57765
const ROWS = 57766
const IMPORT = 57767
const DISCARD = 57768
const JSONTYPE = 57769
const MODUMP = 57770
const OVER = 57771
const PRECEDING = 57772
const FOLLOWING = 57773
const GROUPS = 57774
const DATABASES = 57775
const TABLES = 57776
const SEQUENCES = 57777
const EXTENDED = 57778
const FULL = 57779
const PROCESSLIST = 57780
const FIELDS = 57781
const COLUMNS = 57782
const OPEN = 57783
const ERRORS = 57784
const WARNINGS = 57785
const INDEXES = 57786
const SCHEMAS = 57787
const NODE = 57788
const LOCKS = 57789
const ROLES = 57790
const TABLE_NUMBER = 57791
const COLUMN_NUMBER = 57792
const TABLE_VALUES = 57793
const TABLE_SIZE = 57794
const NAMES = 57795
const GLOBAL = 57796
const PERSIST = 57797
const SESSION = 57798
const ISOLATION = 57799
const LEVEL = 57800
const READ = 57801
const WRITE = 57802
const ONLY = 57803
const REPEATABLE = 57804
const COMMITTED = 57805
const UNCOMMITTED = 57806
const SERIALIZABLE = 57807
const LOCAL = 57808
const EVENTS = 57809
const PLUGINS = 57810
const CURRENT_TIMESTAMP = 57811
const DATABASE = 57812
const CURRENT_TIME = 57813
const LOCALTIME = 57814
const LOCALTIMESTAMP = 57815
const UTC_DATE = 57816
const UTC_TIME = 57817
const UTC_TIMESTAMP = 57818
const REPLACE = 57819
const CONVERT = 57820
const SEPARATOR = 57821
const TIMESTAMPDIFF = 57822
const CURRENT_DATE = 57823
const CURRENT_USER = 57824
const CURRENT_ROLE = 57825
const SECOND_MICROSECOND = 57826
const MINUTE_MICROSECOND = 57827
const MINUTE_SECOND = 57828
const HOUR_MICROSECOND = 57829
const HOUR_SECOND = 57830
const HOUR_MINUTE = 57831
const DAY_MICROSECOND = 57832
const DAY_SECOND = 57833
const DAY_MINUTE = 57834
const DAY_HOUR = 57835
const YEAR_MONTH = 57836
const SQL_TSI_HOUR = 57837
const SQL_TSI_DAY = 57838
const SQL_TSI_WEEK = 57839
const SQL_TSI_MONTH = 57840
const SQL_TSI_QUARTER = 57841
const SQL_TSI_YEAR = 57842
const SQL_TSI_SECOND = 57843
const SQL_TSI_MINUTE = 57844
const RECURSIVE = 57845
const CONFIG = 57846
const DRAINER = 57847
const SOURCE = 57848
const STREAM = 57849
const HEADERS = 57850
const CONNECTOR = 57851
const CONNECTORS = 57852
const DAEMON = 57853
const PAUSE = 57854
const CANCEL = 57855
const TASK = 57856
const RESUME = 57857
const MATCH = 57858
const AGAINST = 57859
const BOOLEAN = 57860
const LANGUAGE = 57861
const WITH = 57862
const QUERY = 57863
const EXPANSION = 57864
const WITHOUT = 57865
const VALIDATION = 57866
const ADDDATE = 57867
const BIT_AND = 57868
const BIT_OR = 57869
const BIT_XOR = 57870
const CAST = 57871
const COUNT = 57872
const APPROX_COUNT = 57873
const APPROX_COUNT_DISTINCT = 57874
const APPROX_PERCENTILE = 57875
const CURDATE = 57876
const CURTIME = 57877
const DATE_ADD = 57878
const DATE_SUB = 57879
const EXTRACT = 57880
const GROUP_CONCAT = 57881
const MAX = 57882
const MID = 57883
const MIN = 57884
const NOW = 57885
const POSITION = 57886
const SESSION_USER = 57887
const STD = 57888
const STDDEV = 57889
const MEDIAN = 57890
const CLUSTER_CENTERS = 57891
const SPHERICAL_KMEANS = 57892
const STDDEV_POP = 57893
const STDDEV_SAMP = 57894
const SUBDATE = 57895
const SUBSTR = 57896
const SUBSTRING = 57897
const SUM = 57898
const SYSDATE = 57899
const SYSTEM_USER = 57900
const TRANSLATE = 57901
const TRIM = 57902
const VARIANCE = 57903
const VAR_POP = 57904
const VAR_SAMP = 57905
const AVG = 57906
const RANK = 57907
const ROW_NUMBER = 57908
const DENSE_RANK = 57909
const BIT_CAST = 57910
const NEXTVAL = 57911
const SETVAL = 57912
const CURRVAL = 57913
const LASTVAL = 57914
const ARROW = 57915
const ROW = 57916
const OUTFILE = 57917
const HEADER = 57918
const MAX_FILE_SIZE = 57919
const FORCE_QUOTE = 57920
const PARALLEL = 57921
const UNUSED = 57922
const BINDINGS = 57923
const DO = 57924
const DECLARE = 57925
const LOOP = 57926
const WHILE = 57927
const LEAVE = 57928
const ITERATE = 57929
const UNTIL = 57930
const CALL = 57931
const PREV = 57932
const SLIDING = 57933
const FILL = 57934
const SPBEGIN = 57935
const BACKEND = 57936
const SERVERS = 57937
const HANDLER = 57938
const PERCENT = 57939
const SAMPLE = 57940
const KILL = 57941
const BACKUP = 57942
const FILESYSTEM = 57943
const QUERY_RESULT = 57944

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"LOWER_THAN_COMMA",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"OP_TYPE",
	"REINDEX",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10899

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 700,
	22, 700,
	-2, 693,
	-1, 137,
	237, 1082,
	239, 990,
	-2, 1036,
	-1, 161,
	43, 529,
	239, 529,
	266, 536,
	267, 536,
	461, 529,
	-2, 562,
	-1, 200,
	623, 1818,
	-2, 445,
	-1, 554,
	318, 133,
	433, 133,
	434, 133,
	-2, 1723,
	-1, 619,
	82, 1514,
	-2, 1873,
	-1, 620,
	82, 1532,
	-2, 1844,
	-1, 624,
	82, 1533,
	-2, 1872,
	-1, 652,
	82, 1444,
	-2, 1945,
	-1, 653,
	82, 1445,
	-2, 1944,
	-1, 654,
	82, 1446,
	-2, 1934,
	-1, 655,
	82, 1906,
	-2, 1927,
	-1, 656,
	82, 1907,
	-2, 1928,
	-1, 657,
	82, 1908,
	-2, 1936,
	-1, 658,
	82, 1909,
	-2, 1916,
	-1, 659,
	82, 1910,
	-2, 1925,
	-1, 660,
	82, 1911,
	-2, 1937,
	-1, 661,
	82, 1912,
	-2, 1938,
	-1, 662,
	82, 1913,
	-2, 1943,
	-1, 663,
	82, 1914,
	-2, 1948,
	-1, 664,
	82, 1915,
	-2, 1949,
	-1, 666,
	82, 1511,
	-2, 1708,
	-1, 670,
	82, 1516,
	-2, 1724,
	-1, 673,
	82, 1520,
	-2, 1742,
	-1, 677,
	82, 1524,
	-2, 1787,
	-1, 678,
	82, 1525,
	-2, 1868,
	-1, 686,
	82, 1535,
	-2, 1853,
	-1, 687,
	82, 1536,
	-2, 1898,
	-1, 688,
	82, 1537,
	-2, 1863,
	-1, 689,
	82, 1538,
	-2, 1888,
	-1, 700,
	82, 1422,
	-2, 1939,
	-1, 701,
	82, 1423,
	-2, 1940,
	-1, 702,
	82, 1424,
	-2, 1941,
	-1, 787,
	456, 562,
	457, 562,
	-2, 530,
	-1, 833,
	123, 1708,
	134, 1708,
	154, 1708,
	-2, 1682,
	-1, 942,
	22, 727,
	-2, 676,
	-1, 1043,
	11, 700,
	22, 700,
	-2, 1309,
	-1, 1118,
	22, 727,
	-2, 676,
	-1, 1429,
	82, 1582,
	-2, 1870,
	-1, 1430,
	82, 1583,
	-2, 1871,
	-1, 1572,
	83, 876,
	-2, 882,
	-1, 1980,
	106, 1028,
	150, 1028,
	189, 1028,
	192, 1028,
	279, 1028,
	-2, 1021,
	-1, 2125,
	11, 700,
	22, 700,
	-2, 820,
	-1, 2157,
	83, 1668,
	155, 1668,
	-2, 1855,
	-1, 2158,
	83, 1668,
	155, 1668,
	-2, 1854,
	-1, 2159,
	83, 1644,
	155, 1644,
	-2, 1841,
	-1, 2160,
	83, 1645,
	155, 1645,
	-2, 1846,
	-1, 2161,
	83, 1646,
	155, 1646,
	-2, 1775,
	-1, 2162,
	83, 1647,
	155, 1647,
	-2, 1769,
	-1, 2163,
	83, 1648,
	155, 1648,
	-2, 1698,
	-1, 2164,
	83, 1649,
	155, 1649,
	-2, 1843,
	-1, 2165,
	83, 1650,
	155, 1650,
	-2, 1773,
	-1, 2166,
	83, 1651,
	155, 1651,
	-2, 1768,
	-1, 2167,
	83, 1652,
	155, 1652,
	-2, 1756,
	-1, 2168,
	83, 1668,
	155, 1668,
	-2, 1757,
	-1, 2169,
	83, 1668,
	155, 1668,
	-2, 1758,
	-1, 2171,
	83, 1657,
	155, 1657,
	-2, 1888,
	-1, 2172,
	83, 1635,
	155, 1635,
	-2, 1873,
	-1, 2173,
	83, 1666,
	155, 1666,
	-2, 1844,
	-1, 2174,
	83, 1666,
	155, 1666,
	-2, 1872,
	-1, 2175,
	83, 1666,
	155, 1666,
	-2, 1725,
	-1, 2176,
	83, 1664,
	155, 1664,
	-2, 1863,
	-1, 2177,
	83, 1661,
	155, 1661,
	-2, 1747,
	-1, 2178,
	82, 1616,
	83, 1616,
	155, 1616,
	391, 1616,
	392, 1616,
	393, 1616,
	-2, 1697,
	-1, 2179,
	82, 1617,
	83, 1617,
	155, 1617,
	391, 1617,
	392, 1617,
	393, 1617,
	-2, 1699,
	-1, 2180,
	82, 1620,
	83, 1620,
	155, 1620,
	391, 1620,
	392, 1620,
	393, 1620,
	-2, 1845,
	-1, 2181,
	82, 1622,
	83, 1622,
	155, 1622,
	391, 1622,
	392, 1622,
	393, 1622,
	-2, 1827,
	-1, 2182,
	82, 1624,
	83, 1624,
	155, 1624,
	391, 1624,
	392, 1624,
	393, 1624,
	-2, 1774,
	-1, 2183,
	82, 1626,
	83, 1626,
	155, 1626,
	391, 1626,
	392, 1626,
	393, 1626,
	-2, 1752,
	-1, 2184,
	82, 1627,
	83, 1627,
	155, 1627,
	391, 1627,
	392, 1627,
	393, 1627,
	-2, 1753,
	-1, 2185,
	82, 1629,
	83, 1629,
	155, 1629,
	391, 1629,
	392, 1629,
	393, 1629,
	-2, 1696,
	-1, 2186,
	83, 1671,
	155, 1671,
	391, 1671,
	392, 1671,
	393, 1671,
	-2, 1730,
	-1, 2187,
	83, 1671,
	155, 1671,
	391, 1671,
	392, 1671,
	393, 1671,
	-2, 1743,
	-1, 2188,
	83, 1674,
	155, 1674,
	391, 1674,
	392, 1674,
	393, 1674,
	-2, 1726,
	-1, 2189,
	83, 1674,
	155, 1674,
	391, 1674,
	392, 1674,
	393, 1674,
	-2, 1790,
	-1, 2190,
	83, 1671,
	155, 1671,
	391, 1671,
	392, 1671,
	393, 1671,
	-2, 1811,
	-1, 2376,
	106, 1028,
	150, 1028,
	189, 1028,
	192, 1028,
	279, 1028,
	-2, 1022,
	-1, 2390,
	80, 621,
	155, 621,
	-2, 1195,
	-1, 2757,
	192, 1028,
	303, 1277,
	-2, 1249,
	-1, 2910,
	106, 1028,
	150, 1028,
	189, 1028,
	192, 1028,
	-2, 1138,
	-1, 2912,
	106, 1028,
	150, 1028,
	189, 1028,
	192, 1028,
	-2, 1138,
	-1, 2924,
	80, 621,
	155, 621,
	-2, 1196,
	-1, 2935,
	192, 1028,
	303, 1277,
	-2, 1250,
	-1, 3067,
	106, 1028,
	150, 1028,
	189, 1028,
	192, 1028,
	-2, 1139,
	-1, 3084,
	83, 1100,
	155, 1100,
	-2, 1028,
	-1, 3206,
	83, 1100,
	155, 1100,
	-2, 1028,
	-1, 3356,
	83, 1104,
	155, 1104,
	-2, 1028,
	-1, 3408,
	83, 1105,
	155, 1105,
	-2, 1028,
}

const yyPrivate = 57344

const yyLast = 42504

var yyAct = [...]int{
	586, 1409, 3346, 565, 3424, 588, 191, 563, 2413, 3381,
	1345, 3363, 3448, 3261, 1655, 3364, 3206, 2776, 3284, 3019,
	573, 3246, 3112, 3013, 2949, 3237, 3191, 567, 2843, 1076,
	3055, 3205, 3265, 3150, 3052, 1259, 2844, 3139, 616, 3183,
	467, 3054, 3017, 832, 1198, 3247, 1335, 3008, 3249, 1605,
	477, 943, 482, 482, 2897, 3059, 2024, 2240, 482, 498,
	507, 2936, 2752, 507, 3066, 3074, 2393, 1405, 1412, 3036,
	2725, 2155, 2688, 2520, 2913, 2841, 1742, 2519, 2714, 1745,
	2886, 3069, 2502, 2437, 2772, 2761, 2512, 2518, 176, 2754,
	2915, 2119, 2581, 1710, 1848, 2153, 1718, 1465, 2829, 2541,
	2027, 2809, 2515, 2366, 512, 2698, 2695, 2691, 1813, 1991,
	936, 2693, 2690, 2103, 556, 518, 2377, 1252, 36, 2624,
	1760, 2732, 1958, 1948, 1833, 557, 2686, 55, 1607, 1844,
	2760, 2554, 2689, 562, 2223, 1814, 2564, 2206, 1822, 1821,
	763, 1787, 1331, 1339, 1552, 1843, 1738, 1949, 481, 481,
	1713, 2120, 2416, 1711, 489, 1171, 2439, 2108, 2350, 1635,
	2418, 2025, 2355, 1646, 2385, 467, 826, 187, 8, 6,
	1336, 186, 7, 564, 1990, 1581, 2151, 504, 1344, 2275,
	888, 1878, 1403, 1845, 1298, 1149, 1971, 476, 1238, 566,
	555, 191, 1459, 191, 1268, 879, 880, 1855, 954, 116,
	1617, 1616, 35, 1394, 1820, 795, 466, 1817, 1324, 26,
	1803, 2307, 1443, 557, 15, 574, 13, 1305, 14, 1402,
	2020, 1777, 825, 1237, 2127, 1235, 491, 32, 1580, 2306,
	1291, 1361, 1466, 1187, 494, 704, 23, 1173, 1199, 762,
	1207, 520, 16, 10, 177, 521, 1297, 506, 173, 167,
	760, 745, 739, 1116, 1077, 3177, 1852, 876, 1183, 1862,
	2339, 2900, 2263, 2836, 2212, 2339, 782, 2339, 503, 2210,
	1408, 1565, 2209, 499, 2207, 501, 1312, 502, 1308, 875,
	871, 877, 872, 175, 1135, 478, 500, 872, 2671, 2668,
	2673, 872, 2670, 2939, 3432, 1220, 841, 2332, 2330, 1559,
	1131, 3006, 1310, 2577, 2575, 487, 1012, 1013, 1014, 1011,
	510, 1012, 1013, 1014, 1011, 1792, 3146, 3140, 3009, 2842,
	1830, 1071, 3251, 1816, 705, 2650, 2064, 174, 174, 174,
	3337, 2951, 174, 716, 3041, 975, 174, 2334, 2249, 1208,
	3037, 3198, 174, 8, 2942, 870, 1359, 7, 174, 51,
	163, 138, 174, 2257, 2937, 174, 51, 163, 138, 2959,
	2960, 1136, 2914, 1982, 3167, 2938, 1849, 3295, 838, 1278,
	1352, 840, 1277, 1276, 844, 2596, 1356, 2589, 842, 843,
	174, 51, 163, 138, 115, 3199, 1145, 517, 516, 2648,
	115, 1163, 1975, 3169, 1860, 2145, 168, 1358, 168, 558,
	1349, 168, 2943, 706, 1009, 168, 695, 707, 694, 696,
	697, 168, 698, 699, 2547, 1216, 2146, 168, 1217, 814,
	1755, 1351, 1137, 1379, 168, 983, 1395, 2133, 985, 1399,
	2132, 1195, 990, 2134, 1722, 991, 2548, 2549, 1723, 1724,
	1566, 1567, 717, 1239, 2352, 1241, 1203, 3403, 2224, 168,
	1202, 1205, 1206, 1398, 2353, 3029, 986, 1205, 1206, 804,
	1631, 2672, 2669, 993, 3401, 1411, 3367, 3368, 1002, 1007,
	835, 834, 3254, 3328, 3253, 3327, 3252, 3326, 3254, 3253,
	3252, 482, 1937, 3389, 3148, 3330, 3385, 3386, 3334, 2845,
	2582, 482, 947, 3239, 3239, 2583, 2958, 2584, 2028, 3151,
	3152, 3153, 3154, 2351, 1219, 3242, 3143, 2845, 1415, 507,
	507, 2244, 482, 957, 948, 1864, 1144, 3258, 2858, 2887,
	2358, 2709, 1739, 2947, 1729, 1390, 995, 1856, 2457, 996,
	3046, 2894, 2699, 3171, 2614, 979, 1400, 882, 1311, 1309,
	751, 1800, 988, 2335, 2097, 2944, 2948, 2946, 2945, 2342,
	1733, 1969, 1318, 1317, 1005, 1006, 957, 998, 2961, 1397,
	981, 2707, 810, 808, 137, 809, 172, 3332, 2612, 3339,
	3340, 836, 984, 987, 1004, 837, 2254, 938, 2062, 1045,
	978, 3335, 3336, 2953, 2954, 3007, 161, 945, 873, 874,
	2576, 3028, 2104, 878, 940, 2506, 2100, 2976, 980, 3030,
	2099, 3174, 2775, 551, 3163, 989, 553, 3164, 966, 3043,
	2723, 552, 2773, 2774, 504, 504, 2704, 2705, 947, 3366,
	3405, 3396, 3158, 1414, 1413, 841, 2703, 1193, 2733, 2961,
	3203, 970, 2706, 3195, 2973, 3280, 994, 1421, 1424, 1425,
	2386, 2940, 3275, 509, 946, 1080, 1861, 2952, 1422, 508,
	2966, 815, 2511, 3438, 2333, 2043, 1867, 1869, 1870, 1977,
	3166, 2023, 2046, 3266, 3486, 1218, 1229, 3285, 3400, 1146,
	1753, 1754, 811, 3445, 999, 982, 1396, 3348, 1000, 1001,
	1182, 1134, 992, 3113, 3114, 3115, 3118, 3117, 3116, 3344,
	3345, 3165, 3348, 2977, 3257, 2778, 841, 838, 3103, 997,
	840, 753, 3472, 754, 2148, 503, 503, 959, 958, 2074,
	499, 499, 501, 501, 502, 502, 2486, 1850, 2073, 2045,
	1850, 805, 3176, 500, 500, 2364, 1500, 2861, 1142, 477,
	950, 951, 2618, 3092, 2338, 813, 3020, 961, 2701, 3451,
	3098, 1248, 942, 1047, 1048, 1049, 1050, 1247, 1850, 968,
	959, 958, 2094, 2095, 1180, 1114, 963, 964, 1119, 967,
	1179, 2044, 763, 872, 872, 2721, 1197, 1196, 838, 872,
	1081, 840, 1178, 872, 505, 3338, 3286, 2957, 872, 3184,
	872, 3197, 2370, 2372, 2373, 2374, 2371, 3204, 3210, 2753,
	3196, 1051, 1863, 2056, 1851, 952, 2208, 3358, 937, 505,
	2667, 1313, 1204, 2065, 807, 2916, 1879, 806, 2030, 2023,
	2040, 482, 812, 1231, 3004, 3163, 3170, 1150, 3164, 467,
	467, 1205, 1206, 2543, 2545, 3236, 1201, 2357, 467, 467,
	705, 2710, 1263, 1263, 2848, 482, 52, 516, 1205, 1206,
	2700, 1236, 2331, 3172, 2615, 2956, 3406, 2559, 2560, 1194,
	3042, 139, 139, 139, 1740, 975, 139, 507, 1292, 477,
	139, 52, 1301, 1301, 169, 170, 139, 171, 1265, 2258,
	2769, 3166, 139, 191, 2250, 3452, 139, 1423, 2137, 139,
	1089, 1090, 467, 2361, 2362, 1147, 2777, 2060, 1270, 1853,
	2033, 941, 3331, 3047, 2722, 837, 1868, 1155, 2360, 1261,
	1261, 2617, 3165, 969, 139, 1161, 2458, 1227, 2459, 2460,
	3159, 1730, 1391, 1160, 3160, 1159, 1143, 3209, 1151, 1152,
	1153, 1154, 1158, 1156, 2773, 2774, 511, 3105, 2880, 1162,
	2455, 1269, 1168, 1343, 1319, 1346, 2702, 1732, 2341, 2770,
	1354, 974, 757, 758, 759, 2029, 1952, 1257, 1258, 1140,
	2031, 1569, 752, 1865, 1866, 1570, 1120, 1954, 1953, 1015,
	1118, 1377, 1951, 2487, 2489, 2490, 2491, 2488, 1044, 2626,
	2625, 3099, 3100, 1568, 3357, 1263, 1053, 1263, 947, 719,
	3094, 2086, 1148, 755, 3093, 1243, 1245, 805, 720, 2544,
	2030, 2033, 3075, 1360, 1255, 1256, 1372, 1373, 2477, 2478,
	1060, 1138, 1139, 1176, 2032, 1608, 3449, 3450, 1181, 1189,
	1190, 2391, 1170, 1230, 1911, 1191, 2039, 1910, 3454, 3324,
	2037, 2034, 2117, 1210, 1211, 3487, 1213, 1214, 1215, 1010,
	2738, 2059, 2806, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 975, 1293, 1392, 1314, 1454,
	1455, 1209, 1333, 1334, 1212, 1350, 1221, 1222, 1464, 1357,
	2226, 2849, 3479, 3478, 841, 1608, 1246, 1973, 841, 2802,
	807, 504, 1513, 806, 1341, 944, 3460, 1503, 1504, 1505,
	2883, 1386, 863, 868, 869, 723, 1271, 1780, 1376, 1010,
	1519, 487, 3447, 1520, 1522, 1961, 1375, 1858, 1322, 1338,
	1325, 1326, 1342, 1284, 1290, 2392, 1407, 1530, 1531, 1302,
	2860, 1327, 1328, 1184, 1188, 1188, 1188, 1303, 1962, 1963,
	2476, 3159, 2034, 973, 1549, 3248, 3426, 2029, 2023, 2028,
	1410, 2026, 2031, 947, 1858, 1858, 722, 1184, 1184, 2771,
	725, 724, 2118, 2018, 3410, 1292, 2118, 816, 1858, 2392,
	1578, 1426, 1263, 1583, 1584, 1388, 1586, 1587, 482, 1550,
	1942, 1498, 503, 482, 1010, 2249, 1263, 499, 972, 501,
	763, 502, 1385, 1606, 3375, 3369, 3354, 1382, 1263, 1381,
	500, 1972, 1363, 3305, 1231, 3271, 2032, 1368, 3229, 498,
	2782, 3228, 1012, 1013, 1014, 1011, 3223, 1553, 3427, 1384,
	3222, 2780, 2806, 2677, 3221, 1383, 1380, 3220, 2675, 1630,
	1512, 3179, 944, 1452, 1453, 1401, 1010, 1636, 1636, 1010,
	1231, 1406, 1231, 1231, 1393, 1778, 482, 482, 2118, 1578,
	1578, 2562, 1634, 1263, 1707, 1708, 1720, 1577, 2646, 2007,
	1495, 1496, 2344, 1499, 973, 1404, 3376, 3180, 3355, 2982,
	467, 1514, 1263, 1445, 1588, 3180, 2336, 3272, 2930, 1593,
	3230, 1300, 1300, 1995, 1521, 2906, 1523, 2239, 3180, 2790,
	1585, 2538, 3180, 865, 866, 867, 3180, 2231, 2148, 3180,
	482, 1578, 1263, 3180, 1765, 1561, 482, 482, 482, 1770,
	1771, 589, 599, 2313, 1849, 2305, 1775, 1776, 2265, 1721,
	590, 1782, 598, 591, 595, 594, 592, 593, 191, 1657,
	2017, 191, 191, 2247, 191, 1756, 1702, 1703, 1947, 2235,
	1622, 2148, 1642, 1643, 1524, 1012, 1013, 1014, 1011, 2233,
	2931, 1574, 1575, 1576, 1748, 1749, 1629, 2907, 1941, 1632,
	1633, 2791, 1940, 2118, 1589, 1590, 1591, 1592, 1609, 1610,
	1556, 1551, 1513, 1513, 1824, 596, 1115, 2228, 1557, 1513,
	1513, 1726, 975, 1728, 1734, 1010, 1835, 1010, 1762, 1915,
	1010, 2006, 1840, 1746, 1747, 1573, 1761, 1637, 2221, 2219,
	2217, 1741, 1761, 1761, 1761, 1995, 1751, 597, 1169, 1457,
	1606, 2229, 2215, 1602, 1263, 1847, 1791, 1994, 1764, 1794,
	1795, 2234, 1797, 1249, 1638, 1829, 1767, 1768, 1769, 1603,
	1416, 1417, 1418, 1419, 1420, 1619, 3476, 1614, 1615, 1943,
	1639, 1922, 1582, 1640, 1641, 3428, 1623, 1921, 1618, 2229,
	1620, 1621, 2927, 2739, 1624, 1625, 1598, 1613, 1628, 1841,
	709, 710, 711, 712, 1627, 1890, 2566, 1909, 1611, 1900,
	2222, 2220, 2216, 1899, 1461, 1462, 1463, 1872, 1876, 1877,
	1709, 1706, 1497, 1898, 2216, 1825, 1725, 2394, 1727, 1995,
	1507, 2129, 1735, 1857, 1012, 1013, 1014, 1011, 1369, 841,
	2252, 2251, 709, 710, 711, 712, 841, 2243, 504, 2012,
	1819, 1942, 2893, 1010, 1906, 2030, 2033, 1819, 1027, 1010,
	1891, 1763, 1839, 1582, 1026, 1025, 1035, 1036, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1027, 1785, 1554, 1184, 1010,
	1889, 1010, 1788, 1913, 1786, 1010, 1773, 1365, 1057, 960,
	939, 934, 1188, 932, 3128, 1010, 1916, 1917, 3276, 1919,
	2743, 1805, 2980, 939, 1188, 1858, 1926, 1750, 2734, 2609,
	1370, 838, 1404, 1185, 840, 1502, 1501, 3076, 838, 1274,
	1253, 840, 3468, 1174, 1828, 1251, 1826, 1175, 721, 1838,
	3455, 1254, 556, 3429, 841, 482, 482, 482, 2057, 503,
	1502, 1501, 3277, 2834, 499, 3178, 501, 714, 502, 3155,
	482, 482, 482, 482, 2919, 1831, 1842, 500, 2917, 2207,
	1626, 3077, 3096, 1992, 1837, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1027, 1999, 1231, 1030, 1031, 1032, 1033, 1034,
	1027, 3483, 1874, 1875, 2735, 3095, 3048, 2034, 2899, 714,
	2807, 2800, 2029, 2023, 2028, 1880, 2026, 2031, 2920, 1231,
	2795, 2792, 2918, 1871, 2716, 2508, 838, 2368, 2340, 840,
	2568, 1884, 1554, 2262, 2232, 2052, 2139, 1554, 1554, 1460,
	1873, 1885, 1165, 1445, 1250, 1536, 1164, 1460, 2736, 1186,
	949, 1965, 1966, 1967, 1026, 1025, 1035, 1036, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1027, 1983, 1984, 1985, 1986,
	1529, 2032, 726, 2272, 2201, 2282, 1012, 1013, 1014, 1011,
	1789, 2058, 1012, 1013, 1014, 1011, 1790, 2837, 1306, 1793,
	1789, 1579, 1796, 2211, 3325, 1798, 2122, 2122, 1720, 2122,
	1014, 1011, 1011, 931, 927, 928, 929, 930, 3108, 2287,
	1451, 2286, 2285, 2283, 3107, 2585, 2447, 467, 467, 1012,
	1013, 1014, 1011, 2001, 2002, 947, 1448, 1450, 1447, 2446,
	1449, 1263, 482, 2004, 2005, 2424, 2022, 1936, 1938, 1939,
	2422, 2021, 1955, 3087, 1834, 3049, 3050, 482, 1012, 1013,
	1014, 1011, 1080, 947, 2191, 477, 3471, 2835, 3488, 1301,
	1974, 1720, 1059, 1517, 2196, 2324, 2198, 3482, 2325, 1944,
	191, 1012, 1013, 1014, 1011, 1058, 3439, 1518, 2284, 2016,
	2274, 3434, 3044, 2135, 3433, 2136, 2891, 3353, 2124, 3314,
	2128, 2126, 3278, 3225, 3213, 2000, 3200, 3141, 2143, 1525,
	1526, 1527, 1528, 2140, 2141, 1532, 1533, 1534, 1535, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 3470, 2498, 2013,
	2245, 3079, 2496, 1847, 3078, 841, 2921, 2890, 1269, 2494,
	1263, 2708, 1263, 2483, 1263, 2605, 2580, 1882, 3045, 947,
	1886, 2579, 2892, 1761, 2003, 2008, 2481, 2264, 2011, 2009,
	2035, 2036, 2010, 2041, 2195, 2480, 2479, 2471, 2202, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1016, 2150, 2465, 2464,
	2463, 1263, 2291, 2101, 2497, 2462, 2337, 1081, 2495, 1946,
	1897, 1808, 3360, 1243, 1245, 2493, 2193, 2298, 1904, 2482,
	2130, 1807, 1263, 1806, 1802, 2200, 2898, 838, 1801, 2255,
	840, 2300, 1759, 1758, 1757, 2156, 2290, 1918, 1012, 1013,
	1014, 1011, 1923, 1924, 1925, 2288, 2289, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1366, 2144, 2299, 1035, 1036,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1027, 1261, 2276,
	2276, 947, 2192, 2194, 1133, 947, 2367, 551, 2302, 2303,
	553, 2513, 2694, 1263, 1188, 552, 2365, 3459, 3458, 1261,
	3395, 3394, 1578, 1012, 1013, 1014, 1011, 2261, 2147, 1902,
	2390, 3264, 2203, 3391, 3014, 3387, 2396, 1888, 3260, 2256,
	1012, 1013, 1014, 1011, 1012, 1013, 1014, 1011, 1996, 1307,
	3053, 2259, 1306, 2406, 1887, 2270, 2639, 1012, 1013, 1014,
	1011, 947, 2328, 2241, 2242, 3245, 2248, 3234, 3217, 2421,
	2246, 3212, 2253, 3211, 3175, 3173, 947, 947, 947, 1636,
	3142, 2297, 947, 3089, 2432, 2433, 2434, 2435, 947, 2442,
	3292, 2443, 2444, 2269, 2445, 1901, 2266, 2267, 3062, 3012,
	2387, 2237, 2378, 3010, 2989, 2986, 2442, 3288, 2279, 2379,
	2281, 1012, 1013, 1014, 1011, 2638, 2984, 1894, 2122, 2503,
	3467, 1012, 1013, 1014, 1011, 2889, 2388, 2408, 1012, 1013,
	1014, 1011, 2499, 2888, 2885, 1012, 1013, 1014, 1011, 1657,
	467, 1012, 1013, 1014, 1011, 1578, 947, 1720, 1720, 1720,
	1720, 2868, 3156, 2345, 2397, 2866, 3032, 2156, 947, 1720,
	1404, 2347, 2122, 2349, 2801, 2797, 1554, 2419, 1554, 2788,
	2787, 2419, 2399, 1012, 1013, 1014, 1011, 2402, 1263, 2717,
	2681, 2346, 1012, 1013, 1014, 1011, 1554, 1554, 2363, 482,
	482, 2308, 2309, 2415, 2680, 2679, 3022, 2314, 1950, 2619,
	2616, 8, 2578, 2395, 2389, 7, 2552, 2492, 2426, 1012,
	1013, 1014, 1011, 2484, 2474, 2472, 2468, 2467, 1300, 2407,
	2466, 2410, 1012, 1013, 1014, 1011, 2417, 2238, 3021, 2427,
	2428, 2423, 2970, 3033, 2431, 2534, 1810, 2863, 2430, 1804,
	2438, 651, 650, 2414, 191, 1564, 1563, 1367, 1088, 191,
	1084, 1083, 935, 2420, 1012, 1013, 1014, 1011, 1012, 1013,
	1014, 1011, 2461, 1012, 1013, 1014, 1011, 718, 2563, 2473,
	1513, 2912, 1513, 2911, 2910, 2595, 2882, 174, 2398, 163,
	138, 2878, 2876, 1582, 2604, 2556, 2557, 2403, 2404, 2875,
	1263, 2642, 2405, 2611, 2874, 2504, 2873, 2872, 2521, 2871,
	2522, 2523, 2524, 2525, 2509, 1486, 2507, 3465, 2867, 2535,
	2521, 2865, 2641, 2537, 2533, 2536, 2850, 1012, 1013, 1014,
	1011, 2840, 2839, 2550, 2825, 2273, 2553, 2824, 2744, 2684,
	2674, 2644, 2569, 2637, 2292, 2293, 2629, 2573, 1012, 1013,
	1014, 1011, 2295, 2296, 2628, 2623, 168, 1553, 2546, 2561,
	2343, 2218, 2594, 2214, 2213, 2301, 1927, 1333, 1334, 1920,
	1026, 1025, 1035, 1036, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1027, 2632, 1341, 2634, 1914, 1912, 2567, 1908, 2592,
	1907, 1416, 1554, 2571, 1905, 2598, 2570, 2590, 1896, 947,
	1893, 2613, 1892, 1809, 2597, 2697, 841, 1547, 1338, 1546,
	1545, 1342, 2586, 841, 2601, 2712, 2608, 1326, 2591, 2599,
	482, 2593, 2588, 2600, 1516, 1515, 1506, 1327, 1328, 2607,
	174, 2726, 947, 947, 947, 1275, 1273, 2620, 3446, 3443,
	3441, 3313, 1720, 1992, 1078, 2742, 3287, 3231, 2627, 3219,
	3214, 1321, 2621, 3122, 3106, 3102, 2400, 2401, 2635, 2636,
	3073, 2997, 2995, 2052, 2968, 2967, 2964, 2683, 2963, 2759,
	2901, 2762, 2720, 2762, 2762, 1332, 1323, 1482, 947, 2633,
	1337, 1340, 1329, 1479, 2676, 1172, 2500, 1481, 1478, 1480,
	1484, 1485, 2425, 2383, 2382, 1483, 2381, 2783, 2380, 168,
	2348, 2323, 2227, 2779, 1263, 1263, 2063, 2138, 2378, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2718, 2682, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2713,
	2087, 2088, 2089, 2090, 2091, 2740, 2092, 2678, 2757, 2784,
	2785, 2630, 2631, 2719, 2093, 1993, 2781, 1964, 1945, 2737,
	1446, 482, 2741, 2731, 2758, 168, 2697, 1772, 2728, 2729,
	2730, 1572, 841, 1560, 1389, 1353, 2767, 1578, 1578, 2022,
	1330, 1261, 1261, 1132, 2021, 601, 117, 2745, 2750, 2749,
	2640, 117, 2746, 2747, 2651, 2652, 1117, 841, 1113, 1112,
	2653, 2654, 2655, 2656, 2322, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2763, 2764, 1111, 1012, 1013, 1014, 1011,
	2768, 1110, 1109, 947, 1108, 1107, 1106, 2291, 1105, 1104,
	1012, 1013, 1014, 1011, 2321, 1103, 2838, 1102, 1101, 1100,
	1099, 488, 1098, 1097, 117, 1096, 1095, 1094, 1093, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 1488, 1761, 1092, 1091,
	1012, 1013, 1014, 1011, 1087, 1086, 1085, 2572, 2320, 2574,
	2765, 1082, 2794, 1075, 2799, 2798, 2793, 1074, 482, 2803,
	2804, 2789, 3415, 2319, 1072, 2796, 2814, 1554, 3463, 1071,
	1070, 1069, 1554, 2318, 1012, 1013, 1014, 1011, 1068, 1834,
	2818, 2317, 1067, 2748, 2821, 2822, 2823, 1066, 2805, 1012,
	1013, 1014, 1011, 1065, 1064, 1063, 1062, 1061, 2827, 1012,
	1013, 1014, 1011, 2817, 1056, 1055, 2833, 1012, 1013, 1014,
	1011, 3413, 2645, 1054, 2622, 977, 933, 515, 2810, 2811,
	2316, 1026, 1025, 1035, 1036, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1027, 2853, 839, 3304, 3302, 2643, 2851, 3300,
	3298, 117, 2965, 2857, 1998, 2852, 1012, 1013, 1014, 1011,
	1979, 965, 3365, 2813, 2859, 2156, 117, 2869, 117, 2369,
	2149, 1812, 2856, 976, 2905, 1026, 1025, 1035, 1036, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1027, 2816, 2122, 1720,
	2924, 1026, 1025, 1035, 1036, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1027, 2530, 2932, 2528, 2815, 947, 2531, 2532,
	2529, 2114, 2115, 2354, 2268, 2527, 2759, 2526, 3085, 2999,
	947, 2236, 2230, 1166, 479, 2879, 2715, 3000, 1600, 1601,
	2061, 947, 102, 2979, 1595, 1596, 1597, 1263, 1026, 1025,
	1035, 1036, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1027,
	2896, 2854, 2855, 1578, 2881, 2975, 2755, 947, 2756, 2926,
	2603, 2884, 2828, 841, 2962, 54, 53, 2315, 1694, 1315,
	841, 2225, 2981, 2241, 2242, 2766, 2998, 483, 2260, 2922,
	860, 1362, 2923, 2312, 1347, 1970, 191, 1774, 484, 2955,
	2929, 971, 3003, 1012, 1013, 1014, 1011, 2692, 2685, 947,
	2409, 2969, 2453, 2454, 1261, 2974, 3001, 2991, 2971, 1012,
	1013, 1014, 1011, 2384, 2978, 2015, 2311, 2469, 2470, 2925,
	2310, 485, 486, 2987, 2983, 2985, 1988, 2928, 2988, 1604,
	2992, 3031, 1571, 3378, 947, 3216, 1881, 2993, 1502, 1501,
	2990, 2505, 1012, 1013, 1014, 1011, 1012, 1013, 1014, 1011,
	1128, 1129, 947, 1263, 1263, 1126, 1127, 2786, 2726, 2933,
	1026, 1025, 1035, 1036, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1027, 2972, 2449, 3005, 3068, 3015, 3068, 2102, 3016,
	2450, 2451, 2452, 2438, 1124, 1125, 3064, 3065, 3058, 2110,
	2113, 2114, 2115, 2111, 1263, 2112, 2116, 3088, 1122, 1123,
	2098, 1705, 3035, 1224, 3040, 1223, 3039, 3038, 2304, 2521,
	1003, 2820, 482, 2555, 947, 947, 1836, 1177, 947, 947,
	1261, 3060, 855, 850, 845, 849, 853, 3072, 3063, 1157,
	3071, 3125, 1200, 3462, 1012, 1013, 1014, 1011, 3124, 3119,
	3342, 2926, 2962, 3320, 3083, 3082, 1606, 3086, 3133, 3090,
	858, 2521, 3318, 3267, 848, 3110, 3111, 3137, 3138, 3120,
	3121, 3060, 3244, 3243, 3241, 3232, 3136, 2955, 3135, 3011,
	2870, 117, 117, 839, 1025, 1035, 1036, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1027, 2847, 3130, 2846, 2831, 2862,
	2294, 2047, 1364, 3129, 2830, 3131, 2864, 2565, 3162, 1608,
	2606, 3080, 3081, 1981, 3056, 856, 3417, 3416, 3109, 2271,
	1895, 962, 859, 1456, 3144, 3416, 1012, 1013, 1014, 1011,
	3417, 3104, 2826, 3157, 3192, 2877, 3161, 944, 178, 3,
	1192, 62, 3186, 846, 2, 1012, 1013, 1014, 1011, 1012,
	1013, 1014, 1011, 3430, 1043, 3023, 2105, 3024, 3431, 3208,
	1, 2329, 1558, 3181, 1130, 713, 857, 708, 1240, 2131,
	1752, 1267, 3189, 3187, 3188, 1562, 3056, 3056, 715, 2539,
	3056, 3056, 2540, 947, 709, 710, 711, 712, 1263, 944,
	2819, 2542, 3201, 2110, 2113, 2114, 2115, 2111, 1854, 2112,
	2116, 2510, 2096, 3215, 1968, 2711, 847, 1167, 756, 1508,
	1374, 862, 956, 1371, 955, 953, 1458, 603, 1815, 2501,
	2475, 3132, 3377, 3226, 3224, 3423, 3312, 3380, 3256, 1387,
	587, 3235, 3147, 3316, 3149, 3018, 1859, 1008, 2587, 3250,
	778, 947, 3233, 3240, 641, 3238, 614, 1073, 1355, 1348,
	2649, 2647, 864, 613, 2895, 1261, 1554, 2359, 2558, 3194,
	3268, 861, 779, 1799, 3145, 1316, 1320, 1554, 2014, 3202,
	2994, 3262, 3259, 2996, 3283, 3084, 2751, 3347, 3485, 3399,
	947, 3282, 3270, 854, 3444, 3027, 3025, 3026, 1263, 3437,
	3002, 3307, 3310, 1121, 3297, 3299, 3301, 3303, 3281, 3263,
	3343, 522, 1731, 465, 823, 3290, 3279, 3123, 1811, 1012,
	1013, 1014, 1011, 523, 1997, 3333, 3311, 3218, 736, 851,
	1978, 3296, 852, 3306, 3317, 3319, 3315, 3321, 3322, 766,
	1263, 737, 729, 3192, 2376, 3056, 2375, 1427, 1017, 1444,
	2665, 2666, 1052, 561, 1883, 2356, 3356, 2950, 2551, 61,
	60, 59, 3361, 58, 1781, 1261, 199, 605, 3359, 3350,
	198, 3351, 3352, 3051, 3309, 3349, 3382, 585, 584, 583,
	582, 581, 580, 2109, 3384, 2107, 2106, 1715, 1714, 3383,
	1779, 3370, 3341, 3371, 2724, 3372, 2441, 3373, 1486, 2436,
	3374, 1647, 1645, 3056, 2429, 2042, 2049, 1261, 765, 1644,
	3362, 3293, 3294, 947, 3388, 3101, 3250, 3390, 805, 2485,
	1594, 2038, 1663, 2456, 1660, 1659, 2448, 3097, 3091, 1691,
	3190, 3067, 2934, 1272, 3402, 3404, 2935, 488, 2941, 3409,
	1987, 3208, 3056, 3408, 3407, 887, 3414, 3422, 3411, 3412,
	883, 885, 3425, 886, 3418, 3419, 3420, 3421, 884, 2280,
	2019, 2687, 1960, 1959, 1957, 1956, 1141, 3435, 117, 947,
	3436, 3255, 3329, 3034, 2154, 2152, 2812, 2808, 1823, 3440,
	1832, 3442, 2602, 1716, 1712, 1980, 3168, 1599, 730, 1976,
	99, 152, 48, 3282, 89, 88, 98, 150, 3384, 3457,
	3453, 807, 47, 3383, 806, 183, 182, 3456, 185, 184,
	181, 2204, 947, 3464, 947, 3466, 3461, 2205, 180, 1304,
	179, 3323, 3070, 703, 3469, 38, 37, 3182, 3425, 3473,
	33, 12, 117, 11, 34, 3477, 117, 21, 947, 3481,
	22, 791, 20, 1378, 19, 25, 31, 3484, 117, 767,
	30, 110, 109, 29, 108, 107, 1225, 1226, 117, 1228,
	1482, 1232, 1233, 1234, 106, 3397, 1479, 105, 104, 28,
	1481, 1478, 1480, 1484, 1485, 18, 769, 42, 1483, 41,
	40, 9, 97, 95, 2902, 2903, 2904, 27, 96, 93,
	2908, 2909, 94, 1279, 1280, 1281, 1282, 1283, 92, 1285,
	1286, 1287, 1288, 1289, 90, 73, 72, 1295, 1296, 71,
	86, 85, 84, 83, 82, 81, 79, 80, 777, 70,
	69, 1410, 68, 1038, 67, 1042, 66, 91, 77, 87,
	78, 76, 75, 74, 65, 64, 1060, 63, 136, 790,
	789, 1039, 1041, 1037, 135, 1040, 1026, 1025, 1035, 1036,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1027, 134, 133,
	788, 132, 130, 131, 1410, 129, 1410, 128, 127, 126,
	125, 764, 124, 43, 44, 45, 46, 146, 145, 147,
	149, 151, 768, 800, 3289, 148, 153, 143, 141, 144,
	1410, 142, 140, 56, 100, 17, 24, 4, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 0, 905, 0,
	0, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 1488,
	0, 0, 533, 532, 539, 529, 0, 0, 0, 0,
	0, 0, 797, 801, 536, 537, 0, 538, 542, 0,
	0, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 785, 0, 783, 787, 804, 0, 0, 0,
	784, 781, 780, 0, 786, 771, 772, 770, 773, 774,
	775, 776, 0, 802, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 798, 799, 0, 0,
	0, 0, 0, 0, 551, 0, 0, 553, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 891, 0,
	0, 1719, 881, 794, 0, 0, 0, 0, 0, 793,
	3126, 0, 0, 0, 3127, 0, 0, 0, 913, 917,
	919, 921, 923, 924, 926, 0, 931, 927, 928, 929,
	930, 0, 908, 909, 910, 911, 889, 890, 914, 0,
	892, 0, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 904, 906, 902, 903, 912, 0, 0, 0, 0,
	0, 0, 0, 916, 918, 920, 922, 925, 0, 0,
	0, 0, 0, 117, 0, 0, 117, 117, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 792, 0, 3475, 0, 0, 0, 0,
	0, 907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 525, 527,
	526, 0, 0, 0, 839, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 621, 519, 0,
	0, 0, 3227, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 0, 294, 1555, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 460, 1766, 0, 612, 0, 464, 385, 338, 0,
	0, 0, 1043, 674, 682, 0, 0, 0, 0, 0,
	0, 3269, 1743, 0, 0, 568, 3273, 3274, 602, 651,
	650, 589, 599, 0, 0, 268, 197, 461, 0, 462,
	590, 0, 598, 591, 595, 594, 592, 593, 0, 666,
	3291, 0, 0, 0, 0, 0, 559, 572, 0, 576,
	0, 0, 530, 534, 540, 0, 541, 543, 0, 0,
	544, 545, 546, 0, 0, 548, 549, 0, 0, 0,
	0, 0, 0, 569, 570, 0, 0, 0, 0, 622,
	0, 571, 0, 0, 1744, 596, 600, 0, 0, 0,
	0, 258, 390, 407, 269, 381, 420, 274, 388, 264,
	353, 377, 0, 0, 260, 405, 387, 335, 313, 314,
	259, 0, 372, 292, 305, 289, 351, 597, 620, 624,
	288, 688, 618, 415, 262, 0, 414, 350, 401, 406,
	336, 330, 261, 403, 334, 329, 317, 296, 689, 318,
	319, 309, 362, 328, 363, 310, 340, 339, 341, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 3392, 3393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 0, 915, 417, 0, 0, 672, 0, 0, 0,
	389, 0, 0, 320, 0, 0, 0, 619, 0, 375,
	356, 685, 560, 0, 373, 326, 402, 364, 408, 391,
	416, 369, 365, 253, 392, 291, 337, 265, 267, 286,
	293, 295, 297, 298, 346, 347, 359, 380, 393, 394,
	395, 290, 275, 374, 276, 307, 277, 254, 282, 280,
	283, 382, 284, 256, 360, 399, 0, 303, 370, 333,
	257, 332, 361, 398, 397, 266, 424, 430, 431, 0,
	0, 436, 0, 0, 0, 445, 450, 451, 452, 454,
	455, 456, 457, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 2125, 0, 429, 321, 322, 323, 301,
	250, 251, 474, 670, 352, 0, 0, 0, 0, 684,
	665, 667, 668, 671, 675, 676, 677, 678, 679, 681,
	683, 687, 473, 0, 0, 0, 0, 0, 470, 358,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 410, 422, 439, 442, 0,
	0, 0, 0, 255, 441, 0, 1719, 0, 0, 0,
	0, 0, 0, 686, 0, 117, 0, 421, 0, 0,
	0, 0, 0, 623, 0, 0, 342, 343, 344, 345,
	673, 0, 273, 440, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 300, 306, 453, 308,
	272, 357, 302, 419, 315, 0, 446, 0, 447, 0,
	0, 0, 0, 349, 311, 312, 383, 316, 327, 371,
	418, 355, 376, 270, 409, 384, 331, 0, 0, 695,
	669, 694, 696, 697, 693, 698, 699, 680, 579, 0,
	627, 691, 690, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 281, 248, 278,
	279, 285, 471, 468, 400, 472, 0, 252, 0, 325,
	0, 366, 299, 0, 0, 658, 634, 635, 636, 577,
	637, 631, 632, 633, 659, 625, 655, 656, 604, 628,
	638, 654, 639, 657, 660, 661, 700, 701, 645, 629,
	220, 702, 642, 662, 653, 652, 640, 626, 663, 664,
	611, 606, 643, 644, 630, 646, 647, 648, 578, 607,
	608, 609, 610, 0, 0, 0, 425, 426, 427, 449,
	411, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 649, 117,
	475, 463, 0, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	0, 294, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 459, 0, 460,
	0, 0, 612, 0, 464, 385, 338, 0, 0, 0,
	0, 674, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 0, 0, 602, 651, 650, 589,
	599, 0, 0, 268, 197, 461, 0, 462, 590, 0,
	598, 591, 595, 594, 592, 593, 0, 666, 0, 0,
	0, 0, 0, 0, 559, 572, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 1719, 1719, 1719, 0, 0, 0, 0,
	0, 569, 570, 0, 1719, 0, 0, 622, 0, 571,
	0, 0, 617, 596, 600, 0, 0, 0, 0, 258,
	390, 407, 269, 381, 420, 274, 388, 264, 353, 377,
	0, 0, 260, 405, 387, 335, 313, 314, 259, 0,
	372, 292, 305, 289, 351, 597, 620, 624, 288, 688,
	618, 415, 262, 0, 414, 350, 401, 406, 336, 330,
	261, 403, 334, 329, 317, 296, 689, 318, 319, 309,
	362, 328, 363, 310, 340, 339, 341, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 117, 0, 0, 615, 0, 0,
	0, 417, 0, 0, 672, 0, 0, 0, 389, 0,
	0, 320, 0, 0, 117, 619, 0, 375, 356, 685,
	560, 117, 373, 326, 402, 364, 408, 391, 416, 369,
	365, 253, 392, 291, 337, 265, 267, 286, 293, 295,
	297, 298, 346, 347, 359, 380, 393, 394, 395, 290,
	275, 374, 276, 307, 277, 254, 282, 280, 283, 382,
	284, 256, 360, 399, 0, 303, 370, 333, 257, 332,
	361, 398, 397, 266, 424, 430, 431, 0, 0, 436,
	0, 0, 0, 445, 450, 451, 452, 454, 455, 456,
	457, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	1510, 1509, 1511, 429, 321, 322, 323, 301, 250, 251,
	474, 670, 352, 0, 0, 0, 0, 684, 665, 667,
	668, 671, 675, 676, 677, 678, 679, 681, 683, 687,
	473, 0, 0, 0, 0, 0, 470, 358, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 410, 422, 439, 442, 0, 0, 0,
	0, 255, 441, 0, 0, 0, 0, 0, 0, 0,
	117, 686, 0, 0, 0, 421, 0, 1719, 0, 0,
	0, 623, 0, 0, 342, 343, 344, 345, 673, 0,
	273, 440, 368, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 435, 300, 306, 453, 308, 272, 357,
	302, 419, 315, 0, 446, 0, 447, 0, 0, 0,
	0, 349, 311, 312, 383, 316, 327, 371, 418, 355,
	376, 270, 409, 384, 331, 0, 0, 695, 669, 694,
	696, 697, 693, 698, 699, 680, 579, 0, 627, 691,
	690, 692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 281, 248, 278, 279, 285,
	471, 468, 400, 472, 0, 252, 0, 325, 0, 366,
	299, 0, 0, 658, 634, 635, 636, 577, 637, 631,
	632, 633, 659, 625, 655, 656, 604, 628, 638, 654,
	639, 657, 660, 661, 700, 701, 645, 629, 220, 702,
	642, 662, 653, 652, 640, 626, 663, 664, 611, 606,
	643, 644, 630, 646, 647, 648, 578, 607, 608, 609,
	610, 0, 0, 0, 425, 426, 427, 449, 411, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 475, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 1046, 0, 464, 385, 338, 0, 0, 0, 0,
	674, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 568, 0, 0, 602, 651, 650, 589, 599,
	0, 117, 268, 197, 461, 0, 462, 590, 117, 598,
	591, 595, 594, 592, 593, 0, 666, 0, 0, 0,
	0, 0, 0, 559, 572, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 570, 0, 0, 1719, 0, 622, 0, 571, 0,
	0, 617, 596, 600, 0, 0, 0, 0, 258, 390,
	407, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 260, 405, 387, 335, 313, 314, 259, 0, 372,
	292, 305, 289, 351, 597, 620, 624, 288, 688, 618,
	415, 262, 0, 414, 350, 401, 406, 336, 330, 261,
	403, 334, 329, 317, 296, 689, 318, 319, 309, 362,
	328, 363, 310, 340, 339, 341, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	417, 117, 0, 672, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 619, 0, 375, 356, 685, 560,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	670, 352, 0, 0, 0, 0, 684, 665, 667, 668,
	671, 675, 676, 677, 678, 679, 681, 683, 687, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	623, 0, 0, 342, 343, 344, 345, 673, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 695, 669, 694, 696,
	697, 693, 698, 699, 680, 579, 0, 627, 691, 690,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 0, 325, 139, 366, 299,
	0, 0, 658, 634, 635, 636, 577, 637, 631, 632,
	633, 659, 625, 655, 656, 604, 628, 638, 654, 639,
	657, 660, 661, 700, 701, 645, 629, 220, 702, 642,
	662, 653, 652, 640, 626, 663, 664, 611, 606, 643,
	644, 630, 646, 647, 648, 578, 607, 608, 609, 610,
	0, 0, 0, 425, 426, 427, 449, 411, 621, 469,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 475, 463, 0,
	575, 0, 0, 0, 294, 3474, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 612, 0, 464, 385, 338,
	0, 0, 0, 0, 674, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 0, 0, 602,
	651, 650, 589, 599, 0, 0, 268, 197, 461, 0,
	462, 590, 0, 598, 591, 595, 594, 592, 593, 0,
	666, 0, 0, 0, 0, 0, 0, 559, 572, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 569, 570, 0, 0, 0, 0,
	622, 0, 571, 0, 0, 617, 596, 600, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 597, 620,
	624, 288, 688, 618, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 689,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 417, 0, 0, 672, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 619, 0,
	375, 356, 685, 560, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 670, 352, 0, 0, 0, 0,
	684, 665, 667, 668, 671, 675, 676, 677, 678, 679,
	681, 683, 687, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 623, 0, 0, 342, 343, 344,
	345, 673, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	695, 669, 694, 696, 697, 693, 698, 699, 680, 579,
	0, 627, 691, 690, 692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 0, 0, 658, 634, 635, 636,
	577, 637, 631, 632, 633, 659, 625, 655, 656, 604,
	628, 638, 654, 639, 657, 660, 661, 700, 701, 645,
	629, 220, 702, 642, 662, 653, 652, 640, 626, 663,
	664, 611, 606, 643, 644, 630, 646, 647, 648, 578,
	607, 608, 609, 610, 0, 0, 0, 425, 426, 427,
	449, 411, 621, 469, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 475, 463, 0, 575, 0, 0, 0, 294, 1555,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 460, 0, 0, 612,
	0, 464, 385, 338, 0, 0, 0, 0, 674, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 0, 0, 602, 651, 650, 589, 599, 0, 0,
	268, 197, 461, 0, 462, 590, 0, 598, 591, 595,
	594, 592, 593, 0, 666, 0, 0, 0, 0, 0,
	0, 559, 572, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 622, 0, 571, 0, 0, 617,
	596, 600, 0, 0, 0, 0, 258, 390, 407, 269,
	381, 420, 274, 388, 264, 353, 377, 0, 0, 260,
	405, 387, 335, 313, 314, 259, 0, 372, 292, 305,
	289, 351, 597, 620, 624, 288, 688, 618, 415, 262,
	0, 414, 350, 401, 406, 336, 330, 261, 403, 334,
	329, 317, 296, 689, 318, 319, 309, 362, 328, 363,
	310, 340, 339, 341, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 417, 0,
	0, 672, 0, 0, 0, 389, 0, 0, 320, 0,
	0, 0, 619, 0, 375, 356, 685, 560, 0, 373,
	326, 402, 364, 408, 391, 416, 369, 365, 253, 392,
	291, 337, 265, 267, 286, 293, 295, 297, 298, 346,
	347, 359, 380, 393, 394, 395, 290, 275, 374, 276,
	307, 277, 254, 282, 280, 283, 382, 284, 256, 360,
	399, 0, 303, 370, 333, 257, 332, 361, 398, 397,
	266, 424, 430, 431, 0, 0, 436, 0, 0, 0,
	445, 450, 451, 452, 454, 455, 456, 457, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	429, 321, 322, 323, 301, 250, 251, 474, 670, 352,
	0, 0, 0, 0, 684, 665, 667, 668, 671, 675,
	676, 677, 678, 679, 681, 683, 687, 473, 0, 0,
	0, 0, 0, 470, 358, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	410, 422, 439, 442, 0, 0, 0, 0, 255, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 623, 0,
	0, 342, 343, 344, 345, 673, 0, 273, 440, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 300, 306, 453, 308, 272, 357, 302, 419, 315,
	0, 446, 0, 447, 0, 0, 0, 0, 349, 311,
	312, 383, 316, 327, 371, 418, 355, 376, 270, 409,
	384, 331, 0, 0, 695, 669, 694, 696, 697, 693,
	698, 699, 680, 579, 0, 627, 691, 690, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 281, 248, 278, 279, 285, 471, 468, 400,
	472, 0, 252, 0, 325, 0, 366, 299, 0, 0,
	658, 634, 635, 636, 577, 637, 631, 632, 633, 659,
	625, 655, 656, 604, 628, 638, 654, 639, 657, 660,
	661, 700, 701, 645, 629, 220, 702, 642, 662, 653,
	652, 640, 626, 663, 664, 611, 606, 643, 644, 630,
	646, 647, 648, 578, 607, 608, 609, 610, 0, 0,
	0, 425, 426, 427, 449, 411, 621, 469, 0, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 649, 0, 475, 463, 0, 575, 0,
	0, 0, 294, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	460, 0, 0, 612, 0, 464, 385, 338, 0, 0,
	0, 0, 674, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 568, 0, 0, 602, 651, 650,
	589, 599, 0, 0, 268, 197, 461, 0, 462, 590,
	0, 598, 591, 595, 594, 592, 593, 0, 666, 0,
	0, 0, 0, 0, 0, 559, 572, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 1299, 0, 0, 0, 622, 0,
	571, 0, 0, 617, 596, 600, 0, 0, 0, 0,
	258, 390, 407, 269, 381, 420, 274, 388, 264, 353,
	377, 0, 0, 260, 405, 387, 335, 313, 314, 259,
	0, 372, 292, 305, 289, 351, 597, 620, 624, 288,
	688, 618, 415, 262, 0, 414, 350, 401, 406, 336,
	330, 261, 403, 334, 329, 317, 296, 689, 318, 319,
	309, 362, 328, 363, 310, 340, 339, 341, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 417, 0, 0, 672, 0, 0, 0, 389,
	0, 0, 320, 0, 0, 0, 619, 0, 375, 356,
	685, 560, 0, 373, 326, 402, 364, 408, 391, 416,
	369, 365, 253, 392, 291, 337, 265, 267, 286, 293,
	295, 297, 298, 346, 347, 359, 380, 393, 394, 395,
	290, 275, 374, 276, 307, 277, 254, 282, 280, 283,
	382, 284, 256, 360, 399, 0, 303, 370, 333, 257,
	332, 361, 398, 397, 266, 424, 430, 431, 0, 0,
	436, 0, 0, 0, 445, 450, 451, 452, 454, 455,
	456, 457, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 429, 321, 322, 323, 301, 250,
	251, 474, 670, 352, 0, 0, 0, 0, 684, 665,
	667, 668, 671, 675, 676, 677, 678, 679, 681, 683,
	687, 473, 0, 0, 0, 0, 0, 470, 358, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 410, 422, 439, 442, 0, 0,
	0, 0, 255, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 623, 0, 0, 342, 343, 344, 345, 673,
	0, 273, 440, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 435, 300, 306, 453, 308, 272,
	357, 302, 419, 315, 0, 446, 0, 447, 0, 0,
	0, 0, 349, 311, 312, 383, 316, 327, 371, 418,
	355, 376, 270, 409, 384, 331, 0, 0, 695, 669,
	694, 696, 697, 693, 698, 699, 680, 579, 0, 627,
	691, 690, 692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 281, 248, 278, 279,
	285, 471, 468, 400, 472, 0, 252, 0, 325, 0,
	366, 299, 0, 0, 658, 634, 635, 636, 577, 637,
	631, 632, 633, 659, 625, 655, 656, 604, 628, 638,
	654, 639, 657, 660, 661, 700, 701, 645, 629, 220,
	702, 642, 662, 653, 652, 640, 626, 663, 664, 611,
	606, 643, 644, 630, 646, 647, 648, 578, 607, 608,
	609, 610, 0, 0, 0, 425, 426, 427, 449, 411,
	621, 469, 0, 1903, 0, 0, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 649, 0, 475,
	463, 0, 575, 0, 0, 0, 294, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 0, 460, 0, 0, 612, 0, 464,
	385, 338, 0, 0, 0, 0, 674, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 0,
	0, 602, 651, 650, 589, 599, 0, 0, 268, 197,
	461, 0, 462, 590, 0, 598, 591, 595, 594, 592,
	593, 0, 666, 0, 0, 0, 0, 0, 0, 559,
	572, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 570, 0, 0,
	0, 0, 622, 0, 571, 0, 0, 617, 596, 600,
	0, 0, 0, 0, 258, 390, 407, 269, 381, 420,
	274, 388, 264, 353, 377, 0, 0, 260, 405, 387,
	335, 313, 314, 259, 0, 372, 292, 305, 289, 351,
	597, 620, 624, 288, 688, 618, 415, 262, 0, 414,
	350, 401, 406, 336, 330, 261, 403, 334, 329, 317,
	296, 689, 318, 319, 309, 362, 328, 363, 310, 340,
	339, 341, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 417, 0, 0, 672,
	0, 0, 0, 389, 0, 0, 320, 0, 0, 0,
	619, 0, 375, 356, 685, 560, 0, 373, 326, 402,
	364, 408, 391, 416, 369, 365, 253, 392, 291, 337,
	265, 267, 286, 293, 295, 297, 298, 346, 347, 359,
	380, 393, 394, 395, 290, 275, 374, 276, 307, 277,
	254, 282, 280, 283, 382, 284, 256, 360, 399, 0,
	303, 370, 333, 257, 332, 361, 398, 397, 266, 424,
	430, 431, 0, 0, 436, 0, 0, 0, 445, 450,
	451, 452, 454, 455, 456, 457, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 429, 321,
	322, 323, 301, 250, 251, 474, 670, 352, 0, 0,
	0, 0, 684, 665, 667, 668, 671, 675, 676, 677,
	678, 679, 681, 683, 687, 473, 0, 0, 0, 0,
	0, 470, 358, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 410, 422,
	439, 442, 0, 0, 0, 0, 255, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 623, 0, 0, 342,
	343, 344, 345, 673, 0, 273, 440, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 300,
	306, 453, 308, 272, 357, 302, 419, 315, 0, 446,
	0, 447, 0, 0, 0, 0, 349, 311, 312, 383,
	316, 327, 371, 418, 355, 376, 270, 409, 384, 331,
	0, 0, 695, 669, 694, 696, 697, 693, 698, 699,
	680, 579, 0, 627, 691, 690, 692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	281, 248, 278, 279, 285, 471, 468, 400, 472, 0,
	252, 0, 325, 0, 366, 299, 0, 0, 658, 634,
	635, 636, 577, 637, 631, 632, 633, 659, 625, 655,
	656, 604, 628, 638, 654, 639, 657, 660, 661, 700,
	701, 645, 629, 220, 702, 642, 662, 653, 652, 640,
	626, 663, 664, 611, 606, 643, 644, 630, 646, 647,
	648, 578, 607, 608, 609, 610, 0, 0, 0, 425,
	426, 427, 449, 411, 621, 469, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 475, 463, 0, 575, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 612, 0, 464, 385, 338, 0, 0, 0, 0,
	674, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 568, 0, 0, 602, 651, 650, 589, 599,
	0, 0, 268, 197, 461, 0, 462, 590, 0, 598,
	591, 595, 594, 592, 593, 0, 666, 0, 0, 0,
	0, 0, 0, 559, 572, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 570, 1548, 0, 0, 0, 622, 0, 571, 0,
	0, 617, 596, 600, 0, 0, 0, 0, 258, 390,
	407, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 260, 405, 387, 335, 313, 314, 259, 0, 372,
	292, 305, 289, 351, 597, 620, 624, 288, 688, 618,
	415, 262, 0, 414, 350, 401, 406, 336, 330, 261,
	403, 334, 329, 317, 296, 689, 318, 319, 309, 362,
	328, 363, 310, 340, 339, 341, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	417, 0, 0, 672, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 619, 0, 375, 356, 685, 560,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	670, 352, 0, 0, 0, 0, 684, 665, 667, 668,
	671, 675, 676, 677, 678, 679, 681, 683, 687, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	623, 0, 0, 342, 343, 344, 345, 673, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 695, 669, 694, 696,
	697, 693, 698, 699, 680, 579, 0, 627, 691, 690,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 0, 325, 0, 366, 299,
	0, 0, 658, 634, 635, 636, 577, 637, 631, 632,
	633, 659, 625, 655, 656, 604, 628, 638, 654, 639,
	657, 660, 661, 700, 701, 645, 629, 220, 702, 642,
	662, 653, 652, 640, 626, 663, 664, 611, 606, 643,
	644, 630, 646, 647, 648, 578, 607, 608, 609, 610,
	0, 0, 0, 425, 426, 427, 449, 411, 621, 469,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 475, 463, 0,
	575, 0, 0, 0, 294, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 612, 0, 464, 385, 338,
	0, 0, 0, 0, 674, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 0, 0, 602,
	651, 650, 589, 599, 0, 0, 268, 197, 461, 0,
	462, 590, 0, 598, 591, 595, 594, 592, 593, 0,
	666, 0, 0, 0, 0, 0, 0, 559, 572, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 569, 570, 0, 0, 0, 0,
	622, 0, 571, 0, 0, 617, 596, 600, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 597, 620,
	624, 288, 688, 618, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 689,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 417, 0, 0, 672, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 619, 0,
	375, 356, 685, 560, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 670, 352, 0, 0, 0, 0,
	684, 665, 667, 668, 671, 675, 676, 677, 678, 679,
	681, 683, 687, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 623, 0, 0, 342, 343, 344,
	345, 673, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	695, 669, 694, 696, 697, 693, 698, 699, 680, 579,
	0, 627, 691, 690, 692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 0, 0, 658, 634, 635, 636,
	577, 637, 631, 632, 633, 659, 625, 655, 656, 604,
	628, 638, 654, 639, 657, 660, 661, 700, 701, 645,
	629, 220, 702, 642, 662, 653, 652, 640, 626, 663,
	664, 611, 606, 643, 644, 630, 646, 647, 648, 578,
	607, 608, 609, 610, 0, 0, 0, 425, 426, 427,
	449, 411, 621, 469, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 475, 463, 0, 575, 0, 0, 0, 294, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 460, 0, 0, 612,
	0, 464, 385, 338, 0, 0, 0, 0, 674, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 0, 0, 602, 651, 650, 589, 599, 0, 0,
	268, 197, 461, 0, 462, 2326, 0, 598, 2327, 595,
	594, 592, 593, 0, 666, 0, 0, 0, 0, 0,
	0, 559, 572, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 622, 0, 571, 0, 0, 617,
	596, 600, 0, 0, 0, 0, 258, 390, 407, 269,
	381, 420, 274, 388, 264, 353, 377, 0, 0, 260,
	405, 387, 335, 313, 314, 259, 0, 372, 292, 305,
	289, 351, 597, 620, 624, 288, 688, 618, 415, 262,
	0, 414, 350, 401, 406, 336, 330, 261, 403, 334,
	329, 317, 296, 689, 318, 319, 309, 362, 328, 363,
	310, 340, 339, 341, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 417, 0,
	0, 672, 0, 0, 0, 389, 0, 0, 320, 0,
	0, 0, 619, 0, 375, 356, 685, 560, 0, 373,
	326, 402, 364, 408, 391, 416, 369, 365, 253, 392,
	291, 337, 265, 267, 286, 293, 295, 297, 298, 346,
	347, 359, 380, 393, 394, 395, 290, 275, 374, 276,
	307, 277, 254, 282, 280, 283, 382, 284, 256, 360,
	399, 0, 303, 370, 333, 257, 332, 361, 398, 397,
	266, 424, 430, 431, 0, 0, 436, 0, 0, 0,
	445, 450, 451, 452, 454, 455, 456, 457, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	429, 321, 322, 323, 301, 250, 251, 474, 670, 352,
	0, 0, 0, 0, 684, 665, 667, 668, 671, 675,
	676, 677, 678, 679, 681, 683, 687, 473, 0, 0,
	0, 0, 0, 470, 358, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	410, 422, 439, 442, 0, 0, 0, 0, 255, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 623, 0,
	0, 342, 343, 344, 345, 673, 0, 273, 440, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 300, 306, 453, 308, 272, 357, 302, 419, 315,
	0, 446, 0, 447, 0, 0, 0, 0, 349, 311,
	312, 383, 316, 327, 371, 418, 355, 376, 270, 409,
	384, 331, 0, 0, 695, 669, 694, 696, 697, 693,
	698, 699, 680, 579, 0, 627, 691, 690, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 281, 248, 278, 279, 285, 471, 468, 400,
	472, 0, 252, 0, 325, 0, 366, 299, 0, 0,
	658, 634, 635, 636, 577, 637, 631, 632, 633, 659,
	625, 655, 656, 604, 628, 638, 654, 639, 657, 660,
	661, 700, 701, 645, 629, 220, 702, 642, 662, 653,
	652, 640, 626, 663, 664, 611, 606, 643, 644, 630,
	646, 647, 648, 578, 607, 608, 609, 610, 0, 0,
	0, 425, 426, 427, 449, 411, 621, 469, 0, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 649, 1428, 475, 463, 0, 575, 0,
	0, 0, 294, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	460, 0, 0, 612, 0, 464, 385, 338, 0, 0,
	0, 0, 674, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 568, 0, 0, 602, 651, 650,
	589, 599, 0, 0, 268, 197, 461, 0, 462, 590,
	0, 598, 591, 595, 594, 592, 593, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 572, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 622, 0,
	571, 0, 0, 617, 596, 600, 0, 0, 0, 0,
	258, 390, 407, 269, 381, 420, 274, 388, 264, 353,
	377, 0, 0, 260, 405, 387, 335, 313, 314, 259,
	0, 372, 292, 305, 289, 351, 597, 620, 624, 288,
	688, 618, 415, 262, 0, 414, 350, 401, 406, 336,
	330, 261, 403, 334, 329, 317, 296, 689, 318, 319,
	309, 362, 328, 363, 310, 340, 339, 341, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 417, 0, 0, 672, 0, 0, 0, 389,
	0, 0, 320, 0, 0, 0, 619, 0, 375, 356,
	685, 0, 0, 373, 326, 402, 364, 408, 391, 416,
	369, 365, 253, 392, 291, 337, 265, 267, 286, 293,
	295, 297, 298, 346, 347, 359, 380, 393, 394, 395,
	290, 275, 374, 276, 307, 277, 254, 282, 280, 283,
	382, 284, 256, 360, 399, 0, 303, 370, 333, 257,
	332, 361, 398, 397, 266, 424, 1429, 1430, 0, 0,
	436, 0, 0, 0, 445, 450, 451, 452, 454, 455,
	456, 457, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 429, 321, 322, 323, 301, 250,
	251, 474, 670, 352, 0, 0, 0, 0, 684, 665,
	667, 668, 671, 675, 676, 677, 678, 679, 681, 683,
	687, 473, 0, 0, 0, 0, 0, 470, 358, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 410, 422, 439, 442, 0, 0,
	0, 0, 255, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 623, 0, 0, 342, 343, 344, 345, 673,
	0, 273, 440, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 435, 300, 306, 453, 308, 272,
	357, 302, 419, 315, 0, 446, 0, 447, 0, 0,
	0, 0, 349, 311, 312, 383, 316, 327, 371, 418,
	355, 376, 270, 409, 384, 331, 0, 0, 695, 669,
	694, 696, 697, 693, 698, 699, 680, 579, 0, 627,
	691, 690, 692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 281, 248, 278, 279,
	285, 471, 468, 400, 472, 0, 252, 0, 325, 0,
	366, 299, 0, 0, 658, 634, 635, 636, 577, 637,
	631, 632, 633, 659, 625, 655, 656, 604, 628, 638,
	654, 639, 657, 660, 661, 700, 701, 645, 629, 220,
	702, 642, 662, 653, 652, 640, 626, 663, 664, 611,
	606, 643, 644, 630, 646, 647, 648, 578, 607, 608,
	609, 610, 0, 0, 0, 425, 426, 427, 449, 411,
	621, 469, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 649, 0, 475,
	463, 0, 575, 0, 0, 0, 294, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 0, 460, 0, 0, 612, 0, 464,
	385, 338, 0, 0, 0, 0, 674, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 651, 650, 589, 599, 0, 0, 268, 197,
	461, 0, 462, 590, 0, 598, 591, 595, 594, 592,
	593, 0, 666, 0, 0, 0, 0, 0, 0, 559,
	572, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 570, 0, 0,
	0, 0, 622, 0, 571, 0, 0, 617, 596, 600,
	0, 0, 0, 0, 258, 390, 407, 269, 381, 420,
	274, 388, 264, 353, 377, 0, 0, 260, 405, 387,
	335, 313, 314, 259, 0, 372, 292, 305, 289, 351,
	597, 620, 624, 288, 688, 618, 415, 262, 0, 414,
	350, 401, 406, 336, 330, 261, 403, 334, 329, 317,
	296, 689, 318, 319, 309, 362, 328, 363, 310, 340,
	339, 341, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 417, 0, 0, 672,
	0, 0, 0, 389, 0, 0, 320, 0, 0, 0,
	619, 0, 375, 356, 685, 560, 0, 373, 326, 402,
	364, 408, 391, 416, 369, 365, 253, 392, 291, 337,
	265, 267, 286, 293, 295, 297, 298, 346, 347, 359,
	380, 393, 394, 395, 290, 275, 374, 276, 307, 277,
	254, 282, 280, 283, 382, 284, 256, 360, 399, 0,
	303, 370, 333, 257, 332, 361, 398, 397, 266, 424,
	430, 431, 0, 0, 436, 0, 0, 0, 445, 450,
	451, 452, 454, 455, 456, 457, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 429, 321,
	322, 323, 301, 250, 251, 474, 670, 352, 0, 0,
	0, 0, 684, 665, 667, 668, 671, 675, 676, 677,
	678, 679, 681, 683, 687, 473, 0, 0, 0, 0,
	0, 470, 358, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 410, 422,
	439, 442, 0, 0, 0, 0, 255, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 623, 0, 0, 342,
	343, 344, 345, 673, 0, 273, 440, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 300,
	306, 453, 308, 272, 357, 302, 419, 315, 0, 446,
	0, 447, 0, 0, 0, 0, 349, 311, 312, 383,
	316, 327, 371, 418, 355, 376, 270, 409, 384, 331,
	0, 0, 695, 669, 694, 696, 697, 693, 698, 699,
	680, 579, 0, 627, 691, 690, 692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	281, 248, 278, 279, 285, 471, 468, 400, 472, 0,
	252, 0, 325, 0, 366, 299, 0, 0, 658, 634,
	635, 636, 577, 637, 631, 632, 633, 659, 625, 655,
	656, 604, 628, 638, 654, 639, 657, 660, 661, 700,
	701, 645, 629, 220, 702, 642, 662, 653, 652, 640,
	626, 663, 664, 611, 606, 643, 644, 630, 646, 647,
	648, 578, 607, 608, 609, 610, 0, 0, 0, 425,
	426, 427, 449, 411, 621, 469, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 475, 463, 0, 575, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 612, 0, 464, 385, 338, 0, 0, 0, 0,
	674, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 568, 0, 0, 602, 651, 650, 589, 599,
	0, 0, 268, 197, 461, 0, 462, 590, 0, 598,
	591, 595, 594, 592, 593, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 570, 0, 0, 0, 0, 622, 0, 571, 0,
	0, 617, 596, 600, 0, 0, 0, 0, 258, 390,
	407, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 260, 405, 387, 335, 313, 314, 259, 0, 372,
	292, 305, 289, 351, 597, 620, 624, 288, 688, 618,
	415, 262, 0, 414, 350, 401, 406, 336, 330, 261,
	403, 334, 329, 317, 296, 689, 318, 319, 309, 362,
	328, 363, 310, 340, 339, 341, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	417, 0, 0, 672, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 619, 0, 375, 356, 685, 0,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	670, 352, 0, 0, 0, 0, 684, 665, 667, 668,
	671, 675, 676, 677, 678, 679, 681, 683, 687, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	623, 0, 0, 342, 343, 344, 345, 673, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 695, 669, 694, 696,
	697, 693, 698, 699, 680, 579, 0, 627, 691, 690,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 0, 325, 0, 366, 299,
	0, 0, 658, 634, 635, 636, 577, 637, 631, 632,
	633, 659, 625, 655, 656, 604, 628, 638, 654, 639,
	657, 660, 661, 700, 701, 645, 629, 220, 702, 642,
	662, 653, 652, 640, 626, 663, 664, 611, 606, 643,
	644, 630, 646, 647, 648, 578, 607, 608, 609, 610,
	0, 0, 0, 425, 426, 427, 449, 411, 0, 469,
	0, 174, 51, 163, 138, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 0, 649, 0, 475, 463, 164,
	0, 0, 0, 0, 0, 0, 156, 0, 294, 0,
	165, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 460, 0, 0, 115,
	0, 464, 385, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	168, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 461, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 390, 407, 269,
	381, 420, 274, 388, 264, 353, 377, 0, 0, 260,
	405, 387, 335, 313, 314, 259, 0, 372, 292, 305,
	289, 351, 0, 404, 432, 288, 423, 0, 415, 262,
	0, 414, 350, 401, 406, 336, 330, 261, 403, 334,
	329, 317, 296, 448, 318, 319, 309, 362, 328, 363,
	310, 340, 339, 341, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 137, 162, 172,
	0, 101, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 189, 0, 0, 0, 389, 0, 0, 320, 161,
	155, 154, 433, 0, 375, 356, 57, 0, 0, 373,
	326, 402, 364, 408, 391, 416, 369, 365, 253, 392,
	291, 337, 265, 267, 286, 293, 295, 297, 298, 346,
	347, 359, 380, 393, 394, 395, 290, 275, 374, 276,
	307, 277, 254, 282, 280, 283, 382, 284, 256, 360,
	399, 0, 303, 370, 333, 257, 332, 361, 398, 397,
	266, 424, 430, 431, 0, 0, 436, 157, 158, 159,
	445, 450, 451, 452, 454, 455, 456, 457, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	429, 321, 322, 323, 301, 250, 251, 412, 287, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 428, 192, 0, 0, 458, 200, 0, 0,
	0, 160, 0, 201, 358, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	410, 422, 439, 442, 0, 0, 0, 0, 255, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 437, 0,
	0, 342, 343, 344, 345, 304, 0, 273, 440, 368,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 0, 434,
	435, 300, 306, 453, 308, 272, 357, 302, 419, 315,
	0, 446, 0, 447, 0, 0, 0, 0, 349, 311,
	312, 383, 316, 327, 371, 418, 355, 376, 270, 409,
	384, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 281, 248, 278, 279, 285, 367, 263, 400,
	378, 0, 252, 0, 325, 139, 366, 299, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 354,
	0, 425, 426, 427, 449, 411, 0, 202, 39, 190,
	193, 195, 194, 0, 49, 0, 294, 0, 5, 324,
	0, 0, 0, 0, 118, 203, 463, 0, 0, 0,
	0, 0, 459, 0, 460, 0, 0, 0, 0, 464,
	385, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1079, 0,
	0, 196, 0, 0, 589, 599, 0, 0, 268, 197,
	461, 0, 462, 590, 0, 598, 591, 595, 594, 592,
	593, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	0, 0, 0, 0, 258, 390, 407, 269, 381, 420,
	274, 388, 264, 353, 377, 0, 0, 260, 405, 387,
	335, 313, 314, 259, 0, 372, 292, 305, 289, 351,
	597, 404, 432, 288, 423, 0, 415, 262, 0, 414,
	350, 401, 406, 336, 330, 261, 403, 334, 329, 317,
	296, 448, 318, 319, 309, 362, 328, 363, 310, 340,
	339, 341, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 320, 0, 0, 0,
	433, 0, 375, 356, 0, 0, 0, 373, 326, 402,
	364, 408, 391, 416, 369, 365, 253, 392, 291, 337,
	265, 267, 286, 293, 295, 297, 298, 346, 347, 359,
	380, 393, 394, 395, 290, 275, 374, 276, 307, 277,
	254, 282, 280, 283, 382, 284, 256, 360, 399, 0,
	303, 370, 333, 257, 332, 361, 398, 397, 266, 424,
	430, 431, 0, 0, 436, 0, 0, 0, 445, 450,
	451, 452, 454, 455, 456, 457, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 429, 321,
	322, 323, 301, 250, 251, 474, 287, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	428, 0, 0, 0, 458, 473, 0, 0, 0, 0,
	0, 470, 358, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 410, 422,
	439, 442, 0, 0, 0, 0, 255, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 437, 0, 0, 342,
	343, 344, 345, 304, 0, 273, 440, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 300,
	306, 453, 308, 272, 357, 302, 419, 315, 0, 446,
	0, 447, 0, 0, 0, 0, 349, 311, 312, 383,
	316, 327, 371, 418, 355, 376, 270, 409, 384, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	281, 248, 278, 279, 285, 471, 468, 400, 472, 0,
	252, 0, 325, 0, 366, 299, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 0, 0, 0, 425,
	426, 427, 449, 411, 0, 469, 174, 51, 163, 138,
	0, 0, 0, 0, 0, 0, 354, 492, 0, 0,
	0, 0, 0, 475, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 460, 0, 0, 0, 0, 464, 385, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 461, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 390, 407, 269, 381, 420, 274, 388, 264,
	353, 377, 0, 0, 260, 405, 387, 335, 313, 314,
	259, 0, 372, 292, 305, 289, 351, 0, 404, 432,
	288, 423, 0, 415, 262, 0, 414, 350, 401, 406,
	336, 330, 261, 403, 334, 329, 317, 296, 448, 318,
	319, 309, 362, 328, 363, 310, 340, 339, 341, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 320, 0, 0, 0, 433, 0, 375,
	356, 0, 0, 0, 373, 326, 402, 364, 408, 391,
	416, 369, 365, 253, 392, 291, 337, 265, 267, 286,
	293, 295, 297, 298, 346, 347, 359, 380, 393, 394,
	395, 290, 275, 374, 276, 307, 277, 254, 282, 280,
	283, 382, 284, 256, 360, 399, 0, 303, 370, 333,
	257, 332, 361, 398, 397, 266, 424, 430, 431, 0,
	0, 436, 0, 0, 0, 445, 450, 451, 452, 454,
	455, 456, 457, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 429, 321, 322, 323, 301,
	250, 251, 474, 287, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 428, 0, 0,
	0, 458, 473, 0, 0, 0, 0, 0, 470, 358,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 410, 422, 439, 442, 0,
	0, 0, 0, 255, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 437, 0, 0, 342, 343, 344, 345,
	493, 495, 273, 440, 368, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 300, 306, 453, 308,
	272, 357, 302, 419, 315, 0, 446, 0, 447, 0,
	0, 0, 0, 349, 311, 312, 383, 316, 327, 371,
	418, 355, 376, 270, 409, 384, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 281, 248, 278,
	279, 285, 471, 468, 400, 472, 0, 252, 0, 325,
	139, 366, 299, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 354, 0, 0, 425, 426, 427, 449,
	411, 905, 469, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	475, 463, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 0, 0, 464, 385, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 461, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 891, 0, 0, 0, 0, 0, 0, 258, 390,
	407, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 2178, 2180, 2181, 2182, 2183, 2184, 2185, 0, 2190,
	2186, 2187, 2188, 2189, 0, 2173, 2174, 2175, 2176, 889,
	2157, 2179, 0, 2158, 350, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2170, 2171, 2168, 2169, 2177, 362,
	328, 363, 310, 340, 339, 341, 916, 918, 920, 922,
	925, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 2172, 0, 375, 356, 0, 0,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	287, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 428, 0, 0, 0, 458, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	437, 0, 0, 342, 343, 344, 345, 304, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 915, 325, 0, 366, 299,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	354, 0, 0, 425, 426, 427, 449, 411, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 475, 463, 0,
	0, 0, 0, 459, 0, 460, 0, 0, 0, 0,
	464, 385, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 461, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 2030, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 390, 407, 269, 381,
	420, 274, 388, 264, 353, 377, 0, 0, 260, 405,
	387, 335, 313, 314, 259, 0, 372, 292, 305, 289,
	351, 0, 404, 432, 288, 423, 0, 415, 262, 0,
	414, 350, 401, 406, 336, 330, 261, 403, 334, 329,
	317, 296, 448, 318, 319, 309, 362, 328, 363, 310,
	340, 339, 341, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 417, 0, 0,
	0, 2029, 0, 2028, 389, 2026, 2031, 320, 0, 0,
	0, 433, 0, 375, 356, 0, 0, 0, 373, 326,
	402, 364, 408, 391, 416, 369, 365, 253, 392, 291,
	337, 265, 267, 286, 293, 295, 297, 298, 346, 347,
	359, 380, 393, 394, 395, 290, 275, 374, 276, 307,
	277, 254, 282, 280, 283, 382, 284, 256, 360, 399,
	2032, 303, 370, 333, 257, 332, 361, 398, 397, 266,
	424, 430, 431, 0, 0, 436, 0, 0, 0, 445,
	450, 451, 452, 454, 455, 456, 457, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 429,
	321, 322, 323, 301, 250, 251, 474, 287, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 428, 0, 0, 0, 458, 473, 0, 0, 0,
	0, 0, 470, 358, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 410,
	422, 439, 442, 0, 0, 0, 0, 255, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 437, 0, 0,
	342, 343, 344, 345, 304, 0, 273, 440, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	300, 306, 453, 308, 272, 357, 302, 419, 315, 0,
	446, 0, 447, 0, 0, 0, 0, 349, 311, 312,
	383, 316, 327, 371, 418, 355, 376, 270, 409, 384,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 281, 248, 278, 279, 285, 471, 468, 400, 472,
	0, 252, 0, 325, 0, 366, 299, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 354, 0, 0,
	425, 426, 427, 449, 411, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 475, 463, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 0, 0, 464, 385, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 461, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 2051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 0, 404,
	432, 288, 423, 0, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 448,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 417, 0, 0, 0, 2055, 2053,
	0, 389, 0, 2054, 320, 0, 0, 0, 433, 0,
	375, 356, 0, 0, 2048, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 287, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 428, 0,
	0, 0, 458, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 437, 0, 0, 342, 343, 344,
	345, 304, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 354, 0, 0, 425, 426, 427,
	449, 411, 0, 469, 0, 0, 1783, 0, 0, 0,
	0, 294, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 475, 463, 0, 0, 0, 0, 459, 0, 460,
	0, 0, 0, 0, 464, 385, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1784,
	0, 0, 0, 268, 197, 461, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	1012, 1013, 1014, 1011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	390, 407, 269, 381, 420, 274, 388, 264, 353, 377,
	0, 0, 260, 405, 387, 335, 313, 314, 259, 0,
	372, 292, 305, 289, 351, 0, 404, 432, 288, 423,
	0, 415, 262, 0, 414, 350, 401, 406, 336, 330,
	261, 403, 334, 329, 317, 296, 448, 318, 319, 309,
	362, 328, 363, 310, 340, 339, 341, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 320, 0, 0, 0, 433, 0, 375, 356, 0,
	0, 0, 373, 326, 402, 364, 408, 391, 416, 369,
	365, 253, 392, 291, 337, 265, 267, 286, 293, 295,
	297, 298, 346, 347, 359, 380, 393, 394, 395, 290,
	275, 374, 276, 307, 277, 254, 282, 280, 283, 382,
	284, 256, 360, 399, 0, 303, 370, 333, 257, 332,
	361, 398, 397, 266, 424, 430, 431, 0, 0, 436,
	0, 0, 0, 445, 450, 451, 452, 454, 455, 456,
	457, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 429, 321, 322, 323, 301, 250, 251,
	474, 287, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 428, 0, 0, 0, 458,
	473, 0, 0, 0, 0, 0, 470, 358, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 410, 422, 439, 442, 0, 0, 0,
	0, 255, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 437, 0, 0, 342, 343, 344, 345, 304, 0,
	273, 440, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 435, 300, 306, 453, 308, 272, 357,
	302, 419, 315, 0, 446, 0, 447, 0, 0, 0,
	0, 349, 311, 312, 383, 316, 327, 371, 418, 355,
	376, 270, 409, 384, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 281, 248, 278, 279, 285,
	471, 468, 400, 472, 0, 252, 0, 325, 0, 366,
	299, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 354, 0, 0, 425, 426, 427, 449, 411, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 294, 822,
	0, 324, 0, 0, 0, 0, 0, 0, 475, 463,
	0, 0, 0, 0, 459, 0, 460, 0, 0, 0,
	0, 464, 385, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 829, 830, 0, 0, 0, 0,
	268, 197, 461, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 390, 817, 269,
	381, 420, 274, 388, 264, 353, 377, 0, 0, 260,
	405, 387, 335, 313, 314, 259, 0, 372, 292, 305,
	289, 351, 0, 404, 432, 288, 423, 807, 415, 262,
	806, 414, 350, 401, 406, 336, 330, 261, 403, 334,
	329, 317, 296, 448, 318, 319, 309, 362, 328, 363,
	310, 340, 339, 341, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 320, 0,
	0, 0, 433, 0, 375, 356, 0, 0, 0, 373,
	326, 402, 364, 408, 391, 416, 820, 365, 253, 392,
	291, 337, 265, 267, 286, 293, 295, 297, 298, 346,
	347, 359, 380, 393, 394, 395, 290, 275, 374, 276,
	307, 277, 254, 282, 280, 283, 382, 284, 256, 360,
	399, 0, 303, 370, 333, 257, 332, 361, 398, 397,
	266, 424, 430, 431, 0, 0, 436, 0, 0, 0,
	445, 450, 451, 452, 454, 455, 456, 457, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	429, 321, 322, 323, 301, 250, 251, 474, 287, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 428, 0, 0, 0, 458, 473, 0, 0,
	0, 0, 0, 470, 358, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	410, 422, 439, 442, 0, 0, 0, 0, 255, 441,
	0, 0, 0, 0, 0, 0, 821, 0, 413, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 824, 0,
	0, 342, 343, 344, 345, 304, 0, 273, 440, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 300, 306, 453, 308, 272, 357, 302, 419, 315,
	0, 446, 0, 447, 0, 0, 0, 0, 831, 818,
	827, 819, 316, 327, 371, 418, 355, 376, 270, 409,
	384, 828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 281, 248, 278, 279, 285, 471, 468, 400,
	472, 0, 252, 0, 325, 0, 366, 299, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 354, 0,
	0, 425, 426, 427, 449, 411, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 475, 463, 0, 0, 0,
	0, 459, 0, 460, 0, 0, 0, 0, 464, 385,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 461,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 390, 407, 269, 381, 420, 274,
	388, 264, 353, 377, 0, 0, 260, 405, 387, 335,
	313, 314, 259, 0, 372, 292, 305, 289, 351, 0,
	404, 432, 288, 423, 0, 415, 262, 0, 414, 350,
	401, 406, 336, 330, 261, 403, 334, 329, 317, 296,
	448, 318, 319, 309, 362, 328, 363, 310, 340, 339,
	341, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2050, 417, 0, 0, 0, 2055,
	2053, 0, 389, 0, 2054, 320, 0, 0, 0, 433,
	0, 375, 356, 0, 0, 0, 373, 326, 402, 364,
	408, 391, 416, 369, 365, 253, 392, 291, 337, 265,
	267, 286, 293, 295, 297, 298, 346, 347, 359, 380,
	393, 394, 395, 290, 275, 374, 276, 307, 277, 254,
	282, 280, 283, 382, 284, 256, 360, 399, 0, 303,
	370, 333, 257, 332, 361, 398, 397, 266, 424, 430,
	431, 0, 0, 436, 0, 0, 0, 445, 450, 451,
	452, 454, 455, 456, 457, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 429, 321, 322,
	323, 301, 250, 251, 474, 287, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 428,
	0, 0, 0, 458, 473, 0, 0, 0, 0, 0,
	470, 358, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 410, 422, 439,
	442, 0, 0, 0, 0, 255, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 437, 0, 0, 342, 343,
	344, 345, 304, 0, 273, 440, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 435, 300, 306,
	453, 308, 272, 357, 302, 419, 315, 0, 446, 0,
	447, 0, 0, 0, 0, 349, 311, 312, 383, 316,
	327, 371, 418, 355, 376, 270, 409, 384, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 281,
	248, 278, 279, 285, 471, 468, 400, 472, 0, 252,
	0, 325, 0, 366, 299, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 174, 0, 0,
	249, 244, 245, 246, 247, 0, 0, 354, 425, 426,
	427, 449, 411, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 324, 0, 0,
	0, 0, 475, 463, 0, 0, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 115, 0, 464, 385, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 1827, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 461, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 0, 404,
	432, 288, 423, 0, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 448,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 433, 0,
	375, 356, 0, 0, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 287, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 428, 0,
	0, 0, 458, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 437, 0, 0, 342, 343, 344,
	345, 304, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 139, 366, 299, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 174, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 354, 425, 426, 427,
	449, 411, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 324, 0, 0, 0,
	0, 475, 463, 0, 0, 0, 0, 0, 0, 459,
	0, 460, 0, 0, 115, 0, 464, 385, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 1818, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 461, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 390, 407, 269, 381, 420, 274, 388, 264,
	353, 377, 0, 0, 260, 405, 387, 335, 313, 314,
	259, 0, 372, 292, 305, 289, 351, 0, 404, 432,
	288, 423, 0, 415, 262, 0, 414, 350, 401, 406,
	336, 330, 261, 403, 334, 329, 317, 296, 448, 318,
	319, 309, 362, 328, 363, 310, 340, 339, 341, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 320, 0, 0, 0, 433, 0, 375,
	356, 0, 0, 0, 373, 326, 402, 364, 408, 391,
	416, 369, 365, 253, 392, 291, 337, 265, 267, 286,
	293, 295, 297, 298, 346, 347, 359, 380, 393, 394,
	395, 290, 275, 374, 276, 307, 277, 254, 282, 280,
	283, 382, 284, 256, 360, 399, 0, 303, 370, 333,
	257, 332, 361, 398, 397, 266, 424, 430, 431, 0,
	0, 436, 0, 0, 0, 445, 450, 451, 452, 454,
	455, 456, 457, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 429, 321, 322, 323, 301,
	250, 251, 474, 287, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 428, 0, 0,
	0, 458, 473, 0, 0, 0, 0, 0, 470, 358,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 410, 422, 439, 442, 0,
	0, 0, 0, 255, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 437, 0, 0, 342, 343, 344, 345,
	304, 0, 273, 440, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 300, 306, 453, 308,
	272, 357, 302, 419, 315, 0, 446, 0, 447, 0,
	0, 0, 0, 349, 311, 312, 383, 316, 327, 371,
	418, 355, 376, 270, 409, 384, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 281, 248, 278,
	279, 285, 471, 468, 400, 472, 0, 252, 0, 325,
	139, 366, 299, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 174, 0, 0, 249, 244,
	245, 246, 247, 0, 0, 354, 425, 426, 427, 449,
	411, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 324, 0, 0, 0, 0,
	475, 463, 0, 0, 0, 0, 0, 0, 459, 0,
	460, 0, 0, 115, 0, 464, 385, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 461, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 390, 407, 269, 381, 420, 274, 388, 264, 353,
	377, 0, 0, 260, 405, 387, 335, 313, 314, 259,
	0, 372, 292, 305, 289, 351, 0, 404, 432, 288,
	423, 0, 415, 262, 0, 414, 350, 401, 406, 336,
	330, 261, 403, 334, 329, 317, 296, 448, 318, 319,
	309, 362, 328, 363, 310, 340, 339, 341, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 320, 0, 0, 0, 433, 0, 375, 356,
	0, 0, 0, 373, 326, 402, 364, 408, 391, 416,
	369, 365, 253, 392, 291, 337, 265, 267, 286, 293,
	295, 297, 298, 346, 347, 359, 380, 393, 394, 395,
	290, 275, 374, 276, 307, 277, 254, 282, 280, 283,
	382, 284, 256, 360, 399, 0, 303, 370, 333, 257,
	332, 361, 398, 397, 266, 424, 430, 431, 0, 0,
	436, 0, 0, 0, 445, 450, 451, 452, 454, 455,
	456, 457, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 429, 321, 322, 323, 301, 250,
	251, 474, 287, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 428, 0, 0, 0,
	458, 473, 0, 0, 0, 0, 0, 470, 358, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 410, 422, 439, 442, 0, 0,
	0, 0, 255, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 437, 0, 0, 342, 343, 344, 345, 304,
	0, 273, 440, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 435, 300, 306, 453, 308, 272,
	357, 302, 419, 315, 0, 446, 0, 447, 0, 0,
	0, 0, 349, 311, 312, 383, 316, 327, 371, 418,
	355, 376, 270, 409, 384, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 281, 248, 278, 279,
	285, 471, 468, 400, 472, 0, 252, 0, 325, 139,
	366, 299, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 354, 0, 0, 425, 426, 427, 449, 411,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 475,
	463, 0, 0, 0, 0, 459, 0, 460, 0, 0,
	0, 0, 464, 385, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 829, 830, 0, 0, 0,
	0, 268, 197, 461, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 390, 407,
	269, 381, 420, 274, 388, 264, 353, 377, 0, 0,
	260, 405, 387, 335, 313, 314, 259, 0, 372, 292,
	305, 289, 351, 0, 404, 432, 288, 423, 807, 415,
	262, 806, 414, 350, 401, 406, 336, 330, 261, 403,
	334, 329, 317, 296, 448, 318, 319, 309, 362, 328,
	363, 310, 340, 339, 341, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 320,
	0, 0, 0, 433, 0, 375, 356, 0, 0, 0,
	373, 326, 402, 364, 408, 391, 416, 369, 365, 253,
	392, 291, 337, 265, 267, 286, 293, 295, 297, 298,
	346, 347, 359, 380, 393, 394, 395, 290, 275, 374,
	276, 307, 277, 254, 282, 280, 283, 382, 284, 256,
	360, 399, 0, 303, 370, 333, 257, 332, 361, 398,
	397, 266, 424, 430, 431, 0, 0, 436, 0, 0,
	0, 445, 450, 451, 452, 454, 455, 456, 457, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 429, 321, 322, 323, 301, 250, 251, 474, 287,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 428, 0, 0, 0, 458, 473, 0,
	0, 0, 0, 0, 470, 358, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 410, 422, 439, 442, 0, 0, 0, 0, 255,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 437,
	0, 0, 342, 343, 344, 345, 304, 0, 273, 440,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 435, 300, 306, 453, 308, 272, 357, 302, 419,
	315, 0, 446, 0, 447, 0, 0, 0, 0, 831,
	1736, 827, 1737, 316, 327, 371, 418, 355, 376, 270,
	409, 384, 828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 281, 248, 278, 279, 285, 471, 468,
	400, 472, 0, 252, 0, 325, 0, 366, 299, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 0,
	354, 0, 425, 426, 427, 449, 411, 0, 469, 2514,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	324, 0, 0, 0, 0, 0, 475, 463, 0, 0,
	0, 0, 0, 459, 0, 460, 0, 0, 0, 0,
	464, 385, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 461, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 390, 407, 269, 381,
	420, 274, 388, 264, 353, 377, 0, 0, 260, 405,
	387, 335, 313, 314, 259, 0, 372, 292, 305, 289,
	351, 0, 404, 432, 288, 423, 0, 415, 262, 0,
	414, 350, 401, 406, 336, 330, 261, 403, 334, 329,
	317, 296, 448, 318, 319, 309, 362, 328, 363, 310,
	340, 339, 341, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 2517, 0,
	0, 2516, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 320, 0, 0,
	0, 433, 0, 375, 356, 0, 0, 0, 373, 326,
	402, 364, 408, 391, 416, 369, 365, 253, 392, 291,
	337, 265, 267, 286, 293, 295, 297, 298, 346, 347,
	359, 380, 393, 394, 395, 290, 275, 374, 276, 307,
	277, 254, 282, 280, 283, 382, 284, 256, 360, 399,
	0, 303, 370, 333, 257, 332, 361, 398, 397, 266,
	424, 430, 431, 0, 0, 436, 0, 0, 0, 445,
	450, 451, 452, 454, 455, 456, 457, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 429,
	321, 322, 323, 301, 250, 251, 474, 287, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 428, 0, 0, 0, 458, 473, 0, 0, 0,
	0, 0, 470, 358, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 410,
	422, 439, 442, 0, 0, 0, 0, 255, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 437, 0, 0,
	342, 343, 344, 345, 304, 0, 273, 440, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	300, 306, 453, 308, 272, 357, 302, 419, 315, 0,
	446, 0, 447, 0, 0, 0, 0, 349, 311, 312,
	383, 316, 327, 371, 418, 355, 376, 270, 409, 384,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 281, 248, 278, 279, 285, 471, 468, 400, 472,
	0, 252, 0, 325, 0, 366, 299, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 354, 0, 0,
	425, 426, 427, 449, 411, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 294, 1266, 0, 324, 0, 0,
	0, 0, 0, 0, 475, 463, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 0, 0, 464, 385, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1264, 0, 0, 0, 268, 197, 461, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 0, 404,
	432, 288, 423, 0, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 448,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 433, 0,
	375, 356, 0, 0, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 287, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 428, 0,
	0, 0, 458, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 437, 0, 0, 342, 343, 344,
	345, 304, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 354, 0, 0, 425, 426, 427,
	449, 411, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 294, 1260, 0, 324, 0, 0, 0, 0, 0,
	0, 475, 463, 0, 0, 0, 0, 459, 0, 460,
	0, 0, 0, 0, 464, 385, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1264,
	0, 0, 0, 268, 197, 461, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 258,
	390, 407, 269, 381, 420, 274, 388, 264, 353, 377,
	0, 0, 260, 405, 387, 335, 313, 314, 259, 0,
	372, 292, 305, 289, 351, 0, 404, 432, 288, 423,
	0, 415, 262, 0, 414, 350, 401, 406, 336, 330,
	261, 403, 334, 329, 317, 296, 448, 318, 319, 309,
	362, 328, 363, 310, 340, 339, 341, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 320, 0, 0, 0, 433, 0, 375, 356, 0,
	0, 0, 373, 326, 402, 364, 408, 391, 416, 369,
	365, 253, 392, 291, 337, 265, 267, 286, 293, 295,
	297, 298, 346, 347, 359, 380, 393, 394, 395, 290,
	275, 374, 276, 307, 277, 254, 282, 280, 283, 382,
	284, 256, 360, 399, 0, 303, 370, 333, 257, 332,
	361, 398, 397, 266, 424, 430, 431, 0, 0, 436,
	0, 0, 0, 445, 450, 451, 452, 454, 455, 456,
	457, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 429, 321, 322, 323, 301, 250, 251,
	474, 287, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 428, 0, 0, 0, 458,
	473, 0, 0, 0, 0, 0, 470, 358, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 410, 422, 439, 442, 0, 0, 0,
	0, 255, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 437, 0, 0, 342, 343, 344, 345, 304, 0,
	273, 440, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 435, 300, 306, 453, 308, 272, 357,
	302, 419, 315, 0, 446, 0, 447, 0, 0, 0,
	0, 349, 311, 312, 383, 316, 327, 371, 418, 355,
	376, 270, 409, 384, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 281, 248, 278, 279, 285,
	471, 468, 400, 472, 0, 252, 0, 325, 0, 366,
	299, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 354, 0, 0, 425, 426, 427, 449, 411, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 475, 463,
	0, 0, 0, 0, 459, 0, 460, 0, 0, 0,
	0, 464, 385, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3379, 0, 196, 651, 0, 0, 0, 0, 0,
	268, 197, 461, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 390, 407, 269,
	381, 420, 274, 388, 264, 353, 377, 0, 0, 260,
	405, 387, 335, 313, 314, 259, 0, 372, 292, 305,
	289, 351, 0, 404, 432, 288, 423, 0, 415, 262,
	0, 414, 350, 401, 406, 336, 330, 261, 403, 334,
	329, 317, 296, 448, 318, 319, 309, 362, 328, 363,
	310, 340, 339, 341, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 320, 0,
	0, 0, 433, 0, 375, 356, 0, 0, 0, 373,
	326, 402, 364, 408, 391, 416, 369, 365, 253, 392,
	291, 337, 265, 267, 286, 293, 295, 297, 298, 346,
	347, 359, 380, 393, 394, 395, 290, 275, 374, 276,
	307, 277, 254, 282, 280, 283, 382, 284, 256, 360,
	399, 0, 303, 370, 333, 257, 332, 361, 398, 397,
	266, 424, 430, 431, 0, 0, 436, 0, 0, 0,
	445, 450, 451, 452, 454, 455, 456, 457, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	429, 321, 322, 323, 301, 250, 251, 474, 287, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 428, 0, 0, 0, 458, 473, 0, 0,
	0, 0, 0, 470, 358, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	410, 422, 439, 442, 0, 0, 0, 0, 255, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 437, 0,
	0, 342, 343, 344, 345, 304, 0, 273, 440, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 300, 306, 453, 308, 272, 357, 302, 419, 315,
	0, 446, 0, 447, 0, 0, 0, 0, 349, 311,
	312, 383, 316, 327, 371, 418, 355, 376, 270, 409,
	384, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 281, 248, 278, 279, 285, 471, 468, 400,
	472, 0, 252, 0, 325, 0, 366, 299, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 354, 0,
	0, 425, 426, 427, 449, 411, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 475, 463, 0, 0, 0,
	0, 459, 0, 460, 0, 0, 0, 0, 464, 385,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1264, 0, 0, 0, 268, 197, 461,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1262, 0, 0, 0,
	0, 0, 0, 258, 390, 407, 269, 381, 420, 274,
	388, 264, 353, 377, 0, 0, 260, 405, 387, 335,
	313, 314, 259, 0, 372, 292, 305, 289, 351, 0,
	404, 432, 288, 423, 0, 415, 262, 0, 414, 350,
	401, 406, 336, 330, 261, 403, 334, 329, 317, 296,
	448, 318, 319, 309, 362, 328, 363, 310, 340, 339,
	341, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 320, 0, 0, 0, 433,
	0, 375, 356, 0, 0, 0, 373, 326, 402, 364,
	408, 391, 416, 369, 365, 253, 392, 291, 337, 265,
	267, 286, 293, 295, 297, 298, 346, 347, 359, 380,
	393, 394, 395, 290, 275, 374, 276, 307, 277, 254,
	282, 280, 283, 382, 284, 256, 360, 399, 0, 303,
	370, 333, 257, 332, 361, 398, 397, 266, 424, 430,
	431, 0, 0, 436, 0, 0, 0, 445, 450, 451,
	452, 454, 455, 456, 457, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 429, 321, 322,
	323, 301, 250, 251, 474, 287, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 428,
	0, 0, 0, 458, 473, 0, 0, 0, 0, 0,
	470, 358, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 410, 422, 439,
	442, 0, 0, 0, 0, 255, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 437, 0, 0, 342, 343,
	344, 345, 304, 0, 273, 440, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 435, 300, 306,
	453, 308, 272, 357, 302, 419, 315, 0, 446, 0,
	447, 0, 0, 0, 0, 349, 311, 312, 383, 316,
	327, 371, 418, 355, 376, 270, 409, 384, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 281,
	248, 278, 279, 285, 471, 468, 400, 472, 0, 252,
	0, 325, 0, 366, 299, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 354, 0, 0, 425, 426,
	427, 449, 411, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 475, 463, 0, 0, 0, 0, 459, 0,
	460, 0, 0, 0, 0, 464, 385, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1264, 0, 0, 0, 268, 197, 461, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3061, 0, 0, 0, 0, 0, 0,
	258, 390, 407, 269, 381, 420, 274, 388, 264, 353,
	377, 0, 0, 260, 405, 387, 335, 313, 314, 259,
	0, 372, 292, 305, 289, 351, 0, 404, 432, 288,
	423, 0, 415, 262, 0, 414, 350, 401, 406, 336,
	330, 261, 403, 334, 329, 317, 296, 448, 318, 319,
	309, 362, 328, 363, 310, 340, 339, 341, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 320, 0, 0, 0, 433, 0, 375, 356,
	0, 0, 0, 373, 326, 402, 364, 408, 391, 416,
	369, 365, 253, 392, 291, 337, 265, 267, 286, 293,
	295, 297, 298, 346, 347, 359, 380, 393, 394, 395,
	290, 275, 374, 276, 307, 277, 254, 282, 280, 283,
	382, 284, 256, 360, 399, 0, 303, 370, 333, 257,
	332, 361, 398, 397, 266, 424, 430, 431, 0, 0,
	436, 0, 0, 0, 445, 450, 451, 452, 454, 455,
	456, 457, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 429, 321, 322, 323, 301, 250,
	251, 474, 287, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 428, 0, 0, 0,
	458, 473, 0, 0, 0, 0, 0, 470, 358, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 410, 422, 439, 442, 0, 0,
	0, 0, 255, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 437, 0, 0, 342, 343, 344, 345, 304,
	0, 273, 440, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 435, 300, 306, 453, 308, 272,
	357, 302, 419, 315, 0, 446, 0, 447, 0, 0,
	0, 0, 349, 311, 312, 383, 316, 327, 371, 418,
	355, 376, 270, 409, 384, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 281, 248, 278, 279,
	285, 471, 468, 400, 472, 0, 252, 0, 325, 0,
	366, 299, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 354, 0, 0, 425, 426, 427, 449, 411,
	0, 469, 0, 0, 2121, 0, 0, 0, 0, 294,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 475,
	463, 0, 0, 0, 0, 459, 0, 460, 0, 0,
	0, 0, 464, 385, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 2123, 0, 0,
	0, 268, 197, 461, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 390, 407,
	269, 381, 420, 274, 388, 264, 353, 377, 0, 0,
	260, 405, 387, 335, 313, 314, 259, 0, 372, 292,
	305, 289, 351, 0, 404, 432, 288, 423, 0, 415,
	262, 0, 414, 350, 401, 406, 336, 330, 261, 403,
	334, 329, 317, 296, 448, 318, 319, 309, 362, 328,
	363, 310, 340, 339, 341, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 320,
	0, 0, 0, 433, 0, 375, 356, 0, 0, 0,
	373, 326, 402, 364, 408, 391, 416, 369, 365, 253,
	392, 291, 337, 265, 267, 286, 293, 295, 297, 298,
	346, 347, 359, 380, 393, 394, 395, 290, 275, 374,
	276, 307, 277, 254, 282, 280, 283, 382, 284, 256,
	360, 399, 0, 303, 370, 333, 257, 332, 361, 398,
	397, 266, 424, 430, 431, 0, 0, 436, 0, 0,
	0, 445, 450, 451, 452, 454, 455, 456, 457, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 429, 321, 322, 323, 301, 250, 251, 474, 287,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 428, 0, 0, 0, 458, 473, 0,
	0, 0, 0, 0, 470, 358, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 410, 422, 439, 442, 0, 0, 0, 0, 255,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 437,
	0, 0, 342, 343, 344, 345, 304, 0, 273, 440,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 435, 300, 306, 453, 308, 272, 357, 302, 419,
	315, 0, 446, 0, 447, 0, 0, 0, 0, 349,
	311, 312, 383, 316, 327, 371, 418, 355, 376, 270,
	409, 384, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 281, 248, 278, 279, 285, 471, 468,
	400, 472, 0, 252, 0, 325, 0, 366, 299, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 354,
	0, 0, 425, 426, 427, 449, 411, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 294, 2142, 0, 324,
	0, 0, 0, 0, 0, 0, 475, 463, 0, 0,
	0, 0, 459, 0, 460, 0, 0, 0, 0, 464,
	385, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1264, 0, 0, 0, 268, 197,
	461, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 390, 407, 269, 381, 420,
	274, 388, 264, 353, 377, 0, 0, 260, 405, 387,
	335, 313, 314, 259, 0, 372, 292, 305, 289, 351,
	0, 404, 432, 288, 423, 0, 415, 262, 0, 414,
	350, 401, 406, 336, 330, 261, 403, 334, 329, 317,
	296, 448, 318, 319, 309, 362, 328, 363, 310, 340,
	339, 341, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 320, 0, 0, 0,
	433, 0, 375, 356, 0, 0, 0, 373, 326, 402,
	364, 408, 391, 416, 369, 365, 253, 392, 291, 337,
	265, 267, 286, 293, 295, 297, 298, 346, 347, 359,
	380, 393, 394, 395, 290, 275, 374, 276, 307, 277,
	254, 282, 280, 283, 382, 284, 256, 360, 399, 0,
	303, 370, 333, 257, 332, 361, 398, 397, 266, 424,
	430, 431, 0, 0, 436, 0, 0, 0, 445, 450,
	451, 452, 454, 455, 456, 457, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 429, 321,
	322, 323, 301, 250, 251, 474, 287, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	428, 0, 0, 0, 458, 473, 0, 0, 0, 0,
	0, 470, 358, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 410, 422,
	439, 442, 0, 0, 0, 0, 255, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 437, 0, 0, 342,
	343, 344, 345, 304, 0, 273, 440, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 300,
	306, 453, 308, 272, 357, 302, 419, 315, 0, 446,
	0, 447, 0, 0, 0, 0, 349, 311, 312, 383,
	316, 327, 371, 418, 355, 376, 270, 409, 384, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	281, 248, 278, 279, 285, 471, 468, 400, 472, 0,
	252, 0, 325, 0, 366, 299, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 354, 0, 0, 425,
	426, 427, 449, 411, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 475, 463, 0, 0, 0, 0, 459,
	0, 460, 0, 0, 0, 0, 464, 385, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3480, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 461, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 390, 407, 269, 381, 420, 274, 388, 264,
	353, 377, 0, 0, 260, 405, 387, 335, 313, 314,
	259, 0, 372, 292, 305, 289, 351, 0, 404, 432,
	288, 423, 0, 415, 262, 0, 414, 350, 401, 406,
	336, 330, 261, 403, 334, 329, 317, 296, 448, 318,
	319, 309, 362, 328, 363, 310, 340, 339, 341, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 320, 0, 0, 0, 433, 0, 375,
	356, 0, 0, 0, 373, 326, 402, 364, 408, 391,
	416, 369, 365, 253, 392, 291, 337, 265, 267, 286,
	293, 295, 297, 298, 346, 347, 359, 380, 393, 394,
	395, 290, 275, 374, 276, 307, 277, 254, 282, 280,
	283, 382, 284, 256, 360, 399, 0, 303, 370, 333,
	257, 332, 361, 398, 397, 266, 424, 430, 431, 0,
	0, 436, 0, 0, 0, 445, 450, 451, 452, 454,
	455, 456, 457, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 429, 321, 322, 323, 301,
	250, 251, 474, 287, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 428, 0, 0,
	0, 458, 473, 0, 0, 0, 0, 0, 470, 358,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 410, 422, 439, 442, 0,
	0, 0, 0, 255, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 437, 0, 0, 342, 343, 344, 345,
	304, 0, 273, 440, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 300, 306, 453, 308,
	272, 357, 302, 419, 315, 0, 446, 0, 447, 0,
	0, 0, 0, 349, 311, 312, 383, 316, 327, 371,
	418, 355, 376, 270, 409, 384, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 281, 248, 278,
	279, 285, 471, 468, 400, 472, 0, 252, 0, 325,
	0, 366, 299, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 354, 0, 0, 425, 426, 427, 449,
	411, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	475, 463, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 0, 0, 464, 385, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 651, 0, 0, 0,
	0, 0, 268, 197, 461, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 390,
	407, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 260, 405, 387, 335, 313, 314, 259, 0, 372,
	292, 305, 289, 351, 0, 404, 432, 288, 423, 0,
	415, 262, 0, 414, 350, 401, 406, 336, 330, 261,
	403, 334, 329, 317, 296, 448, 318, 319, 309, 362,
	328, 363, 310, 340, 339, 341, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 433, 0, 375, 356, 0, 0,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	287, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 428, 0, 0, 0, 458, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	437, 0, 0, 342, 343, 344, 345, 304, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 0, 325, 0, 366, 299,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	354, 0, 0, 425, 426, 427, 449, 411, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 475, 463, 0,
	0, 0, 0, 459, 0, 460, 0, 0, 0, 0,
	464, 385, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3398,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 461, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 390, 407, 269, 381,
	420, 274, 388, 264, 353, 377, 0, 0, 260, 405,
	387, 335, 313, 314, 259, 0, 372, 292, 305, 289,
	351, 0, 404, 432, 288, 423, 0, 415, 262, 0,
	414, 350, 401, 406, 336, 330, 261, 403, 334, 329,
	317, 296, 448, 318, 319, 309, 362, 328, 363, 310,
	340, 339, 341, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 320, 0, 0,
	0, 433, 0, 375, 356, 0, 0, 0, 373, 326,
	402, 364, 408, 391, 416, 369, 365, 253, 392, 291,
	337, 265, 267, 286, 293, 295, 297, 298, 346, 347,
	359, 380, 393, 394, 395, 290, 275, 374, 276, 307,
	277, 254, 282, 280, 283, 382, 284, 256, 360, 399,
	0, 303, 370, 333, 257, 332, 361, 398, 397, 266,
	424, 430, 431, 0, 0, 436, 0, 0, 0, 445,
	450, 451, 452, 454, 455, 456, 457, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 429,
	321, 322, 323, 301, 250, 251, 474, 287, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 428, 0, 0, 0, 458, 473, 0, 0, 0,
	0, 0, 470, 358, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 410,
	422, 439, 442, 0, 0, 0, 0, 255, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 437, 0, 0,
	342, 343, 344, 345, 304, 0, 273, 440, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	300, 306, 453, 308, 272, 357, 302, 419, 315, 0,
	446, 0, 447, 0, 0, 0, 0, 349, 311, 312,
	383, 316, 327, 371, 418, 355, 376, 270, 409, 384,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 281, 248, 278, 279, 285, 471, 468, 400, 472,
	0, 252, 0, 325, 0, 366, 299, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 354, 0, 0,
	425, 426, 427, 449, 411, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 475, 463, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 0, 0, 464, 385, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 3193, 0, 0, 0, 268, 197, 461, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 0, 404,
	432, 288, 423, 0, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 448,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 433, 0,
	375, 356, 0, 0, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 287, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 428, 0,
	0, 0, 458, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 437, 0, 0, 342, 343, 344,
	345, 304, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 354, 0, 0, 425, 426, 427,
	449, 411, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 475, 463, 0, 0, 0, 0, 459, 0, 460,
	0, 0, 0, 0, 464, 385, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 461, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	390, 407, 269, 381, 420, 274, 388, 264, 353, 377,
	0, 0, 260, 405, 387, 335, 313, 314, 259, 0,
	372, 292, 305, 289, 351, 0, 404, 432, 288, 423,
	0, 415, 262, 0, 414, 350, 401, 406, 336, 330,
	261, 403, 334, 329, 317, 296, 448, 318, 319, 309,
	362, 328, 363, 310, 340, 339, 341, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 3308, 0, 0, 389, 0,
	0, 320, 0, 0, 0, 433, 0, 375, 356, 0,
	0, 0, 373, 326, 402, 364, 408, 391, 416, 369,
	365, 253, 392, 291, 337, 265, 267, 286, 293, 295,
	297, 298, 346, 347, 359, 380, 393, 394, 395, 290,
	275, 374, 276, 307, 277, 254, 282, 280, 283, 382,
	284, 256, 360, 399, 0, 303, 370, 333, 257, 332,
	361, 398, 397, 266, 424, 430, 431, 0, 0, 436,
	0, 0, 0, 445, 450, 451, 452, 454, 455, 456,
	457, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 429, 321, 322, 323, 301, 250, 251,
	474, 287, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 428, 0, 0, 0, 458,
	473, 0, 0, 0, 0, 0, 470, 358, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 410, 422, 439, 442, 0, 0, 0,
	0, 255, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 437, 0, 0, 342, 343, 344, 345, 304, 0,
	273, 440, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 435, 300, 306, 453, 308, 272, 357,
	302, 419, 315, 0, 446, 0, 447, 0, 0, 0,
	0, 349, 311, 312, 383, 316, 327, 371, 418, 355,
	376, 270, 409, 384, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 281, 248, 278, 279, 285,
	471, 468, 400, 472, 0, 252, 0, 325, 0, 366,
	299, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 354, 0, 0, 425, 426, 427, 449, 411, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 475, 463,
	0, 0, 0, 0, 459, 0, 460, 0, 0, 0,
	0, 464, 385, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3057, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 461, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 390, 407, 269,
	381, 420, 274, 388, 264, 353, 377, 0, 0, 260,
	405, 387, 335, 313, 314, 259, 0, 372, 292, 305,
	289, 351, 0, 404, 432, 288, 423, 0, 415, 262,
	0, 414, 350, 401, 406, 336, 330, 261, 403, 334,
	329, 317, 296, 448, 318, 319, 309, 362, 328, 363,
	310, 340, 339, 341, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 320, 0,
	0, 0, 433, 0, 375, 356, 0, 0, 0, 373,
	326, 402, 364, 408, 391, 416, 369, 365, 253, 392,
	291, 337, 265, 267, 286, 293, 295, 297, 298, 346,
	347, 359, 380, 393, 394, 395, 290, 275, 374, 276,
	307, 277, 254, 282, 280, 283, 382, 284, 256, 360,
	399, 0, 303, 370, 333, 257, 332, 361, 398, 397,
	266, 424, 430, 431, 0, 0, 436, 0, 0, 0,
	445, 450, 451, 452, 454, 455, 456, 457, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	429, 321, 322, 323, 301, 250, 251, 474, 287, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 428, 0, 0, 0, 458, 473, 0, 0,
	0, 0, 0, 470, 358, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	410, 422, 439, 442, 0, 0, 0, 0, 255, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 437, 0,
	0, 342, 343, 344, 345, 304, 0, 273, 440, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 300, 306, 453, 308, 272, 357, 302, 419, 315,
	0, 446, 0, 447, 0, 0, 0, 0, 349, 311,
	312, 383, 316, 327, 371, 418, 355, 376, 270, 409,
	384, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 281, 248, 278, 279, 285, 471, 468, 400,
	472, 0, 252, 0, 325, 0, 366, 299, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 354, 0,
	0, 425, 426, 427, 449, 411, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 475, 463, 0, 0, 0,
	0, 459, 0, 460, 0, 0, 0, 0, 464, 385,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 461,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 390, 407, 269, 381, 420, 274,
	388, 264, 353, 377, 0, 0, 260, 405, 387, 335,
	313, 314, 259, 0, 372, 292, 305, 289, 351, 0,
	404, 432, 288, 423, 0, 415, 262, 0, 414, 350,
	401, 406, 336, 330, 261, 403, 334, 329, 317, 296,
	448, 318, 319, 309, 362, 328, 363, 310, 340, 339,
	341, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 3134,
	0, 0, 389, 0, 0, 320, 0, 0, 0, 433,
	0, 375, 356, 0, 0, 0, 373, 326, 402, 364,
	408, 391, 416, 369, 365, 253, 392, 291, 337, 265,
	267, 286, 293, 295, 297, 298, 346, 347, 359, 380,
	393, 394, 395, 290, 275, 374, 276, 307, 277, 254,
	282, 280, 283, 382, 284, 256, 360, 399, 0, 303,
	370, 333, 257, 332, 361, 398, 397, 266, 424, 430,
	431, 0, 0, 436, 0, 0, 0, 445, 450, 451,
	452, 454, 455, 456, 457, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 429, 321, 322,
	323, 301, 250, 251, 474, 287, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 428,
	0, 0, 0, 458, 473, 0, 0, 0, 0, 0,
	470, 358, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 410, 422, 439,
	442, 0, 0, 0, 0, 255, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 437, 0, 0, 342, 343,
	344, 345, 304, 0, 273, 440, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 435, 300, 306,
	453, 308, 272, 357, 302, 419, 315, 0, 446, 0,
	447, 0, 0, 0, 0, 349, 311, 312, 383, 316,
	327, 371, 418, 355, 376, 270, 409, 384, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 281,
	248, 278, 279, 285, 471, 468, 400, 472, 0, 252,
	0, 325, 0, 366, 299, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 354, 0, 0, 425, 426,
	427, 449, 411, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 475, 463, 0, 0, 0, 0, 459, 0,
	460, 0, 0, 0, 0, 464, 385, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2727, 0, 0, 0, 268, 197, 461, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 390, 407, 269, 381, 420, 274, 388, 264, 353,
	377, 0, 0, 260, 405, 387, 335, 313, 314, 259,
	0, 372, 292, 305, 289, 351, 0, 404, 432, 288,
	423, 0, 415, 262, 0, 414, 350, 401, 406, 336,
	330, 261, 403, 334, 329, 317, 296, 448, 318, 319,
	309, 362, 328, 363, 310, 340, 339, 341, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 320, 0, 0, 0, 433, 0, 375, 356,
	0, 0, 0, 373, 326, 402, 364, 408, 391, 416,
	369, 365, 253, 392, 291, 337, 265, 267, 286, 293,
	295, 297, 298, 346, 347, 359, 380, 393, 394, 395,
	290, 275, 374, 276, 307, 277, 254, 282, 280, 283,
	382, 284, 256, 360, 399, 0, 303, 370, 333, 257,
	332, 361, 398, 397, 266, 424, 430, 431, 0, 0,
	436, 0, 0, 0, 445, 450, 451, 452, 454, 455,
	456, 457, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 429, 321, 322, 323, 301, 250,
	251, 474, 287, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 428, 0, 0, 0,
	458, 473, 0, 0, 0, 0, 0, 470, 358, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 410, 422, 439, 442, 0, 0,
	0, 0, 255, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 437, 0, 0, 342, 343, 344, 345, 304,
	0, 273, 440, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 435, 300, 306, 453, 308, 272,
	357, 302, 419, 315, 0, 446, 0, 447, 0, 0,
	0, 0, 349, 311, 312, 383, 316, 327, 371, 418,
	355, 376, 270, 409, 384, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 281, 248, 278, 279,
	285, 471, 468, 400, 472, 0, 252, 0, 325, 0,
	366, 299, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 354, 0, 0, 425, 426, 427, 449, 411,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 475,
	463, 0, 0, 0, 0, 459, 0, 460, 0, 0,
	0, 0, 464, 385, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 461, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 390, 407,
	269, 381, 420, 274, 388, 264, 353, 377, 0, 0,
	260, 405, 387, 335, 313, 314, 259, 0, 372, 292,
	305, 289, 351, 0, 404, 432, 288, 423, 0, 415,
	262, 0, 414, 350, 401, 406, 336, 330, 261, 403,
	334, 329, 317, 296, 448, 318, 319, 309, 362, 328,
	363, 310, 340, 339, 341, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 320,
	0, 0, 0, 433, 0, 375, 356, 0, 0, 0,
	373, 326, 402, 364, 408, 391, 416, 369, 365, 253,
	392, 291, 337, 265, 267, 286, 293, 295, 297, 298,
	346, 347, 359, 380, 393, 394, 395, 290, 275, 374,
	276, 307, 277, 254, 282, 280, 283, 382, 284, 256,
	360, 399, 0, 303, 370, 333, 257, 332, 361, 398,
	397, 266, 424, 430, 431, 0, 0, 436, 0, 0,
	0, 445, 450, 451, 452, 454, 455, 456, 457, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 429, 321, 322, 323, 301, 250, 251, 474, 287,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 428, 0, 0, 0, 458, 473, 0,
	0, 0, 0, 0, 470, 358, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 410, 422, 439, 442, 0, 0, 0, 0, 255,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 437,
	0, 0, 342, 343, 344, 345, 304, 0, 273, 440,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 435, 300, 306, 453, 308, 272, 357, 302, 419,
	315, 0, 446, 0, 447, 0, 0, 0, 0, 349,
	311, 312, 383, 316, 327, 371, 418, 355, 376, 270,
	409, 384, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 281, 248, 278, 279, 285, 471, 468,
	400, 472, 0, 252, 0, 325, 0, 366, 299, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 354,
	0, 0, 425, 426, 427, 449, 411, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 475, 463, 0, 0,
	0, 0, 459, 0, 460, 0, 0, 0, 0, 464,
	385, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	461, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 390, 407, 269, 381, 420,
	274, 388, 264, 353, 377, 0, 0, 260, 405, 387,
	335, 313, 314, 259, 0, 372, 292, 305, 289, 351,
	0, 404, 432, 288, 423, 0, 415, 262, 0, 414,
	350, 401, 406, 336, 330, 261, 403, 334, 329, 317,
	296, 448, 318, 319, 309, 362, 328, 363, 310, 340,
	339, 341, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 320, 0, 0, 0,
	433, 0, 375, 356, 0, 0, 0, 373, 326, 402,
	364, 408, 391, 416, 369, 365, 253, 392, 291, 337,
	265, 267, 286, 293, 295, 297, 298, 346, 347, 359,
	380, 393, 394, 395, 290, 275, 374, 276, 307, 277,
	254, 282, 280, 283, 382, 284, 256, 360, 399, 0,
	303, 370, 333, 257, 332, 361, 398, 397, 266, 424,
	430, 431, 0, 0, 436, 0, 0, 0, 445, 450,
	451, 452, 454, 455, 456, 457, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 429, 321,
	322, 323, 301, 250, 251, 474, 287, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	428, 0, 0, 0, 458, 473, 0, 0, 0, 0,
	0, 470, 358, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 410, 422,
	439, 442, 0, 0, 0, 0, 255, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 437, 0, 0, 342,
	343, 344, 345, 304, 0, 273, 440, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 300,
	306, 453, 308, 272, 357, 302, 419, 315, 0, 446,
	0, 447, 0, 0, 0, 0, 349, 311, 312, 383,
	316, 327, 371, 418, 355, 376, 270, 409, 384, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	281, 248, 278, 279, 285, 471, 468, 400, 472, 0,
	252, 0, 325, 0, 366, 299, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 354, 0, 0, 425,
	426, 427, 449, 411, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 475, 463, 0, 0, 0, 0, 459,
	0, 460, 0, 0, 0, 0, 464, 385, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 461, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 390, 407, 269, 381, 420, 274, 388, 264,
	353, 377, 0, 0, 260, 405, 387, 335, 313, 314,
	259, 0, 372, 292, 305, 289, 351, 0, 404, 432,
	288, 423, 0, 415, 262, 0, 414, 350, 401, 406,
	336, 330, 261, 403, 334, 329, 317, 296, 448, 318,
	319, 309, 362, 328, 363, 310, 340, 339, 341, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 320, 0, 0, 0, 433, 0, 375,
	356, 0, 0, 0, 373, 326, 402, 364, 408, 391,
	416, 369, 365, 253, 392, 291, 337, 265, 267, 286,
	293, 295, 297, 298, 346, 347, 359, 380, 393, 394,
	395, 290, 275, 374, 276, 307, 277, 254, 282, 280,
	283, 382, 284, 256, 360, 399, 0, 303, 370, 333,
	257, 332, 361, 398, 397, 266, 424, 430, 431, 0,
	0, 436, 0, 0, 0, 445, 450, 451, 452, 454,
	455, 456, 457, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 429, 321, 322, 323, 301,
	250, 251, 474, 287, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 428, 0, 0,
	0, 458, 473, 0, 0, 0, 0, 0, 470, 358,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 410, 422, 439, 442, 0,
	0, 0, 0, 255, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 437, 0, 0, 342, 343, 344, 345,
	304, 0, 273, 440, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 300, 306, 453, 308,
	272, 357, 302, 419, 315, 0, 446, 0, 447, 0,
	0, 0, 0, 349, 311, 312, 383, 316, 327, 371,
	418, 355, 376, 270, 409, 384, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 281, 248, 278,
	279, 285, 471, 468, 400, 472, 0, 252, 0, 325,
	0, 366, 299, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 354, 0, 0, 425, 426, 427, 449,
	411, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	475, 463, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 0, 0, 464, 385, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2696, 0,
	0, 0, 268, 197, 461, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 390,
	407, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 260, 405, 387, 335, 313, 314, 259, 0, 372,
	292, 305, 289, 351, 0, 404, 432, 288, 423, 0,
	415, 262, 0, 414, 350, 401, 406, 336, 330, 261,
	403, 334, 329, 317, 296, 448, 318, 319, 309, 362,
	328, 363, 310, 340, 339, 341, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 433, 0, 375, 356, 0, 0,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	287, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 428, 0, 0, 0, 458, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	437, 0, 0, 342, 343, 344, 345, 304, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 0, 325, 0, 366, 299,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	354, 0, 0, 425, 426, 427, 449, 411, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 475, 463, 0,
	0, 0, 0, 459, 0, 460, 0, 0, 0, 0,
	464, 385, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 461, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 390, 407, 269, 381,
	420, 274, 388, 264, 353, 377, 0, 0, 260, 405,
	387, 335, 313, 314, 259, 0, 372, 292, 305, 289,
	351, 0, 404, 432, 288, 423, 0, 415, 262, 0,
	414, 350, 401, 406, 336, 330, 261, 403, 334, 329,
	317, 296, 448, 318, 319, 309, 362, 328, 363, 310,
	340, 339, 341, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 320, 0, 0,
	0, 433, 0, 375, 356, 0, 0, 0, 373, 326,
	402, 364, 408, 391, 416, 369, 365, 253, 392, 291,
	337, 265, 267, 286, 293, 295, 297, 298, 346, 347,
	359, 380, 393, 394, 395, 290, 275, 374, 276, 307,
	277, 254, 282, 280, 283, 382, 284, 256, 360, 399,
	0, 303, 370, 333, 257, 332, 361, 398, 397, 266,
	424, 430, 431, 0, 0, 436, 0, 0, 0, 445,
	450, 451, 452, 454, 455, 456, 457, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 429,
	321, 322, 323, 301, 250, 251, 474, 287, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 428, 0, 0, 0, 458, 473, 0, 0, 0,
	0, 0, 470, 358, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 410,
	422, 439, 442, 0, 0, 0, 0, 255, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 437, 0, 0,
	342, 343, 344, 345, 304, 0, 273, 440, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	300, 306, 453, 308, 272, 357, 302, 419, 315, 0,
	446, 0, 447, 0, 0, 0, 0, 349, 311, 312,
	383, 316, 327, 371, 418, 355, 376, 270, 409, 384,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 281, 248, 278, 279, 285, 471, 468, 400, 472,
	0, 252, 0, 325, 0, 366, 299, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 354, 0, 0,
	425, 426, 427, 449, 411, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 475, 463, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 0, 0, 464, 385, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1264, 0, 0, 0, 268, 197, 461, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 0, 404,
	432, 288, 423, 0, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 448,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 433, 0,
	375, 356, 0, 0, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 287, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 428, 0,
	0, 0, 458, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 437, 0, 0, 342, 343, 344,
	345, 304, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 354, 0, 0, 425, 426, 427,
	449, 411, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 475, 463, 0, 0, 0, 0, 459, 0, 460,
	0, 0, 0, 0, 464, 385, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2123,
	0, 0, 0, 268, 197, 461, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	390, 407, 269, 381, 420, 274, 388, 264, 353, 377,
	0, 0, 260, 405, 387, 335, 313, 314, 259, 0,
	372, 292, 305, 289, 351, 0, 404, 432, 288, 423,
	0, 415, 262, 0, 414, 350, 401, 406, 336, 330,
	261, 403, 334, 329, 317, 296, 448, 318, 319, 309,
	362, 328, 363, 310, 340, 339, 341, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 320, 0, 0, 0, 433, 0, 375, 356, 0,
	0, 0, 373, 326, 402, 364, 408, 391, 416, 369,
	365, 253, 392, 291, 337, 265, 267, 286, 293, 295,
	297, 298, 346, 347, 359, 380, 393, 394, 395, 290,
	275, 374, 276, 307, 277, 254, 282, 280, 283, 382,
	284, 256, 360, 399, 0, 303, 370, 333, 257, 332,
	361, 398, 397, 266, 424, 430, 431, 0, 0, 436,
	0, 0, 0, 445, 450, 451, 452, 454, 455, 456,
	457, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 429, 321, 322, 323, 301, 250, 251,
	474, 287, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 428, 0, 0, 0, 458,
	473, 0, 0, 0, 0, 0, 470, 358, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 410, 422, 439, 442, 0, 0, 0,
	0, 255, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 437, 0, 0, 342, 343, 344, 345, 304, 0,
	273, 440, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 435, 300, 306, 453, 308, 272, 357,
	302, 419, 315, 0, 446, 0, 447, 0, 0, 0,
	0, 349, 311, 312, 383, 316, 327, 371, 418, 355,
	376, 270, 409, 384, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 281, 248, 278, 279, 285,
	471, 468, 400, 472, 0, 252, 0, 325, 0, 366,
	299, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 0, 354, 0, 425, 426, 427, 449, 411, 0,
	469, 2440, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 324, 0, 0, 0, 0, 0, 475, 463,
	0, 0, 0, 0, 0, 459, 0, 460, 0, 0,
	0, 0, 464, 385, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 461, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 390, 407,
	269, 381, 420, 274, 388, 264, 353, 377, 0, 0,
	260, 405, 387, 335, 313, 314, 259, 0, 372, 292,
	305, 289, 351, 0, 404, 432, 288, 423, 0, 415,
	262, 0, 414, 350, 401, 406, 336, 330, 261, 403,
	334, 329, 317, 296, 448, 318, 319, 309, 362, 328,
	363, 310, 340, 339, 341, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 320,
	0, 0, 0, 433, 0, 375, 356, 0, 0, 0,
	373, 326, 402, 364, 408, 391, 416, 369, 365, 253,
	392, 291, 337, 265, 267, 286, 293, 295, 297, 298,
	346, 347, 359, 380, 393, 394, 395, 290, 275, 374,
	276, 307, 277, 254, 282, 280, 283, 382, 284, 256,
	360, 399, 0, 303, 370, 333, 257, 332, 361, 398,
	397, 266, 424, 430, 431, 0, 0, 436, 0, 0,
	0, 445, 450, 451, 452, 454, 455, 456, 457, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 429, 321, 322, 323, 301, 250, 251, 474, 287,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 428, 0, 0, 0, 458, 473, 0,
	0, 0, 0, 0, 470, 358, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 410, 422, 439, 442, 0, 0, 0, 0, 255,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 437,
	0, 0, 342, 343, 344, 345, 304, 0, 273, 440,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 435, 300, 306, 453, 308, 272, 357, 302, 419,
	315, 0, 446, 0, 447, 0, 0, 0, 0, 349,
	311, 312, 383, 316, 327, 371, 418, 355, 376, 270,
	409, 384, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 281, 248, 278, 279, 285, 471, 468,
	400, 472, 0, 252, 0, 325, 0, 366, 299, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 354,
	0, 0, 425, 426, 427, 449, 411, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 475, 463, 0, 0,
	0, 0, 459, 0, 460, 0, 0, 0, 0, 464,
	385, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	461, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 390, 407, 269, 381, 420,
	274, 388, 264, 353, 377, 0, 0, 260, 405, 387,
	335, 313, 314, 259, 0, 372, 292, 305, 289, 351,
	0, 404, 432, 288, 423, 0, 415, 262, 0, 414,
	350, 401, 406, 336, 330, 261, 403, 334, 329, 317,
	296, 448, 318, 319, 309, 362, 328, 363, 310, 340,
	339, 341, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 320, 0, 0, 0,
	433, 0, 375, 356, 0, 0, 0, 373, 326, 402,
	364, 408, 391, 416, 369, 365, 253, 392, 291, 337,
	265, 267, 286, 293, 295, 297, 298, 346, 347, 359,
	380, 393, 394, 395, 290, 275, 374, 276, 307, 277,
	254, 282, 280, 283, 382, 284, 256, 360, 399, 0,
	303, 370, 333, 257, 332, 361, 398, 397, 266, 424,
	430, 431, 0, 0, 436, 0, 0, 0, 445, 450,
	451, 452, 454, 455, 456, 457, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 429, 321,
	322, 323, 301, 250, 251, 474, 287, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	428, 0, 0, 0, 458, 473, 0, 0, 0, 0,
	0, 470, 358, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 410, 422,
	439, 442, 0, 0, 0, 0, 255, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 437, 0, 0, 342,
	343, 344, 345, 304, 0, 273, 440, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 300,
	306, 453, 308, 272, 357, 302, 419, 315, 0, 446,
	0, 447, 0, 0, 0, 0, 349, 311, 312, 383,
	316, 327, 371, 418, 355, 376, 270, 409, 384, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	281, 248, 278, 279, 285, 471, 468, 400, 472, 0,
	252, 0, 325, 0, 366, 299, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 354, 0, 0, 425,
	426, 427, 449, 411, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 475, 463, 0, 0, 0, 0, 459,
	0, 460, 0, 0, 0, 0, 464, 385, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 461, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 390, 407, 269, 381, 420, 274, 388, 264,
	353, 377, 0, 0, 260, 405, 387, 335, 313, 314,
	259, 0, 372, 292, 305, 289, 351, 0, 404, 432,
	288, 423, 0, 415, 262, 0, 414, 350, 401, 406,
	336, 330, 261, 403, 334, 329, 317, 296, 448, 318,
	319, 309, 362, 328, 363, 310, 340, 339, 341, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 320, 0, 0, 0, 433, 0, 375,
	356, 0, 0, 0, 373, 326, 402, 364, 408, 391,
	416, 369, 365, 253, 392, 291, 337, 265, 267, 286,
	293, 295, 297, 298, 346, 347, 359, 380, 393, 394,
	395, 290, 275, 374, 276, 307, 277, 254, 282, 280,
	283, 382, 284, 256, 360, 399, 0, 303, 370, 333,
	257, 332, 361, 398, 397, 266, 424, 430, 431, 0,
	0, 436, 0, 0, 0, 445, 450, 451, 452, 454,
	455, 456, 457, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 429, 321, 322, 323, 301,
	250, 251, 474, 287, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 428, 0, 0,
	0, 458, 473, 0, 0, 0, 0, 0, 470, 358,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 410, 422, 439, 442, 0,
	0, 0, 0, 255, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 437, 0, 0, 342, 343, 344, 345,
	304, 0, 273, 440, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 300, 306, 453, 308,
	272, 357, 302, 419, 315, 0, 446, 0, 447, 0,
	0, 0, 0, 349, 311, 312, 383, 316, 327, 371,
	418, 355, 376, 270, 409, 384, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 281, 248, 278,
	279, 285, 471, 468, 400, 472, 0, 252, 0, 325,
	0, 366, 299, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 354, 0, 0, 425, 426, 427, 449,
	411, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	475, 463, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 0, 0, 464, 385, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2197, 0,
	0, 0, 268, 197, 461, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 390,
	407, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 260, 405, 387, 335, 313, 314, 259, 0, 372,
	292, 305, 289, 351, 0, 404, 432, 288, 423, 0,
	415, 262, 0, 414, 350, 401, 406, 336, 330, 261,
	403, 334, 329, 317, 296, 448, 318, 319, 309, 362,
	328, 363, 310, 340, 339, 341, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 433, 0, 375, 356, 0, 0,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	287, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 428, 0, 0, 0, 458, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	437, 0, 0, 342, 343, 344, 345, 304, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 0, 325, 0, 366, 299,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 1989, 249, 244, 245, 246, 247,
	354, 0, 0, 425, 426, 427, 449, 411, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 475, 463, 0,
	0, 0, 0, 459, 0, 460, 0, 0, 0, 0,
	464, 385, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 461, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 390, 407, 269, 381,
	420, 274, 388, 264, 353, 377, 0, 0, 260, 405,
	387, 335, 313, 314, 259, 0, 372, 292, 305, 289,
	351, 0, 404, 432, 288, 423, 0, 415, 262, 0,
	414, 350, 401, 406, 336, 330, 261, 403, 334, 329,
	317, 296, 448, 318, 319, 309, 362, 328, 363, 310,
	340, 339, 341, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 320, 0, 0,
	0, 433, 0, 375, 356, 0, 0, 0, 373, 326,
	402, 364, 408, 391, 416, 369, 365, 253, 392, 291,
	337, 265, 267, 286, 293, 295, 297, 298, 346, 347,
	359, 380, 393, 394, 395, 290, 275, 374, 276, 307,
	277, 254, 282, 280, 283, 382, 284, 256, 360, 399,
	0, 303, 370, 333, 257, 332, 361, 398, 397, 266,
	424, 430, 431, 0, 0, 436, 0, 0, 0, 445,
	450, 451, 452, 454, 455, 456, 457, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 429,
	321, 322, 323, 301, 250, 251, 474, 287, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 428, 0, 0, 0, 458, 473, 0, 0, 0,
	0, 0, 470, 358, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 410,
	422, 439, 442, 0, 0, 0, 0, 255, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 437, 0, 0,
	342, 343, 344, 345, 304, 0, 273, 440, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	300, 306, 453, 308, 272, 357, 302, 419, 315, 0,
	446, 0, 447, 0, 0, 0, 0, 349, 311, 312,
	383, 316, 327, 371, 418, 355, 376, 270, 409, 384,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 281, 248, 278, 279, 285, 471, 468, 400, 472,
	0, 252, 0, 325, 0, 366, 299, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 354, 0, 0,
	425, 426, 427, 449, 411, 1704, 469, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 475, 463, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 0, 0, 464, 385, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 461, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 0, 404,
	432, 288, 423, 0, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 448,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 433, 0,
	375, 356, 0, 0, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	286, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 287, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 428, 0,
	0, 0, 458, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 437, 0, 0, 342, 343, 344,
	345, 304, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 354, 0, 0, 425, 426, 427,
	449, 411, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 475, 463, 0, 0, 0, 0, 459, 0, 460,
	0, 0, 0, 0, 464, 385, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1264,
	0, 0, 0, 268, 197, 461, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	390, 407, 269, 381, 420, 274, 388, 264, 353, 377,
	0, 0, 260, 405, 387, 335, 313, 314, 259, 0,
	372, 292, 305, 289, 351, 0, 404, 432, 288, 423,
	0, 415, 262, 0, 414, 350, 401, 406, 336, 330,
	261, 403, 334, 329, 317, 296, 448, 318, 319, 309,
	362, 328, 363, 310, 340, 339, 341, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 320, 0, 0, 0, 433, 0, 375, 356, 0,
	0, 0, 373, 326, 402, 364, 408, 391, 416, 1612,
	365, 253, 392, 291, 337, 265, 267, 286, 293, 295,
	297, 298, 346, 347, 359, 380, 393, 394, 395, 290,
	275, 374, 276, 307, 277, 254, 282, 280, 283, 382,
	284, 256, 360, 399, 0, 303, 370, 333, 257, 332,
	361, 398, 397, 266, 424, 430, 431, 0, 0, 436,
	0, 0, 0, 445, 450, 451, 452, 454, 455, 456,
	457, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 429, 321, 322, 323, 301, 250, 251,
	474, 287, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 428, 0, 0, 0, 458,
	473, 0, 0, 0, 0, 0, 470, 358, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 410, 422, 439, 442, 0, 0, 0,
	0, 255, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 437, 0, 0, 342, 343, 344, 345, 304, 0,
	273, 440, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 435, 300, 306, 453, 308, 272, 357,
	302, 419, 315, 0, 446, 0, 447, 0, 0, 0,
	0, 349, 311, 312, 383, 316, 327, 371, 418, 355,
	376, 270, 409, 384, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 281, 248, 278, 279, 285,
	471, 468, 400, 472, 0, 252, 0, 325, 0, 366,
	299, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 0, 249, 244, 245, 246,
	247, 354, 0, 0, 425, 426, 427, 449, 411, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 475, 463,
	0, 0, 0, 0, 459, 0, 460, 0, 0, 0,
	0, 464, 385, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 461, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 390, 407, 269,
	381, 420, 274, 388, 264, 353, 377, 0, 0, 260,
	405, 387, 335, 313, 314, 259, 0, 372, 292, 305,
	289, 351, 0, 404, 432, 288, 423, 0, 415, 262,
	0, 414, 350, 401, 406, 336, 330, 261, 403, 334,
	329, 317, 296, 448, 318, 319, 309, 362, 328, 363,
	310, 340, 339, 341, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 1294, 0, 0, 0, 389, 0, 0, 320, 0,
	0, 0, 433, 0, 375, 356, 0, 0, 0, 373,
	326, 402, 364, 408, 391, 416, 369, 365, 253, 392,
	291, 337, 265, 267, 286, 293, 295, 297, 298, 346,
	347, 359, 380, 393, 394, 395, 290, 275, 374, 276,
	307, 277, 254, 282, 280, 283, 382, 284, 256, 360,
	399, 0, 303, 370, 333, 257, 332, 361, 398, 397,
	266, 424, 430, 431, 0, 0, 436, 0, 0, 0,
	445, 450, 451, 452, 454, 455, 456, 457, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	429, 321, 322, 323, 301, 250, 251, 474, 287, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 428, 0, 0, 0, 458, 473, 0, 0,
	0, 0, 0, 470, 358, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	410, 422, 439, 442, 0, 0, 0, 0, 255, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 437, 0,
	0, 342, 343, 344, 345, 304, 0, 273, 440, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	435, 300, 306, 453, 308, 272, 357, 302, 419, 315,
	0, 446, 0, 447, 0, 0, 0, 0, 349, 311,
	312, 383, 316, 327, 371, 418, 355, 376, 270, 409,
	384, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 281, 248, 278, 279, 285, 471, 468, 400,
	472, 0, 252, 0, 325, 0, 366, 299, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 354, 0,
	0, 425, 426, 427, 449, 411, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 475, 463, 0, 0, 0,
	0, 459, 0, 460, 0, 0, 0, 0, 464, 385,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 461,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 390, 407, 269, 381, 420, 274,
	388, 264, 353, 377, 0, 0, 260, 405, 387, 335,
	313, 314, 259, 0, 372, 292, 305, 289, 351, 0,
	404, 432, 288, 423, 0, 415, 262, 0, 414, 350,
	401, 406, 336, 330, 261, 403, 334, 329, 317, 296,
	448, 318, 319, 309, 362, 328, 363, 310, 340, 339,
	341, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 320, 0, 0, 0, 433,
	0, 375, 356, 0, 0, 0, 373, 326, 402, 364,
	408, 391, 416, 369, 365, 253, 392, 291, 337, 265,
	267, 286, 293, 295, 297, 298, 346, 347, 359, 380,
	393, 394, 395, 290, 275, 374, 276, 307, 277, 254,
	282, 280, 283, 382, 284, 256, 360, 399, 0, 303,
	370, 333, 257, 332, 361, 398, 397, 266, 424, 430,
	431, 0, 0, 436, 0, 0, 0, 445, 450, 451,
	452, 454, 455, 456, 457, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 429, 321, 322,
	323, 301, 250, 251, 474, 287, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 428,
	0, 0, 0, 458, 473, 0, 0, 0, 0, 0,
	470, 358, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 410, 422, 439,
	442, 0, 0, 0, 0, 255, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 437, 0, 0, 342, 343,
	344, 345, 304, 0, 273, 440, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 435, 300, 306,
	453, 308, 272, 357, 302, 419, 315, 0, 446, 0,
	447, 0, 0, 0, 0, 349, 311, 312, 383, 316,
	327, 371, 418, 355, 376, 270, 409, 384, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 396, 281,
	248, 278, 279, 285, 471, 468, 400, 472, 0, 252,
	0, 325, 0, 366, 299, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 354, 0, 0, 425, 426,
	427, 449, 411, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 475, 463, 0, 0, 0, 0, 459, 0,
	460, 0, 0, 0, 0, 464, 385, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 461, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 390, 407, 269, 381, 420, 274, 388, 264, 353,
	377, 0, 0, 260, 405, 387, 335, 313, 314, 259,
	0, 372, 292, 305, 289, 351, 0, 404, 432, 288,
	423, 0, 415, 262, 0, 414, 350, 401, 406, 336,
	330, 261, 403, 334, 329, 317, 296, 448, 318, 319,
	309, 362, 328, 363, 310, 340, 339, 341, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 320, 0, 0, 0, 433, 0, 375, 356,
	0, 0, 0, 373, 326, 402, 364, 408, 391, 416,
	513, 365, 253, 392, 291, 337, 265, 267, 286, 293,
	295, 297, 298, 346, 347, 359, 380, 393, 394, 395,
	290, 275, 374, 276, 307, 277, 254, 282, 280, 283,
	382, 284, 256, 360, 399, 0, 303, 370, 333, 257,
	332, 361, 398, 397, 266, 424, 430, 431, 0, 0,
	436, 0, 0, 0, 445, 450, 451, 452, 454, 455,
	456, 457, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 429, 321, 322, 323, 301, 250,
	251, 474, 287, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 428, 0, 0, 0,
	458, 473, 0, 0, 0, 0, 0, 470, 358, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 410, 422, 439, 442, 0, 0,
	0, 0, 255, 441, 0, 0, 0, 0, 0, 0,
	514, 0, 413, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 437, 0, 0, 342, 343, 344, 345, 304,
	0, 273, 440, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 435, 300, 306, 453, 308, 272,
	357, 302, 419, 315, 0, 446, 0, 447, 0, 0,
	0, 0, 349, 311, 312, 383, 316, 327, 371, 418,
	355, 376, 270, 409, 384, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 281, 248, 278, 279,
	285, 471, 468, 400, 472, 0, 252, 0, 325, 0,
	366, 299, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 354, 0, 0, 425, 426, 427, 449, 411,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 475,
	463, 0, 0, 0, 0, 459, 0, 460, 0, 0,
	0, 0, 464, 385, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 461, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 390, 407,
	269, 381, 420, 274, 388, 264, 353, 377, 0, 0,
	260, 405, 387, 335, 313, 314, 259, 0, 372, 292,
	305, 289, 351, 0, 404, 432, 288, 423, 0, 415,
	262, 0, 414, 350, 401, 406, 336, 330, 261, 403,
	334, 329, 317, 296, 448, 318, 319, 309, 362, 328,
	363, 310, 340, 339, 341, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 320,
	0, 0, 0, 433, 0, 375, 356, 0, 0, 0,
	373, 326, 402, 364, 408, 391, 416, 369, 365, 253,
	392, 291, 337, 265, 267, 286, 293, 295, 297, 298,
	346, 347, 359, 380, 393, 394, 395, 290, 275, 374,
	276, 307, 277, 254, 282, 280, 283, 382, 284, 256,
	360, 399, 0, 303, 370, 333, 257, 332, 361, 398,
	397, 266, 424, 430, 431, 0, 0, 436, 0, 0,
	0, 445, 450, 451, 452, 454, 455, 456, 457, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 429, 321, 322, 323, 301, 250, 251, 474, 287,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 428, 0, 0, 0, 458, 473, 0,
	0, 0, 0, 0, 470, 358, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 410, 422, 439, 442, 0, 0, 0, 0, 255,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 437,
	0, 0, 342, 343, 344, 345, 304, 0, 273, 440,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 435, 300, 306, 453, 308, 272, 357, 302, 419,
	315, 0, 446, 0, 447, 0, 0, 0, 0, 349,
	311, 312, 383, 316, 327, 371, 418, 355, 376, 270,
	409, 384, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 281, 248, 278, 279, 285, 471, 468,
	400, 472, 0, 252, 0, 325, 0, 366, 299, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 219, 220, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 0, 249, 244, 245, 246, 247, 354,
	0, 0, 425, 426, 427, 449, 411, 0, 469, 0,
	0, 0, 0, 0, 0, 480, 294, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 475, 463, 0, 0,
	0, 0, 459, 0, 460, 0, 0, 0, 0, 464,
	385, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	461, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 390, 407, 269, 381, 420,
	274, 388, 264, 353, 377, 0, 0, 260, 405, 387,
	335, 313, 314, 259, 0, 372, 292, 305, 289, 351,
	0, 404, 432, 288, 423, 0, 415, 262, 0, 414,
	350, 401, 406, 336, 330, 261, 403, 334, 329, 317,
	296, 448, 318, 319, 309, 362, 328, 363, 310, 340,
	339, 341, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 320, 0, 0, 0,
	433, 0, 375, 356, 0, 0, 0, 373, 326, 402,
	364, 408, 391, 416, 369, 365, 253, 392, 291, 337,
	265, 267, 286, 293, 295, 297, 298, 346, 347, 359,
	380, 393, 394, 395, 290, 275, 374, 276, 307, 277,
	254, 282, 280, 283, 382, 284, 256, 360, 399, 0,
	303, 370, 333, 257, 332, 361, 398, 397, 266, 424,
	430, 431, 0, 0, 436, 0, 0, 0, 445, 450,
	451, 452, 454, 455, 456, 457, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 429, 321,
	322, 323, 301, 250, 251, 474, 287, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	428, 0, 0, 0, 458, 473, 0, 0, 0, 0,
	0, 470, 358, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 410, 422,
	439, 442, 0, 0, 0, 0, 255, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 437, 0, 0, 342,
	343, 344, 345, 304, 0, 273, 440, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 435, 300,
	306, 453, 308, 272, 357, 302, 419, 315, 0, 446,
	0, 447, 0, 0, 0, 0, 349, 311, 312, 383,
	316, 327, 371, 418, 355, 376, 270, 409, 384, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	281, 248, 278, 279, 285, 471, 468, 400, 472, 0,
	252, 0, 325, 0, 366, 299, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 219, 220, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	0, 249, 244, 245, 246, 247, 354, 0, 0, 425,
	426, 427, 449, 411, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 475, 463, 0, 0, 0, 0, 459,
	0, 460, 0, 0, 0, 0, 464, 385, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 461, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 390, 407, 269, 381, 420, 274, 388, 264,
	353, 377, 0, 0, 260, 405, 387, 335, 313, 314,
	259, 0, 372, 292, 305, 289, 351, 0, 404, 432,
	288, 423, 0, 415, 262, 0, 414, 350, 401, 406,
	336, 330, 261, 403, 334, 329, 317, 296, 448, 318,
	319, 309, 362, 328, 363, 310, 340, 339, 341, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 320, 0, 0, 0, 433, 0, 375,
	356, 0, 0, 0, 373, 326, 402, 364, 408, 391,
	416, 369, 365, 253, 392, 291, 337, 265, 267, 286,
	293, 295, 297, 298, 346, 347, 359, 380, 393, 394,
	395, 290, 275, 374, 276, 307, 277, 254, 282, 280,
	283, 382, 284, 256, 360, 399, 0, 303, 370, 333,
	257, 332, 361, 398, 397, 266, 424, 430, 431, 0,
	0, 436, 0, 0, 0, 445, 450, 451, 452, 454,
	455, 456, 457, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 429, 321, 322, 323, 301,
	250, 251, 474, 287, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 428, 0, 0,
	0, 458, 473, 0, 0, 0, 0, 0, 470, 358,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 410, 422, 439, 442, 0,
	0, 0, 0, 255, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 437, 0, 0, 342, 343, 344, 345,
	304, 0, 273, 440, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 435, 300, 306, 453, 308,
	272, 357, 302, 419, 315, 0, 446, 0, 447, 0,
	0, 0, 0, 349, 311, 312, 383, 316, 327, 371,
	418, 355, 376, 270, 409, 384, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 281, 248, 278,
	279, 285, 471, 468, 400, 472, 0, 252, 0, 325,
	0, 366, 299, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 219,
	220, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 0, 249, 244,
	245, 246, 247, 354, 0, 0, 425, 426, 427, 449,
	411, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	475, 463, 0, 0, 0, 0, 459, 0, 460, 0,
	0, 0, 0, 464, 385, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 268, 197, 461, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 390,
	1244, 269, 381, 420, 274, 388, 264, 353, 377, 0,
	0, 260, 405, 387, 335, 313, 314, 259, 0, 372,
	292, 305, 289, 351, 0, 404, 432, 288, 423, 0,
	415, 262, 0, 414, 350, 401, 406, 336, 330, 261,
	403, 334, 329, 317, 296, 448, 318, 319, 309, 362,
	328, 363, 310, 340, 339, 341, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	320, 0, 0, 0, 433, 0, 375, 356, 0, 0,
	0, 373, 326, 402, 364, 408, 391, 416, 369, 365,
	253, 392, 291, 337, 265, 267, 286, 293, 295, 297,
	298, 346, 347, 359, 380, 393, 394, 395, 290, 275,
	374, 276, 307, 277, 254, 282, 280, 283, 382, 284,
	256, 360, 399, 0, 303, 370, 333, 257, 332, 361,
	398, 397, 266, 424, 430, 431, 0, 0, 436, 0,
	0, 0, 445, 450, 451, 452, 454, 455, 456, 457,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 429, 321, 322, 323, 301, 250, 251, 474,
	287, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 428, 0, 0, 0, 458, 473,
	0, 0, 0, 0, 0, 470, 358, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 410, 422, 439, 442, 0, 0, 0, 0,
	255, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	437, 0, 0, 342, 343, 344, 345, 304, 0, 273,
	440, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 435, 300, 306, 453, 308, 272, 357, 302,
	419, 315, 0, 446, 0, 447, 0, 0, 0, 0,
	349, 311, 312, 383, 316, 327, 371, 418, 355, 376,
	270, 409, 384, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 281, 248, 278, 279, 285, 471,
	468, 400, 472, 0, 252, 0, 325, 0, 366, 299,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 0, 249, 244, 245, 246, 247,
	354, 0, 0, 425, 426, 427, 449, 411, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 475, 463, 0,
	0, 0, 0, 459, 0, 460, 0, 0, 0, 0,
	464, 385, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 268,
	197, 461, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 390, 1242, 269, 381,
	420, 274, 388, 264, 353, 377, 0, 0, 260, 405,
	387, 335, 313, 314, 259, 0, 372, 292, 305, 289,
	351, 0, 404, 432, 288, 423, 0, 415, 262, 0,
	414, 350, 401, 406, 336, 330, 261, 403, 334, 329,
	317, 296, 448, 318, 319, 309, 362, 328, 363, 310,
	340, 339, 341, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 320, 0, 0,
	0, 433, 0, 375, 356, 0, 0, 0, 373, 326,
	402, 364, 408, 391, 416, 369, 365, 253, 392, 291,
	337, 265, 267, 286, 293, 295, 297, 298, 346, 347,
	359, 380, 393, 394, 395, 290, 275, 374, 276, 307,
	277, 254, 282, 280, 283, 382, 284, 256, 360, 399,
	0, 303, 370, 333, 257, 332, 361, 398, 397, 266,
	424, 430, 431, 0, 0, 436, 0, 0, 0, 445,
	450, 451, 452, 454, 455, 456, 457, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 429,
	321, 322, 323, 301, 250, 251, 474, 287, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 428, 0, 0, 0, 458, 473, 0, 0, 0,
	0, 0, 470, 358, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 410,
	422, 439, 442, 0, 0, 0, 0, 255, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 437, 0, 0,
	342, 343, 344, 345, 304, 0, 273, 440, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 435,
	300, 306, 453, 308, 272, 357, 302, 419, 315, 0,
	446, 0, 447, 0, 0, 0, 0, 349, 311, 312,
	383, 316, 327, 371, 418, 355, 376, 270, 409, 384,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 281, 248, 278, 279, 285, 471, 468, 400, 472,
	0, 252, 0, 325, 0, 366, 299, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 354, 0, 0,
	425, 426, 427, 449, 411, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 475, 463, 0, 0, 0, 0,
	459, 0, 460, 0, 0, 0, 0, 464, 385, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 268, 197, 461, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 390, 407, 269, 381, 420, 274, 388,
	264, 353, 377, 0, 0, 260, 405, 387, 335, 313,
	314, 259, 0, 372, 292, 305, 289, 351, 0, 404,
	432, 288, 423, 0, 415, 262, 0, 414, 350, 401,
	406, 336, 330, 261, 403, 334, 329, 317, 296, 448,
	318, 319, 309, 362, 328, 363, 310, 340, 339, 341,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 320, 0, 0, 0, 433, 0,
	375, 356, 0, 0, 0, 373, 326, 402, 364, 408,
	391, 416, 369, 365, 253, 392, 291, 337, 265, 267,
	554, 293, 295, 297, 298, 346, 347, 359, 380, 393,
	394, 395, 290, 275, 374, 276, 307, 277, 254, 282,
	280, 283, 382, 284, 256, 360, 399, 0, 303, 370,
	333, 257, 332, 361, 398, 397, 266, 424, 430, 431,
	0, 0, 436, 0, 0, 0, 445, 450, 451, 452,
	454, 455, 456, 457, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 429, 321, 322, 323,
	301, 250, 251, 474, 287, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 428, 0,
	0, 0, 458, 473, 0, 0, 0, 0, 0, 470,
	358, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 410, 422, 439, 442,
	0, 0, 0, 0, 255, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 437, 0, 0, 342, 343, 344,
	345, 304, 0, 273, 440, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 435, 300, 306, 453,
	308, 272, 357, 302, 419, 315, 0, 446, 0, 447,
	0, 0, 0, 0, 349, 311, 312, 383, 316, 327,
	371, 418, 355, 376, 270, 409, 384, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 281, 248,
	278, 279, 285, 471, 468, 400, 472, 0, 252, 0,
	325, 0, 366, 299, 905, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 1692, 425, 426, 427,
	449, 411, 0, 469, 0, 174, 51, 163, 138, 0,
	0, 0, 0, 0, 174, 51, 163, 138, 0, 0,
	0, 475, 463, 164, 0, 0, 0, 0, 0, 0,
	156, 1694, 164, 0, 165, 0, 0, 0, 0, 156,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 891, 0, 0, 0, 103, 0,
	0, 0, 3207, 0, 168, 0, 0, 103, 0, 0,
	0, 0, 1669, 168, 913, 917, 919, 921, 923, 924,
	926, 0, 931, 927, 928, 929, 930, 0, 908, 909,
	910, 911, 889, 890, 914, 0, 892, 0, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 904, 906, 902,
	903, 912, 0, 0, 0, 0, 0, 0, 0, 916,
	918, 920, 922, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	120, 121, 0, 122, 123, 0, 0, 0, 0, 120,
	121, 0, 122, 123, 0, 0, 0, 907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 162, 172, 0, 101, 0, 1694, 1662, 1673,
	137, 162, 172, 0, 101, 0, 0, 1695, 1696, 0,
	1679, 0, 0, 161, 155, 154, 0, 0, 0, 0,
	57, 0, 161, 155, 154, 0, 0, 0, 0, 57,
	1667, 1701, 0, 1661, 1668, 1670, 1672, 0, 1674, 1675,
	1676, 1680, 1681, 1682, 1684, 1687, 1688, 1689, 1669, 0,
	0, 0, 0, 0, 0, 1677, 1686, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2277, 2278, 0, 0, 0, 0,
	0, 157, 158, 159, 0, 0, 0, 0, 0, 1693,
	157, 158, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 1685, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 1690, 0, 0, 160, 0, 112, 0, 0,
	111, 0, 0, 0, 160, 0, 112, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 1652, 1654, 1651, 1671,
	1648, 0, 0, 0, 113, 1673, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 1679, 50, 0, 0,
	0, 0, 0, 0, 1664, 0, 50, 0, 915, 0,
	0, 0, 0, 0, 0, 0, 1667, 1701, 0, 0,
	1668, 1670, 1672, 0, 1674, 1675, 1676, 1680, 1681, 1682,
	1684, 1687, 1688, 1689, 1692, 0, 0, 0, 0, 1653,
	0, 1677, 1686, 1678, 0, 0, 52, 0, 0, 0,
	905, 0, 0, 1656, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	1662, 0, 0, 0, 0, 1693, 0, 0, 0, 1695,
	1696, 169, 170, 0, 171, 0, 0, 0, 0, 139,
	169, 170, 0, 171, 0, 0, 0, 0, 139, 0,
	1649, 1650, 0, 0, 0, 1661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1690, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 39, 0, 0, 0, 0, 0, 49, 0,
	114, 39, 5, 0, 0, 0, 1683, 49, 118, 119,
	891, 0, 0, 0, 0, 1671, 0, 118, 119, 0,
	0, 0, 0, 0, 0, 0, 1486, 1685, 1698, 1697,
	913, 917, 919, 921, 923, 924, 926, 0, 931, 927,
	928, 929, 930, 0, 908, 909, 910, 911, 889, 890,
	914, 0, 892, 0, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 904, 906, 902, 903, 912, 753, 0,
	754, 0, 0, 0, 0, 916, 918, 920, 922, 925,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1652, 2412,
	1651, 0, 2411, 0, 0, 0, 734, 1673, 0, 0,
	0, 0, 0, 907, 0, 0, 0, 0, 1679, 748,
	0, 744, 0, 1700, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 1701,
	0, 0, 1668, 1670, 1672, 0, 1674, 1675, 1676, 1680,
	1681, 1682, 1684, 1687, 1688, 1689, 1692, 0, 0, 0,
	0, 0, 0, 1677, 1686, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1482, 0,
	0, 1694, 0, 0, 1479, 0, 0, 1693, 1481, 1478,
	1480, 1484, 1485, 0, 0, 0, 1483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	0, 0, 1649, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 0, 1669, 0, 0, 0, 0, 0, 750, 0,
	743, 0, 1694, 0, 0, 0, 0, 1666, 0, 747,
	746, 0, 0, 0, 1665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 1671, 0, 0,
	742, 0, 0, 1669, 0, 3185, 0, 0, 0, 1685,
	1698, 1697, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 741, 0, 0, 0, 740, 0,
	0, 0, 0, 0, 727, 0, 0, 0, 733, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1489, 1490, 1491, 1492, 1493, 1494, 1487, 1488, 0, 731,
	0, 0, 0, 1658, 533, 532, 539, 529, 0, 0,
	1685, 0, 0, 0, 0, 0, 536, 537, 0, 538,
	542, 0, 0, 524, 0, 0, 0, 0, 0, 1673,
	0, 0, 0, 547, 915, 0, 751, 0, 0, 0,
	1679, 0, 0, 0, 0, 1700, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 1701, 732, 0, 1668, 1670, 1672, 0, 1674, 1675,
	1676, 1680, 1681, 1682, 1684, 1687, 1688, 1689, 0, 533,
	532, 539, 529, 0, 0, 1677, 1686, 1678, 0, 0,
	1673, 536, 537, 0, 538, 542, 0, 0, 524, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	0, 1667, 1701, 0, 0, 1668, 1670, 1672, 0, 1674,
	1675, 1676, 1680, 1681, 1682, 1684, 1687, 1688, 1689, 749,
	0, 0, 0, 0, 0, 0, 1677, 1686, 1678, 0,
	0, 551, 0, 0, 553, 0, 0, 0, 0, 552,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 1666,
	1693, 0, 0, 0, 0, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	525, 527, 526, 1690, 0, 0, 0, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1666, 0, 535, 0, 0, 0, 0, 1665, 0, 550,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 0,
	1671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 527, 526, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 534, 540, 0, 541, 543,
	0, 0, 544, 545, 546, 0, 0, 548, 549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	534, 540, 0, 541, 543, 0, 0, 544, 545, 546,
	0, 0, 548, 549,
}

var yyPact = [...]int{
	41082, -1000, -1000, -1000, -337, 11548, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38793,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38793,
	-334, 38226, 38226, -1000, -1000, 2224, -1000, 37659, 12703, 38793,
	330, 324, 38793, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 689, -1000, 37092, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 594, 3649, 40494, 8624, -267, -1000, 1434, -96, 2139,
	816, 828, 973, 973, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 41702, 716, 36525,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3242, 325, 716, 15538, 20, 19, 1434, 329, -150,
	-149, -154, 2736, -1000, 1050, 41091, 160, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8624, 8624,
	11548, -366, 11548, 8624, 38793, 38793, -1000, -1000, -1000, -1000,
	594, 3649, 8624, 2139, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -149, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -150, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -154, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3607, -1000, 1379, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2594, 1377, 2124, 538,
	38793, -1000, 1376, 538, -1000, -1000, -1000, 1434, 3118, -1000,
	38793, 38793, 85, 1547, -1000, 342, 367, 323, 1375, -1000,
	-1000, -1000, -1000, -1000, -1000, 461, 3044, -1000, 38793, 38793,
	2631, 38793, -1000, 1882, 481, 42116, 2805, 1089, 700, 2644,
	-1000, -1000, 2593, -1000, 209, 188, 195, 289, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 228, -1000, 2933, -1000, -1000,
	198, -1000, -1000, 175, -1000, -1000, -1000, 18, -1000, -1000,
	-1000, -1000, -1000, -1000, -79, -1000, -1000, 874, 1630, 8624,
	-1000, 1756, -1000, 3440, -1000, -1000, -1000, -1000, 5120, 10960,
	10960, 10960, 10960, -1000, -1000, 2423, 8624, 2591, 2583, 2582,
	-1000, -1000, -1000, -1000, -1000, -1000, 1374, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1694, -1000, -1000, -1000,
	10376, -1000, 2575, 2574, 2573, 2572, 2571, 2565, 2560, 2556,
	2549, 2548, 2547, 2542, 2535, 2531, 2312, 12116, 2529, 2123,
	2122, 2524, 2523, 2522, 2120, 2312, 2312, 2517, 2516, 2506,
	2505, 2504, 2503, 2501, 2500, 2498, 2497, 2496, 2495, 2493,
	2487, 2486, 2484, 2483, 2482, 2480, 2479, 2473, 2457, 2456,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1201, -1000, 2454, 3066, 2367, -1000, 2916,
	2902, 2873, 2868, -308, 2441, 1867, -1000, -1000, 63, -1000,
	-115, -1000, -1000, 835, -1000, 781, -1000, 38793, 38793, 146,
	645, 574, 574, 574, 574, 574, 658, 574, 2955, 685,
	678, 676, 668, 574, -103, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1543, 1539, 2714, 762, -1000, -1000, -1000, -1000,
	1233, 38793, -1000, 2353, 1432, 1432, 2943, 506, 494, 488,
	1432, 374, -1000, 1536, 1536, 1536, 1536, 1432, 388, 500,
	2960, 2960, -5, 1536, 5, 1432, 1432, 5, 1432, 1432,
	1432, 178, -317, -1000, -1000, -1000, -1000, 1536, 1536, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2924, 2922, 594, 594,
	38793, 145, 38793, 594, 594, 594, 599, -31, 39927, 39360,
	1882, 479, 473, 1248, 1541, -1000, 1437, 38793, 38793, 1437,
	1437, 20081, 19514, -1000, 38793, -1000, 3066, 2367, 2303, 1476,
	2302, 2367, -158, -159, -162, 594, 594, 594, 594, 594,
	156, 594, 594, 594, 594, 594, 38793, 38793, 35958, 594,
	594, 6872, 6872, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11548, 1895, 1891, 158, -63, -329, 202, -1000,
	-1000, 38793, 2778, 161, -1000, -1000, -1000, 2319, -1000, 2344,
	2344, 2344, 2344, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2344, 2344, 2350, 2438, -1000, -1000, 2343, 2343,
	2343, 2319, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2348, 2348, 2349,
	2349, 2348, 38793, 8624, 38793, 2795, 339, 2433, -1000, 38793,
	315, 3066, 2792, 2960, 3021, -1000, -1000, 1373, 1848, 2119,
	-1000, -1000, 342, 1395, -1000, 893, -1000, -1000, -1000, -1000,
	38793, -79, 335, -1000, -1000, 2115, 2432, -1000, 493, 968,
	1207, -1000, 189, 42041, 30854, 1882, 30854, 38793, -1000, -1000,
	-1000, -1000, -1000, -1000, 14, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 190, -1000,
	8624, 8624, 8624, 8624, 8624, -1000, 535, 9792, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10960, 10960, 10960, 10960, 10960,
	10960, 10960, 10960, 10960, 10960, 10960, 10960, 2418, 1615, 10960,
	10960, 10960, 10960, 1476, 2980, 1234, 239, -1000, -1000, -1000,
	-1000, -1000, 1550, 1630, 8624, 8624, 8624, 38793, -1000, -1000,
	3140, 8624, 8624, 41528, 8624, 2856, 8624, 8624, 8624, 2293,
	4501, 38793, 8624, -1000, 2292, 2291, -1000, -1000, 1700, 8624,
	-1000, -1000, 8624, -1000, -1000, 8624, 10960, 8624, -1000, -1000,
	-1000, 2077, 2856, 2856, 2856, 1548, 8624, 8624, 2856, 2856,
	2856, 1523, 2856, 2856, 2856, 2856, 2856, 2856, 2856, 2856,
	2277, 2276, 2274, 8040, 2960, -267, -1000, 6288, 2792, 2960,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-310, 2431, 38793, 2118, 2117, -350, -37, 809, 784, 789,
	-1000, 2847, -1000, 2429, 38793, 574, 574, 574, -1000, 38793,
	1598, 30854, 38793, 38793, 1882, 38793, 38793, 38793, 574, 574,
	574, 574, 38793, -1000, 2731, 30854, 2722, 599, -1000, 38793,
	1233, 2844, 38793, 3031, 10960, 10960, -1000, 35391, 1536, 1432,
	1432, -1000, -1000, 38793, -1000, -1000, -1000, 1536, 38793, 1536,
	1536, 3031, 1536, -1000, -1000, -1000, 1432, 1432, -1000, -1000,
	8624, -1000, -1000, 1536, 1536, -1000, -1000, 3031, 38793, 9,
	3031, 3031, 1, -1000, -1000, -1000, 38793, 38793, 574, 38793,
	-1000, 38793, 38793, -1000, -1000, 38793, 38793, 41276, 38793, 34824,
	2920, -1000, 30854, 38793, 38793, 28586, -1000, 1144, -1000, -41,
	-1000, -39, -31, 1437, -31, 1437, -1000, 492, 518, 18379,
	434, 30854, 3903, -1000, -1000, 1437, 1437, 3903, 3903, 1397,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1231, -1000, 194,
	2960, -1000, -1000, -1000, -1000, -1000, 1827, 1826, 1825, 38793,
	38793, 30854, 1882, 38793, 594, 38793, 38793, 38793, 38793, 38793,
	-1000, 2425, 1372, -1000, 2801, 38793, 38793, 1070, -1000, -1000,
	14971, 1362, 1070, -1000, 1591, -1000, 8624, 11548, -286, 8624,
	11548, 11548, 8624, 11548, -1000, 8624, 148, -1000, -1000, -1000,
	-1000, 1821, -1000, 1817, -1000, -1000, -1000, -1000, -1000, 2111,
	2111, -1000, 1816, -1000, -1000, -1000, -1000, 1814, -1000, -1000,
	1804, -1000, -1000, -1000, 2270, 874, -1000, 2108, 2642, -268,
	-1000, 17243, 38793, 38793, -1000, -1000, -268, -1000, 16674, 38793,
	2960, -1000, -272, 2792, 8624, 38793, -1000, 2942, -1000, 342,
	280, -1000, -1000, -1000, -1000, -1000, -1000, 1348, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1217, -1000, 38793,
	-1000, -1000, 189, 30854, 32556, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 211, -1000, -1000, 170, -1000, 648, 116, 1390,
	-1000, -1000, 152, 171, 88, 732, 1630, -1000, 1609, 1609,
	1610, -1000, 554, -1000, -1000, -1000, -1000, 2423, -1000, -1000,
	-1000, 1810, 2887, -1000, 1473, 1473, 1351, 1351, 1351, 1351,
	1351, 1465, 1465, -1000, -1000, -1000, 5120, 2418, 10960, 10960,
	10960, 10960, 551, 551, 2605, 2774, -1000, 8624, 1542, -1000,
	8624, 1979, 1962, 1365, 1346, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2269, 2267, 2060, 3043, 2265,
	8624, -1000, -1000, 1380, 1370, 1366, -1000, 1972, 7456, -1000,
	-1000, -1000, 2261, 1340, 2257, -1000, -1000, -1000, 2255, 1364,
	934, 2253, 1368, 2252, 1214, 8624, 8624, 8624, 8624, 2236,
	1344, 1338, 8624, 8624, 8624, 8624, 2233, 8624, 8624, 8624,
	8624, 8624, 8624, 8624, 8624, 36, 36, 36, 1187, 1183,
	-1000, -1000, 1336, -1000, 1630, -1000, -1000, 2792, -1000, 2416,
	1802, 1163, -1000, -1000, -1000, 2070, -1000, -1000, 797, 778,
	790, 38793, 962, 2415, 38793, 38793, 38793, 154, -1000, 2799,
	1026, -1000, 116, -95, 341, 890, 2630, 3036, -174, 38793,
	38793, 38793, 38793, 2841, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34257, -1000, 2413, 1314, -1000, -1000, 8624, -1000,
	-1000, 2624, 38793, 38793, 3031, 3031, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1536, 3031, 3031, 1216, 1432, 1536, -1000,
	-1000, 1536, -1000, -1000, 1536, -1000, 1335, -1000, 38793, -1000,
	-1000, -1000, 2830, 2353, 1155, -1000, -1000, -1000, 883, 564,
	564, 775, 416, 3020, 14404, -1000, 1455, 881, 646, 2737,
	206, -1000, 1455, -215, 543, 1455, 1455, 1455, 1455, 1455,
	1455, 1455, 441, 432, 1455, 1455, 1455, 1455, 1455, 1455,
	1455, 1455, 1455, 1455, 1455, 821, 1455, 1455, 1455, 1455,
	1455, -1000, 1455, 2412, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 480, 147, 2919, 247, 243, 1026, 2897, 245, 3065,
	991, -1000, -1000, -1000, -1000, 22349, 22349, 17812, 22349, -1000,
	1389, -31, -49, -1000, -1000, 1144, 3903, 1144, 3903, -1000,
	-1000, 637, -1000, -1000, 890, -1000, 38793, 38793, -1000, -1000,
	2375, 1533, -1000, -1000, 12116, -1000, 3903, 3903, -1000, -1000,
	22916, 38793, -1000, -88, -1000, -61, 2792, -1000, -1000, -1000,
	1123, -1000, -1000, 1139, 890, 2641, 38793, 1123, 1123, 1123,
	-1000, -1000, 13270, 38793, 38793, -1000, -1000, 3031, 6872, -1000,
	28586, -1000, -1000, 33690, -1000, 33123, 3031, 1574, -1000, 11548,
	1874, 153, -1000, 197, -333, 149, 1593, 144, 1630, -1000,
	-1000, 2231, 2230, 1309, -1000, 1297, 2228, 1296, 1295, -1000,
	-8, -1000, 2781, 905, -1000, 2370, -1000, 1274, 2711, -1000,
	1122, -1000, 1531, 1246, -1000, 905, 1236, 2710, 1122, 2792,
	2099, -1000, 1112, -1000, 1986, 1333, 82, -1000, -1000, 38793,
	2115, 1230, 32556, 1010, -1000, 633, 1327, 1326, -1000, 30854,
	201, 30854, -1000, 30854, -1000, -1000, 332, -1000, 38793, 2789,
	-1000, -1000, -1000, 2070, 1530, -359, 38793, -1000, -1000, -1000,
	-1000, -1000, 1215, -1000, 551, 551, 2605, 2652, -1000, 10960,
	-1000, 10960, 2976, 1573, -1000, 8624, 1682, 41003, 41003, 1544,
	21215, 38793, -1000, -1000, 8624, 8624, -1000, 2957, -1000, -1000,
	-1000, -1000, 8624, 8624, 2024, -1000, 38793, -1000, -1000, -1000,
	-1000, 21215, -1000, 10960, -1000, 8624, 1064, 1064, 2875, 1212,
	36, 36, 36, 2787, 2783, 2750, 1210, 36, 2734, 2597,
	2558, 2550, 2540, 2525, 2491, 2461, -1000, 2369, -1000, -1000,
	1688, 9208, 6288, -1000, -1000, 235, 1101, 1799, 112, -1000,
	1525, -1000, -1000, -1000, 770, 166, 2227, 1087, -1000, -1000,
	38793, -1000, -1000, -1000, 13270, 2353, 2368, 2353, 45, 1455,
	-1000, 478, 30854, 457, -1000, 38793, 1871, 1524, 2640, 449,
	2777, 38793, 2366, 2364, 2362, 2361, 2828, 317, 41549, 38793,
	994, -1000, 1313, 41091, -1000, 38793, 1630, -1000, 1882, -1000,
	1432, -1000, -1000, 3031, -1000, -1000, 8624, 8624, 3031, 1432,
	1432, 1536, 38793, -1000, 317, 41549, 2815, 41558, 2121, -1000,
	38793, -1000, -1000, -1000, 701, -1000, 782, 574, 38793, 1652,
	782, 1647, 2360, -1000, -1000, 38793, 38793, 38793, 38793, -1000,
	-1000, 38793, -1000, 38793, 38793, 38793, 38793, 38793, 31989, -1000,
	38793, 38793, -1000, 38793, 1641, 1628, 2882, -1000, 1455, 1455,
	738, -1000, -1000, 487, -1000, 31989, 1798, 1793, 1792, 1791,
	2092, 2089, 2088, 1455, 1455, 1780, 2087, 31421, 2086, 953,
	1779, 1778, 1769, 1812, 2085, 675, -1000, 2079, 1808, 1801,
	1797, 38793, 2354, 1991, -1000, -1000, 45, 1455, 242, 38793,
	1522, 478, 334, 1879, 18947, 38793, 28586, 28586, 28586, 28586,
	-1000, 2699, 2697, -1000, 2687, 2685, 2691, 38793, 28586, 2353,
	-1000, 31421, -1000, -1000, -1000, 1476, 1188, 2871, 747, 8624,
	-1000, -1000, -62, -44, -1000, -1000, -1000, 30854, 2078, 434,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2939, 38793, 38793,
	549, 2226, 1076, -1000, -1000, -1000, 41549, 2344, 2344, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2344, 2344,
	2350, -1000, -1000, 2343, 2343, 2343, 2319, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2348, 2348, 2349, 2349,
	2348, -1000, -1000, 3028, -1000, 1073, -1000, -1000, 1292, -1000,
	3028, 1534, -338, 11548, 1581, 1478, -1000, 8624, 11548, 8624,
	-297, 225, -299, -1000, -1000, -1000, 2074, -1000, -1000, -1000,
	1764, -1000, 1759, 50, 60, 1627, -268, 6288, 316, 38793,
	-268, 38793, 6288, -1000, 38793, 314, -268, 2939, -8, 8624,
	2766, -1000, -1000, 38793, 1758, -1000, -1000, -1000, 3033, 30854,
	1882, 1407, 30287, -1000, 192, -1000, 183, 446, 2072, -1000,
	664, 110, 2071, 2070, -1000, -1000, -1000, -1000, 10960, -1000,
	-1000, -1000, -1000, 1630, 8624, 2222, -1000, 794, 794, 2221,
	2213, -1000, 2344, 2344, -1000, 2319, 2343, 2319, 794, 794,
	2210, -1000, 1992, 2447, -1000, 2189, 2168, 8624, -1000, 2208,
	2589, 1083, -107, -242, 36, 36, -1000, -1000, -1000, -1000,
	36, 36, 36, 36, -1000, 36, 36, 36, 36, 36,
	36, 36, 36, 540, -152, -322, -153, -324, -1000, 2207,
	1053, -1000, -1000, -1000, -1000, -1000, 41528, 1048, -1000, 2070,
	2067, -1000, 2066, 2052, 962, 41549, 2206, 2813, 13837, 2812,
	1880, -1000, -1000, -1000, 29720, 440, -1000, -1000, -1000, 585,
	215, 1754, 424, -1000, 38793, 245, 2724, 1521, 2051, 38793,
	-1000, -1000, -1000, -1000, -1000, -1000, 2777, -1000, 615, 284,
	27452, 13837, 13837, 13837, 319, 303, 1527, -1000, 538, 950,
	1279, 28586, 38793, -1000, 28019, 2205, -1000, 890, 3031, -1000,
	1630, 1630, -1000, 3031, 3031, 1432, -1000, 303, -1000, 319,
	-1000, 1388, 16105, -1000, 529, 2761, 41549, -1000, 38793, -1000,
	38793, -1000, 38793, 38793, 574, 8624, 2761, 38793, 629, -1000,
	-1000, 908, 281, 265, 582, 582, 1046, -1000, 2786, -1000,
	-1000, 1035, -1000, -1000, -1000, -1000, 38793, -1000, -1000, -1000,
	-1000, -1000, -1000, 21215, 21215, 2876, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2042,
	2041, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38793, 1186, -1000, 1518, 1880, 29720, 1517, 1437, 2037, 440,
	1871, 1508, -1000, 2036, -1000, 914, 38793, 38793, -1000, 1047,
	-1000, 1507, 2599, 2634, 2599, -1000, -1000, -1000, -1000, 2688,
	-1000, 2669, -1000, -1000, 1047, -1000, -1000, -1000, -1000, -1000,
	747, -1000, 2937, 782, 782, 782, 2204, -1000, -1000, -1000,
	1010, 2201, -1000, -1000, -1000, 3057, -1000, -1000, -1000, -1000,
	-1000, -1000, 13270, 2771, 3024, 3017, 29153, 3024, -1000, -338,
	1463, -1000, 1659, 143, 1587, 38793, -1000, -1000, -1000, 2199,
	2198, -274, 72, 3016, 3014, 819, -1000, 2193, 1005, -268,
	-1000, -1000, 905, -1000, -1000, -1000, -268, -1000, 905, -1000,
	50, -1000, -1000, 2756, -1000, -1000, 1882, -1000, 180, -1000,
	-1000, -1000, -1000, -1000, -1000, 98, -1000, 38793, -1000, 955,
	105, -1000, 1630, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8624,
	-1000, -1000, -1000, 2114, -1000, -1000, 8624, 2188, 2027, 2185,
	2023, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3066, -1000, 2999, 2176, 2174,
	2173, 2171, 2166, 2159, -1000, 8624, 2158, 41528, -1000, -1000,
	-1000, -1000, -1000, -1000, 693, 319, 2153, 925, -1000, -1000,
	-1000, -1000, 319, -1000, 2006, 108, -1000, -1000, -1000, 2005,
	1997, 1750, -1000, -1000, 1765, 1339, 128, -1000, -1000, -1000,
	-1000, -1000, -1000, 1879, 1824, 1505, -360, -1000, 2338, -1000,
	1455, 1455, 1455, 38793, 1182, -1000, 1455, 1455, 2151, 2150,
	2148, -175, 546, 1501, 1497, -1000, 1749, 22349, 28586, 28019,
	987, -1000, 1278, -1000, -1000, -1000, -1000, -1000, 3031, 546,
	-1000, 1175, -1000, 38793, -1000, -1000, 38793, 252, 2336, -1000,
	2334, 2622, 337, 2333, 2332, 38793, 2109, -1000, 2761, 38793,
	593, 2764, -1000, -1000, -1000, 254, -1000, -1000, 389, -1000,
	38793, -1000, 38793, -1000, 1392, -1000, 21215, -1000, -1000, 1166,
	-1000, 1991, 1988, -1000, 108, 1977, 3903, -1000, -1000, 2724,
	1976, -1000, 38793, 914, 914, 3066, 38793, 6288, -1000, -1000,
	8624, 2330, -1000, 8624, -1000, -1000, -1000, -1000, -1000, 2329,
	2758, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1203, -1000,
	8624, 8624, -1000, -1000, 571, 11548, -301, 220, -1000, -1000,
	-1000, -276, 1975, -1000, -1000, 2998, 1971, 1906, 38793, -1000,
	-1000, 905, 905, -274, -1000, -1000, 890, -1000, -1000, 1,
	460, -1000, 2105, -1000, 2073, 36, -1000, 36, -1000, 150,
	8624, -1000, -1000, -1000, -1000, -1000, -1000, 2033, -1000, 2110,
	41549, -197, -175, 13837, -197, -1000, -1000, 313, -1000, -1000,
	259, -1000, -1000, 1761, 489, -1000, -1000, -1000, 1503, 1662,
	1922, 26318, 21215, 21782, 1970, -1000, -1000, 27452, 1203, 1203,
	41901, 190, 41901, -1000, 2328, 833, 1460, -1000, 1747, -1000,
	1744, -1000, 3031, 987, 1278, -1000, -1000, 1398, -1000, 833,
	-1000, 529, 2707, -1000, -1000, 252, -1000, -1000, 1661, 10960,
	-1000, -1000, 1955, 21782, 692, 1502, 1479, 699, 2323, -1000,
	395, 3056, -1000, -1000, -1000, 735, 2322, -1000, 1626, 1620,
	-1000, 38793, -1000, 26318, 26318, 350, 350, 26318, 26318, 2321,
	582, -1000, -1000, 10960, -1000, -1000, 1455, -1000, -1000, -1000,
	1455, 1384, -1000, -1000, -1000, -1000, -1000, -1000, 1824, -1000,
	-1000, 2960, -1000, -1000, 1630, 38793, 1630, 26885, -1000, 2997,
	2995, -1000, 1630, 874, -1000, -338, 38793, 38793, -278, 1720,
	-1000, 1952, 69, -1000, -1000, 877, -276, -280, 44, 64,
	1466, -1000, -1000, -1000, -1000, 2029, -1000, 507, -1000, -1000,
	-1000, 874, -1000, -1000, -172, -1000, -1000, 333, -1000, -1000,
	-1000, 445, 1947, -1000, -1000, 251, -1000, -1000, 1946, -1000,
	-1000, 100, -1000, 1462, 1128, -1000, 2319, 8624, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 519, 41840, -1000, 881,
	-1000, 1, 519, 25184, 466, 244, -1000, 1719, -1000, -1000,
	3066, -1000, 463, -1000, 41080, 655, -1000, -1000, 2605, -1000,
	-1000, -1000, -1000, -1000, -1000, 1945, 1943, -1000, -1000, -1000,
	-1000, -1000, 1717, 2318, -80, 2854, 1940, -1000, -1000, 2317,
	1124, 1121, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1117, 1113, 26318, -1000, -1000, 2605, 1716, 21215, 1455, -1000,
	-1000, 1108, 1105, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2315, -1000, -1000, 2994, -278, -1000, 1939, 583, 54, 64,
	-1000, 2993, 68, 2992, 2991, 1937, -1000, -1000, 718, -269,
	33, 32, 31, -1000, -1000, -1000, 8624, 38793, 391, -1000,
	-1000, -1000, 97, -1000, -1000, -1000, -1000, 1922, 1910, -1000,
	26318, 2786, 1908, 351, 2982, 41901, -1000, 1455, -1000, 351,
	1102, -1000, 1455, 1455, -1000, 318, -1000, 1441, -1000, 1715,
	-1000, 2960, -1000, 311, -1000, -1000, 41080, 357, -1000, 513,
	2314, -1000, -1000, 1984, 8624, 2312, 1455, 1967, -166, 26318,
	2620, 2619, 2616, 2615, 1100, -1000, -1000, 21215, -1000, -1000,
	25751, 38793, 1906, -1000, -1000, 2309, 1712, 72, 55, 2981,
	-1000, 1906, 2972, 1906, 1906, 864, 1602, -1000, 29, 27,
	25, -1000, -1000, -1000, -1000, 450, -1000, 191, -1000, -1000,
	-1000, 238, -1000, -1000, 2786, -1000, 2969, 384, -1000, 21215,
	-1000, -1000, 25184, 1203, 1203, -1000, -1000, 1710, -1000, -1000,
	-1000, -1000, -1000, 1093, -1000, 38793, 715, 8624, -1000, 1819,
	-1000, 38793, -1000, 2633, -1000, 165, 1092, 238, 350, 238,
	350, 238, 350, 238, 350, 181, -1000, -1000, -1000, 1091,
	-1000, -1000, 2852, 20648, 46, -1000, -1000, -1000, 1907, -1000,
	1906, -1000, -1000, -1000, 39, 718, -1000, -1000, -1000, 1905,
	-1000, -1000, -1000, -1000, 1455, 1455, 1893, 1892, 291, -1000,
	-1000, -1000, 24617, 359, 382, 365, -1000, 512, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 357, 41901, -1000, 8624, 1061,
	582, -1000, -1000, 2592, 2543, 3041, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 38793, -1000, 38793, -1000,
	1043, -1000, -1000, -1000, 1271, -1000, -1000, -1000, -1000, 1450,
	-1000, -319, 1707, 1704, -1000, -1000, 38793, -1000, 38793, 343,
	1699, 10960, 2308, 10960, 2307, 366, 2306, -1000, 41901, 1009,
	-1000, -1000, -1000, 3055, -1000, 3049, 708, 708, 238, 238,
	238, 238, -1000, 863, -1000, 1447, -1000, 24050, 38793, 1890,
	-1000, -1000, 1889, -1000, -1000, -1000, 993, 2121, 2962, -1000,
	2545, 38793, 2184, 38793, 1998, 1439, 10960, -1000, -1000, -1000,
	-1000, 1735, 402, -1000, 38793, 5704, -1000, 1262, -1000, -1000,
	-1000, -1000, 369, -1000, 980, -1000, 979, 23483, 1690, 1538,
	-1000, -1000, -1000, -1000, -1000, 1630, 38793, 353, -1000, -1000,
	-1000, 942, -1000, -1000, -1000, -1000, 1681, -1000, -1000,
}

var yyPgo = [...]int{
	0, 169, 3078, 244, 171, 3627, 88, 243, 216, 214,
	242, 3626, 3625, 3624, 2816, 2815, 3623, 3622, 3621, 3619,
	3618, 3617, 3616, 3615, 3611, 3610, 3609, 3608, 3607, 3606,
	3605, 3604, 3603, 3602, 3600, 3599, 3598, 3597, 3595, 3593,
	3592, 3591, 3589, 3588, 3574, 3568, 236, 3567, 3565, 3564,
	3563, 3562, 3561, 3560, 3559, 3558, 3557, 3556, 3554, 3552,
	3550, 3549, 3548, 3547, 3546, 3545, 3544, 3543, 3542, 3541,
	3540, 3539, 3536, 3535, 3534, 3528, 3522, 3519, 3518, 209,
	3517, 2782, 3513, 3512, 3511, 3510, 3509, 3507, 3505, 234,
	3499, 3498, 3497, 3494, 3485, 3484, 3483, 3482, 3481, 3480,
	3476, 227, 3475, 3474, 3473, 3472, 3470, 3467, 218, 3464,
	167, 202, 3463, 3461, 3460, 3456, 3455, 3453, 235, 231,
	68, 3452, 42, 3451, 3450, 217, 3449, 141, 3448, 137,
	3447, 3441, 3440, 3439, 3438, 3436, 3435, 3432, 3427, 3426,
	3425, 3424, 3422, 3421, 3420, 3419, 86, 3418, 251, 3417,
	69, 3416, 3415, 113, 118, 199, 249, 2525, 248, 246,
	184, 174, 93, 3414, 2774, 3413, 153, 224, 150, 57,
	3412, 124, 3410, 253, 51, 44, 238, 138, 49, 155,
	110, 3408, 207, 102, 101, 3407, 3406, 131, 230, 176,
	3405, 95, 3404, 3403, 3402, 3401, 3396, 190, 187, 3395,
	3394, 122, 3393, 3392, 126, 3391, 72, 112, 161, 107,
	3390, 96, 109, 120, 132, 179, 3389, 71, 3388, 3383,
	3381, 3380, 180, 3375, 3370, 119, 61, 3368, 3366, 3362,
	64, 3361, 74, 3360, 35, 3359, 55, 3358, 3357, 3356,
	3355, 3354, 3353, 3352, 3351, 3350, 3349, 3345, 47, 3342,
	3341, 12, 11, 15, 3340, 24, 3339, 163, 3336, 3335,
	3334, 3332, 3331, 89, 83, 3329, 84, 156, 3326, 14,
	26, 70, 3324, 3320, 221, 128, 98, 136, 3318, 407,
	3317, 3316, 3315, 157, 3313, 726, 3312, 3311, 3310, 3309,
	3308, 3307, 152, 3306, 210, 37, 3304, 147, 123, 3303,
	34, 43, 200, 201, 3300, 3297, 3296, 793, 220, 91,
	67, 0, 3294, 151, 3293, 3291, 3290, 247, 3289, 226,
	233, 159, 237, 266, 240, 3288, 3287, 56, 3285, 162,
	27, 48, 133, 7, 20, 173, 3284, 399, 181, 3283,
	212, 3282, 178, 10, 135, 3281, 3280, 29, 254, 3279,
	3278, 3277, 116, 3276, 3274, 185, 81, 3272, 3271, 3260,
	3258, 41, 3257, 30, 13, 3255, 115, 3254, 245, 3253,
	270, 129, 182, 175, 145, 219, 228, 73, 77, 3248,
	1568, 146, 94, 17, 3247, 222, 3244, 166, 117, 3243,
	76, 3242, 241, 387, 203, 3241, 183, 1, 39, 32,
	3240, 2, 3229, 229, 211, 3227, 3226, 21, 45, 3225,
	19, 3224, 3219, 3218, 3217, 62, 8, 3216, 3215, 16,
	18, 3214, 31, 215, 164, 121, 90, 65, 3209, 3208,
	46, 208, 3206, 142, 170, 143, 3205, 75, 3204, 3203,
	3202, 2677, 3201, 252, 3199, 3198, 3197, 3194, 3193, 3192,
	3191, 3190, 3189, 3188, 108, 38, 3187, 3186, 3184, 3180,
	79, 144, 3178, 3177, 3176, 3175, 33, 134, 3174, 23,
	3173, 28, 25, 36, 3172, 92, 3171, 5, 189, 3170,
	3169, 9, 3167, 3166, 3, 4, 3165, 3162, 130, 3161,
	85, 22, 160, 100, 3160, 3159, 82, 204, 139, 3158,
	3157, 97, 232, 192, 3156, 127, 239, 250, 3155, 198,
	3154, 3153, 3152, 3151, 3150, 3149, 983, 3148, 3147, 225,
	66, 87, 106, 3145, 3144, 3142, 80, 158, 111, 105,
	54, 78, 3141, 103, 197, 3138, 186, 3131, 3130, 99,
	3122, 3119, 3118, 3115, 194, 3111, 3110, 188, 223, 3109,
	3108, 403, 3107, 3105, 3104, 3102, 3101, 3100, 3098, 3093,
	3084, 3081, 258, 339, 3080,
}

//line mysql_sql.y:10899
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) PartitionNamesUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterPartitionOptionUnion() tree.AlterPartitionOption {
	v, _ := st.union.(tree.AlterPartitionOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) sourceOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 557, 560, 560, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 542, 542, 542, 543,
	543, 112, 134, 133, 136, 136, 135, 135, 132, 132,
	128, 131, 131, 130, 130, 129, 124, 126, 126, 125,
	127, 127, 113, 101, 114, 487, 487, 486, 486, 485,
	485, 438, 438, 484, 484, 484, 483, 483, 483, 482,
	482, 481, 481, 480, 480, 478, 478, 479, 477, 476,
	476, 476, 474, 474, 474, 470, 470, 472, 471, 471,
	473, 465, 465, 468, 468, 466, 466, 466, 466, 469,
	464, 464, 464, 463, 463, 100, 100, 100, 382, 382,
	99, 99, 396, 396, 396, 396, 396, 394, 394, 394,
	394, 394, 394, 393, 393, 392, 392, 397, 397, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 90,
	90, 90, 90, 90, 95, 95, 95, 548, 548, 547,
	547, 549, 549, 549, 549, 550, 550, 93, 93, 93,
	94, 391, 391, 391, 91, 92, 92, 381, 381, 386,
	386, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 390, 390, 390, 388, 388, 387,
	387, 389, 389, 84, 84, 84, 87, 86, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 378, 378, 377, 96, 96, 97, 545, 545,
	544, 546, 546, 546, 546, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 512, 512, 512, 514, 514, 315,
	316, 561, 318, 314, 314, 314, 508, 508, 509, 510,
	511, 511, 511, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 83, 256, 256, 261, 262,
	262, 262, 267, 267, 268, 268, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 244, 244,
	244, 239, 239, 239, 239, 240, 240, 241, 241, 242,
	242, 242, 242, 243, 243, 308, 308, 263, 263, 263,
	265, 265, 264, 260, 258, 258, 258, 258, 258, 258,
	259, 259, 259, 259, 266, 266, 76, 82, 82, 82,
	525, 525, 77, 536, 536, 441, 441, 329, 329, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 446, 447, 325, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 367, 367, 51, 562, 562, 303, 303,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 459,
	459, 564, 564, 564, 71, 72, 440, 440, 440, 61,
	60, 59, 58, 57, 57, 49, 49, 48, 48, 54,
	140, 141, 322, 322, 322, 324, 324, 320, 563, 563,
	410, 410, 323, 323, 47, 47, 47, 47, 74, 321,
	321, 302, 319, 319, 319, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 375, 375, 372, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 161, 161, 212,
	212, 520, 520, 516, 516, 517, 517, 517, 518, 518,
	519, 519, 108, 453, 453, 453, 453, 453, 453, 8,
	183, 183, 452, 452, 452, 452, 452, 452, 379, 379,
	379, 497, 497, 497, 498, 182, 182, 177, 177, 454,
	454, 344, 499, 499, 462, 462, 461, 461, 460, 460,
	180, 180, 181, 181, 164, 164, 119, 119, 467, 467,
	467, 467, 475, 475, 437, 437, 248, 248, 295, 295,
	296, 296, 154, 154, 155, 155, 155, 155, 155, 155,
	551, 551, 552, 553, 554, 554, 555, 555, 555, 556,
	556, 556, 556, 556, 505, 505, 507, 507, 506, 179,
	179, 175, 175, 176, 176, 176, 174, 174, 173, 172,
	172, 171, 169, 169, 169, 170, 170, 170, 187, 187,
	157, 157, 157, 156, 156, 156, 156, 156, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	158, 158, 513, 513, 513, 442, 442, 442, 449, 449,
	276, 276, 277, 277, 275, 275, 159, 159, 160, 160,
	160, 160, 274, 274, 273, 162, 162, 168, 167, 167,
	163, 163, 163, 163, 284, 284, 283, 283, 283, 283,
	111, 117, 117, 118, 186, 186, 282, 281, 281, 281,
	185, 185, 184, 184, 178, 178, 166, 166, 166, 166,
	280, 165, 278, 541, 541, 540, 540, 539, 537, 537,
	537, 538, 538, 538, 538, 489, 489, 489, 489, 489,
	309, 309, 309, 313, 313, 312, 312, 312, 312, 312,
	317, 7, 7, 7, 7, 7, 7, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	38, 196, 197, 39, 198, 198, 199, 199, 200, 200,
	201, 202, 203, 203, 203, 203, 37, 188, 188, 189,
	189, 190, 190, 191, 192, 192, 192, 195, 193, 194,
	194, 559, 559, 558, 36, 36, 29, 147, 147, 148,
	148, 148, 150, 150, 245, 245, 245, 149, 149, 151,
	151, 151, 521, 524, 522, 522, 526, 526, 526, 527,
	527, 527, 527, 528, 528, 30, 137, 142, 531, 531,
	531, 530, 530, 532, 532, 533, 533, 299, 299, 300,
	300, 145, 146, 146, 144, 139, 153, 153, 153, 153,
	153, 138, 143, 523, 529, 529, 529, 376, 376, 373,
	374, 374, 371, 370, 370, 370, 535, 535, 534, 534,
	534, 310, 310, 31, 366, 366, 368, 369, 369, 369,
	360, 360, 360, 360, 35, 364, 364, 365, 365, 365,
	365, 365, 365, 365, 361, 361, 363, 363, 359, 359,
	359, 359, 359, 359, 34, 152, 152, 358, 358, 355,
	355, 353, 353, 354, 354, 352, 352, 352, 356, 356,
	42, 75, 43, 44, 45, 41, 357, 357, 33, 33,
	33, 33, 121, 120, 120, 120, 120, 120, 123, 123,
	298, 298, 297, 297, 122, 40, 224, 224, 429, 429,
	424, 424, 424, 424, 424, 444, 444, 444, 425, 425,
	425, 426, 426, 426, 428, 428, 428, 427, 427, 427,
	427, 427, 443, 443, 445, 445, 445, 398, 398, 399,
	399, 399, 402, 402, 416, 416, 417, 417, 415, 415,
	422, 422, 421, 421, 420, 420, 419, 419, 418, 418,
	418, 418, 413, 413, 412, 412, 400, 400, 400, 400,
	400, 401, 401, 401, 411, 411, 414, 414, 272, 272,
	271, 271, 232, 232, 233, 233, 270, 270, 230, 230,
	231, 231, 231, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 495, 495,
	496, 235, 235, 246, 246, 246, 246, 246, 246, 234,
	234, 236, 236, 213, 213, 211, 211, 204, 204, 205,
	205, 206, 206, 206, 210, 210, 209, 209, 209, 209,
	207, 207, 208, 208, 208, 208, 208, 208, 384, 384,
	492, 492, 493, 493, 488, 488, 488, 491, 491, 491,
	491, 491, 491, 494, 494, 494, 490, 490, 214, 293,
	293, 293, 311, 311, 311, 311, 292, 292, 292, 229,
	229, 228, 228, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 383, 383, 326, 326, 327,
	327, 255, 254, 254, 254, 254, 254, 252, 253, 251,
	251, 251, 251, 251, 250, 250, 249, 249, 249, 362,
	362, 247, 247, 238, 238, 238, 237, 237, 237, 423,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 290, 290, 290, 291,
	291, 291, 291, 291, 291, 336, 336, 341, 341, 504,
	504, 503, 215, 215, 215, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 225, 225, 225, 407, 407, 407,
	407, 408, 408, 408, 408, 409, 409, 409, 405, 405,
	406, 406, 345, 346, 346, 450, 450, 451, 451, 403,
	403, 404, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 458, 458, 458, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 515, 515, 515, 500, 500, 500, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 288, 288, 288, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 347, 347, 348, 348, 455, 455,
	455, 455, 455, 455, 456, 456, 457, 457, 457, 457,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 334,
	285, 285, 285, 349, 342, 342, 343, 343, 337, 337,
	337, 337, 337, 337, 337, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 338, 338, 340,
	340, 351, 351, 351, 350, 350, 350, 350, 350, 350,
	350, 227, 227, 227, 227, 331, 331, 331, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	217, 217, 217, 217, 221, 221, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	222, 222, 222, 222, 222, 220, 220, 220, 220, 220,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 109, 110,
	110, 219, 294, 294, 430, 430, 433, 433, 431, 431,
	432, 434, 434, 434, 435, 435, 435, 436, 436, 436,
	439, 439, 301, 301, 301, 307, 307, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 4, 1, 3, 1, 3,
	3, 3, 1, 1, 1, 3, 2, 4, 5, 5,
	6, 5, 5, 3, 2, 2, 1, 3, 4, 3,
	7, 5, 8, 2, 2, 1, 3, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 2,
	1, 3, 2, 1, 2, 2, 1, 2, 3, 2,
	3, 6, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	4, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 6, 4, 5, 7, 4, 5,
	0, 1, 3, 8, 0, 6, 0, 4, 6, 1,
	1, 1, 1, 1, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 14, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 1,
	1, 0, 1, 2, 9, 9, 7, 1, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 3, 2,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	8, 2, 4, 4, 4, 9, 0, 2, 11, 9,
	11, 8, 2, 2, 9, 4, 5, 3, 0, 4,
	1, 3, 0, 3, 5, 10, 0, 2, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 2, 1, 0, 3, 2,
	4, 3, 0, 1, 0, 1, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 1, 3,
	3, 3, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 1, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 7, 9, 7, 9,
	2, 1, 7, 9, 7, 9, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 3, 3, 2, 2, 1, 5, 6, 4, 1,
	1, 1, 5, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 6,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 7,
	7, 7, 7, 7, 7, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 2, 0,
	1, 6, 8, 8, 6, 6, 5, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -557, -560, -2, -5, 610, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -154, -115, -116, 600,
	-85, -86, -87, -32, -31, -30, -29, -137, -142, 606,
	445, 14, 494, -14, -15, -505, -16, 258, -314, -315,
	-316, -318, -561, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -140, -141,
	-74, -56, -75, -77, -76, -82, -78, -83, -139, -144,
	-13, 233, -81, 76, -91, -92, -93, -94, -95, -97,
	-98, 369, 375, 432, 599, 61, -155, -157, 616, 617,
	158, 159, 161, 162, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 229, 16, 537,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-138, -24, -143, -22, 253, 252, 38, 319, 320, 321,
	373, 251, 230, 15, 31, 42, 349, -156, 82, 529,
	530, 532, 231, -158, 13, 620, -6, -3, -2, -124,
	-128, -132, -135, -136, -133, -134, -4, -110, 116, 243,
	601, -311, 365, 602, 604, 603, 85, 93, -304, -306,
	369, 375, 599, 617, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 566,
	567, 557, 558, 559, 560, 561, 562, 563, 564, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 497, 586, 587, 588, 589, 525, 585,
	347, 348, 534, 270, 294, 400, 300, 307, 158, 177,
	171, 199, 191, 530, 166, 274, 312, 275, 92, 161,
	480, 106, 457, 429, 164, 289, 291, 293, 526, 527,
	296, 524, 295, 297, 299, 528, 276, 350, 187, 182,
	288, 272, 180, 277, 40, 278, 204, 279, 280, 539,
	453, 346, 459, 304, 427, 181, 454, 292, 456, 208,
	212, 471, 472, 175, 176, 461, 474, 203, 206, 207,
	250, 343, 344, 345, 43, 536, 262, 475, 210, 202,
	198, 483, 308, 306, 201, 174, 197, 273, 65, 214,
	213, 215, 423, 424, 425, 426, 281, 282, 363, 470,
	194, 183, 351, 167, 23, 478, 257, 458, 376, 283,
	301, 309, 209, 211, 264, 269, 538, 529, 431, 268,
	305, 476, 179, 261, 290, 256, 479, 168, 532, 378,
	284, 162, 298, 473, 482, 64, 391, 173, 165, 247,
	159, 266, 271, 285, 286, 287, 523, 311, 310, 302,
	531, 195, 263, 200, 185, 172, 196, 160, 265, 481,
	392, 597, 349, 410, 193, 190, 267, 240, 477, 460,
	163, 414, 393, 188, 313, 593, 594, 595, 364, 342,
	314, 315, 186, 254, 451, 452, 318, 420, 334, 394,
	430, 401, 395, 221, 222, 322, 463, 465, 205, 596,
	323, 324, 325, 455, 326, 327, 328, 329, 368, 56,
	58, 94, 96, 618, 63, -389, -387, -311, 530, 599,
	375, 529, 532, 369, 349, 617, -198, -311, 619, -164,
	39, -211, -311, -164, -81, -15, -14, -156, -157, -211,
	237, -319, 24, 427, -89, 428, 233, 82, -311, -9,
	-101, -8, -108, -79, -154, 432, -317, -311, 319, 319,
	-317, 237, -311, 268, 408, -441, 243, -393, -366, 269,
	-392, -368, -395, -369, 32, 229, 231, 230, 265, 16,
	373, 239, 14, 13, 374, 251, 25, 26, 28, 15,
	375, 377, 29, 378, 381, 382, 383, 42, 386, 387,
	258, 85, 93, 88, 276, -197, -311, -343, -337, 113,
	259, -339, -332, -333, -335, -484, -478, -330, 82, 140,
	141, 148, 114, -334, -423, 36, 116, 546, 585, 495,
	-286, -287, -288, -289, -290, -291, -311, -479, -477, 88,
	97, 100, 103, 104, 102, 101, 152, 184, 99, 89,
	153, -157, 85, -500, 555, -305, 578, 586, 587, 588,
	589, 577, 61, -448, -457, 236, -455, 151, 189, 254,
	185, 14, 146, 420, 186, 552, 574, 497, 556, 566,
	581, 548, 549, 550, 543, 544, 545, 547, 557, 559,
	573, -458, 569, 579, 580, 565, 582, 583, 584, 615,
	87, 86, 572, 571, 558, 553, 554, 560, 542, 551,
	561, 562, 570, 575, 576, 357, 106, 358, 359, 487,
	350, 360, 243, 427, 70, 361, 362, 363, 364, 365,
	494, 366, 71, 367, 356, 258, 410, 368, 188, 205,
	499, 498, 500, 491, 488, 486, 489, 490, 492, 493,
	563, 564, 568, -117, -118, 591, -551, -279, -552, 6,
	7, 8, 9, -553, 153, -542, 429, 538, 88, 163,
	160, -380, 163, 112, 168, 167, -380, 322, 264, -357,
	-147, 347, 410, 326, 94, 268, -360, -358, 526, -443,
	316, 312, 288, 238, 109, -148, 248, 247, 107, 487,
	236, 384, 307, 56, 58, -516, -517, 226, 227, 228,
	-507, 520, -506, -311, 359, 96, 27, 237, 370, 264,
	465, 463, 464, 466, 467, 468, 469, -62, -459, -440,
	460, 459, -323, 452, 458, 450, 462, 453, 348, 328,
	327, 229, 611, 527, 521, -301, 394, 430, 484, 485,
	371, 431, 471, 473, 454, 106, 192, 189, 238, 240,
	237, 347, 487, 410, 94, 326, -516, 160, 471, 473,
	268, 408, 41, -386, 420, -385, -387, 472, 483, 86,
	87, 470, -301, 106, 451, 451, -551, -279, -155, -157,
	-111, -505, 528, 528, 528, 238, 347, 410, 268, 239,
	237, 523, 526, 240, 487, 236, 319, 370, 264, 326,
	94, -442, -513, 32, -449, 223, 224, 225, 33, 34,
	-1, 120, 620, -337, -337, -6, 623, -6, -337, -311,
	-311, 155, -217, -221, -218, -220, -219, -223, -222, 189,
	190, 151, 193, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 206, 207, 204, 31, 205, 254, 185, 186,
	187, 188, 208, 171, 191, 535, 216, 172, 217, 173,
	218, 174, 219, 175, 176, 220, 177, 180, 181, 182,
	183, 179, 154, 82, 154, 88, -180, 260, -211, 154,
	-180, -551, -173, -174, 11, -211, -292, -311, 429, 123,
	-89, -89, 428, -508, -509, -510, -512, 233, 428, 427,
	154, 276, 17, -317, -317, 80, -211, -368, 268, -393,
	-366, 36, 79, 155, 241, 155, 79, 82, 371, 347,
	410, 372, 487, 237, 384, 240, 268, 385, 347, 410,
	237, 240, 487, 268, 347, 237, 240, 410, 268, 385,
	450, 451, 240, 27, 376, 379, 380, 451, -463, 483,
	155, 112, 109, 110, 111, -337, 130, -350, 123, 124,
	125, 126, 127, 128, 129, 137, 136, 147, 140, 141,
	142, 143, 144, 145, 146, 138, 139, 133, 113, 131,
	135, 132, 115, -157, -337, -343, 61, -335, -335, -335,
	-335, -423, -341, -337, 82, 82, 82, 154, 101, 88,
	-337, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, -456, 82, 82, -347, -348, 82, 82,
	-330, -292, 82, 88, 88, 82, 82, 82, 88, -348,
	-348, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, -174, 155, -173, 82, -173, -174,
	-158, -157, 32, 33, 32, 33, 32, 33, 32, 33,
	-554, 608, 82, 97, 618, 221, 476, 537, 166, 167,
	168, -196, -311, -198, 370, 240, 523, 240, -148, -355,
	243, -355, -355, -355, -355, 239, -355, 24, 237, 237,
	237, 237, -355, 494, 123, 123, 59, -518, 170, 155,
	-507, -179, 82, -322, 131, 135, -322, 24, 266, 266,
	266, -322, 306, -562, -563, 17, 133, -320, -563, -320,
	-320, -322, -564, 239, 461, 43, 267, 266, -175, -176,
	22, -175, 455, 451, -410, 456, 457, -324, -563, -323,
	-322, -322, -323, -322, -322, -322, 237, 240, 487, 326,
	612, -562, -562, 31, 31, -441, -441, -211, -441, 521,
	-302, -311, -441, -441, -441, -519, 242, -548, -547, 474,
	-550, 476, 160, -387, 160, -387, -368, 268, 268, 155,
	123, 24, -388, 123, 134, -387, -387, -388, -388, -234,
	41, -310, 151, -311, 88, -234, 41, -545, -544, -211,
	-174, -158, -157, 83, 83, 83, 531, 531, 531, -441,
	-441, -441, -441, -441, -443, -441, -441, -441, -441, -441,
	-317, -188, -311, -198, 243, -441, -441, -159, -160, 142,
	-337, -311, -159, -3, -126, -125, 117, 118, 120, 602,
	365, 601, 605, 599, -387, 41, -436, 392, 391, -430,
	-432, 82, -431, 82, -431, -431, -431, -431, -431, 82,
	82, -433, 82, -433, -433, -430, -434, 82, -434, -435,
	82, -435, -434, -311, -342, -343, -311, 39, -452, 61,
	-154, 82, 31, 82, -311, -453, 61, -154, 82, 31,
	-174, -119, 39, -176, 21, 154, 97, 88, -89, 83,
	155, -511, 103, 104, -514, 203, 195, -311, -104, 88,
	-7, -8, -9, -10, -46, -79, -154, -480, -478, 82,
	32, 419, 79, 17, -394, 237, 487, 370, 264, 240,
	347, -392, -375, -372, -370, -310, -368, -371, -370, -397,
	-292, 451, -120, 434, 433, 318, -337, -337, -337, -337,
	-337, 102, 113, 342, 103, 104, -332, -351, 32, 314,
	315, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -340, -349, -423, 82, 133, 131, 135,
	132, 115, -335, -335, -333, -333, 83, 155, -504, -503,
	117, -337, -337, -337, -311, -501, -502, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 361, 356,
	362, 360, 350, 368, 363, 364, 188, 518, 519, 512,
	513, 514, 515, 516, 517, -342, -342, -337, -501, -342,
	-285, 33, 32, -343, -343, -343, 83, -337, -515, 340,
	339, 341, -177, -311, -342, 83, 83, 83, 97, -343,
	-343, -342, -333, -342, -502, -285, -285, -285, -285, 142,
	-343, -343, -285, -285, -285, -285, 142, -285, -285, -285,
	-285, -285, -285, -285, -285, 83, 83, 83, 142, -343,
	-175, -118, -461, -460, -337, 41, -119, -176, -555, 609,
	82, -292, -543, 88, 88, 621, 477, 478, 164, 167,
	166, 35, 82, -188, -355, -355, -355, -521, -311, 113,
	-376, -373, -370, -311, -311, -366, -311, -311, -211, -355,
	-355, -355, -355, -211, -245, 53, 54, 55, -370, -149,
	56, 57, -519, -506, 35, -178, -311, -275, 18, -335,
	-335, -370, 268, -562, -322, -322, -303, -302, -324, -319,
	-324, -324, -275, -320, -322, -322, -337, -324, -320, -275,
	-311, 451, -275, -275, -410, -321, -311, -321, -355, -302,
	-303, -303, -211, -211, -256, -261, -257, -262, 234, 354,
	355, 232, 230, 11, 231, -269, 307, -356, 495, -240,
	-241, 77, 42, -243, 258, 396, 389, 270, 274, 92,
	275, 429, 276, 239, 278, 279, 280, 295, 297, 250,
	281, 282, 283, 420, 284, 159, 296, 285, 286, 287,
	372, -235, 6, 329, 41, 51, 52, 443, 442, 540,
	537, 271, -521, -521, 31, 31, -376, -311, -311, -167,
	-162, -166, -163, -168, -278, -280, -165, 82, -211, -157,
	-311, 155, 475, 477, 478, -548, -388, -548, -388, 32,
	419, -391, 419, 32, -366, -385, 471, 473, -381, 88,
	420, -371, -390, 79, 151, -460, -388, -388, -390, -390,
	150, 155, -546, 476, 477, 226, -175, 97, 97, 97,
	-213, -211, -521, -375, -366, -311, -441, -213, -213, -213,
	-311, -311, 82, 154, 36, -311, -311, -274, 155, -273,
	17, -312, -311, 35, 88, 154, -274, -127, -125, 119,
	-337, -6, 601, -337, -6, -6, -337, -6, -337, -439,
	393, 97, 97, -294, 88, -294, 97, 97, 97, 83,
	88, -379, 79, -454, -344, -499, 591, -182, 83, -177,
	-497, -498, -177, -181, -311, -454, -182, 83, -497, -175,
	592, -119, -172, -171, -337, -311, 24, -89, -509, 154,
	155, -178, -394, -374, -371, -396, 142, -311, -382, 155,
	537, 624, 86, 241, -535, -534, 411, 83, 155, -464,
	242, 494, 88, 621, 427, 221, 222, 102, 342, 103,
	104, -423, -343, -340, -335, -335, -333, -333, -338, 255,
	-338, 112, -337, -336, -503, 119, -337, 35, 35, 155,
	80, 154, 83, 83, 17, 17, 83, -337, 83, 83,
	83, 83, 17, 17, -337, 83, 154, 83, 83, 83,
	83, 80, 83, 155, 83, 155, -343, -343, -337, -343,
	83, 83, 83, -337, -337, -337, -343, 83, -337, -337,
	-337, -337, -337, -337, -337, -337, -404, 446, -404, -404,
	155, 155, 155, 83, -119, 82, 97, 155, -298, -297,
	88, 165, 168, 168, 167, -197, -199, -200, -201, -202,
	-203, 133, 156, 157, 82, -211, -211, -211, -524, 397,
	36, -536, 155, 41, -534, 487, -145, 318, -359, 80,
	-152, 17, 537, -211, -211, -211, -211, -224, 35, 17,
	-161, -212, -311, 82, 83, 155, -337, -367, 80, -311,
	-303, -275, -275, -324, -275, -275, 155, 23, -322, -324,
	-324, -320, 154, -302, -429, 35, -179, 155, 260, -210,
	-308, -207, -209, 245, -327, -208, 248, -493, 246, 244,
	107, 249, 303, 108, 239, -308, -308, 245, -244, 241,
	35, -308, -259, 239, 345, 303, 246, 21, 260, -258,
	239, 108, -311, 245, 249, 244, -307, 123, -301, 150,
	241, 43, 372, -307, 541, 260, -307, -307, -307, -307,
	-307, -307, -307, 277, 277, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, -307, -307, 160, -307, -307, -307,
	-307, -307, -307, 82, 272, 273, -525, 397, 31, 353,
	353, -536, 31, -153, 347, 31, -281, -282, -283, -284,
	68, 72, 74, 69, 70, 71, 75, 31, 155, -309,
	-313, 35, -311, 88, -309, -157, -162, -167, -309, 82,
	-547, -549, 479, 476, 482, -390, -390, 241, 82, 123,
	-390, -390, 41, -310, -544, 483, 477, -119, 155, 79,
	-213, -189, -190, -191, -192, -217, -292, 190, 193, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 206, 207,
	204, 205, 254, 185, 186, 187, 188, 208, 171, 191,
	172, 173, 174, 175, 176, 177, 180, 181, 182, 183,
	179, -311, -198, -275, -160, -162, -311, 88, -311, 142,
	-275, 120, -6, 118, -131, -130, -129, 121, 599, 605,
	120, 120, 120, 83, 83, 83, 155, 83, 83, 83,
	155, 83, 155, -467, 456, 40, 155, 82, 83, 155,
	61, 155, 123, 83, 155, 83, 61, -119, 88, 155,
	-169, 37, 38, 154, 429, -311, -478, 83, -396, 155,
	241, 154, 154, -372, 375, -310, -374, 21, 537, -292,
	39, -298, 123, 621, -311, 83, -338, -338, 112, -335,
	-332, 83, 120, -337, 118, -215, -217, 391, 392, -215,
	-216, -222, 151, 189, 254, 188, 187, 185, 391, 392,
	-234, -311, -337, -337, 83, -337, -337, 17, -311, -234,
	-333, -337, -174, -174, 83, 83, -403, -404, -403, -403,
	83, 83, 83, 83, -403, 83, 83, 83, 83, 83,
	83, 83, 83, 82, 97, 100, 97, 100, -460, -556,
	63, 607, 62, 419, 102, 308, 155, 97, 622, 155,
	123, 168, 383, 83, 155, -292, -189, -179, 82, -179,
	-527, 458, 399, 409, -307, -329, -328, 349, 42, -446,
	420, 405, 406, -373, 268, -311, -533, 95, 123, 79,
	333, 337, 334, 335, 336, -353, -354, -352, -356, -521,
	82, 82, 82, 82, 35, -424, 323, -217, -211, -161,
	-311, 17, 155, -520, 154, -1, -311, -366, -322, -275,
	-337, -337, -275, -322, -322, -324, -311, -424, -217, 35,
	-257, 234, 231, -416, 82, -214, -292, -208, -492, -493,
	-355, -311, 108, -492, 108, 82, -214, -292, -292, -260,
	-321, -292, -311, -311, -311, -311, -265, -264, -292, -267,
	32, -268, -311, -311, -311, -311, 108, 108, -239, 41,
	48, 49, 50, -307, -307, 192, -242, 41, 419, 421,
	422, -267, 97, 97, 97, 97, 88, 88, 88, -307,
	-307, 97, 88, -313, 88, -494, 167, 45, 46, 97,
	97, 97, 97, 41, 88, -246, 41, 288, 292, 289,
	290, 291, 88, 97, 41, 97, 41, 97, 41, -311,
	82, -495, -496, 88, -527, -307, 353, -387, 123, -329,
	-532, 318, -146, 92, 32, -183, 234, 231, -521, -378,
	-377, -292, -166, -166, -166, -166, 68, 68, 68, 73,
	68, 73, 68, -283, -378, -168, -179, -313, 83, -541,
	-540, -539, -537, 76, 242, 77, -342, 476, 480, 481,
	-374, -325, 88, -381, -187, 24, -211, -211, -445, 298,
	299, 83, 155, -217, -277, 19, 154, -277, 116, -6,
	-127, -129, -337, -6, -337, 601, 365, 602, 88, 97,
	97, -475, 440, 435, 437, 108, -344, -462, -461, 61,
	-154, -177, -454, -498, -460, -311, 61, -154, -454, -187,
	-467, -171, -170, 44, -311, 97, 17, -371, -366, 142,
	142, -311, 376, -382, 88, 398, 88, 237, 622, 88,
	-298, -332, -337, 83, -225, 176, 175, -225, 83, 83,
	-431, -431, -430, -433, -430, -225, -225, 83, 83, 24,
	83, 83, 83, -337, 83, 83, 155, -450, 496, -451,
	567, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -346, -345, 260, 441, 614,
	614, 441, 614, 614, 83, 155, -501, 155, -297, 88,
	88, 88, -201, -217, 83, 35, -204, -205, -206, -214,
	-207, -209, 35, -528, 92, -522, 88, -311, -529, 92,
	400, 153, 351, 41, 401, 402, 417, 346, 97, 97,
	407, -523, -311, -153, -531, 52, 123, 88, -211, -352,
	-301, 150, 279, 326, -272, -271, -311, 88, -204, -204,
	-204, -154, -425, 325, 21, 97, 141, -180, 80, 154,
	-162, -212, -311, 142, 83, -275, -275, -275, -322, -425,
	-154, -417, -415, 260, -263, 45, 47, -217, -490, -311,
	-488, -490, -311, -488, -488, -355, -337, -263, -214, 241,
	31, 231, -266, 331, 332, 337, -383, 304, 113, -383,
	155, -169, 155, -311, -234, -234, 31, 88, 88, -213,
	83, 155, 123, -528, -522, 123, -388, 88, -529, -533,
	123, 88, 155, -183, -183, -275, 155, 123, -185, -184,
	79, 80, -186, 79, -184, 68, 68, -275, -539, -538,
	24, -493, -493, -493, 83, 83, 15, -191, 41, -276,
	20, 21, 142, -276, 120, 118, 120, 120, -311, 83,
	83, -437, 593, -471, -473, 435, 21, 21, 15, 242,
	83, -454, -454, -475, 45, 46, -366, -382, 420, -211,
	155, 622, -337, 83, -337, 83, 88, 83, 88, -174,
	21, 83, 83, 83, 83, 83, 83, -337, 83, -501,
	235, -154, 83, 155, -154, 88, -526, 411, 88, 88,
	97, 41, 97, 153, 403, -447, -146, -530, 92, 123,
	621, 82, -307, -307, -307, -311, 83, 155, -307, -307,
	83, 83, 83, -232, 537, -426, 259, 97, 141, 97,
	141, 97, -309, -162, -311, -275, -520, 154, -275, -426,
	83, 155, -311, -292, -229, -228, -226, 102, 113, 41,
	389, -227, 92, 150, 293, 296, 295, 271, 294, -255,
	-326, 79, 395, 331, 332, -356, 593, 525, 244, 107,
	108, 377, -327, 82, 82, 80, 313, 82, 82, -490,
	83, -263, -292, 41, -266, 41, 343, 304, -264, -311,
	150, -234, 83, -496, 88, -526, 88, -390, -531, 88,
	-521, -174, -377, -460, -337, 82, -337, 82, 68, 11,
	19, -330, -337, -343, 243, -6, 602, 365, -248, 594,
	88, 21, 88, -469, 88, -378, -437, -122, -465, -410,
	276, 83, 83, -403, -403, -406, -405, -409, 441, 305,
	449, -343, 83, 83, -193, -217, -150, 537, -232, -206,
	-150, 21, 537, 350, 41, 97, 41, 404, 123, 103,
	104, -299, -300, 88, -361, -363, -292, 82, -234, -236,
	-310, 151, 88, -271, -330, -330, -230, -231, -269, -356,
	-121, -120, -230, 82, -427, 159, 97, 141, 97, 97,
	-275, -275, -427, -415, -418, 61, -226, 102, -333, 88,
	-236, -237, 41, 292, 288, 123, 123, -238, 41, 272,
	273, -247, 82, 303, 15, 192, 82, 108, 108, -211,
	-361, -361, -491, 333, 334, 335, 338, 337, 336, -491,
	-361, -361, 82, -384, -383, -333, -307, -307, 150, -530,
	-175, -178, -489, -311, 244, 21, 21, -311, -311, -295,
	595, 97, 88, 437, -248, -438, 596, -474, 440, -468,
	-466, 435, 436, 437, 438, 123, 83, -408, 115, 403,
	407, -331, -334, 97, 100, 184, 153, 536, -151, 60,
	483, 88, 398, 88, 350, 88, 622, 155, 123, 83,
	155, -430, -337, -398, 260, 155, -269, -301, -122, -398,
	-233, -270, -311, 88, -444, 167, 324, 537, 97, 141,
	97, -174, -428, 167, 324, -422, -419, 82, -269, 262,
	133, 88, 88, 97, 82, -455, 31, 88, -362, 82,
	83, 83, 83, 83, -361, 97, -234, -307, 83, 83,
	155, 82, 21, -295, 88, -476, 242, -472, -473, 439,
	-466, 21, 437, 21, 21, 88, -407, -408, 407, -331,
	-334, 591, 447, 447, 447, -195, -311, 303, 420, -300,
	88, -364, -363, -169, 83, -399, 312, 21, -269, -307,
	-399, 83, 155, -307, -307, 324, 97, 141, 97, -175,
	324, -422, -269, -421, -420, 310, 263, 82, 83, -337,
	-347, -307, 83, -250, -249, 533, -361, -364, 80, -364,
	80, -364, 80, -364, 80, 83, -234, -311, 244, -296,
	-311, -469, -483, 82, 97, -471, -470, -472, 21, -469,
	21, -469, -469, -123, 155, 112, 448, 448, 448, -194,
	35, 442, 376, -365, 250, 343, 344, 92, 537, 331,
	332, -169, 21, -400, 305, 306, -401, -414, 308, -234,
	-270, -330, -330, 97, 83, 155, -311, 259, 82, -343,
	83, -311, -254, -252, -253, 79, 454, 301, 302, 83,
	-491, -491, -491, -491, -255, 83, 155, -487, 31, 83,
	-482, -481, -293, -477, -311, 440, 441, 88, -469, 444,
	-407, 88, -307, -307, 88, 88, 330, -292, 82, -412,
	309, 82, -410, 82, -410, 108, 334, -420, -419, -343,
	83, -383, -253, 79, -252, 79, 16, 15, -364, -364,
	-364, -364, -311, -486, -485, -484, 83, 155, 154, 123,
	-559, -558, 613, 97, 97, -311, -397, -402, 310, 97,
	-333, 82, -333, 82, -411, 307, 82, 83, -251, 298,
	299, 31, 167, -251, 155, 123, -481, -311, 88, 88,
	83, -416, 21, 83, -397, 83, -397, 82, 123, -333,
	102, 41, 300, -485, 41, -337, 154, -401, 83, 83,
	83, -397, 97, 83, -311, -413, 311, 83, 97,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 851, 852, 853, 854, 855, 856, 0,
	0, 0, 0, 610, 611, 0, 577, 0, 0, 0,
	0, 0, 0, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 445, 0, 0, 0, 0, 692, -2, 56, 0,
	277, 0, 268, 268, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, -2, 623, 0,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 623, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 743, 765, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1242, 1243, 1244, 1245,
	-2, 1751, 1729, 1903, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1904, 1905, 0, 261, 259, 1700, 1729,
	1751, 1806, 1817, 1818, 1852, 1903, 0, 874, 0, 670,
	0, 675, 1195, 670, 289, 612, 613, 700, 726, 575,
	0, 325, 0, 1742, 329, 0, 0, 0, 572, 319,
	320, 321, 322, 323, 324, 0, 0, 850, 0, 0,
	315, 0, 283, 1808, 0, 0, 0, 0, 0, 0,
	153, 984, 155, 986, 159, 166, 0, 0, 171, 172,
	175, 176, 177, 178, 179, 0, 183, 0, 185, 188,
	0, 190, 191, 0, 194, 195, 196, 0, 206, 207,
	208, 987, 988, 989, -2, 84, 872, 1658, 1546, 0,
	1553, 1554, 1565, 1576, 1322, 1323, 1324, 1325, 0, 0,
	0, 0, 0, 1332, 1333, 0, 1357, 1920, 1961, 0,
	1340, 1341, 1342, 1343, 1344, 1345, 93, 105, 106, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 0, 1606, 1607, 1608,
	1519, 1309, 1242, 0, 1929, 0, 1951, 1956, 1957, 1958,
	1959, 1950, 0, 0, 1504, 0, 1494, 0, 0, -2,
	-2, 0, 0, 1877, -2, 1926, 1947, 1955, 1930, 1931,
	1954, 1922, 1923, 1924, 1917, 1918, 1919, 1921, 1933, 1935,
	1946, 0, 1942, 1952, 1953, 0, 0, 0, 0, 0,
	107, 108, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1510, -2, 1512, 1513, 1515,
	-2, 1517, 1518, -2, 1521, 1522, 1523, -2, -2, 1526,
	1527, 1528, 1529, 1530, 1531, 1534, -2, -2, -2, -2,
	1506, 1507, 1508, 1509, 1498, 1499, 1500, 1501, 1502, 1503,
	-2, -2, -2, 726, 801, 0, 726, 0, 701, 748,
	751, 754, 757, 704, 0, 0, 57, 58, 0, 278,
	279, 267, 269, 0, 273, 0, 266, 0, 0, 0,
	0, 1019, 1019, 1019, 1019, 1019, 0, 1019, 0, 0,
	0, 0, 0, 1019, 0, 907, 991, 992, 993, 1017,
	1018, 1083, 0, 0, 0, 628, 624, 625, 626, 627,
	714, 0, 716, 719, 552, 552, 500, 0, 0, 0,
	552, 0, 514, 506, 0, 0, 0, 552, 0, 0,
	721, 721, 0, 555, 562, 552, 552, -2, 552, 552,
	552, 0, 0, 1031, 520, 521, 522, 506, 506, 525,
	526, 527, 537, 538, 563, 1682, 0, 0, 445, 445,
	0, 445, 0, 445, 445, 445, 630, 1847, 1749, 1823,
	1808, 0, 0, 234, 1877, 239, 0, 1750, 1770, 0,
	0, 1788, 0, -2, 0, 305, 726, 0, 0, 700,
	0, 0, 0, 0, 0, 445, 445, 445, 445, 445,
	1082, 445, 445, 445, 445, 445, 0, 0, 0, 445,
	445, 0, 0, 766, 767, 762, 763, 764, 768, 769,
	5, 6, 19, 0, 0, 0, 0, 0, 0, 63,
	62, 0, 1659, 1677, 1611, 1612, 1613, 1664, 1615, 1668,
	1668, 1668, 1668, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1668, 1668, 0, 0, 1657, 1635, 1666, 1666,
	1666, 1664, 1661, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1671, 1671, 1674,
	1674, 1671, 0, 1544, 0, 0, 0, 0, 674, 0,
	0, 726, -2, 0, 0, 576, 326, 1246, 0, 0,
	330, 331, 0, 0, 346, 0, 349, 334, 335, 336,
	0, 133, 0, 317, 318, 0, 0, 285, 0, 0,
	0, 446, 0, 0, 0, 0, 0, 0, 163, 160,
	167, 170, 180, 187, 0, 199, 201, 204, 161, 168,
	173, 174, 181, 202, 162, 164, 165, 169, 203, 205,
	182, 186, 200, 184, 189, 192, 193, 198, 0, 134,
	0, 0, 0, 0, 0, 1552, 0, 0, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1546, 0, 0, 1328, 1329, 1330,
	1331, 1334, 0, 1358, 0, 0, 0, 0, 1605, 1609,
	0, 1544, 1544, 0, 1544, 1540, 0, 0, 0, 0,
	0, 0, 1544, 1480, 0, 0, 1482, 1495, 0, 0,
	1484, 1485, 0, 1488, 1489, 1544, 0, 1544, 1493, 1476,
	1477, 0, 1540, 1540, 1540, 1540, 0, 0, 1540, 1540,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
	0, 0, 0, 0, 721, 0, 727, 0, -2, 0,
	745, 747, 749, 750, 752, 753, 755, 756, 758, 759,
	706, 0, 0, 59, 0, 0, 0, 0, 271, 0,
	276, 0, 871, 0, 0, 1019, 1019, 1019, 908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1019, 1019,
	1019, 1019, 0, 1037, 0, 0, 0, 630, 629, 0,
	715, 0, 0, 774, 0, 0, 499, 0, 506, 552,
	552, 512, 513, 508, 507, 558, 559, 555, 0, 555,
	555, 774, 0, 531, 532, 533, 552, 552, 539, 722,
	0, 540, 541, 555, 0, 560, 561, 774, 0, 0,
	774, 774, 0, 549, 550, 551, 0, 0, 1019, 0,
	568, 508, 508, 1683, 1684, 0, 0, 1028, 0, 0,
	0, 571, 0, 0, 0, 0, 631, 214, 217, 0,
	220, 0, 1847, 0, 1847, 0, 227, 0, 0, 0,
	0, 0, 0, 257, 258, 0, 0, 0, 0, 248,
	251, 1189, 1190, 981, 982, 252, 253, 297, 298, 0,
	721, 744, 746, 740, 741, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	606, 0, 887, 608, 0, 0, 0, 782, 776, 778,
	845, 93, 782, 8, 80, 77, 0, 19, 0, 0,
	19, 19, 0, 19, 262, 0, 1680, 1678, 1679, 1614,
	1665, 0, 1640, 0, 1641, 1642, 1643, 1653, 1654, 0,
	0, 1636, 0, 1637, 1638, 1639, 1630, 0, 1631, 1632,
	0, 1633, 1634, 260, 0, 1545, 875, 0, 648, 662,
	643, 0, 651, 0, 1196, 632, 662, 634, 0, 651,
	721, 698, 0, 676, 0, 0, 327, 0, 332, 0,
	0, 348, 350, 351, 352, 337, 338, 573, 313, 314,
	306, 307, 308, 309, 310, 311, 312, 316, 103, 0,
	286, 287, 0, 0, 0, 147, 148, 149, 150, 151,
	152, 154, 138, 595, 597, 973, 985, 0, 976, 0,
	157, 197, 130, 0, 0, 0, 1547, 1548, 1549, 1550,
	1551, 1555, 0, 1557, 1559, 1561, 1563, 0, 1581, -2,
	-2, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1566, 1579, 1580, 0, 0, 0, 0,
	0, 0, 1577, 1577, 1572, 0, 1326, 0, 1355, 1359,
	0, 0, 0, 0, 94, 1539, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 0, 0, 1546, 0, 0,
	0, 1541, 1542, 0, 0, 0, 1435, 0, 0, 1441,
	1442, 1443, 0, 657, 0, 1505, 1481, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	800, 802, 0, 666, 668, 669, 695, 676, 702, 0,
	0, 0, 55, 60, 53, 1052, 280, 281, 0, 0,
	275, 0, -2, 0, 0, 0, 0, 0, 922, 0,
	443, 967, 0, 0, 0, 983, 1008, 1015, 0, 0,
	0, 0, 0, 1056, 909, 914, 915, 916, 910, 911,
	917, 918, 0, 717, 0, 0, 814, 498, 0, 553,
	554, 503, 1808, 508, 774, 774, 515, 509, 516, 557,
	517, 518, 519, 555, 774, 774, 723, 552, 555, 542,
	556, 555, 545, 546, 0, 564, 569, 565, 0, 567,
	523, 524, 1058, 719, 364, 365, 366, 368, 415, 415,
	415, 398, 415, 0, 0, 386, 1685, 0, 0, 0,
	0, 395, 1685, 0, 0, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 0, 0, 1685, 1685, 1685, 1685, 1685, 1685,
	1685, 1685, 1685, 1685, 1685, 0, 1685, 1685, 1685, 1685,
	1685, 1175, 1685, 0, 1029, 405, 406, 407, 408, 413,
	414, 0, 440, 0, 0, 0, 443, 0, 956, 787,
	0, 788, 789, 785, 816, 840, 840, 0, 840, 820,
	1195, 0, 0, 225, 226, 215, 0, 216, 0, 228,
	229, 0, 231, 232, 233, 240, 1749, 1823, 235, 237,
	0, 0, 241, 254, 255, 256, 0, 0, 246, 247,
	0, 0, 300, 301, 303, 0, 676, 1032, 1033, 1034,
	592, 1193, 593, 594, 598, 0, 0, 601, 602, 603,
	604, 605, 889, 0, 0, 961, 962, 774, 0, 783,
	0, 779, 846, 0, 848, 0, 774, 0, 78, 19,
	0, 71, 68, 0, 0, 0, 0, 0, 1660, 1610,
	1681, 0, 0, 0, 1662, 0, 0, 0, 0, 61,
	678, 639, 0, 642, 659, 0, 663, 0, 0, 655,
	647, 652, 0, 0, 672, 633, 0, 0, 638, 676,
	0, 699, 728, 729, 732, 1247, 0, 333, 347, 0,
	0, 0, 0, 141, 970, 0, 142, 146, 136, 0,
	0, 0, 975, 0, 972, 977, 0, 156, 0, 0,
	131, 132, 1043, 1052, 0, 0, 0, 1556, 1558, 1560,
	1562, 1564, 0, 1567, 1577, 1577, 1573, 0, 1568, 0,
	1570, 0, 1547, 0, 1360, 0, 0, 0, 0, 0,
	0, 0, 1425, 1426, 0, 0, 1430, 0, 1432, 1433,
	1434, 1436, 0, 0, 0, 1440, 0, 1479, 1497, 1483,
	1486, 0, 1490, 0, 1492, 0, 726, 726, 0, 0,
	1399, 1399, 1399, 0, 0, 0, 0, 1399, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 1347, 1348,
	0, 0, 0, 803, 696, 0, 0, 0, 0, 1050,
	0, 282, 270, 272, 0, 0, 0, 877, 878, 880,
	0, 883, 884, 885, 889, 719, 0, 719, 929, 1685,
	1020, 447, 0, 0, 969, 0, 945, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	0, 617, 621, 23, 720, 0, 775, 501, 0, 502,
	552, 510, 511, 774, 534, 535, 0, 0, 774, 552,
	552, 555, 0, 566, 1060, 0, 0, 1028, 1094, 376,
	0, 1204, 1205, 416, 0, 1211, 1220, 1019, 1279, 0,
	1220, 0, 0, 1222, 1223, 0, 0, 0, 0, 399,
	400, 0, 385, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 426, 0, 0, 0, 0, 1686, 1685, 1685,
	0, 393, 394, 0, 397, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 1181, 1182, 929, 1685, 0, 0,
	0, 447, 943, 952, 0, 0, 0, 0, 0, 0,
	807, 0, 0, 806, 0, 0, 0, 0, 0, 719,
	841, 0, 843, 844, 818, -2, 0, 787, 823, 1544,
	218, 219, 0, 0, 224, 242, 244, 0, 0, 0,
	243, 245, 249, 250, 299, 302, 304, 738, 0, 0,
	1084, 0, 890, 891, 893, 894, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1734, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 888, 609, 772, 777, 784, 847, 849, 94, 780,
	772, 0, 81, 19, 80, 72, 73, 0, 19, 0,
	0, 0, 0, 1670, 1669, 1655, 0, 1656, 1667, 1672,
	0, 1675, 0, 682, 0, 0, 662, 664, 0, 0,
	662, 0, 0, 671, 0, 0, 662, 738, 678, 0,
	735, 733, 734, 0, 0, 574, 104, 353, 0, 0,
	0, 0, 0, 596, 0, 974, 138, 0, 0, 158,
	0, 0, 0, 1052, 1047, 1543, 1569, 1571, 0, 1578,
	1574, 1327, 1335, 1356, 0, 0, 1362, 1374, 1374, 0,
	0, 1365, 1668, 1668, 1368, 1664, 1666, 1664, 1374, 1374,
	0, 95, 0, 0, 1431, 0, 0, 0, 658, 0,
	0, 0, 1395, 1397, 1399, 1399, 1406, 1400, 1407, 1408,
	1399, 1399, 1399, 1399, 1413, 1399, 1399, 1399, 1399, 1399,
	1399, 1399, 1399, 1393, 0, 0, 1599, 1600, 667, 0,
	0, 709, 710, 711, 712, 713, 0, 0, 54, 1052,
	0, 274, 0, 0, 882, 0, 0, 0, 1197, 0,
	933, 930, 931, 932, 0, 964, 448, 449, 450, 451,
	0, 0, 0, 968, 0, 956, 938, 0, 0, 0,
	1009, 1010, 1011, 1012, 1013, 1014, -2, 1023, 0, 0,
	0, 1197, 1197, 1197, 0, 1068, 0, 1057, 670, 0,
	-2, 0, 0, 619, 0, 0, 815, 504, 774, 528,
	724, 725, 543, 774, 774, 552, 570, 1068, 1059, 0,
	367, 415, 0, 369, 0, 417, 0, 1210, 1236, 1221,
	1236, 1280, 1236, 1236, 1019, 0, 417, 0, 0, 387,
	423, 0, 0, 0, 0, 0, 383, 420, 732, 370,
	372, 373, 374, 424, 425, 427, 0, 429, 389, 401,
	402, 403, 404, 0, 0, 0, 396, 409, 410, 411,
	412, 371, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 0,
	0, 1154, 1155, 1156, 1157, 1158, 1233, 1234, 1235, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1183, 1184, 1185, 1186,
	1187, 1188, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	0, 0, 1178, 0, 933, 0, 0, 0, 0, 964,
	945, 0, 955, 0, 957, 958, 0, 0, 640, 774,
	292, 0, 810, 804, 0, 793, 808, 809, 796, 0,
	798, 0, 794, 795, 774, 786, 817, 842, 819, 822,
	824, 825, 831, 0, 0, 0, 0, 221, 222, 223,
	230, 0, 467, 236, 694, 0, 1194, 599, 600, 1085,
	1086, 607, 0, 895, 770, 0, 0, 770, 76, 79,
	0, 74, 0, 0, 0, 0, 66, 64, 1663, 0,
	0, 684, 118, 0, 0, 0, 660, 0, 665, 662,
	646, 656, 645, 653, 654, 673, 662, 637, 636, 697,
	682, 730, 731, 0, 1248, 328, 0, 971, 138, 143,
	144, 145, 139, 137, 978, 0, 980, 0, 1045, 0,
	0, 1575, 1361, 1336, 1363, 1375, 1376, 1364, 1337, 1338,
	1366, 1367, 1369, 1370, 1371, 1372, 1373, 1339, 1427, 0,
	1429, 1437, 1438, 0, 1487, 1491, 0, 0, 0, 0,
	0, 1404, 1405, 1409, 1410, 1411, 1412, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 726, 1394, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 1051, 1053,
	870, 873, 879, 881, 0, 0, 0, 1198, 1199, 1201,
	1202, 1203, 0, 906, 0, 0, 924, 925, 935, 0,
	0, 0, 453, 454, 0, 0, 0, 466, 462, 463,
	464, 444, 963, 952, 941, 0, 0, 951, 0, 1024,
	1685, 1685, 1685, 0, 0, 1128, 1685, 1685, 0, 0,
	0, 1132, 1071, 0, 0, 1062, 0, 840, 0, 0,
	774, 618, 621, 622, 718, 505, 547, 544, 774, 1071,
	363, 0, 1096, 0, 388, 418, 0, -2, 0, 1237,
	0, 1224, 1237, 0, 0, 1236, 0, 377, 417, 0,
	0, 0, 430, 434, 435, 0, 432, 1275, 0, 433,
	0, 422, 0, 428, 1146, 1147, 0, 1152, 1153, 0,
	1177, 0, 0, 436, 0, 0, 0, 437, 442, 938,
	0, 953, 0, 959, 960, 726, 0, 0, 790, 811,
	0, 0, 791, 0, 792, 797, 799, 291, 826, 0,
	0, 828, 829, 830, 821, 238, 739, 892, 0, 760,
	0, 0, 781, 761, 0, 19, 0, 0, 69, 1673,
	1676, 686, 0, 683, 119, 0, 0, 0, 0, 650,
	661, 644, 635, 684, 736, 737, 140, 135, 979, 121,
	0, 1046, 0, 1439, 0, 1399, 1396, 1399, 1398, 1390,
	0, 1349, 1350, 1351, 1352, 1353, 1354, 0, 705, 0,
	0, 912, 1132, 0, 912, 934, 923, 0, 965, 966,
	0, 455, 456, 0, 459, 465, 936, 937, 0, 0,
	949, 0, 0, 0, 0, 1016, 1030, 0, 0, 0,
	-2, 0, -2, 1041, 0, 1077, 0, 1069, 0, 1061,
	0, 1064, 774, 774, -2, 615, 620, 0, 548, 1077,
	1095, 0, 1108, 419, 1238, -2, 1251, 1253, 0, 1029,
	1256, 1257, 0, 0, 0, 0, 0, 0, 1301, 1265,
	0, 0, 1269, 1270, 1271, 0, 0, 1274, 0, 1593,
	1594, 0, 1278, 0, 0, 0, 0, 0, 0, 0,
	1218, 378, 379, 0, 381, 382, 1685, 1276, 421, 375,
	1685, 391, 1176, 1179, 1180, 441, 438, 439, 941, 944,
	641, 721, 293, 294, 812, 0, 805, 835, 832, 0,
	0, 896, 771, 773, 70, 75, 0, 0, 688, 0,
	685, 0, 679, 681, 129, 649, 686, 91, 112, 0,
	0, 1428, 1478, 1402, 1403, 0, 1391, 0, 1385, 1386,
	1387, 1392, 708, 703, 0, 898, 905, 919, 1035, 1200,
	904, 0, 0, 452, 457, 0, 460, 461, 0, 939,
	940, 0, 947, 0, 0, 1004, 1664, 0, 1025, 1026,
	1191, 1192, 1027, 1129, 1130, 1131, 1087, -2, 1140, 0,
	1039, 121, 1087, 0, 1065, 0, 1072, 0, 1070, 1063,
	726, 616, 1074, 1097, -2, 0, 1252, 1254, 1255, 1258,
	1259, 1260, 1306, 1307, 1308, 0, 0, 1263, 1303, 1304,
	1305, 1264, 0, 0, 0, 0, 0, 1591, 1592, 1299,
	0, 0, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1226,
	0, 0, 0, 1217, 1219, 380, 0, 0, 1685, 954,
	290, 0, 0, 836, 838, 833, 834, 65, 67, 82,
	0, 687, 120, 0, 688, 83, 0, 109, 0, 122,
	123, 0, 0, 0, 0, 0, 1401, 1388, 0, 0,
	0, 0, 0, 1595, 1596, 1597, 0, 0, 0, 920,
	921, 926, 0, 928, 458, 942, 946, 949, 0, 995,
	0, 732, 0, 1089, 0, 1028, 1142, 1685, 1042, 1089,
	0, 1134, 1685, 1685, 1055, 0, 1067, 0, 1079, 0,
	1073, 721, 362, 0, 1076, 1098, -2, 0, 1106, 0,
	0, 1261, 1262, 0, 0, 1494, 1685, 0, 1294, 0,
	995, 995, 995, 995, 0, 431, 390, 0, 813, 827,
	0, 0, 0, 677, 92, 96, 0, 118, 115, 0,
	124, 0, 0, 0, 0, 1048, 0, 1377, 0, 0,
	0, 1381, 1382, 1383, 1384, 0, 897, 0, 927, 948,
	950, 994, 1005, 1006, 732, 1038, 0, 1126, 1141, 0,
	1040, 1133, 0, 0, 0, 1066, 1078, 0, 1081, 614,
	1075, 1099, 1107, 0, 1102, 0, 0, 0, 1302, 0,
	1268, 0, 1273, 1282, 1295, 0, 0, 1206, 0, 1208,
	0, 1212, 0, 1214, 0, 0, 392, 837, 839, 0,
	690, 680, 85, 0, 0, 113, 114, 116, 0, 125,
	0, 127, 128, 1044, 0, 0, 1378, 1379, 1380, 0,
	899, 900, 913, 996, 1685, 1685, 0, 0, 0, 1002,
	1003, 1007, 0, 1114, 0, 0, 1120, 0, 1127, 1146,
	1135, 1136, 1137, 1080, 1101, 0, -2, 1109, 0, 0,
	1266, 1272, 1281, 1283, 1284, 0, 1296, 1297, 1298, 1300,
	995, 995, 995, 995, 1216, 689, 0, 1054, 0, 97,
	0, 99, 101, 102, 1239, 110, 111, 117, 126, 0,
	1389, 901, 0, 0, 999, 1000, 0, 1090, 0, 1092,
	0, 0, 0, 0, 0, 1124, 0, 1103, -2, 0,
	1111, 1267, 1285, 0, 1286, 0, 0, 0, 1207, 1209,
	1213, 1215, 691, 86, 87, 0, 98, 0, 0, 0,
	886, 902, 0, 997, 998, 1001, 0, 1094, 0, 1115,
	0, 0, 0, 0, 0, 0, 0, 1110, 1287, 1289,
	1290, 0, 0, 1288, 0, 0, 100, 1240, 1049, 903,
	1091, 1088, 1126, 1116, 0, 1118, 0, 0, 0, 0,
	1291, 1293, 1292, 88, 89, 90, 0, 1112, 1117, 1119,
	1121, 0, 1125, 1123, 1241, 1093, 0, 1122, 1113,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 114, 3, 3, 3, 145, 137, 3,
	82, 83, 142, 140, 155, 141, 154, 143, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 623, 620,
	124, 123, 125, 3, 624, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 147, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 621, 136, 622, 148,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	115, 116, 117, 118, 119, 120, 121, 122, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 138, 139,
	144, 146, 149, 150, 151, 152, 153, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:795
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:802
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:808
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:822
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:826
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:845
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:851
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:860
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:892
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:900
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:908
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:938
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:944
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:951
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:959
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:965
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:984
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1036
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1043
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1052
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1072
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1076
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1101
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1105
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1111
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1124
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1130
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1164
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1175
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1185
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1198
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1210
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1224
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1228
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1232
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1245
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1251
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1260
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1271
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1275
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1281
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1285
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1291
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1295
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1301
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1325
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1344
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1348
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1352
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1361
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1368
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1376
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1383
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1388
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1395
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1404
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1428
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1432
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1438
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1444
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1462
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1479
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1515
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1519
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1562
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1629
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1665
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1669
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1691
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1695
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1885
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1889
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1897
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1934
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1938
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1959
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1971
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1981
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1994
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2044
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2048
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2064
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2071
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2081
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2129
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2189
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2224
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2228
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2238
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2244
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2248
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2254
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2258
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2288
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2292
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2304
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2308
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2312
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2326
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2373
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2383
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2401
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2416
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2438
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2442
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2448
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2561
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2620
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2624
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2630
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2636
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2641
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2642
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2643
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2648
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2665
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2692
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2699
		{
			yyLOCAL = &tree.AlterTable{
				Table:            yyDollar[3].tableNameUnion(),
				PartitionOptions: yyDollar[4].alterPartitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2708
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2712
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2718
		{
			yyLOCAL = yyDollar[1].alterPartitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2733
		{
			opt := &tree.AlterPartitionAddPartitionClause{
				Typ:        tree.AlterPartitionAddPartition,
				Partitions: yyDollar[3].partitionsUnion(),
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2741
		{
			opt := &tree.AlterPartitionDropPartitionClause{
				Typ:            tree.AlterPartitionDropPartition,
				PartitionNames: yyDollar[3].PartitionNamesUnion(),
			}
			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line mysql_sql.y:2754
		{
			opt := &tree.AlterPartitionTruncatePartitionClause{
				Typ:            tree.AlterPartitionTruncatePartition,
				PartitionNames: yyDollar[3].PartitionNamesUnion(),
			}
			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2773
		{
			yyLOCAL = yyDollar[1].PartitionNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2783
		{
			yyLOCAL = append(yyDollar[1].PartitionNamesUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2791
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2798
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2807
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2817
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2826
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2836
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2846
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2855
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2863
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2867
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2875
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2894
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2898
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2902
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2906
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2910
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2918
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2927
		{
			yyVAL.str = ""
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2958
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2962
		{
			yyVAL.str = string("COLUMN")
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2967
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2979
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2988
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2992
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2998
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3020
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3027
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.AlterOptionAlterReIndex{
				KeyType:       tree.INDEX_TYPE_IVFFLAT,
				AlgoParamList: int64(yyDollar[6].item.(int64)),
				Name:          tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3087
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3091
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3118
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3126
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3139
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3145
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3189
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3205
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3213
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3217
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3233
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3237
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3253
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3265
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3271
		{
			yyVAL.item = nil
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3276
		{
			yyVAL.item = nil
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3317
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3352
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3363
		{
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3367
		{
		}
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3406
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3436
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3473
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3479
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3488
		{
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3490
		{
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3509
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3550
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3569
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3591
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3603
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3617
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3623
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3643
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3648
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3652
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3658
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3675
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3690
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3700
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3706
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3710
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3716
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3722
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3726
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3730
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3736
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3740
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3774
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3783
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3792
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3796
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3802
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3811
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3820
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3830
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3834
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3840
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3846
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3852
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3856
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3862
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3868
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3877
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3884
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3895
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3900
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3907
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3923
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3936
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3947
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3951
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3957
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3962
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3969
		{
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3971
		{
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3974
		{
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3983
		{
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3987
		{
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3992
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4001
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4008
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4014
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4022
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4029
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:4036
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4056
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4066
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4076
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4083
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4089
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4097
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4104
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4111
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4130
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4134
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4138
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4147
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4151
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4157
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4166
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4170
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4176
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4180
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4186
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4190
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4196
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4201
		{
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4212
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4216
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4223
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4232
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4242
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4248
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4252
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4274
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4288
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4306
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4331
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4342
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4355
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4359
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4364
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4368
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4375
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4380
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4387
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4393
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4397
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4401
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4405
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4409
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4413
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4422
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4428
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4438
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4457
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4481
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4490
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4494
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4498
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4502
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4512
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4519
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4528
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4532
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4550
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4559
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4565
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4569
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4573
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4582
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4588
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4594
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4598
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4604
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4609
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4613
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4617
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4622
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4626
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4630
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4639
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4647
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4655
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4669
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4673
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4703
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4740
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4748
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4772
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4780
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4788
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4796
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4804
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4814
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4825
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4839
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4843
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4847
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4852
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4856
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4860
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4882
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4891
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4897
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4901
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4911
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4916
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4920
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4925
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4933
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4939
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4947
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4955
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4965
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4971
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4980
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4989
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4998
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5008
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5012
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5022
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5026
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5030
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5034
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5040
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:5050
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:5054
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5060
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5070
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5076
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5082
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5086
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5090
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5100
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5110
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5116
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5120
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5126
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5130
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5140
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5153
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5159
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5165
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5178
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5196
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5200
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5206
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5216
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5220
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5224
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5229
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5250
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5254
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5258
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5262
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5267
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5271
		{
			yyVAL.str = yyDollar[1].str
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5275
		{
			yyVAL.str = yyDollar[2].str
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5281
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5287
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5291
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5295
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5299
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5303
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5309
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 870:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5348
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5358
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5364
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 873:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5370
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5380
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5385
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5402
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5408
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5423
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5431
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5438
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].sourceOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5462
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5467
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5473
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5484
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5490
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5496
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5504
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5510
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5522
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5532
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5539
		{
			yyVAL.str = yyDollar[2].str
		}
	case 904:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5545
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5554
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].sourceOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5566
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5578
		{
			yyVAL.str = yyDollar[1].str
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5582
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5588
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5592
		{
			yyVAL.str = "DEFINER = "
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5596
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5601
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5605
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5619
		{
			yyVAL.str = ""
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5627
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5643
		{
			yyVAL.str = yyDollar[1].str
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5647
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5660
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5687
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5717
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5729
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5741
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5753
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5759
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5774
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5780
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5788
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5794
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5802
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5808
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5817
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5821
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5826
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5830
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5837
		{
			yyVAL.str = yyDollar[3].str
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5842
		{
			yyVAL.str = ""
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5846
		{
			yyVAL.str = yyDollar[2].str
		}
	case 954:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5866
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5880
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5886
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5892
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5898
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5907
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5916
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5925
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5930
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6050
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6054
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:6060
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6070
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:6074
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:6080
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6090
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6094
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6098
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6107
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6113
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6120
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6135
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6142
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6151
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6155
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6161
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6179
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6183
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6188
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6192
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6196
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6200
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6206
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6231
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorOpType) > 0 {
					opt1.AlgoParamVectorOpType = opt2.AlgoParamVectorOpType
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6257
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6261
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6265
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorOpType: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6269
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6273
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6277
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6281
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6287
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6291
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6297
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6302
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6307
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6311
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6315
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6323
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6327
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6333
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6371
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6377
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6381
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6387
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6391
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6395
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6410
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6419
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6425
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6443
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6461
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6479
		{
			yyLOCAL = &tree.CreateSource{
				Replace:     yyDollar[2].sourceOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				SourceName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6494
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6500
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6512
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6533
		{
			yyLOCAL = &tree.CreateTable{
				IsDynamicTable: true,
				IfNotExists:    yyDollar[4].ifNotExistsUnion(),
				Table:          *yyDollar[5].tableNameUnion(),
				AsSource:       yyDollar[7].selectUnion(),
				DTOptions:      yyDollar[8].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6544
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6551
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6561
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6574
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6582
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6591
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6600
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:6604
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6610
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6614
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6619
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6623
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6630
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6641
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6654
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6668
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6676
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6686
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6693
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6700
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6707
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6718
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6722
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6726
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6730
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6737
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6748
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6755
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6766
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6772
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6782
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6789
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6796
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6803
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6819
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6823
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6827
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6836
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6850
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6857
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6868
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6881
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6887
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6891
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6897
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6906
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6920
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6926
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6930
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6936
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6943
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6952
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6956
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6965
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6970
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6974
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6979
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6983
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6993
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6997
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7008
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7016
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7024
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7032
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7043
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7052
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7062
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7072
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7076
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7085
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7091
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7095
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7101
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7105
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7114
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7120
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7124
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7130
		{
			yyLOCAL = &tree.CreateSourceWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7134
		{
			yyLOCAL = &tree.CreateSourceWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7143
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7149
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7153
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7157
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7163
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7167
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7171
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7183
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7187
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7192
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7204
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7208
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7212
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7216
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7220
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7228
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7232
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7236
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7240
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7244
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7248
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7252
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7256
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7260
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7264
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7268
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7272
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7276
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7280
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7284
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7292
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7296
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7300
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7306
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7310
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7316
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7322
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7326
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7332
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7336
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7340
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7344
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7348
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7352
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7366
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7370
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7379
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7384
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7390
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7397
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7401
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7407
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7411
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7415
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7421
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7425
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7431
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7440
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7449
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7480
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7513
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7527
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7533
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7542
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7551
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7560
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7569
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7579
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7587
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7593
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7597
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7607
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7613
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7619
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7639
		{
			yyVAL.str = ""
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7643
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7649
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7655
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7659
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7663
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7669
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7673
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7677
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7681
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7687
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7691
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7695
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7704
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7710
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7714
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7720
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7724
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7728
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7732
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7736
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7740
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7745
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7749
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7761
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7765
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7769
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7773
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7777
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7781
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7794
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7798
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7802
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7810
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7814
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7820
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7824
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7829
		{
			yyVAL.str = ""
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7833
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7839
		{
			yyVAL.str = ""
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7843
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1281:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7849
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7861
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7868
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7875
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7882
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7889
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7898
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7904
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7910
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7914
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7918
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7922
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7926
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7931
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7938
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7942
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7946
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7955
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7960
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7964
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7980
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7986
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7990
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7994
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7998
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8002
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8006
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8010
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8014
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8018
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8022
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8026
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8030
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8040
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8044
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8048
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8052
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8056
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8060
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8064
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8068
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8072
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8076
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8080
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8084
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8089
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8097
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8101
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8105
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8109
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8118
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8122
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8126
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8130
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8134
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8138
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8144
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8152
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8160
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8170
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8180
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8189
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8199
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8209
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8218
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8232
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8247
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8251
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8257
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8266
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8278
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8338
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8350
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8364
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8379
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8394
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8411
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8426
		{
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8433
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8437
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8441
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8447
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8451
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8455
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8459
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8465
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8469
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8473
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8479
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8487
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8501
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8508
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8517
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8522
		{
			yyVAL.str = ","
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8526
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8531
		{
			yyVAL.str = "1,vector_l2_ops,random"
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8535
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8547
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8573
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8584
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8595
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8605
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8615
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8625
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8634
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8643
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8653
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8663
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8673
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8683
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8693
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8713
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8723
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8733
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8743
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8753
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8763
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8782
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8790
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8798
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8806
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8814
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8824
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8832
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8841
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8849
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8857
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8865
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8873
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8884
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8894
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8906
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8917
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8939
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8975
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8987
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8999
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9010
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9025
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9032
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9044
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9052
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9062
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9072
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9080
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9091
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9100
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9109
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9117
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9127
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9135
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9149
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9159
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9178
		{
		}
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9180
		{
		}
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9221
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9232
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9236
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9240
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9246
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9255
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9261
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9265
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9272
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9276
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9280
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9288
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9292
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9296
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9300
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9306
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9310
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9314
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9318
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9322
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9326
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9330
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9334
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9338
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9342
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9350
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9354
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9358
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9362
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9366
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9370
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9374
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9378
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9382
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9386
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9396
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9402
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9406
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9413
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9417
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9421
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9427
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9431
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9435
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9439
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9443
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9447
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9451
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9457
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9461
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9465
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9469
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9475
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9488
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9493
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9499
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9503
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9516
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9521
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9525
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9529
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9533
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9537
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9544
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9548
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9562
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9566
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9573
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9584
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9607
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9631
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9644
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9657
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9670
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9683
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9696
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9709
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9722
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9735
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9748
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9761
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9776
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9803
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9845
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9881
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9917
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9934
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9946
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9966
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9986
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10006
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10035
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10048
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10061
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10074
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10098
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10146
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10170
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10221
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10249
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10257
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10266
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10299
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10304
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10310
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10317
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10321
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10326
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10330
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10336
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10342
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10349
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10356
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10365
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10372
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10379
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10388
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10392
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10402
		{
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10414
		{
			yyVAL.str = ""
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10418
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

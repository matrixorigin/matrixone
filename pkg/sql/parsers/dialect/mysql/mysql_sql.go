// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const VALUES = 57385
const NEXT = 57386
const VALUE = 57387
const SHARE = 57388
const MODE = 57389
const SQL_NO_CACHE = 57390
const SQL_CACHE = 57391
const JOIN = 57392
const STRAIGHT_JOIN = 57393
const LEFT = 57394
const RIGHT = 57395
const INNER = 57396
const OUTER = 57397
const CROSS = 57398
const NATURAL = 57399
const USE = 57400
const FORCE = 57401
const LOWER_THAN_ON = 57402
const ON = 57403
const USING = 57404
const SUBQUERY_AS_EXPR = 57405
const LOWER_THAN_STRING = 57406
const ID = 57407
const AT_ID = 57408
const AT_AT_ID = 57409
const STRING = 57410
const VALUE_ARG = 57411
const LIST_ARG = 57412
const COMMENT = 57413
const COMMENT_KEYWORD = 57414
const INTEGRAL = 57415
const HEX = 57416
const BIT_LITERAL = 57417
const FLOAT = 57418
const HEXNUM = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const LOWER_THAN_CHARSET = 57423
const CHARSET = 57424
const UNIQUE = 57425
const KEY = 57426
const OR = 57427
const PIPE_CONCAT = 57428
const XOR = 57429
const AND = 57430
const NOT = 57431
const BETWEEN = 57432
const CASE = 57433
const WHEN = 57434
const THEN = 57435
const ELSE = 57436
const END = 57437
const LOWER_THAN_EQ = 57438
const LE = 57439
const GE = 57440
const NE = 57441
const NULL_SAFE_EQUAL = 57442
const IS = 57443
const LIKE = 57444
const REGEXP = 57445
const IN = 57446
const ASSIGNMENT = 57447
const SHIFT_LEFT = 57448
const SHIFT_RIGHT = 57449
const DIV = 57450
const MOD = 57451
const UNARY = 57452
const COLLATE = 57453
const BINARY = 57454
const UNDERSCORE_BINARY = 57455
const INTERVAL = 57456
const BEGIN = 57457
const START = 57458
const TRANSACTION = 57459
const COMMIT = 57460
const ROLLBACK = 57461
const WORK = 57462
const CONSISTENT = 57463
const SNAPSHOT = 57464
const CHAIN = 57465
const NO = 57466
const RELEASE = 57467
const PRIORITY = 57468
const QUICK = 57469
const BIT = 57470
const TINYINT = 57471
const SMALLINT = 57472
const MEDIUMINT = 57473
const INT = 57474
const INTEGER = 57475
const BIGINT = 57476
const INTNUM = 57477
const REAL = 57478
const DOUBLE = 57479
const FLOAT_TYPE = 57480
const DECIMAL = 57481
const NUMERIC = 57482
const DECIMAL_VALUE = 57483
const TIME = 57484
const TIMESTAMP = 57485
const DATETIME = 57486
const YEAR = 57487
const CHAR = 57488
const VARCHAR = 57489
const BOOL = 57490
const CHARACTER = 57491
const VARBINARY = 57492
const NCHAR = 57493
const TEXT = 57494
const TINYTEXT = 57495
const MEDIUMTEXT = 57496
const LONGTEXT = 57497
const BLOB = 57498
const TINYBLOB = 57499
const MEDIUMBLOB = 57500
const LONGBLOB = 57501
const JSON = 57502
const ENUM = 57503
const UUID = 57504
const GEOMETRY = 57505
const POINT = 57506
const LINESTRING = 57507
const POLYGON = 57508
const GEOMETRYCOLLECTION = 57509
const MULTIPOINT = 57510
const MULTILINESTRING = 57511
const MULTIPOLYGON = 57512
const INT1 = 57513
const INT2 = 57514
const INT3 = 57515
const INT4 = 57516
const INT8 = 57517
const SQL_SMALL_RESULT = 57518
const SQL_BIG_RESULT = 57519
const SQL_BUFFER_RESULT = 57520
const LOW_PRIORITY = 57521
const HIGH_PRIORITY = 57522
const DELAYED = 57523
const CREATE = 57524
const ALTER = 57525
const DROP = 57526
const RENAME = 57527
const ANALYZE = 57528
const ADD = 57529
const SCHEMA = 57530
const TABLE = 57531
const INDEX = 57532
const VIEW = 57533
const TO = 57534
const IGNORE = 57535
const IF = 57536
const PRIMARY = 57537
const COLUMN = 57538
const CONSTRAINT = 57539
const SPATIAL = 57540
const FULLTEXT = 57541
const FOREIGN = 57542
const KEY_BLOCK_SIZE = 57543
const SHOW = 57544
const DESCRIBE = 57545
const EXPLAIN = 57546
const DATE = 57547
const ESCAPE = 57548
const REPAIR = 57549
const OPTIMIZE = 57550
const TRUNCATE = 57551
const MAXVALUE = 57552
const PARTITION = 57553
const REORGANIZE = 57554
const LESS = 57555
const THAN = 57556
const PROCEDURE = 57557
const TRIGGER = 57558
const STATUS = 57559
const VARIABLES = 57560
const ROLE = 57561
const PROXY = 57562
const AVG_ROW_LENGTH = 57563
const STORAGE = 57564
const DISK = 57565
const MEMORY = 57566
const CHECKSUM = 57567
const COMPRESSION = 57568
const DATA = 57569
const DIRECTORY = 57570
const DELAY_KEY_WRITE = 57571
const ENCRYPTION = 57572
const ENGINE = 57573
const MAX_ROWS = 57574
const MIN_ROWS = 57575
const PACK_KEYS = 57576
const ROW_FORMAT = 57577
const STATS_AUTO_RECALC = 57578
const STATS_PERSISTENT = 57579
const STATS_SAMPLE_PAGES = 57580
const DYNAMIC = 57581
const COMPRESSED = 57582
const REDUNDANT = 57583
const COMPACT = 57584
const FIXED = 57585
const COLUMN_FORMAT = 57586
const AUTO_RANDOM = 57587
const RESTRICT = 57588
const CASCADE = 57589
const ACTION = 57590
const PARTIAL = 57591
const SIMPLE = 57592
const CHECK = 57593
const ENFORCED = 57594
const RANGE = 57595
const LIST = 57596
const ALGORITHM = 57597
const LINEAR = 57598
const PARTITIONS = 57599
const SUBPARTITION = 57600
const SUBPARTITIONS = 57601
const TYPE = 57602
const ANY = 57603
const SOME = 57604
const EXTERNAL = 57605
const LOCALFILE = 57606
const URL = 57607
const PREPARE = 57608
const DEALLOCATE = 57609
const PROPERTIES = 57610
const PARSER = 57611
const VISIBLE = 57612
const INVISIBLE = 57613
const BTREE = 57614
const HASH = 57615
const RTREE = 57616
const BSI = 57617
const ZONEMAP = 57618
const LEADING = 57619
const BOTH = 57620
const TRAILING = 57621
const UNKNOWN = 57622
const EXPIRE = 57623
const ACCOUNT = 57624
const UNLOCK = 57625
const DAY = 57626
const NEVER = 57627
const SECOND = 57628
const ASCII = 57629
const COALESCE = 57630
const COLLATION = 57631
const HOUR = 57632
const MICROSECOND = 57633
const MINUTE = 57634
const MONTH = 57635
const QUARTER = 57636
const REPEAT = 57637
const REVERSE = 57638
const ROW_COUNT = 57639
const WEEK = 57640
const REVOKE = 57641
const FUNCTION = 57642
const PRIVILEGES = 57643
const TABLESPACE = 57644
const EXECUTE = 57645
const SUPER = 57646
const GRANT = 57647
const OPTION = 57648
const REFERENCES = 57649
const REPLICATION = 57650
const SLAVE = 57651
const CLIENT = 57652
const USAGE = 57653
const RELOAD = 57654
const FILE = 57655
const TEMPORARY = 57656
const ROUTINE = 57657
const EVENT = 57658
const SHUTDOWN = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const ADMIN_NAME = 57666
const RANDOM = 57667
const SUSPEND = 57668
const ATTRIBUTE = 57669
const HISTORY = 57670
const REUSE = 57671
const CURRENT = 57672
const OPTIONAL = 57673
const FAILED_LOGIN_ATTEMPTS = 57674
const PASSWORD_LOCK_TIME = 57675
const UNBOUNDED = 57676
const SECONDARY = 57677
const USER = 57678
const IDENTIFIED = 57679
const CIPHER = 57680
const ISSUER = 57681
const X509 = 57682
const SUBJECT = 57683
const SAN = 57684
const REQUIRE = 57685
const SSL = 57686
const NONE = 57687
const PASSWORD = 57688
const MAX_QUERIES_PER_HOUR = 57689
const MAX_UPDATES_PER_HOUR = 57690
const MAX_CONNECTIONS_PER_HOUR = 57691
const MAX_USER_CONNECTIONS = 57692
const FORMAT = 57693
const VERBOSE = 57694
const CONNECTION = 57695
const LOAD = 57696
const INFILE = 57697
const TERMINATED = 57698
const OPTIONALLY = 57699
const ENCLOSED = 57700
const ESCAPED = 57701
const STARTING = 57702
const LINES = 57703
const ROWS = 57704
const IMPORT = 57705
const DATABASES = 57706
const TABLES = 57707
const EXTENDED = 57708
const FULL = 57709
const PROCESSLIST = 57710
const FIELDS = 57711
const COLUMNS = 57712
const OPEN = 57713
const ERRORS = 57714
const WARNINGS = 57715
const INDEXES = 57716
const SCHEMAS = 57717
const NAMES = 57718
const GLOBAL = 57719
const SESSION = 57720
const ISOLATION = 57721
const LEVEL = 57722
const READ = 57723
const WRITE = 57724
const ONLY = 57725
const REPEATABLE = 57726
const COMMITTED = 57727
const UNCOMMITTED = 57728
const SERIALIZABLE = 57729
const LOCAL = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_TIME = 57733
const LOCALTIME = 57734
const LOCALTIMESTAMP = 57735
const UTC_DATE = 57736
const UTC_TIME = 57737
const UTC_TIMESTAMP = 57738
const REPLACE = 57739
const CONVERT = 57740
const SEPARATOR = 57741
const CURRENT_DATE = 57742
const CURRENT_USER = 57743
const CURRENT_ROLE = 57744
const SECOND_MICROSECOND = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const HOUR_MICROSECOND = 57748
const HOUR_SECOND = 57749
const HOUR_MINUTE = 57750
const DAY_MICROSECOND = 57751
const DAY_SECOND = 57752
const DAY_MINUTE = 57753
const DAY_HOUR = 57754
const YEAR_MONTH = 57755
const SQL_TSI_HOUR = 57756
const SQL_TSI_DAY = 57757
const SQL_TSI_WEEK = 57758
const SQL_TSI_MONTH = 57759
const SQL_TSI_QUARTER = 57760
const SQL_TSI_YEAR = 57761
const SQL_TSI_SECOND = 57762
const SQL_TSI_MINUTE = 57763
const RECURSIVE = 57764
const CONFIG = 57765
const MATCH = 57766
const AGAINST = 57767
const BOOLEAN = 57768
const LANGUAGE = 57769
const WITH = 57770
const QUERY = 57771
const EXPANSION = 57772
const ADDDATE = 57773
const BIT_AND = 57774
const BIT_OR = 57775
const BIT_XOR = 57776
const CAST = 57777
const COUNT = 57778
const APPROX_COUNT_DISTINCT = 57779
const APPROX_PERCENTILE = 57780
const CURDATE = 57781
const CURTIME = 57782
const DATE_ADD = 57783
const DATE_SUB = 57784
const EXTRACT = 57785
const GROUP_CONCAT = 57786
const MAX = 57787
const MID = 57788
const MIN = 57789
const NOW = 57790
const POSITION = 57791
const SESSION_USER = 57792
const STD = 57793
const STDDEV = 57794
const STDDEV_POP = 57795
const STDDEV_SAMP = 57796
const SUBDATE = 57797
const SUBSTR = 57798
const SUBSTRING = 57799
const SUM = 57800
const SYSDATE = 57801
const SYSTEM_USER = 57802
const TRANSLATE = 57803
const TRIM = 57804
const VARIANCE = 57805
const VAR_POP = 57806
const VAR_SAMP = 57807
const AVG = 57808
const JSON_EXTRACT = 57809
const ROW = 57810
const OUTFILE = 57811
const HEADER = 57812
const MAX_FILE_SIZE = 57813
const FORCE_QUOTE = 57814
const UNUSED = 57815

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7327

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 65,
	21, 450,
	-2, 431,
	-1, 70,
	207, 605,
	-2, 647,
	-1, 87,
	234, 308,
	235, 308,
	-2, 329,
	-1, 374,
	21, 451,
	-2, 414,
	-1, 450,
	100, 1333,
	111, 1333,
	130, 1333,
	-2, 1144,
	-1, 480,
	21, 451,
	-2, 414,
	-1, 657,
	64, 1486,
	-2, 1493,
	-1, 665,
	64, 1487,
	-2, 1501,
	-1, 667,
	64, 1483,
	-2, 1503,
	-1, 668,
	64, 1484,
	-2, 1504,
	-1, 673,
	64, 1485,
	-2, 1510,
	-1, 674,
	64, 1488,
	-2, 1511,
	-1, 675,
	64, 1489,
	-2, 1512,
	-1, 676,
	64, 904,
	-2, 1513,
	-1, 677,
	64, 905,
	-2, 1514,
	-1, 678,
	64, 906,
	-2, 1515,
	-1, 680,
	64, 1490,
	-2, 1517,
	-1, 681,
	64, 924,
	-2, 1518,
	-1, 682,
	64, 923,
	-2, 1519,
	-1, 685,
	64, 1491,
	-2, 1522,
	-1, 686,
	64, 1492,
	-2, 1523,
	-1, 692,
	64, 986,
	-2, 1333,
	-1, 693,
	64, 995,
	-2, 1358,
	-1, 694,
	64, 999,
	-2, 1397,
	-1, 695,
	64, 1007,
	-2, 1449,
	-1, 696,
	64, 1010,
	-2, 1458,
	-1, 697,
	64, 1012,
	-2, 1468,
	-1, 698,
	64, 1000,
	-2, 1473,
	-1, 699,
	64, 1008,
	-2, 1477,
	-1, 700,
	64, 989,
	-2, 1478,
	-1, 860,
	1, 631,
	65, 631,
	491, 631,
	-2, 638,
	-1, 1002,
	21, 450,
	-2, 832,
	-1, 1047,
	130, 1154,
	-2, 1152,
	-1, 1049,
	130, 549,
	-2, 1149,
	-1, 1050,
	130, 550,
	-2, 1150,
	-1, 1262,
	1, 632,
	65, 632,
	491, 632,
	-2, 638,
	-1, 1349,
	64, 1055,
	-2, 1475,
	-1, 1350,
	64, 1056,
	-2, 1476,
	-1, 1519,
	62, 371,
	131, 371,
	-2, 738,
	-1, 1843,
	84, 638,
	126, 638,
	163, 638,
	166, 638,
	-2, 686,
	-1, 1845,
	268, 800,
	-2, 780,
	-1, 1875,
	62, 371,
	131, 371,
	-2, 739,
	-1, 1953,
	84, 638,
	126, 638,
	163, 638,
	166, 638,
	-2, 687,
	-1, 1981,
	268, 800,
	-2, 781,
	-1, 2382,
	65, 659,
	131, 659,
	-2, 638,
	-1, 2386,
	65, 659,
	131, 659,
	-2, 638,
	-1, 2400,
	65, 663,
	131, 663,
	-2, 638,
	-1, 2405,
	65, 664,
	131, 664,
	-2, 638,
}

const yyPrivate = 57344

const yyLast = 21943

var yyAct = [...]int{
	843, 1352, 2388, 2394, 2386, 2385, 2363, 704, 834, 2019,
	2231, 723, 2312, 2352, 2270, 1310, 1993, 2296, 2203, 2207,
	2183, 2297, 1940, 1949, 702, 1246, 1020, 930, 2017, 104,
	1837, 2018, 1353, 830, 323, 329, 633, 329, 741, 2191,
	1306, 107, 327, 23, 624, 2042, 375, 735, 65, 895,
	374, 1896, 2002, 333, 1938, 1868, 2031, 1664, 1982, 865,
	1495, 867, 1522, 2001, 837, 1660, 448, 1907, 563, 1899,
	915, 574, 1889, 403, 1534, 656, 1305, 1669, 103, 315,
	1849, 65, 889, 339, 1665, 1911, 1029, 1224, 1737, 1727,
	1599, 703, 1716, 1679, 1269, 449, 1675, 1745, 1044, 475,
	1220, 1658, 1047, 104, 1039, 1038, 1030, 1423, 1437, 892,
	713, 1533, 908, 1292, 1560, 890, 576, 1219, 874, 1957,
	3, 1497, 1263, 1492, 326, 15, 324, 6, 845, 325,
	5, 853, 64, 828, 1221, 1268, 1351, 833, 1354, 648,
	1366, 912, 451, 23, 455, 1255, 453, 705, 65, 1252,
	456, 31, 477, 876, 405, 875, 316, 1308, 490, 1235,
	819, 936, 933, 440, 849, 319, 1021, 827, 1231, 1332,
	402, 616, 852, 882, 600, 341, 545, 12, 342, 7,
	4, 1942, 2278, 1238, 31, 100, 1228, 2049, 1945, 1836,
	840, 1032, 634, 647, 328, 2010, 99, 2249, 28, 89,
	71, 95, 602, 2259, 1236, 509, 561, 1477, 543, 98,
	1469, 774, 1225, 773, 775, 776, 2285, 777, 778, 400,
	2283, 474, 410, 1494, 392, 15, 1484, 6, 99, 454,
	5, 331, 99, 314, 28, 89, 71, 2040, 99, 424,
	28, 89, 71, 878, 99, 99, 99, 441, 784, 603,
	96, 31, 897, 898, 587, 588, 804, 461, 460, 462,
	524, 781, 525, 517, 836, 519, 541, 593, 1493, 594,
	585, 336, 1652, 584, 587, 588, 2300, 2301, 1624, 820,
	2136, 824, 783, 2274, 2275, 2139, 96, 459, 2052, 1653,
	527, 1654, 96, 520, 2043, 2044, 2045, 2046, 96, 96,
	96, 536, 542, 1838, 838, 823, 1464, 484, 2206, 1831,
	1857, 493, 909, 1232, 1690, 2015, 529, 483, 530, 1864,
	1253, 2111, 1680, 2028, 1645, 425, 482, 1895, 1894, 1999,
	1688, 329, 1643, 104, 464, 905, 538, 815, 539, 540,
	1474, 512, 1684, 2114, 394, 338, 532, 2258, 2012, 2287,
	457, 2310, 330, 522, 391, 390, 513, 2105, 1563, 1565,
	1566, 479, 481, 2379, 608, 453, 480, 2395, 65, 65,
	455, 370, 825, 609, 371, 385, 515, 1685, 1686, 426,
	2319, 2282, 500, 2205, 2233, 70, 2326, 97, 518, 521,
	822, 2256, 1687, 376, 2299, 2192, 2193, 2194, 2196, 2195,
	370, 2098, 403, 371, 458, 87, 1500, 523, 1237, 528,
	514, 1341, 1344, 1345, 2373, 2067, 2261, 2262, 2066, 388,
	504, 373, 1342, 372, 550, 1508, 1509, 1510, 1511, 2229,
	2230, 1682, 2233, 586, 2289, 2290, 2239, 493, 383, 562,
	1506, 612, 533, 449, 449, 449, 583, 582, 628, 628,
	502, 2396, 2390, 565, 566, 454, 568, 2364, 463, 2055,
	476, 526, 2402, 531, 516, 329, 651, 651, 595, 1600,
	389, 31, 31, 416, 534, 535, 495, 494, 564, 786,
	821, 626, 626, 337, 2134, 2089, 486, 487, 2355, 452,
	601, 1470, 384, 630, 1319, 1229, 847, 802, 650, 650,
	636, 509, 567, 1650, 315, 1673, 2093, 1648, 571, 628,
	1553, 628, 483, 501, 569, 1514, 787, 332, 782, 1226,
	611, 835, 578, 65, 1226, 498, 1226, 1891, 1890, 590,
	591, 1317, 1316, 2168, 1315, 606, 65, 900, 587, 588,
	811, 901, 587, 588, 1941, 65, 393, 397, 398, 399,
	604, 605, 418, 2288, 1314, 417, 467, 472, 473, 899,
	428, 2204, 579, 429, 2338, 1569, 628, 509, 547, 860,
	1453, 868, 2389, 403, 2260, 1564, 866, 1844, 1827, 508,
	104, 842, 1469, 856, 846, 1618, 549, 868, 1301, 2361,
	1691, 488, 1681, 2112, 883, 883, 1646, 1863, 1302, 2356,
	628, 104, 495, 494, 1683, 910, 1239, 1459, 1435, 839,
	1227, 832, 1328, 1225, 449, 881, 628, 622, 623, 1245,
	2011, 573, 810, 2016, 807, 2401, 1674, 806, 1343, 871,
	848, 72, 1478, 924, 589, 1700, 1515, 592, 861, 31,
	870, 628, 1216, 929, 104, 104, 829, 813, 31, 916,
	855, 945, 879, 880, 793, 916, 916, 788, 314, 646,
	779, 934, 635, 72, 885, 1499, 904, 72, 816, 869,
	797, 798, 932, 72, 789, 809, 544, 808, 805, 72,
	72, 72, 503, 826, 1257, 949, 1302, 935, 831, 1302,
	619, 620, 621, 931, 931, 610, 906, 598, 599, 872,
	873, 2091, 1713, 854, 1521, 2090, 2094, 2095, 452, 1004,
	432, 572, 1670, 1673, 1503, 1504, 911, 416, 469, 470,
	471, 2353, 2354, 2408, 841, 928, 613, 817, 1502, 639,
	640, 641, 642, 643, 644, 645, 1614, 854, 2316, 1613,
	1003, 2407, 877, 863, 1878, 862, 1243, 1701, 1011, 2169,
	2171, 2172, 2173, 2170, 1608, 1002, 2398, 431, 801, 2061,
	2380, 434, 433, 886, 921, 922, 800, 1013, 884, 2375,
	888, 1655, 887, 1520, 923, 1256, 1562, 907, 829, 942,
	943, 944, 941, 1523, 1036, 1036, 1041, 2367, 2366, 1569,
	2314, 918, 919, 920, 2307, 2302, 418, 507, 2291, 417,
	1005, 1006, 1007, 1008, 926, 1569, 1049, 1569, 927, 506,
	925, 942, 943, 944, 941, 866, 2279, 2254, 2253, 628,
	1472, 2252, 2399, 1607, 2251, 1009, 1234, 2241, 2130, 1471,
	2128, 455, 1050, 967, 1674, 2376, 2126, 1025, 2124, 1667,
	454, 1811, 65, 1668, 1671, 939, 2121, 2115, 104, 104,
	1463, 975, 1800, 1234, 1234, 1242, 2315, 1786, 1458, 1577,
	2116, 2116, 104, 1270, 1328, 1576, 1467, 1785, 1782, 1783,
	1784, 818, 1284, 1816, 1217, 1815, 1814, 1812, 323, 507,
	1461, 1806, 2280, 2116, 2116, 1244, 1286, 2116, 1035, 1521,
	2116, 934, 1455, 2242, 2131, 1672, 2129, 1249, 1251, 1272,
	1215, 1274, 2125, 1233, 2125, 794, 948, 790, 632, 496,
	478, 1266, 1273, 2116, 987, 1705, 454, 935, 1569, 617,
	1356, 1355, 1642, 1569, 628, 1569, 1640, 1438, 1223, 577,
	618, 1569, 1273, 1275, 1276, 1277, 1813, 1311, 651, 2350,
	104, 1028, 2339, 1496, 1313, 31, 1462, 1337, 1048, 1339,
	2243, 916, 916, 916, 1214, 580, 1490, 1326, 1456, 2142,
	1213, 937, 1714, 1649, 1042, 1273, 1043, 1362, 1363, 1234,
	650, 795, 1460, 1641, 1333, 1334, 1335, 1336, 1218, 1222,
	1264, 615, 430, 1321, 485, 851, 1318, 509, 1438, 941,
	1605, 1278, 944, 941, 2101, 1280, 1359, 1282, 1329, 1240,
	990, 991, 992, 993, 994, 987, 1025, 1361, 395, 1401,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1331, 1258, 1447, 1432, 1433, 1346, 2100, 1312,
	1573, 1853, 2084, 1288, 1281, 1283, 1287, 877, 1279, 1430,
	1848, 1364, 1247, 1248, 2384, 1439, 2369, 1442, 2372, 1449,
	581, 1365, 1817, 1818, 1428, 1429, 1427, 2336, 614, 1760,
	1322, 1323, 1324, 986, 985, 995, 996, 988, 989, 990,
	991, 992, 993, 994, 987, 2320, 435, 1330, 942, 943,
	944, 941, 1616, 942, 943, 944, 941, 1808, 2371, 1795,
	1452, 1431, 2370, 942, 943, 944, 941, 2217, 427, 2214,
	1357, 1358, 1676, 1360, 2309, 998, 2213, 1001, 1425, 1396,
	1397, 1398, 1399, 1400, 2185, 2163, 1406, 1407, 1408, 1409,
	2179, 1410, 999, 1000, 997, 2293, 986, 985, 995, 996,
	988, 989, 990, 991, 992, 993, 994, 987, 1610, 986,
	985, 995, 996, 988, 989, 990, 991, 992, 993, 994,
	987, 1441, 1443, 1444, 1440, 2178, 1748, 2162, 2161, 2158,
	1448, 942, 943, 944, 941, 1450, 988, 989, 990, 991,
	992, 993, 994, 987, 1768, 1772, 1774, 1776, 1778, 1779,
	1781, 1586, 1785, 1782, 1783, 1784, 2152, 2149, 1763, 1764,
	1765, 1766, 1746, 1747, 1769, 2148, 1749, 2177, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1767,
	942, 943, 944, 941, 2050, 2175, 1465, 1771, 1773, 1775,
	1777, 1780, 1933, 2036, 2294, 2165, 628, 2013, 628, 2035,
	628, 1585, 2176, 2034, 2184, 483, 952, 953, 954, 955,
	956, 957, 958, 950, 1479, 1487, 942, 943, 944, 941,
	2174, 1762, 2030, 942, 943, 944, 941, 628, 2210, 2029,
	2164, 1475, 2014, 1860, 1932, 1689, 1861, 1636, 1519, 942,
	943, 944, 941, 2132, 1525, 1485, 1486, 791, 846, 1950,
	942, 943, 944, 941, 2110, 1530, 942, 943, 944, 941,
	483, 104, 104, 104, 104, 942, 943, 944, 941, 1535,
	2037, 1862, 483, 104, 1550, 2400, 942, 943, 944, 941,
	1919, 1535, 2276, 370, 23, 2265, 371, 1517, 2237, 65,
	628, 1489, 942, 943, 944, 941, 2236, 2224, 104, 104,
	2212, 1513, 942, 943, 944, 941, 857, 858, 859, 2104,
	1526, 2166, 2159, 2155, 2154, 2153, 2113, 1476, 1551, 1311,
	2086, 2051, 2047, 1468, 2032, 1948, 1946, 1871, 1859, 1473,
	1858, 1855, 1574, 829, 1466, 1833, 1824, 1738, 1739, 1678,
	1647, 1556, 1481, 1451, 1488, 749, 748, 1558, 1559, 1241,
	983, 982, 1264, 981, 792, 1512, 2377, 1570, 1505, 1693,
	1571, 1572, 1524, 1918, 854, 2397, 15, 1527, 6, 1528,
	850, 5, 1529, 1518, 2264, 2244, 1536, 1537, 1538, 1539,
	1532, 1531, 1549, 1548, 1547, 942, 943, 944, 941, 2127,
	2123, 2122, 31, 378, 379, 380, 381, 1936, 1594, 1580,
	1581, 1582, 1583, 1584, 1557, 1588, 377, 1554, 1934, 1589,
	1590, 1591, 1592, 985, 995, 996, 988, 989, 990, 991,
	992, 993, 994, 987, 1597, 1598, 1931, 1036, 1567, 1628,
	1036, 99, 1923, 1631, 89, 71, 1888, 1872, 1602, 1843,
	628, 1606, 1770, 1826, 1002, 1726, 1706, 1615, 1612, 1634,
	1611, 1609, 638, 1617, 1593, 1578, 1575, 916, 1917, 1568,
	421, 1552, 483, 916, 1446, 1445, 637, 2349, 1625, 99,
	2343, 1663, 2327, 65, 2324, 1635, 2322, 968, 104, 2216,
	942, 943, 944, 941, 2201, 96, 2189, 483, 1823, 2186,
	1596, 104, 1270, 2181, 1704, 1623, 1663, 1805, 2143, 1260,
	2347, 1630, 416, 1898, 2108, 1595, 2107, 2106, 1425, 2103,
	942, 943, 944, 941, 1627, 1604, 2097, 2082, 575, 942,
	943, 944, 941, 96, 1639, 1908, 1900, 1694, 1912, 454,
	1620, 1626, 1632, 1730, 1644, 1629, 1633, 1619, 499, 1799,
	1638, 1915, 1905, 1904, 1695, 1696, 1697, 986, 985, 995,
	996, 988, 989, 990, 991, 992, 993, 994, 987, 1707,
	1708, 942, 943, 944, 941, 1712, 1884, 1866, 1854, 1426,
	96, 1516, 1732, 1702, 1491, 1454, 1320, 1271, 1027, 628,
	1724, 418, 1787, 1026, 417, 628, 1703, 1699, 1698, 1793,
	1794, 1024, 1725, 1023, 1022, 1019, 1711, 1018, 1710, 1016,
	1015, 1721, 1014, 1012, 984, 980, 979, 978, 1807, 1798,
	977, 1822, 626, 1820, 976, 974, 1709, 415, 626, 104,
	1797, 104, 973, 1819, 972, 419, 1730, 1796, 104, 1821,
	971, 942, 943, 944, 941, 1723, 1792, 1847, 970, 969,
	966, 965, 942, 943, 944, 941, 964, 1804, 963, 942,
	943, 944, 941, 962, 961, 960, 959, 1801, 942, 943,
	944, 941, 1803, 1791, 814, 785, 628, 628, 1832, 1841,
	1834, 104, 1875, 511, 65, 1810, 1722, 1842, 2332, 1825,
	1790, 1828, 1717, 1718, 483, 942, 943, 944, 941, 2330,
	1789, 1829, 2298, 1535, 1720, 1507, 1327, 1830, 510, 626,
	1869, 1887, 942, 943, 944, 941, 1541, 1540, 1851, 2383,
	1867, 1311, 942, 943, 944, 941, 1850, 916, 1850, 1846,
	1883, 1852, 1845, 1885, 1457, 1788, 2053, 1544, 1265, 1880,
	1542, 1886, 1545, 453, 1876, 1543, 1482, 1877, 1247, 1248,
	1546, 1879, 1298, 1299, 1480, 546, 1873, 942, 943, 944,
	941, 1735, 1657, 1874, 1254, 1882, 1734, 505, 1881, 995,
	996, 988, 989, 990, 991, 992, 993, 994, 987, 1733,
	1902, 1903, 1656, 942, 943, 944, 941, 1304, 942, 943,
	944, 941, 1892, 864, 2267, 1906, 597, 1901, 1910, 1356,
	1355, 942, 943, 944, 941, 558, 559, 596, 1920, 412,
	537, 414, 424, 1909, 1434, 1212, 411, 409, 408, 420,
	413, 1922, 422, 423, 548, 483, 1954, 556, 557, 2003,
	2005, 2344, 2003, 2003, 1663, 2221, 942, 943, 944, 941,
	916, 554, 555, 1924, 552, 553, 1926, 483, 1928, 1913,
	2219, 1916, 51, 1289, 30, 29, 2345, 2146, 1921, 2144,
	2141, 2140, 1925, 1927, 2138, 866, 1947, 2009, 404, 1943,
	1929, 1930, 1840, 1294, 1297, 1298, 1299, 1295, 1937, 1296,
	1300, 1839, 2004, 2000, 311, 1729, 312, 313, 551, 377,
	1979, 1728, 1561, 868, 1951, 2006, 2007, 2025, 2334, 2333,
	1935, 1637, 2008, 986, 985, 995, 996, 988, 989, 990,
	991, 992, 993, 994, 987, 2023, 2024, 2022, 1877, 1294,
	1297, 1298, 1299, 1295, 2026, 1296, 1300, 378, 379, 380,
	381, 1579, 497, 2333, 902, 2334, 2057, 2099, 1303, 406,
	377, 36, 2033, 1, 1230, 1856, 2038, 986, 985, 995,
	996, 988, 989, 990, 991, 992, 993, 994, 987, 1692,
	354, 1677, 353, 360, 350, 570, 396, 1402, 560, 799,
	628, 466, 492, 796, 357, 358, 491, 359, 489, 1436,
	104, 345, 1367, 736, 1031, 1037, 2182, 2266, 2311, 2005,
	2085, 367, 2215, 2269, 812, 722, 2058, 2059, 2133, 2062,
	2063, 2064, 2065, 1869, 2060, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2000,
	2083, 1651, 2039, 2135, 2041, 2087, 1483, 1939, 1621, 2102,
	1622, 746, 739, 2118, 1017, 780, 468, 738, 1865, 2147,
	1501, 2109, 382, 465, 407, 2027, 1835, 1893, 1914, 1897,
	2120, 2117, 2393, 2382, 453, 2362, 2342, 2119, 2232, 2378,
	2281, 2180, 2325, 2318, 2228, 2054, 343, 2137, 903, 607,
	438, 2202, 344, 2257, 2188, 386, 2145, 1259, 387, 1262,
	1261, 65, 1347, 951, 483, 1424, 1010, 483, 483, 483,
	654, 2160, 1311, 1603, 712, 706, 1498, 483, 1994, 1555,
	35, 2150, 2151, 34, 33, 940, 1045, 2156, 2157, 737,
	106, 1285, 2190, 1046, 2225, 2198, 2199, 2200, 2187, 2048,
	2271, 721, 720, 2209, 2226, 2197, 719, 718, 2208, 717,
	1293, 628, 628, 1291, 1290, 894, 893, 2211, 938, 2295,
	2247, 2248, 2220, 1944, 2222, 2223, 2218, 2096, 2227, 346,
	348, 347, 2167, 2092, 2088, 2238, 1953, 352, 1952, 1980,
	1981, 1987, 104, 1744, 626, 626, 1740, 1742, 1743, 356,
	483, 1741, 1809, 1736, 1661, 2234, 2235, 1662, 1659, 1719,
	1715, 1033, 483, 349, 1040, 844, 101, 891, 2021, 2240,
	11, 10, 803, 9, 2246, 14, 22, 2273, 2250, 2245,
	21, 20, 19, 59, 58, 57, 56, 18, 2272, 8,
	2255, 931, 55, 54, 53, 17, 2263, 16, 48, 49,
	46, 45, 44, 43, 42, 2277, 41, 40, 47, 39,
	38, 37, 2284, 2286, 69, 68, 67, 66, 24, 25,
	26, 27, 79, 2292, 78, 80, 76, 74, 77, 75,
	73, 2303, 2304, 2305, 2306, 2313, 32, 13, 2, 0,
	0, 2317, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 355, 361, 0, 362, 363, 0, 0, 364, 365,
	366, 0, 0, 368, 369, 0, 0, 0, 2321, 0,
	2323, 0, 0, 2328, 0, 2331, 2273, 2341, 2329, 2308,
	0, 0, 0, 483, 2335, 483, 2337, 2272, 0, 0,
	2340, 2346, 835, 2348, 835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2313, 0, 2357, 0,
	483, 2358, 2351, 0, 0, 2365, 0, 0, 2368, 835,
	0, 0, 2374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2381, 0, 0, 0, 0, 0, 2392,
	0, 0, 2391, 0, 0, 0, 0, 0, 0, 2403,
	0, 0, 0, 2404, 2406, 2405, 1158, 1200, 2392, 0,
	1147, 0, 1107, 1160, 1081, 1096, 1168, 1097, 1098, 1133,
	1060, 1116, 231, 1094, 0, 0, 0, 0, 0, 0,
	1150, 1052, 1084, 1085, 1054, 1091, 1055, 1082, 1109, 176,
	1080, 1119, 201, 1166, 0, 0, 260, 215, 0, 0,
	1112, 1152, 1114, 1138, 1106, 1134, 1068, 1127, 1161, 1095,
	0, 1131, 1162, 0, 0, 0, 0, 857, 858, 859,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	1130, 1156, 1093, 0, 161, 1159, 1113, 1132, 0, 0,
	1053, 1128, 0, 1058, 1061, 1167, 1154, 1088, 1089, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 1115, 1135,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 1124, 0, 0, 0, 1063, 1059, 0, 1108,
	0, 0, 150, 265, 280, 159, 256, 293, 164, 263,
	155, 230, 252, 0, 1199, 152, 278, 262, 212, 195,
	196, 151, 0, 247, 174, 187, 171, 228, 0, 277,
	305, 170, 296, 1062, 288, 154, 1194, 287, 227, 274,
	279, 213, 207, 153, 276, 211, 206, 199, 178, 0,
	191, 239, 205, 240, 192, 217, 216, 218, 1178, 1179,
	1180, 1181, 1182, 1190, 1191, 0, 1195, 1196, 1197, 1067,
	0, 1087, 1136, 0, 1051, 1145, 1153, 1105, 290, 1155,
	1102, 1101, 1185, 0, 1184, 264, 1186, 1187, 200, 1151,
	1083, 1092, 306, 1090, 250, 233, 1157, 1123, 1198, 248,
	203, 275, 241, 281, 266, 289, 244, 242, 146, 267,
	173, 214, 156, 157, 169, 175, 177, 179, 180, 223,
	224, 236, 255, 268, 269, 270, 172, 165, 249, 166,
	189, 167, 147, 257, 168, 148, 237, 273, 1183, 185,
	245, 210, 149, 209, 238, 272, 271, 297, 303, 304,
	308, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1192, 0, 1193, 302, 183, 144,
	285, 0, 229, 1148, 1056, 1066, 1064, 1099, 1125, 1126,
	225, 301, 1140, 1144, 1141, 1169, 253, 0, 0, 0,
	0, 0, 194, 235, 1142, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 261, 283,
	295, 1201, 1202, 1203, 1204, 0, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 286, 1100, 1074, 1111, 294, 1077, 1075,
	1139, 1076, 1129, 310, 219, 220, 221, 222, 186, 0,
	163, 1120, 1104, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1121, 1079, 307, 182, 188, 0, 190, 162, 234, 184,
	292, 197, 1146, 226, 193, 258, 198, 204, 246, 291,
	232, 251, 160, 282, 259, 208, 1073, 1078, 1072, 1117,
	1118, 1163, 1164, 1165, 1137, 1065, 1149, 1069, 1071, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1143,
	743, 1122, 145, 0, 202, 1170, 243, 181, 0, 0,
	231, 986, 985, 995, 996, 988, 989, 990, 991, 992,
	993, 994, 987, 714, 0, 0, 0, 176, 0, 0,
	201, 0, 0, 0, 260, 215, 0, 0, 0, 0,
	757, 763, 0, 0, 0, 1188, 1189, 298, 299, 300,
	284, 0, 707, 0, 0, 655, 749, 748, 724, 733,
	0, 1601, 158, 725, 0, 732, 726, 730, 729, 727,
	728, 0, 692, 0, 0, 0, 0, 0, 0, 652,
	711, 0, 715, 986, 985, 995, 996, 988, 989, 990,
	991, 992, 993, 994, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 708, 709, 0, 0, 0, 0,
	744, 0, 710, 0, 0, 745, 0, 734, 0, 0,
	150, 265, 280, 159, 256, 293, 164, 263, 155, 230,
	252, 0, 0, 152, 278, 262, 212, 195, 196, 151,
	0, 247, 174, 187, 171, 228, 731, 695, 699, 170,
	697, 742, 288, 154, 0, 287, 227, 274, 279, 213,
	207, 153, 276, 211, 206, 199, 178, 768, 191, 239,
	205, 240, 192, 217, 216, 218, 986, 985, 995, 996,
	988, 989, 990, 991, 992, 993, 994, 987, 0, 0,
	0, 0, 0, 740, 0, 0, 290, 0, 0, 756,
	0, 0, 0, 264, 0, 0, 200, 0, 0, 0,
	700, 0, 250, 233, 766, 653, 0, 248, 203, 275,
	241, 281, 266, 289, 244, 242, 146, 267, 173, 214,
	156, 157, 169, 175, 177, 179, 180, 223, 224, 236,
	255, 268, 269, 270, 172, 165, 249, 166, 189, 167,
	147, 257, 168, 148, 237, 273, 0, 185, 245, 210,
	149, 209, 238, 272, 271, 297, 303, 304, 308, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 1403, 1405, 302, 183, 144, 285, 754,
	229, 765, 750, 751, 752, 755, 758, 759, 694, 698,
	760, 762, 764, 767, 253, 0, 0, 0, 0, 0,
	194, 235, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 283, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 701, 219, 220, 221, 222, 693, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 182, 188, 0, 190, 162, 234, 184, 292, 197,
	0, 226, 193, 258, 198, 204, 246, 291, 232, 251,
	160, 282, 259, 208, 774, 753, 773, 775, 776, 772,
	777, 778, 761, 716, 0, 770, 769, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 202, 0, 243, 181, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 123, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 747, 0, 0, 298, 299, 300, 284, 99,
	0, 743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 176, 0,
	0, 201, 0, 0, 0, 260, 215, 0, 0, 0,
	0, 757, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 655, 749, 748, 724,
	733, 0, 0, 158, 725, 0, 732, 726, 730, 729,
	727, 728, 0, 692, 0, 0, 0, 0, 0, 0,
	652, 711, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 709, 0, 0, 0,
	0, 744, 0, 710, 0, 0, 745, 0, 734, 0,
	0, 150, 265, 280, 159, 256, 293, 164, 263, 155,
	230, 252, 0, 0, 152, 278, 262, 212, 195, 196,
	151, 0, 247, 174, 187, 171, 228, 731, 695, 699,
	170, 697, 742, 288, 154, 0, 287, 227, 274, 279,
	213, 207, 153, 276, 211, 206, 199, 178, 768, 191,
	239, 205, 240, 192, 217, 216, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 740, 0, 0, 290, 0, 0,
	756, 0, 0, 0, 264, 0, 0, 200, 0, 0,
	0, 700, 0, 250, 233, 766, 653, 0, 248, 203,
	275, 241, 281, 266, 289, 244, 242, 146, 267, 173,
	214, 156, 157, 169, 175, 177, 179, 180, 223, 224,
	236, 255, 268, 269, 270, 172, 165, 249, 166, 189,
	167, 147, 257, 168, 148, 237, 273, 0, 185, 245,
	210, 149, 209, 238, 272, 271, 297, 303, 304, 308,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 183, 144, 285,
	754, 229, 765, 750, 751, 752, 755, 758, 759, 694,
	698, 760, 762, 764, 767, 253, 0, 0, 0, 0,
	0, 194, 235, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 283, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 701, 219, 220, 221, 222, 693, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 182, 188, 0, 190, 162, 234, 184, 292,
	197, 0, 226, 193, 258, 198, 204, 246, 291, 232,
	251, 160, 282, 259, 208, 774, 753, 773, 775, 776,
	772, 777, 778, 761, 716, 0, 770, 769, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 202, 72, 243, 181, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 123, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 747, 743, 0, 298, 299, 300, 284,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 714, 0, 0,
	0, 176, 917, 0, 201, 0, 0, 0, 260, 215,
	0, 0, 0, 0, 757, 763, 0, 0, 0, 0,
	0, 0, 0, 913, 0, 0, 707, 0, 0, 655,
	749, 748, 724, 733, 0, 0, 158, 725, 0, 732,
	726, 730, 729, 727, 728, 0, 692, 0, 0, 0,
	0, 0, 0, 652, 711, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 708, 709,
	0, 0, 0, 0, 744, 0, 710, 0, 0, 914,
	0, 734, 0, 0, 150, 265, 280, 159, 256, 293,
	164, 263, 155, 230, 252, 0, 0, 152, 278, 262,
	212, 195, 196, 151, 0, 247, 174, 187, 171, 228,
	731, 695, 699, 170, 697, 742, 288, 154, 0, 287,
	227, 274, 279, 213, 207, 153, 276, 211, 206, 199,
	178, 768, 191, 239, 205, 240, 192, 217, 216, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 740, 0, 0,
	290, 0, 0, 756, 0, 0, 0, 264, 0, 0,
	200, 0, 0, 0, 700, 0, 250, 233, 766, 653,
	0, 248, 203, 275, 241, 281, 266, 289, 244, 242,
	146, 267, 173, 214, 156, 157, 169, 175, 177, 179,
	180, 223, 224, 236, 255, 268, 269, 270, 172, 165,
	249, 166, 189, 167, 147, 257, 168, 148, 237, 273,
	0, 185, 245, 210, 149, 209, 238, 272, 271, 297,
	303, 304, 308, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	183, 144, 285, 754, 229, 765, 750, 751, 752, 755,
	758, 759, 694, 698, 760, 762, 764, 767, 253, 0,
	0, 0, 0, 0, 194, 235, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 283, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 701, 219, 220, 221, 222,
	693, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 182, 188, 0, 190, 162,
	234, 184, 292, 197, 0, 226, 193, 258, 198, 204,
	246, 291, 232, 251, 160, 282, 259, 208, 774, 753,
	773, 775, 776, 772, 777, 778, 761, 716, 0, 770,
	769, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 202, 0, 243, 181,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 123, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 747, 743, 0, 298,
	299, 300, 284, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 176, 2359, 0, 201, 0, 0,
	0, 260, 215, 0, 0, 0, 0, 757, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 0, 655, 749, 748, 724, 733, 0, 0, 158,
	725, 0, 732, 726, 730, 729, 727, 728, 0, 692,
	0, 0, 0, 0, 0, 0, 652, 711, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 709, 0, 0, 0, 0, 744, 0, 710,
	0, 0, 745, 0, 734, 0, 0, 150, 265, 280,
	159, 256, 293, 164, 263, 155, 230, 252, 0, 0,
	152, 278, 262, 212, 195, 196, 151, 0, 247, 174,
	187, 171, 228, 731, 695, 699, 170, 697, 742, 288,
	154, 0, 287, 227, 274, 279, 213, 207, 153, 276,
	211, 206, 199, 178, 768, 191, 239, 205, 240, 192,
	217, 216, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 290, 0, 0, 756, 0, 0, 0,
	264, 0, 0, 200, 0, 0, 0, 700, 0, 250,
	233, 766, 653, 0, 248, 203, 275, 241, 281, 266,
	289, 244, 242, 146, 267, 173, 214, 156, 157, 169,
	175, 177, 179, 180, 223, 224, 236, 255, 268, 269,
	270, 172, 165, 249, 166, 189, 167, 147, 257, 168,
	148, 237, 273, 0, 185, 245, 210, 149, 209, 238,
	272, 271, 297, 303, 304, 308, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 183, 144, 285, 754, 229, 765, 750,
	751, 752, 755, 758, 759, 694, 698, 760, 762, 764,
	767, 253, 0, 0, 0, 0, 0, 194, 235, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 283, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 701, 219,
	220, 221, 222, 693, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 182, 188,
	0, 190, 162, 234, 184, 292, 197, 0, 226, 193,
	258, 198, 204, 246, 291, 232, 251, 160, 282, 259,
	208, 774, 753, 773, 775, 776, 772, 777, 778, 761,
	716, 0, 770, 769, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 202,
	0, 243, 181, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 123, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 747,
	743, 0, 298, 299, 300, 284, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 714, 0, 0, 0, 176, 917, 0,
	201, 0, 0, 0, 260, 215, 0, 0, 0, 0,
	757, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 655, 749, 748, 724, 733,
	0, 0, 158, 725, 0, 732, 726, 730, 729, 727,
	728, 0, 692, 0, 0, 0, 0, 0, 0, 652,
	711, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 708, 709, 0, 0, 0, 0,
	744, 0, 710, 0, 0, 745, 0, 734, 0, 0,
	150, 265, 280, 159, 256, 293, 164, 263, 155, 230,
	252, 0, 0, 152, 278, 262, 212, 195, 196, 151,
	0, 247, 174, 187, 171, 228, 731, 695, 699, 170,
	697, 742, 288, 154, 0, 287, 227, 274, 279, 213,
	207, 153, 276, 211, 206, 199, 178, 768, 191, 239,
	205, 240, 192, 217, 216, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 740, 0, 0, 290, 0, 0, 756,
	0, 0, 0, 264, 0, 0, 200, 0, 0, 0,
	700, 0, 250, 233, 766, 653, 0, 248, 203, 275,
	241, 281, 266, 289, 244, 242, 146, 267, 173, 214,
	156, 157, 169, 175, 177, 179, 180, 223, 224, 236,
	255, 268, 269, 270, 172, 165, 249, 166, 189, 167,
	147, 257, 168, 148, 237, 273, 0, 185, 245, 210,
	149, 209, 238, 272, 271, 297, 303, 304, 308, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 183, 144, 285, 754,
	229, 765, 750, 751, 752, 755, 758, 759, 694, 698,
	760, 762, 764, 767, 253, 0, 0, 0, 0, 0,
	194, 235, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 283, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 701, 219, 220, 221, 222, 693, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 182, 188, 0, 190, 162, 234, 184, 292, 197,
	0, 226, 193, 258, 198, 204, 246, 291, 232, 251,
	160, 282, 259, 208, 774, 753, 773, 775, 776, 772,
	777, 778, 761, 716, 0, 770, 769, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 202, 0, 243, 181, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 123, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 747, 0, 0, 298, 299, 300, 284, 743,
	0, 0, 1587, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 176, 0, 0, 201,
	0, 0, 0, 260, 215, 0, 0, 0, 0, 757,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 655, 749, 748, 724, 733, 0,
	0, 158, 725, 0, 732, 726, 730, 729, 727, 728,
	0, 692, 0, 0, 0, 0, 0, 0, 652, 711,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 709, 0, 0, 0, 0, 744,
	0, 710, 0, 0, 745, 0, 734, 0, 0, 150,
	265, 280, 159, 256, 293, 164, 263, 155, 230, 252,
	0, 0, 152, 278, 262, 212, 195, 196, 151, 0,
	247, 174, 187, 171, 228, 731, 695, 699, 170, 697,
	742, 288, 154, 0, 287, 227, 274, 279, 213, 207,
	153, 276, 211, 206, 199, 178, 768, 191, 239, 205,
	240, 192, 217, 216, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 290, 0, 0, 756, 0,
	0, 0, 264, 0, 0, 200, 0, 0, 0, 700,
	0, 250, 233, 766, 653, 0, 248, 203, 275, 241,
	281, 266, 289, 244, 242, 146, 267, 173, 214, 156,
	157, 169, 175, 177, 179, 180, 223, 224, 236, 255,
	268, 269, 270, 172, 165, 249, 166, 189, 167, 147,
	257, 168, 148, 237, 273, 0, 185, 245, 210, 149,
	209, 238, 272, 271, 297, 303, 304, 308, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 183, 144, 285, 754, 229,
	765, 750, 751, 752, 755, 758, 759, 694, 698, 760,
	762, 764, 767, 253, 0, 0, 0, 0, 0, 194,
	235, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 283, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	701, 219, 220, 221, 222, 693, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	182, 188, 0, 190, 162, 234, 184, 292, 197, 0,
	226, 193, 258, 198, 204, 246, 291, 232, 251, 160,
	282, 259, 208, 774, 753, 773, 775, 776, 772, 777,
	778, 761, 716, 0, 770, 769, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 202, 0, 243, 181, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	123, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 747, 743, 0, 298, 299, 300, 284, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 714, 0, 0, 0, 176,
	0, 0, 201, 0, 0, 0, 260, 215, 0, 0,
	0, 0, 757, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 655, 749, 748,
	724, 733, 0, 0, 158, 725, 0, 732, 726, 730,
	729, 727, 728, 0, 692, 0, 0, 0, 0, 0,
	0, 652, 711, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 708, 709, 649, 0,
	0, 0, 744, 0, 710, 0, 0, 745, 0, 734,
	0, 0, 150, 265, 280, 159, 256, 293, 164, 263,
	155, 230, 252, 0, 0, 152, 278, 262, 212, 195,
	196, 151, 0, 247, 174, 187, 171, 228, 731, 695,
	699, 170, 697, 742, 288, 154, 0, 287, 227, 274,
	279, 213, 207, 153, 276, 211, 206, 199, 178, 768,
	191, 239, 205, 240, 192, 217, 216, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 740, 0, 0, 290, 0,
	0, 756, 0, 0, 0, 264, 0, 0, 200, 0,
	0, 0, 700, 0, 250, 233, 766, 653, 0, 248,
	203, 275, 241, 281, 266, 289, 244, 242, 146, 267,
	173, 214, 156, 157, 169, 175, 177, 179, 180, 223,
	224, 236, 255, 268, 269, 270, 172, 165, 249, 166,
	189, 167, 147, 257, 168, 148, 237, 273, 0, 185,
	245, 210, 149, 209, 238, 272, 271, 297, 303, 304,
	308, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 183, 144,
	285, 754, 229, 765, 750, 751, 752, 755, 758, 759,
	694, 698, 760, 762, 764, 767, 253, 0, 0, 0,
	0, 0, 194, 235, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 283,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 701, 219, 220, 221, 222, 693, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 182, 188, 0, 190, 162, 234, 184,
	292, 197, 0, 226, 193, 258, 198, 204, 246, 291,
	232, 251, 160, 282, 259, 208, 774, 753, 773, 775,
	776, 772, 777, 778, 761, 716, 0, 770, 769, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 202, 0, 243, 181, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 123, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 747, 743, 0, 298, 299, 300,
	284, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 714, 0,
	0, 0, 176, 0, 0, 201, 0, 0, 0, 260,
	215, 0, 0, 0, 0, 757, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	655, 749, 748, 724, 733, 0, 0, 158, 725, 0,
	732, 726, 730, 729, 727, 728, 0, 692, 0, 0,
	0, 0, 0, 0, 652, 711, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 708,
	709, 0, 0, 0, 0, 744, 0, 710, 0, 0,
	745, 0, 734, 0, 0, 150, 265, 280, 159, 256,
	293, 164, 263, 155, 230, 252, 0, 0, 152, 278,
	262, 212, 195, 196, 151, 0, 247, 174, 187, 171,
	228, 731, 695, 699, 170, 697, 742, 288, 154, 0,
	287, 227, 274, 279, 213, 207, 153, 276, 211, 206,
	199, 178, 768, 191, 239, 205, 240, 192, 217, 216,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 740, 0,
	0, 290, 0, 0, 756, 0, 0, 0, 264, 0,
	0, 200, 0, 0, 0, 700, 0, 250, 233, 766,
	653, 0, 248, 203, 275, 241, 281, 266, 289, 244,
	242, 146, 267, 173, 214, 156, 157, 169, 175, 177,
	179, 180, 223, 224, 236, 255, 268, 269, 270, 172,
	165, 249, 166, 189, 167, 147, 257, 168, 148, 237,
	273, 0, 185, 245, 210, 149, 209, 238, 272, 271,
	297, 303, 304, 308, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 183, 144, 285, 754, 229, 765, 750, 751, 752,
	755, 758, 759, 694, 698, 760, 762, 764, 767, 253,
	0, 0, 0, 0, 0, 194, 235, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 283, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 701, 219, 220, 221,
	222, 693, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 182, 188, 0, 190,
	162, 234, 184, 292, 197, 0, 226, 193, 258, 198,
	204, 246, 291, 232, 251, 160, 282, 259, 208, 774,
	753, 773, 775, 776, 772, 777, 778, 761, 716, 0,
	770, 769, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 202, 0, 243,
	181, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 123, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 747, 743, 0,
	298, 299, 300, 284, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 714, 0, 0, 0, 176, 0, 0, 201, 0,
	0, 0, 260, 215, 0, 0, 0, 0, 757, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 655, 749, 748, 724, 733, 0, 0,
	158, 725, 0, 732, 726, 730, 729, 727, 728, 0,
	692, 0, 0, 0, 0, 0, 0, 0, 711, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 708, 709, 0, 0, 0, 0, 744, 0,
	710, 0, 0, 745, 0, 734, 0, 0, 150, 265,
	280, 159, 256, 293, 164, 263, 155, 230, 252, 0,
	0, 152, 278, 262, 212, 195, 196, 151, 0, 247,
	174, 187, 171, 228, 731, 695, 699, 170, 697, 742,
	288, 154, 0, 287, 227, 274, 279, 213, 207, 153,
	276, 211, 206, 199, 178, 768, 191, 239, 205, 240,
	192, 217, 216, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 740, 0, 0, 290, 0, 0, 756, 0, 0,
	0, 264, 0, 0, 200, 0, 0, 0, 700, 0,
	250, 233, 766, 0, 0, 248, 203, 275, 241, 281,
	266, 289, 244, 242, 146, 267, 173, 214, 156, 157,
	169, 175, 177, 179, 180, 223, 224, 236, 255, 268,
	269, 270, 172, 165, 249, 166, 189, 167, 147, 257,
	168, 148, 237, 273, 0, 185, 245, 210, 149, 209,
	238, 272, 271, 297, 1349, 1350, 308, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 183, 144, 285, 754, 229, 765,
	750, 751, 752, 755, 758, 759, 694, 698, 760, 762,
	764, 767, 253, 0, 0, 0, 0, 0, 194, 235,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 283, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 696,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 701,
	219, 220, 221, 222, 693, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 182,
	188, 0, 190, 162, 234, 184, 292, 197, 0, 226,
	193, 258, 198, 204, 246, 291, 232, 251, 160, 282,
	259, 208, 774, 753, 773, 775, 776, 772, 777, 778,
	761, 716, 0, 770, 769, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	202, 0, 243, 181, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 123,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	747, 743, 0, 298, 299, 300, 284, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 176, 0,
	0, 201, 0, 0, 0, 260, 215, 0, 0, 0,
	0, 757, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 749, 748, 724,
	733, 0, 0, 158, 725, 0, 732, 726, 730, 729,
	727, 728, 0, 692, 0, 0, 0, 0, 0, 0,
	652, 711, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 709, 0, 0, 0,
	0, 744, 0, 710, 0, 0, 745, 0, 734, 0,
	0, 150, 265, 280, 159, 256, 293, 164, 263, 155,
	230, 252, 0, 0, 152, 278, 262, 212, 195, 196,
	151, 0, 247, 174, 187, 171, 228, 731, 695, 699,
	170, 697, 742, 288, 154, 0, 287, 227, 274, 279,
	213, 207, 153, 276, 211, 206, 199, 178, 768, 191,
	239, 205, 240, 192, 217, 216, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 740, 0, 0, 290, 0, 0,
	756, 0, 0, 0, 264, 0, 0, 200, 0, 0,
	0, 700, 0, 250, 233, 766, 653, 0, 248, 203,
	275, 241, 281, 266, 289, 244, 242, 146, 267, 173,
	214, 156, 157, 169, 175, 177, 179, 180, 223, 224,
	236, 255, 268, 269, 270, 172, 165, 249, 166, 189,
	167, 147, 257, 168, 148, 237, 273, 0, 185, 245,
	210, 149, 209, 238, 272, 271, 297, 303, 304, 308,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 183, 144, 285,
	754, 229, 765, 750, 751, 752, 755, 758, 759, 694,
	698, 760, 762, 764, 767, 253, 0, 0, 0, 0,
	0, 194, 235, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 283, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 701, 219, 220, 221, 222, 693, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 182, 188, 0, 190, 162, 234, 184, 292,
	197, 0, 226, 193, 258, 198, 204, 246, 291, 232,
	251, 160, 282, 259, 208, 774, 753, 773, 775, 776,
	772, 777, 778, 761, 716, 0, 770, 769, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 202, 0, 243, 181, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 123, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 747, 743, 0, 298, 299, 300, 284,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 714, 0, 0,
	0, 176, 0, 0, 201, 0, 0, 0, 260, 215,
	0, 0, 0, 0, 757, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 707, 0, 0, 655,
	749, 748, 724, 733, 0, 0, 158, 725, 0, 732,
	726, 730, 729, 727, 728, 0, 692, 0, 0, 0,
	0, 0, 0, 0, 711, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 708, 709,
	0, 0, 0, 0, 744, 0, 710, 0, 0, 745,
	0, 734, 0, 0, 150, 265, 280, 159, 256, 293,
	164, 263, 155, 230, 252, 0, 0, 152, 278, 262,
	212, 195, 196, 151, 0, 247, 174, 187, 171, 228,
	731, 695, 699, 170, 697, 742, 288, 154, 0, 287,
	227, 274, 279, 213, 207, 153, 276, 211, 206, 199,
	178, 768, 191, 239, 205, 240, 192, 217, 216, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 740, 0, 0,
	290, 0, 0, 756, 0, 0, 0, 264, 0, 0,
	200, 0, 0, 0, 700, 0, 250, 233, 766, 0,
	0, 248, 203, 275, 241, 281, 266, 289, 244, 242,
	146, 267, 173, 214, 156, 157, 169, 175, 177, 179,
	180, 223, 224, 236, 255, 268, 269, 270, 172, 165,
	249, 166, 189, 167, 147, 257, 168, 148, 237, 273,
	0, 185, 245, 210, 149, 209, 238, 272, 271, 297,
	303, 304, 308, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	183, 144, 285, 754, 229, 765, 750, 751, 752, 755,
	758, 759, 694, 698, 760, 762, 764, 767, 253, 0,
	0, 0, 0, 0, 194, 235, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 283, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 701, 219, 220, 221, 222,
	693, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 182, 188, 0, 190, 162,
	234, 184, 292, 197, 0, 226, 193, 258, 198, 204,
	246, 291, 232, 251, 160, 282, 259, 208, 774, 753,
	773, 775, 776, 772, 777, 778, 761, 716, 0, 770,
	769, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 202, 0, 243, 181,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 123, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 747, 0, 0, 298,
	299, 300, 284, 99, 0, 28, 89, 71, 0, 0,
	0, 0, 0, 0, 0, 231, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 201, 0, 0, 0, 260,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	105, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 265, 280, 159, 256,
	293, 164, 263, 155, 230, 252, 0, 0, 152, 278,
	262, 212, 195, 196, 151, 0, 247, 174, 187, 171,
	228, 0, 277, 305, 170, 296, 0, 288, 154, 0,
	287, 227, 274, 279, 213, 207, 153, 276, 211, 206,
	199, 178, 0, 191, 239, 205, 240, 192, 217, 216,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 200, 0, 0, 0, 306, 0, 250, 233, 0,
	0, 0, 248, 203, 275, 241, 281, 266, 289, 244,
	242, 146, 267, 173, 214, 156, 157, 169, 175, 177,
	179, 180, 223, 224, 236, 255, 268, 269, 270, 172,
	165, 249, 166, 189, 167, 147, 257, 168, 148, 237,
	273, 0, 185, 245, 210, 149, 209, 238, 272, 271,
	297, 303, 304, 308, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 183, 144, 285, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 225, 301, 0, 0, 0, 0, 253,
	942, 943, 944, 941, 0, 194, 235, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 283, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 310, 219, 220, 221,
	222, 318, 320, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 182, 188, 0, 190,
	162, 234, 184, 292, 197, 1387, 226, 193, 258, 198,
	204, 246, 291, 232, 251, 160, 282, 259, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 202, 72, 243,
	181, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 231, 0, 0,
	298, 299, 300, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 201, 0, 0,
	0, 260, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 1383, 0, 1380, 0, 0, 158,
	1382, 1379, 1381, 1385, 1386, 0, 0, 0, 1384, 161,
	1670, 1673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 265, 280,
	159, 256, 293, 164, 263, 155, 230, 252, 0, 0,
	152, 278, 262, 212, 195, 196, 151, 0, 247, 174,
	187, 171, 228, 0, 277, 305, 170, 296, 0, 288,
	154, 0, 287, 227, 274, 279, 213, 207, 153, 276,
	211, 206, 199, 178, 0, 191, 239, 205, 240, 192,
	217, 216, 218, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1390, 1391, 1392, 1393, 1394, 1395,
	1388, 1389, 1674, 290, 0, 0, 0, 1667, 0, 1666,
	264, 1668, 1671, 200, 0, 0, 0, 306, 0, 250,
	233, 0, 0, 0, 248, 203, 275, 241, 281, 266,
	289, 244, 242, 146, 267, 173, 214, 156, 157, 169,
	175, 177, 179, 180, 223, 224, 236, 255, 268, 269,
	270, 172, 165, 249, 166, 189, 167, 147, 257, 168,
	148, 237, 273, 1672, 185, 245, 210, 149, 209, 238,
	272, 271, 297, 303, 304, 308, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 183, 144, 285, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 225, 301, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 194, 235, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 283, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 310, 219,
	220, 221, 222, 186, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 182, 188,
	0, 190, 162, 234, 184, 292, 197, 1387, 226, 193,
	258, 198, 204, 246, 291, 232, 251, 160, 282, 259,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 202,
	0, 243, 181, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 231,
	0, 0, 298, 299, 300, 284, 0, 0, 0, 0,
	0, 946, 0, 0, 0, 0, 176, 0, 0, 201,
	0, 0, 0, 260, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 1383, 947, 1380, 0,
	0, 158, 1382, 1379, 1381, 1385, 1386, 0, 0, 0,
	1384, 161, 0, 0, 942, 943, 944, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	265, 280, 159, 256, 293, 164, 263, 155, 230, 252,
	0, 0, 152, 278, 262, 212, 195, 196, 151, 0,
	247, 174, 187, 171, 228, 0, 277, 305, 170, 296,
	0, 288, 154, 0, 287, 227, 274, 279, 213, 207,
	153, 276, 211, 206, 199, 178, 0, 191, 239, 205,
	240, 192, 217, 216, 218, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1390, 1391, 1392, 1393,
	1394, 1395, 1388, 1389, 0, 290, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 200, 0, 0, 0, 306,
	0, 250, 233, 0, 0, 0, 248, 203, 275, 241,
	281, 266, 289, 244, 242, 146, 267, 173, 214, 156,
	157, 169, 175, 177, 179, 180, 223, 224, 236, 255,
	268, 269, 270, 172, 165, 249, 166, 189, 167, 147,
	257, 168, 148, 237, 273, 0, 185, 245, 210, 149,
	209, 238, 272, 271, 297, 303, 304, 308, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 183, 144, 285, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 225, 301, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 194,
	235, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 283, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	310, 219, 220, 221, 222, 186, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	182, 188, 0, 190, 162, 234, 184, 292, 197, 0,
	226, 193, 258, 198, 204, 246, 291, 232, 251, 160,
	282, 259, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 202, 0, 243, 181, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 231, 0, 0, 298, 299, 300, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 437,
	0, 201, 0, 0, 0, 260, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 445, 446, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 265, 280, 159, 256, 293, 164, 263, 155,
	230, 252, 0, 0, 152, 278, 262, 212, 195, 196,
	151, 0, 247, 174, 187, 171, 228, 0, 277, 305,
	170, 296, 418, 288, 154, 417, 287, 227, 274, 279,
	213, 207, 153, 276, 211, 206, 199, 178, 0, 191,
	239, 205, 240, 192, 217, 216, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 200, 0, 0,
	0, 306, 0, 250, 233, 0, 0, 0, 248, 203,
	275, 241, 281, 266, 289, 436, 242, 146, 267, 173,
	214, 156, 157, 169, 175, 177, 179, 180, 223, 224,
	236, 255, 268, 269, 270, 172, 165, 249, 166, 189,
	167, 147, 257, 168, 148, 237, 273, 0, 185, 245,
	210, 149, 209, 238, 272, 271, 297, 303, 304, 308,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 183, 144, 285,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 225,
	301, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 194, 235, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 283, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 439, 219, 220, 221, 222, 186, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 182, 188, 0, 190, 162, 234, 184, 292,
	197, 0, 447, 442, 443, 198, 204, 246, 291, 232,
	251, 160, 282, 259, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 202, 0, 243, 181, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 99, 0, 0, 298, 299, 300, 284,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 201, 0, 0, 0, 260,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 1034, 0,
	105, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 265, 280, 159, 256,
	293, 164, 263, 155, 230, 252, 0, 0, 152, 278,
	262, 212, 195, 196, 151, 0, 247, 174, 187, 171,
	228, 0, 277, 305, 170, 296, 0, 288, 154, 0,
	287, 227, 274, 279, 213, 207, 153, 276, 211, 206,
	199, 178, 0, 191, 239, 205, 240, 192, 217, 216,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 200, 0, 0, 0, 306, 0, 250, 233, 0,
	0, 0, 248, 203, 275, 241, 281, 266, 289, 244,
	242, 146, 267, 173, 214, 156, 157, 169, 175, 177,
	179, 180, 223, 224, 236, 255, 268, 269, 270, 172,
	165, 249, 166, 189, 167, 147, 257, 168, 148, 237,
	273, 0, 185, 245, 210, 149, 209, 238, 272, 271,
	297, 303, 304, 308, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 183, 144, 285, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 225, 301, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 194, 235, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 283, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 310, 219, 220, 221,
	222, 186, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 182, 188, 0, 190,
	162, 234, 184, 292, 197, 0, 226, 193, 258, 198,
	204, 246, 291, 232, 251, 160, 282, 259, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 202, 72, 243,
	181, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 231, 0, 0,
	298, 299, 300, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 201, 0, 0,
	0, 260, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 445, 446, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 265, 280,
	159, 256, 293, 164, 263, 155, 230, 252, 0, 0,
	152, 278, 262, 212, 195, 196, 151, 0, 247, 174,
	187, 171, 228, 0, 277, 305, 170, 296, 418, 288,
	154, 417, 287, 227, 274, 279, 213, 207, 153, 276,
	211, 206, 199, 178, 0, 191, 239, 205, 240, 192,
	217, 216, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 200, 0, 0, 0, 306, 0, 250,
	233, 0, 0, 0, 248, 203, 275, 241, 281, 266,
	289, 244, 242, 146, 267, 173, 214, 156, 157, 169,
	175, 177, 179, 180, 223, 224, 236, 255, 268, 269,
	270, 172, 165, 249, 166, 189, 167, 147, 257, 168,
	148, 237, 273, 0, 185, 245, 210, 149, 209, 238,
	272, 271, 297, 303, 304, 308, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 183, 144, 285, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 225, 301, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 194, 235, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 283, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 310, 219,
	220, 221, 222, 186, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 182, 188,
	0, 190, 162, 234, 184, 292, 197, 0, 447, 442,
	443, 198, 204, 246, 291, 232, 251, 160, 282, 259,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 202,
	0, 243, 181, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 231,
	0, 0, 298, 299, 300, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 631, 0, 201,
	0, 0, 0, 260, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 629, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 150,
	265, 280, 159, 256, 293, 164, 263, 155, 230, 252,
	0, 0, 152, 278, 262, 212, 195, 196, 151, 0,
	247, 174, 187, 171, 228, 0, 277, 305, 170, 296,
	0, 288, 154, 0, 287, 227, 274, 279, 213, 207,
	153, 276, 211, 206, 199, 178, 0, 191, 239, 205,
	240, 192, 217, 216, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 200, 0, 0, 0, 306,
	0, 250, 233, 0, 0, 0, 248, 203, 275, 241,
	281, 266, 289, 244, 242, 146, 267, 173, 214, 156,
	157, 169, 175, 177, 179, 180, 223, 224, 236, 255,
	268, 269, 270, 172, 165, 249, 166, 189, 167, 147,
	257, 168, 148, 237, 273, 0, 185, 245, 210, 149,
	209, 238, 272, 271, 297, 303, 304, 308, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 183, 144, 285, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 225, 301, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 194,
	235, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 283, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	310, 219, 220, 221, 222, 186, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	182, 188, 0, 190, 162, 234, 184, 292, 197, 0,
	226, 193, 258, 198, 204, 246, 291, 232, 251, 160,
	282, 259, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 202, 0, 243, 181, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 231, 0, 0, 298, 299, 300, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 625,
	0, 201, 0, 0, 0, 260, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 629,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 150, 265, 280, 159, 256, 293, 164, 263, 155,
	230, 252, 0, 0, 152, 278, 262, 212, 195, 196,
	151, 0, 247, 174, 187, 171, 228, 0, 277, 305,
	170, 296, 0, 288, 154, 0, 287, 227, 274, 279,
	213, 207, 153, 276, 211, 206, 199, 178, 0, 191,
	239, 205, 240, 192, 217, 216, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 200, 0, 0,
	0, 306, 0, 250, 233, 0, 0, 0, 248, 203,
	275, 241, 281, 266, 289, 244, 242, 146, 267, 173,
	214, 156, 157, 169, 175, 177, 179, 180, 223, 224,
	236, 255, 268, 269, 270, 172, 165, 249, 166, 189,
	167, 147, 257, 168, 148, 237, 273, 0, 185, 245,
	210, 149, 209, 238, 272, 271, 297, 303, 304, 308,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 183, 144, 285,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 225,
	301, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 194, 235, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 283, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 310, 219, 220, 221, 222, 186, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 182, 188, 0, 190, 162, 234, 184, 292,
	197, 0, 226, 193, 258, 198, 204, 246, 291, 232,
	251, 160, 282, 259, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 202, 0, 243, 181, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 231, 0, 0, 298, 299, 300, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 201, 0, 0, 0, 260, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2268, 0, 105, 749,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 265, 280, 159, 256, 293, 164,
	263, 155, 230, 252, 0, 0, 152, 278, 262, 212,
	195, 196, 151, 0, 247, 174, 187, 171, 228, 0,
	277, 305, 170, 296, 0, 288, 154, 0, 287, 227,
	274, 279, 213, 207, 153, 276, 211, 206, 199, 178,
	0, 191, 239, 205, 240, 192, 217, 216, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 200,
	0, 0, 0, 306, 0, 250, 233, 0, 0, 0,
	248, 203, 275, 241, 281, 266, 289, 244, 242, 146,
	267, 173, 214, 156, 157, 169, 175, 177, 179, 180,
	223, 224, 236, 255, 268, 269, 270, 172, 165, 249,
	166, 189, 167, 147, 257, 168, 148, 237, 273, 0,
	185, 245, 210, 149, 209, 238, 272, 271, 297, 303,
	304, 308, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 183,
	144, 285, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 225, 301, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 194, 235, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	283, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 310, 219, 220, 221, 222, 186,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 182, 188, 0, 190, 162, 234,
	184, 292, 197, 0, 226, 193, 258, 198, 204, 246,
	291, 232, 251, 160, 282, 259, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 202, 0, 243, 181, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 231, 0, 0, 298, 299,
	300, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 201, 0, 0, 0, 260,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 629, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 150, 265, 280, 159, 256,
	293, 164, 263, 155, 230, 252, 0, 0, 152, 278,
	262, 212, 195, 196, 151, 0, 247, 174, 187, 171,
	228, 0, 277, 305, 170, 296, 0, 288, 154, 0,
	287, 227, 274, 279, 213, 207, 153, 276, 211, 206,
	199, 178, 0, 191, 239, 205, 240, 192, 217, 216,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 200, 0, 0, 0, 306, 0, 250, 233, 0,
	0, 0, 248, 203, 275, 241, 281, 266, 289, 244,
	242, 146, 267, 173, 214, 156, 157, 169, 175, 177,
	179, 180, 223, 224, 236, 255, 268, 269, 270, 172,
	165, 249, 166, 189, 167, 147, 257, 168, 148, 237,
	273, 0, 185, 245, 210, 149, 209, 238, 272, 271,
	297, 303, 304, 308, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 183, 144, 285, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 225, 301, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 194, 235, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 283, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 310, 219, 220, 221,
	222, 186, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 182, 188, 0, 190,
	162, 234, 184, 292, 197, 0, 226, 193, 258, 198,
	204, 246, 291, 232, 251, 160, 282, 259, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 202, 0, 243,
	181, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 231, 0, 0,
	298, 299, 300, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 201, 0, 0,
	0, 260, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 629, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 150, 265, 280,
	159, 256, 293, 164, 263, 155, 230, 252, 0, 0,
	152, 278, 262, 212, 195, 196, 151, 0, 247, 174,
	187, 171, 228, 0, 277, 305, 170, 296, 0, 288,
	154, 0, 287, 227, 274, 279, 213, 207, 153, 276,
	211, 206, 199, 178, 0, 191, 239, 205, 240, 192,
	217, 216, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 200, 0, 0, 0, 306, 0, 250,
	233, 0, 0, 0, 248, 203, 275, 241, 281, 266,
	289, 244, 242, 146, 267, 173, 214, 156, 157, 169,
	175, 177, 179, 180, 223, 224, 236, 255, 268, 269,
	270, 172, 165, 249, 166, 189, 167, 147, 257, 168,
	148, 237, 273, 0, 185, 245, 210, 149, 209, 238,
	272, 271, 297, 303, 304, 308, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 183, 144, 285, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 225, 301, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 194, 235, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 283, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 310, 219,
	220, 221, 222, 186, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 182, 188,
	0, 190, 162, 234, 184, 292, 197, 0, 226, 193,
	258, 198, 204, 246, 291, 232, 251, 160, 282, 259,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 202,
	0, 243, 181, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 231,
	0, 0, 298, 299, 300, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 1325, 0, 201,
	0, 0, 0, 260, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 629, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	265, 280, 159, 256, 293, 164, 263, 155, 230, 252,
	0, 0, 152, 278, 262, 212, 195, 196, 151, 0,
	247, 174, 187, 171, 228, 0, 277, 305, 170, 296,
	0, 288, 154, 0, 287, 227, 274, 279, 213, 207,
	153, 276, 211, 206, 199, 178, 0, 191, 239, 205,
	240, 192, 217, 216, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 200, 0, 0, 0, 306,
	0, 250, 233, 0, 0, 0, 248, 203, 275, 241,
	281, 266, 289, 244, 242, 146, 267, 173, 214, 156,
	157, 169, 175, 177, 179, 180, 223, 224, 236, 255,
	268, 269, 270, 172, 165, 249, 166, 189, 167, 147,
	257, 168, 148, 237, 273, 0, 185, 245, 210, 149,
	209, 238, 272, 271, 297, 303, 304, 308, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 183, 144, 285, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 225, 301, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 194,
	235, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 283, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	310, 219, 220, 221, 222, 186, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	182, 188, 0, 190, 162, 234, 184, 292, 197, 0,
	226, 193, 258, 198, 204, 246, 291, 232, 251, 160,
	282, 259, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 202, 0, 243, 181, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 231, 0, 0, 298, 299, 300, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 201, 0, 0, 0, 260, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 749, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 265, 280, 159, 256, 293, 164, 263, 155,
	230, 252, 0, 0, 152, 278, 262, 212, 195, 196,
	151, 0, 247, 174, 187, 171, 228, 0, 277, 305,
	170, 296, 0, 288, 154, 0, 287, 227, 274, 279,
	213, 207, 153, 276, 211, 206, 199, 178, 0, 191,
	239, 205, 240, 192, 217, 216, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 200, 0, 0,
	0, 306, 0, 250, 233, 0, 0, 0, 248, 203,
	275, 241, 281, 266, 289, 244, 242, 146, 267, 173,
	214, 156, 157, 169, 175, 177, 179, 180, 223, 224,
	236, 255, 268, 269, 270, 172, 165, 249, 166, 189,
	167, 147, 257, 168, 148, 237, 273, 0, 185, 245,
	210, 149, 209, 238, 272, 271, 297, 303, 304, 308,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 183, 144, 285,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 225,
	301, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 194, 235, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 283, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 310, 219, 220, 221, 222, 186, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 182, 188, 0, 190, 162, 234, 184, 292,
	197, 0, 226, 193, 258, 198, 204, 246, 291, 232,
	251, 160, 282, 259, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 202, 0, 243, 181, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 231, 0, 0, 298, 299, 300, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 201, 0, 0, 0, 260, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 0, 0, 105, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 265, 280, 159, 256, 293, 164,
	263, 155, 230, 252, 0, 0, 152, 278, 262, 212,
	195, 196, 151, 0, 247, 174, 187, 171, 228, 0,
	277, 305, 170, 296, 0, 288, 154, 0, 287, 227,
	274, 279, 213, 207, 153, 276, 211, 206, 199, 178,
	0, 191, 239, 205, 240, 192, 217, 216, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 200,
	0, 0, 0, 306, 0, 250, 233, 0, 0, 0,
	248, 203, 275, 241, 281, 266, 289, 244, 242, 146,
	267, 173, 214, 156, 157, 169, 175, 177, 179, 180,
	223, 224, 236, 255, 268, 269, 270, 172, 165, 249,
	166, 189, 167, 147, 257, 168, 148, 237, 273, 0,
	185, 245, 210, 149, 209, 238, 272, 271, 297, 303,
	304, 308, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 183,
	144, 285, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 225, 301, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 194, 235, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	283, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 310, 219, 220, 221, 222, 186,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 182, 188, 0, 190, 162, 234,
	184, 292, 197, 0, 226, 193, 258, 198, 204, 246,
	291, 232, 251, 160, 282, 259, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 202, 0, 243, 181, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 231, 0, 0, 298, 299,
	300, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 201, 0, 0, 0, 260,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 265, 280, 159, 256,
	293, 164, 263, 155, 230, 252, 0, 0, 152, 278,
	262, 212, 195, 196, 151, 0, 247, 174, 187, 171,
	228, 0, 277, 305, 170, 296, 0, 288, 154, 0,
	287, 227, 274, 279, 213, 207, 153, 276, 211, 206,
	199, 178, 0, 191, 239, 205, 240, 192, 217, 216,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 200, 0, 0, 0, 306, 0, 250, 233, 0,
	0, 0, 248, 203, 275, 241, 281, 266, 289, 244,
	242, 146, 267, 173, 214, 156, 157, 169, 175, 177,
	179, 180, 223, 224, 236, 255, 268, 269, 270, 172,
	165, 249, 166, 189, 167, 147, 257, 168, 148, 237,
	273, 0, 185, 245, 210, 149, 209, 238, 272, 271,
	297, 303, 304, 308, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 183, 144, 285, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 225, 301, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 194, 235, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 283, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 310, 219, 220, 221,
	222, 186, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 182, 188, 0, 190,
	162, 234, 184, 292, 197, 0, 226, 193, 258, 198,
	204, 246, 291, 232, 251, 160, 282, 259, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 202, 0, 243,
	181, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 231, 0, 0,
	298, 299, 300, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 201, 0, 0,
	0, 260, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 105, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 265, 280,
	159, 256, 293, 164, 263, 155, 230, 252, 0, 0,
	152, 278, 262, 212, 195, 196, 151, 0, 247, 174,
	187, 171, 228, 0, 277, 305, 170, 296, 0, 288,
	154, 0, 287, 227, 274, 279, 213, 207, 153, 276,
	211, 206, 199, 178, 0, 191, 239, 205, 240, 192,
	217, 216, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 200, 0, 0, 0, 306, 0, 250,
	233, 0, 0, 0, 248, 203, 275, 241, 281, 266,
	289, 244, 242, 146, 267, 173, 214, 156, 157, 169,
	175, 177, 179, 180, 223, 224, 236, 255, 268, 269,
	270, 172, 165, 249, 166, 189, 167, 147, 257, 168,
	148, 237, 273, 0, 185, 245, 210, 149, 209, 238,
	272, 271, 297, 303, 304, 308, 0, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 183, 144, 285, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 225, 301, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 194, 235, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 283, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 310, 219,
	220, 221, 222, 186, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 182, 188,
	0, 190, 162, 234, 184, 292, 197, 0, 226, 193,
	258, 198, 204, 246, 291, 232, 251, 160, 282, 259,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 202,
	0, 243, 181, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 231,
	0, 0, 298, 299, 300, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 201,
	0, 0, 0, 260, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	265, 280, 159, 256, 293, 164, 263, 155, 230, 252,
	0, 0, 152, 278, 262, 212, 195, 196, 151, 0,
	247, 174, 187, 171, 228, 0, 277, 305, 170, 296,
	0, 288, 154, 0, 287, 227, 274, 279, 213, 207,
	153, 276, 211, 206, 199, 178, 0, 191, 239, 205,
	240, 192, 217, 216, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 200, 0, 0, 0, 306,
	0, 250, 233, 0, 0, 0, 248, 203, 275, 241,
	281, 266, 289, 244, 242, 146, 267, 173, 214, 156,
	157, 169, 175, 177, 179, 180, 223, 224, 236, 255,
	268, 269, 270, 172, 165, 249, 166, 189, 167, 147,
	257, 168, 148, 237, 273, 0, 185, 245, 210, 149,
	209, 238, 272, 271, 297, 303, 304, 308, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 183, 144, 285, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 225, 301, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 194,
	235, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 283, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	310, 219, 220, 221, 222, 186, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	182, 188, 0, 190, 162, 234, 184, 292, 197, 0,
	226, 193, 258, 198, 204, 246, 291, 232, 251, 160,
	282, 259, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 202, 0, 243, 181, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 231, 0, 0, 298, 299, 300, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 201, 0, 0, 0, 260, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 629,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 265, 280, 159, 256, 293, 164, 263, 155,
	230, 252, 0, 0, 152, 278, 262, 212, 195, 196,
	151, 0, 247, 174, 187, 171, 228, 0, 277, 305,
	170, 296, 0, 288, 154, 0, 287, 227, 274, 279,
	213, 207, 153, 276, 211, 206, 199, 178, 0, 191,
	239, 205, 240, 192, 217, 216, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 200, 0, 0,
	0, 306, 0, 250, 233, 0, 0, 0, 248, 203,
	275, 241, 281, 266, 289, 244, 242, 146, 267, 173,
	214, 156, 157, 169, 175, 177, 179, 180, 223, 224,
	236, 255, 268, 269, 270, 172, 165, 249, 166, 189,
	167, 147, 257, 168, 148, 237, 273, 0, 185, 245,
	210, 149, 209, 238, 272, 271, 297, 303, 304, 308,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 183, 144, 285,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 225,
	301, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 194, 235, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 283, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 310, 219, 220, 221, 222, 186, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 182, 188, 0, 190, 162, 234, 184, 292,
	197, 0, 226, 193, 258, 198, 204, 246, 291, 232,
	251, 160, 282, 259, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 202, 0, 243, 181, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 231, 0, 0, 298, 299, 300, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 201, 0, 0, 0, 260, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 265, 280, 159, 256, 293, 164,
	263, 155, 230, 252, 0, 0, 152, 278, 262, 212,
	195, 196, 151, 0, 247, 174, 187, 171, 228, 0,
	277, 305, 170, 296, 0, 288, 154, 0, 287, 227,
	274, 279, 213, 207, 153, 276, 211, 206, 199, 178,
	0, 191, 239, 205, 240, 192, 217, 216, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 200,
	0, 0, 0, 306, 0, 250, 233, 0, 0, 0,
	248, 203, 275, 241, 281, 266, 289, 244, 242, 146,
	267, 173, 214, 156, 157, 169, 175, 177, 179, 180,
	223, 224, 236, 255, 268, 269, 270, 172, 165, 249,
	166, 189, 167, 147, 257, 168, 148, 237, 273, 0,
	185, 245, 210, 149, 209, 238, 272, 271, 297, 303,
	304, 308, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 183,
	144, 285, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 225, 301, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 194, 235, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	283, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 310, 219, 220, 221, 222, 186,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 182, 188, 0, 190, 162, 234,
	184, 292, 197, 0, 226, 193, 258, 198, 204, 246,
	291, 232, 251, 160, 282, 259, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 202, 0, 243, 181, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 231, 0, 0, 298, 299,
	300, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 201, 0, 0, 0, 260,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 1338, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 265, 280, 159, 256,
	293, 164, 263, 155, 230, 252, 0, 0, 152, 278,
	262, 212, 195, 196, 151, 0, 247, 174, 187, 171,
	228, 0, 277, 305, 170, 296, 0, 288, 154, 0,
	287, 227, 274, 279, 213, 207, 153, 276, 211, 206,
	199, 178, 0, 191, 239, 205, 240, 192, 217, 216,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 200, 0, 0, 0, 306, 0, 250, 233, 0,
	0, 0, 248, 203, 275, 241, 281, 266, 289, 244,
	242, 146, 267, 173, 214, 156, 157, 169, 175, 177,
	179, 180, 223, 224, 236, 255, 268, 269, 270, 172,
	165, 249, 166, 189, 167, 147, 257, 168, 148, 237,
	273, 0, 185, 245, 210, 149, 209, 238, 272, 271,
	297, 303, 304, 308, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 183, 144, 285, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 225, 301, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 194, 235, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 283, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 310, 219, 220, 221,
	222, 186, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 182, 188, 0, 190,
	162, 234, 184, 292, 197, 0, 226, 193, 258, 198,
	204, 246, 291, 232, 251, 160, 282, 259, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 202, 0, 243,
	181, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 1267, 0, 0,
	298, 299, 300, 284, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 201, 0, 0, 0, 260, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 265, 280, 159, 256, 293,
	164, 263, 155, 230, 252, 0, 0, 152, 278, 262,
	212, 195, 196, 151, 0, 247, 174, 187, 171, 228,
	0, 277, 305, 170, 296, 0, 288, 154, 0, 287,
	227, 274, 279, 213, 207, 153, 276, 211, 206, 199,
	178, 0, 191, 239, 205, 240, 192, 217, 216, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	200, 0, 0, 0, 306, 0, 250, 233, 0, 0,
	0, 248, 203, 275, 241, 281, 266, 289, 244, 242,
	146, 267, 173, 214, 156, 157, 169, 175, 177, 179,
	180, 223, 224, 236, 255, 268, 269, 270, 172, 165,
	249, 166, 189, 167, 147, 257, 168, 148, 237, 273,
	0, 185, 245, 210, 149, 209, 238, 272, 271, 297,
	303, 304, 308, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	183, 144, 285, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 225, 301, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 194, 235, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 283, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 310, 219, 220, 221, 222,
	186, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 182, 188, 0, 190, 162,
	234, 184, 292, 197, 0, 226, 193, 258, 198, 204,
	246, 291, 232, 251, 160, 282, 259, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 202, 0, 243, 181,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 231, 0, 0, 298,
	299, 300, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 201, 0, 0, 0,
	260, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 265, 280, 159,
	256, 293, 164, 263, 155, 230, 252, 0, 0, 152,
	278, 262, 212, 195, 196, 151, 0, 247, 174, 187,
	171, 228, 0, 277, 305, 170, 296, 0, 288, 154,
	0, 287, 227, 274, 279, 213, 207, 153, 276, 211,
	206, 199, 178, 0, 191, 239, 205, 240, 192, 217,
	216, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 1250, 0, 0, 0, 264,
	0, 0, 200, 0, 0, 0, 306, 0, 250, 233,
	0, 0, 0, 248, 203, 275, 241, 281, 266, 289,
	244, 242, 146, 267, 173, 214, 156, 157, 169, 175,
	177, 179, 180, 223, 224, 236, 255, 268, 269, 270,
	172, 165, 249, 166, 189, 167, 147, 257, 168, 148,
	237, 273, 0, 185, 245, 210, 149, 209, 238, 272,
	271, 297, 303, 304, 308, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 183, 144, 285, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 225, 301, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 194, 235, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 283, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 310, 219, 220,
	221, 222, 186, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 182, 188, 0,
	190, 162, 234, 184, 292, 197, 0, 226, 193, 258,
	198, 204, 246, 291, 232, 251, 160, 282, 259, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 202, 0,
	243, 181, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 231, 0,
	0, 298, 299, 300, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 201, 0,
	0, 0, 260, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 265,
	280, 159, 256, 293, 164, 263, 155, 230, 252, 0,
	0, 152, 278, 262, 212, 195, 196, 151, 0, 247,
	174, 187, 171, 228, 0, 277, 305, 170, 296, 0,
	288, 154, 0, 287, 227, 274, 279, 213, 207, 153,
	276, 211, 206, 199, 178, 0, 191, 239, 205, 240,
	192, 217, 216, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 200, 0, 0, 0, 306, 0,
	250, 233, 0, 0, 0, 248, 203, 275, 241, 281,
	266, 289, 244, 242, 146, 267, 173, 214, 156, 157,
	169, 175, 177, 179, 180, 223, 224, 236, 255, 268,
	269, 270, 172, 165, 249, 166, 189, 167, 147, 257,
	168, 148, 237, 273, 0, 185, 245, 210, 149, 209,
	238, 272, 271, 297, 303, 304, 308, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 183, 144, 285, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 225, 301, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 194, 235,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 283, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 310,
	219, 220, 221, 222, 186, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 182,
	188, 0, 190, 162, 234, 184, 292, 197, 0, 226,
	193, 258, 198, 204, 246, 291, 232, 251, 160, 282,
	259, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 0, 0, 145, 0,
	202, 0, 243, 181, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	231, 0, 0, 298, 299, 300, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	201, 0, 0, 0, 260, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 265, 280, 159, 256, 293, 164, 263, 155, 230,
	252, 0, 0, 152, 278, 262, 212, 195, 196, 151,
	0, 247, 174, 187, 171, 228, 0, 277, 305, 170,
	296, 0, 288, 154, 0, 287, 227, 274, 279, 213,
	207, 153, 276, 211, 206, 199, 178, 0, 191, 239,
	205, 240, 192, 217, 216, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 200, 0, 0, 0,
	306, 0, 250, 233, 0, 0, 0, 248, 203, 275,
	241, 281, 266, 289, 334, 242, 146, 267, 173, 214,
	156, 157, 169, 175, 177, 179, 180, 223, 224, 236,
	255, 268, 269, 270, 172, 165, 249, 166, 189, 167,
	147, 257, 168, 148, 237, 273, 0, 185, 245, 210,
	149, 209, 238, 272, 271, 297, 303, 304, 308, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 183, 144, 285, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 225, 301,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	194, 235, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 283, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 286, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 310, 219, 220, 221, 222, 186, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 182, 188, 0, 190, 162, 234, 184, 292, 197,
	0, 226, 193, 258, 198, 204, 246, 291, 232, 251,
	160, 282, 259, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 202, 0, 243, 181, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 231, 0, 0, 298, 299, 300, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 176,
	0, 0, 201, 0, 0, 0, 260, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 265, 280, 159, 256, 293, 164, 263,
	155, 230, 252, 0, 0, 152, 278, 262, 212, 195,
	196, 151, 0, 247, 174, 187, 171, 228, 0, 277,
	305, 170, 296, 0, 288, 154, 0, 287, 227, 274,
	279, 213, 207, 153, 276, 211, 206, 199, 178, 0,
	191, 239, 205, 240, 192, 217, 216, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 200, 0,
	0, 0, 306, 0, 250, 233, 0, 0, 0, 248,
	203, 275, 241, 281, 266, 289, 244, 242, 146, 267,
	173, 214, 156, 157, 169, 175, 177, 179, 180, 223,
	224, 236, 255, 268, 269, 270, 172, 165, 249, 166,
	189, 167, 147, 257, 168, 148, 237, 273, 0, 185,
	245, 210, 149, 209, 238, 272, 271, 297, 303, 304,
	308, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 183, 144,
	285, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	225, 301, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 194, 235, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 283,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 310, 219, 220, 221, 222, 186, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 182, 188, 0, 190, 162, 234, 184,
	292, 197, 0, 226, 193, 258, 198, 204, 246, 291,
	232, 251, 160, 282, 259, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 202, 0, 243, 181, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 231, 0, 0, 298, 299, 300,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 201, 0, 0, 0, 260, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 265, 280, 159, 256, 293,
	164, 263, 155, 230, 252, 0, 0, 152, 278, 262,
	212, 195, 196, 151, 0, 247, 174, 187, 171, 228,
	0, 277, 305, 170, 296, 0, 288, 154, 0, 287,
	227, 274, 279, 213, 207, 153, 276, 211, 206, 199,
	178, 0, 191, 239, 205, 240, 192, 217, 216, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	200, 0, 0, 0, 306, 0, 250, 233, 0, 0,
	0, 248, 203, 275, 241, 281, 266, 289, 244, 242,
	146, 267, 173, 214, 156, 157, 169, 175, 177, 179,
	180, 223, 224, 236, 255, 268, 269, 270, 172, 165,
	249, 166, 189, 167, 147, 257, 168, 148, 237, 273,
	0, 185, 245, 210, 149, 209, 238, 272, 271, 297,
	303, 304, 308, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	183, 144, 285, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 225, 301, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 194, 235, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 283, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 310, 219, 220, 221, 222,
	186, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 182, 188, 0, 190, 162,
	234, 184, 292, 197, 0, 226, 193, 258, 198, 204,
	246, 291, 232, 251, 160, 282, 259, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 202, 0, 243, 181,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 231, 0, 0, 298,
	299, 300, 284, 0, 0, 0, 0, 0, 1307, 0,
	0, 0, 0, 176, 0, 0, 201, 0, 0, 0,
	260, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 858, 859, 1309, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 265, 280, 159,
	256, 293, 164, 263, 155, 230, 252, 0, 0, 152,
	278, 262, 212, 195, 196, 151, 0, 247, 174, 187,
	171, 228, 0, 277, 305, 170, 296, 0, 288, 154,
	0, 287, 227, 274, 279, 213, 207, 153, 276, 211,
	206, 199, 178, 0, 191, 239, 205, 240, 192, 217,
	216, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 200, 0, 0, 0, 306, 0, 250, 233,
	0, 0, 0, 248, 203, 275, 241, 281, 266, 289,
	244, 242, 146, 267, 173, 214, 156, 157, 169, 175,
	177, 179, 180, 223, 224, 236, 255, 268, 269, 270,
	172, 165, 249, 166, 189, 167, 147, 257, 168, 148,
	237, 273, 0, 185, 245, 210, 149, 209, 238, 272,
	271, 297, 303, 304, 308, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 183, 144, 285, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 225, 301, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 194, 235, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 283, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 310, 219, 220,
	221, 222, 186, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 182, 188, 0,
	190, 162, 234, 184, 292, 197, 0, 226, 193, 258,
	198, 204, 246, 291, 232, 251, 160, 282, 259, 208,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	201, 0, 0, 0, 260, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 202, 0,
	243, 181, 0, 0, 0, 857, 858, 859, 1309, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 299, 300, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 265, 280, 159, 256, 293, 164, 263, 155, 230,
	252, 0, 0, 152, 278, 262, 212, 195, 196, 151,
	0, 247, 174, 187, 171, 228, 0, 277, 305, 170,
	296, 0, 288, 154, 0, 287, 227, 274, 279, 213,
	207, 153, 276, 211, 206, 199, 178, 0, 191, 239,
	205, 240, 192, 217, 216, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 200, 0, 0, 0,
	306, 0, 250, 233, 0, 0, 0, 248, 203, 275,
	241, 281, 266, 289, 244, 242, 146, 267, 173, 214,
	156, 157, 169, 175, 177, 179, 180, 223, 224, 236,
	255, 268, 269, 270, 172, 165, 249, 166, 189, 167,
	147, 257, 168, 148, 237, 273, 0, 185, 245, 210,
	149, 209, 238, 272, 271, 297, 303, 304, 308, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 183, 144, 285, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 225, 301,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	194, 235, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 283, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 310, 219, 220, 221, 222, 186, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 182, 188, 0, 190, 162, 234, 184, 292, 197,
	0, 226, 193, 258, 198, 204, 246, 291, 232, 251,
	160, 282, 259, 208, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 201, 0, 0, 0, 260, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 202, 0, 243, 181, 0, 0, 0, 857,
	858, 859, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 265, 280, 159, 256, 293,
	164, 263, 155, 230, 252, 0, 0, 152, 278, 262,
	212, 195, 196, 151, 0, 247, 174, 187, 171, 228,
	0, 277, 305, 170, 296, 0, 288, 154, 0, 287,
	227, 274, 279, 213, 207, 153, 276, 211, 206, 199,
	178, 0, 191, 239, 205, 240, 192, 217, 216, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	200, 0, 0, 0, 306, 0, 250, 233, 0, 0,
	0, 248, 203, 275, 241, 281, 266, 289, 244, 242,
	146, 267, 173, 214, 156, 157, 169, 175, 177, 179,
	180, 223, 224, 236, 255, 268, 269, 270, 172, 165,
	249, 166, 189, 167, 147, 257, 168, 148, 237, 273,
	0, 185, 245, 210, 149, 209, 238, 272, 271, 297,
	303, 304, 308, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	183, 144, 285, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 225, 301, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 194, 235, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	261, 283, 295, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 310, 219, 220, 221, 222,
	186, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	1265, 0, 0, 0, 307, 182, 188, 0, 190, 162,
	234, 184, 292, 197, 0, 226, 193, 258, 198, 204,
	246, 291, 232, 251, 160, 282, 259, 208, 0, 99,
	0, 28, 89, 71, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 1748, 0, 0, 0, 83, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 202, 0, 243, 181,
	1768, 1772, 1774, 1776, 1778, 1779, 1781, 52, 1785, 1782,
	1783, 1784, 0, 96, 1763, 1764, 1765, 1766, 1746, 1747,
	1769, 2056, 1749, 0, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1761, 1767, 1977, 0, 0, 298,
	299, 300, 284, 1771, 1773, 1775, 1777, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1265, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 90, 91, 0, 92, 93, 0, 0, 0, 0,
	1977, 0, 0, 0, 2387, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 0, 0, 1956, 0,
	0, 0, 1958, 1960, 1962, 0, 1964, 1965, 1966, 1968,
	1969, 1970, 1972, 1973, 1974, 1975, 0, 0, 70, 88,
	97, 0, 50, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 354, 0, 353, 360, 350, 0, 87, 82,
	81, 0, 0, 0, 0, 1978, 357, 358, 0, 359,
	0, 0, 0, 345, 0, 0, 354, 0, 353, 360,
	350, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	357, 358, 0, 359, 0, 0, 0, 345, 0, 1976,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 370,
	0, 0, 371, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 84, 85, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 370, 0, 0, 371, 0, 1967, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 60, 0, 0, 1956, 86,
	0, 61, 1958, 1960, 1962, 0, 1964, 1965, 1966, 1968,
	1969, 1970, 1972, 1973, 1974, 1975, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	62, 0, 1956, 0, 0, 0, 1958, 1960, 1962, 63,
	1964, 1965, 1966, 1968, 1969, 1970, 1972, 1973, 1974, 1975,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 1976,
	0, 346, 348, 347, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 1955, 1995, 0, 1978,
	0, 356, 0, 0, 0, 346, 348, 347, 0, 0,
	1988, 0, 0, 352, 0, 349, 1983, 0, 0, 340,
	0, 1997, 1998, 1971, 72, 356, 0, 1984, 0, 0,
	1961, 0, 0, 1976, 0, 0, 0, 0, 0, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 355, 361, 0, 362, 363, 0, 0,
	364, 365, 366, 0, 0, 368, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 355, 361, 0,
	362, 363, 0, 0, 364, 365, 366, 0, 0, 368,
	369, 0, 0, 0, 0, 0, 0, 0, 1996, 0,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 1992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986,
}

var yyPact = [...]int{
	21249, -1000, -306, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19160, -1000,
	-1000, 1451, -1000, 8053, 19622, 69, 19622, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	311, -1000, 18698, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	272, 21452, 179, 177, -1000, 1941, -1000, -1000, -1000, -1000,
	139, 351, 18236, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1448, 26, 351,
	423, 429, 620, 620, 9439, 1941, 236, 51, -1000, 525,
	21249, 232, 19622, -1000, 780, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1941, 1941, 19622, -63, 884, -1000,
	228, 222, 234, 779, -1000, -1000, -1000, -1000, 1937, -1000,
	19622, 1506, 19622, -1000, 1246, 214, 21476, 1752, 748, 370,
	1667, -1000, -1000, 1639, -1000, 23, 57, 54, 110, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 93, -1000, 1804, -1000,
	-1000, 13, -1000, 12, -1000, -1000, -1000, -116, -1000, -1000,
	-1000, -1000, -197, -197, 1737, 1823, 1489, 1888, 1833, 1830,
	1816, 1794, 0, 267, 267, 267, 295, 267, 308, -1000,
	-1000, -1000, -1000, -1000, -1000, 364, -1000, -1000, -1000, -1000,
	580, 19622, -1000, 1484, 821, 821, 940, 212, -1000, -1000,
	-112, -145, 821, 821, -145, 61, -1000, 1797, 1786, -1000,
	-1000, -1000, -1000, -1000, -1000, 272, 272, 280, -1000, -196,
	-1000, -1000, 410, -1000, 393, -1000, 333, 205, 595, 958,
	-1000, 819, 19622, 19622, 19622, 819, 819, 11299, 10837, 778,
	-1000, 1823, 1489, -1000, 1431, 1417, 1489, 272, 272, 272,
	272, 272, 272, 272, 19622, 5680, 5680, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 218, 1631, -1000, 19622, 1823,
	1737, 1823, -1000, 777, 1202, 1314, -1000, -1000, 228, 840,
	-1000, 589, -1000, -1000, -1000, -1000, 19622, 186, -1000, 1307,
	1630, -1000, 306, 666, 856, -1000, 73, 1970, 15919, 1246,
	15919, 19622, -1000, -1000, -1000, -1000, -1000, -1000, -118, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -68, -1000, -68, -1000, -296, 1737, 6153, -1000,
	-1000, 6153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	288, 267, -1000, 1333, 894, 15919, 1246, 1269, 19622, 267,
	280, -1000, 19622, 580, 1779, 19622, 1897, 7572, 1897, 19622,
	-1000, -1000, 821, 821, -1000, 940, 940, -1000, -1000, -139,
	1897, 1897, -132, 19622, 19622, 267, -1000, -1000, 1333, 15919,
	14995, -1000, -147, 421, 396, 401, -1000, -1000, 1947, -1000,
	-1000, 436, 304, 10375, 242, 15919, 3782, -1000, -1000, 819,
	819, 819, 3782, 3782, 648, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19622, 1737, -1000, -1000, -1000, -1000, -1000, 1333,
	15919, 1246, 19622, 19622, 19622, 20852, -1000, 830, -1000, -1000,
	8977, 776, 6153, -1000, 1136, 1622, -1000, -1000, 1621, 1620,
	1619, 1614, 1612, 1607, 1606, -1000, 1443, -1000, -1000, 1605,
	1604, 1596, 1590, -1000, -1000, -1000, -1000, -1000, -1000, 1588,
	-1000, -1000, -1000, 1581, 1443, -1000, -1000, 1580, 1576, 1573,
	1572, 1571, -1000, -1000, -1000, 1313, -1000, -1000, -1000, 1311,
	1310, 1570, 1014, -1000, -1000, -1000, -1000, 3309, 7572, 7572,
	7572, 7572, -1000, -1000, 1536, 6153, 1569, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7099, -1000, 1568, 1566, 1565, 1563,
	1561, 1443, 1560, 1559, 1557, 7572, 1549, 1544, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 830,
	-1000, -294, -1000, 9913, 19622, 19622, -1000, 1737, -1000, 1737,
	2400, -1000, 1812, -1000, 228, 108, -1000, -1000, -1000, -1000,
	-1000, -1000, 770, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 511, -1000, 19622, -1000, -1000, 73, 15919, 861,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 81, -1000, -1000,
	118, -1000, 286, -41, 838, -1000, -1000, -6, 113, -6,
	1309, -1000, 724, 755, 488, -1000, 1006, 17774, 19622, -21,
	-1000, 1749, 644, -1000, -41, 436, 1467, -1000, -1000, -1000,
	1718, 19622, 17312, -1000, 1543, 834, -1000, -1000, 6153, -1000,
	-1000, 1897, 1897, 1897, 821, 20852, 940, 19622, 940, -1000,
	-1000, 940, -1000, 742, -1000, 19622, -21, 644, 1843, 558,
	-1000, -1000, -1000, -1000, 1773, 20084, 236, -1000, -1000, 415,
	392, 390, 1246, 285, -1000, -1000, 436, -1000, -1000, -1000,
	1542, 883, -1000, -1000, 7572, -1000, 1182, -1000, 3782, 3782,
	3782, -1000, -1000, 13147, -1000, -1000, -1000, 482, 436, 1665,
	481, -1000, 481, -1000, -1000, -1000, 1897, 5680, -1000, 14995,
	-1000, 6153, 6153, 6153, 6153, -1000, 16843, -1000, 16381, -1000,
	331, 6626, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6153,
	1788, 1788, 1788, 6153, 889, 6153, 6153, -1000, 976, 8745,
	1788, 1788, 1788, 1788, 1788, -1000, 2828, 1788, 1788, 1788,
	1788, -1000, -1000, -1000, 6153, 7572, 7572, 7572, 7572, 7572,
	7572, 7572, 7572, 7572, 7572, 7572, 7572, 1535, 946, 7572,
	7572, 7572, 1417, 1769, 477, -1000, -1000, -1000, -1000, -1000,
	832, 1182, 6153, 8283, 6153, 6153, 6153, -1000, 1430, 1429,
	-1000, -1000, 6153, 6153, 7572, -1000, 1788, 1303, 1897, 439,
	-1000, 1541, -1000, 827, 1711, -1000, 728, 476, -1000, 872,
	815, -1000, -1000, -1000, -1000, 720, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -64, -1000, -1000, 19622, 1307, 801, 861, 451,
	-1000, 282, 699, 690, -1000, 15919, 18, 15919, -1000, 15919,
	-1000, -1000, 187, -1000, 19622, 1736, -1000, -1000, -1000, 1302,
	1728, -160, 6153, 6153, 19622, 6153, -1000, -1000, -1000, 1484,
	865, 1540, -120, 843, -1000, 365, 15919, 204, -1000, 1664,
	136, -1000, 1718, -1000, 389, -1000, 1537, 19622, 758, -1000,
	653, 21249, -1000, 19622, 1182, -1000, -1000, -1000, 1897, -1000,
	821, -1000, 821, 940, 19622, -1000, -1000, -120, 365, 19622,
	14995, 14995, 14995, 14995, -1000, 1687, 1686, -1000, 1710, 1707,
	1720, 19622, 14995, 19622, -1000, -1000, -1000, 20468, -1000, -1000,
	-1000, -1000, 1426, 1941, -1000, -1000, -1000, 368, 436, 15919,
	1301, 242, -1000, -1000, -1000, -1000, -1000, 19622, 19622, 1895,
	-1000, 467, 1889, -1000, 903, 903, 899, -1000, -1000, 646,
	-1000, -1000, 278, -1000, -1000, -1000, -1000, 1536, -1000, -1000,
	-1000, 1424, 434, 1182, 6153, -1000, -1000, 6153, 6153, 996,
	6153, 1421, 800, 794, -1000, 1420, 1936, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6153, 6153, 6153, 6153,
	6153, 1166, 5207, -1000, -1000, -1000, 6153, 6153, 6153, 6153,
	1419, 1675, 1330, -1000, 882, 882, 791, 791, 791, 791,
	791, 1050, 1050, -1000, -1000, -1000, 3309, 1535, 7572, 7572,
	7572, 246, 2904, 2811, -1000, 6153, 893, -1000, 6153, 692,
	-1000, 1416, 1123, 1415, 1413, -1000, -1000, 674, 1412, 951,
	6153, 454, 1895, -294, 4728, 235, 19622, -294, 19622, 19622,
	4728, -1000, 19622, 2400, 1192, -1000, -1000, -1000, 1906, 15919,
	1246, 808, 855, -1000, 9, -1000, 79, 254, 1300, -1000,
	301, 863, 297, -106, -84, 1182, 1182, 641, -1000, 1768,
	1747, 8515, 1028, -1000, -1000, 1299, -1000, 248, -1000, -1000,
	-1000, 302, 32, 1190, 239, -1000, 1322, 19622, -1000, -1000,
	-1000, -1000, -1000, 843, 843, 843, 8515, 232, 573, 617,
	14995, 19622, -1000, 14533, 1411, -1000, -1000, 1897, 1897, 821,
	-1000, 1028, 248, 571, -1000, 862, 1651, 1663, 1651, -1000,
	-1000, -1000, -1000, 1656, -1000, 1615, -1000, -1000, 571, -1000,
	1484, -1000, -1000, -1000, 451, 1410, -1000, -1000, -1000, -1000,
	1893, 1885, 15457, -1000, -1000, -1000, -1000, -1000, -1000, 6153,
	1734, 1721, 1716, 1029, 792, -1000, -1000, -1000, -1000, 6153,
	1690, 1655, 1645, 1628, 1601, -1000, 6153, 6153, 1074, 1592,
	1585, 1574, 1504, -1000, 787, -1000, 246, 2904, 2739, -1000,
	7572, 7572, 1462, 783, -1000, 6153, 991, 714, 12223, -1000,
	6153, -1000, -1000, -1000, 12223, -1000, 7572, 1453, 1296, 1893,
	-1000, 1408, 447, -1000, -294, -1000, -1000, 439, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1246, -1000, 74,
	-1000, -1000, -1000, -1000, -1000, -1000, -54, -1000, 19622, 1295,
	19622, -298, -70, 1881, 1872, 19622, 236, 19622, 1404, 446,
	-1000, -1000, -1000, 21155, 627, -1000, 19622, 954, 419, 267,
	419, 945, 1534, -1000, -1000, -1000, 1291, -44, -1000, -1000,
	1290, 1288, 1188, -1000, -1000, 1226, 468, -28, -1000, -1000,
	-1000, -1000, -1000, -1000, 1533, 12223, 12685, 1287, 1402, 20084,
	14995, 14533, 555, -1000, 614, -1000, -1000, -1000, -1000, 1897,
	-1000, -1000, 1890, 19622, 4728, -1000, -1000, 6153, 1532, -1000,
	6153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6153, 6153,
	-1000, -1000, 1182, -1000, -1000, -1000, 1401, -1000, 378, 378,
	-11, -1000, -1000, -1000, 1469, -1000, 1492, 1492, 1469, 1469,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1509,
	1508, -1000, -1000, 1469, 1491, 1491, 1469, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1494, 1494, 1507, 1494, -1000, 1423, -1000, -1000,
	-1000, -1000, -1000, 1328, 1245, 6153, -1000, -1000, -1000, -1000,
	-1000, -1000, 7572, -1000, -1000, -1000, -1000, 1182, 6153, 1397,
	-1000, 1469, 1492, -1000, 1469, 1491, 1469, 378, 378, 1391,
	1199, 1373, 1855, -1000, 1362, -1000, -1000, 4728, 439, 436,
	-1000, -1000, -132, 50, -132, -300, 1286, -1000, 1866, 1285,
	1209, -1000, 1484, 21384, 8515, 21606, -1000, -1000, 19622, 19622,
	-1000, 19622, 19622, 267, 6153, -1000, -1000, 175, -1000, -1000,
	47, -1000, -1000, 1187, 275, -1000, 14071, -1000, -1000, -1000,
	-1000, -1000, -68, 1897, 555, 614, -1000, -1000, 797, -1000,
	1823, -1000, -1000, 1182, 19622, 1182, 1182, 434, -1000, -1000,
	-1000, -1000, -1000, -17, -1000, -1000, -1000, -1000, 1184, -1000,
	1177, -1000, -1000, -1000, 1284, 1284, -1000, -1000, 1158, -1000,
	-1000, -1000, 1154, -1000, -1000, 1148, -1000, -1000, -1000, -1000,
	1235, -1000, 1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6153, -1000, -1000, -1000, -1000, -1000, -141,
	-79, -1000, 1282, -1000, -302, 1139, -1000, 1281, -87, -1000,
	-1000, 1722, 231, 21190, -1000, 843, 843, 633, 843, 843,
	843, 843, 173, 170, 843, 843, 843, 843, 843, 843,
	843, 843, 843, 843, 843, 843, 843, 843, 1483, -1000,
	-1000, 21606, -1000, -1000, 952, 7572, -1000, -1000, 1280, 12685,
	445, 466, 1482, -1000, 133, 1944, 942, 908, -1000, 19622,
	-1000, 1475, 1277, 80, 1473, -1000, 1472, 1470, 19622, 1219,
	251, 1276, -1000, -1000, 42, -1000, -1000, 782, -1000, 1469,
	6153, -1000, -132, 1890, -1000, -1000, 781, -1000, -1000, 1356,
	1355, 773, -1000, 771, 1354, 765, 763, -1000, 1208, 274,
	-97, -79, -1000, 1864, -90, 1861, 1860, 859, -1000, 1464,
	-1000, -1000, 1859, 236, -1000, 1857, 21384, -1000, 1120, 1112,
	843, 843, 1111, 1275, 1274, 1273, 843, 843, 1084, 1272,
	20468, 1083, 1082, 1040, 1185, 1271, 493, 1175, 1157, 1080,
	19622, 1459, 1164, -1000, -1000, 2904, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1039, 1455, -195,
	-1000, -1000, 1452, 14071, 106, 106, 14071, 14071, 14071, 1450,
	292, -1000, -55, -1000, -1000, -1000, 14071, 1732, 1193, -1000,
	1823, -1000, -1000, -1000, -1000, 1260, -1000, -1000, -1000, 1031,
	-1000, 1024, -1000, 1445, 1022, -70, 1850, -1000, 1209, 1835,
	1209, 1209, 1257, 19622, 1209, -1000, 159, -1000, -1000, -1000,
	12223, 12223, -1000, -1000, -1000, -1000, 1256, 1248, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	197, 19622, 762, -1000, 850, 1340, 6153, 1443, -244, 14071,
	759, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 756, 753,
	752, 14071, -1000, -1000, -1000, 122, -1000, 129, -1000, -1000,
	1732, -1000, -1000, 1339, 1250, 1784, 11761, -95, -1000, 1242,
	-1000, 1209, -1000, -1000, -312, 751, -1000, -1000, 107, 156,
	152, -1000, 263, -1000, -1000, -1000, -1000, -1000, -1000, 194,
	733, -1000, 1164, 1055, -1000, 1159, -1000, 1661, -1000, 10,
	730, -1000, -1000, -1000, -1000, 729, -1000, -1000, 843, 1034,
	65, -1000, -1000, -1000, -1000, -1000, -1000, 19622, -1000, 725,
	-1000, -1000, -1000, 608, -1000, -1000, -1000, -1000, -1000, -1000,
	19622, 105, 1000, 7572, 1442, 7572, 1440, 114, 1438, -1000,
	-1000, -1000, -1000, -1000, 292, -1000, 1658, 1647, 1905, -1000,
	-1000, -1000, -1000, 129, 129, 129, 129, 5, 982, -1000,
	1269, 433, -1000, 842, -1000, 13609, 19622, -1000, 1436, 1831,
	-1000, 1811, 19622, 1465, 19622, 1433, 839, 7572, -1000, -1000,
	1942, -1000, 1939, 458, 458, -1000, -1000, -1000, 19622, 4255,
	-1000, 459, -1000, 229, 111, -1000, 723, -1000, 722, 19622,
	971, 1027, -1000, -1000, -1000, 1008, 149, -1000, -1000, -1000,
	1182, 19622, 704, -1000, 1319, 87, -1000, -1000, 695, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 229, 1696, -1000, 969,
	-1000, -1000, 21330, 342, -1000, -1000, 21330, 92, -1000, 220,
	1331, -1000, -1000, 691, -1000, 1238, 398, 6153, -1000, 92,
	21384, -1000, 6153, 676, -1000, 21384, 658, -1000, -1000,
}

var yyPgo = [...]int{
	0, 120, 2278, 180, 129, 126, 179, 2277, 1875, 1874,
	2276, 2270, 2269, 2268, 2267, 2266, 2265, 2264, 2262, 2261,
	2260, 2259, 2258, 2257, 2256, 2255, 2254, 177, 2251, 2250,
	2249, 2248, 2247, 2246, 2244, 2243, 2242, 2241, 2240, 2239,
	2238, 124, 2237, 1872, 2235, 2234, 2233, 2232, 2229, 165,
	2227, 2226, 2225, 2224, 2223, 2222, 2221, 2220, 2216, 2215,
	2213, 2212, 2211, 2210, 176, 64, 2208, 54, 42, 132,
	201, 47, 209, 193, 139, 82, 135, 169, 115, 2207,
	2206, 109, 25, 128, 2205, 50, 46, 36, 192, 104,
	59, 71, 99, 2204, 2201, 92, 2200, 2199, 101, 2198,
	65, 2197, 84, 49, 94, 27, 2194, 2193, 2192, 88,
	2191, 2188, 2187, 2186, 97, 2183, 72, 58, 2181, 2180,
	2179, 2178, 2176, 44, 2175, 55, 2174, 2173, 2172, 2167,
	2163, 2161, 2160, 13, 17, 21, 2159, 16, 2, 2158,
	161, 61, 89, 114, 2156, 393, 2155, 2154, 2153, 113,
	2150, 138, 2149, 2147, 2146, 2142, 2141, 9, 2140, 56,
	2139, 2134, 2133, 66, 2131, 2130, 2129, 102, 41, 60,
	98, 2126, 2125, 76, 157, 15, 33, 0, 162, 40,
	2124, 2123, 2120, 194, 156, 153, 173, 116, 222, 118,
	2119, 2118, 57, 2116, 121, 2115, 75, 24, 2114, 91,
	2113, 32, 90, 2110, 107, 2106, 136, 1, 106, 26,
	166, 2105, 2103, 2102, 122, 2100, 2099, 68, 119, 2098,
	2097, 2095, 28, 2094, 31, 19, 2093, 83, 178, 2092,
	137, 100, 133, 131, 117, 167, 172, 74, 111, 982,
	112, 87, 18, 2091, 163, 2090, 247, 171, 141, 2089,
	2088, 175, 345, 160, 2086, 134, 8, 2085, 2084, 10,
	2083, 22, 2082, 2080, 2079, 2078, 6, 2076, 2075, 2073,
	4, 3, 2072, 5, 110, 51, 69, 2069, 67, 85,
	2068, 2067, 2066, 2065, 2064, 271, 2063, 2062, 2060, 2058,
	2057, 2056, 2055, 86, 38, 2054, 2052, 2051, 70, 2050,
	2048, 302, 159, 2047, 45, 2046, 2044, 23, 2043, 30,
	2042, 2041, 2018, 11, 147, 2015, 2014, 14, 2013, 2012,
	7, 12, 2008, 2007, 63, 52, 39, 80, 77, 2006,
	20, 2005, 105, 2004, 2003, 140, 2002, 108, 1999, 150,
	170, 219, 1998, 158, 1996, 1993, 1992, 1991, 1989, 1988,
	1987, 1008, 1986, 1985, 174, 62, 164, 1981, 1979, 149,
	1965, 123, 96, 93, 168, 1964, 145, 1963, 1961, 1959,
	155, 1958,
}

//line mysql_sql.y:7327
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 367, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 58, 57, 323, 323, 322,
	322, 321, 321, 320, 320, 320, 319, 319, 319, 318,
	318, 317, 317, 316, 316, 314, 314, 315, 313, 312,
	312, 312, 310, 310, 308, 308, 309, 309, 303, 303,
	306, 306, 304, 304, 304, 304, 307, 302, 302, 302,
	301, 301, 56, 56, 56, 241, 241, 55, 55, 255,
	255, 255, 255, 255, 253, 253, 253, 253, 253, 253,
	252, 252, 251, 251, 256, 256, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 50, 50, 50, 50, 53, 54,
	249, 249, 249, 249, 249, 250, 250, 250, 51, 52,
	52, 240, 240, 245, 245, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 248, 248, 248,
	247, 247, 246, 246, 44, 44, 44, 47, 46, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 45, 45,
	45, 45, 45, 45, 42, 42, 42, 42, 42, 41,
	41, 43, 43, 238, 238, 237, 61, 61, 61, 61,
	61, 61, 61, 60, 60, 63, 63, 62, 49, 49,
	49, 49, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 346, 346, 346, 348, 348, 181, 182, 368, 180,
	180, 180, 342, 342, 343, 344, 345, 345, 345, 59,
	7, 7, 39, 40, 366, 366, 285, 285, 194, 194,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 288, 289, 190, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	31, 31, 38, 369, 369, 369, 36, 37, 284, 284,
	284, 35, 34, 33, 32, 32, 30, 30, 29, 29,
	187, 187, 189, 189, 185, 370, 370, 261, 261, 188,
	188, 28, 28, 28, 186, 186, 164, 184, 184, 184,
	6, 10, 10, 10, 10, 10, 10, 10, 10, 16,
	18, 235, 235, 232, 17, 13, 12, 15, 11, 14,
	5, 5, 5, 5, 8, 8, 9, 76, 76, 104,
	104, 355, 355, 351, 351, 352, 352, 352, 353, 353,
	354, 354, 4, 292, 292, 292, 292, 292, 292, 331,
	331, 331, 332, 94, 94, 89, 89, 293, 293, 208,
	333, 333, 300, 300, 299, 299, 298, 298, 92, 92,
	93, 93, 80, 80, 64, 64, 305, 305, 305, 305,
	311, 311, 282, 282, 130, 130, 160, 160, 161, 161,
	68, 68, 69, 69, 69, 69, 69, 69, 339, 339,
	341, 341, 340, 91, 91, 87, 87, 88, 88, 88,
	86, 86, 85, 84, 84, 83, 82, 82, 82, 71,
	71, 70, 70, 70, 70, 70, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 72, 72,
	347, 347, 347, 286, 286, 286, 291, 291, 142, 142,
	143, 143, 141, 141, 73, 73, 74, 74, 74, 74,
	140, 140, 139, 75, 75, 81, 77, 77, 79, 79,
	79, 79, 150, 150, 149, 149, 149, 149, 97, 97,
	148, 147, 147, 147, 96, 96, 95, 95, 90, 90,
	78, 78, 146, 371, 371, 144, 173, 173, 173, 179,
	179, 172, 172, 172, 172, 172, 183, 178, 178, 174,
	174, 175, 175, 175, 3, 3, 3, 3, 22, 22,
	22, 22, 26, 26, 349, 349, 19, 356, 359, 357,
	360, 360, 360, 361, 361, 361, 362, 362, 20, 358,
	363, 363, 363, 236, 236, 233, 234, 234, 231, 230,
	230, 230, 365, 365, 364, 364, 364, 176, 176, 21,
	227, 227, 228, 229, 229, 221, 221, 221, 221, 25,
	225, 225, 226, 226, 226, 226, 226, 222, 222, 224,
	224, 220, 220, 220, 220, 220, 24, 219, 219, 217,
	217, 215, 215, 216, 216, 214, 214, 214, 218, 218,
	23, 23, 66, 65, 65, 65, 67, 287, 287, 257,
	257, 260, 260, 267, 267, 268, 268, 266, 266, 273,
	273, 272, 272, 271, 271, 270, 270, 269, 269, 269,
	269, 264, 264, 263, 263, 258, 258, 258, 258, 258,
	259, 259, 262, 262, 265, 265, 121, 121, 122, 122,
	122, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	329, 329, 330, 124, 124, 124, 128, 128, 128, 128,
	128, 128, 123, 123, 125, 125, 105, 105, 103, 103,
	98, 98, 99, 99, 100, 100, 101, 101, 102, 102,
	102, 102, 102, 102, 243, 243, 327, 327, 328, 328,
	324, 324, 324, 326, 326, 326, 326, 326, 325, 325,
	106, 158, 158, 158, 177, 177, 177, 157, 157, 157,
	120, 120, 119, 119, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 242, 242,
	191, 191, 192, 192, 137, 136, 136, 136, 136, 136,
	134, 135, 133, 133, 133, 133, 133, 132, 132, 131,
	131, 131, 223, 223, 129, 129, 127, 127, 127, 126,
	126, 126, 274, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 200, 200, 205,
	205, 338, 338, 337, 107, 107, 107, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 116, 116, 116, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 297, 297, 297, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 156,
	350, 350, 350, 334, 334, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 154, 154, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 209,
	209, 210, 210, 294, 294, 294, 294, 294, 294, 295,
	295, 296, 296, 296, 296, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 198, 151, 151, 151, 211, 206,
	206, 207, 207, 201, 201, 201, 201, 201, 201, 201,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	202, 202, 204, 204, 213, 213, 213, 212, 212, 212,
	212, 212, 212, 212, 118, 118, 118, 118, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 109, 109,
	109, 109, 113, 113, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 114, 114,
	114, 114, 112, 112, 112, 112, 112, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 111, 159, 159, 275, 275, 278, 278,
	276, 276, 277, 279, 279, 279, 280, 280, 280, 281,
	281, 281, 283, 283, 163, 163, 163, 169, 169, 162,
	162, 170, 170, 171, 171, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 9, 9, 0, 2, 1,
	3, 3, 3, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 3, 6,
	3, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 0,
	1, 4, 2, 4, 1, 5, 3, 2, 1, 2,
	2, 4, 4, 5, 2, 1, 3, 4, 4, 1,
	2, 9, 7, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 5, 1, 1, 1, 5, 5, 0, 1,
	1, 2, 2, 3, 6, 7, 4, 4, 7, 8,
	0, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 1, 3, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 3, 1, 4, 6, 4, 4, 4, 3,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 4, 3, 0, 1, 2, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 11, 0, 1, 7, 1, 4, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 5, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	10, 9, 2, 2, 6, 10, 5, 0, 1, 0,
	6, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 1, 7, 7,
	7, 7, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 5,
	4, 4, 5, 5, 5, 5, 4, 5, 5, 5,
	5, 5, 5, 5, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 5, 4, 6, 6, 7, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 4, 2, 3, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -367, -2, -1, -3, -4, -5, -6, -48, -60,
	-62, -63, -27, -7, -59, -41, -42, -44, -50, -55,
	-56, -57, -58, -68, -22, -21, -20, -19, 12, -8,
	-9, -339, -10, -180, -181, -182, -368, -28, -29, -30,
	-32, -33, -34, -35, -36, -37, -38, -31, -40, -39,
	203, -43, 58, -45, -46, -47, -51, -52, -53, -54,
	316, 322, 371, 380, -69, -71, -23, -24, -25, -26,
	199, 14, 445, -11, -14, -12, -15, -13, -17, -18,
	-16, 221, 220, 37, 283, 284, 320, 219, 200, 13,
	132, 133, 135, 136, 30, -70, 64, 201, -72, 10,
	491, -80, 38, -103, -177, 67, -165, -168, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 299, 442, 238, 262, 265, 272,
	132, 151, 145, 173, 165, 140, 242, 243, 74, 135,
	402, 84, 387, 370, 138, 257, 259, 261, 264, 244,
	161, 156, 256, 240, 154, 245, 39, 246, 178, 247,
	248, 447, 383, 298, 389, 269, 368, 155, 384, 260,
	386, 180, 184, 394, 322, 149, 150, 391, 396, 177,
	218, 42, 444, 230, 397, 182, 176, 172, 405, 273,
	271, 175, 148, 171, 241, 47, 186, 185, 187, 364,
	365, 366, 367, 249, 250, 310, 393, 168, 157, 302,
	141, 22, 400, 225, 388, 323, 251, 266, 274, 181,
	183, 232, 237, 446, 236, 270, 398, 153, 229, 258,
	224, 401, 142, 316, 325, 252, 136, 263, 395, 404,
	46, 338, 147, 139, 215, 133, 234, 239, 253, 254,
	255, 276, 275, 267, 169, 231, 174, 159, 146, 170,
	134, 233, 403, 339, 490, 300, 353, 167, 164, 235,
	208, 399, 390, 137, 357, 340, 162, 277, 487, 488,
	489, 311, 297, 278, 279, 160, 222, 382, 280, 282,
	363, -43, -9, -8, -70, -71, -184, 23, 368, -49,
	369, 203, 64, -177, -5, -4, -41, -68, -183, -177,
	283, -183, 206, -177, 236, 352, -285, 211, -252, -227,
	237, -251, -228, -254, -229, 31, 199, 201, 200, 233,
	14, 320, 207, 12, 10, 321, 219, 24, 25, 27,
	13, 322, 324, 325, 328, 329, 330, 41, 333, 334,
	67, 70, 244, 244, -85, -86, -145, 19, 6, 7,
	8, 9, -287, 299, 353, 236, -221, -219, 280, 331,
	216, 215, 85, 407, 205, -351, -352, 196, 197, 198,
	-341, 439, -340, -177, 440, -163, -369, -284, 390, 389,
	-188, 388, 381, 392, 383, 199, 84, 166, 163, 207,
	391, 42, 394, 395, 384, 299, 353, -351, 137, 134,
	-239, 137, 90, 142, 141, -239, 236, 40, -245, 363,
	-244, -246, 394, 395, 405, 68, 69, 393, -163, -177,
	84, -86, -145, -85, -69, -71, -339, 299, 353, 236,
	207, 206, 208, 407, 283, -286, -347, 31, -291, 193,
	194, 195, 32, 33, -1, -92, 228, -103, 130, -86,
	-85, -86, -157, -177, 370, 100, -49, -49, 369, -342,
	-343, -344, -346, 203, 369, 368, 130, 15, -183, 62,
	-103, -228, 236, -252, -227, 35, 61, 131, 209, 131,
	61, 64, 318, 299, 353, 319, 407, 206, 331, 208,
	236, 332, 299, 353, 206, 208, 407, 236, 299, 206,
	208, 353, 236, 332, 381, 382, 208, 26, 323, 326,
	327, 382, -301, 405, -301, -64, 38, -88, 21, -72,
	-71, 20, 31, 32, 31, 32, 31, 32, 31, 32,
	-349, 206, 439, -217, 211, -217, -217, 207, -217, 206,
	-353, 144, 131, -341, -91, 64, -187, 108, -187, -370,
	15, 110, 235, 234, 385, 382, -261, 386, 387, -188,
	-187, -187, -188, 206, 208, 407, 30, 30, -285, -285,
	-354, 210, 398, 445, 140, 141, 142, -249, 31, 40,
	362, -227, 236, 131, 100, 23, -247, 100, 111, -246,
	-246, -246, -247, -247, -123, 40, -176, 127, -177, 70,
	-123, 40, 130, -87, -88, -72, -71, 65, 65, -285,
	-285, -285, -285, -285, -285, -285, -183, -73, -74, 118,
	-201, -177, 91, 227, -203, 67, -196, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 84, 368, 310, 159, 353, 162, 311, 160,
	222, 363, -197, -199, -320, -314, -195, 64, 116, 117,
	124, 92, -198, -274, 35, 94, 415, -152, -153, -154,
	-155, -156, -315, -313, 70, 75, 78, 81, 82, 80,
	79, 158, 77, 71, 129, -71, -334, -166, -290, -296,
	205, -294, 163, 12, 122, 127, -297, 484, 69, 68,
	304, 305, 306, 407, 301, 307, 211, 52, 308, 309,
	312, 414, 313, 53, 314, 303, 226, 315, 179, 418,
	417, 419, 411, 408, 406, 409, 410, 412, 413, -73,
	-292, 43, -68, 64, 30, 64, -177, -87, -64, -88,
	130, 75, 70, -49, 65, 131, -345, 81, 82, -348,
	177, 169, -177, -61, 70, -3, -4, -5, -6, -27,
	-41, -68, -316, -314, 64, 31, 362, 61, 15, -253,
	206, 407, 317, 232, 208, 299, -251, -235, -232, -230,
	-176, -228, -231, -230, -256, -157, 382, -65, 372, -65,
	486, -64, -201, -177, -84, -83, -201, 208, -217, -356,
	67, 91, -236, -233, -230, -227, -175, 67, 68, 69,
	-177, -217, -354, -340, 34, -90, -177, -141, 16, -199,
	-141, -103, -187, -187, -189, -370, -185, -370, 382, -141,
	-141, -261, -186, -177, -186, -217, -356, -236, -77, -75,
	-78, -79, -81, -144, -146, -103, 64, 399, 400, 138,
	141, 140, 7, -250, 362, 31, -227, -244, -240, 70,
	363, -231, -248, 61, 127, -298, -201, 40, -247, -247,
	-247, -248, -248, 126, -177, -64, -356, -235, -227, -177,
	-105, -103, -105, -178, -175, -168, -140, 131, -139, 15,
	-172, 90, 87, 88, 89, -177, 34, 70, 130, -201,
	107, -212, 100, 101, 102, 103, 104, 105, 106, 64,
	64, 64, 64, 64, 64, 64, 64, -210, 64, 64,
	64, 64, 64, 64, 64, -210, 64, 64, 64, 64,
	64, 70, 70, 70, 64, 113, 112, 123, 116, 117,
	118, 119, 120, 121, 122, 114, 115, 110, 91, 108,
	109, 93, -71, -201, -207, -199, -199, -199, -199, -274,
	-205, -201, 64, -201, 64, 64, 64, -295, 64, 64,
	-209, -210, 64, 64, 64, -199, 64, 64, -140, -293,
	-208, -333, 485, -94, 65, -89, -177, -331, -332, -89,
	-93, -177, -64, -64, -170, -171, -162, -167, -174, -175,
	-168, 204, 31, 90, 34, 36, 304, 336, 93, 127,
	20, 94, 163, 126, 306, 415, 305, 199, 56, 417,
	419, 418, 408, 406, 355, 359, 361, 358, 407, 381,
	40, 14, 37, 220, 32, 33, 120, 201, 97, 98,
	223, 35, 221, 82, 23, 59, 15, 17, 18, 307,
	354, 211, 210, 110, 372, 207, 54, 12, 129, 38,
	107, 356, 50, 86, 52, 108, 21, 409, 410, 41,
	371, 380, 441, 227, 122, 308, 309, 57, 91, 362,
	80, 61, 87, 19, 55, 109, 202, 414, 53, 360,
	312, 314, 324, 439, 313, 205, 392, 10, 303, 416,
	30, 219, 51, 206, 96, 209, 81, 226, 6, 85,
	13, 58, 62, 411, 412, 413, 43, 95, 16, 315,
	445, 373, 374, 375, 376, 377, 378, 379, 188, 189,
	190, 191, 192, 268, 214, 212, 216, 217, 485, 486,
	193, 194, 294, 296, 166, 196, 197, 198, 228, 144,
	7, 341, 342, 343, 344, 346, 347, 348, 349, 350,
	351, 352, 23, -49, -343, 130, 131, -90, -253, -234,
	-231, -255, 118, 67, -241, 131, 445, 492, 68, 209,
	-365, -364, 354, 65, 131, -302, 210, 414, 70, 493,
	-302, 70, 131, 22, 130, 131, -82, 36, 37, -103,
	211, -103, -359, 341, 35, -366, 131, 40, -364, -220,
	62, -215, -216, -214, -218, 40, -103, 15, -76, -104,
	-177, 64, 65, 131, -201, -141, -141, -141, -187, -178,
	-189, -184, -189, -185, 130, -164, -177, -359, -366, 30,
	-147, -148, -149, -150, 50, 54, 56, 51, 52, 53,
	57, 30, 131, -371, 34, -173, -179, 34, -174, 70,
	-175, -168, -69, -71, 139, 142, 142, 141, -227, 209,
	64, 100, -248, -248, -248, 40, -176, 61, 131, -141,
	-74, -75, -77, -201, -201, -201, -201, -177, 70, -177,
	118, 80, 91, 297, 81, 82, -196, -213, 31, 278,
	279, -206, -207, -201, -151, 32, 31, -151, -151, -201,
	-151, 118, -207, -207, 65, 75, -335, -336, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 308,
	303, 309, 307, 301, 315, 310, 311, 162, 437, 438,
	431, 432, 433, 434, 435, 436, -151, -151, -151, -151,
	-151, -201, -350, 295, 294, 296, -151, -151, -151, -151,
	-206, -197, -197, -197, -197, -197, -197, -197, -197, -197,
	-197, -197, -197, -204, -211, -274, 64, 110, 108, 109,
	93, -199, -197, -197, 65, 131, -338, -337, 95, -201,
	-335, -206, -201, -206, -206, 65, 65, -207, -206, -197,
	-151, 70, -141, 131, 64, 65, 131, 43, 130, 131,
	100, 65, 131, 130, 370, -177, -314, 65, -255, 131,
	209, 130, 130, -232, 322, -176, -234, 20, 445, -157,
	38, 70, 38, -305, 386, -201, -201, -177, -83, -91,
	91, 64, -361, 388, 343, -169, 100, -194, -193, 300,
	41, -288, 363, 349, 350, -233, 236, 61, 289, 290,
	291, 292, -214, -163, 126, 247, 64, -103, -76, -177,
	15, 131, -355, 130, -1, -177, -141, -187, -187, -189,
	-177, -361, -194, -238, -237, -157, -78, -78, -78, -78,
	50, 50, 50, 55, 50, 55, 50, -149, -238, -81,
	-177, -179, 65, 142, -234, -190, 70, -240, -103, -103,
	-143, 17, 130, 80, 297, 81, 82, -274, 65, 131,
	-201, -201, -201, 34, -207, 65, 65, 65, 65, 15,
	-201, -201, -201, -201, -201, 65, 15, 15, -201, -201,
	-201, -201, -201, 65, -207, -204, -199, -197, -197, -202,
	223, 90, -201, -200, -337, 97, -201, 131, 62, 65,
	15, 65, 65, 65, 62, 65, 131, -201, 131, -143,
	-208, -300, -299, -298, 43, -68, -89, -293, -177, -332,
	-298, -177, -170, -167, -175, -168, 75, 15, -231, -227,
	118, 118, 67, 323, -241, 70, 342, 70, 206, 100,
	206, -311, 378, 373, 375, 130, 34, 35, -98, -99,
	-100, -106, -101, -157, -192, -102, 214, 212, 216, -328,
	85, 217, 268, 86, 207, -362, 74, -357, 70, -363,
	74, 344, 129, 302, 40, 345, 346, 360, 298, 75,
	75, 351, -358, 67, -103, -169, -169, -169, -98, -92,
	62, 130, -75, -104, -177, 118, 65, -141, -141, -187,
	-362, -363, -141, 131, 100, -96, -95, 61, 62, -97,
	61, -95, 50, 50, -141, -91, 65, -142, 18, 20,
	-177, 118, -201, 65, 65, 65, -107, -109, 338, 339,
	-113, -110, -112, -111, -115, -114, 163, 164, 127, 167,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	30, 179, 222, 159, 160, 161, 162, 180, 145, 165,
	443, 188, 146, 189, 147, 190, 148, 191, 149, 150,
	192, 151, 154, 155, 156, 153, 65, -201, 65, 65,
	65, 65, 65, -201, -201, 15, 65, 65, 65, 65,
	65, -202, 90, -199, -196, 65, 98, -201, 96, -108,
	-114, 127, 163, 222, 162, 161, 159, 338, 339, -123,
	-201, -123, -197, 65, 70, -142, 65, 131, -293, -227,
	-241, 363, -103, 70, -103, -282, 487, -309, 373, 20,
	20, -68, -103, 65, 131, -109, -102, -177, 86, -327,
	-328, -217, -327, 86, 64, 70, -360, 354, 70, 70,
	75, 40, 75, 129, 347, -289, 64, -123, -125, -176,
	127, 70, 65, -173, -75, -177, -141, -355, 130, -141,
	-86, -237, -298, -201, 64, -201, -201, -207, 65, -116,
	150, 149, -116, -281, 339, 338, -275, -277, 64, -276,
	64, -276, -275, -275, 64, 64, -275, -278, 64, -278,
	-275, -279, 64, -279, -280, 64, -279, 65, 65, 65,
	-201, -196, -201, 65, -275, -276, -275, -278, -275, -116,
	-116, 65, 65, 23, 65, 65, 65, -298, -67, -303,
	-261, 494, 131, -67, -130, 488, 70, 20, 70, -307,
	70, -91, -121, -122, -138, 336, 238, -218, 242, 74,
	243, 370, 244, 207, 246, 247, 248, 218, 249, 250,
	251, 363, 252, 253, 254, 255, 319, 6, 285, -100,
	-120, -119, -117, 80, 91, 40, 336, -118, 74, 126,
	261, 239, 262, -137, -191, 61, 212, 85, 86, 324,
	-192, -324, -325, -177, -325, -177, -324, -324, -217, -201,
	20, 445, 301, 40, 75, 40, 348, -222, -224, -157,
	64, -66, -65, -141, -141, -87, -90, -283, 340, 75,
	75, -159, 70, -159, 75, 75, 75, 65, -201, -310,
	378, -306, -304, 373, 374, 375, 376, 70, -160, 489,
	75, 70, 375, 34, -257, 228, 131, -138, -169, -169,
	-163, 126, -169, -169, -169, -169, 245, 245, -169, -169,
	-169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
	-169, -169, 64, -117, 80, -197, 70, -125, -126, 40,
	260, 256, -127, 40, 240, 241, -129, 64, 268, 13,
	86, 86, -103, 64, 62, 277, 64, 64, 64, -325,
	65, 70, 342, 70, 301, 65, 131, -275, -201, -67,
	-86, 65, 65, 65, 65, 131, 65, 65, 65, 131,
	65, 131, 65, -312, 210, -308, 377, -304, 20, 375,
	20, 20, 100, 64, 20, -68, 20, -138, 75, 75,
	-169, -169, 75, 70, 70, 70, -169, -169, 75, 70,
	-179, 75, 75, 75, 75, 40, 70, -128, 40, 256,
	260, 257, 258, 259, 75, 40, 75, 40, 75, 40,
	-177, 64, -329, -330, 70, 75, 64, -294, -223, 64,
	-222, -326, 289, 290, 291, 293, 292, -326, -222, -222,
	-222, 64, -243, -242, 269, 91, 363, -225, -224, -82,
	65, -87, 70, 75, 75, -319, 64, 75, -309, 20,
	-307, 20, -307, -307, 70, -161, -177, -307, -258, 270,
	271, -259, -265, 273, -123, -123, 70, 70, -124, 239,
	-105, 65, 131, 100, 65, -201, -209, -132, -131, 441,
	-222, 65, 65, 65, 65, -222, 269, -226, 218, 74,
	445, 287, 288, -82, 65, 65, -323, 30, 65, -318,
	-317, -158, -313, -177, 378, 379, 70, -307, 494, 65,
	131, -263, 274, 64, -261, 64, -261, 86, 290, 240,
	241, 65, -330, 70, 65, -136, -134, -135, 61, 384,
	266, 267, 65, -225, -225, -225, -225, 65, -169, 70,
	286, -322, -321, -320, 65, 131, 130, -177, -260, 275,
	75, -197, 64, -197, 64, -262, 272, 64, -242, -135,
	61, -134, 61, 14, 13, -137, 75, -175, 131, 100,
	-317, -177, -267, 64, 20, 65, -256, 65, -256, 64,
	100, -197, -133, 263, 264, 30, 141, -133, -321, 40,
	-201, 130, -268, -266, 228, -259, 65, 65, -256, 75,
	65, 80, 40, 265, -177, 65, 131, 67, -264, 276,
	65, -266, -269, 43, 75, -273, -270, 64, -138, 230,
	110, -273, -138, -272, -271, 275, 231, 64, 65, 131,
	67, 227, 64, -207, -271, -270, -207, 65, 65,
}

var yyDef = [...]int{
	24, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 554, 555, 556, 557, 0, 360,
	361, 0, 340, 0, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 260, 261,
	0, 209, 205, 184, 185, 186, 144, 145, 146, 147,
	266, 0, 0, 0, 430, -2, 558, 559, 560, 561,
	-2, 373, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 249, 250, 251, 246, 247, 248, -2, 0, 373,
	198, 0, 189, 189, 0, 450, 0, 0, 461, 483,
	24, 408, 0, 413, 738, 774, 775, 776, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 210, 362, 363, 450, 450, 232, 0, 1358, 236,
	0, 0, 0, 337, 228, 229, 230, 231, 0, 546,
	0, 225, 0, 204, 1416, 0, 0, 0, 0, 0,
	0, 90, 600, 92, 602, 96, 103, 0, 0, 108,
	109, 112, 113, 114, 115, 116, 0, 120, 0, 122,
	125, 0, 127, 0, 130, 131, 132, 0, 142, 143,
	603, 604, 70, 70, -2, 0, 0, 0, 466, 469,
	472, 475, 564, 629, 629, 629, 0, 629, 0, 648,
	606, 607, 608, 627, 628, 378, 374, 375, 376, 377,
	438, 0, 440, 443, 320, 320, 0, 0, 311, 312,
	0, 329, 320, 320, 329, 0, 1144, 0, 0, 303,
	304, 305, 309, 310, 330, 266, 266, 380, 199, 200,
	188, 190, 0, 194, 0, 187, 1416, 0, 158, 1482,
	163, 0, 1365, 1430, 1380, 0, 0, 1398, 0, 182,
	-2, 445, 0, 451, 0, 450, 0, 266, 266, 266,
	266, 266, 266, 266, 0, 0, 0, 484, 485, 480,
	481, 482, 486, 487, 3, 0, 0, 412, 0, 445,
	-2, 0, 233, 777, 0, 0, 237, 238, 0, 0,
	252, 0, 255, 241, 242, 243, 0, 0, 227, 0,
	0, 206, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 100, 97, 104, 107, 117, 124, 0, 135,
	137, 140, 98, 105, 110, 111, 118, 138, 99, 101,
	102, 106, 139, 141, 119, 123, 136, 121, 126, 128,
	129, 134, 0, 71, 0, 433, 0, 414, 0, 463,
	465, 0, 467, 468, 470, 471, 473, 474, 476, 477,
	0, 629, 565, 0, 0, 0, 0, 0, 0, 629,
	380, 379, 0, 439, 0, 0, 492, 0, 492, 0,
	325, 326, 320, 320, 313, 322, 0, 327, 328, 0,
	492, 492, 0, 0, 0, 629, 1145, 1146, 0, 0,
	0, 381, 0, 0, 192, 0, 197, 148, 153, 151,
	152, 154, 0, 0, 0, 0, 0, 180, 181, 0,
	0, 0, 0, 0, 171, 174, 732, 733, 597, 598,
	175, 176, 0, 414, 446, 462, 464, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 359, 500, 494, 496,
	541, 33, 0, 1028, 1029, 774, 1040, -2, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, -2, 1502, -2, -2, 1505,
	1506, 1507, 1509, -2, -2, -2, -2, -2, -2, 1516,
	-2, -2, -2, 1520, 1521, -2, -2, 1524, 1525, 1526,
	1527, 1528, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1482, 1049, 845, 846, 847, 848, 0, 0, 0,
	0, 0, 855, 856, 0, 869, 0, 862, 863, 864,
	865, 866, 45, 46, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 994, 832, 0, 0, 0, 979,
	0, 969, 0, 0, 0, 0, 0, 0, 47, 48,
	985, 987, 988, 990, 991, 992, 993, 996, 997, 998,
	1001, 1002, 1003, 1004, 1005, 1006, 1009, 1011, 1013, 981,
	982, 983, 984, 973, 974, 975, 976, 977, 978, 500,
	382, 400, 384, 0, 389, 0, 739, 414, 436, 414,
	0, 234, 0, 239, 0, 0, 254, 256, 257, 258,
	244, 245, 338, 223, 224, 216, 217, 218, 219, 220,
	221, 222, 226, 43, 0, 207, 208, 0, 0, 0,
	84, 85, 86, 87, 88, 89, 91, 75, 351, 353,
	589, 601, 0, 592, 0, 94, 133, 67, 0, 67,
	0, 434, 447, 33, 452, 453, 456, 0, 0, 0,
	567, 0, 264, 583, 0, 599, 621, 551, 552, 553,
	-2, 0, 0, 441, 0, 0, 528, 300, 0, 321,
	301, 492, 492, 492, 320, 0, 322, 0, 322, 316,
	317, 0, 331, 334, 332, 0, 0, 264, 505, 0,
	506, 507, 503, 530, 533, 536, 0, 201, 202, 0,
	0, 196, 0, 0, 155, 156, 157, 164, 159, 161,
	0, 0, 165, 177, 178, 179, 406, 407, 0, 0,
	0, 169, 170, 0, 183, 432, 349, 350, 354, 0,
	356, 736, 357, 358, 547, 548, 492, 0, 501, 0,
	497, 0, 0, 0, 0, 542, 0, 544, 0, 1027,
	0, 0, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1019,
	1015, 1015, 1015, 0, 1015, 0, 0, 954, 0, 0,
	1015, 1015, 1015, 1015, 1015, 955, 0, 1015, 1015, 1015,
	1015, 963, 968, 962, 1019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1021, 0, 851, 852, 853, 854, 857,
	0, 870, 0, 0, 1019, 1019, 1019, 957, 0, 0,
	959, 970, 0, 1019, 0, 967, 1015, 0, 492, 383,
	397, 0, 401, 0, 0, 393, 395, 388, 390, 0,
	0, 410, 435, 437, 778, 0, 1151, -2, 1153, -2,
	-2, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 0, 240, 253, 0, 0, 0, 0, 78,
	586, 0, 79, 83, 73, 0, 0, 0, 591, 0,
	588, 593, 0, 93, 0, 0, 68, 69, 643, 0,
	0, 416, 0, 0, 0, 0, 455, 457, 458, 443,
	0, 0, 573, 1147, 630, 268, 0, 0, 585, 0,
	0, 626, -2, 633, 0, 639, 0, 0, 0, 367,
	371, 24, 444, 0, 493, 302, 306, 307, 492, 323,
	320, 324, 320, 322, 0, 333, 336, 573, 268, 0,
	0, 0, 0, 0, 521, 0, 0, 520, 0, 0,
	0, 0, 0, 0, 534, 535, 537, 0, 539, 540,
	549, 550, 0, 450, 203, 191, 193, 0, 150, 0,
	0, 0, 166, 167, 168, 172, 173, 0, 0, 490,
	495, 502, 505, 1023, 1024, 1025, 1026, 543, 545, 34,
	498, 1030, 0, 1032, 1034, 1036, 1038, 0, 1054, -2,
	-2, 0, 1020, 1021, 0, 1016, 1017, 0, 0, 0,
	0, 0, 0, 0, 971, 0, 0, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 0, 0, 0, 0,
	0, 0, 0, 920, 921, 922, 0, 0, 0, 0,
	0, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 1041, 1052, 1053, 0, 0, 0, 0,
	0, 1050, 1045, 0, 849, 0, 867, 871, 0, 0,
	1014, 0, 1021, 0, 0, 980, 958, 0, 0, 0,
	0, 0, 490, 400, 402, 0, 0, 400, 0, 0,
	0, 409, 0, 0, 0, 339, 44, 259, 0, 0,
	0, 0, 0, 352, 0, 590, 75, 0, 0, 95,
	0, 0, 0, 420, 0, 448, 449, 34, 454, 0,
	0, 740, 576, 574, 575, 0, 1148, 580, 269, 270,
	271, 272, 0, 0, 0, 584, 0, 0, 622, 623,
	624, 625, 634, 1147, 1147, 1147, 740, 408, 0, -2,
	0, 0, 369, 0, 0, 529, 314, 492, 492, 320,
	335, 576, 580, 492, 213, 0, 524, 518, 0, 511,
	522, 523, 514, 0, 516, 0, 512, 513, 492, 504,
	443, 538, 532, 195, 149, 0, 288, 160, 355, 737,
	488, 0, 0, 1031, 1033, 1035, 1037, 1039, 907, 0,
	0, 0, 0, 0, 0, 896, 890, 891, 972, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 1042, 1050, 1046, 0, 1043,
	0, 0, 1022, 0, 872, 0, 0, 0, 0, 908,
	0, 912, 956, 960, 0, 964, 0, 0, 0, 488,
	398, 0, 403, 404, 400, 387, 394, 386, 396, 391,
	392, 411, 779, 1152, 1149, 1150, 235, 0, 587, 75,
	80, 81, 82, 76, 74, 594, 0, 596, 0, 0,
	0, 422, 56, 0, 0, 0, 0, 0, 0, 741,
	742, 744, 745, 0, 0, 747, 802, 0, 756, 629,
	756, 0, 0, 758, 759, 566, 0, 0, 569, 578,
	0, 0, 0, 274, 275, 0, 0, 0, 287, 283,
	284, 285, 265, 579, 0, 0, 0, 0, 0, 536,
	0, 0, 492, 368, 371, 372, 442, 318, 315, 492,
	262, 263, 450, 0, 0, 508, 525, 0, 0, 509,
	0, 510, 515, 517, 212, 531, 162, 478, 0, 0,
	35, 499, 1022, 892, 893, 894, 0, 874, 886, 886,
	1139, 1079, 1080, 1081, 1126, 1083, 1130, 1130, 1126, 1126,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 0,
	0, 1122, 1102, 1126, 1128, 1128, 1126, 1123, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1133, 1133, 1136, 1133, 895, 0, 914, 897,
	898, 901, 899, 0, 0, 0, 913, 902, 903, 889,
	1018, 1044, 0, 1051, 1047, 850, 858, 868, 0, 0,
	877, 1126, 1130, 880, 1126, 1128, 1126, 886, 886, 0,
	0, 0, 0, 900, 0, 479, 399, 0, 385, 77,
	72, 595, 58, 0, 58, 424, 0, 421, 0, 0,
	0, 562, 443, -2, 0, -2, 746, 803, 768, 768,
	757, 768, 768, 629, 0, 577, 568, 0, 581, 582,
	0, 276, 277, 0, 280, 286, 0, 635, 636, 734,
	735, 637, 0, 492, 492, -2, 365, 370, 0, 319,
	445, 214, 215, 526, 0, 519, 489, 491, 859, 875,
	887, 888, 876, 1142, 1140, 1141, 1082, 1127, 0, 1107,
	0, 1108, 1109, 1110, 0, 0, 1103, 1104, 0, 1105,
	1106, 1098, 0, 1099, 1100, 0, 1101, 911, 916, 917,
	0, 1048, 873, 860, 878, 879, 881, 882, 883, 884,
	885, 861, 909, 0, 961, 965, 919, 405, 26, 52,
	0, 644, 0, 25, 426, 0, 423, 0, 417, 419,
	66, 0, 649, -2, 688, 1147, 1147, 0, 1147, 1147,
	1147, 1147, 0, 0, 1147, 1147, 1147, 1147, 1147, 1147,
	1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 0, 743,
	770, -2, 782, 784, 0, 0, 787, 788, 0, 0,
	0, 0, 824, 794, 0, 0, 0, 1066, 1067, 0,
	801, 0, 760, 769, 0, 769, 0, 0, 768, 0,
	0, 0, 273, 278, 0, 281, 282, 0, 617, 1126,
	0, 641, 58, 450, 366, 211, 0, 1078, 1143, 0,
	0, 0, 1124, 0, 0, 0, 0, 918, 0, 49,
	54, 59, 60, 0, 0, 0, 0, 0, 415, 0,
	425, 57, 0, 0, 640, 0, 638, 690, 0, 0,
	1147, 1147, 0, 0, 0, 0, 1147, 1147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 785, 786, 789, 790, 791, 829,
	830, 831, 792, 826, 827, 828, 793, 0, 0, 0,
	1064, 1065, 822, 0, 0, 0, 0, 0, 0, 0,
	754, 570, 0, 572, 279, 610, 0, 456, 0, 642,
	445, 527, 1132, 1131, 1120, 0, 1121, 1129, 1134, 0,
	1137, 0, 910, 36, 0, 56, 0, 61, 0, 0,
	0, 0, 0, 0, 0, 563, 684, 689, 691, 692,
	0, 0, 695, 696, 697, 698, 0, 0, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 726, 727,
	728, 729, 730, 731, 711, 712, 713, 714, 715, 716,
	723, 0, 0, 720, 0, 0, 0, 969, 817, 0,
	0, 761, 763, 764, 765, 766, 767, 762, 0, 0,
	0, 0, 753, 755, 798, 0, 571, 609, 618, 619,
	456, 364, 1125, 0, 0, 27, 0, 0, 53, 0,
	62, 0, 64, 65, 0, 0, 428, 418, 673, 0,
	0, 679, 0, 685, 693, 694, 699, 700, 717, 0,
	0, 719, 0, 0, 825, 0, 797, 805, 818, 0,
	0, 610, 610, 610, 610, 0, 799, 611, 1147, 0,
	0, 615, 616, 620, 1135, 1138, 646, 0, 37, 0,
	39, 41, 42, 771, 50, 51, 55, 63, 645, 427,
	0, 651, 0, 0, 0, 0, 0, 682, 0, 724,
	725, 718, 721, 722, 795, 804, 806, 807, 0, 819,
	820, 821, 823, 748, 749, 750, 751, 0, 0, 613,
	0, 28, 29, 0, 38, 0, 0, 429, 653, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 796, 808,
	0, 809, 0, 0, 0, 752, 612, 614, 0, 0,
	40, 772, 650, 0, 684, 675, 0, 677, 0, 0,
	0, 0, 810, 812, 813, 0, 0, 811, 30, 31,
	32, 0, 0, 655, 0, 671, 676, 678, 0, 683,
	681, 814, 816, 815, 773, 654, 0, 667, 652, 0,
	680, 656, -2, 0, 672, 657, -2, 0, 665, 0,
	0, 658, 666, 0, 661, 0, 0, 0, 660, 0,
	-2, 668, 0, 0, 662, -2, 0, 670, 669,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 121, 113, 3,
	64, 65, 118, 116, 131, 117, 130, 119, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 491,
	101, 100, 102, 3, 492, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 123, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 493, 112, 494, 124,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 93, 94,
	95, 96, 97, 98, 99, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 114, 115, 120, 122, 125, 126,
	127, 128, 129, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:544
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:550
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:577
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:581
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:587
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:599
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:614
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:620
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:624
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:630
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:637
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:646
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:650
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:654
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:667
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:673
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:682
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:693
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:697
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:703
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:707
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:713
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:717
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:723
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:747
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:766
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:770
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:774
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:783
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:791
		{
			yyVAL.str = ""
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:795
		{
			yyVAL.str = yyDollar[3].str
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:800
		{
			yyVAL.str = "\n"
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:804
		{
			yyVAL.str = yyDollar[3].str
		}
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:813
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:837
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:841
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:847
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:853
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:871
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:888
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:911
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:915
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:919
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:928
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:958
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:985
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1011
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1017
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1023
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1030
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1047
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1051
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1055
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1059
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1063
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1067
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1074
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1078
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1084
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1100
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1104
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1110
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1114
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1118
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1146
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1150
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1154
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1178
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1182
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1186
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1226
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1230
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1234
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1310
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1316
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1328
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1340
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1346
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1350
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1354
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1360
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1366
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1370
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1377
		{
			yyVAL.str = yyDollar[3].str
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1383
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1387
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1393
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1401
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1410
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1426
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1449
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1479
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1508
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1517
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1521
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1525
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1531
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1535
		{
			yyVAL.str = yyDollar[1].str
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1542
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1559
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1564
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1568
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1572
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1576
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1580
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1584
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1588
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1596
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1602
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1614
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1619
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1624
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1637
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1643
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1650
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1657
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1674
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1700
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1706
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1718
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1753
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1763
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1787
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1795
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1843
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1847
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1859
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1864
		{
			yyVAL.str = "true"
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1865
		{
			yyVAL.str = "false"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1866
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1871
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1894
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1909
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1914
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1918
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1927
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1947
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1955
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1959
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1963
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1967
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1971
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2009
		{
			yyVAL.item = nil
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2014
		{
			yyVAL.item = nil
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.ShowTarget{Target: yyDollar[2].str, Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.ShowTarget{Target: "charset", Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2070
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2133
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2143
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2172
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2177
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2181
		{
			yyVAL.str = yyDollar[2].str
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2187
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2215
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2225
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2229
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2238
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2246
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2283
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2287
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2375
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2399
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2403
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2409
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2414
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2421
		{
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2423
		{
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2426
		{
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2435
		{
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2439
		{
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2453
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2460
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2466
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2474
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2481
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2488
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2511
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2515
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2530
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2534
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2540
		{
			yyVAL.str = yyDollar[1].str
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2544
		{
			yyVAL.str = yyDollar[3].str
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2550
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2554
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2560
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2565
		{
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2580
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2596
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2602
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2606
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2612
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2616
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2652
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2670
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2695
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2702
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2706
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2719
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2723
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2728
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2732
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2739
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2744
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2757
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2765
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2790
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2799
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2803
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2809
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2821
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2830
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2836
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2840
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2844
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2853
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2859
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2865
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2869
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2884
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2888
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2905
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2951
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2967
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2992
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3016
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3024
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3061
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3109
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3118
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3124
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3128
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3134
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3138
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3142
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3146
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3151
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3159
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3173
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3177
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3190
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3228
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3232
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3242
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3246
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3250
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3254
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3264
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3270
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3276
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3280
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3284
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3294
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3310
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3314
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3320
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3342
		{
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3343
		{
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3347
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3359
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3367
		{
			yyVAL.str = yyDollar[2].str
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3376
		{
			yyVAL.str = ""
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3380
		{
			yyVAL.str = yyDollar[1].str
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3384
		{
			yyVAL.str = yyDollar[2].str
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3388
		{
			yyVAL.str = yyDollar[1].str
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3392
		{
			yyVAL.str = yyDollar[2].str
		}
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3447
		{
		}
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3470
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3480
		{
			yyVAL.str = yyDollar[1].str
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3486
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3493
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3499
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3507
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3513
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3520
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3528
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3534
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3555
		{
			yyVAL.str = yyDollar[1].str
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3560
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3566
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3574
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3680
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3684
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3690
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3700
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3704
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3710
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3737
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3743
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3756
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3769
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3778
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3782
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3805
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3809
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3813
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3817
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3823
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3846
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3868
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3880
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3884
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3890
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3894
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3900
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3905
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3910
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3914
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3918
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3922
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3926
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3932
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3946
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3950
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3959
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3965
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3969
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3975
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3979
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3983
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3988
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3992
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3998
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4009
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4020
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4027
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4034
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4045
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4058
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4082
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4096
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4109
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4115
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4119
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4148
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4154
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4158
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4164
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4171
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4180
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4184
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4193
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4198
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4202
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4207
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4211
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4221
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4225
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4236
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4244
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4252
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4260
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4291
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4295
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4313
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4319
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4323
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4327
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4333
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4341
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4345
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4349
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4353
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4357
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4365
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4369
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4373
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4377
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4381
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4385
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4389
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4397
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4401
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4413
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4417
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4425
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4429
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4437
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4441
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4445
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4452
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4456
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4462
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4467
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4471
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4475
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4481
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4489
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4497
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4501
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4515
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4519
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4528
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4533
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4539
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4546
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4550
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4556
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4560
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4566
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4576
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4591
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4600
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4632
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4642
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4650
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4656
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4660
		{
			yyVAL.str = yyDollar[1].str
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4670
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4676
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4682
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4696
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4703
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4709
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4713
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4717
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4728
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4732
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4736
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4745
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4751
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4755
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4761
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4769
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4773
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4777
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4781
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4785
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4789
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4793
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4801
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4805
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4809
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4813
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4828
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4832
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4837
		{
			yyVAL.str = ""
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4841
		{
			yyVAL.str = yyDollar[1].str
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4847
		{
			yyVAL.str = ""
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4851
		{
			yyVAL.str = yyDollar[2].str
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4869
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4876
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4883
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4906
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4912
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4918
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4934
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4939
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4946
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4950
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4954
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4963
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4968
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4972
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4988
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4994
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4998
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5022
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5030
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5034
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5038
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5042
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5048
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5052
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5056
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5060
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5064
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5068
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5072
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5076
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5080
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5084
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5088
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5092
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5097
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5105
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5109
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5113
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5122
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5126
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5130
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5134
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5138
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5147
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5156
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5162
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5166
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5172
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5182
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5229
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5242
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5254
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5298
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5315
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5330
		{
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5336
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5345
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5353
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5388
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5406
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5415
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5424
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5433
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5442
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5451
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5460
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5476
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5484
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5508
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5517
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5534
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5543
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5551
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5559
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5568
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5578
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5635
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5647
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5661
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5669
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5683
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5695
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5703
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5714
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5723
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5732
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5740
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5750
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5758
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5766
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5780
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5790
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5809
		{
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5811
		{
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5852
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5862
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5866
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5870
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5885
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5895
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5902
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5906
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5910
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5918
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5922
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5926
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5930
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5940
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5972
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5979
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5983
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5987
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5991
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5995
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5999
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6003
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6007
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6017
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6023
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6027
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6038
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6042
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6048
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6052
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6056
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6060
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6064
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6068
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6072
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6078
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6082
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6086
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6090
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6100
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6113
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6118
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6122
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6126
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6130
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6144
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6148
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6168
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6179
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6184
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6202
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6226
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6239
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6265
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6278
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6291
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6304
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6317
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6330
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6343
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6356
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6371
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6394
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6431
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6479
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6496
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6508
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6523
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6543
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6579
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6592
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6618
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6631
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6643
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6727
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6739
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6752
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6765
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6805
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6810
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6816
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6823
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6827
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6832
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6836
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6842
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6855
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6885
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6894
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6898
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6902
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6908
		{
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6910
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6920
		{
			yyVAL.str = ""
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6924
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const PROPERTIES = 57615
const PARSER = 57616
const VISIBLE = 57617
const INVISIBLE = 57618
const BTREE = 57619
const HASH = 57620
const RTREE = 57621
const BSI = 57622
const ZONEMAP = 57623
const LEADING = 57624
const BOTH = 57625
const TRAILING = 57626
const UNKNOWN = 57627
const EXPIRE = 57628
const ACCOUNT = 57629
const UNLOCK = 57630
const DAY = 57631
const NEVER = 57632
const PUMP = 57633
const SECOND = 57634
const ASCII = 57635
const COALESCE = 57636
const COLLATION = 57637
const HOUR = 57638
const MICROSECOND = 57639
const MINUTE = 57640
const MONTH = 57641
const QUARTER = 57642
const REPEAT = 57643
const REVERSE = 57644
const ROW_COUNT = 57645
const WEEK = 57646
const REVOKE = 57647
const FUNCTION = 57648
const PRIVILEGES = 57649
const TABLESPACE = 57650
const EXECUTE = 57651
const SUPER = 57652
const GRANT = 57653
const OPTION = 57654
const REFERENCES = 57655
const REPLICATION = 57656
const SLAVE = 57657
const CLIENT = 57658
const USAGE = 57659
const RELOAD = 57660
const FILE = 57661
const TEMPORARY = 57662
const ROUTINE = 57663
const EVENT = 57664
const SHUTDOWN = 57665
const NULLX = 57666
const AUTO_INCREMENT = 57667
const APPROXNUM = 57668
const SIGNED = 57669
const UNSIGNED = 57670
const ZEROFILL = 57671
const ENGINES = 57672
const LOW_CARDINALITY = 57673
const ADMIN_NAME = 57674
const RANDOM = 57675
const SUSPEND = 57676
const ATTRIBUTE = 57677
const HISTORY = 57678
const REUSE = 57679
const CURRENT = 57680
const OPTIONAL = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const UNBOUNDED = 57684
const SECONDARY = 57685
const USER = 57686
const IDENTIFIED = 57687
const CIPHER = 57688
const ISSUER = 57689
const X509 = 57690
const SUBJECT = 57691
const SAN = 57692
const REQUIRE = 57693
const SSL = 57694
const NONE = 57695
const PASSWORD = 57696
const MAX_QUERIES_PER_HOUR = 57697
const MAX_UPDATES_PER_HOUR = 57698
const MAX_CONNECTIONS_PER_HOUR = 57699
const MAX_USER_CONNECTIONS = 57700
const FORMAT = 57701
const VERBOSE = 57702
const CONNECTION = 57703
const TRIGGERS = 57704
const PROFILES = 57705
const LOAD = 57706
const INFILE = 57707
const TERMINATED = 57708
const OPTIONALLY = 57709
const ENCLOSED = 57710
const ESCAPED = 57711
const STARTING = 57712
const LINES = 57713
const ROWS = 57714
const IMPORT = 57715
const MODUMP = 57716
const OVER = 57717
const PRECEDING = 57718
const FOLLOWING = 57719
const GROUPS = 57720
const DATABASES = 57721
const TABLES = 57722
const EXTENDED = 57723
const FULL = 57724
const PROCESSLIST = 57725
const FIELDS = 57726
const COLUMNS = 57727
const OPEN = 57728
const ERRORS = 57729
const WARNINGS = 57730
const INDEXES = 57731
const SCHEMAS = 57732
const NODE = 57733
const LOCKS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const LOCAL = 57747
const EVENTS = 57748
const PLUGINS = 57749
const CURRENT_TIMESTAMP = 57750
const DATABASE = 57751
const CURRENT_TIME = 57752
const LOCALTIME = 57753
const LOCALTIMESTAMP = 57754
const UTC_DATE = 57755
const UTC_TIME = 57756
const UTC_TIMESTAMP = 57757
const REPLACE = 57758
const CONVERT = 57759
const SEPARATOR = 57760
const TIMESTAMPDIFF = 57761
const CURRENT_DATE = 57762
const CURRENT_USER = 57763
const CURRENT_ROLE = 57764
const SECOND_MICROSECOND = 57765
const MINUTE_MICROSECOND = 57766
const MINUTE_SECOND = 57767
const HOUR_MICROSECOND = 57768
const HOUR_SECOND = 57769
const HOUR_MINUTE = 57770
const DAY_MICROSECOND = 57771
const DAY_SECOND = 57772
const DAY_MINUTE = 57773
const DAY_HOUR = 57774
const YEAR_MONTH = 57775
const SQL_TSI_HOUR = 57776
const SQL_TSI_DAY = 57777
const SQL_TSI_WEEK = 57778
const SQL_TSI_MONTH = 57779
const SQL_TSI_QUARTER = 57780
const SQL_TSI_YEAR = 57781
const SQL_TSI_SECOND = 57782
const SQL_TSI_MINUTE = 57783
const RECURSIVE = 57784
const CONFIG = 57785
const DRAINER = 57786
const MATCH = 57787
const AGAINST = 57788
const BOOLEAN = 57789
const LANGUAGE = 57790
const WITH = 57791
const QUERY = 57792
const EXPANSION = 57793
const ADDDATE = 57794
const BIT_AND = 57795
const BIT_OR = 57796
const BIT_XOR = 57797
const CAST = 57798
const COUNT = 57799
const APPROX_COUNT_DISTINCT = 57800
const APPROX_PERCENTILE = 57801
const CURDATE = 57802
const CURTIME = 57803
const DATE_ADD = 57804
const DATE_SUB = 57805
const EXTRACT = 57806
const GROUP_CONCAT = 57807
const MAX = 57808
const MID = 57809
const MIN = 57810
const NOW = 57811
const POSITION = 57812
const SESSION_USER = 57813
const STD = 57814
const STDDEV = 57815
const MEDIAN = 57816
const STDDEV_POP = 57817
const STDDEV_SAMP = 57818
const SUBDATE = 57819
const SUBSTR = 57820
const SUBSTRING = 57821
const SUM = 57822
const SYSDATE = 57823
const SYSTEM_USER = 57824
const TRANSLATE = 57825
const TRIM = 57826
const VARIANCE = 57827
const VAR_POP = 57828
const VAR_SAMP = 57829
const AVG = 57830
const ARROW = 57831
const ROW = 57832
const OUTFILE = 57833
const HEADER = 57834
const MAX_FILE_SIZE = 57835
const FORCE_QUOTE = 57836
const UNUSED = 57837
const BINDINGS = 57838
const DO = 57839
const DECLARE = 57840
const KILL = 57841

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

<<<<<<< HEAD
//line mysql_sql.y:8096
=======
//line mysql_sql.y:8099
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 84,
	21, 511,
	-2, 492,
	-1, 90,
	211, 692,
	-2, 738,
	-1, 107,
	42, 351,
	211, 351,
	238, 358,
	239, 358,
	406, 351,
	-2, 379,
	-1, 468,
	67, 1103,
	-2, 1611,
	-1, 469,
	67, 1121,
	-2, 1582,
	-1, 474,
	67, 1122,
	-2, 1610,
<<<<<<< HEAD
	-1, 494,
	67, 1035,
	-2, 1658,
	-1, 495,
	67, 1036,
	-2, 1657,
	-1, 496,
	67, 1037,
	-2, 1647,
	-1, 497,
=======
	-1, 495,
	67, 1035,
	-2, 1658,
	-1, 496,
	67, 1036,
	-2, 1657,
	-1, 497,
	67, 1037,
	-2, 1647,
	-1, 498,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	67, 1622,
	-2, 1642,
	-1, 498,
	67, 1623,
	-2, 1643,
<<<<<<< HEAD
	-1, 499,
	67, 1624,
	-2, 1649,
	-1, 500,
	67, 1625,
	-2, 1632,
	-1, 501,
	67, 1626,
	-2, 1640,
	-1, 502,
=======
	-1, 500,
	67, 1624,
	-2, 1649,
	-1, 501,
	67, 1625,
	-2, 1632,
	-1, 502,
	67, 1626,
	-2, 1640,
	-1, 503,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	67, 1627,
	-2, 1650,
	-1, 503,
	67, 1628,
	-2, 1651,
<<<<<<< HEAD
	-1, 504,
	67, 1629,
	-2, 1656,
	-1, 505,
	67, 1630,
	-2, 1661,
	-1, 506,
	67, 1631,
	-2, 1662,
	-1, 508,
	67, 1100,
	-2, 1463,
	-1, 515,
	67, 1109,
	-2, 1489,
	-1, 519,
	67, 1113,
	-2, 1528,
	-1, 520,
	67, 1114,
	-2, 1606,
	-1, 528,
	67, 1124,
	-2, 1591,
	-1, 530,
	67, 1126,
	-2, 1601,
	-1, 542,
=======
	-1, 505,
	67, 1629,
	-2, 1656,
	-1, 506,
	67, 1630,
	-2, 1661,
	-1, 507,
	67, 1631,
	-2, 1662,
	-1, 509,
	67, 1100,
	-2, 1463,
	-1, 516,
	67, 1109,
	-2, 1489,
	-1, 520,
	67, 1113,
	-2, 1528,
	-1, 521,
	67, 1114,
	-2, 1606,
	-1, 529,
	67, 1124,
	-2, 1591,
	-1, 531,
	67, 1126,
	-2, 1601,
	-1, 543,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	67, 1016,
	-2, 1652,
	-1, 543,
	67, 1017,
	-2, 1653,
<<<<<<< HEAD
	-1, 544,
	67, 1018,
	-2, 1654,
	-1, 551,
	21, 512,
	-2, 475,
	-1, 599,
	401, 379,
	402, 379,
	-2, 352,
	-1, 641,
=======
	-1, 545,
	67, 1018,
	-2, 1654,
	-1, 552,
	21, 511,
	-2, 474,
	-1, 600,
	401, 378,
	402, 378,
	-2, 351,
	-1, 642,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	103, 1463,
	114, 1463,
	133, 1463,
	-2, 1262,
<<<<<<< HEAD
	-1, 678,
	21, 512,
	-2, 475,
	-1, 776,
	21, 511,
	-2, 928,
	-1, 1081,
	67, 1169,
	-2, 1608,
	-1, 1082,
	67, 1170,
	-2, 1609,
	-1, 1237,
	1, 718,
	68, 718,
	516, 718,
	-2, 725,
	-1, 1355,
	133, 1272,
	-2, 1270,
	-1, 1357,
	133, 635,
	-2, 1267,
	-1, 1358,
	133, 636,
	-2, 1268,
	-1, 1651,
	1, 719,
	68, 719,
	516, 719,
	-2, 725,
	-1, 1706,
	21, 511,
	-2, 602,
	-1, 1871,
	65, 423,
	134, 423,
	-2, 833,
	-1, 2129,
	87, 725,
	129, 725,
	166, 725,
	169, 725,
	-2, 781,
	-1, 2131,
	272, 896,
	-2, 875,
	-1, 2161,
	65, 423,
	134, 423,
	-2, 834,
	-1, 2197,
	87, 725,
	129, 725,
	166, 725,
	169, 725,
	-2, 782,
	-1, 2225,
	272, 896,
	-2, 876,
	-1, 2632,
	68, 753,
	134, 753,
	-2, 725,
	-1, 2636,
	68, 753,
	134, 753,
	-2, 725,
	-1, 2650,
=======
	-1, 679,
	21, 511,
	-2, 474,
	-1, 777,
	21, 510,
	-2, 927,
	-1, 1084,
	67, 1169,
	-2, 1608,
	-1, 1085,
	67, 1170,
	-2, 1609,
	-1, 1241,
	1, 717,
	68, 717,
	517, 717,
	-2, 724,
	-1, 1358,
	133, 1272,
	-2, 1270,
	-1, 1360,
	133, 634,
	-2, 1267,
	-1, 1361,
	133, 635,
	-2, 1268,
	-1, 1655,
	1, 718,
	68, 718,
	517, 718,
	-2, 724,
	-1, 1709,
	21, 510,
	-2, 601,
	-1, 1875,
	65, 422,
	134, 422,
	-2, 832,
	-1, 2134,
	87, 724,
	129, 724,
	166, 724,
	169, 724,
	-2, 780,
	-1, 2136,
	272, 895,
	-2, 874,
	-1, 2166,
	65, 422,
	134, 422,
	-2, 833,
	-1, 2202,
	87, 724,
	129, 724,
	166, 724,
	169, 724,
	-2, 781,
	-1, 2230,
	272, 895,
	-2, 875,
	-1, 2637,
	68, 752,
	134, 752,
	-2, 724,
	-1, 2641,
	68, 752,
	134, 752,
	-2, 724,
	-1, 2655,
	68, 756,
	134, 756,
	-2, 724,
	-1, 2660,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	68, 757,
	134, 757,
	-2, 725,
	-1, 2655,
	68, 758,
	134, 758,
	-2, 725,
}

const yyPrivate = 57344

<<<<<<< HEAD
const yyLast = 29063

var yyAct = [...]int{
	439, 2636, 1145, 2638, 2644, 2635, 2612, 2477, 419, 2264,
	1061, 421, 2601, 2558, 441, 2514, 2237, 2542, 2444, 2377,
	2448, 2543, 2424, 2183, 2193, 1635, 803, 1316, 2263, 1703,
	2262, 2123, 1057, 466, 973, 128, 2280, 125, 125, 927,
	2432, 1699, 552, 125, 359, 366, 2247, 366, 2154, 364,
	29, 640, 1282, 1191, 2181, 2022, 1242, 1064, 2018, 1244,
	1874, 2246, 1733, 913, 1341, 1891, 1304, 1698, 2027, 370,
	2135, 2142, 2226, 2023, 1847, 1767, 832, 1542, 376, 2095,
	1912, 2078, 547, 413, 902, 1334, 2038, 1274, 672, 124,
	124, 2035, 1658, 583, 2016, 350, 1201, 1970, 2033, 1342,
	1766, 418, 1352, 1538, 1194, 1355, 1537, 1215, 1343, 1335,
	1297, 644, 1808, 1277, 3, 547, 1849, 1925, 1890, 1223,
	1687, 1144, 1844, 1657, 125, 915, 1233, 1255, 838, 363,
	18, 360, 8, 2201, 361, 6, 1652, 454, 84, 1570,
	1055, 647, 40, 420, 1539, 995, 362, 7, 422, 83,
	1301, 667, 1257, 1644, 1268, 352, 666, 668, 642, 602,
	1256, 381, 1549, 1109, 1095, 1623, 430, 1267, 1046, 1553,
	29, 355, 689, 1701, 1338, 1275, 674, 1320, 349, 414,
	1229, 84, 1054, 632, 1060, 40, 883, 1708, 1263, 1232,
	942, 582, 549, 1115, 952, 1114, 551, 378, 1206, 928,
	15, 9, 4, 994, 965, 118, 115, 595, 580, 633,
	365, 1963, 1963, 379, 1556, 1769, 1546, 120, 2293, 1734,
	2122, 1219, 373, 2465, 1337, 550, 804, 119, 119, 2505,
	36, 109, 91, 119, 1135, 665, 119, 119, 36, 109,
	91, 119, 560, 36, 109, 91, 954, 348, 119, 2255,
	18, 119, 8, 1013, 646, 6, 119, 368, 84, 1135,
	708, 2495, 40, 1762, 1554, 121, 645, 7, 1754, 1010,
	1543, 1006, 537, 1942, 536, 538, 539, 742, 540, 541,
	1846, 900, 1285, 1286, 116, 116, 716, 1003, 718, 924,
	1012, 546, 1935, 116, 116, 2531, 1835, 955, 116, 1031,
	741, 933, 934, 612, 2529, 116, 931, 735, 1005, 930,
	933, 934, 1000, 116, 1259, 939, 719, 940, 652, 651,
	653, 2546, 2547, 1047, 723, 1051, 724, 2289, 1063, 740,
	1809, 561, 1845, 2466, 2467, 2518, 2519, 2281, 2282, 2283,
	2284, 572, 746, 747, 748, 745, 2278, 2009, 650, 1050,
	2370, 2373, 125, 682, 726, 2010, 2295, 2011, 2124, 1066,
	1749, 683, 681, 692, 1852, 375, 2447, 1298, 366, 2107,
	125, 2143, 1550, 2049, 2504, 1131, 1290, 616, 1128, 1042,
	712, 2150, 1130, 1127, 1129, 1133, 1134, 553, 2039, 2260,
	1132, 677, 679, 1150, 1682, 1642, 655, 2354, 1620, 1294,
	1131, 714, 1759, 1128, 680, 2047, 711, 1130, 1127, 1129,
	1133, 1134, 648, 717, 720, 1132, 2244, 1052, 721, 1190,
	1189, 1956, 699, 1958, 692, 738, 739, 778, 737, 90,
	2357, 117, 367, 676, 617, 2257, 1049, 713, 409, 2556,
	2348, 410, 2288, 2386, 2507, 2508, 2629, 2645, 2290, 107,
	2545, 2567, 703, 2528, 1065, 2044, 2045, 2479, 922, 2574,
	2533, 678, 574, 2043, 2446, 2502, 1073, 1076, 1077, 649,
	2046, 2341, 571, 570, 2623, 722, 1858, 1074, 412, 1560,
	1562, 1563, 2310, 1555, 2433, 2434, 2435, 2437, 2436, 2309,
	411, 733, 734, 565, 84, 84, 646, 2604, 40, 40,
	2485, 2332, 715, 643, 1860, 1861, 1862, 1863, 645, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1138, 1139, 1140, 1141, 1142, 1143, 1136, 1137, 685, 686,
	901, 941, 694, 693, 654, 2646, 2336, 961, 568, 1048,
	725, 2475, 2476, 960, 2479, 1138, 1139, 1140, 1141, 1142,
	1143, 1136, 1137, 2535, 2536, 2041, 701, 563, 926, 925,
	946, 2613, 776, 919, 918, 2640, 2298, 2652, 2118, 779,
	780, 781, 782, 673, 645, 1914, 1916, 903, 697, 1571,
	374, 2368, 583, 953, 2031, 700, 1755, 1715, 708, 1547,
	569, 880, 1544, 694, 693, 749, 2111, 1962, 783, 1227,
	1544, 906, 1544, 1966, 777, 1961, 1558, 908, 687, 369,
	1918, 2605, 785, 910, 564, 1972, 1971, 812, 2506, 932,
	1712, 2028, 2031, 958, 577, 578, 579, 1288, 1851, 933,
	934, 1024, 1025, 790, 929, 547, 547, 547, 933, 934,
	977, 977, 1289, 2445, 1711, 2468, 2469, 1714, 1713, 904,
	905, 37, 907, 923, 2050, 619, 366, 998, 998, 1557,
	1287, 2409, 1545, 2040, 37, 1299, 2534, 707, 956, 957,
	1735, 1001, 975, 975, 2355, 979, 1008, 620, 2059, 573,
	1855, 1856, 981, 92, 92, 1075, 2639, 1598, 1245, 92,
	1597, 888, 92, 92, 1854, 2256, 1029, 92, 1561, 728,
	1959, 729, 814, 815, 92, 2261, 2032, 92, 977, 1763,
	977, 682, 92, 743, 2658, 1291, 920, 1014, 1043, 1028,
	1062, 2334, 1004, 936, 937, 2333, 1011, 1027, 1915, 731,
	2042, 2651, 2586, 1245, 2602, 2603, 643, 1872, 1293, 702,
	2337, 2338, 2657, 744, 2032, 2648, 1038, 1873, 1044, 2025,
	1742, 623, 885, 2026, 2029, 2149, 744, 2630, 551, 887,
	708, 1646, 1737, 705, 2130, 943, 1724, 943, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	744, 983, 2625, 1104, 1105, 349, 2616, 1696, 613, 1113,
	912, 2615, 2590, 727, 1629, 1754, 2560, 947, 622, 1160,
	1323, 1067, 625, 624, 935, 2030, 1697, 938, 744, 1166,
	84, 2649, 2553, 1059, 84, 658, 663, 664, 706, 1168,
	2548, 1172, 1173, 1552, 2537, 84, 1037, 732, 1034, 40,
	2304, 1033, 547, 706, 84, 2523, 997, 997, 40, 950,
	951, 959, 971, 972, 968, 969, 970, 1040, 2626, 982,
	730, 2075, 1552, 1078, 348, 1645, 1873, 1552, 1552, 1020,
	613, 999, 2561, 2500, 2499, 1015, 993, 615, 2498, 2497,
	614, 986, 987, 988, 989, 990, 991, 992, 2359, 1016,
	1212, 2410, 2412, 2413, 2414, 2411, 2359, 1697, 551, 1633,
	1724, 1697, 1056, 1724, 554, 1197, 1198, 1036, 1035, 1032,
	1543, 2524, 1866, 1230, 1053, 977, 1634, 1159, 1237, 2487,
	2365, 1602, 583, 1205, 1146, 1243, 1149, 1103, 977, 1321,
	1213, 1161, 1058, 1534, 1068, 1069, 1070, 1071, 1072, 2359,
	2359, 1167, 944, 1169, 2359, 2359, 1236, 2364, 1097, 615,
	1264, 1264, 614, 1269, 1045, 1196, 911, 1107, 1269, 1216,
	2358, 1230, 977, 1284, 1203, 1204, 962, 746, 747, 748,
	745, 1909, 1262, 547, 2610, 977, 1111, 1112, 746, 747,
	748, 745, 1147, 2562, 761, 2488, 2366, 1154, 2164, 2060,
	1251, 660, 661, 662, 1235, 1228, 1927, 1230, 977, 1148,
	1315, 125, 125, 1238, 1875, 1831, 1260, 1261, 1325, 1829,
	1310, 1632, 125, 1662, 1827, 1825, 1160, 1160, 1345, 881,
	1170, 1580, 1991, 1160, 1160, 1814, 2359, 1771, 1752, 1318,
	1746, 1744, 667, 1757, 1867, 1739, 1266, 1697, 668, 1331,
	945, 1661, 1756, 1630, 1605, 1748, 746, 747, 748, 745,
	1295, 1186, 1243, 1317, 1317, 1250, 977, 1357, 1679, 1594,
	675, 1253, 1254, 1358, 1317, 1581, 1533, 1328, 1604, 1551,
	1246, 1832, 1217, 708, 1021, 1830, 1221, 1314, 1300, 1224,
	1826, 1826, 1220, 1710, 1214, 1208, 1017, 1211, 1349, 943,
	1579, 744, 1252, 744, 1662, 2064, 1740, 1745, 879, 1234,
	1283, 1740, 788, 1258, 695, 675, 1346, 1662, 1535, 1629,
	744, 1565, 1247, 1240, 1239, 1955, 1152, 1151, 1953, 1249,
	1568, 1569, 944, 1541, 1340, 1270, 966, 1102, 621, 916,
	575, 1340, 1308, 1309, 744, 1552, 964, 967, 2599, 1265,
	1022, 1271, 1100, 1101, 1099, 2587, 1234, 1848, 1777, 675,
	1273, 1272, 2489, 646, 2076, 1217, 1296, 1964, 1743, 1319,
	646, 1217, 1217, 1717, 684, 645, 1954, 1110, 1842, 84,
	748, 745, 645, 40, 1540, 2344, 1231, 1312, 1311, 1110,
	1313, 1576, 1056, 1305, 1306, 1307, 2522, 1329, 745, 2343,
	1609, 764, 765, 766, 767, 768, 761, 1347, 2139, 2134,
	1153, 1356, 2622, 1531, 1931, 1532, 1178, 746, 747, 748,
	745, 1350, 2327, 1351, 2634, 2619, 963, 2420, 2584, 2418,
	945, 1171, 1578, 1536, 1174, 1175, 1176, 1177, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 2568, 2457, 2416, 125, 125,
	618, 2426, 626, 2404, 2403, 2621, 776, 1559, 2402, 125,
	1659, 2406, 1636, 1637, 1567, 2419, 1564, 2417, 645, 2399,
	1269, 1164, 2229, 1670, 746, 747, 748, 745, 2393, 359,
	2390, 1165, 1802, 1779, 1566, 2415, 1097, 1269, 746, 747,
	748, 745, 1575, 2389, 2258, 2221, 2239, 2146, 2048, 2405,
	1638, 1640, 1284, 2147, 2555, 2007, 667, 1573, 2006, 2232,
	1577, 1655, 668, 1949, 1929, 2227, 746, 747, 748, 745,
	2242, 2243, 1628, 1627, 1626, 1669, 2228, 1984, 1622, 1654,
	1668, 977, 2259, 1671, 1672, 1704, 1704, 1590, 1704, 1621,
	2650, 2148, 998, 1018, 1284, 2539, 898, 1728, 2034, 1730,
	1587, 409, 2425, 1588, 410, 1592, 2637, 746, 747, 748,
	745, 2233, 2647, 1722, 2194, 2520, 2203, 2483, 1705, 2482,
	1709, 1603, 1983, 2407, 1606, 1607, 1608, 2627, 2400, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1625, 1618, 2396, 1707,
	1589, 1653, 1786, 2395, 746, 747, 748, 745, 2394, 2356,
	1725, 1673, 669, 670, 671, 1675, 2329, 1677, 1584, 1732,
	2052, 2294, 746, 747, 748, 745, 2192, 1647, 878, 875,
	876, 877, 2190, 2157, 1791, 2145, 1790, 1789, 1787, 2144,
	1666, 1727, 2141, 1674, 1676, 1678, 2110, 1667, 1768, 1706,
	2005, 1680, 1960, 1258, 1930, 1663, 1683, 1921, 2241, 1631,
	2024, 645, 760, 759, 769, 770, 762, 763, 764, 765,
	766, 767, 768, 761, 1624, 493, 492, 812, 1330, 1226,
	1019, 1600, 813, 808, 807, 2235, 1718, 1719, 1720, 2540,
	789, 1283, 2490, 746, 747, 748, 745, 1726, 1788, 762,
	763, 764, 765, 766, 767, 768, 761, 2234, 2236, 2376,
	2207, 746, 747, 748, 745, 1217, 1217, 1217, 2158, 2129,
	2120, 2211, 752, 753, 754, 755, 756, 757, 758, 750,
	2119, 997, 2102, 2094, 2093, 2065, 119, 2451, 1989, 109,
	91, 2200, 1982, 2353, 1974, 2202, 2204, 2206, 2620, 2208,
	2209, 2210, 2212, 2213, 2214, 2216, 2217, 2218, 2219, 746,
	747, 748, 745, 2186, 1750, 746, 747, 748, 745, 1969,
	1828, 1824, 2244, 1823, 977, 1610, 977, 1601, 977, 1599,
	1596, 1595, 1593, 682, 2230, 746, 747, 748, 745, 2222,
	2240, 1586, 1764, 116, 2598, 760, 759, 769, 770, 762,
	763, 764, 765, 766, 767, 768, 761, 1583, 1760, 2185,
	1582, 977, 1795, 2114, 1163, 1162, 1792, 1793, 119, 984,
	2592, 2575, 2572, 2570, 2220, 1803, 1773, 805, 2456, 977,
	2442, 746, 747, 748, 745, 746, 747, 748, 745, 1805,
	2430, 2199, 1987, 975, 2085, 1794, 2427, 2422, 760, 759,
	769, 770, 762, 763, 764, 765, 766, 767, 768, 761,
	2382, 975, 1193, 1804, 746, 747, 748, 745, 2351, 2350,
	2215, 2349, 2346, 2340, 2325, 116, 977, 2205, 914, 555,
	556, 557, 558, 1986, 1761, 1781, 2174, 1871, 2172, 2152,
	2140, 1993, 554, 1877, 769, 770, 762, 763, 764, 765,
	766, 767, 768, 761, 1775, 746, 747, 748, 745, 1202,
	1886, 1753, 1195, 1751, 1758, 682, 1284, 1284, 1284, 1284,
	1868, 1843, 1738, 1716, 1892, 1660, 1833, 682, 1284, 1098,
	116, 1207, 1841, 1210, 1200, 1865, 1892, 1772, 1785, 1869,
	29, 985, 1199, 1041, 1007, 1774, 977, 882, 1810, 830,
	829, 828, 827, 1815, 125, 125, 1985, 826, 1056, 1880,
	825, 824, 823, 1882, 822, 821, 1704, 820, 819, 818,
	817, 1160, 1908, 1160, 1878, 816, 1941, 811, 746, 747,
	748, 745, 810, 809, 1838, 977, 1778, 1888, 806, 802,
	801, 799, 1907, 798, 1796, 1797, 797, 796, 795, 794,
	1800, 1801, 1857, 793, 792, 1876, 1923, 1924, 1947, 791,
	1870, 787, 1806, 786, 1948, 1653, 710, 2347, 1864, 1936,
	18, 1665, 8, 1879, 1649, 6, 1943, 698, 84, 2580,
	1889, 1883, 40, 1884, 1887, 1216, 1885, 7, 2578, 1217,
	1940, 1906, 1836, 1837, 1224, 1905, 1904, 2544, 551, 2079,
	2080, 2082, 1919, 1283, 1283, 1283, 1283, 1938, 1922, 1859,
	1234, 1881, 1917, 1944, 1952, 1283, 1723, 1333, 709, 1957,
	1975, 2084, 1939, 1977, 682, 1979, 1934, 1932, 2037, 1937,
	1928, 1945, 2596, 2021, 1946, 1898, 2633, 1897, 1951, 1747,
	125, 1893, 1894, 1895, 1896, 2012, 2013, 1901, 1741, 682,
	1965, 1822, 1902, 1284, 1659, 1967, 2063, 84, 2021, 1840,
	1899, 1973, 2067, 1654, 84, 1900, 2177, 1978, 2176, 2037,
	1980, 1981, 1976, 746, 747, 748, 745, 67, 1736, 760,
	759, 769, 770, 762, 763, 764, 765, 766, 767, 768,
	761, 1903, 2053, 1693, 1694, 39, 38, 1187, 1217, 1770,
	1992, 1765, 2175, 1217, 1994, 1995, 1996, 1997, 1795, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 1636, 1637, 345, 2066,
	2054, 2055, 2056, 2068, 2069, 884, 1821, 2594, 2015, 122,
	2074, 1643, 704, 2296, 2014, 1241, 346, 347, 2058, 1968,
	2061, 2511, 125, 2057, 949, 2086, 2062, 125, 746, 747,
	748, 745, 736, 1152, 1151, 2089, 2073, 2083, 896, 897,
	2072, 948, 1988, 2090, 2091, 2092, 2071, 344, 894, 895,
	892, 893, 2087, 2100, 760, 759, 769, 770, 762, 763,
	764, 765, 766, 767, 768, 761, 890, 891, 2099, 1820,
	1283, 2070, 886, 1819, 2108, 1530, 125, 917, 1572, 2112,
	2593, 2103, 2473, 2461, 2459, 2133, 2387, 2383, 2104, 2105,
	2106, 746, 747, 748, 745, 746, 747, 748, 745, 2109,
	760, 759, 769, 770, 762, 763, 764, 765, 766, 767,
	768, 761, 2375, 2374, 2372, 977, 977, 1818, 2276, 2275,
	1284, 2161, 2191, 2188, 2127, 2126, 2125, 2097, 2128, 889,
	554, 1689, 1692, 1693, 1694, 1690, 682, 1691, 1695, 746,
	747, 748, 745, 1817, 2096, 1892, 1926, 975, 2155, 2153,
	1245, 1816, 2582, 2581, 1704, 2136, 2132, 2136, 2131, 2138,
	2179, 1950, 1160, 1585, 696, 746, 747, 748, 745, 2581,
	2582, 2342, 2137, 746, 747, 748, 745, 2168, 2101, 921,
	46, 2162, 1, 1225, 2163, 559, 2159, 2165, 1332, 1910,
	2166, 682, 1813, 2198, 1911, 2248, 2250, 2088, 2248, 2248,
	2021, 2169, 1913, 2170, 2167, 1548, 1681, 2160, 555, 556,
	557, 558, 84, 682, 746, 747, 748, 745, 1641, 2187,
	2051, 554, 909, 576, 2113, 1155, 2180, 2184, 899, 1026,
	657, 2115, 691, 1243, 1023, 2273, 690, 688, 1108, 456,
	1812, 1336, 2249, 2423, 2189, 2272, 2510, 2245, 1811, 2223,
	2557, 2291, 2195, 2455, 2513, 1039, 440, 1283, 2367, 2251,
	2252, 2300, 746, 747, 748, 745, 2008, 2277, 2270, 2369,
	746, 747, 748, 745, 2279, 1834, 2267, 1807, 2182, 2268,
	2269, 1933, 2163, 591, 2253, 1799, 488, 464, 800, 2271,
	1009, 1002, 659, 463, 977, 2151, 1853, 562, 2328, 746,
	747, 748, 745, 656, 592, 125, 1798, 746, 747, 748,
	745, 1619, 2121, 2303, 2250, 1188, 1217, 1209, 1192, 2171,
	2643, 2632, 2173, 2611, 2591, 2478, 2155, 2628, 746, 747,
	748, 745, 2527, 2573, 2301, 2302, 2178, 2305, 2306, 2307,
	2308, 2245, 2330, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2345, 2326, 2287,
	2352, 2285, 2286, 2388, 2566, 2474, 2385, 2297, 772, 380,
	775, 2363, 1292, 545, 630, 2443, 2371, 1664, 2360, 1776,
	2254, 2503, 2362, 2429, 2421, 773, 774, 771, 566, 760,
	759, 769, 770, 762, 763, 764, 765, 766, 767, 768,
	761, 746, 747, 748, 745, 1648, 2384, 682, 1106, 1704,
	682, 682, 682, 567, 1651, 2401, 1650, 1079, 751, 1096,
	682, 2116, 1990, 2117, 784, 417, 1574, 2453, 429, 423,
	746, 747, 748, 745, 1850, 2238, 2428, 2431, 2391, 2392,
	2439, 2440, 2441, 2471, 2397, 2398, 2450, 1920, 2449, 2438,
	45, 44, 977, 977, 43, 1324, 1353, 2460, 2464, 2462,
	2463, 2458, 458, 2452, 127, 1354, 2470, 2292, 2472, 760,
	759, 769, 770, 762, 763, 764, 765, 766, 767, 768,
	761, 2515, 438, 125, 975, 975, 2480, 2481, 437, 436,
	435, 682, 1688, 1686, 84, 1685, 1279, 1278, 1322, 1684,
	2541, 2493, 2494, 682, 2339, 2361, 2408, 2335, 2331, 2484,
	2486, 2197, 2196, 2224, 2225, 2492, 2231, 2517, 837, 833,
	835, 2496, 1689, 1692, 1693, 1694, 1690, 2381, 1691, 1695,
	836, 2516, 834, 2501, 682, 1317, 1784, 2509, 1780, 2019,
	2020, 2017, 2081, 2525, 2077, 1344, 2521, 760, 759, 769,
	770, 762, 763, 764, 765, 766, 767, 768, 761, 2530,
	2532, 1222, 1839, 1280, 1276, 2266, 548, 30, 5, 28,
	27, 2538, 26, 14, 13, 1030, 12, 17, 2549, 2550,
	2551, 2552, 25, 2559, 24, 2564, 23, 682, 22, 75,
	74, 73, 72, 21, 11, 71, 1062, 2565, 2569, 70,
	2571, 69, 2563, 759, 769, 770, 762, 763, 764, 765,
	766, 767, 768, 761, 20, 19, 64, 65, 2381, 2576,
	56, 2579, 2517, 2589, 2577, 55, 54, 63, 62, 61,
	2583, 682, 590, 682, 53, 52, 2516, 2588, 51, 2554,
	1062, 2595, 1062, 2597, 2600, 50, 2585, 60, 59, 58,
	57, 49, 48, 47, 89, 2606, 88, 87, 2559, 682,
	2607, 2614, 86, 31, 32, 33, 34, 2491, 1062, 2618,
	99, 2624, 98, 100, 96, 94, 97, 95, 93, 41,
	10, 16, 2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2631, 0, 0, 0, 0, 0, 0,
	2642, 0, 2641, 0, 0, 0, 0, 0, 0, 0,
	2653, 0, 2655, 0, 2654, 2656, 1469, 1511, 0, 2642,
	1458, 294, 1416, 1471, 1389, 1405, 1479, 1406, 1407, 1444,
	1368, 1426, 256, 1403, 0, 0, 0, 0, 0, 0,
	1461, 1360, 1392, 1393, 1362, 1399, 1363, 1390, 1418, 201,
	1388, 1429, 226, 1441, 1402, 1423, 1477, 0, 0, 286,
	240, 0, 2381, 1421, 1463, 1424, 1449, 1415, 1445, 1376,
	1437, 1472, 1404, 0, 1442, 1473, 0, 0, 0, 0,
	669, 670, 671, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 1440, 1467, 1401, 0, 185, 1470, 1422,
	1443, 0, 0, 1361, 1438, 0, 1366, 1369, 1478, 1465,
	1396, 1397, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 1425, 1446, 1412, 0, 0, 0, 2609, 0, 0,
	0, 0, 0, 1394, 0, 1434, 0, 0, 0, 1371,
	1367, 0, 1417, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 1510, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 1370, 315, 177, 1505,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 1489, 1490, 1491, 1492, 1493, 343, 1501, 1502, 0,
	1506, 1507, 1508, 1375, 0, 1395, 1447, 0, 1359, 1456,
	1464, 1414, 317, 1466, 1411, 1410, 1496, 0, 1495, 290,
	1497, 1498, 225, 1462, 1391, 1400, 333, 1398, 276, 258,
	1468, 1433, 1509, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 1494, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 1503,
	0, 1504, 329, 208, 166, 312, 0, 254, 0, 1459,
	1364, 1374, 1372, 1408, 1435, 1436, 250, 328, 1451, 1455,
	1452, 1480, 279, 0, 0, 0, 0, 0, 219, 260,
	1453, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1365, 0, 287, 310, 322, 339, 342, 1512,
	1513, 1514, 170, 341, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 313, 1409, 1382, 1420, 321, 1385, 1383, 1450, 1384,
	1439, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 1430, 1413, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1431, 1523, 1524, 1525, 1526, 1527, 1387, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 1457, 1528, 1529,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 1381, 1386, 1380, 1427, 1428,
	1474, 1475, 1476, 1448, 1373, 1460, 0, 1377, 1379, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1454,
	294, 470, 1432, 167, 0, 227, 1481, 268, 206, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 462, 0, 0, 286, 240,
	0, 0, 0, 0, 516, 524, 1499, 1500, 325, 326,
	327, 311, 0, 198, 1522, 0, 424, 0, 0, 455,
	493, 492, 442, 451, 0, 0, 182, 443, 0, 450,
	444, 448, 447, 445, 446, 0, 508, 0, 0, 0,
	0, 0, 0, 415, 428, 2378, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	0, 0, 0, 0, 471, 0, 427, 0, 0, 473,
	452, 453, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	449, 469, 474, 194, 530, 467, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 531, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 317, 0, 0, 514, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 468, 0, 276, 258, 527,
	416, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 512, 254, 0, 526, 507,
	509, 510, 513, 517, 518, 519, 520, 521, 523, 525,
	529, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 2379, 0, 0, 0, 2380, 0,
	528, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	472, 244, 245, 246, 247, 515, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 537, 511, 536, 538, 539, 535,
	540, 541, 522, 434, 0, 477, 533, 532, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 500, 481,
	482, 483, 433, 484, 479, 480, 501, 475, 497, 498,
	457, 460, 485, 496, 486, 499, 502, 503, 542, 543,
	544, 489, 504, 495, 494, 487, 476, 505, 506, 461,
	459, 490, 491, 478, 294, 470, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	0, 0, 201, 0, 0, 226, 0, 0, 0, 462,
	0, 0, 286, 240, 0, 0, 0, 0, 516, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 455, 493, 492, 442, 451, 0, 0,
	182, 443, 0, 450, 444, 448, 447, 445, 446, 0,
	508, 0, 0, 0, 0, 0, 0, 415, 428, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 0, 0, 0, 0, 471, 0,
	427, 0, 0, 473, 452, 453, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 449, 469, 474, 194, 530, 467,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 531, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 317, 0, 0, 514, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 468,
	0, 276, 258, 527, 416, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 1157, 1156, 1158, 329, 208, 166, 312, 512,
	254, 0, 526, 507, 509, 510, 513, 517, 518, 519,
	520, 521, 523, 525, 529, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 472, 244, 245, 246, 247, 515,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 207, 213, 0, 215, 186, 259, 209, 319, 222,
	0, 0, 0, 251, 218, 284, 223, 229, 272, 318,
	257, 277, 184, 309, 285, 233, 0, 0, 537, 511,
	536, 538, 539, 535, 540, 541, 522, 434, 0, 477,
	533, 532, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 227, 0,
	268, 206, 500, 481, 482, 483, 433, 484, 479, 480,
	501, 475, 497, 498, 457, 460, 485, 496, 486, 499,
	502, 503, 542, 543, 544, 489, 504, 495, 494, 487,
	476, 505, 506, 461, 459, 490, 491, 478, 294, 470,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 462, 0, 0, 286, 240, 0, 0,
	0, 0, 516, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 455, 493, 492,
	442, 451, 0, 0, 182, 443, 0, 450, 444, 448,
	447, 445, 446, 0, 508, 0, 0, 0, 0, 0,
	0, 415, 428, 0, 432, 0, 0, 0, 0, 0,
=======
const yyLast = 28499

var yyAct = [...]int{
	439, 2641, 1148, 2643, 2649, 2640, 2617, 419, 1064, 2269,
	2482, 421, 2606, 2563, 441, 2519, 2242, 2547, 2449, 2382,
	2453, 2548, 2429, 2188, 2198, 1639, 804, 1706, 1060, 1319,
	2268, 1702, 976, 2128, 466, 2437, 2285, 125, 125, 364,
	29, 553, 1195, 125, 359, 366, 2186, 366, 2252, 930,
	128, 2027, 1246, 641, 2267, 1878, 2251, 1067, 2023, 2159,
	1736, 1895, 1344, 915, 1307, 2140, 1277, 2028, 2231, 370,
	1851, 2147, 2032, 1285, 834, 1770, 1337, 376, 2100, 2083,
	1545, 1916, 548, 413, 2038, 1662, 904, 2043, 1701, 1248,
	2040, 673, 1974, 584, 2021, 418, 1198, 1205, 1769, 1355,
	1345, 1300, 1358, 1929, 1541, 1219, 1346, 1540, 1338, 1280,
	124, 124, 1894, 645, 1690, 548, 350, 1853, 1848, 1259,
	648, 40, 1661, 1258, 125, 3, 363, 18, 1656, 360,
	8, 361, 6, 1227, 1811, 840, 2206, 420, 1237, 1573,
	1058, 1542, 362, 7, 422, 998, 1271, 1648, 1304, 668,
	352, 1147, 454, 84, 1260, 83, 1270, 643, 1552, 917,
	29, 603, 1112, 1098, 40, 1556, 667, 1049, 430, 1278,
	1627, 355, 669, 690, 885, 1063, 1704, 1341, 1323, 1233,
	633, 414, 1057, 1711, 1266, 1236, 583, 955, 945, 1118,
	550, 1117, 378, 349, 15, 9, 84, 675, 552, 634,
	4, 365, 931, 379, 1210, 997, 968, 118, 115, 581,
	596, 1772, 1967, 1967, 1559, 1549, 120, 2298, 1737, 2127,
	1223, 2470, 1340, 551, 373, 805, 119, 119, 36, 109,
	91, 1138, 2510, 119, 119, 36, 109, 91, 119, 119,
	119, 40, 36, 109, 91, 561, 666, 18, 368, 348,
	8, 957, 6, 2260, 1016, 1138, 709, 1757, 1009, 119,
	1765, 2500, 119, 7, 1546, 1557, 902, 121, 743, 647,
	1013, 742, 646, 84, 1006, 1946, 927, 573, 942, 1850,
	943, 547, 2536, 116, 116, 1288, 1289, 1839, 2534, 1034,
	116, 1015, 936, 937, 613, 1008, 116, 116, 1939, 2551,
	2552, 538, 958, 537, 539, 540, 934, 541, 542, 933,
	936, 937, 736, 1003, 1262, 1066, 116, 741, 1812, 116,
	2294, 747, 748, 749, 746, 2471, 2472, 2523, 2524, 2283,
	2014, 1849, 2375, 2015, 562, 2016, 724, 717, 725, 719,
	2286, 2287, 2288, 2289, 653, 652, 654, 2378, 2300, 2129,
	1752, 1069, 125, 683, 684, 375, 1301, 2452, 2112, 1293,
	2148, 1045, 682, 1050, 1553, 1054, 727, 720, 366, 617,
	125, 1297, 1134, 2155, 651, 1131, 2265, 2509, 1624, 1133,
	1130, 1132, 1136, 1137, 2054, 693, 2044, 1135, 1685, 1053,
	678, 680, 1646, 2249, 2359, 1762, 1134, 1153, 575, 1131,
	554, 1960, 1962, 1133, 1130, 1132, 1136, 1137, 572, 571,
	409, 1135, 738, 410, 1856, 712, 2052, 1194, 1193, 90,
	2362, 117, 656, 2262, 693, 681, 618, 779, 2550, 566,
	722, 713, 2353, 739, 740, 2293, 677, 2538, 649, 107,
	2561, 2295, 367, 700, 2391, 925, 1068, 2512, 2513, 2634,
	2650, 704, 715, 2572, 1563, 1565, 1566, 1055, 2533, 2048,
	2484, 2579, 922, 679, 718, 721, 2049, 2050, 2451, 1076,
	1079, 1080, 1789, 2507, 569, 2346, 1052, 40, 40, 2628,
	1077, 2051, 2480, 2481, 1558, 2484, 2315, 723, 714, 1864,
	1865, 1866, 1867, 564, 944, 650, 734, 735, 880, 877,
	878, 879, 2314, 412, 1794, 2609, 1793, 1792, 1790, 84,
	84, 647, 2414, 411, 646, 903, 644, 1141, 1142, 1143,
	1144, 1145, 1146, 1139, 1140, 2490, 570, 1862, 686, 687,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1141, 1142, 1143, 1144, 1145, 1146, 1139, 1140, 2341,
	565, 2046, 726, 716, 695, 694, 964, 729, 963, 730,
	655, 2337, 702, 780, 781, 782, 783, 2651, 1791, 698,
	2438, 2439, 2440, 2442, 2441, 701, 949, 777, 1574, 1051,
	646, 2540, 2541, 584, 929, 928, 2657, 732, 1547, 1547,
	921, 882, 920, 695, 694, 2645, 1547, 750, 2116, 1966,
	784, 2618, 2303, 905, 2123, 374, 778, 688, 674, 2373,
	956, 813, 709, 1758, 786, 574, 936, 937, 1718, 2610,
	935, 2511, 936, 937, 2473, 2474, 1550, 1918, 1920, 1231,
	2036, 908, 2033, 2036, 1970, 791, 548, 548, 548, 1965,
	926, 980, 980, 2539, 910, 932, 369, 2450, 578, 579,
	580, 728, 906, 907, 1302, 909, 37, 366, 1001, 1001,
	1560, 2045, 1548, 37, 1561, 2055, 1976, 1975, 1922, 978,
	978, 2360, 1004, 1564, 982, 912, 1715, 1011, 1855, 1963,
	1717, 1716, 92, 92, 744, 733, 1795, 1796, 1078, 92,
	92, 708, 2266, 984, 92, 92, 92, 1032, 1294, 2261,
	1046, 815, 816, 659, 664, 665, 1766, 890, 731, 980,
	1296, 980, 683, 1007, 961, 92, 2644, 1014, 92, 959,
	960, 1065, 1291, 1292, 614, 946, 2047, 946, 1017, 703,
	1859, 1860, 2415, 2417, 2418, 2419, 2416, 1041, 1714, 1290,
	620, 621, 2607, 2608, 1858, 1601, 614, 2663, 1600, 644,
	2656, 923, 2037, 2342, 2343, 2037, 887, 2591, 939, 940,
	2030, 552, 889, 745, 2031, 2034, 1870, 2662, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1919, 2339, 1745, 1107, 1108, 2338, 709, 2653, 2309, 1876,
	1116, 1650, 914, 1027, 1028, 2635, 950, 986, 1699, 1740,
	1163, 349, 1070, 616, 624, 1249, 615, 2630, 938, 40,
	1169, 941, 2135, 745, 745, 1062, 2035, 1249, 40, 1171,
	1633, 2064, 1175, 1176, 1040, 616, 84, 1037, 615, 1036,
	84, 2621, 962, 745, 548, 971, 972, 973, 1757, 1000,
	1000, 84, 953, 954, 1043, 974, 975, 1700, 1081, 2620,
	84, 623, 985, 2654, 1018, 626, 625, 348, 996, 2595,
	1023, 1555, 1727, 555, 1002, 747, 748, 749, 746, 661,
	662, 663, 2565, 2631, 989, 990, 991, 992, 993, 994,
	995, 1031, 1216, 1019, 1059, 1649, 1201, 1202, 1871, 1030,
	1877, 552, 1039, 1038, 2558, 2553, 1546, 1555, 1035, 1638,
	1056, 2542, 1700, 1637, 1209, 1234, 1162, 980, 1877, 1995,
	1241, 2528, 1106, 1061, 584, 1555, 2505, 1247, 2504, 1326,
	980, 2503, 2502, 1700, 1048, 1555, 2492, 1071, 1072, 1073,
	1074, 1075, 1217, 2370, 2369, 2080, 1240, 2363, 2566, 1200,
	1913, 1100, 1835, 1267, 1267, 1149, 1272, 1152, 1833, 1220,
	1605, 1272, 1164, 1831, 1234, 980, 1287, 1207, 1208, 947,
	2364, 2364, 1170, 1738, 1172, 1265, 548, 1727, 980, 1114,
	1115, 747, 748, 749, 746, 1150, 1537, 2529, 883, 913,
	1157, 1829, 2364, 1110, 2364, 1239, 1151, 2364, 2364, 1232,
	1234, 980, 2493, 1318, 125, 125, 965, 1242, 1817, 2371,
	1666, 1328, 2154, 2364, 2615, 125, 1700, 1173, 1836, 1163,
	1163, 1348, 2567, 1254, 1834, 1636, 1163, 1163, 1774, 1830,
	1755, 1749, 2169, 668, 1321, 1583, 1747, 1742, 2065, 1263,
	1264, 1269, 1665, 1190, 1334, 1634, 1608, 1607, 1324, 1554,
	946, 1047, 1298, 709, 1255, 1247, 669, 1830, 1360, 980,
	747, 748, 749, 746, 1024, 1261, 1250, 948, 1313, 1727,
	1713, 706, 1224, 762, 745, 1931, 1221, 1320, 1320, 1317,
	1225, 1361, 1303, 1228, 1218, 1879, 1760, 676, 1320, 1352,
	1759, 1253, 1238, 1212, 745, 1215, 1666, 1743, 1256, 1257,
	1349, 2069, 1748, 1743, 1582, 1251, 1751, 1538, 1666, 1243,
	1244, 1633, 745, 745, 1568, 1555, 1682, 1273, 1286, 1252,
	1957, 707, 1571, 1572, 1597, 1343, 1584, 1536, 1331, 1959,
	1025, 1020, 1343, 1311, 1312, 881, 676, 789, 1268, 696,
	1238, 707, 676, 1274, 918, 2604, 947, 969, 622, 1276,
	1275, 1155, 1154, 2592, 1852, 40, 1299, 1544, 970, 576,
	1221, 2494, 1113, 2625, 2081, 967, 1221, 1221, 1968, 1314,
	1746, 647, 1322, 1720, 646, 685, 1059, 1780, 647, 1315,
	1958, 646, 1113, 1316, 1579, 1846, 1235, 84, 1308, 1309,
	1310, 1332, 2527, 1612, 763, 764, 765, 766, 767, 768,
	769, 762, 1353, 1350, 1354, 1156, 1534, 1359, 1543, 1535,
	761, 760, 770, 771, 763, 764, 765, 766, 767, 768,
	769, 762, 749, 746, 2332, 1539, 1174, 2349, 746, 1177,
	1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1181, 125, 125, 948, 966, 1562, 747, 748, 749,
	746, 1570, 2348, 125, 1663, 765, 766, 767, 768, 769,
	762, 1567, 627, 1272, 777, 2144, 1673, 646, 2139, 619,
	1935, 2627, 359, 2639, 2624, 2425, 1569, 2589, 2226, 2573,
	1272, 1100, 2462, 1105, 1578, 770, 771, 763, 764, 765,
	766, 767, 768, 769, 762, 1287, 1167, 668, 1103, 1104,
	1102, 2431, 1576, 2423, 2409, 1580, 1168, 2408, 747, 748,
	749, 746, 1658, 2424, 2626, 1642, 1644, 1782, 2407, 2404,
	669, 2421, 1805, 2398, 980, 2411, 1659, 753, 754, 755,
	756, 757, 758, 759, 751, 1001, 1593, 1287, 2395, 1672,
	1731, 2422, 1733, 1707, 1707, 1590, 1707, 2394, 1591, 2208,
	1595, 2151, 1725, 1671, 2263, 2152, 1674, 1675, 2053, 2420,
	2012, 1710, 1587, 2410, 2011, 1953, 1606, 2234, 1933, 1609,
	1610, 1611, 1632, 1631, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1708, 1622, 1712, 1629, 1630, 1626, 1657, 1592,
	1988, 2244, 2264, 2153, 1678, 1261, 1680, 747, 748, 749,
	746, 1625, 1021, 1730, 2237, 2039, 2304, 1651, 1640, 1641,
	2232, 747, 748, 749, 746, 2247, 2248, 900, 2560, 1670,
	2545, 2233, 1679, 1728, 409, 2655, 1683, 410, 1676, 1581,
	1681, 2544, 1735, 1686, 2430, 1987, 1677, 747, 748, 749,
	746, 1667, 747, 748, 749, 746, 2199, 1709, 2456, 2525,
	646, 2488, 2358, 2632, 813, 2487, 2238, 747, 748, 749,
	746, 2412, 747, 748, 749, 746, 2405, 1721, 1722, 1723,
	747, 748, 749, 746, 747, 748, 749, 746, 2401, 2400,
	1729, 2399, 2361, 2212, 2334, 747, 748, 749, 746, 1286,
	670, 671, 672, 2352, 2216, 2299, 2197, 2195, 2162, 2150,
	1221, 1221, 1221, 760, 770, 771, 763, 764, 765, 766,
	767, 768, 769, 762, 2205, 2191, 1000, 2149, 2207, 2209,
	2211, 2146, 2213, 2214, 2215, 2217, 2218, 2219, 2221, 2222,
	2223, 2224, 2115, 1771, 2010, 1964, 1934, 747, 748, 749,
	746, 1925, 1635, 2246, 1628, 2029, 1333, 1753, 1230, 2190,
	494, 493, 2495, 1022, 2119, 814, 809, 980, 1991, 980,
	808, 980, 2227, 2057, 790, 2381, 683, 2163, 2134, 2125,
	2240, 747, 748, 749, 746, 1767, 747, 748, 749, 746,
	747, 748, 749, 746, 2124, 119, 2107, 1763, 109, 91,
	2099, 2098, 2239, 2241, 980, 1798, 2070, 2225, 1993, 1986,
	1978, 1973, 1832, 1828, 1827, 1613, 1604, 1602, 1806, 1599,
	1598, 1596, 980, 1589, 2204, 1586, 1585, 1166, 1165, 119,
	987, 1808, 978, 2652, 2603, 2597, 1797, 761, 760, 770,
	771, 763, 764, 765, 766, 767, 768, 769, 762, 1990,
	978, 2580, 116, 2220, 1807, 2577, 1603, 2575, 806, 2461,
	2210, 2447, 2435, 2432, 2427, 2387, 1197, 2249, 2356, 2355,
	980, 747, 748, 749, 746, 1989, 1784, 2354, 1764, 2235,
	2351, 1875, 2345, 2330, 916, 2245, 116, 1881, 2179, 2226,
	2177, 1778, 2157, 2145, 1997, 1206, 1199, 747, 748, 749,
	746, 1756, 1754, 1890, 1872, 1847, 1741, 1761, 683, 1287,
	1287, 1287, 1287, 1719, 1664, 1101, 116, 1896, 1837, 1211,
	683, 1287, 1214, 1658, 29, 1204, 1845, 1203, 1044, 1896,
	1775, 1869, 1777, 2090, 1826, 1010, 884, 832, 1788, 980,
	831, 830, 1059, 829, 828, 827, 826, 125, 125, 825,
	2642, 824, 823, 822, 1873, 1912, 747, 748, 749, 746,
	2208, 821, 820, 1813, 1163, 819, 1163, 1882, 1818, 1945,
	818, 817, 812, 811, 1707, 810, 1892, 807, 980, 803,
	802, 1781, 1884, 800, 799, 1911, 1886, 798, 797, 1799,
	1800, 796, 1842, 795, 794, 1803, 1804, 793, 792, 1951,
	788, 787, 1940, 1874, 1868, 40, 711, 1809, 1861, 1947,
	1880, 18, 1657, 1885, 8, 1669, 6, 2084, 2085, 1653,
	1927, 1928, 1952, 1891, 1893, 1889, 1220, 7, 699, 2585,
	1910, 1944, 1909, 1908, 2583, 1221, 2549, 84, 1840, 1841,
	1228, 1942, 1926, 552, 2087, 1238, 1923, 1948, 1863, 1726,
	1883, 1336, 1979, 710, 2089, 1981, 1956, 1983, 1887, 1932,
	1888, 1286, 1286, 1286, 1286, 1961, 1943, 1938, 683, 1936,
	1941, 1949, 2042, 1286, 1950, 1902, 1901, 2026, 1897, 1898,
	1899, 1900, 1955, 1905, 125, 1921, 2638, 1907, 1906, 1696,
	1697, 1969, 1971, 683, 2212, 1825, 1903, 1287, 1663, 1977,
	2068, 1904, 2026, 2017, 2018, 2216, 2072, 1980, 1984, 1985,
	2182, 1982, 2181, 2042, 1750, 84, 1744, 747, 748, 749,
	746, 1844, 84, 67, 1658, 2205, 39, 38, 1191, 2207,
	2209, 2211, 1773, 2213, 2214, 2215, 2217, 2218, 2219, 2221,
	2222, 2223, 2224, 1221, 1739, 1768, 2180, 886, 1221, 1640,
	1641, 122, 1798, 2020, 1647, 705, 2301, 2058, 2019, 1245,
	2059, 2060, 2061, 2066, 345, 1996, 2516, 346, 347, 1998,
	1999, 2000, 2001, 2227, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 952, 2067, 1972, 2063, 125, 2062, 951, 344,
	737, 125, 2094, 2071, 1155, 1154, 2076, 2073, 2074, 2088,
	1533, 2078, 919, 2077, 2079, 1824, 2598, 1992, 2225, 888,
	1823, 2095, 2096, 2097, 2478, 2105, 2466, 2092, 2464, 2091,
	898, 899, 1822, 896, 897, 2204, 555, 747, 748, 749,
	746, 2104, 747, 748, 749, 746, 2108, 894, 895, 2392,
	2601, 125, 2388, 2109, 747, 748, 749, 746, 1821, 1286,
	2138, 2380, 2110, 1820, 2220, 892, 893, 2111, 2379, 2113,
	2377, 2210, 2281, 2114, 2117, 1249, 2280, 2196, 2193, 2075,
	747, 748, 749, 746, 2131, 747, 748, 749, 746, 2132,
	980, 980, 1819, 2130, 2102, 1287, 2166, 761, 760, 770,
	771, 763, 764, 765, 766, 767, 768, 769, 762, 891,
	2101, 683, 1930, 1954, 747, 748, 749, 746, 978, 2160,
	1896, 1588, 2158, 1816, 2133, 2137, 697, 2587, 2586, 2143,
	2586, 2136, 2587, 1815, 2141, 2184, 2141, 1163, 2347, 2106,
	1814, 924, 46, 1, 1707, 747, 748, 749, 746, 2142,
	1229, 2173, 560, 1335, 2168, 747, 748, 749, 746, 1914,
	1915, 2165, 747, 748, 749, 746, 683, 2093, 2203, 1917,
	2253, 2255, 2174, 2253, 2253, 2026, 2175, 1551, 1684, 2172,
	1645, 1810, 2164, 2056, 911, 577, 2167, 1158, 683, 1802,
	901, 1029, 2170, 2192, 2189, 2171, 658, 692, 1801, 2185,
	2118, 1026, 84, 747, 748, 749, 746, 2120, 1247, 1779,
	2278, 747, 748, 749, 746, 1109, 691, 2194, 2250, 2254,
	747, 748, 749, 746, 2228, 689, 2296, 2200, 1111, 2256,
	2257, 747, 748, 749, 746, 456, 2305, 747, 748, 749,
	746, 556, 557, 558, 559, 1339, 2428, 1286, 2277, 2515,
	2562, 2272, 2168, 2275, 555, 2460, 2518, 1042, 440, 2372,
	2276, 2258, 2013, 2282, 1692, 1695, 1696, 1697, 1693, 980,
	1694, 1698, 2333, 556, 557, 558, 559, 2374, 2284, 1838,
	125, 2187, 1937, 592, 2273, 2274, 555, 488, 464, 2255,
	2308, 801, 1012, 1221, 1005, 660, 2176, 2160, 463, 2178,
	2156, 1857, 563, 988, 657, 2306, 2307, 593, 2310, 2311,
	2312, 2313, 2250, 2183, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2335, 2331,
	1623, 2126, 1192, 1213, 1196, 2648, 2637, 2357, 2393, 1687,
	2616, 2596, 2365, 2483, 2633, 2368, 2532, 2578, 2292, 2367,
	2290, 2376, 2291, 2350, 2571, 2479, 2390, 2259, 2302, 2426,
	380, 1295, 1692, 1695, 1696, 1697, 1693, 546, 1694, 1698,
	631, 2389, 2448, 381, 1668, 2508, 2434, 567, 1652, 568,
	2406, 1655, 683, 1654, 1082, 683, 683, 683, 752, 1099,
	2121, 2122, 785, 417, 1577, 683, 429, 423, 1854, 1707,
	2243, 1924, 2458, 45, 44, 43, 1327, 1356, 458, 2396,
	2397, 127, 2433, 1357, 2475, 2402, 2403, 2297, 2476, 2443,
	2520, 2455, 438, 437, 436, 2454, 435, 980, 980, 1691,
	1689, 1688, 2465, 2469, 2467, 2468, 2436, 1282, 2463, 2444,
	2445, 2446, 1281, 2477, 1325, 2546, 2498, 2499, 2457, 2344,
	2413, 2340, 2336, 2489, 2202, 978, 978, 2201, 125, 2485,
	2486, 2229, 2230, 2236, 839, 835, 683, 837, 838, 836,
	1787, 1783, 2024, 2025, 2022, 2086, 2082, 1347, 683, 1226,
	1843, 1283, 2366, 1279, 84, 2271, 549, 2491, 30, 5,
	2497, 28, 2522, 27, 26, 14, 13, 1033, 12, 17,
	25, 24, 23, 22, 2386, 75, 2521, 74, 73, 683,
	72, 21, 2514, 11, 71, 70, 69, 20, 2530, 19,
	2501, 2526, 64, 65, 56, 55, 54, 63, 62, 61,
	591, 1320, 2506, 53, 2535, 2537, 52, 51, 50, 60,
	59, 58, 57, 49, 48, 47, 2543, 89, 88, 87,
	86, 31, 32, 2554, 2555, 2556, 2557, 33, 2564, 34,
	2569, 773, 683, 776, 99, 98, 100, 96, 94, 97,
	2570, 1065, 2574, 95, 2576, 93, 41, 2568, 774, 775,
	772, 10, 761, 760, 770, 771, 763, 764, 765, 766,
	767, 768, 769, 762, 2581, 2386, 2584, 2522, 2594, 2582,
	2599, 16, 2, 0, 0, 2588, 683, 0, 683, 0,
	2559, 2521, 2593, 0, 2600, 1065, 2602, 1065, 2605, 2590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2611, 0, 0, 2564, 683, 2612, 0, 0, 0, 2619,
	0, 0, 2623, 1065, 2496, 0, 2629, 761, 760, 770,
	771, 763, 764, 765, 766, 767, 768, 769, 762, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 2636, 0,
	0, 0, 0, 0, 0, 2647, 0, 2646, 0, 0,
	0, 0, 0, 0, 0, 2658, 0, 2660, 0, 2659,
	2661, 0, 0, 0, 2647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 760, 770, 771,
	763, 764, 765, 766, 767, 768, 769, 762, 1472, 1514,
	0, 0, 1461, 294, 1419, 1474, 1392, 1408, 1482, 1409,
	1410, 1447, 1371, 1429, 256, 1406, 0, 0, 0, 2386,
	0, 0, 1464, 1363, 1395, 1396, 1365, 1402, 1366, 1393,
	1421, 201, 1391, 1432, 226, 1444, 1405, 1426, 1480, 0,
	0, 286, 240, 0, 0, 1424, 1466, 1427, 1452, 1418,
	1448, 1379, 1440, 1475, 1407, 0, 1445, 1476, 0, 0,
	0, 0, 670, 671, 672, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 1443, 1470, 1404, 0, 185,
	1473, 1425, 1446, 0, 2614, 1364, 1441, 0, 1369, 1372,
	1481, 1468, 1399, 1400, 0, 0, 0, 0, 0, 0,
	0, 0, 1422, 1428, 1449, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1397, 0, 1437, 0, 0,
	0, 1374, 1370, 0, 1420, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 1513,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 1373, 315,
	177, 1508, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 1492, 1493, 1494, 1495, 1496, 343, 1504,
	1505, 0, 1509, 1510, 1511, 1378, 0, 1398, 1450, 0,
	1362, 1459, 1467, 1417, 317, 1469, 1414, 1413, 1499, 0,
	1498, 290, 1500, 1501, 225, 1465, 1394, 1403, 333, 1401,
	276, 258, 1471, 1436, 1512, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 1497, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 1506, 0, 1507, 329, 208, 166, 312, 0, 254,
	0, 1462, 1367, 1377, 1375, 1411, 1438, 1439, 250, 328,
	1454, 1458, 1455, 1483, 279, 0, 0, 0, 0, 0,
	219, 260, 1456, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 287, 310, 322, 339,
	342, 1515, 1516, 1517, 170, 341, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 313, 1412, 1385, 1423, 321, 1388, 1386,
	1453, 1387, 1442, 337, 244, 245, 246, 247, 211, 0,
	187, 340, 269, 1433, 1416, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1434, 1526, 1527, 1528, 1529, 1530, 1390, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 1460,
	1531, 1532, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 1776, 0, 1384, 1389, 1383,
	1430, 1431, 1477, 1478, 1479, 1451, 1376, 1463, 0, 1380,
	1382, 1381, 0, 0, 0, 0, 0, 761, 760, 770,
	771, 763, 764, 765, 766, 767, 768, 769, 762, 0,
	0, 1457, 294, 470, 1435, 167, 0, 227, 1484, 268,
	206, 0, 0, 256, 761, 760, 770, 771, 763, 764,
	765, 766, 767, 768, 769, 762, 431, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 517, 525, 0, 1502,
	1503, 325, 326, 327, 311, 0, 198, 1525, 424, 0,
	0, 455, 494, 493, 442, 451, 0, 1575, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 509, 0,
	0, 0, 0, 0, 0, 415, 428, 2383, 432, 761,
	760, 770, 771, 763, 764, 765, 766, 767, 768, 769,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 473, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 531, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 532, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 317, 0, 0, 515, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 528, 416, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 513, 254, 0,
	527, 508, 510, 511, 514, 518, 519, 520, 521, 522,
	524, 526, 530, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 2384, 0, 0, 0,
	2385, 0, 529, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 516, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 538, 512, 537, 539,
	540, 536, 541, 542, 523, 434, 0, 477, 534, 533,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 2379, 0, 0, 0, 2380, 0, 528, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 472, 244,
	245, 246, 247, 515, 0, 187, 340, 269, 0, 0,
=======
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	501, 481, 482, 483, 433, 484, 479, 480, 502, 475,
	498, 499, 457, 460, 485, 497, 486, 500, 503, 504,
	543, 544, 492, 545, 489, 505, 496, 495, 487, 476,
	506, 507, 461, 459, 490, 491, 478, 294, 470, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 462, 0, 0, 286, 240, 0, 0, 0,
	0, 517, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 455, 494, 493, 442,
	451, 0, 0, 182, 443, 0, 450, 444, 448, 447,
	445, 446, 0, 509, 0, 0, 0, 0, 0, 0,
	415, 428, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 0, 0, 0,
	0, 471, 0, 427, 0, 0, 473, 452, 453, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 449, 469, 474,
	194, 531, 467, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 532, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 317, 0,
	0, 515, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 468, 0, 276, 258, 528, 416, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 1160, 1159, 1161, 329, 208,
	166, 312, 513, 254, 0, 527, 508, 510, 511, 514,
	518, 519, 520, 521, 522, 524, 526, 530, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 472, 244, 245,
	246, 247, 516, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 538, 512, 537, 539, 540, 536, 541, 542, 523,
	434, 0, 477, 534, 533, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 501, 481, 482, 483, 433,
	484, 479, 480, 502, 475, 498, 499, 457, 460, 485,
	497, 486, 500, 503, 504, 543, 544, 492, 545, 489,
	505, 496, 495, 487, 476, 506, 507, 461, 459, 490,
	491, 478, 294, 470, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
<<<<<<< HEAD
	201, 1218, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 516, 524, 0, 0,
	0, 0, 0, 0, 0, 1302, 0, 0, 424, 0,
	0, 455, 493, 492, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 508, 0,
=======
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 517, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 455, 494, 493, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 509, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 415, 428, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 1303, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 531, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 532, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 317, 0, 0, 515, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 528, 416, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 329, 208, 166, 312, 512, 254, 0,
	526, 507, 509, 510, 513, 517, 518, 519, 520, 521,
	523, 525, 529, 279, 0, 0, 0, 0, 0, 219,
=======
	0, 0, 0, 329, 208, 166, 312, 513, 254, 0,
	527, 508, 510, 511, 514, 518, 519, 520, 521, 522,
	524, 526, 530, 279, 0, 0, 0, 0, 0, 219,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 2384, 0, 0, 0,
	2385, 0, 529, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 516, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 538, 512, 537, 539,
	540, 536, 541, 542, 523, 434, 0, 477, 534, 533,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
<<<<<<< HEAD
	500, 481, 482, 483, 433, 484, 479, 480, 501, 475,
	497, 498, 457, 460, 485, 496, 486, 499, 502, 503,
	542, 543, 544, 489, 504, 495, 494, 487, 476, 505,
	506, 461, 459, 490, 491, 478, 119, 294, 470, 325,
	326, 327, 311, 0, 198, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 462, 0, 0, 286, 240, 0, 0, 0,
	0, 516, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 455, 493, 492, 442,
	451, 0, 0, 182, 443, 0, 450, 444, 448, 447,
	445, 446, 0, 508, 0, 0, 0, 0, 0, 0,
	415, 428, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 0, 0, 0,
	0, 471, 0, 427, 0, 0, 473, 452, 453, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 449, 469, 474,
	194, 530, 467, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 531, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 317, 0,
	0, 514, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 468, 0, 276, 258, 527, 416, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 512, 254, 0, 526, 507, 509, 510, 513,
	517, 518, 519, 520, 521, 523, 525, 529, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 472, 244, 245,
	246, 247, 515, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 537, 511, 536, 538, 539, 535, 540, 541, 522,
	434, 0, 477, 533, 532, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 92, 268, 206, 500, 481, 482, 483, 433,
	484, 479, 480, 501, 475, 497, 498, 457, 460, 485,
	496, 486, 499, 502, 503, 542, 543, 544, 489, 504,
	495, 494, 487, 476, 505, 506, 461, 459, 490, 491,
	478, 294, 470, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 0, 0, 201,
	2608, 0, 226, 0, 0, 0, 462, 0, 0, 286,
	240, 0, 0, 0, 0, 516, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 0, 0,
	455, 493, 492, 442, 451, 0, 0, 182, 443, 0,
	450, 444, 448, 447, 445, 446, 0, 508, 0, 0,
	0, 0, 0, 0, 415, 428, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 0, 0, 0, 0, 471, 0, 427, 0, 0,
	473, 452, 453, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 449, 469, 474, 194, 530, 467, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 531, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 317, 0, 0, 514, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 468, 0, 276, 258,
	527, 416, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 512, 254, 0, 526,
	507, 509, 510, 513, 517, 518, 519, 520, 521, 523,
	525, 529, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 528, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 472, 244, 245, 246, 247, 515, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 537, 511, 536, 538, 539,
	535, 540, 541, 522, 434, 0, 477, 533, 532, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 500,
	481, 482, 483, 433, 484, 479, 480, 501, 475, 497,
	498, 457, 460, 485, 496, 486, 499, 502, 503, 542,
	543, 544, 489, 504, 495, 494, 487, 476, 505, 506,
	461, 459, 490, 491, 478, 294, 470, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 0, 0, 201, 1218, 0, 226, 0, 0, 0,
	462, 0, 0, 286, 240, 0, 0, 0, 0, 516,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 455, 493, 492, 442, 451, 0,
	0, 182, 443, 0, 450, 444, 448, 447, 445, 446,
	0, 508, 0, 0, 0, 0, 0, 0, 415, 428,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 0, 0, 0, 0, 471,
	0, 427, 0, 0, 473, 452, 453, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 449, 469, 474, 194, 530,
	467, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 531, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 317, 0, 0, 514,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	468, 0, 276, 258, 527, 416, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	512, 254, 0, 526, 507, 509, 510, 513, 517, 518,
	519, 520, 521, 523, 525, 529, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 472, 244, 245, 246, 247,
	515, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 537,
	511, 536, 538, 539, 535, 540, 541, 522, 434, 0,
	477, 533, 532, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 500, 481, 482, 483, 433, 484, 479,
	480, 501, 475, 497, 498, 457, 460, 485, 496, 486,
	499, 502, 503, 542, 543, 544, 489, 504, 495, 494,
	487, 476, 505, 506, 461, 459, 490, 491, 478, 294,
	470, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 462, 0, 0, 286, 240, 0,
	0, 0, 0, 516, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 455, 493,
	492, 442, 451, 0, 0, 182, 443, 0, 450, 444,
	448, 447, 445, 446, 0, 508, 0, 0, 0, 0,
	0, 0, 415, 428, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 996,
	0, 0, 0, 471, 0, 427, 0, 0, 473, 452,
	453, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 449,
	469, 474, 194, 530, 467, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	531, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	317, 0, 0, 514, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 468, 0, 276, 258, 527, 416,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 512, 254, 0, 526, 507, 509,
	510, 513, 517, 518, 519, 520, 521, 523, 525, 529,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 472,
	244, 245, 246, 247, 515, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 537, 511, 536, 538, 539, 535, 540,
	541, 522, 434, 0, 477, 533, 532, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 500, 481, 482,
	483, 433, 484, 479, 480, 501, 475, 497, 498, 457,
	460, 485, 496, 486, 499, 502, 503, 542, 543, 544,
	489, 504, 495, 494, 487, 476, 505, 506, 461, 459,
	490, 491, 478, 0, 0, 0, 325, 326, 327, 311,
	0, 198, 294, 470, 0, 0, 1591, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 516, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 455, 493, 492, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 508, 0,
	0, 0, 0, 0, 0, 415, 428, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 473, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 530, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 531, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 317, 0, 0, 514, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 527, 416, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 512, 254, 0,
	526, 507, 509, 510, 513, 517, 518, 519, 520, 521,
	523, 525, 529, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 515, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 537, 511, 536, 538,
	539, 535, 540, 541, 522, 434, 0, 477, 533, 532,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	500, 481, 482, 483, 433, 484, 479, 480, 501, 475,
	497, 498, 457, 460, 485, 496, 486, 499, 502, 503,
	542, 543, 544, 489, 504, 495, 494, 487, 476, 505,
	506, 461, 459, 490, 491, 478, 294, 470, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 462, 0, 0, 286, 240, 0, 0, 0, 0,
	516, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 455, 493, 492, 442, 451,
	0, 0, 182, 443, 0, 450, 444, 448, 447, 445,
	446, 0, 508, 0, 0, 0, 0, 0, 0, 415,
	428, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 0, 0, 0, 0,
	471, 0, 427, 0, 0, 473, 452, 453, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 449, 469, 474, 194,
	530, 467, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 531, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 317, 0, 0,
	514, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 468, 0, 276, 258, 527, 416, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 512, 254, 0, 526, 507, 509, 510, 513, 517,
	518, 519, 520, 521, 523, 525, 529, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 472, 244, 245, 246,
	247, 515, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 0, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 0,
	537, 511, 536, 538, 539, 535, 540, 541, 522, 434,
	0, 477, 533, 532, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	227, 0, 268, 206, 500, 481, 482, 483, 433, 484,
	479, 480, 501, 475, 497, 498, 457, 460, 485, 496,
	486, 499, 502, 503, 542, 543, 544, 489, 504, 495,
	494, 487, 476, 505, 506, 461, 459, 490, 491, 478,
	294, 470, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 0, 431, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 462, 0, 0, 286, 240,
	0, 0, 0, 0, 516, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 455,
	493, 492, 442, 451, 0, 0, 182, 443, 0, 450,
	444, 448, 447, 445, 446, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 428, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	0, 0, 0, 0, 471, 0, 427, 0, 0, 473,
	452, 453, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	449, 469, 474, 194, 530, 467, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 531, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 317, 0, 0, 514, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 468, 0, 276, 258, 527,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 1081, 1082, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 512, 254, 0, 526, 507,
	509, 510, 513, 517, 518, 519, 520, 521, 523, 525,
	529, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	472, 244, 245, 246, 247, 515, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 537, 511, 536, 538, 539, 535,
	540, 541, 522, 434, 0, 477, 533, 532, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 500, 481,
	482, 483, 433, 484, 479, 480, 501, 475, 497, 498,
	457, 460, 485, 496, 486, 499, 502, 503, 542, 543,
	544, 489, 504, 495, 494, 487, 476, 505, 506, 461,
	459, 490, 491, 478, 294, 470, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	0, 0, 201, 0, 0, 226, 0, 0, 0, 462,
	0, 0, 286, 240, 0, 0, 0, 0, 516, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 493, 492, 442, 451, 0, 0,
	182, 443, 0, 450, 444, 448, 447, 445, 446, 0,
	508, 0, 0, 0, 0, 0, 0, 415, 428, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 0, 0, 0, 0, 471, 0,
	427, 0, 0, 473, 452, 453, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 449, 469, 474, 194, 530, 467,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 531, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
=======
	501, 481, 482, 483, 433, 484, 479, 480, 502, 475,
	498, 499, 457, 460, 485, 497, 486, 500, 503, 504,
	543, 544, 492, 545, 489, 505, 496, 495, 487, 476,
	506, 507, 461, 459, 490, 491, 478, 294, 470, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 201, 1222, 0, 226, 0,
	0, 0, 462, 0, 0, 286, 240, 0, 0, 0,
	0, 517, 525, 0, 0, 0, 0, 0, 0, 0,
	1305, 0, 0, 424, 0, 0, 455, 494, 493, 442,
	451, 0, 0, 182, 443, 0, 450, 444, 448, 447,
	445, 446, 0, 509, 0, 0, 0, 0, 0, 0,
	415, 428, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 0, 0, 0,
	0, 471, 0, 427, 0, 0, 1306, 452, 453, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 449, 469, 474,
	194, 531, 467, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 532, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 317, 0,
	0, 515, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 468, 0, 276, 258, 528, 416, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 513, 254, 0, 527, 508, 510, 511, 514,
	518, 519, 520, 521, 522, 524, 526, 530, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 472, 244, 245,
	246, 247, 516, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 538, 512, 537, 539, 540, 536, 541, 542, 523,
	434, 0, 477, 534, 533, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 501, 481, 482, 483, 433,
	484, 479, 480, 502, 475, 498, 499, 457, 460, 485,
	497, 486, 500, 503, 504, 543, 544, 492, 545, 489,
	505, 496, 495, 487, 476, 506, 507, 461, 459, 490,
	491, 478, 119, 294, 470, 325, 326, 327, 311, 0,
	198, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	0, 201, 0, 0, 226, 0, 0, 0, 462, 0,
	0, 286, 240, 0, 0, 0, 0, 517, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 455, 494, 493, 442, 451, 0, 0, 182,
	443, 0, 450, 444, 448, 447, 445, 446, 0, 509,
	0, 0, 0, 0, 0, 0, 415, 428, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 0, 0, 0, 0, 471, 0, 427,
	0, 0, 473, 452, 453, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 449, 469, 474, 194, 531, 467, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 532, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 317, 0, 0, 515, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 468, 0,
	276, 258, 528, 416, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 513, 254,
	0, 527, 508, 510, 511, 514, 518, 519, 520, 521,
	522, 524, 526, 530, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 472, 244, 245, 246, 247, 516, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 538, 512, 537,
	539, 540, 536, 541, 542, 523, 434, 0, 477, 534,
	533, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 227, 92, 268,
	206, 501, 481, 482, 483, 433, 484, 479, 480, 502,
	475, 498, 499, 457, 460, 485, 497, 486, 500, 503,
	504, 543, 544, 492, 545, 489, 505, 496, 495, 487,
	476, 506, 507, 461, 459, 490, 491, 478, 294, 470,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 431, 0, 0, 0, 201, 0, 0, 226,
=======
	0, 0, 431, 0, 0, 0, 201, 2613, 0, 226,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 462, 0, 0, 286, 240, 0, 0,
	0, 0, 517, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 455, 494, 493,
	442, 451, 0, 0, 182, 443, 0, 450, 444, 448,
	447, 445, 446, 0, 509, 0, 0, 0, 0, 0,
	0, 415, 428, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 0, 0,
	0, 0, 471, 0, 427, 0, 0, 473, 452, 453,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 449, 469,
	474, 194, 531, 467, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 532,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 317,
	0, 0, 515, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 468, 0, 276, 258, 528, 416, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 513, 254, 0, 527, 508, 510, 511,
	514, 518, 519, 520, 521, 522, 524, 526, 530, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 472, 244,
	245, 246, 247, 516, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 538, 512, 537, 539, 540, 536, 541, 542,
	523, 434, 0, 477, 534, 533, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	167, 0, 227, 0, 268, 206, 500, 481, 482, 483,
	433, 484, 479, 480, 501, 475, 497, 498, 457, 460,
	485, 496, 486, 499, 502, 503, 542, 543, 544, 489,
	504, 495, 494, 487, 476, 505, 506, 461, 459, 490,
	491, 478, 0, 0, 0, 325, 326, 327, 311, 0,
	198, 119, 294, 36, 109, 91, 0, 0, 0, 0,
	0, 0, 0, 256, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 354, 356, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 37, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 92, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 294, 0, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 286, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 2028, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 0, 304, 332, 194,
	323, 0, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 0, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 317, 0, 0,
	0, 2025, 0, 2024, 290, 2026, 2029, 225, 0, 0,
	0, 333, 0, 276, 258, 0, 0, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 2030, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 328, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 337, 244, 245, 246,
	247, 211, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 0, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	227, 0, 268, 206, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 1327, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 746,
	747, 748, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 294, 0, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 629, 0, 226, 0, 0, 0, 0,
	0, 0, 286, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 637, 638, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 0, 304, 332, 194, 323, 615,
	315, 177, 614, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 0, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 333,
	0, 276, 258, 0, 0, 0, 274, 228, 302, 266,
	308, 292, 316, 627, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	328, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 628, 313, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 631, 244, 245, 246, 247, 211,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 207, 213, 0, 215, 186, 259, 209, 319, 222,
	0, 0, 0, 639, 634, 635, 223, 229, 272, 318,
	257, 277, 184, 309, 285, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 227, 0,
	268, 206, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 119, 294,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 1348, 0, 126, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 0, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 333, 0, 276, 258, 0, 0,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 328, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 92, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 119, 294, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 286, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 1339, 0, 126, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 0, 304, 332, 194, 323, 0,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 0, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 333,
	0, 276, 258, 0, 0, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	328, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 337, 244, 245, 246, 247, 211,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
=======
	167, 0, 227, 0, 268, 206, 501, 481, 482, 483,
	433, 484, 479, 480, 502, 475, 498, 499, 457, 460,
	485, 497, 486, 500, 503, 504, 543, 544, 492, 545,
	489, 505, 496, 495, 487, 476, 506, 507, 461, 459,
	490, 491, 478, 294, 470, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	0, 201, 1222, 0, 226, 0, 0, 0, 462, 0,
	0, 286, 240, 0, 0, 0, 0, 517, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 455, 494, 493, 442, 451, 0, 0, 182,
	443, 0, 450, 444, 448, 447, 445, 446, 0, 509,
	0, 0, 0, 0, 0, 0, 415, 428, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 0, 0, 0, 0, 471, 0, 427,
	0, 0, 473, 452, 453, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 449, 469, 474, 194, 531, 467, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 532, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 317, 0, 0, 515, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 468, 0,
	276, 258, 528, 416, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 513, 254,
	0, 527, 508, 510, 511, 514, 518, 519, 520, 521,
	522, 524, 526, 530, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 472, 244, 245, 246, 247, 516, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 538, 512, 537,
	539, 540, 536, 541, 542, 523, 434, 0, 477, 534,
	533, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 167, 0, 227, 92,
	268, 206, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 294, 0,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 286, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 637, 638,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 167, 0, 227, 0, 268,
	206, 501, 481, 482, 483, 433, 484, 479, 480, 502,
	475, 498, 499, 457, 460, 485, 497, 486, 500, 503,
	504, 543, 544, 492, 545, 489, 505, 496, 495, 487,
	476, 506, 507, 461, 459, 490, 491, 478, 294, 470,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 462, 0, 0, 286, 240, 0, 0,
	0, 0, 517, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 455, 494, 493,
	442, 451, 0, 0, 182, 443, 0, 450, 444, 448,
	447, 445, 446, 0, 509, 0, 0, 0, 0, 0,
	0, 415, 428, 0, 432, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 999, 0,
	0, 0, 471, 0, 427, 0, 0, 473, 452, 453,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
<<<<<<< HEAD
	221, 174, 0, 273, 199, 212, 195, 253, 0, 304,
	332, 194, 323, 615, 315, 177, 614, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 0,
=======
	221, 174, 0, 273, 199, 212, 195, 253, 449, 469,
	474, 194, 531, 467, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 532,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 317,
	0, 0, 515, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 468, 0, 276, 258, 528, 416, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 513, 254, 0, 527, 508, 510, 511,
	514, 518, 519, 520, 521, 522, 524, 526, 530, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 472, 244,
	245, 246, 247, 516, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
<<<<<<< HEAD
	259, 209, 319, 222, 0, 0, 0, 639, 634, 635,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 0, 268, 206, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 119, 294, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 0, 256, 0, 0, 0, 0, 0,
=======
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 538, 512, 537, 539, 540, 536, 541, 542,
	523, 434, 0, 477, 534, 533, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 0, 268, 206, 501, 481, 482, 483,
	433, 484, 479, 480, 502, 475, 498, 499, 457, 460,
	485, 497, 486, 500, 503, 504, 543, 544, 492, 545,
	489, 505, 496, 495, 487, 476, 506, 507, 461, 459,
	490, 491, 478, 0, 0, 0, 325, 326, 327, 311,
	0, 198, 294, 470, 0, 0, 1594, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 517, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 455, 494, 493, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 509, 0,
	0, 0, 0, 0, 0, 415, 428, 0, 432, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 286, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 0, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 333, 0,
	276, 258, 0, 0, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 328,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 337, 244, 245, 246, 247, 211, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 227, 92, 268,
	206, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 980, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 978,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 0, 0,
=======
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 473, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 531, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 532, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 317, 0, 0, 515, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 528, 416, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 513, 254, 0,
	527, 508, 510, 511, 514, 518, 519, 520, 521, 522,
	524, 526, 530, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 516, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 538, 512, 537, 539,
	540, 536, 541, 542, 523, 434, 0, 477, 534, 533,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	501, 481, 482, 483, 433, 484, 479, 480, 502, 475,
	498, 499, 457, 460, 485, 497, 486, 500, 503, 504,
	543, 544, 492, 545, 489, 505, 496, 495, 487, 476,
	506, 507, 461, 459, 490, 491, 478, 294, 470, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 462, 0, 0, 286, 240, 0, 0, 0,
	0, 517, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 455, 494, 493, 442,
	451, 0, 0, 182, 443, 0, 450, 444, 448, 447,
	445, 446, 0, 509, 0, 0, 0, 0, 0, 0,
	415, 428, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 0, 0, 0,
	0, 471, 0, 427, 0, 0, 473, 452, 453, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 449, 469, 474,
	194, 531, 467, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 532, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 317, 0,
	0, 515, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 468, 0, 276, 258, 528, 416, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 513, 254, 0, 527, 508, 510, 511, 514,
	518, 519, 520, 521, 522, 524, 526, 530, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 472, 244, 245,
	246, 247, 516, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 538, 512, 537, 539, 540, 536, 541, 542, 523,
	434, 0, 477, 534, 533, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
<<<<<<< HEAD
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 294, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	974, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 978, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	976, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2512, 0, 126, 493, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 227, 0, 268, 206, 501, 481, 482, 483, 433,
	484, 479, 480, 502, 475, 498, 499, 457, 460, 485,
	497, 486, 500, 503, 504, 543, 544, 492, 545, 489,
	505, 496, 495, 487, 476, 506, 507, 461, 459, 490,
	491, 478, 294, 470, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 0, 0, 431, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 517, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 455, 494, 493, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 428, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 473, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 531, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 532, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 317, 0, 0, 515, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 528, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 1084, 1085, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 513, 254, 0,
	527, 508, 510, 511, 514, 518, 519, 520, 521, 522,
	524, 526, 530, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 516, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 538, 512, 537, 539,
	540, 536, 541, 542, 523, 434, 0, 477, 534, 533,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	501, 481, 482, 483, 433, 484, 479, 480, 502, 475,
	498, 499, 457, 460, 485, 497, 486, 500, 503, 504,
	543, 544, 492, 545, 489, 505, 496, 495, 487, 476,
	506, 507, 461, 459, 490, 491, 478, 294, 470, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 462, 0, 0, 286, 240, 0, 0, 0,
	0, 517, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 494, 493, 442,
	451, 0, 0, 182, 443, 0, 450, 444, 448, 447,
	445, 446, 0, 509, 0, 0, 0, 0, 0, 0,
	415, 428, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 0, 0, 0,
	0, 471, 0, 427, 0, 0, 473, 452, 453, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 449, 469, 474,
	194, 531, 467, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 532, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 317, 0,
	0, 515, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 468, 0, 276, 258, 528, 416, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 513, 254, 0, 527, 508, 510, 511, 514,
	518, 519, 520, 521, 522, 524, 526, 530, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 472, 244, 245,
	246, 247, 516, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 538, 512, 537, 539, 540, 536, 541, 542, 523,
	434, 0, 477, 534, 533, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 501, 481, 482, 483, 433,
	484, 479, 480, 502, 475, 498, 499, 457, 460, 485,
	497, 486, 500, 503, 504, 543, 544, 492, 545, 489,
	505, 496, 495, 487, 476, 506, 507, 461, 459, 490,
	491, 478, 294, 470, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 517, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 455, 494, 493, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 428, 0, 432, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 473, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 531, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 532, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
=======
	465, 0, 0, 317, 0, 0, 515, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 528, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 513, 254, 0,
	527, 508, 510, 511, 514, 518, 519, 520, 521, 522,
	524, 526, 530, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 516, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 538, 512, 537, 539,
	540, 536, 541, 542, 523, 434, 0, 477, 534, 533,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	501, 481, 482, 483, 433, 484, 479, 480, 502, 475,
	498, 499, 457, 460, 485, 497, 486, 500, 503, 504,
	543, 544, 492, 545, 489, 505, 496, 495, 487, 476,
	506, 507, 461, 459, 490, 491, 478, 0, 0, 0,
	325, 326, 327, 311, 0, 198, 119, 294, 36, 109,
	91, 0, 0, 0, 0, 0, 0, 0, 256, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 354, 356, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 37,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 92, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 0, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 126, 0, 0, 978, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
=======
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 2033,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 2156, 0, 0, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 0, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
=======
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 317, 0, 0, 0, 2030, 0, 2029,
	290, 2031, 2034, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 2035, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 0, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 201, 1721, 0, 226, 0,
=======
	1329, 0, 0, 0, 0, 201, 0, 0, 226, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 1330,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 747, 748, 749, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
<<<<<<< HEAD
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 294, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2617, 0,
	126, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 493, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	144, 145, 146, 147, 148, 149, 150, 0, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 630, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 638, 639, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 616, 315, 177,
	615, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 628, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 629, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 632, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 640, 635, 636, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 0, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 119, 294, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 286, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 1351, 0, 126, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 0, 304,
	332, 194, 323, 0, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 0,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 333, 0, 276, 258, 0, 0, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 328, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 337, 244,
	245, 246, 247, 211, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 92, 268, 206, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 0, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 119, 294, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 286, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 1342, 0, 126, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 0, 304, 332, 194, 323, 0,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 0, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 333,
	0, 276, 258, 0, 0, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	328, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 337, 244, 245, 246, 247, 211,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 207, 213, 0, 215, 186, 259, 209, 319, 222,
	0, 0, 0, 251, 218, 284, 223, 229, 272, 318,
	257, 277, 184, 309, 285, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 227, 92,
	268, 206, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 0, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 2526, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 126, 638,
	639, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 616, 315, 177, 615, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 333, 0, 276, 258, 0, 0,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 328, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 640, 635,
	636, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 0,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 119, 294, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1284, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 201, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 286, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2265,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	92, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 983,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 981, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
=======
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 2454, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
=======
	0, 0, 0, 201, 977, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 981, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 294, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 2274, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
=======
	0, 0, 0, 0, 979, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2517, 0, 126,
	494, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 981, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 979, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 981, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2161,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 1724, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 981, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2622, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 494, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2531, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2270, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 2459, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	2279, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1284, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 2041, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
<<<<<<< HEAD
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 0, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 333, 0, 276, 258, 0, 0,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 328, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 294, 0, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 286, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 0, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 333, 0,
	276, 258, 0, 0, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 328,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 337, 244, 245, 246, 247, 211, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 227, 0, 268,
	206, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 2036,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
=======
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 981, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 294, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 978, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
=======
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
<<<<<<< HEAD
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 1729, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
=======
	146, 147, 148, 149, 150, 0, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 1732, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 167, 0, 227, 0, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 0, 0, 0, 325, 326, 327, 311,
	294, 198, 0, 0, 1656, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	0, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 0, 0, 0, 325, 326,
	327, 311, 294, 198, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 0, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 294, 0, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 201, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 286, 240, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 0, 304, 332, 194, 323, 0,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 0, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
=======
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 1643, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 1639, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 333,
	0, 276, 258, 0, 0, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	328, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 337, 244, 245, 246, 247, 211,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 207, 213, 0, 215, 186, 259, 209, 319, 222,
	0, 0, 0, 251, 218, 284, 223, 229, 272, 318,
	257, 277, 184, 309, 285, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 167, 0, 227, 0,
	268, 206, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 294, 0,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 286, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	978, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 0, 304,
	332, 194, 323, 0, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 0,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 333, 0, 276, 258, 0, 0, 0,
	274, 228, 302, 266, 308, 292, 316, 1248, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 328, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 337, 244,
	245, 246, 247, 211, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 0, 268, 206, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 0, 151, 152,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	581, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 294, 0, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 286, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 0, 304, 332, 194,
	323, 0, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 0, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 333, 0, 276, 258, 0, 0, 0, 274, 228,
	302, 266, 308, 292, 316, 371, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 328, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 372, 313, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 337, 244, 245, 246,
	247, 211, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 0, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	227, 0, 268, 206, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
=======
	582, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 0, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 371, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 372, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 123, 201, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 286, 240, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 0, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 333,
	0, 276, 258, 0, 0, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	328, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 337, 244, 245, 246, 247, 211,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
=======
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 286, 240, 0, 0,
=======
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 0, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 0, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 670, 671, 1702, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 256, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
<<<<<<< HEAD
	184, 309, 285, 233, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 670, 671, 1702,
	0, 0, 0, 182, 167, 0, 227, 0, 268, 206,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 256, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 670, 671, 0, 0, 0, 0, 182, 167,
	0, 227, 0, 268, 206, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 119, 254, 36,
	109, 91, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 114, 0, 219,
	260, 0, 280, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 68, 0,
	0, 0, 313, 0, 116, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 853, 0, 0, 0,
	0, 0, 110, 111, 0, 112, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	0, 0, 0, 0, 0, 0, 746, 747, 748, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 108, 117, 0, 66, 0, 0, 0, 853, 325,
	326, 327, 311, 0, 198, 0, 0, 0, 0, 0,
	107, 102, 101, 0, 0, 0, 841, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 861, 865, 867, 869, 871, 872,
	874, 1135, 878, 875, 876, 877, 0, 0, 856, 857,
	858, 859, 839, 840, 862, 0, 842, 0, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 854, 860,
	0, 0, 0, 0, 0, 104, 105, 864, 866, 868,
	870, 873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 841, 0,
	0, 0, 831, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 855, 106, 853, 77, 861, 865, 867, 869,
	871, 872, 874, 0, 878, 875, 876, 877, 0, 0,
	856, 857, 858, 859, 839, 840, 862, 2221, 842, 0,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	854, 860, 0, 0, 0, 0, 0, 0, 0, 864,
	866, 868, 870, 873, 585, 0, 0, 0, 78, 0,
	0, 1654, 0, 0, 0, 0, 0, 79, 35, 0,
	0, 0, 1131, 0, 0, 1128, 0, 0, 0, 1130,
	1127, 1129, 1133, 1134, 855, 0, 0, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2203, 0,
	0, 0, 0, 0, 841, 0, 0, 0, 0, 0,
	37, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	1782, 1783, 861, 865, 867, 869, 871, 872, 874, 0,
	878, 875, 876, 877, 0, 0, 856, 857, 858, 859,
	839, 840, 862, 92, 842, 0, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 854, 860, 0, 0,
	0, 0, 0, 0, 0, 864, 866, 868, 870, 873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 85, 0, 615, 0, 0, 614, 0, 0,
	855, 0, 0, 0, 0, 0, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1138, 1139, 1140,
	1141, 1142, 1143, 1136, 1137, 2221, 0, 0, 0, 0,
	0, 600, 2207, 0, 0, 0, 0, 0, 586, 0,
	863, 0, 0, 2211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1654,
	0, 0, 0, 2200, 605, 0, 0, 2202, 2204, 2206,
	0, 2208, 2209, 2210, 2212, 2213, 2214, 2216, 2217, 2218,
	2219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2203, 0, 391, 0,
	390, 397, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 2222, 394, 395, 0, 396, 400, 0, 0, 382,
	0, 0, 863, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	584, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 587, 608, 2299, 0, 0, 0, 0, 409, 0,
	0, 410, 391, 2199, 390, 397, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 603, 394, 395, 0, 396,
	400, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 2215, 405, 0, 0, 0, 0, 0, 2205,
	0, 0, 0, 0, 0, 0, 0, 604, 609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 597, 410, 599, 612, 0, 0,
	2207, 596, 594, 593, 0, 598, 588, 589, 863, 610,
	611, 2211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 2200, 0, 0, 0, 2202, 2204, 2206, 0, 2208,
	2209, 2210, 2212, 2213, 2214, 2216, 2217, 2218, 2219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 0,
	0, 383, 385, 384, 0, 0, 0, 0, 0, 389,
	0, 0, 391, 0, 390, 397, 387, 0, 0, 2222,
	0, 393, 0, 0, 0, 0, 394, 395, 408, 396,
	400, 0, 0, 382, 0, 386, 0, 0, 0, 377,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 385, 384, 0, 0,
	0, 2199, 0, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 386,
	2215, 0, 0, 0, 0, 0, 0, 2205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 392, 398, 0, 399, 401,
	0, 0, 402, 403, 404, 0, 0, 406, 407, 0,
=======
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 0, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 671, 672, 1705,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 256, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 670, 671, 672, 1705, 0, 0, 0, 182, 167,
	0, 227, 0, 268, 206, 0, 0, 0, 185, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 388, 392,
	398, 0, 399, 401, 0, 0, 402, 403, 404, 0,
	0, 406, 407, 0, 0, 383, 385, 384, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 386,
=======
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 256, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 671, 672, 0,
	0, 0, 0, 182, 167, 0, 227, 0, 268, 206,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 119, 254, 36, 109, 91, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 114, 0, 219, 260, 0, 280, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 68, 0, 0, 0, 313, 0, 116,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 855, 0, 0, 0, 0, 0, 110, 111, 0,
	112, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 0, 0, 0, 0, 0,
	0, 747, 748, 749, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 90, 108, 117, 0, 66,
	0, 0, 0, 855, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 0, 0, 107, 102, 101, 0, 0,
	0, 843, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	867, 869, 871, 873, 874, 876, 1138, 880, 877, 878,
	879, 0, 0, 858, 859, 860, 861, 841, 842, 864,
	0, 844, 0, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 856, 862, 0, 0, 0, 0, 0,
	104, 105, 866, 868, 870, 872, 875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 843, 0, 0, 0, 833, 0, 0,
	0, 0, 0, 0, 76, 0, 0, 857, 106, 855,
	77, 863, 867, 869, 871, 873, 874, 876, 0, 880,
	877, 878, 879, 0, 0, 858, 859, 860, 861, 841,
	842, 864, 2226, 844, 0, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 856, 862, 0, 0, 0,
	0, 0, 0, 0, 866, 868, 870, 872, 875, 586,
	0, 0, 0, 78, 0, 0, 1658, 0, 0, 0,
	0, 0, 79, 35, 0, 0, 0, 1134, 0, 0,
	1131, 0, 0, 0, 1133, 1130, 1132, 1136, 1137, 857,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2208, 0, 0, 0, 0, 0, 843,
	0, 0, 0, 0, 0, 37, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 1785, 1786, 863, 867, 869,
	871, 873, 874, 876, 0, 880, 877, 878, 879, 0,
	0, 858, 859, 860, 861, 841, 842, 864, 92, 844,
	0, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 856, 862, 0, 0, 0, 0, 0, 0, 0,
	866, 868, 870, 872, 875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 85, 616,
	0, 0, 615, 0, 0, 857, 0, 0, 0, 0,
	0, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1141, 1142, 1143, 1144, 1145, 1146, 1139, 1140,
	0, 0, 0, 0, 0, 0, 601, 2212, 0, 0,
	0, 0, 0, 587, 0, 865, 0, 0, 2216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2205, 606,
	0, 0, 2207, 2209, 2211, 0, 2213, 2214, 2215, 2217,
	2218, 2219, 2221, 2222, 2223, 2224, 391, 0, 390, 397,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 0, 396, 400, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 405, 0, 0,
	0, 391, 0, 390, 397, 387, 0, 865, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 0, 396, 400,
	0, 0, 382, 0, 0, 585, 409, 0, 0, 410,
	0, 2225, 405, 0, 0, 0, 588, 609, 391, 0,
	390, 397, 387, 0, 0, 0, 0, 0, 2204, 0,
	0, 0, 394, 395, 0, 396, 400, 0, 0, 382,
	604, 409, 0, 0, 410, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 2220, 0, 0,
	0, 0, 0, 0, 2210, 0, 0, 0, 0, 0,
	0, 0, 605, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	0, 600, 613, 0, 0, 0, 597, 595, 594, 0,
	599, 589, 590, 865, 611, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	385, 384, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 386, 383, 385, 384, 377, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 383, 385, 384, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 392, 398, 0, 399, 401, 0, 0,
	402, 403, 404, 0, 0, 406, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 392, 398,
	0, 399, 401, 0, 0, 402, 403, 404, 0, 0,
	406, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 388, 392,
	398, 0, 399, 401, 0, 0, 402, 403, 404, 0,
	0, 406, 407,
}

var yyPact = [...]int{
	27907, -1000, -299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -161, 25853, 25853, -1000, -1000,
	1496, -1000, 25359, 9541, 26347, 144, 26347, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 399, -1000, 24865, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 365, 28518, 242, 230,
	7555, 26347, -281, -1000, 2142, -136, -1000, -1000, -1000, -1000,
	253, 424, 24371, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 28258, 73, 424,
	515, 540, 658, 658, 11023, 2142, 238, 108, -1000, 784,
	27907, 27611, 341, 26347, -1000, 962, -1000, -1000, -1000, -1000,
=======
	0, 0, 0, 0, 388, 392, 398, 0, 399, 401,
	0, 0, 402, 403, 404, 0, 0, 406, 407,
}

var yyPact = [...]int{
	27492, -1000, -301, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -159, 25436, 25436, -1000, -1000,
	1565, -1000, 24941, 9586, 25931, 154, 25931, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 436, -1000, 24446, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 390, 28086, 265, 255,
	7596, 25931, -284, -1000, 2237, -133, -1000, -1000, -1000, -1000,
	189, 448, 23951, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27843, 65, 448,
	600, 604, 711, 711, 11071, 2237, 249, 134, -1000, 672,
	27492, 27196, 376, 25931, -1000, 999, -1000, -1000, -1000, -1000,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, 341, -1000, -1000, -1000, 2142, 2142,
	-1000, 26347, 26347, -17, 1051, -1000, 218, 231, 217, 961,
	-1000, -1000, -1000, -1000, -1000, 2089, -1000, 26347, 1732, 26347,
	-1000, 1261, 316, 28582, 1917, 699, 454, 1774, -1000, -1000,
	1719, -1000, 82, 76, 114, 489, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 95, -1000, 1946, -1000, -1000, 99, -1000,
	-1000, 93, -1000, -1000, -1000, -68, -1000, -1000, -1000, -1000,
	-1000, -145, -145, 609, 1107, 7555, -1000, 1389, -1000, 2214,
	-1000, -1000, -1000, -1000, 5076, 9037, 9037, 9037, 9037, -1000,
	-1000, 1633, 7555, 1716, 1714, -1000, -1000, -1000, -1000, 959,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1387, 8543, -1000, 1712, 1707, 1706, 1702, 1701,
	1700, 1699, 1696, 1694, 1693, 1692, 1530, 1691, 1381, 1380,
	1686, 1685, 1680, 9037, 1379, 1530, 1530, 1678, 1673, 1672,
	1671, 1670, 1668, 1667, 1665, 1664, 1663, 1660, 1655, 1654,
	1653, 1652, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
=======
	-1000, -1000, -1000, -1000, 376, -1000, -1000, -1000, 2237, 2237,
	-1000, 25931, 25931, -24, 1062, -1000, 223, 230, 217, 996,
	-1000, -1000, -1000, -1000, -1000, 2081, -1000, 25931, 1743, 25931,
	-1000, 1344, 322, 28121, 1900, 997, 478, 1769, -1000, -1000,
	1719, -1000, 91, 127, 126, 347, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 100, -1000, 1944, -1000, -1000, 83, -1000,
	-1000, 101, -1000, -1000, -1000, -80, -1000, -1000, -1000, -1000,
	-1000, -154, -154, 629, 1147, 7596, -1000, 1214, -1000, 2437,
	-1000, -1000, -1000, -1000, 5112, 9081, 9081, 9081, 9081, -1000,
	-1000, 1629, 7596, 1714, 1713, -1000, -1000, -1000, -1000, 994,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1481, 8586, -1000, 1711, 1710, 1707, 1706, 1704,
	1701, 1700, 1697, 1696, 1693, 1692, 1571, 1690, 1477, 1473,
	1688, 1686, 1685, 9081, 1472, 1571, 1571, 1684, 1683, 1678,
	1675, 1674, 1666, 1665, 1664, 1662, 1659, 1658, 1657, 1656,
	1654, 1653, 1650, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, -1000, 28088, -1000, 955, 875, -1000,
	1650, 1907, 1991, 1578, 2049, 1975, 1959, 1957, 1947, 1248,
	-1000, -1000, 71, 362, 362, 362, 390, 362, 397, -1000,
	-1000, -1000, -1000, -1000, -1000, 466, -1000, -1000, -1000, -1000,
	812, 26347, -1000, 1581, 1008, 1994, 326, 325, -1000, -1000,
	1008, 247, 320, 1991, 1991, -91, -96, 1008, 1008, -96,
	105, -1000, -1000, -1000, 1097, 322, 1097, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1951, 1934, 365, 365, 369, -1000,
	-169, -1000, -1000, 525, -1000, 478, -1000, 1261, 303, 297,
	822, 1103, -1000, 1013, 26347, 26347, 26347, 1013, 1013, 13990,
	13496, -1000, 1991, 1578, -1000, 1521, 1643, 1578, 365, 365,
	365, 365, 365, 365, 365, 26347, 6558, 6558, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 274, -1000, -1000, -1000,
	-1000, -1000, 241, 1647, -1000, 26347, 223, 1991, 1907, 1991,
	-1000, -1000, 943, 1245, 1377, -1000, -1000, 218, 996, -1000,
	547, -1000, -1000, -1000, -1000, 26347, 226, -1000, 1374, 1646,
	-1000, 348, 684, 929, -1000, 113, 28722, 21400, 1261, 21400,
	26347, -1000, -1000, -1000, -1000, -1000, -1000, -69, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 72, -1000, 72, 7555, 7555, 7555, 7555, 7555, -1000,
	383, 8049, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9037,
	9037, 9037, 9037, 9037, 9037, 9037, 9037, 9037, 9037, 9037,
	9037, 1632, 1021, 9037, 9037, 9037, 1643, 2280, 813, -1000,
	-1000, -1000, -1000, -1000, 1059, 1107, 7555, 7555, 26347, -1000,
	27996, 7555, 7555, 69, 7555, 1942, 1942, 3593, 26347, 7555,
	-1000, 1517, 1516, -1000, -1000, 1183, 7555, -1000, -1000, 7555,
	9037, 7555, -1000, -1000, -1000, -1000, 94, 1942, 7555, 7555,
	1942, 1942, 1942, 1075, 1942, 1942, 1942, 1942, 1942, 1942,
	1942, 26347, 1877, 75, -1000, -1000, -1000, 1565, -1000, 1615,
	1615, 1565, 1565, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1645, 1637, -1000, -1000, 1612, 1612, 1612, 1565,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1634, 1634, 1636, 1634, 26347,
	1991, -281, 6064, -1000, -286, 1907, 7555, -1000, -1000, 7555,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1376, 387,
	362, -1000, 26347, 1072, 21400, 1261, 1312, 26347, 362, 369,
	-1000, 26347, 812, 1921, 26347, 2074, 9037, 23877, 1097, 1008,
	2074, 1097, -1000, -1000, -1000, 1008, 1008, -1000, -1000, -1000,
	-1000, 1097, 1097, -1000, -1000, -83, 2074, 2074, -100, 26347,
	26347, 362, 26347, -1000, -1000, -1000, -1000, 26347, -1000, -1000,
	26347, 21400, 19918, -1000, -134, 519, 483, 499, -1000, -1000,
	345, 368, 12507, 294, 21400, 4581, -1000, -1000, 1013, 1013,
	1013, 4581, 4581, 871, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1907, -1000, -1000, -1000, -1000, 26347, 21400, 1261, 26347,
	26347, 26347, 27611, -1000, 785, -1000, -1000, 10529, 924, 785,
	1375, 26347, 1773, -282, -1000, 12013, 26347, 26347, -1000, -1000,
	-282, -1000, 11518, 26347, 1907, -1000, 1907, 2650, -1000, 1992,
	-1000, 218, 156, -1000, -1000, -1000, -1000, -1000, -1000, 923,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 789,
	-1000, 26347, -1000, -1000, 113, 21400, 1043, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 136, -1000, -1000, 145, -1000, 376,
	10, 991, -1000, -1000, 50, 141, 410, 50, 1107, -1000,
	1068, 1068, 1085, -1000, 396, -1000, -1000, -1000, -1000, 1633,
	-1000, -1000, -1000, 1547, 2427, -1000, 1060, 1060, 848, 848,
	848, 848, 848, 1350, 1350, -1000, -1000, -1000, 5076, 1632,
	9037, 9037, 9037, 352, 2372, 1925, -1000, 7555, 1071, -1000,
	7555, 1178, 946, 922, -1000, -1000, -1000, -1000, -1000, -1000,
=======
	-1000, -1000, -1000, -1000, -1000, -1000, 27673, -1000, 992, 844,
	-1000, 1649, 1889, 1968, 1599, 2059, 2004, 1986, 1972, 1969,
	1329, -1000, -1000, 56, 388, 388, 388, 420, 388, 434,
	-1000, -1000, -1000, -1000, -1000, -1000, 528, -1000, -1000, -1000,
	-1000, 845, 25931, -1000, 1597, 1023, 1959, 354, 352, 187,
	-1000, 1023, 234, 346, 1968, 1968, -91, -105, 1023, 1023,
	-105, 68, -1000, -1000, -1000, 1121, 338, 1121, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1938, 1932, 390, 390, 396,
	-1000, -164, -1000, -1000, 576, -1000, 569, -1000, 1344, 318,
	316, 862, 1132, -1000, 1034, 25931, 25931, 25931, 1034, 1034,
	14044, 13549, -1000, 1968, 1599, -1000, 1542, 2205, 1599, 390,
	390, 390, 390, 390, 390, 390, 25931, 6597, 6597, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 275, -1000, -1000,
	-1000, -1000, -1000, 228, 1648, -1000, 25931, 224, 1968, 1889,
	1968, -1000, -1000, 988, 1314, 1470, -1000, -1000, 223, 986,
	-1000, 709, -1000, -1000, -1000, -1000, 25931, 216, -1000, 1469,
	1641, -1000, 330, 977, 909, -1000, 153, 28158, 21469, 1344,
	21469, 25931, -1000, -1000, -1000, -1000, -1000, -1000, -82, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 64, -1000, 64, 7596, 7596, 7596, 7596, 7596,
	-1000, 386, 8091, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9081, 9081, 9081, 9081, 9081, 9081, 9081, 9081, 9081, 9081,
	9081, 9081, 1628, 1177, 9081, 9081, 9081, 2205, 2117, 849,
	-1000, -1000, -1000, -1000, -1000, 1054, 1147, 7596, 7596, 25931,
	-1000, 27581, 7596, 7596, 90, 7596, 1943, 1943, 3626, 25931,
	7596, -1000, 1540, 1539, -1000, -1000, 1218, 7596, -1000, -1000,
	7596, 9081, 7596, -1000, -1000, -1000, -1000, 66, 1943, 7596,
	7596, 1943, 1943, 1943, 1110, 1943, 1943, 1943, 1943, 1943,
	1943, 1943, 1943, 25931, 1868, 73, -1000, -1000, -1000, 1579,
	-1000, 1609, 1609, 1579, 1579, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1640, 1638, -1000, -1000, 1608, 1608,
	1608, 1579, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1632, 1632, 1635,
	1632, 25931, 1968, -284, 6102, -1000, -288, 1889, 7596, -1000,
	-1000, 7596, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1465, 417, 388, -1000, 25931, 1082, 21469, 1344, 1410, 25931,
	388, 396, -1000, 25931, 845, 1905, 25931, 2029, 9081, 21469,
	1121, 1023, -1000, 2029, 1121, -1000, -1000, -1000, 1023, 1023,
	-1000, -1000, -1000, -1000, 1121, 1121, -1000, -1000, -83, 2029,
	2029, -109, 25931, 25931, 388, 25931, -1000, -1000, -1000, -1000,
	25931, -1000, -1000, 25931, 21469, 19984, -1000, -131, 598, 578,
	580, -1000, -1000, 328, 340, 12558, 283, 21469, 4616, -1000,
	-1000, 1034, 1034, 1034, 4616, 4616, 929, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1889, -1000, -1000, -1000, -1000, 25931,
	21469, 1344, 25931, 25931, 25931, 27196, -1000, 904, -1000, -1000,
	10576, 985, 904, 1463, 25931, 1767, -285, -1000, 12063, 25931,
	25931, -1000, -1000, -285, -1000, 11567, 25931, 1889, -1000, 1889,
	2682, -1000, 1957, -1000, 223, 178, -1000, -1000, -1000, -1000,
	-1000, -1000, 984, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 842, -1000, 25931, -1000, -1000, 153, 21469, 1077,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 130, -1000, -1000,
	144, -1000, 413, 2, 971, -1000, -1000, 51, 141, 468,
	51, 1147, -1000, 1120, 1120, 1125, -1000, 371, -1000, -1000,
	-1000, -1000, 1629, -1000, -1000, -1000, 1158, 1377, -1000, 1124,
	1124, 937, 937, 937, 937, 937, 1065, 1065, -1000, -1000,
	-1000, 5112, 1628, 9081, 9081, 9081, 351, 3039, 3114, -1000,
	7596, 1074, -1000, 7596, 1385, 960, 983, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1538, 629, 1537,
	1337, 2076, 1535, 7596, -1000, -1000, 7596, 1311, 7101, -1000,
	-1000, -1000, 1533, 981, 1532, -1000, -1000, -1000, 1531, 680,
	1529, 1502, 1528, 816, 7596, 969, 968, 7596, 7596, 7596,
	7596, 1527, 7596, 7596, 7596, 7596, 7596, 7596, 7596, 7596,
	-1000, 7596, 32, -1000, -1000, -1000, -1000, 1313, -1000, 1299,
	-1000, -1000, -1000, 1461, 1461, -1000, 1298, -1000, -1000, -1000,
	-1000, 1285, -1000, -1000, 1284, -1000, -1000, -1000, -1000, 967,
	-1000, 1147, -1000, 1459, -1000, 881, 765, -1000, 1362, -1000,
	-1000, 23456, 25931, 43, -1000, 1899, 751, -1000, 2, 652,
	1734, 1864, 25931, 22961, -1000, 1627, 964, -1000, -1000, 7596,
	-1000, 1730, 25931, 2029, -1000, 25931, 2029, 2029, 1023, 27196,
	1121, 25931, 1121, -1000, -1000, 1121, -1000, 973, -1000, 25931,
	-1000, -1000, -1000, -1000, 39, 751, 2279, 768, -1000, -1000,
	-1000, -1000, 26426, 26426, 13054, 26426, -1000, 993, -1000, -1000,
	596, 531, 536, -1000, -1000, 405, -1000, -1000, 652, -1000,
	-1000, -1000, 1626, 1060, -1000, -1000, 9081, -1000, 4616, 4616,
	4616, -1000, -1000, 16024, -1000, -1000, 762, 652, 1765, 728,
	-1000, 728, -1000, 2029, 6597, -1000, 19984, -1000, -1000, 22459,
	-1000, 21964, 2029, -292, 925, -1000, 1885, 665, -1000, 1619,
	-1000, 959, 1850, -1000, 648, -1000, 1057, 958, -1000, 665,
	953, 1848, 648, -1000, -1000, -1000, 963, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, 1512, 609, 1509, 1373, 2088, 1493,
	7555, -1000, -1000, 7555, 1302, 7061, -1000, -1000, -1000, 1484,
	916, 1483, -1000, -1000, -1000, 1482, 622, 1481, 1317, 1479,
	777, 7555, 990, 966, 7555, 7555, 7555, 7555, 1477, 7555,
	7555, 7555, 7555, 7555, 7555, 7555, -1000, 7555, 52, -1000,
	-1000, -1000, -1000, 1241, -1000, 1230, -1000, -1000, -1000, 1371,
	1371, -1000, 1226, -1000, -1000, -1000, -1000, 1225, -1000, -1000,
	1224, -1000, -1000, -1000, -1000, 965, -1000, 1107, -1000, 1356,
	-1000, 867, 772, -1000, 1206, -1000, -1000, 23383, 26347, 46,
	-1000, 1916, 721, -1000, 10, 626, 1729, 1843, 26347, 22889,
	-1000, 1628, 963, -1000, -1000, 7555, -1000, 1726, 1261, 26347,
	2074, -1000, 26347, 2074, 2074, 1008, 27611, 1097, 26347, 1097,
	-1000, -1000, 1097, -1000, 915, -1000, 26347, -1000, -1000, -1000,
	-1000, 45, 721, 2409, 757, -1000, -1000, -1000, -1000, 26841,
	26841, 13002, 26841, -1000, 1006, -1000, -1000, 502, 475, 503,
	-1000, -1000, 374, -1000, -1000, 626, -1000, -1000, -1000, 1626,
	1050, -1000, -1000, 9037, -1000, 4581, 4581, 4581, -1000, -1000,
	15966, -1000, -1000, 766, 626, 1772, 759, -1000, 759, -1000,
	2074, 6558, -1000, 19918, -1000, -1000, 22388, -1000, 21894, 2074,
	-290, 632, -1000, 1859, 628, -1000, 1625, -1000, 957, 1822,
	-1000, 616, -1000, 1045, 953, -1000, 628, 952, 1813, 616,
	-1000, -1000, -1000, 902, -1000, -1000, -1000, -1000, -1000, -1000,
=======
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-18, -1000, -1000, 26347, 1374, 950, 1043, 661, -1000, 373,
	899, 890, -1000, 21400, 74, 21400, -1000, 21400, -1000, -1000,
	243, -1000, 26347, 1883, -1000, -1000, -1000, 1345, -303, 1881,
	-1000, -1000, -1000, -1000, -1000, 949, -1000, 352, 2372, 1503,
	-1000, 9037, 9037, 2251, 1037, -1000, 7555, 1164, 28006, 1242,
	14978, 26347, -1000, -1000, 7555, 7555, -1000, 2178, 2157, -1000,
	7555, 7555, 1247, -1000, 26347, -1000, -1000, -1000, 14978, -1000,
	9037, -1000, 7555, 2149, -62, -62, 2120, 2112, 2064, 947,
	-62, 2023, 2015, 1989, 1945, 1941, 1878, 1803, 1107, -1000,
	-1000, 1475, 1473, 937, -1000, 936, 1472, 931, 927, 6064,
	-1000, -105, 7555, 7555, 7555, 1836, -1000, -1000, 1581, 1064,
	1624, -71, 1034, -1000, 323, 21400, 236, -1000, 1765, 210,
	-1000, 1843, -1000, 773, -1000, 1623, 26347, 722, -1000, 861,
	27907, -1000, 26347, 1107, -1000, 1261, -1000, 1008, -1000, 2074,
	917, -1000, -1000, 2074, -1000, 1008, -1000, 1008, 1097, 26347,
	-1000, -71, 1034, 323, 26347, 19918, 19918, 19918, 19918, -1000,
	1804, 1802, -1000, 1827, 1814, 1858, 26347, 19918, 1581, -1000,
	27226, -1000, -1000, -1000, -1000, -1000, 1643, 893, 2018, 514,
	7555, -1000, -1000, -1000, 465, 21400, 1354, 294, -1000, -1000,
	-1000, -1000, -1000, 26347, 26347, 2069, -1000, 753, -1000, -1000,
	853, -1000, 2069, -1000, 1216, 1351, 1105, -282, 6064, 246,
	26347, -282, 26347, 6064, -1000, 26347, 227, -282, 2650, 1215,
	-1000, -1000, -1000, 2086, 21400, 1261, 987, 1035, -1000, 92,
	-1000, 134, 350, 1349, -1000, 395, 78, -1000, 1044, 1345,
	393, -1000, -1000, 9037, -1000, -1000, -1000, -1000, 1107, 7555,
	1471, -1000, 463, 463, 1446, -1000, 1565, 1615, -1000, 1565,
	1612, 1565, 463, 463, 1444, -1000, 1284, 1658, -1000, -1000,
	1585, 1544, 7555, -1000, 1440, 2294, 878, -62, -1000, 1594,
	-1000, -62, -62, -62, -62, -1000, -62, -62, -62, -62,
	-62, -62, -62, -1000, -1000, -1000, 1347, -1000, -1000, -1000,
	1210, -1000, 1207, -1000, -41, -28, 1107, 1107, -1000, -1000,
	1821, 1920, 1913, 10035, 1251, -1000, -1000, 20906, -1000, 311,
	-1000, -1000, -1000, 423, 102, 1200, 295, -1000, 1320, 26347,
	-1000, -1000, -1000, -1000, -1000, 1034, 1034, 1034, 10035, 341,
	613, 846, 19918, 26347, -1000, 19424, 1437, -1000, 626, 2074,
	-1000, 26347, -1000, 2074, 2074, 1008, -1000, 1251, 20906, 311,
	717, -1000, 1041, 1755, 1757, 1755, -1000, -1000, -1000, -1000,
	1788, -1000, 1561, -1000, -1000, 717, -1000, -1000, -1000, -1000,
	-1000, 514, -1000, 1952, 495, 495, 495, 1436, -1000, 661,
	1435, -1000, -1000, -1000, -1000, 2066, 2047, 20412, 2066, -1000,
	-290, 2105, -1000, 1434, 660, -282, -1000, -1000, 628, -1000,
	-1000, -1000, -282, -1000, 628, -1000, -1000, -1000, -1000, -1000,
	1261, -1000, 126, -1000, -1000, -1000, -1000, -1000, -1000, -2,
	-1000, 26347, -1000, 1345, 1343, 77, 26347, -1000, 1107, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7555, -1000, -1000, -1000, 1515, -1000,
	-1000, 7555, -1000, 336, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1432, 1422, -288, -25,
	2046, 2045, -1000, -1000, 238, 26347, 1421, 630, -1000, -1000,
	-1000, 28204, 533, -1000, 26347, 1100, 495, 362, 495, 1099,
	1593, -1000, -1000, -1000, 1339, 9, -1000, -1000, -1000, 1336,
	1332, 1199, -1000, -1000, 1243, 623, 26, -1000, -1000, -1000,
	-1000, -1000, -1000, 1592, 14978, 15472, 1330, 1420, 26841, 19918,
	19424, 672, -1000, 845, -1000, -1000, -1000, 2074, -1000, -1000,
	2074, -1000, 9, -1000, 2051, 26347, 6064, -1000, -1000, 7555,
	1591, -1000, 7555, -1000, -1000, -1000, -1000, -1000, 1589, 1869,
	-1000, -1000, -1000, -1000, -1000, -1000, 7555, 7555, -1000, -1000,
	-1000, 26347, -1000, 628, 628, 626, -1000, -1000, -100, -1000,
	-1000, -1000, -100, 1511, -1000, 1465, 2051, -1000, 2043, -1000,
	-1000, -290, 1329, -1000, 2042, 1323, 1271, -1000, 1581, 28251,
	10035, 1212, -1000, -1000, 26347, 26347, -1000, 26347, 26347, 362,
	7555, -1000, -1000, 229, -1000, -1000, 129, -1000, -1000, 1234,
	349, -1000, 17942, -1000, -1000, -1000, -1000, -1000, 72, 2074,
	672, 845, -1000, -1000, 964, -1000, -1000, -1000, 1991, -1000,
	-1000, 1107, 26347, 1107, 18930, -1000, 2039, 2038, 1107, 609,
	616, -1000, -42, -46, -1000, -1000, -1000, 53, 7555, -292,
	-1000, 1318, -29, -1000, -1000, 1919, 334, 28449, -1000, 1034,
	1034, 701, 1034, 1034, 1034, 1034, 240, 233, 1034, 1034,
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
	1034, 1034, 1577, -1000, -1000, 1212, -1000, -1000, 1119, 9037,
	-1000, -1000, 1313, 15472, 461, 496, 1576, -1000, 199, 2098,
	-1000, 1090, 1076, -1000, 26347, -1000, 1575, 1722, 158, 1574,
	-1000, 1572, 1571, 26347, 1445, 324, 1306, -1000, -1000, 124,
	-1000, -1000, 882, -1000, 1565, 7555, -1000, -100, 2051, -1000,
	-1000, 869, 842, -1000, -1000, -1000, -1000, 367, -37, -46,
	-1000, 2034, -34, 2033, 2032, 1411, -1000, 3099, -1000, -1000,
	-1000, 609, -1000, 1563, -1000, 2007, 238, 162, 2006, 28251,
	-1000, 1195, 1182, 1034, 1034, 1180, 1305, 1300, 1295, 1034,
	1034, 1171, 1285, 27226, 1160, 1156, 1155, 1201, 1280, 621,
	1187, 1169, 1167, 26347, 1550, 1259, -1000, -1000, 2372, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1153, 1549, -153, -1000, -1000, 1543, 17942, 190, 190, 17942,
	17942, 17942, 1533, 370, -1000, -5, -1000, -1000, -1000, 17942,
	1900, 1439, -1000, 1991, -1000, -1000, 18436, 1531, 1148, -25,
	2004, -1000, 1271, 2003, 1271, 1271, -1000, -1000, 4087, -283,
	-60, 252, 26347, 1271, -1000, -1000, 2002, 267, -1000, -1000,
	-1000, 14978, 14978, -1000, -1000, -1000, -1000, 1276, 1274, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 257, 26347, 841, -1000, 1039, 1394, 7555, 1530, -201,
	17942, 801, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 800,
	796, 795, 17942, -1000, -1000, -1000, 192, -1000, 152, -1000,
	-1000, 1900, -1000, -1000, -1000, 1931, 14484, -53, -1000, 1272,
	-1000, 1271, -1000, -1000, 1083, -1000, -1000, -1000, -1000, -1000,
	767, -1000, -1000, 17448, 175, 237, 228, -1000, 371, -1000,
	-1000, -1000, -1000, -1000, -1000, 309, 756, -1000, 1259, 1252,
	-1000, 1391, -1000, 1753, -1000, 51, 752, -1000, -1000, -1000,
	-1000, 744, -1000, -1000, 1034, 1211, 148, -1000, -1000, -1000,
	-1000, 26347, -1000, 728, -1000, -1000, -1000, 840, -1000, -1000,
	-1000, -1000, 4087, -1000, 26347, -1000, 26347, 172, 1147, 9037,
	1526, 9037, 1525, 183, 1524, -1000, -1000, -1000, -1000, -1000,
	370, -1000, 1744, 1735, 2079, -1000, -1000, -1000, -1000, 152,
	152, 152, 152, 86, 1130, -1000, 1312, 598, -1000, 1032,
	-1000, 16954, 26347, -1000, -1000, 724, 1523, 2000, -1000, 1879,
	26347, 1784, 26347, 1497, 1025, 9037, -1000, -1000, 2097, -1000,
	2095, 467, 467, -1000, -1000, -1000, 26347, 5570, -1000, 831,
	-1000, -1000, 329, 180, -1000, 723, -1000, 718, 16460, 1127,
	1450, -1000, -1000, -1000, 1152, 205, -1000, -1000, -1000, 1107,
	26347, 714, -1000, 1287, 166, -1000, -1000, -1000, 689, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 329, 1810, -1000, 1126,
	-1000, -1000, 1269, 452, -1000, -1000, 1269, 168, -1000, 300,
	1275, -1000, -1000, 677, -1000, 1250, 500, 7555, -1000, 168,
	28251, -1000, 7555, 674, -1000, 28251, 646, -1000, -1000,
}

var yyPgo = [...]int{
	0, 114, 2622, 202, 134, 131, 201, 2621, 2620, 1916,
	1915, 2619, 2618, 2617, 2616, 2615, 2614, 2613, 2612, 2610,
	2606, 2605, 2604, 2603, 2602, 2597, 2596, 2594, 200, 2593,
	2592, 2591, 2590, 2589, 2588, 2587, 2585, 2578, 2575, 2574,
	2572, 2569, 2568, 2567, 2566, 2565, 2560, 2557, 2556, 129,
	2555, 1897, 2554, 2541, 2539, 2535, 2534, 171, 2533, 2532,
	2531, 2530, 2529, 2528, 2526, 2524, 2522, 2517, 2516, 2515,
	2514, 2513, 146, 2512, 2510, 2509, 2508, 2507, 2506, 192,
	186, 57, 2505, 54, 49, 149, 206, 137, 205, 203,
	145, 123, 87, 2504, 1949, 2503, 175, 187, 113, 25,
	2502, 119, 2501, 111, 42, 39, 199, 108, 56, 63,
	88, 2485, 174, 81, 2484, 2482, 94, 2481, 58, 2480,
	73, 52, 92, 27, 2479, 2478, 2476, 76, 2472, 2470,
	2460, 2459, 128, 2458, 97, 72, 2456, 2454, 2453, 2452,
	2451, 34, 2449, 48, 2448, 2447, 2446, 2444, 62, 2442,
	2441, 12, 17, 21, 2440, 16, 3, 2438, 177, 59,
	79, 117, 2437, 387, 2436, 2435, 2433, 120, 2432, 393,
	2430, 2429, 2428, 2422, 9, 2421, 165, 2407, 2406, 75,
	100, 2405, 51, 154, 167, 2404, 2402, 105, 35, 74,
	102, 2396, 2395, 67, 173, 29, 32, 0, 156, 41,
	2394, 2391, 2390, 210, 155, 152, 188, 125, 207, 127,
	2387, 2375, 55, 2374, 116, 2369, 101, 8, 2368, 143,
	2366, 179, 139, 2365, 164, 2364, 121, 2, 109, 2363,
	2361, 26, 226, 2359, 2358, 2357, 136, 2356, 2354, 84,
	133, 2353, 2345, 2328, 30, 2323, 28, 20, 2321, 78,
	2317, 213, 161, 184, 103, 140, 126, 106, 182, 189,
	65, 118, 1118, 110, 77, 18, 2315, 183, 2314, 209,
	204, 2313, 150, 2312, 197, 365, 168, 2309, 144, 10,
	2307, 2306, 2305, 7, 2304, 112, 2302, 2301, 19, 2299,
	23, 2273, 2272, 2267, 2265, 6, 2264, 2263, 2261, 1,
	4, 2260, 5, 166, 53, 104, 2258, 96, 198, 2257,
	2255, 2252, 2251, 2244, 222, 2243, 2237, 2236, 2235, 2233,
	2232, 2231, 2230, 85, 33, 2228, 2227, 2226, 2223, 66,
	107, 2221, 300, 169, 2218, 36, 2215, 2214, 24, 2209,
	31, 2207, 2206, 2198, 14, 148, 2196, 2195, 15, 2194,
	2193, 11, 13, 2190, 2186, 61, 2185, 46, 40, 70,
	68, 2183, 22, 64, 99, 2181, 2179, 195, 193, 163,
	2178, 141, 191, 208, 2177, 172, 2176, 2174, 2172, 2170,
	2169, 2168, 2165, 1120, 2163, 2162, 194, 60, 180, 91,
	2160, 2158, 2146, 71, 122, 98, 86, 162, 2145, 153,
	2142, 2137, 80, 2134, 2129, 2128, 2125, 2123, 2122, 2120,
	190, 160, 2119,
}

//line mysql_sql.y:8096
=======
	-1000, -1000, -1000, -28, -1000, -1000, 25931, 1469, 952, 1077,
	704, -1000, 400, 947, 943, -1000, 21469, 67, 21469, -1000,
	21469, -1000, -1000, 240, -1000, 25931, 1887, -1000, -1000, -1000,
	1450, -308, 1874, -1000, -1000, -1000, -1000, -1000, 950, -1000,
	351, 3039, 3012, -1000, 9081, 9081, 2111, 1066, -1000, 7596,
	1208, 27591, 342, 15034, 25931, -1000, -1000, 7596, 7596, -1000,
	2100, 2091, -1000, 7596, 7596, 1297, -1000, 25931, -1000, -1000,
	-1000, 15034, -1000, 9081, -1000, 7596, 2083, -74, -74, 2042,
	2035, 2025, 930, -74, 1994, 1965, 1960, 1934, 1922, 1917,
	1807, 1646, 1147, -1000, -1000, 1526, 1525, 913, -1000, 885,
	1524, 880, 874, 6102, -1000, -114, 7596, 7596, 7596, 1858,
	-1000, -1000, 1597, 1081, 1618, -72, 1041, -1000, 373, 21469,
	287, -1000, 1764, 195, -1000, 1864, -1000, 637, -1000, 1617,
	25931, 774, -1000, 942, 27492, -1000, 25931, 1147, -1000, 1344,
	1023, -1000, 2029, 944, -1000, -1000, 2029, -1000, 1023, -1000,
	1023, 1121, 25931, -1000, -72, 1041, 373, 25931, 19984, 19984,
	19984, 19984, -1000, 1803, 1802, -1000, 1823, 1810, 1814, 25931,
	19984, 1597, -1000, 26811, -1000, -1000, -1000, -1000, -1000, 2205,
	872, 2181, 566, 7596, -1000, -1000, -1000, 523, 21469, 1458,
	283, -1000, -1000, -1000, -1000, -1000, 25931, 25931, 2065, -1000,
	713, -1000, -1000, 932, -1000, 2065, -1000, 1280, 1453, 1171,
	-285, 6102, 252, 25931, -285, 25931, 6102, -1000, 25931, 229,
	-285, 2682, 1277, -1000, -1000, -1000, 2068, 21469, 1344, 989,
	1049, -1000, 72, -1000, 123, 329, 1452, -1000, 429, 79,
	-1000, 1055, 1450, 424, -1000, -1000, 9081, -1000, -1000, -1000,
	-1000, 1147, 7596, 1523, -1000, 514, 514, 1522, -1000, 1579,
	1609, -1000, 1579, 1608, 1579, 514, 514, 1521, -1000, 1357,
	1587, -1000, -1000, 1561, 1480, 7596, -1000, 1520, 2561, 775,
	-74, -1000, 1607, -1000, -74, -74, -74, -74, -1000, -74,
	-74, -74, -74, -74, -74, -74, -74, -1000, -1000, -1000,
	1451, -1000, -1000, -1000, 1276, -1000, 1272, -1000, -58, -50,
	1147, 1147, -1000, -1000, 1839, 1904, 1898, 10081, 1318, -1000,
	-1000, 20974, -1000, 309, -1000, -1000, -1000, 419, 113, 1270,
	306, -1000, 1483, 25931, -1000, -1000, -1000, -1000, -1000, 1041,
	1041, 1041, 10081, 376, 756, 895, 19984, 25931, -1000, 19489,
	1518, -1000, 652, 2029, -1000, 25931, -1000, 2029, 2029, 1023,
	-1000, 1318, 20974, 309, 801, -1000, 1051, 1733, 1760, 1733,
	-1000, -1000, -1000, -1000, 1781, -1000, 1660, -1000, -1000, 801,
	-1000, -1000, -1000, -1000, -1000, 566, -1000, 1949, 541, 541,
	541, 1513, -1000, 704, 1512, -1000, -1000, -1000, -1000, 2062,
	2044, 20479, 2062, -1000, -292, 2096, -1000, 1508, 686, -285,
	-1000, -1000, 665, -1000, -1000, -1000, -285, -1000, 665, -1000,
	-1000, -1000, -1000, -1000, 1344, -1000, 122, -1000, -1000, -1000,
	-1000, -1000, -1000, -13, -1000, 25931, -1000, 1450, 1449, 78,
	25931, -1000, 1147, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7596, -1000,
	-1000, -1000, 1476, -1000, -1000, 7596, -1000, 372, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1506, 1491, -290, -34, 2043, 2034, -1000, -1000, 249,
	25931, 1490, 678, -1000, -1000, -1000, 27789, 544, -1000, 25931,
	1169, 541, 388, 541, 1166, 1606, -1000, -1000, -1000, 1438,
	-2, -1000, -1000, -1000, 1434, 1416, 1263, -1000, -1000, 1305,
	870, 18, -1000, -1000, -1000, -1000, -1000, -1000, 1605, 15034,
	15529, 1415, 1489, 26426, 19984, 19489, 789, -1000, 889, -1000,
	-1000, -1000, 2029, -1000, -1000, 2029, -1000, -2, -1000, 1987,
	25931, 6102, -1000, -1000, 7596, 1603, -1000, 7596, -1000, -1000,
	-1000, -1000, -1000, 1601, 1873, -1000, -1000, -1000, -1000, -1000,
	-1000, 7596, 7596, -1000, -1000, -1000, 25931, -1000, 665, 665,
	652, -1000, -1000, -109, -1000, -1000, -1000, -109, 1471, -1000,
	1437, 1987, -1000, 2028, -1000, -1000, -292, 1414, -1000, 2027,
	1413, 1363, -1000, 1597, 27836, 10081, 1317, -1000, -1000, 25931,
	25931, -1000, 25931, 25931, 388, 7596, -1000, -1000, 233, -1000,
	-1000, 117, -1000, -1000, 1304, 336, -1000, 18004, -1000, -1000,
	-1000, -1000, -1000, 64, 2029, 789, 889, -1000, -1000, 970,
	-1000, -1000, -1000, 1968, -1000, -1000, 1147, 25931, 1147, 18994,
	-1000, 2026, 2022, 1147, 629, 648, -1000, -59, -43, -1000,
	-1000, -1000, 46, 7596, -294, -1000, 1412, -37, -1000, -1000,
	1902, 370, 1262, -1000, 1041, 1041, 659, 1041, 1041, 1041,
	1041, 253, 237, 1041, 1041, 1041, 1041, 1041, 1041, 1041,
	1041, 1041, 1041, 1041, 1041, 1041, 1041, 1596, -1000, -1000,
	1317, -1000, -1000, 1131, 9081, -1000, -1000, 1401, 15529, 521,
	509, 1595, -1000, 203, 2095, -1000, 1153, 1128, -1000, 25931,
	-1000, 1593, 1418, 150, 1590, -1000, 1582, 1581, 25931, 1374,
	321, 1399, -1000, -1000, 114, -1000, -1000, 869, -1000, 1579,
	7596, -1000, -109, 1987, -1000, -1000, 866, 865, -1000, -1000,
	-1000, -1000, 395, -55, -43, -1000, 2020, -38, 2018, 2011,
	1487, -1000, 3131, -1000, -1000, -1000, 629, -1000, 1578, -1000,
	2002, 249, 163, 1999, 27836, -1000, 1259, 1250, 1041, 1041,
	1235, 1398, 1396, 1395, 1041, 1041, 1231, 1383, 26811, 1230,
	1219, 1216, 1275, 1378, 472, 1271, 1253, 1225, 25931, 1577,
	1351, -1000, -1000, 3039, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1213, 1576, -124, -1000, -1000,
	1575, 18004, 276, 276, 18004, 18004, 18004, 1574, 374, -1000,
	-14, -1000, -1000, -1000, 18004, 1893, 1370, -1000, 1968, -1000,
	-1000, 18499, 1572, 1194, -34, 1978, -1000, 1363, 1976, 1363,
	1363, -1000, -1000, 4121, -286, -68, 231, 25931, 1363, -1000,
	-1000, 1974, 208, -1000, -1000, -1000, 15034, 15034, -1000, -1000,
	-1000, -1000, 1372, 1368, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 282, 25931, 858, -1000,
	1048, 1474, 7596, 1571, -201, 18004, 854, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 853, 850, 848, 18004, -1000, -1000,
	-1000, 200, -1000, 155, -1000, -1000, 1893, -1000, -1000, -1000,
	1916, 14539, -61, -1000, 1366, -1000, 1363, -1000, -1000, 1089,
	-1000, -1000, -1000, -1000, -1000, 843, -1000, -1000, 17509, 180,
	221, 215, -1000, 348, -1000, -1000, -1000, -1000, -1000, -1000,
	337, 833, -1000, 1351, 1348, -1000, 1342, -1000, 1752, -1000,
	29, 827, -1000, -1000, -1000, -1000, 826, -1000, -1000, 1041,
	1335, 149, -1000, -1000, -1000, -1000, 25931, -1000, 804, -1000,
	-1000, -1000, 879, -1000, -1000, -1000, -1000, 4121, -1000, 25931,
	-1000, 25931, 174, 1191, 9081, 1570, 9081, 1568, 185, 1564,
	-1000, -1000, -1000, -1000, -1000, 374, -1000, 1750, 1745, 2084,
	-1000, -1000, -1000, -1000, 155, 155, 155, 155, 63, 1189,
	-1000, 1410, 623, -1000, 1040, -1000, 17014, 25931, -1000, -1000,
	791, 1548, 1966, -1000, 2502, 25931, 1952, 25931, 1547, 1032,
	9081, -1000, -1000, 2089, -1000, 2086, 475, 475, -1000, -1000,
	-1000, 25931, 5607, -1000, 871, -1000, -1000, 369, 183, -1000,
	781, -1000, 763, 16519, 1186, 1085, -1000, -1000, -1000, 1221,
	210, -1000, -1000, -1000, 1147, 25931, 739, -1000, 1373, 169,
	-1000, -1000, -1000, 727, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 369, 1820, -1000, 1185, -1000, -1000, 1663, 482, -1000,
	-1000, 1663, 171, -1000, 332, 1546, -1000, -1000, 719, -1000,
	1345, 519, 7596, -1000, 171, 27836, -1000, 7596, 699, -1000,
	27836, 679, -1000, -1000,
}

var yyPgo = [...]int{
	0, 125, 2572, 200, 131, 129, 195, 2571, 2551, 1907,
	1906, 2546, 2545, 2543, 2539, 2538, 2537, 2536, 2535, 2534,
	2529, 2527, 2522, 2521, 2520, 2519, 2518, 2517, 194, 2515,
	2514, 2513, 2512, 2511, 2510, 2509, 2508, 2507, 2506, 2503,
	2500, 2499, 2498, 2497, 2496, 2495, 2494, 2493, 2492, 126,
	2489, 1903, 2487, 2486, 2485, 2484, 2483, 171, 2481, 2480,
	2478, 2477, 2475, 2473, 2472, 2471, 2470, 2469, 2468, 2467,
	2466, 2465, 142, 2464, 2463, 2461, 2459, 2458, 2456, 190,
	174, 57, 2455, 46, 39, 155, 208, 152, 207, 205,
	145, 122, 66, 2453, 1931, 2451, 169, 183, 109, 25,
	2450, 133, 2449, 113, 41, 49, 202, 106, 52, 63,
	91, 2447, 177, 79, 2446, 2445, 94, 2444, 58, 2443,
	67, 73, 85, 29, 2442, 2441, 2440, 74, 2439, 2438,
	2437, 2435, 135, 2434, 92, 68, 2433, 2432, 2431, 2427,
	2424, 32, 2423, 59, 2422, 2421, 2420, 2419, 60, 2417,
	2416, 12, 17, 21, 2415, 16, 3, 2414, 178, 89,
	78, 103, 2412, 400, 2407, 2401, 2400, 114, 2399, 397,
	2396, 2394, 2393, 2392, 9, 2390, 170, 2387, 2384, 75,
	98, 2383, 53, 146, 156, 2381, 2378, 102, 50, 70,
	99, 2377, 2376, 88, 176, 27, 28, 0, 166, 31,
	2375, 2374, 2373, 201, 150, 154, 184, 159, 210, 123,
	2371, 2370, 51, 2368, 117, 2367, 95, 7, 2366, 137,
	2364, 181, 139, 2363, 163, 2362, 151, 2, 108, 2361,
	2360, 26, 225, 2359, 2358, 2354, 128, 2353, 2351, 86,
	136, 2349, 2348, 2347, 54, 2346, 30, 20, 2345, 77,
	2344, 203, 2343, 175, 104, 140, 138, 107, 182, 185,
	61, 112, 1138, 101, 80, 18, 2342, 180, 2340, 199,
	206, 2337, 148, 2331, 192, 355, 167, 2330, 141, 8,
	2328, 2326, 2325, 10, 2324, 134, 2322, 2320, 19, 2318,
	23, 2317, 2316, 2314, 2313, 6, 2311, 2310, 2306, 1,
	4, 2305, 5, 168, 42, 96, 2304, 97, 204, 2303,
	2302, 2301, 2300, 2277, 224, 2274, 2272, 2271, 2270, 2268,
	2265, 2264, 2262, 76, 34, 2261, 2258, 2257, 2253, 64,
	105, 2252, 271, 165, 2251, 36, 2249, 2248, 24, 2247,
	33, 2233, 2232, 2229, 14, 144, 2228, 2227, 15, 2226,
	2225, 11, 13, 2220, 2219, 56, 2218, 48, 35, 65,
	72, 2216, 22, 62, 100, 2215, 2205, 191, 189, 162,
	2198, 120, 186, 209, 2195, 173, 2186, 2171, 2167, 2166,
	2161, 2160, 2157, 1149, 2155, 2154, 187, 55, 179, 90,
	2153, 2150, 2148, 71, 118, 84, 87, 158, 2147, 147,
	2139, 2137, 81, 2130, 2129, 2123, 2122, 2120, 2113, 2112,
	188, 119, 2111,
}

//line mysql_sql.y:8099
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 408, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 77, 406, 406, 406, 407, 407, 76, 76,
	66, 65, 354, 354, 353, 353, 352, 352, 351, 351,
	351, 350, 350, 350, 349, 349, 348, 348, 347, 347,
	345, 345, 346, 344, 343, 343, 343, 341, 341, 339,
	339, 340, 340, 334, 334, 337, 337, 335, 335, 335,
	335, 338, 333, 333, 333, 332, 332, 64, 64, 64,
	264, 264, 63, 63, 278, 278, 278, 278, 278, 276,
	276, 276, 276, 276, 276, 275, 275, 274, 274, 279,
	279, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 58, 58, 58, 58, 61, 61, 61, 62, 273,
	273, 273, 59, 60, 60, 263, 263, 268, 268, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 272, 272, 272, 270, 270, 269, 269, 271, 271,
	52, 52, 52, 55, 54, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 53, 53, 53, 53, 53, 53,
	50, 50, 50, 50, 50, 49, 49, 51, 51, 261,
	261, 260, 69, 69, 69, 69, 69, 69, 69, 68,
	68, 71, 71, 70, 57, 57, 57, 57, 57, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 378, 378,
	378, 380, 380, 201, 202, 409, 200, 200, 200, 374,
	374, 375, 376, 377, 377, 377, 67, 7, 7, 47,
	392, 392, 48, 399, 399, 314, 314, 214, 214, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 317, 318, 210, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 35, 34, 34, 34, 250,
	250, 33, 410, 410, 184, 184, 41, 42, 43, 32,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 46,
	46, 328, 328, 412, 412, 412, 44, 45, 313, 313,
	313, 39, 38, 37, 36, 36, 31, 31, 30, 30,
	207, 207, 209, 209, 205, 411, 411, 290, 290, 208,
	208, 29, 29, 29, 206, 206, 183, 204, 204, 204,
	8, 8, 6, 11, 11, 11, 11, 11, 11, 11,
	11, 17, 19, 258, 258, 255, 18, 14, 13, 16,
	12, 15, 5, 5, 5, 5, 9, 9, 10, 91,
	91, 122, 122, 387, 387, 383, 383, 384, 384, 384,
	385, 385, 386, 386, 72, 322, 322, 322, 322, 322,
	322, 4, 321, 321, 321, 321, 321, 321, 405, 405,
	363, 363, 363, 364, 112, 112, 107, 107, 323, 323,
	228, 365, 365, 331, 331, 330, 330, 329, 329, 110,
	110, 111, 111, 94, 94, 80, 80, 336, 336, 336,
	336, 342, 342, 311, 311, 148, 148, 177, 177, 178,
	178, 84, 84, 85, 85, 85, 85, 85, 85, 371,
	371, 373, 373, 372, 109, 109, 105, 105, 106, 106,
	106, 104, 104, 103, 102, 102, 101, 99, 99, 99,
	100, 100, 100, 87, 87, 86, 86, 86, 86, 86,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 88, 88, 379, 379, 379, 315, 315, 315,
	320, 320, 160, 160, 161, 161, 159, 159, 89, 89,
	90, 90, 90, 90, 158, 158, 157, 92, 92, 98,
	97, 97, 93, 93, 93, 93, 168, 168, 167, 167,
	167, 167, 75, 78, 78, 79, 115, 115, 166, 165,
	165, 165, 114, 114, 113, 113, 108, 108, 96, 96,
	96, 96, 164, 95, 162, 404, 404, 403, 403, 402,
	400, 400, 400, 401, 401, 401, 401, 356, 356, 356,
	356, 356, 193, 193, 193, 199, 199, 192, 192, 192,
	192, 192, 203, 198, 198, 194, 194, 195, 195, 195,
	3, 3, 3, 3, 23, 23, 23, 23, 27, 27,
	381, 381, 20, 388, 391, 389, 389, 393, 393, 393,
	394, 394, 394, 395, 395, 21, 390, 396, 396, 396,
	259, 259, 256, 257, 257, 254, 253, 253, 253, 398,
	398, 397, 397, 397, 196, 196, 22, 249, 249, 251,
	252, 252, 243, 243, 243, 243, 26, 247, 247, 248,
	248, 248, 248, 248, 244, 244, 246, 246, 242, 242,
	242, 242, 242, 25, 241, 241, 239, 239, 237, 237,
	238, 238, 236, 236, 236, 240, 240, 24, 24, 82,
	81, 81, 81, 180, 180, 179, 179, 83, 316, 316,
	280, 280, 281, 281, 281, 284, 284, 296, 296, 297,
	297, 295, 295, 302, 302, 301, 301, 300, 300, 299,
	299, 298, 298, 298, 298, 293, 293, 292, 292, 282,
	282, 282, 282, 282, 283, 283, 283, 291, 291, 294,
	294, 139, 139, 140, 140, 140, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 361, 361, 362, 142, 142,
	142, 146, 146, 146, 146, 146, 146, 141, 141, 143,
	143, 123, 123, 121, 121, 116, 116, 117, 117, 118,
	118, 119, 119, 120, 120, 120, 120, 120, 120, 266,
	266, 359, 359, 360, 360, 355, 355, 355, 358, 358,
	358, 358, 358, 357, 357, 124, 175, 175, 175, 197,
	197, 197, 174, 174, 174, 138, 138, 137, 137, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 265, 265, 211, 211, 212, 212,
	155, 154, 154, 154, 154, 154, 152, 153, 151, 151,
	151, 151, 151, 150, 150, 149, 149, 149, 245, 245,
	147, 147, 145, 145, 145, 144, 144, 144, 303, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
<<<<<<< HEAD
	219, 219, 220, 220, 225, 225, 370, 370, 369, 125,
	125, 125, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 134, 134, 134, 288, 288, 288, 288, 288, 289,
	289, 289, 286, 286, 287, 287, 229, 230, 230, 285,
	285, 173, 173, 173, 173, 173, 173, 173, 173, 173,
=======
	219, 220, 220, 225, 225, 370, 370, 369, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	134, 134, 134, 288, 288, 288, 288, 288, 289, 289,
	289, 286, 286, 287, 287, 229, 230, 230, 285, 285,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	173, 173, 173, 173, 173, 173, 327, 327, 327, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 382, 382, 382, 366, 366, 366, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 172, 172, 172,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 231, 231, 232, 232, 324, 324, 324,
	324, 324, 324, 325, 325, 326, 326, 326, 326, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 218, 169,
	169, 169, 233, 226, 226, 227, 227, 221, 221, 221,
	221, 221, 221, 221, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 222, 222, 224, 224, 235, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 136, 136,
	136, 136, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 127, 127, 127, 127, 131, 131, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 132, 132, 132, 132, 130, 130, 130,
	130, 130, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 73, 74,
	74, 129, 176, 176, 304, 304, 307, 307, 305, 305,
	306, 308, 308, 308, 309, 309, 309, 310, 310, 310,
	312, 312, 182, 182, 182, 189, 189, 181, 181, 190,
	190, 191, 191, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 4, 0, 1, 1, 0, 1, 6, 8,
	9, 9, 0, 2, 1, 3, 3, 3, 1, 3,
	5, 0, 2, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 0, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 1, 1, 1, 1, 6, 1, 1, 7,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
<<<<<<< HEAD
	1, 1, 1, 1, 1, 4, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 2, 2, 4,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 6,
	8, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 6, 7, 4, 4, 7, 8,
	0, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 11,
	0, 1, 7, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 0, 2, 7, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 5, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 2,
	2, 4, 5, 1, 3, 0, 3, 5, 0, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
=======
	1, 1, 1, 1, 1, 4, 2, 5, 0, 2,
	7, 0, 1, 0, 1, 5, 3, 2, 4, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 6, 7, 4, 4, 7, 8, 0,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 4, 5, 1, 3, 1, 1, 3, 5, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 11, 0,
	1, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 5, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 11, 9, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
<<<<<<< HEAD
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	6, 6, 5, 5, 6, 6, 6, 6, 5, 6,
=======
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 6,
	6, 5, 5, 6, 6, 6, 6, 5, 6, 6,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 5, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -408, -2, -1, -3, -76, -4, -72, -5, -6,
	-8, -56, -68, -70, -71, -28, -7, -67, -49, -50,
	-52, -58, -63, -64, -65, -66, -73, -74, -75, -84,
	-77, -23, -22, -21, -20, 391, 12, 433, -9, -10,
	-371, -11, 230, -200, -201, -202, -409, -29, -30, -31,
	-36, -37, -38, -39, -44, -45, -46, -32, -33, -34,
	-35, -41, -42, -43, -48, -47, 207, -51, 61, -53,
	-54, -55, -59, -60, -61, -62, 322, 328, 381, 390,
	514, 515, 46, -85, -87, 516, -24, -25, -26, -27,
	203, 14, 466, -12, -15, -13, -16, -14, -18, -19,
	-17, 225, 224, 37, 288, 289, 326, 223, 204, 13,
	135, 136, 138, 139, 30, -86, 67, 205, -88, 10,
	517, 426, -94, 38, -121, -197, 70, -185, -188, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 436, 304, 463, 242, 266,
	352, 269, 276, 135, 154, 148, 176, 168, 143, 246,
	281, 247, 77, 138, 419, 87, 402, 378, 141, 261,
	263, 265, 268, 248, 164, 159, 260, 244, 514, 157,
	249, 39, 250, 181, 251, 252, 468, 398, 303, 404,
	273, 376, 158, 399, 264, 401, 183, 187, 411, 328,
	152, 153, 406, 413, 180, 222, 42, 465, 234, 414,
	185, 179, 175, 422, 277, 275, 178, 151, 174, 245,
	50, 189, 188, 190, 372, 373, 374, 375, 253, 254,
	316, 410, 171, 160, 307, 144, 22, 417, 229, 403,
	329, 255, 270, 278, 184, 186, 236, 241, 467, 380,
	240, 274, 415, 156, 233, 262, 228, 418, 145, 322,
	331, 256, 139, 267, 412, 421, 49, 344, 150, 142,
	219, 136, 238, 243, 11, 257, 258, 259, 280, 279,
	271, 172, 235, 177, 162, 149, 173, 137, 237, 420,
	345, 512, 305, 361, 170, 167, 239, 212, 416, 405,
	140, 365, 346, 165, 282, 509, 510, 511, 317, 302,
	283, 284, 163, 226, 397, 285, 287, 371, 295, 347,
	379, 353, 348, 196, -94, -51, -10, -9, -86, -87,
	-121, 210, -204, 23, 376, -57, 377, 207, 67, -197,
	-5, -4, -72, -49, -84, -203, -197, 288, -203, 210,
	-197, 240, 360, -314, 215, -275, -249, 241, -274, -251,
	-277, -252, 31, 203, 205, 204, 237, 14, 326, 211,
	12, 10, 327, 223, 24, 25, 27, 13, 328, 330,
	28, 331, 334, 335, 336, 41, 339, 340, 230, 70,
	73, 248, 248, -227, -221, 94, 231, -223, -216, -217,
	-219, -351, -345, -215, 67, 119, 120, 127, 95, -218,
	-303, 35, 97, 473, 434, -170, -171, -172, -173, -197,
	-346, -344, 73, 78, 81, 84, 85, 83, 82, 161,
	80, 74, 131, 132, -87, 70, -366, 481, -186, 502,
	482, 501, 46, -319, -326, 209, -324, 166, 226, 162,
	12, 125, 371, 130, 163, 478, 498, 436, 505, 475,
	476, 470, 471, 472, 474, 483, 485, 497, -327, 493,
	503, 504, 491, 72, 71, 496, 495, 484, 479, 480,
	486, 469, 477, 487, 488, 494, 499, 500, 310, 87,
	311, 312, 426, 306, 313, 215, 376, 55, 314, 315,
	316, 317, 318, 433, 319, 56, 320, 309, 230, 361,
	321, 165, 182, 438, 437, 439, 430, 427, 425, 428,
	429, 431, 432, 489, 490, 492, -271, -269, -197, -78,
	-79, 507, -103, -104, -163, 19, 6, 7, 8, 9,
	-406, 378, 467, -316, 304, 361, 240, -243, -241, 285,
	337, 220, 219, 88, 426, 209, -383, -384, 200, 201,
	202, -373, 459, -372, -197, 312, 26, 210, 323, 408,
	409, -40, -328, -313, 405, 404, -208, 403, 396, 407,
	398, 203, 460, -182, 347, 379, 236, 423, 424, 324,
	380, 411, 412, 399, 87, 169, 166, 304, 361, -383,
	140, 137, -262, 140, 93, 145, 144, -262, 240, 360,
	40, -268, 371, -267, -269, 411, 412, 422, 71, 72,
	410, -182, 87, -104, -163, -103, -85, -87, -371, 304,
	361, 240, 211, 210, 212, 426, 288, -315, -379, 31,
	-320, 197, 198, 199, 32, 33, -1, -198, -195, -188,
	70, 71, 72, -110, 232, -121, 133, -110, -104, -103,
	-104, -121, -174, -197, 378, 103, -57, -57, 377, -374,
	-375, -376, -378, 207, 377, 376, 133, 15, -203, 65,
	-121, -251, 240, -275, -249, 35, 64, 134, 213, 134,
	64, 67, 324, 304, 361, 325, 426, 210, 337, 212,
	240, 338, 304, 361, 210, 212, 426, 240, 304, 210,
	212, 361, 240, 338, 396, 397, 212, 26, 329, 332,
	333, 397, -332, 422, -332, 134, 93, 90, 91, 92,
	-221, 110, -234, 103, 104, 105, 106, 107, 108, 109,
	116, 115, 126, 119, 120, 121, 122, 123, 124, 125,
	117, 118, 113, 94, 111, 112, 96, -87, -221, -227,
	-219, -219, -219, -219, -303, -225, -221, 67, 67, 133,
	73, -221, 67, 67, 67, 67, 67, 67, 67, 67,
	67, -325, 67, 67, -231, -232, 67, 67, 73, 73,
	67, 67, 67, -219, 73, -232, -232, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
<<<<<<< HEAD
	67, 134, -127, -131, -128, -130, -129, -133, -132, 166,
	167, 130, 170, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 30, 182, 226, 162, 163, 164, 165,
	183, 148, 168, 464, 191, 149, 192, 150, 193, 151,
	194, 152, 153, 195, 154, 157, 158, 159, 156, 133,
	-104, 134, 67, -80, 38, -106, 21, -88, -87, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 78, -381,
	210, 459, -239, 215, -239, -239, 211, -239, 210, -385,
	147, 134, -373, -109, 67, -207, 111, 23, 238, 238,
	-207, -412, 211, 406, 42, 239, 238, -105, -106, -105,
	400, 397, -290, 401, 402, -208, -207, -207, -208, 210,
	212, 426, -410, -411, 15, 113, 238, -410, 30, 30,
	-314, -314, -386, 214, 415, 466, 143, 144, 145, -251,
	240, 240, 134, 103, 23, -270, 103, 114, -269, -269,
	-269, -270, -270, -141, 40, -196, 130, -197, 73, -141,
	40, -105, -88, -87, 68, 68, -314, -314, -314, -314,
	-314, -314, -314, -203, -89, -90, 121, -221, -197, -89,
	38, 397, -321, 46, -84, 67, 30, 67, -197, -322,
	46, -84, 67, 30, -105, -80, -106, 133, 78, 73,
	-57, 68, 134, -377, 84, 85, -380, 180, 172, -197,
	-69, 73, -3, -4, -5, -6, -28, -49, -84, -347,
	-345, 67, 31, 370, 64, 15, -276, 210, 426, 323,
	236, 212, 304, -274, -258, -255, -253, -196, -251, -254,
	-253, -279, -174, 397, -81, 382, 287, -81, -221, -221,
	-221, -221, -221, 83, 94, 302, 84, 85, -216, -235,
	31, 283, 284, -217, -217, -217, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, -224, -233, -303, 67, 113,
	111, 112, 96, -219, -217, -217, 68, 134, -370, -369,
	98, -221, -221, -197, -367, -368, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 314, 309, 315,
	313, 306, 321, 316, 317, 165, 457, 458, 451, 452,
	453, 454, 455, 456, -226, -227, -226, -221, -367, -226,
	-169, 32, 31, -169, -221, -382, 300, 299, 301, -107,
	-197, -226, 68, 68, 68, 78, -227, -226, -217, -226,
	-368, -169, -227, -227, -169, -169, -169, -169, 121, -169,
	-169, -169, -169, -169, -169, -169, -269, 40, -310, 345,
	344, -304, -306, 67, -305, 67, -305, -304, -304, 67,
	67, -307, 67, -307, -307, -304, -308, 67, -308, -309,
	67, -308, -197, -105, -79, -330, -329, -221, 40, 507,
	-80, -221, -102, -101, -221, -407, 73, 212, -239, -388,
	-197, 94, -259, -256, -253, -249, -195, -197, -239, -386,
	-372, 34, -108, -197, -159, 16, -219, -253, 240, -410,
	-207, -159, -411, -207, -207, -209, -411, -205, -411, 397,
	-159, -159, -290, -206, -197, -206, -239, -184, -183, -197,
	-184, -388, -259, -97, -92, -96, -93, -98, -162, -164,
	-95, 67, -121, -87, -197, 416, 417, 141, 144, 143,
	31, 370, -273, 370, 31, -249, -267, -263, 73, 371,
	-254, -272, 64, 130, -329, -270, -270, -270, -272, -272,
	129, -80, -388, -258, -249, -197, -123, -121, -123, -198,
	-158, 134, -157, 15, -192, -197, 34, 73, 133, -158,
	73, -123, -405, 64, -323, -228, -365, 506, -112, 68,
	-107, -363, -364, -107, -111, -197, -323, -112, 68, -363,
	-80, -80, -190, -191, -181, -187, -194, -195, -188, 208,
	31, 93, 34, 36, 310, 342, 96, 130, 20, 97,
	166, 129, 312, 434, 311, 203, 59, 437, 439, 438,
	427, 425, 363, 367, 369, 366, 426, 396, 40, 14,
	37, 224, 32, 33, 123, 205, 100, 101, 227, 35,
	225, 85, 44, 23, 62, 15, 17, 18, 313, 362,
	215, 214, 113, 382, 211, 57, 12, 132, 38, 110,
	364, 53, 89, 45, 55, 111, 21, 428, 429, 41,
	381, 390, 462, 231, 125, 314, 315, 60, 94, 370,
	83, 43, 64, 90, 19, 58, 112, 206, 433, 56,
	368, 318, 320, 330, 459, 319, 209, 407, 10, 309,
	435, 30, 223, 54, 210, 99, 213, 84, 230, 6,
	88, 13, 61, 65, 430, 431, 432, 46, 98, 16,
	321, 466, 383, 384, 385, 386, 387, 388, 389, 191,
	192, 193, 194, 195, 272, 218, 216, 220, 221, 506,
	507, 197, 198, 299, 301, 169, 200, 201, 202, 232,
	147, 7, 349, 350, 351, 354, 355, 356, 357, 358,
	359, 360, 514, 391, 392, 393, 394, 395, 408, 409,
	23, -57, -375, 133, 134, -108, -276, -257, -254, -278,
	121, 70, -264, 134, 466, 517, 71, 213, -398, -397,
	362, 68, 134, -333, 214, 433, 73, 518, 196, -333,
	83, 302, 84, 85, -303, -227, -224, -219, -217, -217,
	-222, 227, 93, -221, -220, -369, 100, -221, 34, 134,
	65, 133, 68, 68, 15, 15, 68, -221, -221, 68,
	15, 15, -221, 68, 133, 68, 68, 68, 65, 68,
	134, 68, 134, -221, 68, 68, -221, -221, -221, -227,
	68, -221, -221, -221, -221, -221, -221, -221, -221, -312,
	346, 78, 78, -176, 73, -176, 78, 78, 78, 134,
	68, 73, 134, 22, 134, -99, 36, 37, -121, 215,
	-121, -391, 349, 35, -399, 134, 40, -397, -242, 65,
	-237, -238, -236, -240, 40, -121, 15, -91, -122, -197,
	67, 68, 134, -221, -250, 65, -252, -184, -159, -121,
	-197, -159, -159, -207, -198, -209, -204, -209, -205, 133,
	-183, -392, 349, -399, 30, -165, -166, -167, -168, 53,
	57, 59, 54, 55, 56, 60, 30, 134, -193, -199,
	34, -194, 73, -195, -188, -193, -87, -92, -97, -193,
	67, 142, 145, 145, 144, 213, 67, 103, -272, -272,
	-272, 40, -196, 64, 134, -159, -90, -92, -197, 73,
	-197, 121, -159, -148, 509, 38, 39, 134, 67, 68,
	134, 46, 134, 103, 68, 134, 68, 46, 133, 378,
	-197, -345, 68, -278, 134, 213, 133, 133, -255, 328,
	-196, -257, 20, 466, -174, 38, -180, -179, 73, 518,
	38, 68, -222, 93, -219, -216, 68, 101, -221, 99,
	-125, -127, 344, 345, -126, -132, 130, 166, 226, 165,
	164, 162, 344, 345, -141, -197, -221, -221, 68, 68,
	-221, -221, 15, -197, -141, -217, -221, 68, -285, 392,
	-285, 68, 68, 68, 68, -285, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 134, 68, 68, 68,
	134, 68, 134, -329, -336, 401, -221, -221, -101, -100,
	43, -109, 94, 67, -394, 403, 351, -189, 103, -214,
	-213, 305, 41, -317, 371, 357, 358, -256, 240, 64,
	294, 295, 296, 297, -236, -182, 129, 251, 67, -121,
	-91, -197, 15, 134, -387, 133, -1, -197, -249, -207,
	-159, -411, -159, -207, -207, -209, -197, -394, -189, -214,
	-261, -260, -174, -96, -96, -96, -96, 53, 53, 53,
	58, 53, 58, 53, -167, -261, -98, -109, -199, 68,
	-404, -403, -402, -400, 61, 214, 62, -226, 145, -257,
	-210, 73, -263, -121, -121, -161, 17, 133, -161, 78,
	73, 89, -228, -331, -330, 46, -84, -107, -323, -364,
	-329, -197, 46, -84, -323, -190, -187, -195, -188, 78,
	15, -254, -249, 121, 121, 70, 329, -264, 73, 350,
	73, 210, 519, 134, 103, -180, 210, -216, -221, 68,
	-134, 153, 152, -134, 68, -304, -305, -304, -307, -304,
	-134, -134, 68, 68, 23, 68, 68, 68, -221, 68,
	68, 134, -285, 67, -285, -285, -285, -285, -285, -285,
	-285, -285, -285, -285, -285, 73, 78, 78, -342, 388,
	383, 385, 44, 45, 34, 35, -116, -117, -118, -124,
	-119, -174, -212, -120, 218, 216, 220, -360, 88, 221,
	272, 89, 211, -395, 77, -389, 73, -197, -396, 77,
	352, 132, 307, 40, 353, 354, 368, 303, 78, 78,
	359, -390, 70, -121, -189, -189, -189, -116, -110, 65,
	133, -92, -122, -197, 121, 68, -159, -197, -159, -159,
	-207, -395, -389, -396, -159, 134, 103, -114, -113, 64,
	65, -115, 64, -113, 53, 53, -159, -402, -401, 23,
	-360, -360, -360, 68, 68, -160, 18, 20, 121, -160,
	-148, 13, 68, -323, -323, -249, -264, 371, -121, -179,
	73, 519, -121, -221, 68, -221, -230, -229, 232, 68,
	68, -311, 508, -340, 383, 20, 20, -84, -121, 68,
	134, -127, -120, -197, 89, -359, -360, -239, -359, 89,
	67, 73, -393, 362, 73, 73, 78, 40, 78, 132,
	355, -318, 67, -141, -143, -196, 130, 73, 68, -193,
	-92, -197, -159, -387, 133, -159, -159, -393, -104, -260,
	-329, -221, 67, -221, 67, 53, 19, 17, -221, -227,
	-363, -83, -334, -290, -83, 68, 68, -104, 20, -148,
	73, 20, 73, -338, 73, -109, -139, -140, -156, 342,
	242, -240, 246, 77, 247, 378, 248, 211, 250, 251,
	252, 222, 253, 254, 255, 371, 256, 257, 258, 259,
	325, 6, 290, -118, -138, -137, -135, 83, 94, 40,
	342, -136, 77, 129, 265, 243, 266, -155, -211, 64,
	348, 216, 88, 89, 330, -212, -355, -357, -197, -357,
	-197, -355, -355, -239, -221, 20, 466, 306, 40, 78,
	40, 356, -244, -246, -174, 67, -82, -81, -159, -159,
	-105, -108, -356, -197, 216, 20, 20, -341, 388, -337,
	-335, 383, 384, 385, 386, -287, -286, -289, 389, 274,
	395, -227, -177, 510, 73, 385, 34, -280, 232, 134,
	-156, -189, -189, -182, 129, -189, -189, -189, -189, 249,
	249, -189, -189, -189, -189, -189, -189, -189, -189, -189,
	-189, -189, -189, -189, -189, 67, -135, 83, -217, 73,
	-143, -144, 40, 264, 260, -145, 40, 244, 245, -147,
	67, 272, 13, 89, 89, -121, 67, 65, 282, 67,
	67, 67, -357, 68, 73, 350, 73, 306, 68, 134,
	-304, -221, -83, -104, 68, 68, 134, -343, 214, -339,
	387, -335, 20, 385, 20, 20, 68, -288, 96, 355,
	359, -221, 67, 20, -84, -281, 281, 20, -156, 78,
	78, -189, -189, 78, 73, 73, 73, -189, -189, 78,
	73, -199, 78, 78, 78, 78, 40, 73, -146, 40,
	260, 264, 261, 262, 263, 78, 40, 78, 40, 78,
	40, -197, 67, -361, -362, 73, 78, 67, -324, -245,
	67, -244, -358, 294, 295, 296, 298, 297, -358, -244,
	-244, -244, 67, -266, -265, 273, 94, 371, -247, -246,
	-99, 68, -105, -197, 216, -350, 67, 78, -340, 20,
	-338, 20, -338, -338, -288, 506, 393, 394, 393, 394,
	-178, -197, -338, 20, -282, 274, 275, -283, -294, 277,
	-141, -141, 73, 73, -142, 243, -123, 68, 134, 103,
	68, -221, -231, -150, -149, 462, -244, 68, 68, 68,
	68, -244, 273, -248, 222, 77, 466, 292, 293, -99,
	-354, 30, 68, -349, -348, -175, -344, -197, 388, 389,
	73, -338, 93, 68, 134, -174, 67, -292, 278, 67,
	-290, 67, -290, 89, 295, 244, 245, 68, -362, 73,
	68, -154, -152, -153, 64, 399, 270, 271, 68, -247,
	-247, -247, -247, 68, -189, 73, 291, -353, -352, -351,
	68, 134, 133, -288, -197, -279, -284, 279, 78, -217,
	67, -217, 67, -291, 276, 67, -265, -153, 64, -152,
	64, 14, 13, -155, 78, -195, 134, 103, -348, -197,
	68, -296, 67, 20, 68, -279, 68, -279, 67, 103,
	-217, -151, 267, 268, 30, 144, -151, -352, 40, -221,
	133, -297, -295, 232, -283, 68, 68, 68, -279, 78,
	68, 83, 40, 269, -197, 68, 134, 70, -293, 280,
	68, -295, -298, 46, 78, -302, -299, 67, -156, 234,
	113, -302, -156, -301, -300, 279, 235, 67, 68, 134,
	70, 231, 67, -227, -300, -299, -227, 68, 68,
=======
	67, 67, 67, 134, -127, -131, -128, -130, -129, -133,
	-132, 166, 167, 130, 170, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 30, 182, 226, 162, 163,
	164, 165, 183, 148, 168, 464, 191, 149, 192, 150,
	193, 151, 194, 152, 153, 195, 154, 157, 158, 159,
	156, 133, -104, 134, 67, -80, 38, -106, 21, -88,
	-87, 20, 31, 32, 31, 32, 31, 32, 31, 32,
	78, -381, 210, 459, -239, 215, -239, -239, 211, -239,
	210, -385, 147, 134, -373, -109, 67, -207, 111, 23,
	238, 238, 275, -207, -412, 211, 406, 42, 239, 238,
	-105, -106, -105, 400, 397, -290, 401, 402, -208, -207,
	-207, -208, 210, 212, 426, -410, -411, 15, 113, 238,
	-410, 30, 30, -314, -314, -386, 214, 415, 466, 143,
	144, 145, -251, 240, 240, 134, 103, 23, -270, 103,
	114, -269, -269, -269, -270, -270, -141, 40, -196, 130,
	-197, 73, -141, 40, -105, -88, -87, 68, 68, -314,
	-314, -314, -314, -314, -314, -314, -203, -89, -90, 121,
	-221, -197, -89, 38, 397, -321, 46, -84, 67, 30,
	67, -197, -322, 46, -84, 67, 30, -105, -80, -106,
	133, 78, 73, -57, 68, 134, -377, 84, 85, -380,
	180, 172, -197, -69, 73, -3, -4, -5, -6, -28,
	-49, -84, -347, -345, 67, 31, 370, 64, 15, -276,
	210, 426, 323, 236, 212, 304, -274, -258, -255, -253,
	-196, -251, -254, -253, -279, -174, 397, -81, 382, 287,
	-81, -221, -221, -221, -221, -221, 83, 94, 302, 84,
	85, -216, -235, 31, 283, 284, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, -217, -217, -217, -224, -233,
	-303, 67, 113, 111, 112, 96, -219, -217, -217, 68,
	134, -370, -369, 98, -221, -221, -197, -367, -368, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	314, 309, 315, 313, 306, 321, 316, 317, 165, 457,
	458, 451, 452, 453, 454, 455, 456, -226, -227, -226,
	-221, -367, -226, -169, 32, 31, -169, -221, -382, 300,
	299, 301, -107, -197, -226, 68, 68, 68, 78, -227,
	-226, -217, -226, -368, -169, -227, -227, -169, -169, -169,
	-169, 121, -169, -169, -169, -169, -169, -169, -169, -169,
	-269, 40, -310, 345, 344, -304, -306, 67, -305, 67,
	-305, -304, -304, 67, 67, -307, 67, -307, -307, -304,
	-308, 67, -308, -309, 67, -308, -197, -105, -79, -330,
	-329, -221, 40, 508, -80, -221, -102, -101, -221, -407,
	73, 212, -239, -388, -197, 94, -259, -256, -253, -249,
	-195, -197, -239, -386, -372, 34, -108, -197, -159, 16,
	-219, -253, -410, -207, -159, -411, -207, -207, -209, -411,
	-205, -411, 397, -159, -159, -290, -206, -197, -206, -239,
	-184, -183, -197, -184, -388, -259, -97, -92, -96, -93,
	-98, -162, -164, -95, 67, -121, -87, -197, 416, 417,
	141, 144, 143, 31, 370, -273, 370, 31, -249, -267,
	-263, 73, 371, -254, -272, 64, 130, -329, -270, -270,
	-270, -272, -272, 129, -80, -388, -258, -249, -197, -123,
	-121, -123, -198, -158, 134, -157, 15, -192, -197, 34,
	73, 133, -158, 73, -123, -405, 64, -323, -228, -365,
	507, -112, 68, -107, -363, -364, -107, -111, -197, -323,
	-112, 68, -363, -80, -80, -190, -191, -181, -187, -194,
	-195, -188, 208, 31, 93, 34, 36, 310, 342, 96,
	130, 20, 97, 166, 129, 312, 434, 311, 203, 59,
	437, 439, 438, 427, 425, 363, 367, 369, 366, 426,
	396, 40, 14, 37, 224, 32, 33, 123, 205, 100,
	101, 227, 35, 225, 85, 44, 23, 62, 15, 17,
	18, 313, 362, 215, 214, 113, 382, 211, 57, 12,
	132, 38, 110, 364, 53, 89, 45, 55, 111, 21,
	428, 429, 41, 381, 390, 462, 231, 125, 314, 315,
	60, 94, 370, 83, 43, 64, 90, 19, 58, 112,
	206, 433, 56, 368, 318, 320, 330, 459, 319, 209,
	407, 10, 309, 435, 30, 223, 54, 210, 99, 213,
	84, 230, 6, 88, 13, 61, 65, 430, 431, 432,
	46, 98, 16, 321, 466, 383, 384, 385, 386, 387,
	388, 389, 191, 192, 193, 194, 195, 272, 218, 216,
	220, 221, 507, 508, 197, 198, 299, 301, 169, 200,
	201, 202, 232, 147, 7, 349, 350, 351, 354, 355,
	356, 357, 358, 359, 360, 515, 391, 392, 393, 394,
	395, 408, 409, 23, -57, -375, 133, 134, -108, -276,
	-257, -254, -278, 121, 70, -264, 134, 466, 518, 71,
	213, -398, -397, 362, 68, 134, -333, 214, 433, 73,
	519, 196, -333, 83, 302, 84, 85, -303, -227, -224,
	-219, -217, -217, -222, 227, 93, -221, -220, -369, 100,
	-221, 34, 134, 65, 133, 68, 68, 15, 15, 68,
	-221, -221, 68, 15, 15, -221, 68, 133, 68, 68,
	68, 65, 68, 134, 68, 134, -221, 68, 68, -221,
	-221, -221, -227, 68, -221, -221, -221, -221, -221, -221,
	-221, -221, -221, -312, 346, 78, 78, -176, 73, -176,
	78, 78, 78, 134, 68, 73, 134, 22, 134, -99,
	36, 37, -121, 215, -121, -391, 349, 35, -399, 134,
	40, -397, -242, 65, -237, -238, -236, -240, 40, -121,
	15, -91, -122, -197, 67, 68, 134, -221, -250, 65,
	-184, -159, -121, -197, -159, -159, -207, -198, -209, -204,
	-209, -205, 133, -183, -392, 349, -399, 30, -165, -166,
	-167, -168, 53, 57, 59, 54, 55, 56, 60, 30,
	134, -193, -199, 34, -194, 73, -195, -188, -193, -87,
	-92, -97, -193, 67, 142, 145, 145, 144, 213, 67,
	103, -272, -272, -272, 40, -196, 64, 134, -159, -90,
	-92, -197, 73, -197, 121, -159, -148, 510, 38, 39,
	134, 67, 68, 134, 46, 134, 103, 68, 134, 68,
	46, 133, 378, -197, -345, 68, -278, 134, 213, 133,
	133, -255, 328, -196, -257, 20, 466, -174, 38, -180,
	-179, 73, 519, 38, 68, -222, 93, -219, -216, 68,
	101, -221, 99, -125, -127, 344, 345, -126, -132, 130,
	166, 226, 165, 164, 162, 344, 345, -141, -197, -221,
	-221, 68, 68, -221, -221, 15, -197, -141, -217, -221,
	68, -285, 392, -285, 68, 68, 68, 68, -285, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	134, 68, 68, 68, 134, 68, 134, -329, -336, 401,
	-221, -221, -101, -100, 43, -109, 94, 67, -394, 403,
	351, -189, 103, -214, -213, 305, 41, -317, 371, 357,
	358, -256, 240, 64, 294, 295, 296, 297, -236, -182,
	129, 251, 67, -121, -91, -197, 15, 134, -387, 133,
	-1, -197, -249, -207, -159, -411, -159, -207, -207, -209,
	-197, -394, -189, -214, -261, -260, -174, -96, -96, -96,
	-96, 53, 53, 53, 58, 53, 58, 53, -167, -261,
	-98, -109, -199, 68, -404, -403, -402, -400, 61, 214,
	62, -226, 145, -257, -210, 73, -263, -121, -121, -161,
	17, 133, -161, 78, 73, 89, -228, -331, -330, 46,
	-84, -107, -323, -364, -329, -197, 46, -84, -323, -190,
	-187, -195, -188, 78, 15, -254, -249, 121, 121, 70,
	329, -264, 73, 350, 73, 210, 520, 134, 103, -180,
	210, -216, -221, 68, -134, 153, 152, -134, 68, -304,
	-305, -304, -307, -304, -134, -134, 68, 68, 23, 68,
	68, 68, -221, 68, 68, 134, -285, 67, -285, -285,
	-285, -285, -285, -285, -285, -285, -285, -285, -285, -285,
	73, 78, 78, -342, 388, 383, 385, 44, 45, 34,
	35, -116, -117, -118, -124, -119, -174, -212, -120, 218,
	216, 220, -360, 88, 221, 272, 89, 211, -395, 77,
	-389, 73, -197, -396, 77, 352, 132, 307, 40, 353,
	354, 368, 303, 78, 78, 359, -390, 70, -121, -189,
	-189, -189, -116, -110, 65, 133, -92, -122, -197, 121,
	68, -159, -197, -159, -159, -207, -395, -389, -396, -159,
	134, 103, -114, -113, 64, 65, -115, 64, -113, 53,
	53, -159, -402, -401, 23, -360, -360, -360, 68, 68,
	-160, 18, 20, 121, -160, -148, 13, 68, -323, -323,
	-249, -264, 371, -121, -179, 73, 520, -121, -221, 68,
	-221, -230, -229, 232, 68, 68, -311, 509, -340, 383,
	20, 20, -84, -121, 68, 134, -127, -120, -197, 89,
	-359, -360, -239, -359, 89, 67, 73, -393, 362, 73,
	73, 78, 40, 78, 132, 355, -318, 67, -141, -143,
	-196, 130, 73, 68, -193, -92, -197, -159, -387, 133,
	-159, -159, -393, -104, -260, -329, -221, 67, -221, 67,
	53, 19, 17, -221, -227, -363, -83, -334, -290, -83,
	68, 68, -104, 20, -148, 73, 20, 73, -338, 73,
	-109, -139, -140, -156, 342, 242, -240, 246, 77, 247,
	378, 248, 211, 250, 251, 252, 222, 253, 254, 255,
	371, 256, 257, 258, 259, 325, 6, 290, -118, -138,
	-137, -135, 83, 94, 40, 342, -136, 77, 129, 265,
	243, 266, -155, -211, 64, 348, 216, 88, 89, 330,
	-212, -355, -357, -197, -357, -197, -355, -355, -239, -221,
	20, 466, 306, 40, 78, 40, 356, -244, -246, -174,
	67, -82, -81, -159, -159, -105, -108, -356, -197, 216,
	20, 20, -341, 388, -337, -335, 383, 384, 385, 386,
	-287, -286, -289, 389, 274, 395, -227, -177, 511, 73,
	385, 34, -280, 232, 134, -156, -189, -189, -182, 129,
	-189, -189, -189, -189, 249, 249, -189, -189, -189, -189,
	-189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
	67, -135, 83, -217, 73, -143, -144, 40, 264, 260,
	-145, 40, 244, 245, -147, 67, 272, 13, 89, 89,
	-121, 67, 65, 282, 67, 67, 67, -357, 68, 73,
	350, 73, 306, 68, 134, -304, -221, -83, -104, 68,
	68, 134, -343, 214, -339, 387, -335, 20, 385, 20,
	20, 68, -288, 96, 355, 359, -221, 67, 20, -84,
	-281, 281, 20, -156, 78, 78, -189, -189, 78, 73,
	73, 73, -189, -189, 78, 73, -199, 78, 78, 78,
	78, 40, 73, -146, 40, 260, 264, 261, 262, 263,
	78, 40, 78, 40, 78, 40, -197, 67, -361, -362,
	73, 78, 67, -324, -245, 67, -244, -358, 294, 295,
	296, 298, 297, -358, -244, -244, -244, 67, -266, -265,
	273, 94, 371, -247, -246, -99, 68, -105, -197, 216,
	-350, 67, 78, -340, 20, -338, 20, -338, -338, -288,
	507, 393, 394, 393, 394, -178, -197, -338, 20, -282,
	274, 275, -283, -294, 277, -141, -141, 73, 73, -142,
	243, -123, 68, 134, 103, 68, -221, -231, -150, -149,
	462, -244, 68, 68, 68, 68, -244, 273, -248, 222,
	77, 466, 292, 293, -99, -354, 30, 68, -349, -348,
	-175, -344, -197, 388, 389, 73, -338, 93, 68, 134,
	-174, 67, -292, 278, 67, -290, 67, -290, 89, 295,
	244, 245, 68, -362, 73, 68, -154, -152, -153, 64,
	399, 270, 271, 68, -247, -247, -247, -247, 68, -189,
	73, 291, -353, -352, -351, 68, 134, 133, -288, -197,
	-279, -284, 279, 78, -217, 67, -217, 67, -291, 276,
	67, -265, -153, 64, -152, 64, 14, 13, -155, 78,
	-195, 134, 103, -348, -197, 68, -296, 67, 20, 68,
	-279, 68, -279, 67, 103, -217, -151, 267, 268, 30,
	144, -151, -352, 40, -221, 133, -297, -295, 232, -283,
	68, 68, 68, -279, 78, 68, 83, 40, 269, -197,
	68, 134, 70, -293, 280, 68, -295, -298, 46, 78,
	-302, -299, 67, -156, 234, 113, -302, -156, -301, -300,
	279, 235, 67, 68, 134, 70, 231, 67, -227, -300,
	-299, -227, 68, 68,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
}

var yyDef = [...]int{
	31, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 640, 641, 642, 643, 0, 0, 0, 412, 413,
	0, 392, 0, 0, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 277, 278, 0, 225, 221, 200,
	201, 202, 161, 162, 163, 164, 285, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 491, -2, 33, 644, 645, 646, 647,
	-2, 425, 0, 393, 394, 395, 396, 397, 398, 399,
	400, 266, 267, 268, 263, 264, 265, -2, 0, 425,
	214, 0, 205, 205, 0, 511, 0, 0, 525, 547,
	31, 0, 469, 0, 474, 833, 869, 870, 871, 1632,
=======
	0, 0, 0, 490, -2, 33, 643, 644, 645, 646,
	-2, 424, 0, 392, 393, 394, 395, 396, 397, 398,
	399, 266, 267, 268, 263, 264, 265, -2, 0, 424,
	214, 0, 205, 205, 0, 510, 0, 0, 524, 546,
	31, 0, 468, 0, 473, 832, 868, 869, 870, 1632,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
<<<<<<< HEAD
	1618, 1619, 1620, 1621, 469, 226, 414, 415, 511, 511,
	390, 0, 249, 0, 1489, 253, 0, 0, 0, 387,
	244, 245, 246, 247, 248, 0, 632, 0, 241, 0,
	220, 1548, 0, 0, 0, 0, 0, 0, 105, 687,
	107, 689, 111, 118, 0, 0, 123, 124, 127, 128,
	129, 130, 131, 0, 135, 0, 137, 140, 0, 142,
	143, 0, 146, 147, 148, 0, 158, 159, 160, 690,
	691, 85, 85, 1238, 1135, 0, 1142, 1143, 1154, 1163,
	941, 942, 943, 944, 0, 0, 0, 0, 0, 951,
	952, 0, 964, 1636, 0, 958, 959, 960, 961, 48,
	60, 61, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 0, 1108, 928, 869, 0, 1644, 0, 1664,
	1645, 1663, 0, 0, 1093, 0, 1083, 0, -2, -2,
	0, 0, 1615, 0, -2, 1641, 1660, 1668, 1667, 1638,
	1639, 1633, 1634, 1635, 1637, 1646, 1648, 1659, 0, 1655,
	1665, 1666, 62, 63, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1099, -2, 1101,
	1102, 1104, 1105, 1106, 1107, -2, 1110, 1111, 1112, -2,
	-2, 1115, 1116, 1117, 1118, 1119, 1120, 1123, -2, 1125,
	-2, 1127, 1095, 1096, 1097, 1098, 1087, 1088, 1089, 1090,
	1091, 1092, -2, -2, -2, 0, 198, 196, 511, 583,
	0, -2, 0, 0, 0, 530, 533, 536, 539, 0,
	34, 35, 650, 716, 716, 716, 0, 716, 0, 739,
	693, 694, 695, 714, 715, 430, 426, 427, 428, 429,
	499, 0, 501, 504, 370, 326, 0, 0, 337, 338,
	370, 0, 0, 506, 506, 0, 379, 370, 370, -2,
	0, 340, 341, 342, 332, 0, 332, 346, 347, 348,
	359, 360, 380, 1262, 0, 0, 285, 285, 432, 215,
	216, 204, 206, 0, 210, 0, 203, 1548, 0, 0,
	172, 1615, 177, 0, 1496, 1562, 1511, 0, 0, 1529,
	0, -2, 506, 0, 512, 0, 511, 0, 285, 285,
	285, 285, 285, 285, 285, 0, 0, 0, 548, 549,
	544, 545, 546, 550, 551, 3, 0, 633, 634, 637,
	638, 639, 0, 0, 473, 0, 0, 506, -2, 0,
	391, 250, 872, 0, 0, 254, 255, 0, 0, 269,
	0, 272, 258, 259, 260, 0, 0, 243, 0, 0,
	222, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 115, 112, 119, 122, 132, 139, 0, 151, 153,
	156, 113, 120, 125, 126, 133, 154, 114, 116, 117,
	121, 155, 157, 134, 138, 152, 136, 141, 144, 145,
	150, 0, 86, 0, 0, 0, 0, 0, 0, 1141,
	0, 0, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1135, 0, 947,
	948, 949, 950, 953, 0, 965, 0, 0, 0, 1192,
	0, 1133, 1133, 0, 1133, 1129, 1129, 0, 0, 1133,
	1071, 0, 0, 1073, 1084, 0, 0, 1076, 1077, 1133,
	0, 1133, 1081, 1082, 1067, 1068, 0, 1129, 0, 0,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 0, 1239, 1257, 1194, 1195, 1196, 1244, 1198, 1248,
	1248, 1244, 1244, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 0, 0, 1237, 1217, 1246, 1246, 1246, 1244,
	1241, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1251, 1251, 1254, 1251, 0,
	506, 0, 0, 494, 0, 475, 0, 527, 529, 0,
	531, 532, 534, 535, 537, 538, 540, 541, 36, 0,
	716, 651, 0, 0, 0, 0, 0, 0, 716, 432,
	431, 0, 500, 0, 0, 556, 0, 0, 332, 370,
	556, 0, 353, 354, 355, 370, 370, 361, 507, 362,
	363, 372, 0, 377, 378, 0, 556, 556, 0, 0,
	0, 716, 334, 333, 375, 376, 344, 334, 1263, 1264,
	0, 0, 0, 433, 0, 0, 208, 0, 213, 165,
	0, 0, 0, 0, 0, 0, 194, 195, 0, 0,
	0, 0, 0, 185, 188, 827, 828, 684, 685, 189,
	190, 475, 526, 528, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 411, 564, 558, 560, 627, 48, 564,
	0, 0, 448, 461, 443, 0, 450, 0, 834, 434,
	461, 436, 0, 450, 475, 497, 475, 0, 251, 0,
	256, 0, 0, 271, 273, 274, 275, 261, 262, 388,
	239, 240, 232, 233, 234, 235, 236, 237, 238, 242,
	58, 0, 223, 224, 0, 0, 0, 99, 100, 101,
	102, 103, 104, 106, 90, 403, 405, 676, 688, 0,
	679, 0, 109, 149, 82, 0, 0, 82, 1136, 1137,
	1138, 1139, 1140, 1144, 0, 1146, 1148, 1150, 1152, 0,
	1168, -2, -2, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 1155, 1166, 1167, 0, 0,
	0, 0, 0, 1164, 1159, 0, 945, 0, 962, 966,
	0, 0, 0, 49, 1128, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 0, 1134, 0, 1135, 0, 0,
	0, 1130, 1131, 0, 0, 0, 1032, 1033, 1034, 0,
	456, 0, 1094, 1072, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 1260, 1258,
	1259, 1197, 1245, 0, 1222, 0, 1223, 1224, 1225, 0,
	0, 1218, 0, 1219, 1220, 1221, 1213, 0, 1214, 1215,
	0, 1216, 197, 582, 584, 0, 465, 467, 468, 0,
	495, 508, 513, 514, 517, 32, 37, 0, 0, 0,
	653, 0, 283, 670, 0, 686, 708, -2, 0, 0,
	502, 0, 0, 596, 325, 0, 371, 329, 1548, 334,
	556, 339, 0, 556, 556, 370, 0, 372, 0, 372,
	366, 367, 0, 381, 384, 382, 0, 343, 335, 386,
	345, 280, 283, 569, 0, 570, 571, 567, 598, 622,
	622, 0, 622, 602, 833, 217, 218, 0, 0, 212,
	166, 167, 0, 169, 170, 171, 178, 173, 175, 0,
	0, 179, 191, 192, 193, 0, 0, 0, 183, 184,
	0, 493, 401, 402, 406, 0, 408, 831, 409, 410,
	556, 0, 565, 0, 561, 628, 0, 630, 0, 556,
	485, 0, 441, 0, 442, 458, 0, 462, 0, 0,
	454, 447, 451, 0, 0, 471, 435, 0, 0, 440,
	496, 498, 873, 0, 1269, -2, 1271, -2, -2, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	0, 257, 270, 0, 0, 0, 0, 93, 673, 0,
	94, 98, 88, 0, 0, 0, 678, 0, 675, 680,
	0, 108, 0, 0, 83, 84, 730, 735, 0, 0,
	1145, 1147, 1149, 1151, 1153, 0, 1156, 1164, 1160, 0,
	1157, 0, 0, 1136, 0, 967, 0, 0, 0, 0,
	0, 0, 1019, 1020, 0, 0, 1024, 0, 0, 1027,
	0, 0, 0, 1031, 0, 1070, 1086, 1074, 0, 1078,
	0, 1080, 0, 0, 999, 999, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 0, 1240, 1193,
	1261, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	585, 477, 0, 0, 0, 520, 518, 519, 504, 0,
	0, 660, 1265, 717, 287, 0, 0, 672, 0, 0,
	713, -2, 720, 0, 726, 0, 0, 0, 419, 423,
	31, 505, 0, 557, 327, 0, 328, 370, 336, 556,
	833, 356, 357, 556, 373, 370, 374, 370, 372, 0,
	383, 660, 1265, 287, 0, 0, 0, 0, 0, 589,
	0, 0, 588, 0, 0, 0, 0, 0, 504, 623,
	0, 625, 626, 635, 636, 600, -2, 0, 569, 605,
	1133, 219, 207, 209, 0, 0, 0, 0, 180, 181,
	182, 186, 187, 0, 0, 554, 559, 566, 629, 631,
	49, 562, 554, 38, 0, 0, 0, 461, 463, 0,
	0, 461, 0, 0, 470, 0, 0, 461, 0, 0,
	389, 59, 276, 0, 0, 0, 0, 0, 404, 0,
	677, 90, 0, 0, 110, 0, 0, 733, 0, 735,
	0, 1132, 1158, 0, 1165, 1161, 946, 954, 963, 0,
	0, 969, 981, 981, 0, 972, 1244, 1248, 975, 1244,
	1246, 1244, 981, 981, 0, 50, 0, 0, 1025, 1026,
	0, 0, 0, 457, 0, 0, 0, 999, 1002, 0,
	1003, 999, 999, 999, 999, 1008, 999, 999, 999, 999,
	999, 999, 999, 1250, 1249, 1235, 0, 1236, 1247, 1252,
	0, 1255, 0, 466, 481, 0, 509, 510, 515, 516,
	0, 0, 0, 835, 663, 661, 662, 0, 1266, 667,
	288, 289, 290, 291, 0, 0, 0, 671, 0, 0,
	709, 710, 711, 712, 721, 1265, 1265, 1265, 835, 469,
	0, -2, 0, 0, 421, 0, 0, 597, 330, 556,
	349, 0, 364, 556, 556, 370, 385, 663, 0, 667,
	556, 229, 0, 592, 586, 0, 575, 590, 591, 578,
	0, 580, 0, 576, 577, 556, 568, 599, 624, 601,
	604, 606, 607, 613, 0, 0, 0, 0, 211, 168,
	0, 307, 174, 407, 832, 552, 0, 0, 552, 486,
	485, 0, 459, 0, 464, 461, 446, 455, 445, 452,
	453, 472, 461, 439, 438, 874, 1270, 1267, 1268, 252,
	0, 674, 90, 95, 96, 97, 91, 89, 681, 0,
	683, 0, 731, 735, 0, 0, 0, 1162, 968, 955,
	970, 982, 983, 971, 956, 973, 974, 976, 977, 978,
	979, 980, 957, 1021, 0, 1023, 1028, 1029, 0, 1075,
	1079, 0, 1001, 997, 1004, 1005, 1006, 1007, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1243, 0, 0, 483, 71,
	0, 0, 521, 522, 0, 0, 0, 836, 837, 839,
	840, 0, 0, 842, 898, 0, 851, 716, 851, 0,
	0, 853, 854, 652, 0, 0, 655, 656, 665, 0,
	0, 0, 293, 294, 0, 0, 0, 306, 302, 303,
	304, 284, 666, 0, 0, 0, 0, 0, 622, 0,
	0, 556, 420, 423, 424, 503, 331, 556, 368, 365,
	556, 279, 0, 282, 511, 0, 0, 572, 593, 0,
	0, 573, 0, 574, 579, 581, 228, 608, 0, 0,
	610, 611, 612, 603, 176, 542, 0, 0, 563, 543,
	39, 450, 460, 444, 437, 92, 87, 682, 73, 734,
	736, 732, 73, 0, 1030, 0, 511, 998, 0, 1253,
	1256, 485, 0, 482, 0, 0, 0, 648, 504, -2,
	0, -2, 841, 899, 863, 863, 852, 863, 863, 716,
	0, 664, 654, 0, 668, 669, 0, 295, 296, 0,
	299, 305, 0, 722, 723, 829, 830, 724, 0, 556,
	556, -2, 417, 422, 0, 350, 369, 281, 506, 230,
	231, 594, 0, 587, 617, 614, 0, 0, 553, 555,
	449, 41, 67, 0, 40, 1022, 1069, 994, 0, 487,
	484, 0, 478, 480, 81, 0, 740, -2, 783, 1265,
	1265, 0, 1265, 1265, 1265, 1265, 0, 0, 1265, 1265,
	1265, 1265, 1265, 1265, 1265, 1265, 1265, 1265, 1265, 1265,
	1265, 1265, 0, 838, 865, -2, 877, 879, 0, 0,
	882, 883, 0, 0, 0, 0, 920, 889, 0, 0,
	893, 0, 1180, 1181, 0, 897, 0, 855, 864, 0,
	864, 0, 0, 863, 0, 0, 0, 292, 297, 0,
	300, 301, 0, 704, 1244, 0, 728, 73, 511, 418,
	227, 0, 0, 618, 620, 615, 616, 64, 69, 74,
	75, 0, 0, 0, 0, 0, 995, 0, 989, 990,
	991, 996, 476, 0, 72, 0, 0, 742, 0, 725,
	785, 0, 0, 1265, 1265, 0, 0, 0, 0, 1265,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 878, 880, 881, 884,
	885, 886, 925, 926, 927, 887, 922, 923, 924, 888,
	0, 0, 0, 1178, 1179, 918, 0, 0, 0, 0,
	0, 0, 0, 849, 657, 0, 659, 298, 697, 0,
	517, 0, 729, 506, 595, 609, 0, 51, 0, 71,
	0, 76, 0, 0, 0, 0, 1000, 992, 0, 0,
	0, 0, 0, 0, 649, 727, 0, 779, 784, 786,
	787, 0, 0, 790, 791, 792, 793, 0, 0, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 821,
	822, 823, 824, 825, 826, 806, 807, 808, 809, 810,
	811, 818, 0, 0, 815, 0, 0, 0, 1083, 913,
	0, 0, 856, 858, 859, 860, 861, 862, 857, 0,
	0, 0, 0, 848, 850, 894, 0, 658, 696, 705,
	706, 517, 416, 619, 621, 42, 0, 0, 68, 0,
	77, 0, 79, 80, 0, 984, 985, 987, 986, 988,
	0, 489, 479, 0, 767, 0, 0, 773, 0, 780,
	788, 789, 794, 795, 812, 0, 0, 814, 0, 0,
	921, 0, 892, 901, 914, 0, 0, 697, 697, 697,
	697, 0, 895, 698, 1265, 0, 0, 702, 703, 707,
	737, 0, 52, 0, 54, 56, 57, 866, 65, 66,
	70, 78, 0, 488, 0, 743, 0, 745, 0, 0,
	0, 0, 0, 777, 0, 819, 820, 813, 816, 817,
	890, 900, 902, 903, 0, 915, 916, 917, 919, 843,
	844, 845, 846, 0, 0, 700, 0, 43, 44, 0,
	53, 0, 0, 993, 490, 0, 747, 0, 768, 0,
	0, 0, 0, 0, 0, 0, 891, 904, 0, 905,
	0, 0, 0, 847, 699, 701, 0, 0, 55, 867,
	744, 741, 0, 779, 769, 0, 771, 0, 0, 0,
	0, 906, 908, 909, 0, 0, 907, 45, 46, 47,
	0, 0, 749, 0, 765, 770, 772, 774, 0, 778,
	776, 910, 912, 911, 868, 748, 0, 761, 746, 0,
	775, 750, -2, 0, 766, 751, -2, 0, 759, 0,
	0, 752, 760, 0, 755, 0, 0, 0, 754, 0,
	-2, 762, 0, 0, 756, -2, 0, 764, 763,
=======
	1618, 1619, 1620, 1621, 468, 226, 413, 414, 510, 510,
	389, 0, 249, 0, 1489, 253, 0, 0, 0, 386,
	244, 245, 246, 247, 248, 0, 631, 0, 241, 0,
	220, 1548, 0, 0, 0, 0, 0, 0, 105, 686,
	107, 688, 111, 118, 0, 0, 123, 124, 127, 128,
	129, 130, 131, 0, 135, 0, 137, 140, 0, 142,
	143, 0, 146, 147, 148, 0, 158, 159, 160, 689,
	690, 85, 85, 1238, 1135, 0, 1142, 1143, 1154, 1163,
	940, 941, 942, 943, 0, 0, 0, 0, 0, 950,
	951, 0, 963, 1636, 0, 957, 958, 959, 960, 48,
	60, 61, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 0, 1108, 927, 868, 0, 1644, 0, 1664,
	1645, 1663, 0, 0, 1093, 0, 1083, 0, -2, -2,
	0, 0, 1615, 0, -2, 1641, 1660, 1668, 1667, 1638,
	1639, 1633, 1634, 1635, 1637, 1646, 1648, 1659, 0, 1655,
	1665, 1666, 0, 62, 63, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1099, -2,
	1101, 1102, 1104, 1105, 1106, 1107, -2, 1110, 1111, 1112,
	-2, -2, 1115, 1116, 1117, 1118, 1119, 1120, 1123, -2,
	1125, -2, 1127, 1095, 1096, 1097, 1098, 1087, 1088, 1089,
	1090, 1091, 1092, -2, -2, -2, 0, 198, 196, 510,
	582, 0, -2, 0, 0, 0, 529, 532, 535, 538,
	0, 34, 35, 649, 715, 715, 715, 0, 715, 0,
	738, 692, 693, 694, 713, 714, 429, 425, 426, 427,
	428, 498, 0, 500, 503, 369, 326, 0, 0, 0,
	337, 369, 0, 0, 505, 505, 0, 378, 369, 369,
	-2, 0, 339, 340, 341, 331, 0, 331, 345, 346,
	347, 358, 359, 379, 1262, 0, 0, 285, 285, 431,
	215, 216, 204, 206, 0, 210, 0, 203, 1548, 0,
	0, 172, 1615, 177, 0, 1496, 1562, 1511, 0, 0,
	1529, 0, -2, 505, 0, 511, 0, 510, 0, 285,
	285, 285, 285, 285, 285, 285, 0, 0, 0, 547,
	548, 543, 544, 545, 549, 550, 3, 0, 632, 633,
	636, 637, 638, 0, 0, 472, 0, 0, 505, -2,
	0, 390, 250, 871, 0, 0, 254, 255, 0, 0,
	269, 0, 272, 258, 259, 260, 0, 0, 243, 0,
	0, 222, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 115, 112, 119, 122, 132, 139, 0, 151,
	153, 156, 113, 120, 125, 126, 133, 154, 114, 116,
	117, 121, 155, 157, 134, 138, 152, 136, 141, 144,
	145, 150, 0, 86, 0, 0, 0, 0, 0, 0,
	1141, 0, 0, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1135, 0,
	946, 947, 948, 949, 952, 0, 964, 0, 0, 0,
	1192, 0, 1133, 1133, 0, 1133, 1129, 1129, 0, 0,
	1133, 1071, 0, 0, 1073, 1084, 0, 0, 1076, 1077,
	1133, 0, 1133, 1081, 1082, 1067, 1068, 0, 1129, 0,
	0, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 0, 1239, 1257, 1194, 1195, 1196, 1244,
	1198, 1248, 1248, 1244, 1244, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 0, 0, 1237, 1217, 1246, 1246,
	1246, 1244, 1241, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1251, 1251, 1254,
	1251, 0, 505, 0, 0, 493, 0, 474, 0, 526,
	528, 0, 530, 531, 533, 534, 536, 537, 539, 540,
	36, 0, 715, 650, 0, 0, 0, 0, 0, 0,
	715, 431, 430, 0, 499, 0, 0, 555, 0, 0,
	331, 369, 336, 555, 0, 352, 353, 354, 369, 369,
	360, 506, 361, 362, 371, 0, 376, 377, 0, 555,
	555, 0, 0, 0, 715, 333, 332, 374, 375, 343,
	333, 1263, 1264, 0, 0, 0, 432, 0, 0, 208,
	0, 213, 165, 0, 0, 0, 0, 0, 0, 194,
	195, 0, 0, 0, 0, 0, 185, 188, 826, 827,
	683, 684, 189, 190, 474, 525, 527, 522, 523, 0,
	0, 0, 0, 0, 0, 0, 410, 563, 557, 559,
	626, 48, 563, 0, 0, 447, 460, 442, 0, 449,
	0, 833, 433, 460, 435, 0, 449, 474, 496, 474,
	0, 251, 0, 256, 0, 0, 271, 273, 274, 275,
	261, 262, 387, 239, 240, 232, 233, 234, 235, 236,
	237, 238, 242, 58, 0, 223, 224, 0, 0, 0,
	99, 100, 101, 102, 103, 104, 106, 90, 402, 404,
	675, 687, 0, 678, 0, 109, 149, 82, 0, 0,
	82, 1136, 1137, 1138, 1139, 1140, 1144, 0, 1146, 1148,
	1150, 1152, 0, 1168, -2, -2, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 1155, 1166,
	1167, 0, 0, 0, 0, 0, 1164, 1159, 0, 944,
	0, 961, 965, 0, 0, 0, 49, 1128, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 0, 1134, 0,
	1135, 0, 0, 0, 1130, 1131, 0, 0, 0, 1032,
	1033, 1034, 0, 455, 0, 1094, 1072, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 1260, 1258, 1259, 1197, 1245, 0, 1222, 0,
	1223, 1224, 1225, 0, 0, 1218, 0, 1219, 1220, 1221,
	1213, 0, 1214, 1215, 0, 1216, 197, 581, 583, 0,
	464, 466, 467, 0, 494, 507, 512, 513, 516, 32,
	37, 0, 0, 0, 652, 0, 283, 669, 0, 685,
	707, -2, 0, 0, 501, 0, 0, 595, 325, 0,
	370, 328, 333, 555, 338, 0, 555, 555, 369, 0,
	371, 0, 371, 365, 366, 0, 380, 383, 381, 0,
	342, 334, 385, 344, 280, 283, 568, 0, 569, 570,
	566, 597, 621, 621, 0, 621, 601, 832, 217, 218,
	0, 0, 212, 166, 167, 0, 169, 170, 171, 178,
	173, 175, 0, 0, 179, 191, 192, 193, 0, 0,
	0, 183, 184, 0, 492, 400, 401, 405, 0, 407,
	830, 408, 409, 555, 0, 564, 0, 560, 627, 0,
	629, 0, 555, 484, 0, 440, 0, 441, 457, 0,
	461, 0, 0, 453, 446, 450, 0, 0, 470, 434,
	0, 0, 439, 495, 497, 872, 0, 1269, -2, 1271,
	-2, -2, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 0, 257, 270, 0, 0, 0, 0,
	93, 672, 0, 94, 98, 88, 0, 0, 0, 677,
	0, 674, 679, 0, 108, 0, 0, 83, 84, 729,
	734, 0, 0, 1145, 1147, 1149, 1151, 1153, 0, 1156,
	1164, 1160, 0, 1157, 0, 0, 1136, 0, 966, 0,
	0, 0, 0, 0, 0, 1019, 1020, 0, 0, 1024,
	0, 0, 1027, 0, 0, 0, 1031, 0, 1070, 1086,
	1074, 0, 1078, 0, 1080, 0, 0, 998, 998, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 1240, 1193, 1261, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 584, 476, 0, 0, 0, 519,
	517, 518, 503, 0, 0, 659, 1265, 716, 287, 0,
	0, 671, 0, 0, 712, -2, 719, 0, 725, 0,
	0, 0, 418, 422, 31, 504, 0, 556, 327, 0,
	369, 335, 555, 832, 355, 356, 555, 372, 369, 373,
	369, 371, 0, 382, 659, 1265, 287, 0, 0, 0,
	0, 0, 588, 0, 0, 587, 0, 0, 0, 0,
	0, 503, 622, 0, 624, 625, 634, 635, 599, -2,
	0, 568, 604, 1133, 219, 207, 209, 0, 0, 0,
	0, 180, 181, 182, 186, 187, 0, 0, 553, 558,
	565, 628, 630, 49, 561, 553, 38, 0, 0, 0,
	460, 462, 0, 0, 460, 0, 0, 469, 0, 0,
	460, 0, 0, 388, 59, 276, 0, 0, 0, 0,
	0, 403, 0, 676, 90, 0, 0, 110, 0, 0,
	732, 0, 734, 0, 1132, 1158, 0, 1165, 1161, 945,
	953, 962, 0, 0, 968, 980, 980, 0, 971, 1244,
	1248, 974, 1244, 1246, 1244, 980, 980, 0, 50, 0,
	0, 1025, 1026, 0, 0, 0, 456, 0, 0, 0,
	998, 1001, 0, 1002, 998, 998, 998, 998, 1007, 998,
	998, 998, 998, 998, 998, 998, 998, 1250, 1249, 1235,
	0, 1236, 1247, 1252, 0, 1255, 0, 465, 480, 0,
	508, 509, 514, 515, 0, 0, 0, 834, 662, 660,
	661, 0, 1266, 666, 288, 289, 290, 291, 0, 0,
	0, 670, 0, 0, 708, 709, 710, 711, 720, 1265,
	1265, 1265, 834, 468, 0, -2, 0, 0, 420, 0,
	0, 596, 329, 555, 348, 0, 363, 555, 555, 369,
	384, 662, 0, 666, 555, 229, 0, 591, 585, 0,
	574, 589, 590, 577, 0, 579, 0, 575, 576, 555,
	567, 598, 623, 600, 603, 605, 606, 612, 0, 0,
	0, 0, 211, 168, 0, 307, 174, 406, 831, 551,
	0, 0, 551, 485, 484, 0, 458, 0, 463, 460,
	445, 454, 444, 451, 452, 471, 460, 438, 437, 873,
	1270, 1267, 1268, 252, 0, 673, 90, 95, 96, 97,
	91, 89, 680, 0, 682, 0, 730, 734, 0, 0,
	0, 1162, 967, 954, 969, 981, 982, 970, 955, 972,
	973, 975, 976, 977, 978, 979, 956, 1021, 0, 1023,
	1028, 1029, 0, 1075, 1079, 0, 1000, 996, 1003, 1004,
	1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1243, 0, 0, 482, 71, 0, 0, 520, 521, 0,
	0, 0, 835, 836, 838, 839, 0, 0, 841, 897,
	0, 850, 715, 850, 0, 0, 852, 853, 651, 0,
	0, 654, 655, 664, 0, 0, 0, 293, 294, 0,
	0, 0, 306, 302, 303, 304, 284, 665, 0, 0,
	0, 0, 0, 621, 0, 0, 555, 419, 422, 423,
	502, 330, 555, 367, 364, 555, 279, 0, 282, 510,
	0, 0, 571, 592, 0, 0, 572, 0, 573, 578,
	580, 228, 607, 0, 0, 609, 610, 611, 602, 176,
	541, 0, 0, 562, 542, 39, 449, 459, 443, 436,
	92, 87, 681, 73, 733, 735, 731, 73, 0, 1030,
	0, 510, 997, 0, 1253, 1256, 484, 0, 481, 0,
	0, 0, 647, 503, -2, 0, -2, 840, 898, 862,
	862, 851, 862, 862, 715, 0, 663, 653, 0, 667,
	668, 0, 295, 296, 0, 299, 305, 0, 721, 722,
	828, 829, 723, 0, 555, 555, -2, 416, 421, 0,
	349, 368, 281, 505, 230, 231, 593, 0, 586, 616,
	613, 0, 0, 552, 554, 448, 41, 67, 0, 40,
	1022, 1069, 993, 0, 486, 483, 0, 477, 479, 81,
	0, 739, -2, 782, 1265, 1265, 0, 1265, 1265, 1265,
	1265, 0, 0, 1265, 1265, 1265, 1265, 1265, 1265, 1265,
	1265, 1265, 1265, 1265, 1265, 1265, 1265, 0, 837, 864,
	-2, 876, 878, 0, 0, 881, 882, 0, 0, 0,
	0, 919, 888, 0, 0, 892, 0, 1180, 1181, 0,
	896, 0, 854, 863, 0, 863, 0, 0, 862, 0,
	0, 0, 292, 297, 0, 300, 301, 0, 703, 1244,
	0, 727, 73, 510, 417, 227, 0, 0, 617, 619,
	614, 615, 64, 69, 74, 75, 0, 0, 0, 0,
	0, 994, 0, 988, 989, 990, 995, 475, 0, 72,
	0, 0, 741, 0, 724, 784, 0, 0, 1265, 1265,
	0, 0, 0, 0, 1265, 1265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 877, 879, 880, 883, 884, 885, 924, 925, 926,
	886, 921, 922, 923, 887, 0, 0, 0, 1178, 1179,
	917, 0, 0, 0, 0, 0, 0, 0, 848, 656,
	0, 658, 298, 696, 0, 516, 0, 728, 505, 594,
	608, 0, 51, 0, 71, 0, 76, 0, 0, 0,
	0, 999, 991, 0, 0, 0, 0, 0, 0, 648,
	726, 0, 778, 783, 785, 786, 0, 0, 789, 790,
	791, 792, 0, 0, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 820, 821, 822, 823, 824, 825,
	805, 806, 807, 808, 809, 810, 817, 0, 0, 814,
	0, 0, 0, 1083, 912, 0, 0, 855, 857, 858,
	859, 860, 861, 856, 0, 0, 0, 0, 847, 849,
	893, 0, 657, 695, 704, 705, 516, 415, 618, 620,
	42, 0, 0, 68, 0, 77, 0, 79, 80, 0,
	983, 984, 986, 985, 987, 0, 488, 478, 0, 766,
	0, 0, 772, 0, 779, 787, 788, 793, 794, 811,
	0, 0, 813, 0, 0, 920, 0, 891, 900, 913,
	0, 0, 696, 696, 696, 696, 0, 894, 697, 1265,
	0, 0, 701, 702, 706, 736, 0, 52, 0, 54,
	56, 57, 865, 65, 66, 70, 78, 0, 487, 0,
	742, 0, 744, 0, 0, 0, 0, 0, 776, 0,
	818, 819, 812, 815, 816, 889, 899, 901, 902, 0,
	914, 915, 916, 918, 842, 843, 844, 845, 0, 0,
	699, 0, 43, 44, 0, 53, 0, 0, 992, 489,
	0, 746, 0, 767, 0, 0, 0, 0, 0, 0,
	0, 890, 903, 0, 904, 0, 0, 0, 846, 698,
	700, 0, 0, 55, 866, 743, 740, 0, 778, 768,
	0, 770, 0, 0, 0, 0, 905, 907, 908, 0,
	0, 906, 45, 46, 47, 0, 0, 748, 0, 764,
	769, 771, 773, 0, 777, 775, 909, 911, 910, 867,
	747, 0, 760, 745, 0, 774, 749, -2, 0, 765,
	750, -2, 0, 758, 0, 0, 751, 759, 0, 754,
	0, 0, 0, 753, 0, -2, 761, 0, 0, 755,
	-2, 0, 763, 762,
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 517,
	104, 103, 105, 3, 518, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 519, 115, 520, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:609
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:642
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:647
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:653
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:673
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:679
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:686
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:694
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:700
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:709
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:717
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:730
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:742
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:757
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:763
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:767
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:773
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:780
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:789
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:793
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:797
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:816
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:825
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:836
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:840
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:846
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:850
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:856
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:860
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:866
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:890
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:909
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:913
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:917
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:934
		{
			yyVAL.str = ""
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:938
		{
			yyVAL.str = yyDollar[3].str
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:943
		{
			yyVAL.str = "\n"
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:947
		{
			yyVAL.str = yyDollar[3].str
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:956
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:980
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:984
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:996
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1014
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1031
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1054
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1058
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1067
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1071
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1077
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1114
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1128
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1160
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1166
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1173
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1181
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1217
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1221
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1234
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1243
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1247
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1468
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1475
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1484
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1545
		{
			yyVAL.str = yyDollar[3].str
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1551
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1555
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1561
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1594
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1617
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1640
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1654
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1676
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1693
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1703
		{
			yyVAL.str = yyDollar[1].str
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1710
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1716
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1720
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1731
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1737
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1780
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1784
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1788
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1797
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1808
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1815
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1835
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1852
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1878
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2022
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2026
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2038
		{
			yyVAL.str = yyDollar[1].str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2043
		{
			yyVAL.str = "true"
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2044
		{
			yyVAL.str = "false"
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2045
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2072
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2078
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2122
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2194
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2198
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2204
		{
			yyVAL.item = nil
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2209
		{
			yyVAL.item = nil
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2237
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2262
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2273
		{
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2277
		{
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
=======
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2328
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2367
		{
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2369
		{
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2397
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2405
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2490
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2495
		{
			yyVAL.str = ""
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2499
		{
			yyVAL.str = yyDollar[2].str
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2505
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2543
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2547
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2556
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2560
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2570
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2574
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2602
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2611
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2615
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2667
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2675
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2687
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2703
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2716
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2727
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2731
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2737
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2742
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2749
		{
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2751
		{
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2754
		{
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2763
		{
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2767
		{
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2772
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2781
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2788
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2794
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2802
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2809
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2816
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2836
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2846
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2859
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2867
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2881
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2904
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2927
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2931
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2946
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2950
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2956
		{
			yyVAL.str = yyDollar[1].str
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2960
		{
			yyVAL.str = yyDollar[3].str
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2966
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2970
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2976
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2981
		{
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2992
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2996
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3012
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3018
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3022
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3028
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3032
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3061
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3068
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3086
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3122
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3135
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3139
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3144
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3148
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3155
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3160
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3177
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3189
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3215
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3219
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3237
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3246
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3260
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3269
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3275
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3281
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3285
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3296
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3300
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3304
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3309
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3313
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3317
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3333
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3347
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3420
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3478
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3528
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3537
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3546
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3552
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3556
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3562
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3566
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3570
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3574
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3579
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3587
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3593
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3601
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3619
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3625
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3634
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3643
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3652
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3662
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3666
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3676
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3680
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3684
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3688
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3704
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3708
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3714
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3730
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3736
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3740
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3744
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3754
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3764
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3770
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3774
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3780
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3794
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3807
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3813
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3832
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3850
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3854
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3860
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3870
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3874
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3878
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3883
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3887
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3891
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3895
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3904
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3908
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3912
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3916
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3921
		{
			yyVAL.str = ""
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3925
		{
			yyVAL.str = yyDollar[1].str
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3929
		{
			yyVAL.str = yyDollar[2].str
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3938
		{
			yyVAL.str = ""
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3942
		{
			yyVAL.str = yyDollar[1].str
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3946
		{
			yyVAL.str = yyDollar[2].str
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3950
		{
			yyVAL.str = yyDollar[1].str
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3954
		{
			yyVAL.str = yyDollar[2].str
		}
	case 648:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3988
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3998
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4009
		{
		}
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4014
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4026
		{
			yyVAL.str = yyDollar[1].str
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4032
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4042
		{
			yyVAL.str = yyDollar[1].str
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4046
		{
			yyVAL.str = yyDollar[1].str
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4052
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4073
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4079
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4086
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4094
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4100
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4109
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4121
		{
			yyVAL.str = yyDollar[1].str
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4126
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4132
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4140
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4246
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4250
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4256
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4266
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4270
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4276
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4286
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4290
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4303
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4316
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4335
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4344
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4348
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4375
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4379
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4383
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4389
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4412
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4434
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4442
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4446
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4456
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4460
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4466
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4471
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4476
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4480
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4484
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4488
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4492
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4525
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4531
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4535
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4545
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4549
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4554
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4558
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4587
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4594
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4608
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4617
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4621
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4626
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4630
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4637
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4661
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4706
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4712
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4716
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4745
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4751
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4755
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4761
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4777
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4781
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4790
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4795
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4799
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4804
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4808
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4818
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4822
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4833
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4849
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4868
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4887
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4897
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4901
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4906
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4910
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4919
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4925
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4929
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4933
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4939
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4947
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4951
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4955
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4959
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4963
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4967
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4971
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4975
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4979
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4999
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5003
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5007
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5019
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5023
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5027
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5031
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5035
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5039
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5051
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5058
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5062
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5068
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5073
		{
			yyVAL.str = ""
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5077
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5081
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5087
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5091
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5095
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5099
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5103
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5107
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5121
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5125
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5134
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5139
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5145
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5152
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5156
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5162
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5166
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5172
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5182
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5188
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5197
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5206
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5229
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5238
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5248
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5256
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5262
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5266
		{
			yyVAL.str = yyDollar[1].str
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5276
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5282
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5288
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5302
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5334
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5342
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5351
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5357
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5361
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5367
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5375
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5383
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5403
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5407
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5411
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5442
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5447
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5457
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5461
		{
			yyVAL.str = yyDollar[2].str
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5467
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5486
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5493
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5500
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5507
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5516
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5522
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5528
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5536
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5556
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5564
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5573
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5578
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5582
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5598
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5620
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5624
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5628
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5632
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5636
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5640
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5644
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5652
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5658
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5662
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5666
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5686
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5690
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5698
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5702
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5707
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5715
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5719
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5723
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5732
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5736
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5740
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5744
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5753
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5762
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5768
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5772
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5778
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5788
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5805
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5822
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5835
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5848
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5889
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5904
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5921
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5936
		{
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5942
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5946
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5950
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5960
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5972
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5976
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5982
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5989
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6002
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6009
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6018
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6027
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6037
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6047
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6075
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6085
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6095
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6105
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6115
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6135
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6145
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6155
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6165
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6175
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6192
=======
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6178
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6195
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6200
=======
//line mysql_sql.y:6203
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6208
=======
//line mysql_sql.y:6211
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6216
=======
//line mysql_sql.y:6219
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6224
=======
//line mysql_sql.y:6227
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6233
=======
//line mysql_sql.y:6236
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6241
=======
//line mysql_sql.y:6244
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6250
=======
//line mysql_sql.y:6253
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6259
=======
//line mysql_sql.y:6262
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6267
=======
//line mysql_sql.y:6270
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6275
=======
//line mysql_sql.y:6278
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6284
=======
//line mysql_sql.y:6287
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6293
=======
//line mysql_sql.y:6296
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line mysql_sql.y:6315
=======
//line mysql_sql.y:6318
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6351
=======
//line mysql_sql.y:6354
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6363
=======
//line mysql_sql.y:6366
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6375
=======
//line mysql_sql.y:6378
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6385
=======
//line mysql_sql.y:6388
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6393
=======
//line mysql_sql.y:6396
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6400
=======
//line mysql_sql.y:6403
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6407
=======
//line mysql_sql.y:6410
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6419
=======
//line mysql_sql.y:6422
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6427
=======
//line mysql_sql.y:6430
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6438
=======
//line mysql_sql.y:6441
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6447
=======
//line mysql_sql.y:6450
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6456
=======
//line mysql_sql.y:6459
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6464
=======
//line mysql_sql.y:6467
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6474
=======
//line mysql_sql.y:6477
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6482
=======
//line mysql_sql.y:6485
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
<<<<<<< HEAD
//line mysql_sql.y:6490
=======
//line mysql_sql.y:6493
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6500
=======
//line mysql_sql.y:6503
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6504
=======
//line mysql_sql.y:6507
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6510
=======
//line mysql_sql.y:6513
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6514
=======
//line mysql_sql.y:6517
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line mysql_sql.y:6533
=======
//line mysql_sql.y:6536
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line mysql_sql.y:6535
=======
//line mysql_sql.y:6538
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6576
=======
//line mysql_sql.y:6579
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
<<<<<<< HEAD
//line mysql_sql.y:6586
=======
//line mysql_sql.y:6589
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
<<<<<<< HEAD
//line mysql_sql.y:6590
=======
//line mysql_sql.y:6593
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
<<<<<<< HEAD
//line mysql_sql.y:6594
=======
//line mysql_sql.y:6597
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
<<<<<<< HEAD
//line mysql_sql.y:6600
=======
//line mysql_sql.y:6603
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
<<<<<<< HEAD
//line mysql_sql.y:6605
=======
//line mysql_sql.y:6608
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
<<<<<<< HEAD
//line mysql_sql.y:6609
=======
//line mysql_sql.y:6612
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
<<<<<<< HEAD
//line mysql_sql.y:6615
=======
//line mysql_sql.y:6618
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
<<<<<<< HEAD
//line mysql_sql.y:6619
=======
//line mysql_sql.y:6622
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6626
=======
//line mysql_sql.y:6629
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6630
=======
//line mysql_sql.y:6633
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6634
=======
//line mysql_sql.y:6637
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6642
=======
//line mysql_sql.y:6645
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6646
=======
//line mysql_sql.y:6649
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6650
=======
//line mysql_sql.y:6653
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6654
=======
//line mysql_sql.y:6657
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6660
=======
//line mysql_sql.y:6663
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6664
=======
//line mysql_sql.y:6667
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6668
=======
//line mysql_sql.y:6671
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6672
=======
//line mysql_sql.y:6675
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6676
=======
//line mysql_sql.y:6679
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6680
=======
//line mysql_sql.y:6683
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6684
=======
//line mysql_sql.y:6687
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6688
=======
//line mysql_sql.y:6691
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6692
=======
//line mysql_sql.y:6695
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6696
=======
//line mysql_sql.y:6699
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6704
=======
//line mysql_sql.y:6707
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6708
=======
//line mysql_sql.y:6711
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6712
=======
//line mysql_sql.y:6715
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6716
=======
//line mysql_sql.y:6719
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6720
=======
//line mysql_sql.y:6723
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6724
=======
//line mysql_sql.y:6727
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6728
=======
//line mysql_sql.y:6731
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6732
=======
//line mysql_sql.y:6735
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6738
=======
//line mysql_sql.y:6741
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6742
=======
//line mysql_sql.y:6745
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6748
=======
//line mysql_sql.y:6751
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6752
=======
//line mysql_sql.y:6755
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6759
=======
//line mysql_sql.y:6762
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6763
=======
//line mysql_sql.y:6766
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6767
=======
//line mysql_sql.y:6770
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6773
=======
//line mysql_sql.y:6776
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6777
=======
//line mysql_sql.y:6780
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6781
=======
//line mysql_sql.y:6784
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6785
=======
//line mysql_sql.y:6788
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6789
=======
//line mysql_sql.y:6792
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6793
=======
//line mysql_sql.y:6796
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
<<<<<<< HEAD
//line mysql_sql.y:6797
=======
//line mysql_sql.y:6800
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
<<<<<<< HEAD
//line mysql_sql.y:6803
=======
//line mysql_sql.y:6806
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
<<<<<<< HEAD
//line mysql_sql.y:6807
=======
//line mysql_sql.y:6810
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
<<<<<<< HEAD
//line mysql_sql.y:6811
=======
//line mysql_sql.y:6814
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
<<<<<<< HEAD
//line mysql_sql.y:6815
=======
//line mysql_sql.y:6818
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6821
=======
//line mysql_sql.y:6824
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6825
=======
//line mysql_sql.y:6828
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6838
=======
//line mysql_sql.y:6841
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6843
=======
//line mysql_sql.y:6846
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6847
=======
//line mysql_sql.y:6850
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6851
=======
//line mysql_sql.y:6854
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6855
=======
//line mysql_sql.y:6858
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6859
=======
//line mysql_sql.y:6862
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6863
=======
//line mysql_sql.y:6866
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6877
=======
//line mysql_sql.y:6880
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
<<<<<<< HEAD
//line mysql_sql.y:6881
=======
//line mysql_sql.y:6884
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6888
=======
//line mysql_sql.y:6891
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6899
=======
//line mysql_sql.y:6902
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6904
=======
//line mysql_sql.y:6907
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6910
=======
//line mysql_sql.y:6913
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6922
=======
//line mysql_sql.y:6925
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6934
=======
//line mysql_sql.y:6937
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6946
=======
//line mysql_sql.y:6949
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6959
=======
//line mysql_sql.y:6962
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6972
=======
//line mysql_sql.y:6975
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6985
=======
//line mysql_sql.y:6988
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:6998
=======
//line mysql_sql.y:7001
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7011
=======
//line mysql_sql.y:7014
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7024
=======
//line mysql_sql.y:7027
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7037
=======
//line mysql_sql.y:7040
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7050
=======
//line mysql_sql.y:7053
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7063
=======
//line mysql_sql.y:7066
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7076
=======
//line mysql_sql.y:7079
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7091
=======
//line mysql_sql.y:7094
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7114
=======
//line mysql_sql.y:7117
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7148
=======
//line mysql_sql.y:7151
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7196
=======
//line mysql_sql.y:7199
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7213
=======
//line mysql_sql.y:7216
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7225
=======
//line mysql_sql.y:7228
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7245
=======
//line mysql_sql.y:7248
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7265
=======
//line mysql_sql.y:7268
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7285
=======
//line mysql_sql.y:7288
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7301
=======
//line mysql_sql.y:7304
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7314
=======
//line mysql_sql.y:7317
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7327
=======
//line mysql_sql.y:7330
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7340
=======
//line mysql_sql.y:7343
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7353
=======
//line mysql_sql.y:7356
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7365
=======
//line mysql_sql.y:7368
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7377
=======
//line mysql_sql.y:7380
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7389
=======
//line mysql_sql.y:7392
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7401
=======
//line mysql_sql.y:7404
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7413
=======
//line mysql_sql.y:7416
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7425
=======
//line mysql_sql.y:7428
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7437
=======
//line mysql_sql.y:7440
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7449
=======
//line mysql_sql.y:7452
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7461
=======
//line mysql_sql.y:7464
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7474
=======
//line mysql_sql.y:7477
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7487
=======
//line mysql_sql.y:7490
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
<<<<<<< HEAD
//line mysql_sql.y:7502
=======
//line mysql_sql.y:7505
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
<<<<<<< HEAD
//line mysql_sql.y:7510
=======
//line mysql_sql.y:7513
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
<<<<<<< HEAD
//line mysql_sql.y:7519
=======
//line mysql_sql.y:7522
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
<<<<<<< HEAD
//line mysql_sql.y:7529
=======
//line mysql_sql.y:7532
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
<<<<<<< HEAD
//line mysql_sql.y:7552
=======
//line mysql_sql.y:7555
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
<<<<<<< HEAD
//line mysql_sql.y:7557
=======
//line mysql_sql.y:7560
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
<<<<<<< HEAD
//line mysql_sql.y:7563
=======
//line mysql_sql.y:7566
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
<<<<<<< HEAD
//line mysql_sql.y:7570
=======
//line mysql_sql.y:7573
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
<<<<<<< HEAD
//line mysql_sql.y:7574
=======
//line mysql_sql.y:7577
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
<<<<<<< HEAD
//line mysql_sql.y:7579
=======
//line mysql_sql.y:7582
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
<<<<<<< HEAD
//line mysql_sql.y:7583
=======
//line mysql_sql.y:7586
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
<<<<<<< HEAD
//line mysql_sql.y:7589
=======
//line mysql_sql.y:7592
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
<<<<<<< HEAD
//line mysql_sql.y:7595
=======
//line mysql_sql.y:7598
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
<<<<<<< HEAD
//line mysql_sql.y:7602
=======
//line mysql_sql.y:7605
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
<<<<<<< HEAD
//line mysql_sql.y:7609
=======
//line mysql_sql.y:7612
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
<<<<<<< HEAD
//line mysql_sql.y:7618
=======
//line mysql_sql.y:7621
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
<<<<<<< HEAD
//line mysql_sql.y:7625
=======
//line mysql_sql.y:7628
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
<<<<<<< HEAD
//line mysql_sql.y:7632
=======
//line mysql_sql.y:7635
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line mysql_sql.y:7641
=======
//line mysql_sql.y:7644
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line mysql_sql.y:7645
=======
//line mysql_sql.y:7648
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line mysql_sql.y:7649
=======
//line mysql_sql.y:7652
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line mysql_sql.y:7655
=======
//line mysql_sql.y:7658
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line mysql_sql.y:7657
=======
//line mysql_sql.y:7660
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line mysql_sql.y:7667
=======
//line mysql_sql.y:7670
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyVAL.str = ""
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line mysql_sql.y:7671
=======
//line mysql_sql.y:7674
>>>>>>> dabdae14beb389320c515af1e21aff5323415d98
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

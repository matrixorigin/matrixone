// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const LOW_CARDINALITY = 57671
const ADMIN_NAME = 57672
const RANDOM = 57673
const SUSPEND = 57674
const ATTRIBUTE = 57675
const HISTORY = 57676
const REUSE = 57677
const CURRENT = 57678
const OPTIONAL = 57679
const FAILED_LOGIN_ATTEMPTS = 57680
const PASSWORD_LOCK_TIME = 57681
const UNBOUNDED = 57682
const SECONDARY = 57683
const USER = 57684
const IDENTIFIED = 57685
const CIPHER = 57686
const ISSUER = 57687
const X509 = 57688
const SUBJECT = 57689
const SAN = 57690
const REQUIRE = 57691
const SSL = 57692
const NONE = 57693
const PASSWORD = 57694
const MAX_QUERIES_PER_HOUR = 57695
const MAX_UPDATES_PER_HOUR = 57696
const MAX_CONNECTIONS_PER_HOUR = 57697
const MAX_USER_CONNECTIONS = 57698
const FORMAT = 57699
const VERBOSE = 57700
const CONNECTION = 57701
const TRIGGERS = 57702
const PROFILES = 57703
const LOAD = 57704
const INFILE = 57705
const TERMINATED = 57706
const OPTIONALLY = 57707
const ENCLOSED = 57708
const ESCAPED = 57709
const STARTING = 57710
const LINES = 57711
const ROWS = 57712
const IMPORT = 57713
const FROM_JSONLINE = 57714
const DATABASES = 57715
const TABLES = 57716
const EXTENDED = 57717
const FULL = 57718
const PROCESSLIST = 57719
const FIELDS = 57720
const COLUMNS = 57721
const OPEN = 57722
const ERRORS = 57723
const WARNINGS = 57724
const INDEXES = 57725
const SCHEMAS = 57726
const NAMES = 57727
const GLOBAL = 57728
const SESSION = 57729
const ISOLATION = 57730
const LEVEL = 57731
const READ = 57732
const WRITE = 57733
const ONLY = 57734
const REPEATABLE = 57735
const COMMITTED = 57736
const UNCOMMITTED = 57737
const SERIALIZABLE = 57738
const LOCAL = 57739
const EVENTS = 57740
const PLUGINS = 57741
const CURRENT_TIMESTAMP = 57742
const DATABASE = 57743
const CURRENT_TIME = 57744
const LOCALTIME = 57745
const LOCALTIMESTAMP = 57746
const UTC_DATE = 57747
const UTC_TIME = 57748
const UTC_TIMESTAMP = 57749
const REPLACE = 57750
const CONVERT = 57751
const SEPARATOR = 57752
const TIMESTAMPDIFF = 57753
const CURRENT_DATE = 57754
const CURRENT_USER = 57755
const CURRENT_ROLE = 57756
const SECOND_MICROSECOND = 57757
const MINUTE_MICROSECOND = 57758
const MINUTE_SECOND = 57759
const HOUR_MICROSECOND = 57760
const HOUR_SECOND = 57761
const HOUR_MINUTE = 57762
const DAY_MICROSECOND = 57763
const DAY_SECOND = 57764
const DAY_MINUTE = 57765
const DAY_HOUR = 57766
const YEAR_MONTH = 57767
const SQL_TSI_HOUR = 57768
const SQL_TSI_DAY = 57769
const SQL_TSI_WEEK = 57770
const SQL_TSI_MONTH = 57771
const SQL_TSI_QUARTER = 57772
const SQL_TSI_YEAR = 57773
const SQL_TSI_SECOND = 57774
const SQL_TSI_MINUTE = 57775
const RECURSIVE = 57776
const CONFIG = 57777
const DRAINER = 57778
const MATCH = 57779
const AGAINST = 57780
const BOOLEAN = 57781
const LANGUAGE = 57782
const WITH = 57783
const QUERY = 57784
const EXPANSION = 57785
const ADDDATE = 57786
const BIT_AND = 57787
const BIT_OR = 57788
const BIT_XOR = 57789
const CAST = 57790
const COUNT = 57791
const APPROX_COUNT_DISTINCT = 57792
const APPROX_PERCENTILE = 57793
const CURDATE = 57794
const CURTIME = 57795
const DATE_ADD = 57796
const DATE_SUB = 57797
const EXTRACT = 57798
const GROUP_CONCAT = 57799
const MAX = 57800
const MID = 57801
const MIN = 57802
const NOW = 57803
const POSITION = 57804
const SESSION_USER = 57805
const STD = 57806
const STDDEV = 57807
const STDDEV_POP = 57808
const STDDEV_SAMP = 57809
const SUBDATE = 57810
const SUBSTR = 57811
const SUBSTRING = 57812
const SUM = 57813
const SYSDATE = 57814
const SYSTEM_USER = 57815
const TRANSLATE = 57816
const TRIM = 57817
const VARIANCE = 57818
const VAR_POP = 57819
const VAR_SAMP = 57820
const AVG = 57821
const JSON_EXTRACT = 57822
const ARROW = 57823
const UNNEST = 57824
const GENERATE_SERIES = 57825
const ROW = 57826
const OUTFILE = 57827
const HEADER = 57828
const MAX_FILE_SIZE = 57829
const FORCE_QUOTE = 57830
const UNUSED = 57831
const BINDINGS = 57832
const DO = 57833
const DECLARE = 57834

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ARROW",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7834

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 78,
	21, 491,
	-2, 472,
	-1, 83,
	210, 673,
	-2, 717,
	-1, 100,
	42, 331,
	210, 331,
	237, 338,
	238, 338,
	400, 331,
	-2, 359,
	-1, 457,
	67, 1061,
	-2, 1560,
	-1, 458,
	67, 1079,
	-2, 1531,
	-1, 463,
	67, 1080,
	-2, 1559,
	-1, 483,
	67, 994,
	-2, 1608,
	-1, 484,
	67, 995,
	-2, 1607,
	-1, 485,
	67, 1570,
	-2, 1592,
	-1, 486,
	67, 1571,
	-2, 1593,
	-1, 487,
	67, 1572,
	-2, 1599,
	-1, 488,
	67, 1573,
	-2, 1582,
	-1, 489,
	67, 1574,
	-2, 1590,
	-1, 490,
	67, 1575,
	-2, 1600,
	-1, 491,
	67, 1576,
	-2, 1601,
	-1, 492,
	67, 1577,
	-2, 1606,
	-1, 493,
	67, 1578,
	-2, 1611,
	-1, 494,
	67, 1579,
	-2, 1612,
	-1, 498,
	67, 1058,
	-2, 1412,
	-1, 505,
	67, 1067,
	-2, 1438,
	-1, 509,
	67, 1071,
	-2, 1477,
	-1, 510,
	67, 1072,
	-2, 1555,
	-1, 518,
	67, 1082,
	-2, 1540,
	-1, 520,
	67, 1084,
	-2, 1550,
	-1, 532,
	67, 975,
	-2, 1602,
	-1, 533,
	67, 976,
	-2, 1603,
	-1, 534,
	67, 977,
	-2, 1604,
	-1, 541,
	21, 492,
	-2, 455,
	-1, 583,
	395, 359,
	396, 359,
	-2, 332,
	-1, 625,
	103, 1412,
	114, 1412,
	133, 1412,
	-2, 1219,
	-1, 656,
	21, 492,
	-2, 455,
	-1, 754,
	21, 491,
	-2, 904,
	-1, 1053,
	67, 1127,
	-2, 1557,
	-1, 1054,
	67, 1128,
	-2, 1558,
	-1, 1210,
	1, 699,
	68, 699,
	510, 699,
	-2, 706,
	-1, 1327,
	133, 1229,
	-2, 1227,
	-1, 1329,
	133, 616,
	-2, 1224,
	-1, 1330,
	133, 617,
	-2, 1225,
	-1, 1615,
	1, 700,
	68, 700,
	510, 700,
	-2, 706,
	-1, 1666,
	21, 491,
	-2, 582,
	-1, 1822,
	65, 403,
	134, 403,
	-2, 809,
	-1, 2054,
	87, 706,
	129, 706,
	166, 706,
	169, 706,
	-2, 757,
	-1, 2056,
	271, 872,
	-2, 851,
	-1, 2086,
	65, 403,
	134, 403,
	-2, 810,
	-1, 2121,
	87, 706,
	129, 706,
	166, 706,
	169, 706,
	-2, 758,
	-1, 2149,
	271, 872,
	-2, 852,
	-1, 2540,
	68, 729,
	134, 729,
	-2, 706,
	-1, 2545,
	68, 729,
	134, 729,
	-2, 706,
	-1, 2561,
	68, 733,
	134, 733,
	-2, 706,
	-1, 2566,
	68, 734,
	134, 734,
	-2, 706,
}

const yyPrivate = 57344

const yyLast = 26655

var yyAct = [...]int{
	429, 2545, 1117, 2547, 2554, 2544, 2517, 409, 1034, 2188,
	2383, 411, 2505, 2463, 431, 2420, 1663, 2161, 2448, 2356,
	2447, 2360, 2336, 2106, 2186, 780, 1599, 1288, 2048, 2117,
	1253, 2187, 2344, 1030, 117, 117, 948, 455, 2204, 902,
	117, 349, 356, 2171, 356, 1659, 542, 2079, 120, 1163,
	2150, 354, 28, 2104, 1954, 1215, 1825, 624, 1037, 878,
	1950, 889, 1276, 360, 116, 116, 2170, 1313, 1840, 2060,
	340, 809, 1955, 366, 2026, 1245, 537, 403, 1507, 1959,
	2008, 1970, 1948, 1306, 1965, 1861, 570, 1915, 891, 1622,
	1798, 1314, 1658, 408, 650, 1166, 1173, 1307, 1324, 1217,
	1187, 1503, 1502, 1327, 1315, 1269, 1875, 628, 537, 1248,
	1647, 1839, 3, 1800, 1246, 1795, 117, 815, 631, 37,
	1621, 353, 17, 352, 6, 1226, 350, 7, 351, 5,
	1203, 2125, 1504, 410, 1028, 1534, 1616, 1195, 970, 412,
	77, 1608, 1239, 1605, 1033, 1273, 652, 1228, 342, 1291,
	1514, 1081, 1238, 1587, 1067, 626, 1518, 1019, 586, 37,
	443, 78, 420, 345, 667, 28, 1661, 1310, 1294, 1668,
	1199, 860, 1027, 616, 1202, 1234, 569, 1227, 1087, 927,
	1086, 917, 1116, 404, 14, 539, 541, 368, 8, 4,
	903, 969, 1178, 617, 579, 369, 940, 2531, 339, 111,
	108, 78, 567, 363, 355, 2558, 1521, 2429, 2108, 1511,
	113, 2211, 2113, 2047, 1191, 1309, 540, 781, 2179, 112,
	1107, 33, 102, 84, 686, 2401, 649, 112, 112, 2411,
	112, 112, 37, 876, 1712, 17, 112, 6, 338, 1720,
	7, 1508, 5, 112, 929, 1107, 1519, 720, 358, 112,
	629, 33, 102, 84, 1257, 1258, 986, 112, 899, 33,
	102, 84, 719, 979, 1890, 914, 1883, 915, 1797, 536,
	630, 1020, 983, 1024, 78, 1786, 109, 908, 909, 976,
	2436, 596, 1004, 713, 109, 109, 906, 109, 109, 905,
	908, 909, 1230, 985, 1036, 930, 718, 1023, 2202, 2434,
	978, 527, 1941, 526, 528, 529, 109, 530, 531, 2451,
	2452, 2424, 2425, 2289, 109, 2292, 1796, 2205, 2206, 2207,
	2208, 2214, 2049, 636, 635, 637, 694, 701, 696, 702,
	1942, 1038, 1943, 1707, 661, 1270, 2359, 2037, 1979, 365,
	2068, 1515, 117, 660, 1262, 1803, 2075, 1606, 1015, 1584,
	600, 1981, 659, 634, 2184, 543, 697, 704, 356, 1103,
	117, 1971, 1100, 1266, 1025, 670, 1102, 1099, 1101, 1105,
	1106, 2273, 658, 2410, 1104, 1906, 1162, 1161, 2168, 716,
	717, 1904, 1122, 1022, 1103, 655, 657, 1100, 1976, 1977,
	677, 1102, 1099, 1101, 1105, 1106, 715, 1717, 689, 1104,
	639, 2276, 399, 1978, 706, 400, 707, 601, 2181, 2438,
	2461, 83, 357, 110, 2267, 2536, 632, 756, 2555, 690,
	699, 2471, 2433, 670, 2381, 2382, 897, 2385, 2478, 654,
	2385, 100, 2408, 2450, 709, 2260, 2528, 681, 2229, 2358,
	692, 2228, 2413, 2414, 402, 1975, 2391, 656, 1811, 1812,
	1813, 1814, 695, 698, 401, 2518, 2508, 2549, 1520, 2556,
	921, 1809, 711, 712, 627, 37, 37, 936, 1960, 1963,
	1045, 1048, 1049, 633, 916, 877, 691, 700, 2440, 2441,
	1021, 1046, 1524, 1526, 1527, 935, 901, 900, 2251, 629,
	679, 2345, 2346, 2347, 2349, 2348, 2321, 705, 1110, 1111,
	1112, 1113, 1114, 1115, 1108, 1109, 894, 78, 78, 630,
	663, 664, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1110, 1111, 1112, 1113, 1114, 1115, 1108,
	1109, 710, 638, 672, 671, 693, 703, 1973, 2255, 2217,
	651, 1535, 879, 364, 2287, 2563, 928, 1713, 1509, 757,
	758, 759, 760, 1676, 708, 629, 882, 678, 1509, 686,
	1863, 1865, 675, 1512, 1197, 1509, 1911, 1909, 884, 570,
	2509, 359, 1260, 597, 886, 754, 2530, 2548, 1675, 1674,
	1963, 564, 565, 566, 761, 857, 2428, 2107, 1868, 727,
	1964, 672, 671, 1917, 1916, 1957, 789, 1673, 755, 1958,
	1961, 1261, 933, 907, 931, 932, 763, 1802, 908, 909,
	2412, 880, 881, 2439, 883, 1817, 898, 2357, 904, 537,
	537, 537, 665, 1672, 952, 952, 767, 908, 909, 1259,
	1982, 1271, 997, 998, 1972, 603, 2490, 685, 604, 1218,
	356, 973, 973, 1610, 1823, 1522, 2274, 1700, 597, 1510,
	1907, 1962, 599, 1597, 981, 598, 2180, 950, 950, 1806,
	1807, 954, 607, 895, 34, 721, 956, 85, 2185, 2569,
	911, 912, 34, 1805, 1002, 85, 85, 1721, 85, 85,
	722, 1263, 791, 792, 85, 1016, 952, 1047, 952, 660,
	2223, 85, 2506, 2507, 627, 987, 2568, 85, 1035, 1525,
	1265, 1964, 977, 680, 865, 85, 984, 2253, 2562, 606,
	1974, 2252, 1864, 609, 608, 2322, 2324, 2325, 2326, 2323,
	1001, 724, 725, 726, 723, 2559, 1011, 599, 1000, 686,
	598, 1562, 1695, 862, 1561, 722, 1818, 1609, 541, 2055,
	2537, 2256, 2257, 864, 2532, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1657, 1593, 1297,
	1076, 1077, 722, 1824, 1712, 1596, 918, 1085, 918, 1657,
	1685, 888, 922, 1508, 1218, 910, 1132, 2521, 913, 2520,
	1039, 2465, 1598, 1566, 37, 1656, 1138, 2458, 958, 1032,
	2453, 2560, 339, 37, 2442, 1140, 1010, 1499, 1144, 1145,
	722, 1007, 1991, 1006, 925, 926, 1517, 934, 2430, 537,
	2533, 78, 943, 944, 945, 78, 1013, 2406, 946, 947,
	887, 2405, 1079, 1050, 972, 972, 78, 957, 988, 993,
	1029, 1018, 338, 974, 2404, 78, 961, 962, 963, 964,
	965, 966, 967, 1517, 968, 1517, 937, 2466, 989, 724,
	725, 726, 723, 2278, 2403, 2393, 2278, 1184, 2284, 1009,
	1685, 2514, 541, 1008, 1005, 642, 647, 648, 1169, 1170,
	2074, 1824, 1026, 559, 2431, 2283, 1544, 2277, 1295, 1200,
	1131, 952, 1031, 2278, 1210, 1075, 1177, 2278, 570, 1657,
	2024, 1216, 2005, 1936, 952, 2023, 2467, 1185, 1858, 1206,
	2278, 724, 725, 726, 723, 1017, 1040, 1041, 1042, 1043,
	1044, 1782, 1069, 1168, 544, 1235, 1235, 1780, 1240, 1778,
	2278, 2394, 1188, 1240, 2285, 1776, 1200, 952, 117, 2089,
	1992, 1175, 1176, 1766, 1726, 1710, 1198, 1233, 537, 1704,
	952, 1626, 1702, 2278, 1211, 1543, 1877, 1697, 1083, 1084,
	686, 1120, 1118, 1119, 1121, 1205, 722, 1625, 1126, 1133,
	1282, 722, 1200, 952, 1657, 1287, 117, 117, 1826, 1139,
	1594, 1141, 1142, 1299, 1569, 684, 1237, 1783, 1715, 1132,
	1132, 1317, 683, 1781, 1292, 1777, 1132, 1132, 1714, 1224,
	1225, 1777, 1568, 561, 1290, 1222, 1289, 1289, 739, 722,
	722, 1626, 1158, 558, 557, 1698, 1706, 1329, 1703, 1640,
	1267, 1231, 1232, 1698, 1516, 1216, 1293, 1558, 994, 952,
	1545, 1498, 1996, 1626, 552, 1204, 1219, 1302, 1903, 858,
	644, 645, 646, 990, 1192, 1506, 1593, 1286, 1220, 1330,
	722, 1272, 856, 1189, 1186, 766, 1180, 1193, 1183, 673,
	1196, 1901, 684, 653, 1321, 1124, 1123, 939, 722, 892,
	2543, 1793, 2503, 2494, 1213, 1212, 941, 1318, 555, 2491,
	1500, 1204, 918, 1529, 1223, 1241, 1221, 942, 919, 1902,
	1517, 1532, 1533, 1312, 995, 1229, 1505, 550, 1254, 1074,
	1312, 1236, 1280, 1281, 605, 1799, 1242, 1244, 2395, 2295,
	2006, 1243, 1910, 572, 1072, 1073, 1071, 1029, 1701, 1678,
	662, 1268, 1732, 37, 1082, 1082, 1540, 1201, 562, 629,
	556, 726, 723, 723, 1189, 2445, 629, 2263, 1283, 2262,
	1189, 1189, 1284, 2064, 2059, 1285, 1879, 938, 2246, 630,
	1277, 1278, 1279, 1303, 551, 1150, 630, 724, 725, 726,
	723, 1542, 1573, 1319, 2527, 78, 1125, 1328, 1496, 1322,
	1497, 1323, 2542, 2524, 597, 747, 748, 740, 741, 742,
	743, 744, 745, 746, 739, 1501, 920, 1143, 2488, 1966,
	1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 724, 725, 726, 723, 2332, 1523, 2526, 117, 117,
	1734, 610, 2330, 560, 2472, 2369, 1531, 724, 725, 726,
	723, 629, 117, 1623, 1528, 742, 743, 744, 745, 746,
	739, 602, 1240, 1741, 117, 1136, 1530, 2328, 1602, 1604,
	349, 754, 1539, 2331, 1069, 1137, 2338, 2318, 1240, 2182,
	2329, 2316, 1619, 599, 1292, 2315, 598, 2072, 2314, 855,
	852, 853, 854, 117, 1631, 1746, 2311, 1745, 1744, 1742,
	2305, 2302, 2550, 1537, 2301, 2327, 1541, 740, 741, 742,
	743, 744, 745, 746, 739, 2317, 1293, 2183, 2212, 584,
	2071, 1980, 1939, 952, 1938, 2073, 573, 730, 731, 732,
	733, 734, 735, 736, 728, 1897, 973, 2363, 117, 1664,
	1664, 1689, 1664, 1691, 1592, 1591, 1551, 2538, 1590, 1552,
	1586, 1556, 589, 1585, 991, 1634, 1683, 2515, 1743, 724,
	725, 726, 723, 2468, 1632, 1633, 1589, 1567, 1667, 2460,
	1570, 1571, 1572, 2444, 2337, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1617, 1582, 1665, 2118, 1669, 1929, 724, 725,
	726, 723, 1554, 2426, 1636, 1611, 1638, 738, 737, 747,
	748, 740, 741, 742, 743, 744, 745, 746, 739, 1207,
	1208, 1209, 399, 1688, 1630, 400, 1564, 1635, 1637, 2389,
	1641, 1639, 2388, 2153, 2376, 1643, 1642, 571, 2319, 2312,
	2308, 2525, 1928, 629, 1686, 2307, 1600, 1601, 2306, 592,
	2275, 2248, 1627, 1693, 2213, 1553, 2209, 2163, 2116, 789,
	2561, 1229, 2114, 1666, 724, 725, 726, 723, 2082, 2070,
	2156, 2069, 587, 1679, 1680, 1681, 2151, 724, 725, 726,
	723, 2166, 2167, 2534, 1687, 1747, 1748, 2152, 738, 737,
	747, 748, 740, 741, 742, 743, 744, 745, 746, 739,
	724, 725, 726, 723, 588, 593, 2066, 2039, 1254, 1937,
	1908, 1189, 1189, 1189, 2272, 1871, 1724, 581, 1595, 583,
	596, 1588, 2157, 2111, 580, 578, 577, 992, 582, 972,
	594, 595, 2110, 2500, 482, 481, 724, 725, 726, 723,
	790, 785, 590, 591, 784, 724, 725, 726, 723, 1708,
	2042, 2266, 2396, 1984, 724, 725, 726, 723, 2083, 952,
	2054, 952, 112, 952, 2045, 102, 84, 2044, 660, 2032,
	2025, 1997, 724, 725, 726, 723, 1934, 1722, 1927, 585,
	738, 737, 747, 748, 740, 741, 742, 743, 744, 745,
	746, 739, 1932, 1919, 1718, 952, 1750, 737, 747, 748,
	740, 741, 742, 743, 744, 745, 746, 739, 2165, 1758,
	1956, 1914, 1779, 952, 724, 725, 726, 723, 1931, 109,
	2015, 1775, 1760, 1774, 1574, 1565, 1563, 1560, 950, 1930,
	1559, 1749, 1557, 1550, 1547, 2159, 1546, 1135, 1134, 959,
	724, 725, 726, 723, 1773, 112, 950, 2557, 2502, 1759,
	1772, 724, 725, 726, 723, 2496, 2479, 2158, 2160, 2476,
	952, 2474, 1629, 1771, 1736, 1719, 724, 725, 726, 723,
	782, 1822, 724, 725, 726, 723, 2368, 1828, 2354, 2342,
	1730, 2339, 2334, 2296, 1711, 724, 725, 726, 723, 1709,
	1165, 1836, 2270, 1716, 2269, 660, 117, 117, 117, 117,
	2268, 1820, 109, 1029, 1841, 2265, 1784, 660, 117, 2259,
	2244, 1740, 890, 2097, 1792, 2095, 1841, 1727, 1770, 1729,
	2077, 2168, 1769, 1866, 1867, 1816, 28, 952, 2065, 1174,
	1167, 1819, 1794, 2154, 1696, 117, 117, 1677, 1671, 2164,
	724, 725, 726, 723, 724, 725, 726, 723, 1670, 1132,
	1624, 1132, 1070, 1829, 1889, 109, 1857, 1179, 1182, 1664,
	1172, 1171, 1014, 952, 980, 1873, 1874, 859, 807, 1830,
	1856, 806, 805, 1895, 1733, 1833, 804, 1834, 803, 802,
	801, 1831, 1751, 1752, 1832, 800, 1789, 1827, 1755, 1756,
	1808, 1821, 799, 37, 798, 797, 17, 1617, 6, 1884,
	1761, 7, 1815, 5, 1204, 1896, 1891, 1838, 1837, 1188,
	1842, 1843, 1844, 1845, 1888, 1835, 1853, 1855, 1854, 796,
	795, 794, 793, 788, 541, 787, 786, 1189, 783, 1869,
	1787, 1788, 1196, 1886, 1872, 78, 779, 1900, 778, 1892,
	776, 1920, 1887, 1880, 1922, 660, 1924, 1882, 1905, 1969,
	1878, 775, 774, 1885, 1953, 1893, 1254, 1254, 1254, 1254,
	1894, 117, 773, 772, 1899, 771, 770, 769, 1254, 768,
	660, 765, 1912, 764, 117, 1623, 1918, 1995, 1768, 1953,
	688, 1613, 1767, 2009, 2010, 1925, 1926, 676, 1921, 2498,
	2484, 1985, 1923, 2482, 2449, 750, 2012, 753, 1810, 1684,
	724, 725, 726, 723, 724, 725, 726, 723, 78, 1765,
	1305, 687, 751, 752, 749, 78, 738, 737, 747, 748,
	740, 741, 742, 743, 744, 745, 746, 739, 1750, 2014,
	1189, 724, 725, 726, 723, 1189, 738, 737, 747, 748,
	740, 741, 742, 743, 744, 745, 746, 739, 2541, 1993,
	1850, 1848, 1989, 1847, 1764, 1851, 1849, 1986, 1987, 1988,
	117, 1846, 117, 1763, 1994, 1990, 1944, 1945, 1913, 1757,
	2003, 1705, 2002, 1699, 2001, 2013, 724, 725, 726, 723,
	1998, 1791, 1618, 1999, 2000, 724, 725, 726, 723, 2004,
	2038, 1933, 2040, 2020, 2021, 2022, 2017, 1852, 117, 1653,
	1654, 1159, 1694, 2030, 2016, 1600, 1601, 2058, 1762, 1548,
	1725, 1723, 545, 546, 547, 548, 861, 2033, 2100, 1947,
	2099, 1607, 2035, 682, 2034, 544, 2215, 1754, 2053, 2036,
	724, 725, 726, 723, 1254, 1753, 1946, 952, 952, 1731,
	61, 36, 117, 2086, 724, 725, 726, 723, 2052, 724,
	725, 726, 723, 35, 2098, 1214, 660, 724, 725, 726,
	723, 724, 725, 726, 723, 1841, 1124, 1123, 114, 2062,
	950, 2080, 1078, 2078, 960, 2056, 2417, 2057, 335, 336,
	2063, 2102, 1132, 924, 724, 725, 726, 723, 2061, 1664,
	2061, 337, 873, 874, 724, 725, 726, 723, 871, 872,
	923, 2091, 2088, 334, 869, 870, 660, 714, 2122, 2019,
	2172, 2174, 1644, 2172, 2172, 1953, 1495, 2085, 893, 2093,
	867, 868, 863, 2497, 2092, 2373, 2371, 2299, 660, 2297,
	2294, 2293, 2291, 2084, 2200, 1649, 1652, 1653, 1654, 1650,
	2199, 1651, 1655, 2087, 2109, 2115, 1216, 2051, 2197, 2103,
	2050, 2090, 2028, 866, 2173, 544, 2027, 78, 1876, 1218,
	1898, 2169, 1549, 2041, 674, 2119, 2147, 2486, 2485, 2485,
	2043, 2486, 2261, 2031, 2177, 2219, 896, 43, 1, 2175,
	2176, 2194, 1649, 1652, 1653, 1654, 1650, 1304, 1651, 1655,
	1859, 1860, 2191, 2088, 545, 546, 547, 548, 2018, 1862,
	1513, 2195, 1254, 2067, 1983, 1967, 885, 544, 952, 563,
	1127, 2247, 875, 999, 641, 669, 996, 668, 666, 117,
	1080, 445, 1308, 2335, 2196, 2416, 2462, 2367, 2174, 2419,
	1012, 430, 2286, 2222, 2192, 2193, 1940, 2201, 2288, 2203,
	1189, 2080, 1785, 2094, 2105, 1881, 2096, 575, 477, 2264,
	2245, 453, 777, 1935, 2169, 2249, 982, 975, 643, 452,
	2076, 2101, 1804, 549, 2220, 2221, 640, 2224, 2225, 2226,
	2227, 2271, 2300, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 576, 2279, 2282,
	1583, 2046, 2290, 2333, 1160, 2281, 1181, 1164, 2553, 2178,
	738, 737, 747, 748, 740, 741, 742, 743, 744, 745,
	746, 739, 2540, 2516, 2495, 2384, 660, 2298, 2535, 660,
	660, 660, 2432, 2477, 2470, 2380, 2216, 370, 2313, 660,
	1264, 1664, 535, 614, 2355, 371, 2365, 1628, 2409, 2341,
	2343, 553, 1612, 2351, 2352, 2353, 554, 2378, 1615, 2340,
	2350, 1614, 1051, 729, 952, 952, 2362, 1068, 762, 407,
	2361, 1538, 419, 2303, 2304, 413, 1801, 2370, 2162, 2309,
	2310, 2372, 2364, 2374, 2375, 1870, 42, 2379, 41, 40,
	1298, 1325, 447, 119, 1326, 117, 2377, 950, 950, 2210,
	2386, 2387, 2421, 660, 428, 427, 426, 425, 1648, 1646,
	1645, 1250, 1249, 1296, 2446, 660, 2399, 2400, 2112, 2258,
	2320, 2254, 2392, 2250, 2390, 1289, 2398, 2402, 2121, 2423,
	2120, 2148, 2149, 2280, 2155, 814, 78, 810, 812, 2407,
	813, 811, 1739, 2422, 1735, 1951, 1952, 1949, 2011, 2007,
	2415, 738, 737, 747, 748, 740, 741, 742, 743, 744,
	745, 746, 739, 2427, 1316, 2435, 2437, 1194, 1790, 1251,
	1247, 2190, 538, 27, 26, 25, 13, 2443, 12, 1003,
	11, 16, 24, 1728, 23, 2454, 2455, 2456, 2457, 2464,
	22, 21, 2469, 69, 68, 67, 66, 20, 10, 65,
	64, 63, 2473, 19, 2475, 738, 737, 747, 748, 740,
	741, 742, 743, 744, 745, 746, 739, 18, 58, 59,
	53, 52, 51, 574, 50, 2480, 2481, 2423, 2493, 2483,
	49, 48, 47, 57, 56, 660, 2487, 660, 2489, 55,
	54, 2422, 2492, 2499, 1035, 2501, 1035, 2504, 46, 45,
	44, 82, 81, 80, 79, 29, 30, 31, 32, 2510,
	92, 2459, 2464, 660, 2511, 1536, 91, 93, 2519, 89,
	87, 2523, 1035, 90, 88, 2529, 86, 38, 9, 15,
	2, 0, 0, 2397, 0, 0, 0, 738, 737, 747,
	748, 740, 741, 742, 743, 744, 745, 746, 739, 0,
	2539, 0, 0, 0, 0, 0, 0, 0, 0, 2552,
	0, 2551, 0, 0, 0, 0, 0, 0, 0, 0,
	2564, 0, 0, 2566, 0, 2565, 2567, 1441, 1483, 0,
	2552, 1430, 285, 1388, 1443, 1361, 1377, 1451, 1378, 1379,
	1416, 1340, 1398, 247, 1375, 0, 0, 0, 0, 0,
	0, 1433, 1332, 1364, 1365, 1334, 1371, 1335, 1362, 1390,
	192, 1360, 1401, 217, 1413, 1374, 1395, 1449, 0, 0,
	277, 231, 0, 0, 1393, 1435, 1396, 1421, 1387, 1417,
	1348, 1409, 1444, 1376, 0, 1414, 1445, 0, 0, 0,
	0, 1207, 1208, 1209, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 1412, 1439, 1373, 0, 176, 1442,
	1394, 1415, 0, 0, 1333, 1410, 0, 1338, 1341, 1450,
	1437, 1368, 1369, 0, 0, 0, 0, 0, 0, 0,
	0, 1391, 1397, 1418, 1384, 2513, 0, 0, 0, 0,
	0, 0, 0, 0, 1366, 0, 1406, 0, 0, 0,
	1343, 1339, 0, 1389, 0, 0, 165, 282, 298, 174,
	273, 311, 179, 280, 170, 246, 269, 0, 1482, 167,
	296, 279, 228, 211, 212, 166, 0, 264, 190, 203,
	186, 244, 0, 295, 323, 185, 314, 1342, 306, 169,
	1477, 305, 243, 292, 297, 229, 223, 168, 294, 227,
	222, 215, 194, 0, 207, 255, 221, 256, 208, 233,
	232, 234, 1461, 1462, 1463, 1464, 1465, 1473, 1474, 0,
	1478, 1479, 1480, 1347, 0, 1367, 1419, 0, 1331, 1428,
	1436, 1386, 308, 1438, 1383, 1382, 1468, 0, 1467, 281,
	1469, 1470, 216, 1434, 1363, 1372, 324, 1370, 267, 249,
	1440, 1405, 1481, 265, 219, 293, 257, 299, 283, 307,
	261, 258, 160, 284, 188, 230, 171, 172, 184, 191,
	193, 195, 196, 239, 240, 252, 272, 286, 287, 288,
	187, 180, 266, 181, 205, 182, 161, 274, 183, 163,
	253, 291, 1466, 201, 262, 226, 164, 225, 254, 290,
	289, 315, 321, 322, 326, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 1475, 0,
	1476, 320, 199, 158, 303, 0, 245, 0, 1431, 1336,
	1346, 1344, 1380, 1407, 1408, 241, 319, 1423, 1427, 1424,
	1452, 270, 0, 0, 0, 0, 0, 210, 251, 1425,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 0, 278, 301, 313, 330, 333, 1484, 1485,
	1486, 162, 332, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	304, 1381, 1354, 1392, 312, 1357, 1355, 1422, 1356, 1411,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	1402, 1385, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1403,
	0, 1359, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 1429, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 1353, 1358,
	1352, 1399, 1400, 1446, 1447, 1448, 1420, 1345, 1432, 0,
	1349, 1351, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 0, 1404, 159, 0, 218, 1453,
	259, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 1471, 1472, 316, 317, 318, 302, 421, 189,
	1494, 0, 192, 0, 0, 217, 0, 0, 0, 451,
	0, 0, 277, 231, 0, 0, 0, 0, 506, 514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 0, 0, 444, 482, 481, 432, 441, 0, 0,
	173, 433, 0, 440, 434, 438, 437, 435, 436, 0,
	498, 0, 0, 0, 0, 0, 0, 405, 418, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 416, 0, 0, 0, 0, 460, 0,
	417, 0, 0, 462, 0, 442, 0, 0, 165, 282,
	298, 174, 273, 311, 179, 280, 170, 246, 269, 0,
	0, 167, 296, 279, 228, 211, 212, 166, 0, 264,
	190, 203, 186, 244, 439, 458, 463, 185, 520, 456,
	306, 169, 0, 305, 243, 292, 297, 229, 223, 168,
	294, 227, 222, 215, 194, 521, 207, 255, 221, 256,
	208, 233, 232, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 454, 0, 0, 308, 0, 0, 504, 0, 0,
	0, 281, 0, 0, 216, 0, 0, 0, 457, 0,
	267, 249, 517, 406, 0, 265, 219, 293, 257, 299,
	283, 307, 261, 258, 160, 284, 188, 230, 171, 172,
	184, 191, 193, 195, 196, 239, 240, 252, 272, 286,
	287, 288, 187, 180, 266, 181, 205, 182, 161, 274,
	183, 163, 253, 291, 0, 201, 262, 226, 164, 225,
	254, 290, 289, 315, 321, 322, 326, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	1129, 1128, 1130, 320, 199, 158, 303, 502, 245, 0,
	516, 497, 499, 500, 503, 507, 508, 509, 510, 511,
	513, 515, 519, 270, 0, 0, 0, 0, 0, 210,
	251, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 301, 313, 330, 333,
	0, 0, 0, 162, 332, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 461, 235, 236, 237, 238, 505, 0, 178,
	331, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 198, 204, 0, 206, 177,
	250, 200, 310, 213, 0, 242, 209, 275, 214, 220,
	263, 309, 248, 268, 175, 300, 276, 224, 0, 0,
	527, 501, 526, 528, 529, 525, 530, 531, 512, 424,
	0, 466, 523, 522, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	218, 0, 259, 197, 488, 470, 471, 472, 423, 473,
	468, 469, 489, 464, 485, 486, 446, 449, 474, 136,
	475, 487, 490, 491, 532, 533, 534, 478, 492, 484,
	483, 476, 465, 493, 494, 450, 448, 479, 480, 467,
	0, 0, 495, 496, 285, 459, 316, 317, 318, 302,
	0, 189, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 192, 1190, 0, 217, 0, 0, 0, 451,
	0, 0, 277, 231, 0, 0, 0, 0, 506, 514,
	0, 0, 0, 0, 0, 0, 0, 1274, 0, 0,
	414, 0, 0, 444, 482, 481, 432, 441, 0, 0,
	173, 433, 0, 440, 434, 438, 437, 435, 436, 0,
	498, 0, 0, 0, 0, 0, 0, 405, 418, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 416, 0, 0, 0, 0, 460, 0,
	417, 0, 0, 1275, 0, 442, 0, 0, 165, 282,
	298, 174, 273, 311, 179, 280, 170, 246, 269, 0,
	0, 167, 296, 279, 228, 211, 212, 166, 0, 264,
	190, 203, 186, 244, 439, 458, 463, 185, 520, 456,
	306, 169, 0, 305, 243, 292, 297, 229, 223, 168,
	294, 227, 222, 215, 194, 521, 207, 255, 221, 256,
	208, 233, 232, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 454, 0, 0, 308, 0, 0, 504, 0, 0,
	0, 281, 0, 0, 216, 0, 0, 0, 457, 0,
	267, 249, 517, 406, 0, 265, 219, 293, 257, 299,
	283, 307, 261, 258, 160, 284, 188, 230, 171, 172,
	184, 191, 193, 195, 196, 239, 240, 252, 272, 286,
	287, 288, 187, 180, 266, 181, 205, 182, 161, 274,
	183, 163, 253, 291, 0, 201, 262, 226, 164, 225,
	254, 290, 289, 315, 321, 322, 326, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 320, 199, 158, 303, 502, 245, 0,
	516, 497, 499, 500, 503, 507, 508, 509, 510, 511,
	513, 515, 519, 270, 0, 0, 0, 0, 0, 210,
	251, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 301, 313, 330, 333,
	0, 0, 0, 162, 332, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 461, 235, 236, 237, 238, 505, 0, 178,
	331, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 198, 204, 0, 206, 177,
	250, 200, 310, 213, 0, 242, 209, 275, 214, 220,
	263, 309, 248, 268, 175, 300, 276, 224, 0, 0,
	527, 501, 526, 528, 529, 525, 530, 531, 512, 424,
	0, 466, 523, 522, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	218, 0, 259, 197, 488, 470, 471, 472, 423, 473,
	468, 469, 489, 464, 485, 486, 446, 449, 474, 136,
	475, 487, 490, 491, 532, 533, 534, 478, 492, 484,
	483, 476, 465, 493, 494, 450, 448, 479, 480, 467,
	0, 0, 495, 496, 0, 0, 316, 317, 318, 302,
	0, 189, 112, 285, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 451, 0,
	0, 277, 231, 0, 0, 0, 0, 506, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 444, 482, 481, 432, 441, 0, 0, 173,
	433, 0, 440, 434, 438, 437, 435, 436, 0, 498,
	0, 0, 0, 0, 0, 0, 405, 418, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 0, 0, 0, 0, 460, 0, 417,
	0, 0, 462, 0, 442, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 439, 458, 463, 185, 520, 456, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 521, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 308, 0, 0, 504, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 457, 0, 267,
	249, 517, 406, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 502, 245, 0, 516,
	497, 499, 500, 503, 507, 508, 509, 510, 511, 513,
	515, 519, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 333, 0,
	0, 0, 162, 332, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 461, 235, 236, 237, 238, 505, 0, 178, 331,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 198, 204, 0, 206, 177, 250,
	200, 310, 213, 0, 242, 209, 275, 214, 220, 263,
	309, 248, 268, 175, 300, 276, 224, 0, 0, 527,
	501, 526, 528, 529, 525, 530, 531, 512, 424, 0,
	466, 523, 522, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 218,
	85, 259, 197, 488, 470, 471, 472, 423, 473, 468,
	469, 489, 464, 485, 486, 446, 449, 474, 136, 475,
	487, 490, 491, 532, 533, 534, 478, 492, 484, 483,
	476, 465, 493, 494, 450, 448, 479, 480, 467, 0,
	0, 495, 496, 285, 459, 316, 317, 318, 302, 0,
	189, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 192, 2512, 0, 217, 0, 0, 0, 451, 0,
	0, 277, 231, 0, 0, 0, 0, 506, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 444, 482, 481, 432, 441, 0, 0, 173,
	433, 0, 440, 434, 438, 437, 435, 436, 0, 498,
	0, 0, 0, 0, 0, 0, 405, 418, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 0, 0, 0, 0, 460, 0, 417,
	0, 0, 462, 0, 442, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 439, 458, 463, 185, 520, 456, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 521, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 308, 0, 0, 504, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 457, 0, 267,
	249, 517, 406, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 502, 245, 0, 516,
	497, 499, 500, 503, 507, 508, 509, 510, 511, 513,
	515, 519, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 333, 0,
	0, 0, 162, 332, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 461, 235, 236, 237, 238, 505, 0, 178, 331,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 198, 204, 0, 206, 177, 250,
	200, 310, 213, 0, 242, 209, 275, 214, 220, 263,
	309, 248, 268, 175, 300, 276, 224, 0, 0, 527,
	501, 526, 528, 529, 525, 530, 531, 512, 424, 0,
	466, 523, 522, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 218,
	0, 259, 197, 488, 470, 471, 472, 423, 473, 468,
	469, 489, 464, 485, 486, 446, 449, 474, 136, 475,
	487, 490, 491, 532, 533, 534, 478, 492, 484, 483,
	476, 465, 493, 494, 450, 448, 479, 480, 467, 0,
	0, 495, 496, 285, 459, 316, 317, 318, 302, 0,
	189, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 192, 1190, 0, 217, 0, 0, 0, 451, 0,
	0, 277, 231, 0, 0, 0, 0, 506, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 444, 482, 481, 432, 441, 0, 0, 173,
	433, 0, 440, 434, 438, 437, 435, 436, 0, 498,
	0, 0, 0, 0, 0, 0, 405, 418, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 0, 0, 0, 0, 460, 0, 417,
	0, 0, 462, 0, 442, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 439, 458, 463, 185, 520, 456, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 521, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 308, 0, 0, 504, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 457, 0, 267,
	249, 517, 406, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 502, 245, 0, 516,
	497, 499, 500, 503, 507, 508, 509, 510, 511, 513,
	515, 519, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 333, 0,
	0, 0, 162, 332, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 461, 235, 236, 237, 238, 505, 0, 178, 331,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 198, 204, 0, 206, 177, 250,
	200, 310, 213, 0, 242, 209, 275, 214, 220, 263,
	309, 248, 268, 175, 300, 276, 224, 0, 0, 527,
	501, 526, 528, 529, 525, 530, 531, 512, 424, 0,
	466, 523, 522, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 218,
	0, 259, 197, 488, 470, 471, 472, 423, 473, 468,
	469, 489, 464, 485, 486, 446, 449, 474, 136, 475,
	487, 490, 491, 532, 533, 534, 478, 492, 484, 483,
	476, 465, 493, 494, 450, 448, 479, 480, 467, 0,
	0, 495, 496, 285, 459, 316, 317, 318, 302, 0,
	189, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 451, 0,
	0, 277, 231, 0, 0, 0, 0, 506, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	0, 0, 444, 482, 481, 432, 441, 0, 0, 173,
	433, 0, 440, 434, 438, 437, 435, 436, 0, 498,
	0, 0, 0, 0, 0, 0, 405, 418, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 971, 0, 0, 0, 460, 0, 417,
	0, 0, 462, 0, 442, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 439, 458, 463, 185, 520, 456, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 521, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 308, 0, 0, 504, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 457, 0, 267,
	249, 517, 406, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 502, 245, 0, 516,
	497, 499, 500, 503, 507, 508, 509, 510, 511, 513,
	515, 519, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 333, 0,
	0, 0, 162, 332, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 461, 235, 236, 237, 238, 505, 0, 178, 331,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 198, 204, 0, 206, 177, 250,
	200, 310, 213, 0, 242, 209, 275, 214, 220, 263,
	309, 248, 268, 175, 300, 276, 224, 0, 0, 527,
	501, 526, 528, 529, 525, 530, 531, 512, 424, 0,
	466, 523, 522, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 218,
	0, 259, 197, 488, 470, 471, 472, 423, 473, 468,
	469, 489, 464, 485, 486, 446, 449, 474, 136, 475,
	487, 490, 491, 532, 533, 534, 478, 492, 484, 483,
	476, 465, 493, 494, 450, 448, 479, 480, 467, 0,
	0, 495, 496, 0, 0, 316, 317, 318, 302, 0,
	189, 285, 459, 0, 0, 1555, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 451, 0, 0, 277,
	231, 0, 0, 0, 0, 506, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	444, 482, 481, 432, 441, 0, 0, 173, 433, 0,
	440, 434, 438, 437, 435, 436, 0, 498, 0, 0,
	0, 0, 0, 0, 405, 418, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 0, 0, 0, 0, 460, 0, 417, 0, 0,
	462, 0, 442, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 439, 458, 463, 185, 520, 456, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 521, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 308, 0, 0, 504, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 457, 0, 267, 249, 517,
	406, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 502, 245, 0, 516, 497, 499,
	500, 503, 507, 508, 509, 510, 511, 513, 515, 519,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 461,
	235, 236, 237, 238, 505, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 527, 501, 526,
	528, 529, 525, 530, 531, 512, 424, 0, 466, 523,
	522, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 488, 470, 471, 472, 423, 473, 468, 469, 489,
	464, 485, 486, 446, 449, 474, 136, 475, 487, 490,
	491, 532, 533, 534, 478, 492, 484, 483, 476, 465,
	493, 494, 450, 448, 479, 480, 467, 0, 0, 495,
	496, 285, 459, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 451, 0, 0, 277,
	231, 0, 0, 0, 0, 506, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	444, 482, 481, 432, 441, 0, 0, 173, 433, 0,
	440, 434, 438, 437, 435, 436, 0, 498, 0, 0,
	0, 0, 0, 0, 405, 418, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 0, 0, 0, 0, 460, 0, 417, 0, 0,
	462, 0, 442, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 439, 458, 463, 185, 520, 456, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 521, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 308, 0, 0, 504, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 457, 0, 267, 249, 517,
	406, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 502, 245, 0, 516, 497, 499,
	500, 503, 507, 508, 509, 510, 511, 513, 515, 519,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 461,
	235, 236, 237, 238, 505, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 527, 501, 526,
	528, 529, 525, 530, 531, 512, 424, 0, 466, 523,
	522, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 488, 470, 471, 472, 423, 473, 468, 469, 489,
	464, 485, 486, 446, 449, 474, 136, 475, 487, 490,
	491, 532, 533, 534, 478, 492, 484, 483, 476, 465,
	493, 494, 450, 448, 479, 480, 467, 0, 0, 495,
	496, 285, 459, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 0, 0, 0, 421, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 451, 0, 0, 277,
	231, 0, 0, 0, 0, 506, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	444, 482, 481, 432, 441, 0, 0, 173, 433, 0,
	440, 434, 438, 437, 435, 436, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 0, 0, 0, 0, 460, 0, 417, 0, 0,
	462, 0, 442, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 439, 458, 463, 185, 520, 456, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 521, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 308, 0, 0, 504, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 457, 0, 267, 249, 517,
	0, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 1053, 1054, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 502, 245, 0, 516, 497, 499,
	500, 503, 507, 508, 509, 510, 511, 513, 515, 519,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 461,
	235, 236, 237, 238, 505, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 527, 501, 526,
	528, 529, 525, 530, 531, 512, 424, 0, 466, 523,
	522, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 488, 470, 471, 472, 423, 473, 468, 469, 489,
	464, 485, 486, 446, 449, 474, 136, 475, 487, 490,
	491, 532, 533, 534, 478, 492, 484, 483, 476, 465,
	493, 494, 450, 448, 479, 480, 467, 0, 0, 495,
	496, 285, 459, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 451, 0, 0, 277,
	231, 0, 0, 0, 0, 506, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 482, 481, 432, 441, 0, 0, 173, 433, 0,
	440, 434, 438, 437, 435, 436, 0, 498, 0, 0,
	0, 0, 0, 0, 405, 418, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 0, 0, 0, 0, 460, 0, 417, 0, 0,
	462, 0, 442, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 439, 458, 463, 185, 520, 456, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 521, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 308, 0, 0, 504, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 457, 0, 267, 249, 517,
	406, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 502, 245, 0, 516, 497, 499,
	500, 503, 507, 508, 509, 510, 511, 513, 515, 519,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 461,
	235, 236, 237, 238, 505, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 527, 501, 526,
	528, 529, 525, 530, 531, 512, 424, 0, 466, 523,
	522, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 488, 470, 471, 472, 423, 473, 468, 469, 489,
	464, 485, 486, 446, 449, 474, 136, 475, 487, 490,
	491, 532, 533, 534, 478, 492, 484, 483, 476, 465,
	493, 494, 450, 448, 479, 480, 467, 0, 0, 495,
	496, 285, 459, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 451, 0, 0, 277,
	231, 0, 0, 0, 0, 506, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	444, 482, 481, 432, 441, 0, 0, 173, 433, 0,
	440, 434, 438, 437, 435, 436, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 0, 0, 0, 0, 460, 0, 417, 0, 0,
	462, 0, 442, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 439, 458, 463, 185, 520, 456, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 521, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 308, 0, 0, 504, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 457, 0, 267, 249, 517,
	0, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 502, 245, 0, 516, 497, 499,
	500, 503, 507, 508, 509, 510, 511, 513, 515, 519,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 461,
	235, 236, 237, 238, 505, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 527, 501, 526,
	528, 529, 525, 530, 531, 512, 424, 0, 466, 523,
	522, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 488, 470, 471, 472, 423, 473, 468, 469, 489,
	464, 485, 486, 446, 449, 474, 136, 475, 487, 490,
	491, 532, 533, 534, 478, 492, 484, 483, 476, 465,
	493, 494, 450, 448, 479, 480, 467, 0, 0, 495,
	496, 0, 0, 316, 317, 318, 302, 0, 189, 112,
	285, 33, 102, 84, 0, 0, 0, 0, 0, 0,
	0, 247, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 277, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 282, 298, 174, 273, 311,
	179, 280, 170, 246, 269, 0, 0, 167, 296, 279,
	228, 211, 212, 166, 0, 264, 190, 203, 186, 244,
	0, 295, 323, 185, 314, 0, 306, 169, 0, 305,
	243, 292, 297, 229, 223, 168, 294, 227, 222, 215,
	194, 0, 207, 255, 221, 256, 208, 233, 232, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	216, 0, 0, 0, 324, 0, 267, 249, 0, 0,
	0, 265, 219, 293, 257, 299, 283, 307, 261, 258,
	160, 284, 188, 230, 171, 172, 184, 191, 193, 195,
	196, 239, 240, 252, 272, 286, 287, 288, 187, 180,
	266, 181, 205, 182, 161, 274, 183, 163, 253, 291,
	0, 201, 262, 226, 164, 225, 254, 290, 289, 315,
	321, 322, 326, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 320,
	199, 158, 303, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 319, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 210, 251, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 301, 313, 330, 333, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 328, 235,
	236, 237, 238, 344, 346, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	0, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 34, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 218, 85, 259, 197,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 0, 285, 0, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 277, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 1960, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 0, 295, 323,
	185, 314, 0, 306, 169, 0, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 0, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 308, 0, 0,
	0, 1957, 0, 1956, 281, 1958, 1961, 216, 0, 0,
	0, 324, 0, 267, 249, 0, 0, 0, 265, 219,
	293, 257, 299, 283, 307, 261, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 1962, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 319, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 333, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 0, 285, 0, 0, 0, 0, 316,
	317, 318, 302, 0, 189, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 0,
	0, 0, 192, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 277, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 1301, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 724, 725, 726, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 282,
	298, 174, 273, 311, 179, 280, 170, 246, 269, 0,
	0, 167, 296, 279, 228, 211, 212, 166, 0, 264,
	190, 203, 186, 244, 0, 295, 323, 185, 314, 0,
	306, 169, 0, 305, 243, 292, 297, 229, 223, 168,
	294, 227, 222, 215, 194, 0, 207, 255, 221, 256,
	208, 233, 232, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 216, 0, 0, 0, 324, 0,
	267, 249, 0, 0, 0, 265, 219, 293, 257, 299,
	283, 307, 261, 258, 160, 284, 188, 230, 171, 172,
	184, 191, 193, 195, 196, 239, 240, 252, 272, 286,
	287, 288, 187, 180, 266, 181, 205, 182, 161, 274,
	183, 163, 253, 291, 0, 201, 262, 226, 164, 225,
	254, 290, 289, 315, 321, 322, 326, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 320, 199, 158, 303, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 319, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 210,
	251, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 301, 313, 330, 333,
	0, 0, 0, 162, 332, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 328, 235, 236, 237, 238, 202, 0, 178,
	331, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 198, 204, 0, 206, 177,
	250, 200, 310, 213, 0, 242, 209, 275, 214, 220,
	263, 309, 248, 268, 175, 300, 276, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	218, 0, 259, 197, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	0, 285, 0, 0, 0, 0, 316, 317, 318, 302,
	0, 189, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	613, 0, 217, 0, 0, 0, 0, 0, 0, 277,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 621, 622, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 0, 295, 323, 185, 314, 599, 306, 169, 598,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 0, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 324, 0, 267, 249, 0,
	0, 0, 265, 219, 293, 257, 299, 283, 307, 611,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 319, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 612, 304,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 615,
	235, 236, 237, 238, 202, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 623, 618, 619, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 112, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 333, 0, 0, 0, 162, 332, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 328, 235, 236, 237,
	238, 202, 0, 178, 331, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 198,
	204, 0, 206, 177, 250, 200, 310, 213, 0, 242,
	209, 275, 214, 220, 263, 309, 248, 268, 175, 300,
	276, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 218, 85, 259, 197, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 112, 285, 1255, 1256, 0, 0,
	316, 317, 318, 302, 0, 189, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 277, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 1320, 0, 118, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	282, 298, 174, 273, 311, 179, 280, 170, 246, 269,
	0, 0, 167, 296, 279, 228, 211, 212, 166, 0,
	264, 190, 203, 186, 244, 0, 295, 323, 185, 314,
	0, 306, 169, 0, 305, 243, 292, 297, 229, 223,
	168, 294, 227, 222, 215, 194, 0, 207, 255, 221,
	256, 208, 233, 232, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 216, 0, 0, 0, 324,
	0, 267, 249, 0, 0, 0, 265, 219, 293, 257,
	299, 283, 307, 261, 258, 160, 284, 188, 230, 171,
	172, 184, 191, 193, 195, 196, 239, 240, 252, 272,
	286, 287, 288, 187, 180, 266, 181, 205, 182, 161,
	274, 183, 163, 253, 291, 0, 201, 262, 226, 164,
	225, 254, 290, 289, 315, 321, 322, 326, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 320, 199, 158, 303, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 319,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	210, 251, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 301, 313, 330,
	333, 0, 0, 0, 162, 332, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 328, 235, 236, 237, 238, 202, 0,
	178, 331, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 198, 204, 0, 206,
	177, 250, 200, 310, 213, 0, 242, 209, 275, 214,
	220, 263, 309, 248, 268, 175, 300, 276, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 218, 85, 259, 197, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 112, 285, 0, 0, 0, 0, 316, 317, 318,
	302, 0, 189, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	277, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 1311,
	0, 118, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 282, 298, 174,
	273, 311, 179, 280, 170, 246, 269, 0, 0, 167,
	296, 279, 228, 211, 212, 166, 0, 264, 190, 203,
	186, 244, 0, 295, 323, 185, 314, 0, 306, 169,
	0, 305, 243, 292, 297, 229, 223, 168, 294, 227,
	222, 215, 194, 0, 207, 255, 221, 256, 208, 233,
	232, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 216, 0, 0, 0, 324, 0, 267, 249,
	0, 0, 0, 265, 219, 293, 257, 299, 283, 307,
	261, 258, 160, 284, 188, 230, 171, 172, 184, 191,
	193, 195, 196, 239, 240, 252, 272, 286, 287, 288,
	187, 180, 266, 181, 205, 182, 161, 274, 183, 163,
	253, 291, 0, 201, 262, 226, 164, 225, 254, 290,
	289, 315, 321, 322, 326, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 320, 199, 158, 303, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 319, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 210, 251, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 301, 313, 330, 333, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 85,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 0, 285,
	0, 0, 0, 0, 316, 317, 318, 302, 0, 189,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 277, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 621,
	622, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 282, 298, 174, 273, 311, 179,
	280, 170, 246, 269, 0, 0, 167, 296, 279, 228,
	211, 212, 166, 0, 264, 190, 203, 186, 244, 0,
	295, 323, 185, 314, 599, 306, 169, 598, 305, 243,
	292, 297, 229, 223, 168, 294, 227, 222, 215, 194,
	0, 207, 255, 221, 256, 208, 233, 232, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 216,
	0, 0, 0, 324, 0, 267, 249, 0, 0, 0,
	265, 219, 293, 257, 299, 283, 307, 261, 258, 160,
	284, 188, 230, 171, 172, 184, 191, 193, 195, 196,
	239, 240, 252, 272, 286, 287, 288, 187, 180, 266,
	181, 205, 182, 161, 274, 183, 163, 253, 291, 0,
	201, 262, 226, 164, 225, 254, 290, 289, 315, 321,
	322, 326, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 320, 199,
	158, 303, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 319, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 210, 251, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 301, 313, 330, 333, 0, 0, 0, 162, 332,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 328, 235, 236,
	237, 238, 202, 0, 178, 331, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	198, 204, 0, 206, 177, 250, 200, 310, 213, 0,
	623, 618, 619, 214, 220, 263, 309, 248, 268, 175,
	300, 276, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 218, 0, 259, 197, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 0, 285, 0, 0, 0,
	0, 316, 317, 318, 302, 0, 189, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 277, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1252, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 282, 298, 174, 273, 311, 179, 280, 170, 246,
	269, 0, 0, 167, 296, 279, 228, 211, 212, 166,
	0, 264, 190, 203, 186, 244, 0, 295, 323, 185,
	314, 0, 306, 169, 0, 305, 243, 292, 297, 229,
	223, 168, 294, 227, 222, 215, 194, 0, 207, 255,
	221, 256, 208, 233, 232, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 216, 0, 0, 0,
	324, 0, 267, 249, 0, 0, 0, 265, 219, 293,
	257, 299, 283, 307, 261, 258, 160, 284, 188, 230,
	171, 172, 184, 191, 193, 195, 196, 239, 240, 252,
	272, 286, 287, 288, 187, 180, 266, 181, 205, 182,
	161, 274, 183, 163, 253, 291, 0, 201, 262, 226,
	164, 225, 254, 290, 289, 315, 321, 322, 326, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 320, 199, 158, 303, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	319, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 210, 251, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 301, 313,
	330, 333, 0, 0, 0, 162, 332, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 328, 235, 236, 237, 238, 202,
	0, 178, 331, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 198, 204, 0,
	206, 177, 250, 200, 310, 213, 0, 242, 209, 275,
	214, 220, 263, 309, 248, 268, 175, 300, 276, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 218, 0, 259, 197, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 0, 285, 1255, 1256, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 955, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 953, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 951, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 333, 0,
	0, 0, 162, 332, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 328, 235, 236, 237, 238, 202, 0, 178, 331,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 198, 204, 0, 206, 177, 250,
	200, 310, 213, 0, 242, 209, 275, 214, 220, 263,
	309, 248, 268, 175, 300, 276, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 218,
	0, 259, 197, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 0,
	285, 0, 0, 0, 0, 316, 317, 318, 302, 0,
	189, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 949,
	0, 217, 0, 0, 0, 0, 0, 0, 277, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 0, 953, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 951,
	0, 0, 0, 0, 165, 282, 298, 174, 273, 311,
	179, 280, 170, 246, 269, 0, 0, 167, 296, 279,
	228, 211, 212, 166, 0, 264, 190, 203, 186, 244,
	0, 295, 323, 185, 314, 0, 306, 169, 0, 305,
	243, 292, 297, 229, 223, 168, 294, 227, 222, 215,
	194, 0, 207, 255, 221, 256, 208, 233, 232, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	216, 0, 0, 0, 324, 0, 267, 249, 0, 0,
	0, 265, 219, 293, 257, 299, 283, 307, 261, 258,
	160, 284, 188, 230, 171, 172, 184, 191, 193, 195,
	196, 239, 240, 252, 272, 286, 287, 288, 187, 180,
	266, 181, 205, 182, 161, 274, 183, 163, 253, 291,
	0, 201, 262, 226, 164, 225, 254, 290, 289, 315,
	321, 322, 326, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 320,
	199, 158, 303, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 319, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 210, 251, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 301, 313, 330, 333, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 328, 235,
	236, 237, 238, 202, 0, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	0, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 218, 0, 259, 197,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 0, 285, 0, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 277, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2418, 0, 118, 482, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 0, 295, 323,
	185, 314, 0, 306, 169, 0, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 0, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 216, 0, 0,
	0, 324, 0, 267, 249, 0, 0, 0, 265, 219,
	293, 257, 299, 283, 307, 261, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 0, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 319, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 333, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 0, 285, 0, 0, 0, 0, 316,
	317, 318, 302, 0, 189, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 277, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 953, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 951, 0, 0, 0, 0, 165, 282,
	298, 174, 273, 311, 179, 280, 170, 246, 269, 0,
	0, 167, 296, 279, 228, 211, 212, 166, 0, 264,
	190, 203, 186, 244, 0, 295, 323, 185, 314, 0,
	306, 169, 0, 305, 243, 292, 297, 229, 223, 168,
	294, 227, 222, 215, 194, 0, 207, 255, 221, 256,
	208, 233, 232, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 216, 0, 0, 0, 324, 0,
	267, 249, 0, 0, 0, 265, 219, 293, 257, 299,
	283, 307, 261, 258, 160, 284, 188, 230, 171, 172,
	184, 191, 193, 195, 196, 239, 240, 252, 272, 286,
	287, 288, 187, 180, 266, 181, 205, 182, 161, 274,
	183, 163, 253, 291, 0, 201, 262, 226, 164, 225,
	254, 290, 289, 315, 321, 322, 326, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 320, 199, 158, 303, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 319, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 210,
	251, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 301, 313, 330, 333,
	0, 0, 0, 162, 332, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 328, 235, 236, 237, 238, 202, 0, 178,
	331, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 198, 204, 0, 206, 177,
	250, 200, 310, 213, 0, 242, 209, 275, 214, 220,
	263, 309, 248, 268, 175, 300, 276, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	218, 0, 259, 197, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	0, 285, 0, 0, 0, 0, 316, 317, 318, 302,
	0, 189, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 277,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 0, 0, 953, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 0, 295, 323, 185, 314, 0, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 0, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 324, 0, 267, 249, 0,
	0, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 319, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 328,
	235, 236, 237, 238, 202, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 0, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 1682, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	953, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 333, 0, 0, 0, 162, 332, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 328, 235, 236, 237,
	238, 202, 0, 178, 331, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 198,
	204, 0, 206, 177, 250, 200, 310, 213, 0, 242,
	209, 275, 214, 220, 263, 309, 248, 268, 175, 300,
	276, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 218, 0, 259, 197, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 0, 285, 0, 0, 0, 0,
	316, 317, 318, 302, 0, 189, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 277, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2522, 0, 118, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	282, 298, 174, 273, 311, 179, 280, 170, 246, 269,
	0, 0, 167, 296, 279, 228, 211, 212, 166, 0,
	264, 190, 203, 186, 244, 0, 295, 323, 185, 314,
	0, 306, 169, 0, 305, 243, 292, 297, 229, 223,
	168, 294, 227, 222, 215, 194, 0, 207, 255, 221,
	256, 208, 233, 232, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 216, 0, 0, 0, 324,
	0, 267, 249, 0, 0, 0, 265, 219, 293, 257,
	299, 283, 307, 261, 258, 160, 284, 188, 230, 171,
	172, 184, 191, 193, 195, 196, 239, 240, 252, 272,
	286, 287, 288, 187, 180, 266, 181, 205, 182, 161,
	274, 183, 163, 253, 291, 0, 201, 262, 226, 164,
	225, 254, 290, 289, 315, 321, 322, 326, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 320, 199, 158, 303, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 319,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	210, 251, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 301, 313, 330,
	333, 0, 0, 0, 162, 332, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 328, 235, 236, 237, 238, 202, 0,
	178, 331, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 198, 204, 0, 206,
	177, 250, 200, 310, 213, 0, 242, 209, 275, 214,
	220, 263, 309, 248, 268, 175, 300, 276, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 218, 0, 259, 197, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 0, 285, 0, 0, 0, 0, 316, 317, 318,
	302, 0, 189, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	277, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 482, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 282, 298, 174,
	273, 311, 179, 280, 170, 246, 269, 0, 0, 167,
	296, 279, 228, 211, 212, 166, 0, 264, 190, 203,
	186, 244, 0, 295, 323, 185, 314, 0, 306, 169,
	0, 305, 243, 292, 297, 229, 223, 168, 294, 227,
	222, 215, 194, 0, 207, 255, 221, 256, 208, 233,
	232, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 216, 0, 0, 0, 324, 0, 267, 249,
	0, 0, 0, 265, 219, 293, 257, 299, 283, 307,
	261, 258, 160, 284, 188, 230, 171, 172, 184, 191,
	193, 195, 196, 239, 240, 252, 272, 286, 287, 288,
	187, 180, 266, 181, 205, 182, 161, 274, 183, 163,
	253, 291, 0, 201, 262, 226, 164, 225, 254, 290,
	289, 315, 321, 322, 326, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 320, 199, 158, 303, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 319, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 210, 251, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 301, 313, 330, 333, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 0, 285,
	0, 0, 0, 0, 316, 317, 318, 302, 0, 189,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 277, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2189, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 282, 298, 174, 273, 311, 179,
	280, 170, 246, 269, 0, 0, 167, 296, 279, 228,
	211, 212, 166, 0, 264, 190, 203, 186, 244, 0,
	295, 323, 185, 314, 0, 306, 169, 0, 305, 243,
	292, 297, 229, 223, 168, 294, 227, 222, 215, 194,
	0, 207, 255, 221, 256, 208, 233, 232, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 216,
	0, 0, 0, 324, 0, 267, 249, 0, 0, 0,
	265, 219, 293, 257, 299, 283, 307, 261, 258, 160,
	284, 188, 230, 171, 172, 184, 191, 193, 195, 196,
	239, 240, 252, 272, 286, 287, 288, 187, 180, 266,
	181, 205, 182, 161, 274, 183, 163, 253, 291, 0,
	201, 262, 226, 164, 225, 254, 290, 289, 315, 321,
	322, 326, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 320, 199,
	158, 303, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 319, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 210, 251, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 301, 313, 330, 333, 0, 0, 0, 162, 332,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 328, 235, 236,
	237, 238, 202, 0, 178, 331, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	198, 204, 0, 206, 177, 250, 200, 310, 213, 0,
	242, 209, 275, 214, 220, 263, 309, 248, 268, 175,
	300, 276, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 218, 0, 259, 197, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 0, 285, 0, 0, 0,
	0, 316, 317, 318, 302, 0, 189, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 277, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 282, 298, 174, 273, 311, 179, 280, 170, 246,
	269, 0, 0, 167, 296, 279, 228, 211, 212, 166,
	0, 264, 190, 203, 186, 244, 0, 295, 323, 185,
	314, 0, 306, 169, 0, 305, 243, 292, 297, 229,
	223, 168, 294, 227, 222, 215, 194, 0, 207, 255,
	221, 256, 208, 233, 232, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	2366, 0, 0, 281, 0, 0, 216, 0, 0, 0,
	324, 0, 267, 249, 0, 0, 0, 265, 219, 293,
	257, 299, 283, 307, 261, 258, 160, 284, 188, 230,
	171, 172, 184, 191, 193, 195, 196, 239, 240, 252,
	272, 286, 287, 288, 187, 180, 266, 181, 205, 182,
	161, 274, 183, 163, 253, 291, 0, 201, 262, 226,
	164, 225, 254, 290, 289, 315, 321, 322, 326, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 320, 199, 158, 303, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	319, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 210, 251, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 301, 313,
	330, 333, 0, 0, 0, 162, 332, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 328, 235, 236, 237, 238, 202,
	0, 178, 331, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 198, 204, 0,
	206, 177, 250, 200, 310, 213, 0, 242, 209, 275,
	214, 220, 263, 309, 248, 268, 175, 300, 276, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 218, 0, 259, 197, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 0, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 2198, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 333, 0,
	0, 0, 162, 332, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 328, 235, 236, 237, 238, 202, 0, 178, 331,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 198, 204, 0, 206, 177, 250,
	200, 310, 213, 0, 242, 209, 275, 214, 220, 263,
	309, 248, 268, 175, 300, 276, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 218,
	0, 259, 197, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 0,
	285, 0, 0, 0, 0, 316, 317, 318, 302, 0,
	189, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 277, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 282, 298, 174, 273, 311,
	179, 280, 170, 246, 269, 0, 0, 167, 296, 279,
	228, 211, 212, 166, 0, 264, 190, 203, 186, 244,
	0, 295, 323, 185, 314, 0, 306, 169, 0, 305,
	243, 292, 297, 229, 223, 168, 294, 227, 222, 215,
	194, 0, 207, 255, 221, 256, 208, 233, 232, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	216, 0, 0, 0, 324, 0, 267, 249, 0, 0,
	0, 265, 219, 293, 257, 299, 283, 307, 261, 258,
	160, 284, 188, 230, 171, 172, 184, 191, 193, 195,
	196, 239, 240, 252, 272, 286, 287, 288, 187, 180,
	266, 181, 205, 182, 161, 274, 183, 163, 253, 291,
	0, 201, 262, 226, 164, 225, 254, 290, 289, 315,
	321, 322, 326, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 320,
	199, 158, 303, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 319, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 210, 251, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 301, 313, 330, 333, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 328, 235,
	236, 237, 238, 202, 0, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	0, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 218, 0, 259, 197,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 0, 285, 0, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 277, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 0, 295, 323,
	185, 314, 0, 306, 169, 0, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 0, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 216, 0, 0,
	0, 324, 0, 267, 249, 0, 0, 0, 265, 219,
	293, 257, 299, 283, 307, 261, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 0, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 319, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 333, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 0, 285, 0, 0, 0, 0, 316,
	317, 318, 302, 0, 189, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 277, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 1968, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 282,
	298, 174, 273, 311, 179, 280, 170, 246, 269, 0,
	0, 167, 296, 279, 228, 211, 212, 166, 0, 264,
	190, 203, 186, 244, 0, 295, 323, 185, 314, 0,
	306, 169, 0, 305, 243, 292, 297, 229, 223, 168,
	294, 227, 222, 215, 194, 0, 207, 255, 221, 256,
	208, 233, 232, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 216, 0, 0, 0, 324, 0,
	267, 249, 0, 0, 0, 265, 219, 293, 257, 299,
	283, 307, 261, 258, 160, 284, 188, 230, 171, 172,
	184, 191, 193, 195, 196, 239, 240, 252, 272, 286,
	287, 288, 187, 180, 266, 181, 205, 182, 161, 274,
	183, 163, 253, 291, 0, 201, 262, 226, 164, 225,
	254, 290, 289, 315, 321, 322, 326, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 320, 199, 158, 303, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 319, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 210,
	251, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 301, 313, 330, 333,
	0, 0, 0, 162, 332, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 328, 235, 236, 237, 238, 202, 0, 178,
	331, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 198, 204, 0, 206, 177,
	250, 200, 310, 213, 0, 242, 209, 275, 214, 220,
	263, 309, 248, 268, 175, 300, 276, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	218, 0, 259, 197, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	0, 285, 0, 0, 0, 0, 316, 317, 318, 302,
	0, 189, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 277,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 0, 0, 953, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 0, 295, 323, 185, 314, 0, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 0, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 324, 0, 267, 249, 0,
	0, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 319, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 328,
	235, 236, 237, 238, 202, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 0, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 333, 0, 0, 0, 162, 332, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 328, 235, 236, 237,
	238, 202, 0, 178, 331, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 198,
	204, 0, 206, 177, 250, 200, 310, 213, 0, 242,
	209, 275, 214, 220, 263, 309, 248, 268, 175, 300,
	276, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 218, 0, 259, 197, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 0, 285, 0, 0, 0, 0,
	316, 317, 318, 302, 0, 189, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 277, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 118, 0, 0, 1690, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	282, 298, 174, 273, 311, 179, 280, 170, 246, 269,
	0, 0, 167, 296, 279, 228, 211, 212, 166, 0,
	264, 190, 203, 186, 244, 0, 295, 323, 185, 314,
	0, 306, 169, 0, 305, 243, 292, 297, 229, 223,
	168, 294, 227, 222, 215, 194, 0, 207, 255, 221,
	256, 208, 233, 232, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 281, 0, 0, 216, 0, 0, 0, 324,
	0, 267, 249, 0, 0, 0, 265, 219, 293, 257,
	299, 283, 307, 261, 258, 160, 284, 188, 230, 171,
	172, 184, 191, 193, 195, 196, 239, 240, 252, 272,
	286, 287, 288, 187, 180, 266, 181, 205, 182, 161,
	274, 183, 163, 253, 291, 0, 201, 262, 226, 164,
	225, 254, 290, 289, 315, 321, 322, 326, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 320, 199, 158, 303, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 319,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	210, 251, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 301, 313, 330,
	333, 0, 0, 0, 162, 332, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 328, 235, 236, 237, 238, 202, 0,
	178, 331, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 198, 204, 0, 206,
	177, 250, 200, 310, 213, 0, 242, 209, 275, 214,
	220, 263, 309, 248, 268, 175, 300, 276, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 218, 0, 259, 197, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 0, 285, 0, 0, 0, 1620, 316, 317, 318,
	302, 0, 189, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	277, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 282, 298, 174,
	273, 311, 179, 280, 170, 246, 269, 0, 0, 167,
	296, 279, 228, 211, 212, 166, 0, 264, 190, 203,
	186, 244, 0, 295, 323, 185, 314, 0, 306, 169,
	0, 305, 243, 292, 297, 229, 223, 168, 294, 227,
	222, 215, 194, 0, 207, 255, 221, 256, 208, 233,
	232, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 216, 0, 0, 0, 324, 0, 267, 249,
	0, 0, 0, 265, 219, 293, 257, 299, 283, 307,
	261, 258, 160, 284, 188, 230, 171, 172, 184, 191,
	193, 195, 196, 239, 240, 252, 272, 286, 287, 288,
	187, 180, 266, 181, 205, 182, 161, 274, 183, 163,
	253, 291, 0, 201, 262, 226, 164, 225, 254, 290,
	289, 315, 321, 322, 326, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 320, 199, 158, 303, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 319, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 210, 251, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 301, 313, 330, 333, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 0, 285,
	0, 0, 0, 0, 316, 317, 318, 302, 0, 189,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 277, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 282, 298, 174, 273, 311, 179,
	280, 170, 246, 269, 0, 0, 167, 296, 279, 228,
	211, 212, 166, 0, 264, 190, 203, 186, 244, 0,
	295, 323, 185, 314, 0, 306, 169, 0, 305, 243,
	292, 297, 229, 223, 168, 294, 227, 222, 215, 194,
	0, 207, 255, 221, 256, 208, 233, 232, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 1603, 0, 0, 0, 281, 0, 0, 216,
	0, 0, 0, 324, 0, 267, 249, 0, 0, 0,
	265, 219, 293, 257, 299, 283, 307, 261, 258, 160,
	284, 188, 230, 171, 172, 184, 191, 193, 195, 196,
	239, 240, 252, 272, 286, 287, 288, 187, 180, 266,
	181, 205, 182, 161, 274, 183, 163, 253, 291, 0,
	201, 262, 226, 164, 225, 254, 290, 289, 315, 321,
	322, 326, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 320, 199,
	158, 303, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 319, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 210, 251, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 301, 313, 330, 333, 0, 0, 0, 162, 332,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 328, 235, 236,
	237, 238, 202, 0, 178, 331, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	198, 204, 0, 206, 177, 250, 200, 310, 213, 0,
	242, 209, 275, 214, 220, 263, 309, 248, 268, 175,
	300, 276, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 218, 0, 259, 197, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 0, 285, 0, 0, 0,
	0, 316, 317, 318, 302, 0, 189, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 277, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 282, 298, 174, 273, 311, 179, 280, 170, 246,
	269, 0, 0, 167, 296, 279, 228, 211, 212, 166,
	0, 264, 190, 203, 186, 244, 0, 295, 323, 185,
	314, 0, 306, 169, 0, 305, 243, 292, 297, 229,
	223, 168, 294, 227, 222, 215, 194, 0, 207, 255,
	221, 256, 208, 233, 232, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 216, 0, 0, 0,
	324, 0, 267, 249, 0, 0, 0, 265, 219, 293,
	257, 299, 283, 307, 261, 258, 160, 284, 188, 230,
	171, 172, 184, 191, 193, 195, 196, 239, 240, 252,
	272, 286, 287, 288, 187, 180, 266, 181, 205, 182,
	161, 274, 183, 163, 253, 291, 0, 201, 262, 226,
	164, 225, 254, 290, 289, 315, 321, 322, 326, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 320, 199, 158, 303, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	319, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 210, 251, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 301, 313,
	330, 333, 0, 0, 0, 162, 332, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 328, 235, 236, 237, 238, 202,
	0, 178, 331, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 198, 204, 0,
	206, 177, 250, 200, 310, 213, 0, 242, 209, 275,
	214, 220, 263, 309, 248, 268, 175, 300, 276, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 0, 0, 0,
	159, 0, 218, 0, 259, 197, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 0, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 361, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 333, 0,
	0, 0, 162, 332, 0, 0, 0, 0, 0, 0,
	362, 304, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 328, 235, 236, 237, 238, 202, 0, 178, 331,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 198, 204, 0, 206, 177, 250,
	200, 310, 213, 0, 242, 209, 275, 214, 220, 263,
	309, 248, 268, 175, 300, 276, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 218,
	0, 259, 197, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 0,
	285, 0, 0, 0, 0, 316, 317, 318, 302, 0,
	189, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 277, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 282, 298, 174, 273, 311,
	179, 280, 170, 246, 269, 0, 0, 167, 296, 279,
	228, 211, 212, 166, 0, 264, 190, 203, 186, 244,
	0, 295, 323, 185, 314, 0, 306, 169, 0, 305,
	243, 292, 297, 229, 223, 168, 294, 227, 222, 215,
	194, 0, 207, 255, 221, 256, 208, 233, 232, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	308, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	216, 0, 0, 0, 324, 0, 267, 249, 0, 0,
	0, 265, 219, 293, 257, 299, 283, 307, 261, 258,
	160, 284, 188, 230, 171, 172, 184, 191, 193, 195,
	196, 239, 240, 252, 272, 286, 287, 288, 187, 180,
	266, 181, 205, 182, 161, 274, 183, 163, 253, 291,
	0, 201, 262, 226, 164, 225, 254, 290, 289, 315,
	321, 322, 326, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 320,
	199, 158, 303, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 319, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 210, 251, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 301, 313, 330, 333, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 328, 235,
	236, 237, 238, 202, 0, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	0, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 218, 0, 259, 197,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 0, 285, 0, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 192, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 277, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 0, 295, 323,
	185, 314, 0, 306, 169, 0, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 0, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 216, 0, 0,
	0, 324, 0, 267, 249, 0, 0, 0, 265, 219,
	293, 257, 299, 283, 307, 261, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 0, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 319, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 333, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 0, 285, 0, 0, 0, 0, 316,
	317, 318, 302, 0, 189, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 277, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 282,
	298, 174, 273, 311, 179, 280, 170, 246, 269, 0,
	0, 167, 296, 279, 228, 211, 212, 166, 0, 264,
	190, 203, 186, 244, 0, 295, 323, 185, 314, 0,
	306, 169, 0, 305, 243, 292, 297, 229, 223, 168,
	294, 227, 222, 215, 194, 0, 207, 255, 221, 256,
	208, 233, 232, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 281, 0, 0, 216, 0, 0, 0, 324, 0,
	267, 249, 0, 0, 0, 265, 219, 293, 257, 299,
	283, 307, 261, 258, 160, 284, 188, 230, 171, 172,
	184, 191, 193, 195, 196, 239, 240, 252, 272, 286,
	287, 288, 187, 180, 266, 181, 205, 182, 161, 274,
	183, 163, 253, 291, 0, 201, 262, 226, 164, 225,
	254, 290, 289, 315, 321, 322, 326, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 320, 199, 158, 303, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 319, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 210,
	251, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 301, 313, 330, 333,
	0, 0, 0, 162, 332, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 328, 235, 236, 237, 238, 202, 0, 178,
	331, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 198, 204, 0, 206, 177,
	250, 200, 310, 213, 0, 242, 209, 275, 214, 220,
	263, 309, 248, 268, 175, 300, 276, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	218, 0, 259, 197, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	0, 285, 0, 0, 0, 0, 316, 317, 318, 302,
	0, 189, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 277,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 1208, 1209, 1662, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 0, 295, 323, 185, 314, 0, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 0, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 324, 0, 267, 249, 0,
	0, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 319, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 333, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 328,
	235, 236, 237, 238, 202, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 247, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 0, 192, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 277, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	1208, 1209, 1662, 0, 0, 159, 173, 218, 0, 259,
	197, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 0, 0, 165, 282, 298, 174, 273, 311,
	179, 280, 170, 246, 269, 0, 0, 167, 296, 279,
	228, 211, 212, 166, 0, 264, 190, 203, 186, 244,
	0, 295, 323, 185, 314, 0, 306, 169, 0, 305,
	243, 292, 297, 229, 223, 168, 294, 227, 222, 215,
	194, 0, 207, 255, 221, 256, 208, 233, 232, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 0, 0, 0, 281, 0, 0,
	216, 0, 0, 0, 324, 0, 267, 249, 0, 0,
	0, 265, 219, 293, 257, 299, 283, 307, 261, 258,
	160, 284, 188, 230, 171, 172, 184, 191, 193, 195,
	196, 239, 240, 252, 272, 286, 287, 288, 187, 180,
	266, 181, 205, 182, 161, 274, 183, 163, 253, 291,
	0, 201, 262, 226, 164, 225, 254, 290, 289, 315,
	321, 322, 326, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 320,
	199, 158, 303, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 319, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 210, 251, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 301, 313, 330, 333, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 328, 235,
	236, 237, 238, 202, 0, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	247, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 0, 192, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 277, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1207, 1208,
	1209, 0, 0, 0, 159, 173, 218, 0, 259, 197,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 0, 0,
	0, 0, 0, 165, 282, 298, 174, 273, 311, 179,
	280, 170, 246, 269, 0, 0, 167, 296, 279, 228,
	211, 212, 166, 0, 264, 190, 203, 186, 244, 0,
	295, 323, 185, 314, 0, 306, 169, 0, 305, 243,
	292, 297, 229, 223, 168, 294, 227, 222, 215, 194,
	0, 207, 255, 221, 256, 208, 233, 232, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 216,
	0, 0, 0, 324, 0, 267, 249, 0, 0, 0,
	265, 219, 293, 257, 299, 283, 307, 261, 258, 160,
	284, 188, 230, 171, 172, 184, 191, 193, 195, 196,
	239, 240, 252, 272, 286, 287, 288, 187, 180, 266,
	181, 205, 182, 161, 274, 183, 163, 253, 291, 0,
	201, 262, 226, 164, 225, 254, 290, 289, 315, 321,
	322, 326, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 320, 199,
	158, 303, 112, 245, 33, 102, 84, 0, 0, 0,
	0, 0, 241, 319, 0, 0, 0, 0, 270, 0,
	0, 0, 107, 0, 210, 251, 0, 271, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	278, 301, 313, 330, 333, 0, 0, 0, 162, 332,
	0, 0, 0, 62, 0, 0, 0, 304, 0, 109,
	0, 312, 0, 0, 0, 0, 0, 328, 235, 236,
	237, 238, 202, 0, 178, 331, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 325,
	198, 204, 0, 206, 177, 250, 200, 310, 213, 0,
	242, 209, 275, 214, 220, 263, 309, 248, 268, 175,
	300, 276, 224, 0, 0, 0, 0, 0, 0, 830,
	0, 0, 0, 0, 0, 0, 0, 103, 104, 0,
	105, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 218, 0, 259, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 724, 725, 726, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 101, 110, 0, 60, 0,
	0, 316, 317, 318, 302, 830, 189, 0, 0, 0,
	0, 0, 0, 0, 100, 95, 94, 0, 0, 818,
	0, 39, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 838, 842, 844,
	846, 848, 849, 851, 0, 855, 852, 853, 854, 1107,
	0, 833, 834, 835, 836, 816, 817, 839, 0, 819,
	0, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 831, 837, 0, 0, 0, 0, 0, 97, 98,
	841, 843, 845, 847, 850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 818, 0, 0, 0, 808,
	0, 0, 70, 0, 832, 0, 99, 0, 71, 830,
	0, 0, 0, 838, 842, 844, 846, 848, 849, 851,
	0, 855, 852, 853, 854, 0, 0, 833, 834, 835,
	836, 816, 817, 839, 2145, 819, 0, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 831, 837, 0,
	0, 0, 0, 0, 0, 0, 841, 843, 845, 847,
	850, 72, 0, 0, 0, 0, 0, 0, 1618, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 1103, 0,
	0, 1100, 0, 0, 0, 1102, 1099, 1101, 1105, 1106,
	832, 0, 2145, 1104, 0, 2546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2127, 0, 34, 0, 818,
	0, 0, 0, 0, 2145, 0, 0, 0, 0, 0,
	0, 1737, 1738, 0, 0, 0, 1618, 838, 842, 844,
	846, 848, 849, 851, 0, 855, 852, 853, 854, 0,
	85, 833, 834, 835, 836, 816, 817, 839, 1618, 819,
	0, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 831, 837, 2127, 0, 0, 0, 0, 0, 0,
	841, 843, 845, 847, 850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2127, 0, 0, 0, 0,
	74, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1110, 1111, 1112,
	1113, 1114, 1115, 1108, 1109, 0, 0, 0, 0, 0,
	381, 0, 380, 387, 377, 840, 0, 0, 2131, 0,
	0, 0, 2218, 0, 384, 385, 0, 386, 390, 2135,
	0, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 0, 2124,
	0, 0, 0, 2126, 2128, 2130, 0, 2132, 2133, 2134,
	2136, 2137, 2138, 2140, 2141, 2142, 2143, 0, 0, 0,
	399, 0, 0, 400, 0, 0, 2131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2135, 0, 0,
	0, 0, 0, 0, 0, 0, 2146, 0, 2131, 0,
	0, 840, 0, 0, 0, 0, 0, 2124, 0, 2135,
	0, 2126, 2128, 2130, 0, 2132, 2133, 2134, 2136, 2137,
	2138, 2140, 2141, 2142, 2143, 0, 0, 0, 0, 2124,
	0, 2144, 0, 2126, 2128, 2130, 0, 2132, 2133, 2134,
	2136, 2137, 2138, 2140, 2141, 2142, 2143, 0, 2123, 381,
	0, 380, 387, 377, 2146, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 385, 0, 386, 390, 0, 0,
	372, 0, 0, 0, 0, 0, 2146, 2139, 0, 0,
	395, 0, 0, 0, 2129, 0, 0, 0, 0, 2144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 375, 374, 0, 2123, 0, 0, 399,
	379, 2144, 400, 0, 0, 840, 381, 0, 380, 387,
	377, 0, 383, 0, 0, 0, 0, 0, 2123, 398,
	384, 385, 0, 386, 390, 2139, 376, 372, 0, 0,
	367, 0, 2129, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2139, 0, 0,
	0, 0, 0, 0, 2129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 382, 388, 0, 389, 391,
	0, 0, 392, 393, 394, 0, 0, 396, 397, 0,
	0, 373, 375, 374, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 375,
	374, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 382, 388, 0, 389, 391, 0,
	0, 392, 393, 394, 0, 0, 396, 397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 382, 388, 0, 389, 391, 0, 0, 392, 393,
	394, 0, 0, 396, 397,
}

var yyPact = [...]int{
	25572, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 23546, 23546, -1000, -1000, 1502, -1000, 23059,
	8449, 24033, 126, 24033, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	362, -1000, 22572, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	329, 26110, 207, 197, 6480, 24033, -285, -1000, 2138, -1000,
	-1000, -1000, -1000, 785, 382, 22085, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1077, 48, 382, 495, 501, 569, 569, 9910, 2138, 221,
	114, -1000, 834, 25572, 309, 24033, -1000, 920, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 309, -1000, -1000, -1000, 2138, 2138,
	-1000, 24033, 24033, -42, 1007, -1000, 239, 247, 217, 916,
	-1000, -1000, -1000, -1000, -1000, 2099, -1000, 24033, 1772, 24033,
	-1000, 1302, 251, 26249, 1938, 918, 425, 1797, -1000, -1000,
	1763, -1000, 76, 117, 118, 195, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 72, -1000, 2031, -1000, -1000, 69, -1000,
	-1000, 49, -1000, -1000, -1000, -95, -1000, -1000, -1000, -1000,
	-1000, -167, -167, 546, 1258, 6480, -1000, 1184, -1000, 1751,
	-1000, -1000, -1000, -1000, 4022, 7950, 7950, 7950, 7950, -1000,
	-1000, 1638, 6480, 1756, 1754, -1000, -1000, -1000, -1000, 912,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7460, -1000, 1752, 1750, 1749, 1748, 1746, 1745,
	1735, 1734, 1723, 1721, 1719, 1553, 1711, 1421, 1418, 1709,
	1708, 1706, 7950, 1417, 1553, 1553, 1705, 1704, 1703, 1702,
	1678, 1677, 1675, 1668, 1663, 1662, 1661, 1659, 1655, 1654,
	1651, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 25755, -1000, 909, 895, -1000,
	1650, 1928, 2051, 1585, 2083, 2039, 2023, 2017, 2011, 24,
	328, 328, 328, 346, 328, 359, -1000, -1000, -1000, -1000,
	-1000, -1000, 427, -1000, -1000, -1000, -1000, 686, 24033, -1000,
	1595, 948, 2045, 269, 948, 216, 249, 2051, 2051, -105,
	-112, 948, 948, -112, 56, -1000, -1000, -1000, 1063, 223,
	1063, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2020, 2003,
	329, 329, 333, -1000, -163, -1000, -1000, 461, -1000, 457,
	-1000, 1302, 246, 228, 712, 1034, -1000, 963, 24033, 24033,
	24033, 963, 963, 13319, 12832, -1000, 2051, 1585, -1000, 1521,
	1956, 1585, 329, 329, 329, 329, 329, 329, 329, 24033,
	5492, 5492, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	233, 1647, -1000, 24033, 226, 2051, 1928, 2051, -1000, -1000,
	900, 1236, 1404, -1000, -1000, 239, 950, -1000, 548, -1000,
	-1000, -1000, -1000, 24033, 209, -1000, 1413, 1645, -1000, 317,
	841, 816, -1000, 62, 26316, 19650, 1302, 19650, 24033, -1000,
	-1000, -1000, -1000, -1000, -1000, -97, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -49,
	-1000, -49, 6480, 6480, 6480, 6480, 6480, -1000, 387, 6970,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7950, 7950, 7950,
	7950, 7950, 7950, 7950, 7950, 7950, 7950, 7950, 7950, 1635,
	993, 7950, 7950, 7950, 1956, 1954, 688, -1000, -1000, -1000,
	-1000, -1000, 1017, 1258, 6480, 6480, 24033, 25664, 6480, 6480,
	80, 6480, 1985, 1985, 3033, 24033, 6480, -1000, 1520, 1519,
	-1000, -1000, 1157, 6480, -1000, -1000, 6480, 7950, 6480, -1000,
	-1000, -1000, -1000, 55, 1985, 6480, 6480, 1985, 1985, 1985,
	1024, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 24033, 1911,
	34, -1000, -1000, -1000, 1573, -1000, 1613, 1613, 1573, 1573,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1644,
	1643, -1000, -1000, 1612, 1612, 1612, 1573, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1640, 1640, 1641, 1640, 24033, 2051, -285, 5002,
	-1000, -288, 1928, 6480, -1000, -1000, 6480, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 353, 328, -1000, 24033, 1023,
	19650, 1302, 1299, 24033, 328, 333, -1000, 24033, 686, 1971,
	24033, 2093, 7950, 19650, 1063, 2093, 1063, -1000, -1000, -1000,
	948, 948, -1000, -1000, -1000, -1000, 1063, 1063, -1000, -1000,
	-99, 2093, 2093, -118, 24033, 24033, 328, 24033, -1000, -1000,
	-1000, -1000, 24033, -1000, -1000, 24033, 19650, 12345, -1000, -154,
	488, 428, 458, -1000, -1000, 313, 332, 11858, 262, 19650,
	3523, -1000, -1000, 963, 963, 963, 3523, 3523, 831, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1928, -1000, -1000, -1000,
	-1000, 24033, 19650, 1302, 24033, 24033, 24033, 25278, -1000, 744,
	-1000, -1000, 9423, 894, 744, 1796, -286, -1000, 11371, 24033,
	24033, -1000, -1000, -286, -1000, 10884, 24033, 1928, -1000, 1928,
	2561, -1000, 2043, -1000, 239, 159, -1000, -1000, -1000, -1000,
	-1000, -1000, 888, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 663, -1000, 24033, -1000, -1000, 62, 19650, 965,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 107, -1000, -1000,
	138, -1000, 351, -19, 946, -1000, -1000, 33, 133, 33,
	1258, -1000, 1029, 1029, 1030, -1000, 399, -1000, -1000, -1000,
	-1000, 1638, -1000, -1000, -1000, 1048, 1431, -1000, 1094, 1094,
	872, 872, 872, 872, 872, 1148, 1148, -1000, -1000, -1000,
	4022, 1635, 7950, 7950, 7950, 315, 2276, 2412, -1000, 6480,
	1016, -1000, 6480, 1117, 811, 887, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1518, 546, 1516, 1944,
	2097, 1515, 6480, -1000, -1000, 6480, 1337, 5990, -1000, -1000,
	-1000, 1514, 884, 1512, -1000, -1000, -1000, 1509, 666, 1508,
	1242, 1507, 649, 6480, 924, 906, 6480, 6480, 6480, 6480,
	1506, 6480, 6480, 6480, 6480, 6480, 6480, 6480, -1000, 6480,
	5, -1000, -1000, -1000, -1000, 1235, -1000, 1232, -1000, -1000,
	-1000, 1398, 1398, -1000, 1230, -1000, -1000, -1000, -1000, 1227,
	-1000, -1000, 1226, -1000, -1000, -1000, -1000, 902, -1000, 1258,
	-1000, 1395, -1000, 631, 648, -1000, 1360, 21598, 24033, 0,
	-1000, 1936, 603, -1000, -19, 595, 1766, -1000, -1000, -1000,
	1892, 24033, 21111, -1000, 1633, 889, -1000, -1000, 6480, -1000,
	1547, 24033, -1000, 24033, 2093, 2093, 948, 25278, 1063, 24033,
	1063, -1000, -1000, 1063, -1000, 876, -1000, 24033, -1000, -1000,
	-1000, -1000, 0, 603, 2032, 755, -1000, -1000, -1000, -1000,
	24520, 24520, 10397, 24520, -1000, 1631, 1621, -1000, -1000, 481,
	452, 434, -1000, -1000, 341, -1000, -1000, 595, -1000, -1000,
	-1000, 1620, 1006, -1000, -1000, 7950, -1000, 3523, 3523, 3523,
	-1000, -1000, 15267, -1000, -1000, 639, 595, 1785, 636, -1000,
	636, -1000, -1000, -1000, 2093, 5492, -1000, 12345, -1000, -1000,
	20624, -1000, 20137, 2093, -1000, 1913, 598, -1000, 1617, -1000,
	879, 1877, -1000, 513, -1000, 1005, 874, -1000, 598, 871,
	1875, 513, -1000, -1000, -1000, 873, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -43, -1000, -1000, 24033, 1413,
	867, 965, 630, -1000, 335, 855, 845, -1000, 19650, 71,
	19650, -1000, 19650, -1000, -1000, 219, -1000, 24033, 1923, -1000,
	-1000, -1000, 1393, 1922, -1000, -1000, -1000, -1000, -1000, 866,
	-1000, 315, 2276, 2330, -1000, 7950, 7950, 1921, 1011, -1000,
	6480, 1101, 25669, 1093, 14293, 24033, -1000, -1000, 6480, 6480,
	-1000, 1917, 1909, -1000, 6480, 6480, 1904, -1000, 24033, -1000,
	-1000, -1000, 14293, -1000, 7950, -1000, 6480, 1890, -1000, -1000,
	1845, 1836, 1791, 865, -1000, 1764, 1760, 1604, 1600, 1545,
	1532, 1526, 1258, -1000, -1000, 1505, 1503, 857, -1000, 851,
	1494, 849, 843, 5002, -1000, -120, 6480, 6480, 6480, 1888,
	-1000, -1000, 1595, 967, 1615, -81, 992, -1000, 304, 19650,
	222, -1000, 1784, 156, -1000, 1892, -1000, 486, -1000, 1614,
	24033, 629, -1000, 835, 25572, -1000, 24033, 1258, -1000, 1302,
	948, 2093, -1000, -1000, 2093, -1000, 948, -1000, 948, 1063,
	24033, -1000, -81, 304, 24033, 12345, 12345, 12345, 12345, -1000,
	1858, 1850, -1000, 1848, 1847, 1894, 24033, 12345, 1595, -1000,
	24899, -1000, -1000, -1000, -1000, -1000, 1956, 830, 2079, 499,
	6480, 6480, -1000, -1000, -1000, 443, 19650, 1392, 262, -1000,
	-1000, -1000, -1000, -1000, 24033, 24033, 2091, -1000, 635, -1000,
	-1000, 813, -1000, 2091, 1047, -286, 5002, 220, 24033, -286,
	24033, 5002, -1000, 24033, 218, -286, 2561, 1217, -1000, -1000,
	-1000, 2095, 19650, 1302, 930, 958, -1000, 54, -1000, 100,
	302, 1387, -1000, 358, 999, 357, -1000, -1000, 7950, -1000,
	-1000, -1000, -1000, 1258, 6480, 1493, -1000, 441, 441, 1475,
	-1000, 1573, 1613, -1000, 1573, 1612, 1573, 441, 441, 1460,
	-1000, 1324, 1511, -1000, -1000, 1500, 1474, 6480, -1000, 1458,
	2135, 759, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1386, -1000, -1000,
	-1000, 1206, -1000, 1204, -1000, -84, -51, 1258, 1258, -1000,
	-1000, 1872, 1952, 1934, 8936, 1102, -1000, -1000, 19163, -1000,
	284, -1000, -1000, -1000, 405, 37, 1203, 273, -1000, 1433,
	24033, -1000, -1000, -1000, -1000, -1000, 992, 992, 992, 8936,
	309, 737, 797, 12345, 24033, -1000, 18189, 1453, -1000, 595,
	2093, -1000, -1000, 2093, 2093, 948, -1000, 1102, 284, 758,
	-1000, 997, 1769, 1782, 1769, -1000, -1000, -1000, -1000, 1826,
	-1000, 1517, -1000, -1000, 758, -1000, -1000, -1000, -1000, -1000,
	499, -1000, 2036, 491, 491, 491, 827, 822, -1000, 630,
	1452, -1000, -1000, -1000, -1000, 2088, 2082, 18676, 2088, 2110,
	-1000, 1451, 624, -286, -1000, -1000, 598, -1000, -1000, -1000,
	-286, -1000, 598, -1000, -1000, -1000, -1000, -1000, 1302, -1000,
	90, -1000, -1000, -1000, -1000, -1000, -1000, -32, -1000, 24033,
	1384, 24033, -1000, 1258, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6480,
	-1000, -1000, -1000, 1432, -1000, -1000, 6480, -1000, 1449, 1446,
	-290, -59, 2080, 2077, -1000, -1000, 221, 24033, 1442, 605,
	-1000, -1000, -1000, 25869, 380, -1000, 24033, 1045, 491, 328,
	491, 1044, 1611, -1000, -1000, -1000, 1383, -20, -1000, -1000,
	-1000, 1348, 1346, 1202, -1000, -1000, 1207, 738, -7, -1000,
	-1000, -1000, -1000, -1000, -1000, 1603, 14293, 14780, 1345, 1440,
	24520, 12345, 18189, 623, -1000, 796, -1000, -1000, -1000, -1000,
	-1000, 2093, -1000, -1000, 2086, 24033, 5002, -1000, -1000, 6480,
	1598, -1000, 6480, -1000, -1000, -1000, -1000, -1000, 1596, 1951,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 6480, 6480, -1000,
	-1000, 24033, -1000, 598, 598, 595, -1000, -1000, -118, 74,
	-118, 1414, -1000, 1405, -1000, -1000, -292, 1339, -1000, 2075,
	1335, 1272, -1000, 1595, 25976, 8936, 1343, -1000, -1000, 24033,
	24033, -1000, 24033, 24033, 328, 6480, -1000, -1000, 198, -1000,
	-1000, 104, -1000, -1000, 1199, 314, -1000, 16728, -1000, -1000,
	-1000, -1000, -1000, -49, 2093, 623, 796, -1000, -1000, 901,
	-1000, 2051, -1000, -1000, 1258, 24033, 1258, 17702, -1000, 2070,
	2064, 1258, 546, 513, -1000, -88, -64, -1000, 1333, -1000,
	-1000, -1000, -294, 1200, -1000, 1331, -62, -1000, -1000, 1942,
	308, 25998, -1000, 992, 992, 561, 992, 992, 992, 992,
	193, 190, 992, 992, 992, 992, 992, 992, 992, 992,
	992, 992, 992, 992, 992, 992, 1593, -1000, -1000, 1343,
	-1000, -1000, 1055, 7950, -1000, -1000, 1328, 14780, 448, 498,
	1592, -1000, 164, 2109, -1000, 1040, 1038, -1000, 24033, -1000,
	1588, 1436, 134, 1583, -1000, 1577, 1575, 24033, 1396, 298,
	1327, -1000, -1000, 97, -1000, -1000, 809, -1000, 1573, 6480,
	-1000, -118, 2086, -1000, -1000, 807, 790, -1000, -1000, -1000,
	-1000, 331, -72, -64, -1000, 2062, -68, 2061, 2060, 996,
	-1000, 1566, -1000, -1000, 2059, 221, -1000, 2057, 25976, -1000,
	1186, 1183, 992, 992, 1182, 1325, 1322, 1317, 992, 992,
	1178, 1316, 24899, 1170, 1167, 1163, 1197, 1315, 456, 1187,
	1162, 1155, 24033, 1565, 1261, -1000, -1000, 2276, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1158,
	1564, -116, -1000, -1000, 1562, 16728, 199, 199, 16728, 16728,
	16728, 1561, 345, -1000, -33, -1000, -1000, -1000, 16728, 1919,
	1229, -1000, 2051, -1000, -1000, 17215, 1559, 1127, -59, 2056,
	-1000, 1272, 2055, 1272, 1272, 1311, 24033, 1272, -1000, 151,
	-1000, -1000, -1000, 14293, 14293, -1000, -1000, -1000, -1000, 1309,
	1306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 204, 24033, 787, -1000, 995, 1434, 6480,
	1553, -229, 16728, 786, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 766, 753, 749, 16728, -1000, -1000, -1000, 160, -1000,
	152, -1000, -1000, 1919, -1000, -1000, -1000, 1996, 13806, -75,
	-1000, 1280, -1000, 1272, -1000, -1000, 73, 740, -1000, -1000,
	145, 232, 213, -1000, 320, -1000, -1000, -1000, -1000, -1000,
	-1000, 235, 726, -1000, 1261, 1260, -1000, 1057, -1000, 1780,
	-1000, 40, 722, -1000, -1000, -1000, -1000, 719, -1000, -1000,
	992, 1256, 121, -1000, -1000, -1000, -1000, 24033, -1000, 713,
	-1000, -1000, -1000, 763, -1000, -1000, -1000, -1000, -1000, 1250,
	-1000, 24033, 143, 1126, 7950, 1544, 7950, 1542, 153, 1539,
	-1000, -1000, -1000, -1000, -1000, 345, -1000, 1779, 1776, 2104,
	-1000, -1000, -1000, -1000, 152, 152, 152, 152, 50, 1100,
	-1000, 1299, 502, -1000, 966, -1000, 16241, 24033, 960, -1000,
	1538, 2053, -1000, 1771, 24033, 1415, 24033, 1531, 959, 7950,
	-1000, -1000, 2108, -1000, 2105, 426, 426, -1000, -1000, -1000,
	24033, 4512, -1000, 728, 1244, -1000, 224, 154, -1000, 711,
	-1000, 709, 15754, 1085, 1323, -1000, -1000, -1000, 1114, 168,
	-1000, -1000, -1000, 1258, 24033, 63, 676, -1000, 1363, 136,
	-1000, -1000, -1000, 672, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1234, -1000, 224, 1852, -1000, 1084, -1000, 957, -1000,
	25918, 344, -1000, 1189, -1000, 25918, 140, -1000, 225, 1530,
	-308, -1000, -1000, 657, -1000, 1340, 478, 6480, -1000, -1000,
	140, 25976, -1000, 6480, 628, -1000, 25976, 601, -1000, -1000,
}

var yyPgo = [...]int{
	0, 112, 2520, 189, 128, 126, 188, 2519, 2518, 2003,
	1991, 2517, 2516, 2514, 2513, 2510, 2509, 2507, 2506, 2500,
	2498, 2497, 2496, 2495, 2494, 2493, 2492, 2491, 184, 2490,
	2489, 2488, 2480, 2479, 2474, 2473, 2472, 2471, 2470, 2464,
	2463, 2462, 2461, 2460, 2459, 2458, 121, 2457, 1990, 2443,
	2441, 2440, 2439, 2438, 163, 2437, 2436, 2435, 2434, 2433,
	2431, 2430, 2424, 2422, 2421, 2420, 2419, 2418, 2416, 123,
	2415, 2414, 2413, 2412, 185, 171, 58, 2411, 53, 51,
	140, 200, 160, 199, 191, 138, 120, 75, 2410, 2018,
	2409, 114, 169, 109, 26, 2408, 137, 2407, 107, 46,
	39, 190, 104, 55, 61, 94, 2404, 167, 80, 2389,
	2388, 82, 2387, 60, 2386, 72, 30, 89, 27, 2385,
	2384, 2382, 71, 2381, 2380, 2378, 2377, 117, 2375, 87,
	50, 2374, 2372, 2371, 2370, 2368, 36, 2364, 47, 2363,
	2361, 2360, 2359, 2358, 2357, 2356, 12, 20, 18, 2354,
	17, 3, 2353, 168, 99, 74, 106, 2352, 355, 2351,
	2350, 2349, 110, 2348, 382, 2347, 2346, 2345, 2344, 9,
	2342, 153, 2339, 2336, 2334, 57, 142, 152, 2333, 2332,
	103, 48, 90, 98, 2331, 2330, 92, 166, 16, 33,
	0, 149, 45, 2329, 2328, 2326, 204, 148, 147, 175,
	88, 194, 125, 2325, 2318, 54, 2316, 113, 2315, 93,
	7, 2312, 133, 2311, 183, 135, 2309, 154, 2308, 182,
	2, 97, 25, 217, 2307, 2303, 2302, 136, 2301, 2298,
	59, 131, 2296, 2292, 2291, 24, 2289, 31, 21, 2288,
	73, 2287, 195, 2285, 144, 101, 134, 130, 102, 172,
	174, 68, 111, 1094, 105, 78, 19, 2284, 173, 2283,
	193, 196, 2282, 145, 2280, 187, 339, 157, 2277, 132,
	8, 2276, 2275, 10, 2274, 23, 2273, 2272, 2268, 2265,
	6, 2264, 2263, 2262, 1, 4, 2248, 5, 162, 49,
	95, 2247, 96, 192, 2246, 2244, 2241, 2240, 2237, 203,
	2216, 2213, 2212, 2210, 2209, 2208, 2207, 2206, 83, 37,
	2202, 2201, 2198, 2197, 62, 100, 2195, 262, 156, 2194,
	38, 2192, 2189, 29, 2188, 28, 2187, 2186, 2182, 14,
	139, 2181, 2180, 15, 2179, 2177, 11, 13, 2176, 2175,
	66, 2174, 43, 32, 69, 79, 2173, 22, 67, 91,
	2172, 2171, 180, 178, 151, 2170, 118, 176, 202, 2168,
	164, 2167, 2166, 2165, 2164, 2163, 2162, 2160, 1118, 2159,
	2156, 179, 56, 170, 2155, 2154, 143, 2153, 115, 84,
	81, 150, 2150, 141, 2149, 2148, 85, 2141, 2140, 2137,
	2128, 2127, 181, 177, 2126,
}

//line mysql_sql.y:7834
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 390, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	63, 62, 339, 339, 338, 338, 337, 337, 336, 336,
	336, 335, 335, 335, 334, 334, 333, 333, 332, 332,
	330, 330, 331, 329, 328, 328, 328, 326, 326, 324,
	324, 325, 325, 319, 319, 322, 322, 320, 320, 320,
	320, 323, 318, 318, 318, 317, 317, 61, 61, 61,
	255, 255, 60, 60, 269, 269, 269, 269, 269, 267,
	267, 267, 267, 267, 267, 266, 266, 265, 265, 270,
	270, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 55, 55, 55, 55, 58, 58, 58, 59, 264,
	264, 264, 56, 57, 57, 254, 254, 259, 259, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 263, 263, 263, 261, 261, 260, 260, 262, 262,
	49, 49, 49, 52, 51, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 50, 50, 50, 50, 50, 50,
	47, 47, 47, 47, 47, 46, 46, 48, 48, 252,
	252, 251, 66, 66, 66, 66, 66, 66, 66, 65,
	65, 68, 68, 67, 54, 54, 54, 54, 54, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 363, 363,
	363, 365, 365, 194, 195, 391, 193, 193, 193, 359,
	359, 360, 361, 362, 362, 362, 64, 7, 7, 44,
	45, 383, 383, 299, 299, 207, 207, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 302, 303, 203, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	35, 34, 34, 241, 241, 33, 392, 392, 177, 177,
	32, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	43, 313, 313, 394, 394, 394, 41, 42, 298, 298,
	298, 39, 38, 37, 36, 36, 31, 31, 30, 30,
	200, 200, 202, 202, 198, 393, 393, 275, 275, 201,
	201, 29, 29, 29, 199, 199, 176, 197, 197, 197,
	8, 8, 6, 11, 11, 11, 11, 11, 11, 11,
	11, 17, 19, 249, 249, 246, 18, 14, 13, 16,
	12, 15, 5, 5, 5, 5, 9, 9, 10, 86,
	86, 117, 117, 372, 372, 368, 368, 369, 369, 369,
	370, 370, 371, 371, 69, 307, 307, 307, 307, 307,
	307, 4, 306, 306, 306, 306, 306, 306, 389, 389,
	348, 348, 348, 349, 107, 107, 102, 102, 308, 308,
	221, 350, 350, 316, 316, 315, 315, 314, 314, 105,
	105, 106, 106, 89, 89, 75, 75, 321, 321, 321,
	321, 327, 327, 296, 296, 143, 143, 172, 172, 173,
	173, 79, 79, 80, 80, 80, 80, 80, 80, 356,
	356, 358, 358, 357, 104, 104, 100, 100, 101, 101,
	101, 99, 99, 98, 97, 97, 96, 94, 94, 94,
	95, 95, 95, 82, 82, 81, 81, 81, 81, 81,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 83, 83, 364, 364, 364, 300, 300, 300,
	305, 305, 155, 155, 156, 156, 154, 154, 84, 84,
	85, 85, 85, 85, 153, 153, 152, 87, 87, 93,
	92, 92, 88, 88, 88, 88, 163, 163, 162, 162,
	162, 162, 72, 73, 73, 74, 110, 110, 161, 160,
	160, 160, 109, 109, 108, 108, 103, 103, 91, 91,
	91, 91, 159, 90, 90, 157, 388, 388, 387, 387,
	386, 384, 384, 384, 385, 385, 385, 385, 341, 341,
	341, 341, 341, 186, 186, 186, 192, 192, 185, 185,
	185, 185, 185, 196, 191, 191, 187, 187, 188, 188,
	188, 3, 3, 3, 3, 23, 23, 23, 23, 27,
	27, 366, 366, 20, 373, 376, 374, 374, 377, 377,
	377, 378, 378, 378, 379, 379, 21, 375, 380, 380,
	380, 250, 250, 247, 248, 248, 245, 244, 244, 244,
	382, 382, 381, 381, 381, 189, 189, 22, 240, 240,
	242, 243, 243, 234, 234, 234, 234, 26, 238, 238,
	239, 239, 239, 239, 239, 235, 235, 237, 237, 233,
	233, 233, 233, 233, 25, 232, 232, 230, 230, 228,
	228, 229, 229, 227, 227, 227, 231, 231, 24, 24,
	77, 76, 76, 76, 76, 76, 78, 301, 301, 271,
	271, 274, 274, 281, 281, 282, 282, 280, 280, 287,
	287, 286, 286, 285, 285, 284, 284, 283, 283, 283,
	283, 278, 278, 277, 277, 272, 272, 272, 272, 272,
	273, 273, 273, 276, 276, 279, 279, 134, 134, 135,
	135, 135, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 346, 346, 347, 137, 137, 137, 141, 141, 141,
	141, 141, 141, 136, 136, 138, 138, 118, 118, 116,
	116, 111, 111, 112, 112, 113, 113, 114, 114, 115,
	115, 115, 115, 115, 115, 257, 257, 344, 344, 345,
	345, 340, 340, 340, 343, 343, 343, 343, 343, 342,
	342, 119, 170, 170, 170, 190, 190, 190, 169, 169,
	169, 133, 133, 132, 132, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	256, 256, 204, 204, 205, 205, 150, 149, 149, 149,
	149, 149, 147, 148, 146, 146, 146, 146, 146, 145,
	145, 144, 144, 144, 236, 236, 142, 142, 140, 140,
	140, 139, 139, 139, 288, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 213, 213,
	218, 218, 355, 355, 354, 120, 120, 120, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 129, 129, 129,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 312, 312, 312, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 367, 367, 367, 351, 351, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 167, 167, 167, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 222, 222, 223, 223, 309, 309, 309, 309, 309,
	309, 310, 310, 311, 311, 311, 311, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 211, 164, 164, 164,
	224, 219, 219, 220, 220, 214, 214, 214, 214, 214,
	214, 214, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 215, 215, 217, 217, 226, 226, 226, 225,
	225, 225, 225, 225, 225, 225, 131, 131, 131, 131,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	122, 122, 122, 122, 126, 126, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	127, 127, 127, 127, 125, 125, 125, 125, 125, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 70, 71, 71, 124, 171,
	171, 289, 289, 292, 292, 290, 290, 291, 293, 293,
	293, 294, 294, 294, 295, 295, 295, 297, 297, 175,
	175, 175, 182, 182, 174, 174, 183, 183, 184, 184,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	9, 9, 0, 2, 1, 3, 3, 3, 1, 3,
	5, 0, 2, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 0, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 1, 1, 1, 1, 6, 1, 1, 7,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 0, 2, 7, 0, 1, 0, 1,
	4, 1, 1, 1, 3, 2, 3, 1, 1, 1,
	6, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 6, 7, 4, 4, 7, 8,
	0, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	11, 0, 1, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 5, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 10, 9,
	2, 2, 6, 10, 14, 18, 5, 0, 1, 0,
	6, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	5, 4, 4, 5, 5, 5, 5, 4, 5, 5,
	5, 5, 5, 5, 5, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 5, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -390, -2, -1, -3, -4, -69, -5, -6, -8,
	-53, -65, -67, -68, -28, -7, -64, -46, -47, -49,
	-55, -60, -61, -62, -63, -70, -71, -72, -79, -23,
	-22, -21, -20, 12, 425, -9, -10, -356, -11, 229,
	-193, -194, -195, -391, -29, -30, -31, -36, -37, -38,
	-39, -41, -42, -43, -32, -33, -34, -35, -45, -44,
	206, -48, 61, -50, -51, -52, -56, -57, -58, -59,
	320, 326, 379, 388, 508, 509, 46, -80, -82, -24,
	-25, -26, -27, 202, 14, 458, -12, -15, -13, -16,
	-14, -18, -19, -17, 224, 223, 37, 286, 287, 324,
	222, 203, 13, 135, 136, 138, 139, 30, -81, 67,
	204, -83, 10, 510, -89, 38, -116, -190, 70, -178,
	-181, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 428, 302, 455,
	241, 265, 350, 268, 275, 135, 154, 148, 176, 168,
	143, 245, 246, 77, 138, 411, 87, 396, 376, 141,
	260, 262, 264, 267, 247, 164, 159, 259, 243, 508,
	157, 248, 39, 249, 181, 250, 251, 460, 392, 301,
	398, 272, 374, 158, 393, 263, 395, 183, 187, 403,
	326, 152, 153, 400, 405, 180, 221, 42, 457, 233,
	406, 185, 179, 175, 414, 276, 274, 178, 151, 174,
	244, 50, 189, 188, 190, 370, 371, 372, 373, 252,
	253, 314, 402, 171, 160, 305, 144, 22, 409, 228,
	397, 327, 254, 269, 277, 184, 186, 235, 240, 459,
	378, 239, 273, 407, 156, 232, 261, 227, 410, 145,
	320, 329, 255, 139, 266, 404, 413, 49, 342, 150,
	142, 218, 136, 237, 242, 11, 256, 257, 258, 279,
	278, 270, 172, 234, 177, 162, 149, 173, 137, 236,
	412, 343, 506, 303, 359, 170, 167, 238, 211, 408,
	399, 140, 363, 344, 165, 280, 503, 504, 505, 315,
	300, 281, 282, 163, 225, 391, 283, 285, 369, 293,
	345, 377, 351, 346, -89, -48, -10, -9, -81, -82,
	-116, 209, -197, 23, 374, -54, 375, 206, 67, -190,
	-5, -4, -69, -46, -79, -196, -190, 286, -196, 209,
	-190, 239, 358, -299, 214, -266, -240, 240, -265, -242,
	-268, -243, 31, 202, 204, 203, 236, 14, 324, 210,
	12, 10, 325, 222, 24, 25, 27, 13, 326, 328,
	28, 329, 332, 333, 334, 41, 337, 338, 229, 70,
	73, 247, 247, -220, -214, 94, 230, -216, -209, -210,
	-212, -336, -330, -208, 67, 119, 120, 127, 95, -211,
	-288, 35, 97, 465, 426, -165, -166, -167, -168, -190,
	-331, -329, 73, 78, 81, 84, 85, 83, 82, 161,
	80, 74, 132, -82, 70, -351, 473, -179, 493, 474,
	492, 46, -304, -311, 208, -309, 166, 225, 162, 12,
	125, 369, 130, 163, 470, 489, 428, 496, 467, 468,
	462, 463, 464, 466, 475, 477, 488, -312, 484, 494,
	495, 72, 71, 487, 486, 471, 472, 478, 461, 469,
	479, 480, 485, 490, 491, 499, 500, 308, 87, 309,
	310, 418, 304, 311, 214, 374, 55, 312, 313, 314,
	315, 316, 425, 317, 56, 318, 307, 229, 359, 319,
	165, 182, 430, 429, 431, 422, 419, 417, 420, 421,
	423, 424, 481, 482, 483, -262, -260, -190, -73, -74,
	501, -98, -99, -158, 19, 6, 7, 8, 9, -301,
	302, 359, 239, -234, -232, 283, 335, 219, 218, 88,
	418, 208, -368, -369, 199, 200, 201, -358, 451, -357,
	-190, 310, 26, 209, -40, -313, -298, 399, 398, -201,
	397, 390, 401, 392, 202, 452, -175, 345, 377, 235,
	415, 416, 322, 378, 403, 404, 393, 87, 169, 166,
	302, 359, -368, 140, 137, -253, 140, 93, 145, 144,
	-253, 239, 358, 40, -259, 369, -258, -260, 403, 404,
	414, 71, 72, 402, -175, 87, -99, -158, -98, -80,
	-82, -356, 302, 359, 239, 210, 209, 211, 418, 286,
	-300, -364, 31, -305, 196, 197, 198, 32, 33, -1,
	-105, 231, -116, 133, -105, -99, -98, -99, -116, -169,
	-190, 376, 103, -54, -54, 375, -359, -360, -361, -363,
	206, 375, 374, 133, 15, -196, 65, -116, -242, 239,
	-266, -240, 35, 64, 134, 212, 134, 64, 67, 322,
	302, 359, 323, 418, 209, 335, 211, 239, 336, 302,
	359, 209, 211, 418, 239, 302, 209, 211, 359, 239,
	336, 390, 391, 211, 26, 327, 330, 331, 391, -317,
	414, -317, 134, 93, 90, 91, 92, -214, 110, -225,
	103, 104, 105, 106, 107, 108, 109, 116, 115, 126,
	119, 120, 121, 122, 123, 124, 125, 117, 118, 113,
	94, 111, 112, 96, -82, -214, -220, -212, -212, -212,
	-212, -288, -218, -214, 67, 67, 133, -214, 67, 67,
	67, 67, 67, 67, 67, 67, 67, -310, 67, 67,
	-222, -223, 67, 67, 73, 73, 67, 67, 67, -212,
	73, -223, -223, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 134, -122,
	-126, -123, -125, -124, -128, -127, 166, 167, 130, 170,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	30, 182, 225, 162, 163, 164, 165, 183, 148, 168,
	456, 191, 149, 192, 150, 193, 151, 194, 152, 153,
	195, 154, 157, 158, 159, 156, 133, -99, 134, 67,
	-75, 38, -101, 21, -83, -82, 20, 31, 32, 31,
	32, 31, 32, 31, 32, -366, 209, 451, -230, 214,
	-230, -230, 210, -230, 209, -370, 147, 134, -358, -104,
	67, -200, 111, 23, 237, -200, -394, 210, 400, 42,
	238, 237, -100, -101, -100, 394, 391, -275, 395, 396,
	-201, -200, -200, -201, 209, 211, 418, -392, -393, 15,
	113, 237, -392, 30, 30, -299, -299, -371, 213, 407,
	458, 143, 144, 145, -242, 239, 239, 134, 103, 23,
	-261, 103, 114, -260, -260, -260, -261, -261, -136, 40,
	-189, 130, -190, 73, -136, 40, -100, -83, -82, 68,
	68, -299, -299, -299, -299, -299, -299, -299, -196, -84,
	-85, 121, -214, -190, -84, -306, 46, -79, 67, 30,
	67, -190, -307, 46, -79, 67, 30, -100, -75, -101,
	133, 78, 73, -54, 68, 134, -362, 84, 85, -365,
	180, 172, -190, -66, 73, -3, -4, -5, -6, -28,
	-46, -79, -332, -330, 67, 31, 368, 64, 15, -267,
	209, 418, 321, 235, 211, 302, -265, -249, -246, -244,
	-189, -242, -245, -244, -270, -169, 391, -76, 380, -76,
	-214, -214, -214, -214, -214, 83, 94, 300, 84, 85,
	-209, -226, 31, 281, 282, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, -210, -210, -210, -217, -224, -288,
	67, 113, 111, 112, 96, -212, -210, -210, 68, 134,
	-355, -354, 98, -214, -214, -190, -352, -353, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 312,
	307, 313, 311, 304, 319, 314, 315, 165, 449, 450,
	443, 444, 445, 446, 447, 448, -219, -220, -219, -214,
	-352, -219, -164, 32, 31, -164, -214, -367, 298, 297,
	299, -102, -190, -219, 68, 68, 68, 78, -220, -219,
	-210, -219, -353, -164, -220, -220, -164, -164, -164, -164,
	121, -164, -164, -164, -164, -164, -164, -164, -260, 40,
	-295, 343, 342, -289, -291, 67, -290, 67, -290, -289,
	-289, 67, 67, -292, 67, -292, -292, -289, -293, 67,
	-293, -294, 67, -293, -190, -100, -74, -315, -314, -214,
	40, 502, -75, -214, -97, -96, -214, 211, -230, -373,
	-190, 94, -250, -247, -244, -240, -188, 70, 71, 72,
	-190, -230, -371, -357, 34, -103, -190, -154, 16, -212,
	-244, -392, -154, -393, -200, -200, -202, -393, -198, -393,
	391, -154, -154, -275, -199, -190, -199, -230, -177, -176,
	-190, -177, -373, -250, -92, -87, -91, -88, -93, -157,
	-159, -90, 67, -116, -82, 499, 500, 408, 409, 141,
	144, 143, 31, 368, -264, 368, 31, -240, -258, -254,
	73, 369, -245, -263, 64, 130, -314, -261, -261, -261,
	-263, -263, 129, -75, -373, -249, -240, -190, -118, -116,
	-118, -191, -188, -181, -153, 134, -152, 15, -185, -190,
	34, 73, 133, -153, -389, 64, -308, -221, -350, 501,
	-107, 68, -102, -348, -349, -102, -106, -190, -308, -107,
	68, -348, -75, -75, -183, -184, -174, -180, -187, -188,
	-181, 207, 31, 93, 34, 36, 308, 340, 96, 130,
	20, 97, 166, 129, 310, 426, 309, 202, 59, 429,
	431, 430, 419, 417, 361, 365, 367, 364, 418, 390,
	40, 14, 37, 223, 32, 33, 123, 204, 100, 101,
	226, 35, 224, 85, 44, 23, 62, 15, 17, 18,
	311, 360, 214, 213, 113, 380, 210, 57, 12, 132,
	38, 110, 362, 53, 89, 45, 55, 111, 21, 420,
	421, 41, 379, 388, 454, 230, 125, 312, 313, 60,
	94, 368, 83, 43, 64, 90, 19, 58, 112, 205,
	425, 56, 366, 316, 318, 328, 451, 317, 208, 401,
	10, 307, 427, 30, 222, 54, 209, 99, 212, 84,
	229, 6, 88, 13, 61, 65, 422, 423, 424, 46,
	98, 16, 319, 458, 381, 382, 383, 384, 385, 386,
	387, 191, 192, 193, 194, 195, 271, 217, 215, 219,
	220, 501, 502, 196, 197, 297, 299, 169, 199, 200,
	201, 231, 147, 7, 347, 348, 349, 352, 353, 354,
	355, 356, 357, 358, 509, 23, -54, -360, 133, 134,
	-103, -267, -248, -245, -269, 121, 70, -255, 134, 458,
	511, 71, 212, -382, -381, 360, 68, 134, -318, 213,
	425, 73, 512, -318, 83, 300, 84, 85, -288, -220,
	-217, -212, -210, -210, -215, 226, 93, -214, -213, -354,
	100, -214, 34, 134, 65, 133, 68, 68, 15, 15,
	68, -214, -214, 68, 15, 15, -214, 68, 133, 68,
	68, 68, 65, 68, 134, 68, 134, -214, 68, 68,
	-214, -214, -214, -220, 68, -214, -214, -214, -214, -214,
	-214, -214, -214, -297, 344, 78, 78, -171, 73, -171,
	78, 78, 78, 134, 68, 73, 134, 22, 134, -94,
	36, 37, -116, 214, -116, -376, 347, 35, -383, 134,
	40, -381, -233, 65, -228, -229, -227, -231, 40, -116,
	15, -86, -117, -190, 67, 68, 134, -214, -241, 65,
	-177, -116, -154, -154, -200, -191, -202, -197, -202, -198,
	133, -176, -376, -383, 30, -160, -161, -162, -163, 53,
	57, 59, 54, 55, 56, 60, 30, 134, -186, -192,
	34, -187, 73, -188, -181, -186, -82, -87, -92, -186,
	67, 67, 142, 145, 145, 144, 212, 67, 103, -263,
	-263, -263, 40, -189, 64, 134, -154, -85, -87, -190,
	73, -190, 121, -154, 39, 134, 67, 68, 134, 46,
	134, 103, 68, 134, 68, 46, 133, 376, -190, -330,
	68, -269, 134, 212, 133, 133, -246, 326, -189, -248,
	20, 458, -169, 38, 73, 38, 68, -215, 93, -212,
	-209, 68, 101, -214, 99, -120, -122, 342, 343, -121,
	-127, 130, 166, 225, 165, 164, 162, 342, 343, -136,
	-190, -214, -214, 68, 68, -214, -214, 15, -190, -136,
	-210, -214, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 134, 68, 68,
	68, 134, 68, 134, -314, -321, 395, -214, -214, -96,
	-95, 43, -104, 94, 67, -378, 397, 349, -182, 103,
	-207, -206, 303, 41, -302, 369, 355, 356, -247, 239,
	64, 292, 293, 294, 295, -227, -175, 129, 250, 67,
	-116, -86, -190, 15, 134, -372, 133, -1, -190, -240,
	-200, -154, -154, -200, -200, -202, -190, -378, -207, -252,
	-251, -169, -91, -91, -91, -91, 53, 53, 53, 58,
	53, 58, 53, -162, -252, -93, -104, -192, 68, -388,
	-387, -386, -384, 61, 213, 62, -220, -220, 145, -248,
	-203, 73, -254, -116, -116, -156, 17, 133, -156, 89,
	-221, -316, -315, 46, -79, -102, -308, -349, -314, -190,
	46, -79, -308, -183, -180, -188, -181, 78, 15, -245,
	-240, 121, 121, 70, 327, -255, 73, 348, 73, 209,
	103, 209, -209, -214, 68, -129, 153, 152, -129, 68,
	-289, -290, -289, -292, -289, -129, -129, 68, 68, 23,
	68, 68, 68, -214, 68, 68, 134, 73, 78, 78,
	-327, 386, 381, 383, 44, 45, 34, 35, -111, -112,
	-113, -119, -114, -169, -205, -115, 217, 215, 219, -345,
	88, 220, 271, 89, 210, -379, 77, -374, 73, -190,
	-380, 77, 350, 132, 305, 40, 351, 352, 366, 301,
	78, 78, 357, -375, 70, -116, -182, -182, -182, -111,
	-105, 65, 133, -87, -117, -190, 121, 68, -154, -154,
	-154, -200, -379, -380, -154, 134, 103, -109, -108, 64,
	65, -110, 64, -108, 53, 53, -154, -386, -385, 23,
	-345, -345, -345, 68, 68, 68, -155, 18, 20, 121,
	-155, 13, 68, -308, -308, -240, -255, 369, -116, 73,
	-116, -214, 68, -214, 68, 68, -296, 503, -325, 381,
	20, 20, -79, -116, 68, 134, -122, -115, -190, 89,
	-344, -345, -230, -344, 89, 67, 73, -377, 360, 73,
	73, 78, 40, 78, 132, 353, -303, 67, -136, -138,
	-189, 130, 73, 68, -186, -87, -190, -154, -372, 133,
	-154, -99, -251, -314, -214, 67, -214, 67, 53, 19,
	17, -214, -220, -348, -78, -319, -275, 513, 134, -78,
	68, 68, -143, 504, 73, 20, 73, -323, 73, -104,
	-134, -135, -151, 340, 241, -231, 245, 77, 246, 376,
	247, 210, 249, 250, 251, 221, 252, 253, 254, 369,
	255, 256, 257, 258, 323, 6, 288, -113, -133, -132,
	-130, 83, 94, 40, 340, -131, 77, 129, 264, 242,
	265, -150, -204, 64, 346, 215, 88, 89, 328, -205,
	-340, -342, -190, -342, -190, -340, -340, -230, -214, 20,
	458, 304, 40, 78, 40, 354, -235, -237, -169, 67,
	-77, -76, -154, -154, -100, -103, -341, -190, 215, 20,
	20, -326, 386, -322, -320, 381, 382, 383, 384, 73,
	-172, 505, 78, 73, 383, 34, -271, 231, 134, -151,
	-182, -182, -175, 129, -182, -182, -182, -182, 248, 248,
	-182, -182, -182, -182, -182, -182, -182, -182, -182, -182,
	-182, -182, -182, -182, 67, -130, 83, -210, 73, -138,
	-139, 40, 263, 259, -140, 40, 243, 244, -142, 67,
	271, 13, 89, 89, -116, 67, 65, 280, 67, 67,
	67, -342, 68, 73, 348, 73, 304, 68, 134, -289,
	-214, -78, -99, 68, 68, 134, -328, 213, -324, 385,
	-320, 20, 383, 20, 20, 103, 67, 20, -79, 20,
	-151, 78, 78, -182, -182, 78, 73, 73, 73, -182,
	-182, 78, 73, -192, 78, 78, 78, 78, 40, 73,
	-141, 40, 259, 263, 260, 261, 262, 78, 40, 78,
	40, 78, 40, -190, 67, -346, -347, 73, 78, 67,
	-309, -236, 67, -235, -343, 292, 293, 294, 296, 295,
	-343, -235, -235, -235, 67, -257, -256, 272, 94, 369,
	-238, -237, -94, 68, -100, -190, 215, -335, 67, 78,
	-325, 20, -323, 20, -323, -323, 73, -173, -190, -323,
	-272, 273, 274, -273, -279, 276, -136, -136, 73, 73,
	-137, 242, -118, 68, 134, 103, 68, -214, -222, -145,
	-144, 454, -235, 68, 68, 68, 68, -235, 272, -239,
	221, 77, 458, 290, 291, -94, -339, 30, 68, -334,
	-333, -170, -329, -190, 386, 387, 73, -323, 513, 134,
	68, 134, -277, 277, 67, -275, 67, -275, 89, 293,
	243, 244, 68, -347, 73, 68, -149, -147, -148, 64,
	393, 269, 270, 68, -238, -238, -238, -238, 68, -182,
	73, 289, -338, -337, -336, 68, 134, 133, 73, -190,
	-274, 278, 78, -210, 67, -210, 67, -276, 275, 67,
	-256, -148, 64, -147, 64, 14, 13, -150, 78, -188,
	134, 103, -333, -190, 103, -281, 67, 20, 68, -270,
	68, -270, 67, 103, -210, -146, 266, 267, 30, 144,
	-146, -337, 40, -214, 133, 73, -282, -280, 231, -273,
	68, 68, 68, -270, 78, 68, 83, 40, 268, -190,
	513, 134, 68, 134, 70, -278, 279, 68, 73, -280,
	-283, 46, 78, 103, -287, -284, 67, -151, 233, 113,
	73, -287, -151, -286, -285, 278, 234, 67, 513, 68,
	134, 70, 230, 67, -220, -285, -284, -220, 68, 68,
}

var yyDef = [...]int{
	29, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 621,
	622, 623, 624, 0, 0, 392, 393, 0, 372, 0,
	0, 0, 0, 0, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 267, 268,
	0, 215, 211, 190, 191, 192, 151, 152, 153, 154,
	273, 0, 0, 0, 0, 0, 0, 471, -2, 625,
	626, 627, 628, -2, 405, 0, 373, 374, 375, 376,
	377, 378, 379, 380, 256, 257, 258, 253, 254, 255,
	-2, 0, 405, 204, 0, 195, 195, 0, 491, 0,
	0, 505, 527, 29, 449, 0, 454, 809, 845, 846,
	847, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 449, 216, 394, 395, 491, 491,
	370, 0, 239, 0, 1438, 243, 0, 0, 0, 367,
	234, 235, 236, 237, 238, 0, 613, 0, 231, 0,
	210, 1497, 0, 0, 0, 0, 0, 0, 95, 668,
	97, 670, 101, 108, 0, 0, 113, 114, 117, 118,
	119, 120, 121, 0, 125, 0, 127, 130, 0, 132,
	133, 0, 136, 137, 138, 0, 148, 149, 150, 671,
	672, 75, 75, 1195, 1093, 0, 1100, 1101, 1112, 1121,
	917, 918, 919, 920, 0, 0, 0, 0, 0, 927,
	928, 0, 940, 1586, 0, 934, 935, 936, 937, 38,
	50, 51, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1066, 904, 845, 0, 1594, 0, 1614, 1595,
	1613, 0, 0, 1051, 0, 1041, 0, -2, -2, 0,
	0, 1564, 0, -2, 1591, 1610, 1618, 1617, 1588, 1589,
	1583, 1584, 1585, 1587, 1596, 1598, 1609, 0, 1605, 1615,
	1616, 52, 53, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1580, 1581, 1057, -2, 1059,
	1060, 1062, 1063, 1064, 1065, -2, 1068, 1069, 1070, -2,
	-2, 1073, 1074, 1075, 1076, 1077, 1078, 1081, -2, 1083,
	-2, 1085, 1053, 1054, 1055, 1056, 1045, 1046, 1047, 1048,
	1049, 1050, -2, -2, -2, 0, 188, 186, 491, 563,
	0, -2, 0, 0, 0, 510, 513, 516, 519, 631,
	697, 697, 697, 0, 697, 0, 718, 674, 675, 676,
	695, 696, 410, 406, 407, 408, 409, 479, 0, 481,
	484, 350, 311, 0, 350, 0, 0, 486, 486, 0,
	359, 350, 350, -2, 0, 321, 322, 323, 316, 0,
	316, 327, 328, 329, 339, 340, 360, 1219, 0, 0,
	273, 273, 412, 205, 206, 194, 196, 0, 200, 0,
	193, 1497, 0, 0, 162, 1564, 167, 0, 1445, 1511,
	1460, 0, 0, 1478, 0, -2, 486, 0, 492, 0,
	491, 0, 273, 273, 273, 273, 273, 273, 273, 0,
	0, 0, 528, 529, 524, 525, 526, 530, 531, 3,
	0, 0, 453, 0, 0, 486, -2, 0, 371, 240,
	848, 0, 0, 244, 245, 0, 0, 259, 0, 262,
	248, 249, 250, 0, 0, 233, 0, 0, 212, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 105,
	102, 109, 112, 122, 129, 0, 141, 143, 146, 103,
	110, 115, 116, 123, 144, 104, 106, 107, 111, 145,
	147, 124, 128, 142, 126, 131, 134, 135, 140, 0,
	76, 0, 0, 0, 0, 0, 0, 1099, 0, 0,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1093, 0, 923, 924, 925,
	926, 929, 0, 941, 0, 0, 0, 0, 1091, 1091,
	0, 1091, 1087, 1087, 0, 0, 1091, 1029, 0, 0,
	1031, 1042, 0, 0, 1034, 1035, 1091, 0, 1091, 1039,
	1040, 1025, 1026, 0, 1087, 0, 0, 1087, 1087, 1087,
	1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 0, 1196,
	1214, 1151, 1152, 1153, 1201, 1155, 1205, 1205, 1201, 1201,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 0,
	0, 1194, 1174, 1203, 1203, 1203, 1201, 1198, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1208, 1208, 1211, 1208, 0, 486, 0, 0,
	474, 0, 455, 0, 507, 509, 0, 511, 512, 514,
	515, 517, 518, 520, 521, 0, 697, 632, 0, 0,
	0, 0, 0, 0, 697, 412, 411, 0, 480, 0,
	0, 536, 0, 0, 316, 536, 0, 333, 334, 335,
	350, 350, 341, 487, 342, 343, 352, 0, 357, 358,
	0, 536, 536, 0, 0, 0, 697, 318, 317, 355,
	356, 325, 318, 1220, 1221, 0, 0, 0, 413, 0,
	0, 198, 0, 203, 155, 0, 0, 0, 0, 0,
	0, 184, 185, 0, 0, 0, 0, 0, 175, 178,
	803, 804, 665, 666, 179, 180, 455, 506, 508, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 391, 544,
	538, 540, 608, 38, 544, 428, 441, 423, 0, 430,
	0, 810, 414, 441, 416, 0, 430, 455, 477, 455,
	0, 241, 0, 246, 0, 0, 261, 263, 264, 265,
	251, 252, 368, 229, 230, 222, 223, 224, 225, 226,
	227, 228, 232, 48, 0, 213, 214, 0, 0, 0,
	89, 90, 91, 92, 93, 94, 96, 80, 383, 385,
	657, 669, 0, 660, 0, 99, 139, 72, 0, 72,
	1094, 1095, 1096, 1097, 1098, 1102, 0, 1104, 1106, 1108,
	1110, 0, 1126, -2, -2, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 1113, 1124, 1125,
	0, 0, 0, 0, 0, 1122, 1117, 0, 921, 0,
	938, 942, 0, 0, 0, 39, 1086, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 0, 1092, 0, 1093,
	0, 0, 0, 1088, 1089, 0, 0, 0, 991, 992,
	993, 0, 436, 0, 1052, 1030, 1043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	1217, 1215, 1216, 1154, 1202, 0, 1179, 0, 1180, 1181,
	1182, 0, 0, 1175, 0, 1176, 1177, 1178, 1170, 0,
	1171, 1172, 0, 1173, 187, 562, 564, 0, 445, 447,
	448, 0, 475, 488, 493, 494, 497, 0, 0, 0,
	634, 0, 271, 651, 0, 667, 689, 618, 619, 620,
	-2, 0, 0, 482, 0, 0, 576, 310, 0, 351,
	313, 318, 320, 0, 536, 536, 350, 0, 352, 0,
	352, 346, 347, 0, 361, 364, 362, 0, 324, 319,
	366, 326, 0, 271, 549, 0, 550, 551, 547, 578,
	603, 603, 0, 603, 582, 0, 0, 207, 208, 0,
	0, 202, 156, 157, 0, 159, 160, 161, 168, 163,
	165, 0, 0, 169, 181, 182, 183, 0, 0, 0,
	173, 174, 0, 473, 381, 382, 386, 0, 388, 807,
	389, 390, 614, 615, 536, 0, 545, 0, 541, 609,
	0, 611, 0, 536, 421, 0, 422, 438, 0, 442,
	0, 0, 434, 427, 431, 0, 0, 451, 415, 0,
	0, 420, 476, 478, 849, 0, 1226, -2, 1228, -2,
	-2, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 0, 247, 260, 0, 0,
	0, 0, 83, 654, 0, 84, 88, 78, 0, 0,
	0, 659, 0, 656, 661, 0, 98, 0, 0, 73,
	74, 711, 0, 0, 1103, 1105, 1107, 1109, 1111, 0,
	1114, 1122, 1118, 0, 1115, 0, 0, 1094, 0, 943,
	0, 0, 0, 0, 0, 0, 978, 979, 0, 0,
	983, 0, 0, 986, 0, 0, 0, 990, 0, 1028,
	1044, 1032, 0, 1036, 0, 1038, 0, 0, 961, 962,
	0, 0, 0, 0, 967, 0, 0, 0, 0, 0,
	0, 0, 1197, 1150, 1218, 0, 0, 0, 1199, 0,
	0, 0, 0, 0, 565, 457, 0, 0, 0, 500,
	498, 499, 484, 0, 0, 641, 1222, 698, 275, 0,
	0, 653, 0, 0, 694, -2, 701, 0, 707, 0,
	0, 0, 399, 403, 29, 485, 0, 537, 312, 0,
	350, 536, 336, 337, 536, 353, 350, 354, 350, 352,
	0, 363, 641, 275, 0, 0, 0, 0, 0, 569,
	0, 0, 568, 0, 0, 0, 0, 0, 484, 604,
	0, 606, 607, 616, 617, 580, -2, 0, 549, 586,
	0, 0, 209, 197, 199, 0, 0, 0, 0, 170,
	171, 172, 176, 177, 0, 0, 534, 539, 546, 610,
	612, 39, 542, 534, 0, 441, 443, 0, 0, 441,
	0, 0, 450, 0, 0, 441, 0, 0, 369, 49,
	266, 0, 0, 0, 0, 0, 384, 0, 658, 80,
	0, 0, 100, 0, 0, 0, 1090, 1116, 0, 1123,
	1119, 922, 930, 939, 0, 0, 945, 957, 957, 0,
	948, 1201, 1205, 951, 1201, 1203, 1201, 957, 957, 0,
	40, 0, 0, 984, 985, 0, 0, 0, 437, 0,
	0, 0, 960, 963, 964, 965, 966, 968, 969, 970,
	971, 972, 973, 974, 1207, 1206, 1192, 0, 1193, 1204,
	1209, 0, 1212, 0, 446, 461, 0, 489, 490, 495,
	496, 0, 0, 0, 811, 644, 642, 643, 0, 1223,
	648, 276, 277, 278, 279, 0, 0, 0, 652, 0,
	0, 690, 691, 692, 693, 702, 1222, 1222, 1222, 811,
	449, 0, -2, 0, 0, 401, 0, 0, 577, 314,
	536, 330, 344, 536, 536, 350, 365, 644, 648, 536,
	219, 0, 572, 566, 0, 555, 570, 571, 558, 0,
	560, 0, 556, 557, 536, 548, 579, 605, 581, 585,
	587, 588, 594, 0, 0, 0, 0, 0, 201, 158,
	0, 295, 164, 387, 808, 532, 0, 0, 532, 0,
	439, 0, 444, 441, 426, 435, 425, 432, 433, 452,
	441, 419, 418, 850, 1227, 1224, 1225, 242, 0, 655,
	80, 85, 86, 87, 81, 79, 662, 0, 664, 0,
	0, 0, 1120, 944, 931, 946, 958, 959, 947, 932,
	949, 950, 952, 953, 954, 955, 956, 933, 980, 0,
	982, 987, 988, 0, 1033, 1037, 0, 1200, 0, 0,
	463, 61, 0, 0, 501, 502, 0, 0, 0, 812,
	813, 815, 816, 0, 0, 818, 874, 0, 827, 697,
	827, 0, 0, 829, 830, 633, 0, 0, 636, 637,
	646, 0, 0, 0, 281, 282, 0, 0, 0, 294,
	290, 291, 292, 272, 647, 0, 0, 0, 0, 0,
	603, 0, 0, 536, 400, 403, 404, 483, 315, 348,
	345, 536, 269, 270, 491, 0, 0, 552, 573, 0,
	0, 553, 0, 554, 559, 561, 218, 589, 0, 0,
	591, 592, 593, 583, 584, 166, 522, 0, 0, 543,
	523, 430, 440, 424, 417, 82, 77, 663, 63, 0,
	63, 0, 989, 0, 1210, 1213, 465, 0, 462, 0,
	0, 0, 629, 484, -2, 0, -2, 817, 875, 839,
	839, 828, 839, 839, 697, 0, 645, 635, 0, 649,
	650, 0, 283, 284, 0, 287, 293, 0, 703, 704,
	805, 806, 705, 0, 536, 536, -2, 397, 402, 0,
	349, 486, 220, 221, 574, 0, 567, 598, 595, 0,
	0, 533, 535, 429, 31, 57, 0, 712, 0, 30,
	981, 1027, 467, 0, 464, 0, 458, 460, 71, 0,
	719, -2, 759, 1222, 1222, 0, 1222, 1222, 1222, 1222,
	0, 0, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 0, 814, 841, -2,
	853, 855, 0, 0, 858, 859, 0, 0, 0, 0,
	896, 865, 0, 0, 869, 0, 1138, 1139, 0, 873,
	0, 831, 840, 0, 840, 0, 0, 839, 0, 0,
	0, 280, 285, 0, 288, 289, 0, 685, 1201, 0,
	709, 63, 491, 398, 217, 0, 0, 599, 601, 596,
	597, 54, 59, 64, 65, 0, 0, 0, 0, 0,
	456, 0, 466, 62, 0, 0, 708, 0, 706, 761,
	0, 0, 1222, 1222, 0, 0, 0, 0, 1222, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 856, 857, 860, 861,
	862, 901, 902, 903, 863, 898, 899, 900, 864, 0,
	0, 0, 1136, 1137, 894, 0, 0, 0, 0, 0,
	0, 0, 825, 638, 0, 640, 286, 678, 0, 497,
	0, 710, 486, 575, 590, 0, 41, 0, 61, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 630, 755,
	760, 762, 763, 0, 0, 766, 767, 768, 769, 0,
	0, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 797, 798, 799, 800, 801, 802, 782, 783, 784,
	785, 786, 787, 794, 0, 0, 791, 0, 0, 0,
	1041, 889, 0, 0, 832, 834, 835, 836, 837, 838,
	833, 0, 0, 0, 0, 824, 826, 870, 0, 639,
	677, 686, 687, 497, 396, 600, 602, 32, 0, 0,
	58, 0, 67, 0, 69, 70, 0, 0, 469, 459,
	743, 0, 0, 749, 0, 756, 764, 765, 770, 771,
	788, 0, 0, 790, 0, 0, 897, 0, 868, 877,
	890, 0, 0, 678, 678, 678, 678, 0, 871, 679,
	1222, 0, 0, 683, 684, 688, 716, 0, 42, 0,
	44, 46, 47, 842, 55, 56, 60, 68, 713, 0,
	468, 0, 721, 0, 0, 0, 0, 0, 753, 0,
	795, 796, 789, 792, 793, 866, 876, 878, 879, 0,
	891, 892, 893, 895, 819, 820, 821, 822, 0, 0,
	681, 0, 33, 34, 0, 43, 0, 0, 0, 470,
	723, 0, 744, 0, 0, 0, 0, 0, 0, 0,
	867, 880, 0, 881, 0, 0, 0, 823, 680, 682,
	0, 0, 45, 843, 0, 720, 0, 755, 745, 0,
	747, 0, 0, 0, 0, 882, 884, 885, 0, 0,
	883, 35, 36, 37, 0, 0, 0, 725, 0, 741,
	746, 748, 750, 0, 754, 752, 886, 888, 887, 844,
	714, 0, 724, 0, 737, 722, 0, 751, 0, 726,
	-2, 0, 742, 0, 727, -2, 0, 735, 0, 0,
	0, 728, 736, 0, 731, 0, 0, 0, 715, 730,
	0, -2, 738, 0, 0, 732, -2, 0, 740, 739,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 510,
	104, 103, 105, 3, 511, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 512, 115, 513, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:583
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:589
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:621
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:625
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:634
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:646
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:661
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:667
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:671
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:677
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:684
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:693
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:697
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:701
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:714
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:720
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:729
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:740
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:744
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:750
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:754
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:760
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:764
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:770
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:794
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:813
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:817
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:821
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:830
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:838
		{
			yyVAL.str = ""
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:842
		{
			yyVAL.str = yyDollar[3].str
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:847
		{
			yyVAL.str = "\n"
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:851
		{
			yyVAL.str = yyDollar[3].str
		}
	case 63:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:860
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:884
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:888
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:894
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:900
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:918
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:935
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:958
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:966
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1005
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1032
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1058
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1064
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1070
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1077
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1085
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1094
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1098
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1102
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1106
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1110
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1114
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1121
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1125
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1131
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1138
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1147
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1151
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1157
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1161
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1165
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1169
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1173
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1177
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1185
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1365
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1372
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1379
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1388
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1422
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1432
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1438
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1442
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1449
		{
			yyVAL.str = yyDollar[3].str
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1455
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1459
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1473
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1482
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1490
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1498
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1521
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1558
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1589
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1593
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1603
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1607
		{
			yyVAL.str = yyDollar[1].str
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1614
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1620
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1624
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1635
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1641
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1662
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1666
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1670
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1674
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1684
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1692
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1696
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1706
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1712
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1719
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1749
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1756
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1767
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1782
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1788
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1800
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1826
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1842
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1862
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1930
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1936
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1942
		{
			yyVAL.str = yyDollar[1].str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1947
		{
			yyVAL.str = "true"
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1948
		{
			yyVAL.str = "false"
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1949
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1977
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1992
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2010
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2070
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2092
		{
			yyVAL.item = nil
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2097
		{
			yyVAL.item = nil
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2140
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2151
		{
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2155
		{
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2160
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2181
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2189
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2215
		{
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2217
		{
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2253
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2259
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2338
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2343
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2347
		{
			yyVAL.str = yyDollar[2].str
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2353
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2376
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2381
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2391
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2395
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2408
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2441
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2459
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2463
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2469
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2515
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2551
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2575
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2579
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2585
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2590
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2597
		{
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2599
		{
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2602
		{
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2611
		{
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2615
		{
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2629
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2642
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2650
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2657
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2664
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2684
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2694
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2701
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2707
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2715
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2729
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2752
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2775
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2779
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2785
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2794
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2798
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2804
		{
			yyVAL.str = yyDollar[1].str
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2808
		{
			yyVAL.str = yyDollar[3].str
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2814
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2818
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2824
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2829
		{
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2840
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2844
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2860
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2866
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2870
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2876
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2880
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2916
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2934
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2966
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2970
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2983
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2987
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2992
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2996
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3003
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3008
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3015
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3033
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3037
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3063
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3067
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3073
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3085
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3094
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3117
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3123
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3129
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3133
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3144
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3148
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3152
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3157
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3161
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3165
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3181
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3205
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3215
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3235
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3243
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3260
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3385
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3394
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3400
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3404
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3410
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3414
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3418
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3422
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3427
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3435
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3441
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3449
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3467
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3473
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3491
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3510
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3514
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3524
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3528
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3532
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3536
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3542
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3552
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3556
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3562
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3578
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3584
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3588
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3592
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3602
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3618
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3622
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3628
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3632
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3642
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3655
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3661
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3667
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3709
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3713
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3729
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3733
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3737
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3742
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3746
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3750
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3754
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3763
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3767
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3771
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3775
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3780
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3784
		{
			yyVAL.str = yyDollar[1].str
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3788
		{
			yyVAL.str = yyDollar[2].str
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3797
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3801
		{
			yyVAL.str = yyDollar[1].str
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3805
		{
			yyVAL.str = yyDollar[2].str
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3809
		{
			yyVAL.str = yyDollar[1].str
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3813
		{
			yyVAL.str = yyDollar[2].str
		}
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3868
		{
		}
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3873
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3891
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3901
		{
			yyVAL.str = yyDollar[1].str
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3905
		{
			yyVAL.str = yyDollar[1].str
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3911
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3918
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3924
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3932
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3938
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3945
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3953
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3959
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3968
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3980
		{
			yyVAL.str = yyDollar[1].str
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3985
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3991
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3999
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4105
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4109
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4115
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4125
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4129
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4145
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4149
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4153
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4162
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4168
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4175
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4194
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4203
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4207
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4213
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4230
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4234
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4248
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4271
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4315
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4319
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4325
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4330
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4335
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4339
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4343
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4347
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4351
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4357
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4384
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4390
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4394
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4404
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4408
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4423
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4434
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4445
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4452
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4460
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4472
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4484
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4497
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4512
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4523
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4536
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4550
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4563
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4569
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4573
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4588
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4602
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4608
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4612
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4618
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4625
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4634
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4638
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4647
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4652
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4661
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4665
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4675
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4679
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4690
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4698
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4744
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4754
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4758
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4763
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4767
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4776
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4782
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4786
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4790
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4796
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4800
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4804
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4808
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4812
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4824
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4828
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4832
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4836
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4852
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4856
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4860
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4868
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4872
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4876
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4884
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4888
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4896
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4900
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4904
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4908
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4915
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4919
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4925
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4930
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4934
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4938
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4956
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4960
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4964
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4982
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4991
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4996
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5013
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5023
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5029
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5039
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5045
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5054
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5063
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5086
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5095
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5113
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5119
		{
			yyVAL.str = ""
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5123
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5133
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5139
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5145
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5159
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5166
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5199
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5208
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5214
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5218
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5224
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5232
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5236
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5240
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5244
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5252
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5264
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5272
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5276
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5289
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5299
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5304
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5308
		{
			yyVAL.str = yyDollar[1].str
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5314
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5318
		{
			yyVAL.str = yyDollar[2].str
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5324
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5336
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5343
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5350
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5357
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5364
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5373
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5379
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5397
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5401
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5413
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5417
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5421
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5430
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5435
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5439
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5455
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5465
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5469
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5473
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5477
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5481
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5497
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5501
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5509
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5515
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5519
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5523
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5531
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5551
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5555
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5559
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5564
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5572
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5576
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5580
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5589
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5593
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5597
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5601
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5614
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5629
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5633
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5639
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5649
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5683
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5696
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5709
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5721
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5735
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5765
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5797
		{
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5812
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5837
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5846
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5855
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5864
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5873
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5882
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5900
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5909
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5918
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5927
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5943
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5951
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5959
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5967
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5975
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5984
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6001
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6010
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6026
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6035
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6044
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6065
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6101
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6113
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6135
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6143
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6150
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6157
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6169
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6177
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6188
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6197
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6206
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6214
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6224
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6232
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6240
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6264
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6283
		{
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6285
		{
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6326
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6336
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6344
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6359
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6365
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6369
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6384
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6392
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6396
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6400
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6404
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6434
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6438
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6446
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6458
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6466
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6474
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6478
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6482
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6492
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6498
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6502
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6509
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6513
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6517
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6523
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6527
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6531
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6535
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6539
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6543
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6547
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6553
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6557
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6561
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6565
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6571
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6575
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6588
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6593
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6597
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6601
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6605
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6609
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6613
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6633
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6644
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6649
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6704
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6717
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6730
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6756
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6769
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6795
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6836
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6859
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6893
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6958
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6970
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6990
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7010
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7030
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7059
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7085
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7098
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7146
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7170
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7194
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7206
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7219
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7232
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7247
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7255
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7264
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7274
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7297
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7302
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7308
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7315
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7319
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7324
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7328
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7334
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7340
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7354
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7370
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7377
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7390
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7394
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7400
		{
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7402
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7412
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7416
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

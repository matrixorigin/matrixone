// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const INTEGRAL = 57435
const HEX = 57436
const BIT_LITERAL = 57437
const FLOAT = 57438
const HEXNUM = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const LOWER_THAN_CHARSET = 57443
const CHARSET = 57444
const UNIQUE = 57445
const KEY = 57446
const OR = 57447
const PIPE_CONCAT = 57448
const XOR = 57449
const AND = 57450
const NOT = 57451
const BETWEEN = 57452
const CASE = 57453
const WHEN = 57454
const THEN = 57455
const ELSE = 57456
const END = 57457
const ELSEIF = 57458
const LOWER_THAN_EQ = 57459
const LE = 57460
const GE = 57461
const NE = 57462
const NULL_SAFE_EQUAL = 57463
const IS = 57464
const LIKE = 57465
const REGEXP = 57466
const IN = 57467
const ASSIGNMENT = 57468
const ILIKE = 57469
const SHIFT_LEFT = 57470
const SHIFT_RIGHT = 57471
const DIV = 57472
const MOD = 57473
const UNARY = 57474
const COLLATE = 57475
const BINARY = 57476
const UNDERSCORE_BINARY = 57477
const INTERVAL = 57478
const OUT = 57479
const INOUT = 57480
const BEGIN = 57481
const START = 57482
const TRANSACTION = 57483
const COMMIT = 57484
const ROLLBACK = 57485
const WORK = 57486
const CONSISTENT = 57487
const SNAPSHOT = 57488
const CHAIN = 57489
const NO = 57490
const RELEASE = 57491
const PRIORITY = 57492
const QUICK = 57493
const BIT = 57494
const TINYINT = 57495
const SMALLINT = 57496
const MEDIUMINT = 57497
const INT = 57498
const INTEGER = 57499
const BIGINT = 57500
const INTNUM = 57501
const REAL = 57502
const DOUBLE = 57503
const FLOAT_TYPE = 57504
const DECIMAL = 57505
const NUMERIC = 57506
const DECIMAL_VALUE = 57507
const TIME = 57508
const TIMESTAMP = 57509
const DATETIME = 57510
const YEAR = 57511
const CHAR = 57512
const VARCHAR = 57513
const BOOL = 57514
const CHARACTER = 57515
const VARBINARY = 57516
const NCHAR = 57517
const TEXT = 57518
const TINYTEXT = 57519
const MEDIUMTEXT = 57520
const LONGTEXT = 57521
const BLOB = 57522
const TINYBLOB = 57523
const MEDIUMBLOB = 57524
const LONGBLOB = 57525
const JSON = 57526
const ENUM = 57527
const UUID = 57528
const GEOMETRY = 57529
const POINT = 57530
const LINESTRING = 57531
const POLYGON = 57532
const GEOMETRYCOLLECTION = 57533
const MULTIPOINT = 57534
const MULTILINESTRING = 57535
const MULTIPOLYGON = 57536
const INT1 = 57537
const INT2 = 57538
const INT3 = 57539
const INT4 = 57540
const INT8 = 57541
const S3OPTION = 57542
const SQL_SMALL_RESULT = 57543
const SQL_BIG_RESULT = 57544
const SQL_BUFFER_RESULT = 57545
const LOW_PRIORITY = 57546
const HIGH_PRIORITY = 57547
const DELAYED = 57548
const CREATE = 57549
const ALTER = 57550
const DROP = 57551
const RENAME = 57552
const ANALYZE = 57553
const ADD = 57554
const RETURNS = 57555
const SCHEMA = 57556
const TABLE = 57557
const SEQUENCE = 57558
const INDEX = 57559
const VIEW = 57560
const TO = 57561
const IGNORE = 57562
const IF = 57563
const PRIMARY = 57564
const COLUMN = 57565
const CONSTRAINT = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const FOREIGN = 57569
const KEY_BLOCK_SIZE = 57570
const SHOW = 57571
const DESCRIBE = 57572
const EXPLAIN = 57573
const DATE = 57574
const ESCAPE = 57575
const REPAIR = 57576
const OPTIMIZE = 57577
const TRUNCATE = 57578
const MAXVALUE = 57579
const PARTITION = 57580
const REORGANIZE = 57581
const LESS = 57582
const THAN = 57583
const PROCEDURE = 57584
const TRIGGER = 57585
const STATUS = 57586
const VARIABLES = 57587
const ROLE = 57588
const PROXY = 57589
const AVG_ROW_LENGTH = 57590
const STORAGE = 57591
const DISK = 57592
const MEMORY = 57593
const CHECKSUM = 57594
const COMPRESSION = 57595
const DATA = 57596
const DIRECTORY = 57597
const DELAY_KEY_WRITE = 57598
const ENCRYPTION = 57599
const ENGINE = 57600
const MAX_ROWS = 57601
const MIN_ROWS = 57602
const PACK_KEYS = 57603
const ROW_FORMAT = 57604
const STATS_AUTO_RECALC = 57605
const STATS_PERSISTENT = 57606
const STATS_SAMPLE_PAGES = 57607
const DYNAMIC = 57608
const COMPRESSED = 57609
const REDUNDANT = 57610
const COMPACT = 57611
const FIXED = 57612
const COLUMN_FORMAT = 57613
const AUTO_RANDOM = 57614
const ENGINE_ATTRIBUTE = 57615
const SECONDARY_ENGINE_ATTRIBUTE = 57616
const INSERT_METHOD = 57617
const RESTRICT = 57618
const CASCADE = 57619
const ACTION = 57620
const PARTIAL = 57621
const SIMPLE = 57622
const CHECK = 57623
const ENFORCED = 57624
const RANGE = 57625
const LIST = 57626
const ALGORITHM = 57627
const LINEAR = 57628
const PARTITIONS = 57629
const SUBPARTITION = 57630
const SUBPARTITIONS = 57631
const CLUSTER = 57632
const TYPE = 57633
const ANY = 57634
const SOME = 57635
const EXTERNAL = 57636
const LOCALFILE = 57637
const URL = 57638
const PREPARE = 57639
const DEALLOCATE = 57640
const RESET = 57641
const EXTENSION = 57642
const INCREMENT = 57643
const CYCLE = 57644
const MINVALUE = 57645
const PUBLICATION = 57646
const SUBSCRIPTIONS = 57647
const PUBLICATIONS = 57648
const PROPERTIES = 57649
const PARSER = 57650
const VISIBLE = 57651
const INVISIBLE = 57652
const BTREE = 57653
const HASH = 57654
const RTREE = 57655
const BSI = 57656
const ZONEMAP = 57657
const LEADING = 57658
const BOTH = 57659
const TRAILING = 57660
const UNKNOWN = 57661
const EXPIRE = 57662
const ACCOUNT = 57663
const ACCOUNTS = 57664
const UNLOCK = 57665
const DAY = 57666
const NEVER = 57667
const PUMP = 57668
const MYSQL_COMPATIBILITY_MODE = 57669
const SECOND = 57670
const ASCII = 57671
const COALESCE = 57672
const COLLATION = 57673
const HOUR = 57674
const MICROSECOND = 57675
const MINUTE = 57676
const MONTH = 57677
const QUARTER = 57678
const REPEAT = 57679
const REVERSE = 57680
const ROW_COUNT = 57681
const WEEK = 57682
const REVOKE = 57683
const FUNCTION = 57684
const PRIVILEGES = 57685
const TABLESPACE = 57686
const EXECUTE = 57687
const SUPER = 57688
const GRANT = 57689
const OPTION = 57690
const REFERENCES = 57691
const REPLICATION = 57692
const SLAVE = 57693
const CLIENT = 57694
const USAGE = 57695
const RELOAD = 57696
const FILE = 57697
const TEMPORARY = 57698
const ROUTINE = 57699
const EVENT = 57700
const SHUTDOWN = 57701
const NULLX = 57702
const AUTO_INCREMENT = 57703
const APPROXNUM = 57704
const SIGNED = 57705
const UNSIGNED = 57706
const ZEROFILL = 57707
const ENGINES = 57708
const LOW_CARDINALITY = 57709
const AUTOEXTEND_SIZE = 57710
const ADMIN_NAME = 57711
const RANDOM = 57712
const SUSPEND = 57713
const ATTRIBUTE = 57714
const HISTORY = 57715
const REUSE = 57716
const CURRENT = 57717
const OPTIONAL = 57718
const FAILED_LOGIN_ATTEMPTS = 57719
const PASSWORD_LOCK_TIME = 57720
const UNBOUNDED = 57721
const SECONDARY = 57722
const RESTRICTED = 57723
const USER = 57724
const IDENTIFIED = 57725
const CIPHER = 57726
const ISSUER = 57727
const X509 = 57728
const SUBJECT = 57729
const SAN = 57730
const REQUIRE = 57731
const SSL = 57732
const NONE = 57733
const PASSWORD = 57734
const SHARED = 57735
const EXCLUSIVE = 57736
const MAX_QUERIES_PER_HOUR = 57737
const MAX_UPDATES_PER_HOUR = 57738
const MAX_CONNECTIONS_PER_HOUR = 57739
const MAX_USER_CONNECTIONS = 57740
const FORMAT = 57741
const VERBOSE = 57742
const CONNECTION = 57743
const TRIGGERS = 57744
const PROFILES = 57745
const LOAD = 57746
const INFILE = 57747
const TERMINATED = 57748
const OPTIONALLY = 57749
const ENCLOSED = 57750
const ESCAPED = 57751
const STARTING = 57752
const LINES = 57753
const ROWS = 57754
const IMPORT = 57755
const DISCARD = 57756
const MODUMP = 57757
const OVER = 57758
const PRECEDING = 57759
const FOLLOWING = 57760
const GROUPS = 57761
const DATABASES = 57762
const TABLES = 57763
const SEQUENCES = 57764
const EXTENDED = 57765
const FULL = 57766
const PROCESSLIST = 57767
const FIELDS = 57768
const COLUMNS = 57769
const OPEN = 57770
const ERRORS = 57771
const WARNINGS = 57772
const INDEXES = 57773
const SCHEMAS = 57774
const NODE = 57775
const LOCKS = 57776
const ROLES = 57777
const TABLE_NUMBER = 57778
const COLUMN_NUMBER = 57779
const TABLE_VALUES = 57780
const TABLE_SIZE = 57781
const NAMES = 57782
const GLOBAL = 57783
const PERSIST = 57784
const SESSION = 57785
const ISOLATION = 57786
const LEVEL = 57787
const READ = 57788
const WRITE = 57789
const ONLY = 57790
const REPEATABLE = 57791
const COMMITTED = 57792
const UNCOMMITTED = 57793
const SERIALIZABLE = 57794
const LOCAL = 57795
const EVENTS = 57796
const PLUGINS = 57797
const CURRENT_TIMESTAMP = 57798
const DATABASE = 57799
const CURRENT_TIME = 57800
const LOCALTIME = 57801
const LOCALTIMESTAMP = 57802
const UTC_DATE = 57803
const UTC_TIME = 57804
const UTC_TIMESTAMP = 57805
const REPLACE = 57806
const CONVERT = 57807
const SEPARATOR = 57808
const TIMESTAMPDIFF = 57809
const CURRENT_DATE = 57810
const CURRENT_USER = 57811
const CURRENT_ROLE = 57812
const SECOND_MICROSECOND = 57813
const MINUTE_MICROSECOND = 57814
const MINUTE_SECOND = 57815
const HOUR_MICROSECOND = 57816
const HOUR_SECOND = 57817
const HOUR_MINUTE = 57818
const DAY_MICROSECOND = 57819
const DAY_SECOND = 57820
const DAY_MINUTE = 57821
const DAY_HOUR = 57822
const YEAR_MONTH = 57823
const SQL_TSI_HOUR = 57824
const SQL_TSI_DAY = 57825
const SQL_TSI_WEEK = 57826
const SQL_TSI_MONTH = 57827
const SQL_TSI_QUARTER = 57828
const SQL_TSI_YEAR = 57829
const SQL_TSI_SECOND = 57830
const SQL_TSI_MINUTE = 57831
const RECURSIVE = 57832
const CONFIG = 57833
const DRAINER = 57834
const MATCH = 57835
const AGAINST = 57836
const BOOLEAN = 57837
const LANGUAGE = 57838
const WITH = 57839
const QUERY = 57840
const EXPANSION = 57841
const WITHOUT = 57842
const VALIDATION = 57843
const ADDDATE = 57844
const BIT_AND = 57845
const BIT_OR = 57846
const BIT_XOR = 57847
const CAST = 57848
const COUNT = 57849
const APPROX_COUNT_DISTINCT = 57850
const APPROX_PERCENTILE = 57851
const CURDATE = 57852
const CURTIME = 57853
const DATE_ADD = 57854
const DATE_SUB = 57855
const EXTRACT = 57856
const GROUP_CONCAT = 57857
const MAX = 57858
const MID = 57859
const MIN = 57860
const NOW = 57861
const POSITION = 57862
const SESSION_USER = 57863
const STD = 57864
const STDDEV = 57865
const MEDIAN = 57866
const STDDEV_POP = 57867
const STDDEV_SAMP = 57868
const SUBDATE = 57869
const SUBSTR = 57870
const SUBSTRING = 57871
const SUM = 57872
const SYSDATE = 57873
const SYSTEM_USER = 57874
const TRANSLATE = 57875
const TRIM = 57876
const VARIANCE = 57877
const VAR_POP = 57878
const VAR_SAMP = 57879
const AVG = 57880
const RANK = 57881
const ROW_NUMBER = 57882
const DENSE_RANK = 57883
const NEXTVAL = 57884
const SETVAL = 57885
const CURRVAL = 57886
const LASTVAL = 57887
const ARROW = 57888
const ROW = 57889
const OUTFILE = 57890
const HEADER = 57891
const MAX_FILE_SIZE = 57892
const FORCE_QUOTE = 57893
const PARALLEL = 57894
const UNUSED = 57895
const BINDINGS = 57896
const DO = 57897
const DECLARE = 57898
const LOOP = 57899
const WHILE = 57900
const LEAVE = 57901
const ITERATE = 57902
const UNTIL = 57903
const CALL = 57904
const SPBEGIN = 57905
const BACKEND = 57906
const SERVERS = 57907
const KILL = 57908
const QUERY_RESULT = 57909

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10074

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 113,
	21, 680,
	-2, 661,
	-1, 127,
	234, 935,
	-2, 1006,
	-1, 150,
	42, 501,
	234, 501,
	261, 508,
	262, 508,
	448, 501,
	-2, 534,
	-1, 186,
	586, 1701,
	-2, 419,
	-1, 513,
	313, 130,
	422, 130,
	-2, 1613,
	-1, 576,
	81, 1412,
	-2, 1755,
	-1, 577,
	81, 1430,
	-2, 1726,
	-1, 581,
	81, 1431,
	-2, 1754,
	-1, 606,
	81, 1342,
	-2, 1819,
	-1, 607,
	81, 1343,
	-2, 1818,
	-1, 608,
	81, 1344,
	-2, 1808,
	-1, 609,
	81, 1783,
	-2, 1803,
	-1, 610,
	81, 1784,
	-2, 1804,
	-1, 611,
	81, 1785,
	-2, 1810,
	-1, 612,
	81, 1786,
	-2, 1793,
	-1, 613,
	81, 1787,
	-2, 1801,
	-1, 614,
	81, 1788,
	-2, 1811,
	-1, 615,
	81, 1789,
	-2, 1812,
	-1, 616,
	81, 1790,
	-2, 1817,
	-1, 617,
	81, 1791,
	-2, 1822,
	-1, 618,
	81, 1792,
	-2, 1823,
	-1, 620,
	81, 1409,
	-2, 1602,
	-1, 624,
	81, 1414,
	-2, 1614,
	-1, 627,
	81, 1418,
	-2, 1632,
	-1, 631,
	81, 1422,
	-2, 1672,
	-1, 632,
	81, 1423,
	-2, 1750,
	-1, 640,
	81, 1433,
	-2, 1735,
	-1, 641,
	81, 1434,
	-2, 1780,
	-1, 642,
	81, 1435,
	-2, 1745,
	-1, 643,
	81, 1436,
	-2, 1770,
	-1, 654,
	81, 1320,
	-2, 1813,
	-1, 655,
	81, 1321,
	-2, 1814,
	-1, 656,
	81, 1322,
	-2, 1815,
	-1, 660,
	21, 681,
	-2, 644,
	-1, 737,
	443, 534,
	444, 534,
	-2, 502,
	-1, 781,
	121, 1602,
	132, 1602,
	152, 1602,
	-2, 1577,
	-1, 884,
	21, 681,
	-2, 644,
	-1, 984,
	21, 680,
	-2, 1220,
	-1, 1346,
	81, 1480,
	-2, 1752,
	-1, 1347,
	81, 1481,
	-2, 1753,
	-1, 1481,
	82, 825,
	-2, 831,
	-1, 1851,
	82, 1563,
	153, 1563,
	-2, 1737,
	-1, 1852,
	82, 1563,
	153, 1563,
	-2, 1736,
	-1, 1853,
	82, 1541,
	153, 1541,
	-2, 1723,
	-1, 1854,
	82, 1542,
	153, 1542,
	-2, 1728,
	-1, 1855,
	82, 1543,
	153, 1543,
	-2, 1660,
	-1, 1856,
	82, 1544,
	153, 1544,
	-2, 1654,
	-1, 1857,
	82, 1545,
	153, 1545,
	-2, 1593,
	-1, 1858,
	82, 1546,
	153, 1546,
	-2, 1725,
	-1, 1859,
	82, 1547,
	153, 1547,
	-2, 1658,
	-1, 1860,
	82, 1548,
	153, 1548,
	-2, 1653,
	-1, 1861,
	82, 1549,
	153, 1549,
	-2, 1646,
	-1, 1863,
	82, 1552,
	153, 1552,
	-2, 1770,
	-1, 1864,
	82, 1532,
	153, 1532,
	-2, 1755,
	-1, 1865,
	82, 1561,
	153, 1561,
	-2, 1726,
	-1, 1866,
	82, 1561,
	153, 1561,
	-2, 1754,
	-1, 1867,
	82, 1561,
	153, 1561,
	-2, 1615,
	-1, 1868,
	82, 1559,
	153, 1559,
	-2, 1745,
	-1, 1869,
	82, 1556,
	153, 1556,
	-2, 1637,
	-1, 1870,
	81, 1513,
	82, 1513,
	153, 1513,
	380, 1513,
	381, 1513,
	382, 1513,
	-2, 1592,
	-1, 1871,
	81, 1514,
	82, 1514,
	153, 1514,
	380, 1514,
	381, 1514,
	382, 1514,
	-2, 1594,
	-1, 1872,
	81, 1517,
	82, 1517,
	153, 1517,
	380, 1517,
	381, 1517,
	382, 1517,
	-2, 1727,
	-1, 1873,
	81, 1519,
	82, 1519,
	153, 1519,
	380, 1519,
	381, 1519,
	382, 1519,
	-2, 1710,
	-1, 1874,
	81, 1521,
	82, 1521,
	153, 1521,
	380, 1521,
	381, 1521,
	382, 1521,
	-2, 1659,
	-1, 1875,
	81, 1523,
	82, 1523,
	153, 1523,
	380, 1523,
	381, 1523,
	382, 1523,
	-2, 1642,
	-1, 1876,
	81, 1524,
	82, 1524,
	153, 1524,
	380, 1524,
	381, 1524,
	382, 1524,
	-2, 1643,
	-1, 1877,
	81, 1526,
	82, 1526,
	153, 1526,
	380, 1526,
	381, 1526,
	382, 1526,
	-2, 1591,
	-1, 1878,
	82, 1566,
	153, 1566,
	380, 1566,
	381, 1566,
	382, 1566,
	-2, 1620,
	-1, 1879,
	82, 1566,
	153, 1566,
	380, 1566,
	381, 1566,
	382, 1566,
	-2, 1633,
	-1, 1880,
	82, 1569,
	153, 1569,
	380, 1569,
	381, 1569,
	382, 1569,
	-2, 1616,
	-1, 1881,
	82, 1569,
	153, 1569,
	380, 1569,
	381, 1569,
	382, 1569,
	-2, 1675,
	-1, 1882,
	82, 1566,
	153, 1566,
	380, 1566,
	381, 1566,
	382, 1566,
	-2, 1695,
	-1, 1898,
	104, 970,
	148, 970,
	187, 970,
	190, 970,
	274, 970,
	-2, 963,
	-1, 2030,
	21, 680,
	-2, 774,
	-1, 2223,
	104, 970,
	148, 970,
	187, 970,
	190, 970,
	274, 970,
	-2, 964,
	-1, 2235,
	79, 590,
	153, 590,
	-2, 1109,
	-1, 2257,
	190, 970,
	298, 1188,
	-2, 1162,
	-1, 2558,
	190, 970,
	298, 1188,
	-2, 1163,
	-1, 2708,
	104, 970,
	148, 970,
	187, 970,
	190, 970,
	-2, 1052,
	-1, 2711,
	104, 970,
	148, 970,
	187, 970,
	190, 970,
	-2, 1052,
	-1, 2721,
	79, 590,
	153, 590,
	-2, 1110,
	-1, 2836,
	104, 970,
	148, 970,
	187, 970,
	190, 970,
	-2, 1053,
	-1, 3168,
	82, 1024,
	153, 1024,
	-2, 970,
	-1, 3172,
	82, 1024,
	153, 1024,
	-2, 970,
	-1, 3186,
	82, 1028,
	153, 1028,
	-2, 970,
	-1, 3191,
	82, 1029,
	153, 1029,
	-2, 970,
}

const yyPrivate = 57344

const yyLast = 37910

var yyAct = [...]int{
	543, 1265, 3172, 3171, 1554, 3151, 177, 3180, 522, 3053,
	1327, 524, 545, 3110, 2830, 3076, 3098, 2798, 532, 2793,
	2972, 3004, 2861, 2572, 3005, 2986, 1829, 2964, 1323, 2597,
	1187, 2657, 2990, 2829, 2826, 2895, 661, 2658, 2828, 430,
	1128, 2926, 1015, 780, 2885, 2796, 2973, 2975, 1255, 436,
	1512, 441, 441, 573, 2699, 2835, 2530, 441, 457, 466,
	2238, 1330, 466, 2731, 2685, 2788, 2347, 2348, 558, 113,
	2346, 2518, 1644, 2688, 113, 2330, 2587, 1937, 2559, 2340,
	2655, 526, 1849, 1737, 1609, 2838, 2123, 162, 2643, 1940,
	2369, 2626, 2214, 2499, 2343, 2502, 2497, 2253, 878, 1081,
	471, 1907, 2586, 2024, 2224, 1706, 1251, 1641, 2528, 2008,
	515, 477, 516, 1656, 1839, 1180, 1715, 521, 1714, 2406,
	1847, 2164, 2122, 447, 1514, 1733, 113, 2445, 1962, 1246,
	714, 1463, 1104, 1707, 2072, 1732, 1680, 2389, 1637, 2013,
	2025, 1264, 2203, 786, 1612, 774, 2198, 2259, 1938, 1259,
	54, 173, 8, 1550, 430, 6, 1541, 172, 7, 1490,
	1906, 2531, 1471, 2089, 832, 1321, 36, 1765, 525, 1734,
	2052, 1220, 1196, 1845, 1102, 1166, 2533, 177, 1889, 177,
	1256, 823, 824, 112, 429, 435, 2532, 1376, 1744, 523,
	516, 1312, 1524, 784, 744, 35, 1360, 533, 26, 895,
	1713, 1523, 15, 514, 1117, 13, 1696, 1610, 1710, 1227,
	2165, 1320, 1136, 14, 1670, 773, 32, 2032, 453, 1165,
	450, 713, 1489, 658, 463, 1382, 788, 1163, 1381, 479,
	113, 480, 23, 16, 1219, 1053, 10, 1129, 163, 465,
	1077, 691, 1113, 711, 159, 113, 695, 113, 156, 1326,
	1741, 2920, 2439, 2439, 2702, 1751, 462, 660, 732, 2125,
	458, 2650, 2078, 460, 819, 2075, 821, 2073, 2076, 1234,
	1230, 461, 816, 815, 459, 820, 816, 1137, 160, 816,
	50, 152, 128, 161, 437, 1149, 1232, 953, 954, 955,
	952, 953, 954, 955, 952, 1016, 2786, 2402, 153, 2400,
	1685, 469, 2891, 446, 2886, 145, 2789, 2656, 790, 154,
	1467, 2977, 1010, 8, 1709, 659, 3044, 814, 1970, 7,
	160, 669, 50, 152, 128, 160, 2815, 160, 111, 50,
	152, 128, 160, 160, 160, 160, 50, 152, 128, 160,
	160, 787, 160, 99, 2937, 1279, 2686, 2810, 916, 157,
	1069, 2110, 1272, 789, 1738, 2118, 2947, 475, 649, 2468,
	648, 650, 651, 1094, 652, 653, 1749, 1145, 1893, 2050,
	1146, 924, 950, 2038, 926, 1276, 2037, 476, 2813, 2039,
	2051, 1313, 1269, 2421, 1317, 2414, 2376, 2377, 2938, 111,
	111, 157, 931, 1654, 2375, 932, 1278, 1297, 157, 1622,
	1623, 1070, 927, 1271, 157, 157, 157, 1167, 1316, 1169,
	157, 157, 1125, 157, 1475, 1476, 1621, 662, 670, 2200,
	1134, 1135, 2090, 934, 115, 116, 1132, 117, 118, 2201,
	1131, 1134, 1135, 753, 3094, 943, 2806, 3092, 762, 1537,
	441, 1329, 3008, 3009, 948, 783, 782, 2980, 3040, 2980,
	441, 888, 2979, 3039, 2978, 3038, 1148, 2979, 2978, 1820,
	3080, 3081, 2659, 2893, 2407, 887, 2966, 2966, 466, 466,
	3043, 441, 2896, 2897, 2898, 2899, 2199, 920, 2408, 2969,
	2409, 2889, 2659, 883, 885, 2105, 1332, 1318, 898, 889,
	1638, 2983, 127, 151, 158, 2668, 97, 1628, 929, 1308,
	922, 2511, 2689, 1745, 2820, 2696, 1233, 1231, 1315, 2513,
	1632, 826, 925, 928, 150, 144, 143, 2503, 2286, 2002,
	1888, 56, 2915, 113, 113, 788, 701, 2434, 2189, 986,
	946, 947, 1416, 1693, 127, 2582, 158, 1968, 921, 1240,
	1239, 882, 2982, 2206, 2432, 919, 945, 2115, 2787, 2334,
	2401, 3046, 3047, 2507, 2508, 2509, 150, 2005, 898, 930,
	2004, 2918, 2817, 510, 2907, 2805, 512, 2908, 2009, 3096,
	2510, 511, 2807, 3087, 785, 888, 2527, 758, 2595, 2596,
	757, 2537, 146, 147, 148, 2996, 911, 3007, 2934, 1020,
	468, 884, 2231, 467, 2339, 1331, 984, 1754, 1756, 1757,
	2218, 2219, 2220, 2221, 1123, 1895, 2755, 790, 155, 1147,
	1750, 936, 2991, 923, 937, 2862, 2863, 2864, 2866, 2865,
	2910, 463, 463, 1314, 3165, 3181, 107, 1157, 2599, 3126,
	149, 3119, 108, 2760, 933, 1652, 1653, 941, 942, 3055,
	787, 3091, 939, 704, 1112, 705, 2914, 2746, 1338, 1341,
	1342, 2909, 789, 462, 462, 3130, 1019, 458, 458, 1339,
	460, 460, 3051, 3052, 2505, 3055, 763, 1979, 461, 461,
	1978, 459, 459, 891, 892, 902, 900, 899, 790, 3101,
	1075, 436, 1078, 759, 1956, 2212, 2919, 2672, 2438, 109,
	1176, 1958, 2314, 1175, 1050, 702, 909, 2735, 2741, 1110,
	49, 1999, 2000, 1109, 908, 1127, 1126, 904, 905, 1739,
	1108, 787, 1739, 714, 3182, 1739, 3152, 935, 988, 989,
	990, 991, 3188, 789, 1943, 2927, 879, 2484, 816, 816,
	3176, 1058, 992, 816, 517, 816, 2713, 816, 464, 3045,
	816, 893, 2935, 1766, 761, 464, 900, 899, 1957, 51,
	1133, 2054, 2074, 940, 1740, 1752, 1235, 2784, 1082, 441,
	475, 1159, 2963, 2936, 1164, 2371, 2373, 430, 430, 2111,
	2042, 1961, 1130, 1966, 1742, 1946, 430, 430, 938, 1088,
	1191, 1191, 129, 441, 1083, 1084, 1085, 1086, 1087, 2814,
	1089, 2437, 3097, 1092, 1093, 659, 1134, 1135, 51, 1134,
	1135, 466, 1078, 436, 1091, 51, 1223, 1223, 1189, 1189,
	2514, 1193, 1639, 1090, 3102, 2504, 2598, 177, 1124, 760,
	2816, 916, 2916, 1079, 129, 1198, 430, 2435, 474, 129,
	1753, 129, 470, 1755, 2492, 2748, 129, 129, 129, 129,
	110, 38, 2205, 129, 129, 2284, 129, 48, 5, 2119,
	1099, 114, 910, 1111, 1200, 2506, 3175, 2821, 1942, 447,
	1121, 2903, 754, 1944, 785, 2974, 1076, 2188, 1139, 1140,
	1833, 1142, 1143, 1144, 1629, 1263, 1309, 1266, 1028, 1029,
	1241, 1073, 1274, 1478, 1340, 113, 2287, 1631, 2288, 2289,
	703, 2386, 2387, 1185, 1186, 3187, 2209, 2210, 1479, 1055,
	2447, 2446, 1295, 1947, 915, 1832, 2525, 1057, 671, 817,
	818, 2208, 1171, 1173, 822, 1477, 1191, 1945, 1191, 888,
	1991, 1183, 1184, 672, 1280, 2742, 2743, 2372, 2844, 1080,
	1119, 1120, 660, 1328, 2022, 2315, 2317, 2318, 2319, 2316,
	2737, 3194, 3099, 3100, 2736, 756, 1515, 113, 755, 1835,
	1834, 113, 3131, 1158, 1071, 1072, 1101, 3193, 1253, 1254,
	951, 754, 113, 1244, 2623, 1247, 1248, 708, 709, 710,
	916, 1236, 113, 1960, 2092, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 3184, 1215, 1150,
	1151, 1371, 1372, 1138, 2305, 2306, 1141, 675, 1380, 2619,
	1174, 1114, 1118, 1118, 1118, 1965, 3166, 1419, 1420, 1421,
	3149, 1429, 951, 2907, 1797, 2709, 2908, 1796, 1310, 1515,
	1435, 2542, 1261, 1436, 1114, 1114, 1290, 1291, 951, 790,
	1199, 2902, 2526, 790, 1438, 1443, 1444, 1776, 1209, 446,
	1213, 1224, 1214, 1325, 756, 1270, 1827, 755, 674, 1277,
	1842, 1258, 677, 676, 1262, 1225, 2236, 2023, 3185, 3161,
	463, 807, 812, 813, 3155, 953, 954, 955, 952, 2910,
	1304, 2874, 3114, 1843, 1844, 1306, 1343, 1747, 953, 954,
	955, 952, 441, 2023, 1488, 1191, 1492, 1493, 951, 1495,
	1496, 1461, 462, 914, 441, 2237, 458, 1191, 3154, 460,
	2909, 714, 1303, 1891, 1513, 663, 1300, 461, 1191, 1299,
	459, 1775, 1286, 1673, 1159, 2304, 1823, 1311, 1294, 457,
	1281, 2110, 3135, 1282, 2466, 1464, 1293, 1428, 660, 3112,
	3162, 953, 954, 955, 952, 1747, 1302, 1301, 1536, 3070,
	1298, 1115, 1411, 1412, 1319, 1415, 1542, 1542, 1324, 1159,
	3019, 1159, 1159, 1430, 1487, 441, 2623, 1488, 1488, 1540,
	2023, 1191, 1606, 1607, 1619, 1322, 1437, 3010, 1439, 1747,
	1369, 1370, 2194, 2957, 546, 555, 1362, 1826, 430, 1484,
	1191, 2956, 547, 2952, 554, 548, 552, 551, 549, 550,
	1497, 1498, 1499, 1747, 2237, 2951, 2950, 2949, 2191, 1494,
	3113, 2097, 2054, 1738, 1620, 441, 1488, 1191, 1930, 1661,
	3071, 441, 1664, 1665, 2922, 2763, 1890, 1828, 1668, 1669,
	1801, 2923, 1729, 1675, 1650, 1100, 2607, 1601, 1602, 1374,
	177, 1414, 1618, 177, 177, 2366, 177, 556, 2923, 951,
	2170, 1557, 1521, 1522, 2958, 2126, 1529, 1544, 809, 810,
	811, 1671, 1911, 956, 2923, 916, 1440, 1116, 2108, 1531,
	1532, 1535, 985, 663, 1538, 1539, 2923, 2923, 2923, 553,
	994, 2101, 1429, 1429, 1717, 1462, 1658, 2099, 881, 1429,
	1429, 1177, 706, 2094, 1724, 2923, 2054, 1625, 1633, 1627,
	2087, 1468, 999, 1647, 1648, 1516, 1517, 2608, 113, 1645,
	1646, 113, 113, 1543, 113, 1640, 2023, 2085, 1513, 2083,
	2903, 951, 1191, 1736, 2904, 2695, 951, 1684, 2081, 1660,
	1687, 1688, 1510, 1690, 1663, 1910, 1509, 1824, 1805, 1911,
	1525, 1804, 1527, 1528, 1491, 1795, 1786, 1785, 1534, 1526,
	788, 1545, 2095, 2724, 913, 1533, 1505, 788, 2100, 2543,
	1784, 1520, 1546, 1547, 2095, 1746, 113, 1518, 1730, 1287,
	2034, 2088, 2391, 1617, 2239, 1759, 976, 977, 969, 970,
	971, 972, 973, 974, 975, 968, 1763, 1764, 2086, 2761,
	2082, 1608, 1718, 1605, 2113, 2112, 1114, 2104, 1712, 2082,
	1624, 1927, 1626, 1634, 1792, 1712, 1911, 1051, 1823, 951,
	1530, 968, 951, 1777, 1728, 3144, 951, 951, 951, 1678,
	1491, 1118, 1483, 1283, 440, 440, 997, 901, 1659, 914,
	448, 951, 790, 881, 876, 2997, 1747, 874, 1649, 790,
	1288, 881, 984, 2547, 1655, 764, 1681, 1418, 1417, 1679,
	2429, 1115, 1181, 1802, 971, 972, 973, 974, 975, 968,
	1809, 2845, 2716, 1182, 463, 787, 1322, 1698, 3132, 2714,
	1179, 1105, 787, 1963, 2538, 1106, 2921, 789, 2739, 2998,
	2738, 2701, 2624, 2617, 789, 2612, 2609, 673, 2073, 2520,
	1721, 515, 2440, 888, 1883, 441, 462, 1719, 1727, 2336,
	458, 1368, 2216, 460, 2098, 2846, 2717, 1850, 441, 441,
	441, 461, 1731, 2715, 459, 2648, 1726, 1365, 1367, 1364,
	1908, 1366, 2044, 1096, 790, 1095, 1722, 890, 1723, 2133,
	1915, 1159, 969, 970, 971, 972, 973, 974, 975, 968,
	2067, 1920, 953, 954, 955, 952, 1682, 1377, 1767, 2539,
	1222, 1222, 1758, 2651, 2393, 1159, 1449, 787, 1377, 1228,
	1772, 1682, 888, 1951, 1486, 1761, 1762, 1116, 1178, 789,
	3037, 1760, 1362, 1771, 1441, 1442, 1936, 952, 1445, 1446,
	1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	979, 3170, 983, 2540, 955, 952, 1154, 2750, 1156, 2749,
	1160, 1161, 1162, 2410, 2271, 2270, 678, 2265, 980, 982,
	978, 1964, 981, 967, 966, 976, 977, 969, 970, 971,
	972, 973, 974, 975, 968, 2027, 2027, 1619, 2027, 2263,
	1204, 1205, 1206, 1207, 1208, 2728, 1210, 1211, 1212, 2823,
	2824, 3158, 1217, 1218, 3120, 1433, 430, 430, 953, 954,
	955, 952, 3115, 3057, 888, 2818, 1917, 1918, 1434, 2077,
	1191, 441, 953, 954, 955, 952, 1921, 1922, 1020, 3028,
	1885, 2649, 2999, 441, 3129, 2939, 1923, 888, 436, 1819,
	1821, 1822, 1223, 2887, 1619, 2853, 2848, 2062, 2048, 2064,
	1892, 1850, 2847, 177, 1836, 2030, 1333, 1334, 1335, 1336,
	1337, 1969, 2718, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	2819, 2031, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1932, 1992, 1993, 1994, 1995, 1996, 2029,
	1997, 2033, 1916, 1929, 3128, 1019, 2692, 2512, 1935, 2106,
	1378, 1379, 1736, 2040, 2693, 2041, 1413, 1928, 1934, 1191,
	2425, 1191, 1618, 1191, 1423, 1926, 2326, 1924, 888, 2405,
	1925, 113, 2404, 2045, 2046, 2324, 2322, 2309, 2061, 2308,
	2307, 2299, 2120, 953, 954, 955, 952, 790, 2293, 2116,
	2068, 2292, 2135, 2291, 2290, 1701, 2056, 1191, 2151, 1700,
	2311, 1171, 1173, 2215, 2006, 1699, 1695, 1465, 1694, 2694,
	1284, 1469, 1068, 2158, 1472, 2059, 2035, 3086, 1191, 2700,
	787, 2325, 2341, 880, 2066, 1189, 2794, 2150, 2160, 2498,
	2323, 2321, 789, 886, 953, 954, 955, 952, 1118, 3082,
	3041, 2985, 1228, 2049, 2459, 2827, 1189, 2941, 2159, 953,
	954, 955, 952, 510, 907, 2310, 512, 2142, 2069, 2162,
	2057, 511, 888, 2060, 959, 960, 961, 962, 963, 964,
	965, 957, 1788, 2058, 3001, 2961, 2192, 2137, 2917, 2900,
	2888, 953, 954, 955, 952, 873, 869, 870, 871, 872,
	1229, 2147, 2852, 2146, 2145, 2143, 2851, 2834, 2117, 953,
	954, 955, 952, 2458, 2822, 2792, 2131, 953, 954, 955,
	952, 1191, 2790, 2103, 2213, 2770, 2181, 2767, 2107, 2765,
	1488, 2109, 2331, 2730, 2114, 2691, 2235, 2690, 953, 954,
	955, 952, 2241, 2687, 2677, 1465, 2671, 2124, 2618, 1787,
	1465, 1465, 1830, 1831, 2711, 2614, 2605, 2166, 2250, 2127,
	2128, 2604, 2171, 2195, 888, 2521, 2489, 2144, 2488, 2436,
	2141, 2403, 2262, 2380, 953, 954, 955, 952, 1936, 2320,
	2267, 2268, 2312, 2269, 2302, 2300, 2130, 2272, 2273, 2274,
	1542, 2296, 2295, 1683, 2294, 1825, 1686, 605, 604, 1689,
	2226, 1703, 1691, 1253, 1254, 2989, 1697, 1474, 113, 1285,
	3018, 2800, 1248, 2027, 2225, 1027, 2710, 2232, 1322, 2182,
	1023, 2185, 1022, 953, 954, 955, 952, 2327, 998, 877,
	953, 954, 955, 952, 2708, 430, 953, 954, 955, 952,
	1488, 888, 1619, 1619, 1619, 1619, 1557, 2202, 2676, 2257,
	2663, 2654, 2653, 888, 1619, 2349, 2242, 2027, 2642, 2260,
	2641, 1261, 160, 2260, 2548, 152, 128, 2349, 1662, 2464,
	2261, 2157, 2457, 1191, 2244, 1774, 2799, 2449, 2246, 2243,
	2211, 2759, 2444, 2388, 2193, 441, 441, 2247, 2248, 2196,
	1258, 8, 2190, 1262, 2084, 2240, 2234, 7, 2148, 2149,
	177, 953, 954, 955, 952, 177, 953, 954, 955, 952,
	1618, 1618, 1618, 1618, 2252, 2080, 2258, 2079, 1810, 2362,
	1800, 2264, 1618, 2282, 2283, 2256, 1429, 1798, 1429, 2674,
	1794, 2420, 1793, 157, 160, 2424, 1791, 2297, 2298, 1769,
	1782, 1191, 1773, 1779, 2431, 1778, 2276, 1702, 953, 954,
	955, 952, 1155, 2301, 953, 954, 955, 952, 3016, 1460,
	1459, 2333, 1458, 953, 954, 955, 952, 1432, 113, 2249,
	1491, 1431, 1422, 113, 1203, 1201, 1197, 3183, 2332, 2337,
	2335, 1783, 3143, 3137, 3127, 3124, 3122, 2394, 3027, 1790,
	2959, 2361, 2398, 113, 1017, 1243, 1464, 2365, 2363, 2870,
	113, 2419, 2858, 2854, 660, 157, 2374, 1803, 2378, 2778,
	1806, 1807, 1808, 2381, 2776, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 2757, 2452, 888, 2454, 2756, 2245, 2364,
	2753, 2433, 2417, 2501, 2392, 2752, 2396, 2395, 2423, 1850,
	2745, 2703, 2416, 2516, 1252, 1245, 2418, 1103, 441, 2350,
	2351, 2352, 2353, 2428, 1780, 2413, 2411, 2328, 888, 888,
	888, 2266, 1402, 2229, 2228, 2227, 2427, 1619, 1908, 1257,
	2546, 1260, 1936, 1936, 1936, 790, 2550, 2442, 2441, 1249,
	1912, 2180, 790, 2453, 2462, 2093, 888, 2043, 1998, 1909,
	2585, 2415, 2588, 1363, 2588, 2588, 113, 2448, 2422, 2524,
	2555, 2593, 2450, 2451, 157, 2491, 2455, 2456, 1666, 953,
	954, 955, 952, 1191, 1191, 2469, 1482, 1481, 1307, 2470,
	2471, 2472, 2473, 1273, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2485, 1250, 2600, 1618, 2490, 1052, 1049, 2225,
	1048, 1189, 1189, 2601, 2602, 2493, 953, 954, 955, 952,
	113, 2544, 1047, 2517, 1046, 1045, 1044, 1043, 2523, 441,
	2461, 1042, 2541, 1041, 2501, 2583, 2584, 2534, 2535, 2545,
	1040, 1039, 1038, 2578, 1037, 1488, 1488, 1036, 790, 2460,
	1035, 804, 1034, 3014, 2556, 953, 954, 955, 952, 1033,
	1465, 1032, 1465, 1031, 2496, 2591, 2589, 2590, 2549, 1030,
	1026, 1025, 2551, 2552, 953, 954, 955, 952, 1024, 1021,
	1465, 1465, 2553, 1014, 1013, 1011, 1010, 1398, 1009, 1008,
	1007, 1395, 2151, 3012, 2179, 1397, 1394, 1396, 1400, 1401,
	1006, 2652, 790, 1399, 1005, 1004, 1222, 966, 976, 977,
	969, 970, 971, 972, 973, 974, 975, 968, 2554, 953,
	954, 955, 952, 1003, 1002, 1001, 1000, 2611, 2178, 2610,
	996, 2616, 995, 2615, 664, 665, 666, 667, 441, 2620,
	2621, 2177, 2606, 918, 2631, 1485, 875, 663, 2176, 2627,
	2628, 2613, 2175, 953, 954, 955, 952, 1500, 2174, 2635,
	2754, 2638, 2639, 2640, 1914, 1897, 953, 954, 955, 952,
	906, 3062, 2622, 953, 954, 955, 952, 953, 954, 955,
	952, 2647, 3060, 953, 954, 955, 952, 2634, 3006, 799,
	796, 791, 795, 797, 967, 966, 976, 977, 969, 970,
	971, 972, 973, 974, 975, 968, 2173, 2134, 2630, 2217,
	1202, 2055, 2667, 1799, 1705, 2152, 2153, 802, 1548, 2678,
	2664, 794, 917, 2155, 2156, 2358, 2670, 2665, 2707, 2172,
	2359, 953, 954, 955, 952, 2356, 2161, 2633, 2666, 2781,
	2357, 2780, 2027, 1619, 2721, 1405, 1406, 1407, 1408, 1409,
	1410, 1403, 1404, 2632, 953, 954, 955, 952, 1465, 2169,
	2355, 2183, 2184, 1472, 113, 2354, 2680, 1191, 1657, 3169,
	2102, 2729, 800, 2168, 1657, 2682, 2683, 2096, 2360, 803,
	2019, 2020, 1097, 441, 953, 954, 955, 952, 2167, 2779,
	1507, 1508, 2585, 98, 53, 2732, 792, 2698, 953, 954,
	955, 952, 2519, 2163, 1191, 52, 438, 2723, 1502, 1503,
	1504, 1618, 2187, 953, 954, 955, 952, 801, 1967, 2254,
	1488, 2255, 2486, 2487, 888, 1593, 2494, 2720, 953, 954,
	955, 952, 1189, 2278, 2762, 1237, 2583, 2727, 2349, 2154,
	2279, 2280, 2281, 2091, 2578, 2719, 790, 2783, 443, 444,
	177, 1830, 1831, 2704, 2705, 2706, 2121, 793, 442, 2772,
	445, 1054, 2684, 888, 953, 954, 955, 952, 2758, 2722,
	1886, 1267, 1667, 2132, 912, 2725, 2981, 2349, 2726, 2495,
	2251, 2808, 2197, 1904, 2764, 2766, 1511, 1480, 2769, 3073,
	2771, 2773, 1418, 1417, 1066, 1067, 2856, 2774, 953, 954,
	955, 952, 1064, 1065, 888, 1191, 1191, 1062, 1063, 2603,
	888, 1060, 1061, 2837, 1373, 2007, 2837, 2003, 113, 1604,
	1153, 2768, 1152, 944, 1936, 2637, 2053, 1725, 1107, 2795,
	1056, 3138, 798, 1189, 2732, 2832, 3049, 2785, 3034, 953,
	954, 955, 952, 3032, 2992, 2971, 2809, 2970, 2968, 2811,
	2960, 2882, 2881, 888, 888, 2791, 2679, 888, 888, 2661,
	664, 665, 666, 667, 2660, 2645, 2839, 2842, 1059, 2833,
	663, 2644, 2841, 663, 2390, 1515, 2426, 1513, 2867, 2879,
	3064, 3063, 2723, 1899, 1122, 1781, 903, 2883, 2884, 2872,
	3063, 2859, 2860, 3064, 2747, 2868, 2869, 2662, 2801, 2010,
	2382, 2855, 164, 3, 61, 2, 1168, 2036, 2397, 1651,
	2399, 2913, 1195, 2876, 2015, 2018, 2019, 2020, 2016, 1,
	2017, 2021, 1473, 2906, 2875, 668, 2367, 2877, 1465, 2368,
	2636, 2370, 1743, 1465, 2338, 2001, 2015, 2018, 2019, 2020,
	2016, 2929, 2017, 2021, 2849, 2850, 1887, 2515, 1884, 1098,
	707, 2901, 2905, 1424, 2911, 1292, 806, 897, 1289, 888,
	896, 1900, 1901, 1902, 894, 1375, 560, 1708, 2329, 2303,
	2443, 888, 2878, 3072, 1191, 3109, 3026, 3075, 1305, 2924,
	544, 2962, 2930, 2892, 2932, 3030, 2940, 2931, 2894, 2797,
	2873, 716, 2463, 1748, 1919, 949, 2412, 2948, 2943, 728,
	596, 571, 1189, 1012, 2954, 1275, 1268, 2467, 808, 2953,
	570, 2697, 2207, 2385, 2933, 805, 729, 1692, 2890, 1238,
	1242, 2976, 2843, 2712, 888, 2536, 2230, 3179, 3168, 3150,
	2967, 2965, 3136, 2993, 3054, 3164, 3090, 3125, 2804, 2802,
	2803, 3118, 3050, 481, 1630, 3002, 428, 771, 2871, 1704,
	482, 2988, 1913, 3042, 2857, 2984, 1191, 2987, 689, 3021,
	3024, 1896, 690, 2223, 2222, 2995, 1344, 958, 1361, 754,
	2482, 2483, 993, 520, 1770, 3011, 3013, 3015, 3017, 2204,
	3025, 3000, 2573, 2379, 1189, 2944, 3020, 60, 3033, 59,
	3035, 3036, 58, 3031, 57, 1191, 3029, 1674, 185, 562,
	184, 2592, 2825, 2955, 3023, 3077, 542, 953, 954, 955,
	952, 541, 540, 539, 1197, 538, 3048, 2014, 2012, 2011,
	1614, 1613, 1672, 1189, 2594, 3056, 1657, 3061, 3079, 3059,
	2275, 3058, 1955, 1948, 1549, 3065, 3003, 3066, 2945, 3067,
	3078, 3068, 2946, 3069, 2744, 2313, 1501, 1959, 1563, 2285,
	888, 1560, 756, 1559, 3083, 755, 2976, 2277, 3084, 2994,
	2740, 2734, 1590, 2836, 3088, 2557, 2558, 2564, 1903, 3093,
	3095, 831, 3108, 827, 829, 830, 828, 2140, 2136, 1931,
	2529, 3103, 1841, 1840, 1838, 3111, 1402, 1837, 3116, 741,
	888, 3104, 3105, 3106, 3107, 1074, 2912, 717, 2681, 1848,
	3117, 3121, 1846, 3123, 1328, 2629, 2625, 1716, 1470, 2186,
	1615, 1611, 1898, 2812, 3079, 3134, 1506, 682, 1894, 96,
	142, 47, 88, 888, 719, 888, 3078, 87, 95, 3133,
	140, 46, 169, 3140, 168, 3142, 3145, 1328, 171, 1328,
	170, 167, 2070, 3111, 888, 3146, 2071, 166, 3153, 1226,
	3160, 165, 2840, 3163, 3157, 657, 37, 33, 1328, 12,
	11, 34, 21, 22, 20, 1296, 19, 25, 3167, 31,
	30, 106, 3085, 3174, 3159, 105, 3177, 3178, 29, 104,
	103, 102, 3186, 101, 100, 3189, 28, 740, 739, 3191,
	3192, 3174, 18, 3190, 2673, 41, 3178, 40, 39, 9,
	94, 2675, 92, 27, 738, 1402, 93, 90, 91, 89,
	72, 71, 70, 715, 85, 84, 83, 82, 3141, 81,
	80, 78, 79, 727, 718, 749, 967, 966, 976, 977,
	969, 970, 971, 972, 973, 974, 975, 968, 3139, 69,
	68, 1398, 67, 66, 65, 1395, 76, 86, 745, 1397,
	1394, 1396, 1400, 1401, 77, 75, 74, 1399, 73, 64,
	63, 62, 125, 126, 124, 123, 122, 121, 120, 2233,
	967, 966, 976, 977, 969, 970, 971, 972, 973, 974,
	975, 968, 119, 42, 746, 750, 43, 44, 45, 136,
	967, 966, 976, 977, 969, 970, 971, 972, 973, 974,
	975, 968, 735, 135, 733, 737, 753, 137, 847, 139,
	734, 731, 730, 141, 736, 721, 722, 720, 723, 724,
	725, 726, 138, 751, 133, 752, 131, 134, 132, 130,
	55, 17, 24, 4, 0, 0, 747, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1465,
	1398, 0, 2775, 0, 1395, 2777, 0, 0, 1397, 1394,
	1396, 1400, 1401, 743, 0, 0, 1399, 2465, 0, 2782,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1405,
	1406, 1407, 1408, 1409, 1410, 1403, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2383, 2384,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 967,
	966, 976, 977, 969, 970, 971, 972, 973, 974, 975,
	968, 0, 0, 0, 0, 0, 742, 855, 859, 861,
	863, 865, 866, 868, 0, 873, 869, 870, 871, 872,
	0, 850, 851, 852, 853, 833, 834, 856, 0, 836,
	0, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 848, 854, 0, 0, 0, 0, 0, 0, 0,
	858, 860, 862, 864, 867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2129, 0, 0, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1405, 1406,
	1407, 1408, 1409, 1410, 1403, 1404, 1768, 849, 967, 966,
	976, 977, 969, 970, 971, 972, 973, 974, 975, 968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 966, 976, 977, 969, 970, 971, 972, 973, 974,
	975, 968, 361, 578, 0, 0, 2925, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 2522, 0, 0, 0, 0, 534, 0, 0, 2942,
	269, 0, 0, 294, 967, 966, 976, 977, 969, 970,
	971, 972, 973, 974, 975, 968, 426, 0, 427, 0,
	0, 569, 0, 0, 353, 308, 0, 0, 0, 0,
	628, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 0, 559, 605, 604, 546, 555,
	0, 0, 247, 183, 0, 999, 547, 0, 554, 548,
	552, 551, 549, 550, 0, 620, 0, 0, 2138, 2139,
	0, 0, 518, 531, 0, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 0, 1657, 0, 0, 579, 0, 530, 0, 0,
	574, 556, 557, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 553, 577, 581, 263, 642, 575, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 643, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 384, 0, 0, 626,
	857, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	576, 2669, 344, 326, 639, 519, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 3148, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 1426, 1425, 1427, 396, 276, 230,
	231, 434, 624, 322, 0, 0, 638, 619, 621, 622,
	625, 629, 630, 631, 632, 633, 635, 637, 641, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 2751, 0, 0, 0,
	640, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	580, 0, 0, 312, 313, 314, 315, 627, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 649, 623, 648, 650, 651, 647,
	652, 653, 634, 537, 0, 584, 645, 644, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	612, 589, 590, 591, 536, 592, 587, 588, 613, 582,
	609, 610, 561, 585, 593, 608, 594, 611, 614, 615,
	654, 655, 600, 656, 597, 616, 607, 606, 595, 583,
	617, 618, 568, 563, 598, 599, 586, 601, 602, 603,
	564, 565, 566, 567, 361, 578, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 0,
	0, 0, 269, 1466, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 569, 0, 0, 353, 308, 0, 0,
	0, 0, 628, 636, 0, 0, 0, 0, 0, 0,
	0, 1642, 0, 0, 527, 0, 0, 559, 605, 604,
	546, 555, 0, 0, 247, 183, 0, 0, 547, 0,
	554, 548, 552, 551, 549, 550, 0, 620, 0, 0,
	0, 0, 0, 0, 518, 531, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 0, 0, 0, 0, 579, 0, 530,
	0, 0, 1643, 556, 557, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 553, 577, 581, 263, 642,
	575, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 643, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 384, 0,
	0, 626, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 576, 0, 344, 326, 639, 519, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 624, 322, 0, 0, 638, 619,
	621, 622, 625, 629, 630, 631, 632, 633, 635, 637,
	641, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 580, 0, 0, 312, 313, 314, 315, 627,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 649, 623, 648, 650,
	651, 647, 652, 653, 634, 537, 0, 584, 645, 644,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 612, 589, 590, 591, 536, 592, 587, 588,
	613, 582, 609, 610, 561, 585, 593, 608, 594, 611,
	614, 615, 654, 655, 600, 656, 597, 616, 607, 606,
	595, 583, 617, 618, 568, 563, 598, 599, 586, 601,
	602, 603, 564, 565, 566, 567, 160, 361, 578, 392,
	393, 394, 416, 378, 0, 431, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 427, 0, 0, 987, 0, 0, 353,
	308, 0, 0, 0, 0, 628, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	559, 605, 604, 546, 555, 0, 0, 247, 183, 0,
	0, 547, 0, 554, 548, 552, 551, 549, 550, 0,
	620, 0, 0, 0, 0, 0, 0, 518, 531, 0,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 529, 0, 0, 0, 0,
	579, 0, 530, 0, 0, 574, 556, 557, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 553, 577,
	581, 263, 642, 575, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 643,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 384, 0, 0, 626, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 576, 0, 344, 326, 639,
	519, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 434, 624, 322, 0,
	0, 638, 619, 621, 622, 625, 629, 630, 631, 632,
	633, 635, 637, 641, 433, 0, 0, 0, 0, 0,
	432, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 580, 0, 0, 312, 313,
	314, 315, 627, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 649,
	623, 648, 650, 651, 647, 652, 653, 634, 537, 0,
	584, 645, 644, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	129, 336, 274, 0, 0, 612, 589, 590, 591, 536,
	592, 587, 588, 613, 582, 609, 610, 561, 585, 593,
	608, 594, 611, 614, 615, 654, 655, 600, 656, 597,
	616, 607, 606, 595, 583, 617, 618, 568, 563, 598,
	599, 586, 601, 602, 603, 564, 565, 566, 567, 361,
	578, 0, 392, 393, 394, 416, 378, 0, 431, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 0, 0, 269, 3147, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 427, 0, 0, 569, 0,
	0, 353, 308, 0, 0, 0, 0, 628, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 559, 605, 604, 546, 555, 0, 0, 247,
	183, 0, 0, 547, 0, 554, 548, 552, 551, 549,
	550, 0, 620, 0, 0, 0, 0, 0, 0, 518,
	531, 0, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 529, 0, 0,
	0, 0, 579, 0, 530, 0, 0, 574, 556, 557,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	553, 577, 581, 263, 642, 575, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 643, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 384, 0, 0, 626, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 576, 0, 344,
	326, 639, 519, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 434, 624,
	322, 0, 0, 638, 619, 621, 622, 625, 629, 630,
	631, 632, 633, 635, 637, 641, 433, 0, 0, 0,
	0, 0, 432, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 580, 0, 0,
	312, 313, 314, 315, 627, 0, 252, 408, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 649, 623, 648, 650, 651, 647, 652, 653, 634,
	537, 0, 584, 645, 644, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 0, 0, 612, 589, 590,
	591, 536, 592, 587, 588, 613, 582, 609, 610, 561,
	585, 593, 608, 594, 611, 614, 615, 654, 655, 600,
	656, 597, 616, 607, 606, 595, 583, 617, 618, 568,
	563, 598, 599, 586, 601, 602, 603, 564, 565, 566,
	567, 361, 578, 0, 392, 393, 394, 416, 378, 0,
	431, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 269,
	1466, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 426, 0, 427, 0, 0,
	569, 0, 0, 353, 308, 0, 0, 0, 0, 628,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 559, 605, 604, 546, 555, 0,
	0, 247, 183, 0, 0, 547, 0, 554, 548, 552,
	551, 549, 550, 0, 620, 0, 0, 0, 0, 0,
	0, 518, 531, 0, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 529,
	0, 0, 0, 0, 579, 0, 530, 0, 0, 574,
	556, 557, 0, 0, 0, 0, 238, 358, 374, 248,
	349, 387, 253, 356, 243, 323, 346, 0, 0, 240,
	372, 355, 305, 288, 289, 239, 0, 341, 267, 280,
	264, 321, 553, 577, 581, 263, 642, 575, 382, 242,
	0, 381, 320, 368, 373, 306, 300, 241, 370, 304,
	299, 292, 271, 643, 284, 332, 298, 333, 285, 310,
	309, 311, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 384, 0, 0, 626, 0,
	0, 0, 357, 0, 0, 293, 0, 0, 0, 576,
	0, 344, 326, 639, 519, 0, 342, 296, 369, 334,
	375, 359, 383, 338, 335, 233, 360, 266, 307, 244,
	246, 261, 268, 270, 272, 273, 316, 317, 329, 348,
	362, 363, 364, 265, 254, 343, 255, 282, 256, 234,
	258, 257, 259, 350, 260, 236, 330, 367, 0, 278,
	339, 303, 237, 302, 331, 366, 365, 245, 391, 397,
	398, 403, 0, 404, 0, 0, 0, 412, 417, 418,
	419, 421, 422, 423, 424, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 396, 276, 230, 231,
	434, 624, 322, 0, 0, 638, 619, 621, 622, 625,
	629, 630, 631, 632, 633, 635, 637, 641, 433, 0,
	0, 0, 0, 0, 432, 328, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 377, 389, 407, 410, 0, 0, 0, 0, 235,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 580,
	0, 0, 312, 313, 314, 315, 627, 0, 252, 408,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 649, 623, 648, 650, 651, 647, 652,
	653, 634, 537, 0, 584, 645, 644, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 0, 0, 612,
	589, 590, 591, 536, 592, 587, 588, 613, 582, 609,
	610, 561, 585, 593, 608, 594, 611, 614, 615, 654,
	655, 600, 656, 597, 616, 607, 606, 595, 583, 617,
	618, 568, 563, 598, 599, 586, 601, 602, 603, 564,
	565, 566, 567, 361, 578, 0, 392, 393, 394, 416,
	378, 0, 431, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 269, 0, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 426, 0, 427,
	0, 0, 569, 0, 0, 353, 308, 0, 0, 0,
	0, 628, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 0, 559, 605, 604, 546,
	555, 0, 0, 247, 183, 0, 0, 547, 0, 554,
	548, 552, 551, 549, 550, 0, 620, 0, 0, 0,
	0, 0, 0, 518, 531, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 529, 1221, 0, 0, 0, 579, 0, 530, 0,
	0, 574, 556, 557, 0, 0, 0, 0, 238, 358,
	374, 248, 349, 387, 253, 356, 243, 323, 346, 0,
	0, 240, 372, 355, 305, 288, 289, 239, 0, 341,
	267, 280, 264, 321, 553, 577, 581, 263, 642, 575,
	382, 242, 0, 381, 320, 368, 373, 306, 300, 241,
	370, 304, 299, 292, 271, 643, 284, 332, 298, 333,
	285, 310, 309, 311, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 384, 0, 0,
	626, 0, 0, 0, 357, 0, 0, 293, 0, 0,
	0, 576, 0, 344, 326, 639, 519, 0, 342, 296,
	369, 334, 375, 359, 383, 338, 335, 233, 360, 266,
	307, 244, 246, 261, 268, 270, 272, 273, 316, 317,
	329, 348, 362, 363, 364, 265, 254, 343, 255, 282,
	256, 234, 258, 257, 259, 350, 260, 236, 330, 367,
	0, 278, 339, 303, 237, 302, 331, 366, 365, 245,
	391, 397, 398, 403, 0, 404, 0, 0, 0, 412,
	417, 418, 419, 421, 422, 423, 424, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 396, 276,
	230, 231, 434, 624, 322, 0, 0, 638, 619, 621,
	622, 625, 629, 630, 631, 632, 633, 635, 637, 641,
	433, 0, 0, 0, 0, 0, 432, 328, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 377, 389, 407, 410, 0, 0, 0,
	0, 235, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 580, 0, 0, 312, 313, 314, 315, 627, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 275, 281, 420, 283, 251, 327, 277, 386,
	290, 0, 413, 0, 414, 0, 0, 0, 0, 319,
	286, 287, 351, 291, 297, 340, 385, 325, 345, 249,
	376, 352, 301, 0, 0, 649, 623, 648, 650, 651,
	647, 652, 653, 634, 537, 0, 584, 645, 644, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 295, 0, 336, 274, 0,
	0, 612, 589, 590, 591, 536, 592, 587, 588, 613,
	582, 609, 610, 561, 585, 593, 608, 594, 611, 614,
	615, 654, 655, 600, 656, 597, 616, 607, 606, 595,
	583, 617, 618, 568, 563, 598, 599, 586, 601, 602,
	603, 564, 565, 566, 567, 0, 0, 0, 392, 393,
	394, 416, 378, 0, 431, 361, 578, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 0, 0, 269, 0, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 426,
	0, 427, 0, 0, 569, 0, 0, 353, 308, 0,
	0, 0, 0, 628, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 0, 0, 559, 605,
	604, 546, 555, 0, 0, 247, 183, 0, 0, 547,
	0, 554, 548, 552, 551, 549, 550, 0, 620, 0,
	0, 0, 0, 0, 0, 518, 531, 0, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 529, 0, 0, 0, 0, 579, 0,
	530, 0, 0, 574, 556, 557, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 553, 577, 581, 263,
	642, 575, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 643, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 384,
	0, 0, 626, 0, 0, 0, 357, 0, 0, 293,
	0, 0, 0, 576, 0, 344, 326, 639, 519, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 0, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 434, 624, 322, 0, 0, 638,
	619, 621, 622, 625, 629, 630, 631, 632, 633, 635,
	637, 641, 433, 0, 0, 0, 0, 0, 432, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 580, 0, 0, 312, 313, 314, 315,
	627, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 401, 402, 275, 281, 420, 283, 251, 327,
	277, 386, 290, 0, 413, 0, 414, 0, 0, 0,
	0, 319, 286, 287, 351, 291, 297, 340, 385, 325,
	345, 249, 376, 352, 301, 0, 0, 649, 623, 648,
	650, 651, 647, 652, 653, 634, 537, 0, 584, 645,
	644, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 295, 0, 336,
	274, 0, 0, 612, 589, 590, 591, 536, 592, 587,
	588, 613, 582, 609, 610, 561, 585, 593, 608, 594,
	611, 614, 615, 654, 655, 600, 656, 597, 616, 607,
	606, 595, 583, 617, 618, 568, 563, 598, 599, 586,
	601, 602, 603, 564, 565, 566, 567, 361, 578, 0,
	392, 393, 394, 416, 378, 0, 431, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 427, 0, 0, 569, 0, 0, 353,
	308, 0, 0, 0, 0, 628, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	559, 605, 604, 546, 555, 0, 0, 247, 183, 0,
	0, 547, 0, 554, 548, 552, 551, 549, 550, 0,
	620, 0, 0, 0, 0, 0, 0, 518, 531, 0,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 529, 0, 0, 0, 0,
	579, 0, 530, 0, 0, 574, 556, 557, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 553, 577,
	581, 263, 642, 575, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 643,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 384, 0, 0, 626, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 576, 0, 344, 326, 639,
	519, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 434, 624, 322, 0,
	0, 638, 619, 621, 622, 625, 629, 630, 631, 632,
	633, 635, 637, 641, 433, 0, 0, 0, 0, 0,
	432, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 580, 0, 0, 312, 313,
	314, 315, 627, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 649,
	623, 648, 650, 651, 647, 652, 653, 634, 537, 0,
	584, 645, 644, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 0, 0, 612, 589, 590, 591, 536,
	592, 587, 588, 613, 582, 609, 610, 561, 585, 593,
	608, 594, 611, 614, 615, 654, 655, 600, 656, 597,
	616, 607, 606, 595, 583, 617, 618, 568, 563, 598,
	599, 586, 601, 602, 603, 564, 565, 566, 567, 361,
	578, 0, 392, 393, 394, 416, 378, 0, 431, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 534, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 427, 0, 0, 569, 0,
	0, 353, 308, 0, 0, 0, 0, 628, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 559, 605, 604, 546, 555, 0, 0, 247,
	183, 0, 0, 547, 0, 554, 548, 552, 551, 549,
	550, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	531, 0, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 529, 0, 0,
	0, 0, 579, 0, 530, 0, 0, 574, 556, 557,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	553, 577, 581, 263, 642, 575, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 643, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 384, 0, 0, 626, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 576, 0, 344,
	326, 639, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 1346, 1347, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 434, 624,
	322, 0, 0, 638, 619, 621, 622, 625, 629, 630,
	631, 632, 633, 635, 637, 641, 433, 0, 0, 0,
	0, 0, 432, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 580, 0, 0,
	312, 313, 314, 315, 627, 0, 252, 408, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 649, 623, 648, 650, 651, 647, 652, 653, 634,
	537, 0, 584, 645, 644, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 0, 0, 612, 589, 590,
	591, 536, 592, 587, 588, 613, 582, 609, 610, 561,
	585, 593, 608, 594, 611, 614, 615, 654, 655, 600,
	656, 597, 616, 607, 606, 595, 583, 617, 618, 568,
	563, 598, 599, 586, 601, 602, 603, 564, 565, 566,
	567, 361, 578, 0, 392, 393, 394, 416, 378, 0,
	431, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 426, 0, 427, 0, 0,
	569, 0, 0, 353, 308, 0, 0, 0, 0, 628,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 605, 604, 546, 555, 0,
	0, 247, 183, 0, 0, 547, 0, 554, 548, 552,
	551, 549, 550, 0, 620, 0, 0, 0, 0, 0,
	0, 518, 531, 0, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 529,
	0, 0, 0, 0, 579, 0, 530, 0, 0, 574,
	556, 557, 0, 0, 0, 0, 238, 358, 374, 248,
	349, 387, 253, 356, 243, 323, 346, 0, 0, 240,
	372, 355, 305, 288, 289, 239, 0, 341, 267, 280,
	264, 321, 553, 577, 581, 263, 642, 575, 382, 242,
	0, 381, 320, 368, 373, 306, 300, 241, 370, 304,
	299, 292, 271, 643, 284, 332, 298, 333, 285, 310,
	309, 311, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 384, 0, 0, 626, 0,
	0, 0, 357, 0, 0, 293, 0, 0, 0, 576,
	0, 344, 326, 639, 519, 0, 342, 296, 369, 334,
	375, 359, 383, 338, 335, 233, 360, 266, 307, 244,
	246, 261, 268, 270, 272, 273, 316, 317, 329, 348,
	362, 363, 364, 265, 254, 343, 255, 282, 256, 234,
	258, 257, 259, 350, 260, 236, 330, 367, 0, 278,
	339, 303, 237, 302, 331, 366, 365, 245, 391, 397,
	398, 403, 0, 404, 0, 0, 0, 412, 417, 418,
	419, 421, 422, 423, 424, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 396, 276, 230, 231,
	434, 624, 322, 0, 0, 638, 619, 621, 622, 625,
	629, 630, 631, 632, 633, 635, 637, 641, 433, 0,
	0, 0, 0, 0, 432, 328, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 377, 389, 407, 410, 0, 0, 0, 0, 235,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 580,
	0, 0, 312, 313, 314, 315, 627, 0, 252, 408,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 649, 623, 648, 650, 651, 647, 652,
	653, 634, 537, 0, 584, 645, 644, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 0, 0, 612,
	589, 590, 591, 536, 592, 587, 588, 613, 582, 609,
	610, 561, 585, 593, 608, 594, 611, 614, 615, 654,
	655, 600, 656, 597, 616, 607, 606, 595, 583, 617,
	618, 568, 563, 598, 599, 586, 601, 602, 603, 564,
	565, 566, 567, 361, 578, 0, 392, 393, 394, 416,
	378, 0, 431, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 269, 0, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 426, 0, 427,
	0, 0, 569, 0, 0, 353, 308, 0, 0, 0,
	0, 628, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 0, 559, 605, 604, 546,
	555, 0, 0, 247, 183, 0, 0, 547, 0, 554,
	548, 552, 551, 549, 550, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 531, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 529, 0, 0, 0, 0, 579, 0, 530, 0,
	0, 574, 556, 557, 0, 0, 0, 0, 238, 358,
	374, 248, 349, 387, 253, 356, 243, 323, 346, 0,
	0, 240, 372, 355, 305, 288, 289, 239, 0, 341,
	267, 280, 264, 321, 553, 577, 581, 263, 642, 575,
	382, 242, 0, 381, 320, 368, 373, 306, 300, 241,
	370, 304, 299, 292, 271, 643, 284, 332, 298, 333,
	285, 310, 309, 311, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 384, 0, 0,
	626, 0, 0, 0, 357, 0, 0, 293, 0, 0,
	0, 576, 0, 344, 326, 639, 0, 0, 342, 296,
	369, 334, 375, 359, 383, 338, 335, 233, 360, 266,
	307, 244, 246, 261, 268, 270, 272, 273, 316, 317,
	329, 348, 362, 363, 364, 265, 254, 343, 255, 282,
	256, 234, 258, 257, 259, 350, 260, 236, 330, 367,
	0, 278, 339, 303, 237, 302, 331, 366, 365, 245,
	391, 397, 398, 403, 0, 404, 0, 0, 0, 412,
	417, 418, 419, 421, 422, 423, 424, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 396, 276,
	230, 231, 434, 624, 322, 0, 0, 638, 619, 621,
	622, 625, 629, 630, 631, 632, 633, 635, 637, 641,
	433, 0, 0, 0, 0, 0, 432, 328, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 377, 389, 407, 410, 0, 0, 0,
	0, 235, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 580, 0, 0, 312, 313, 314, 315, 627, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 275, 281, 420, 283, 251, 327, 277, 386,
	290, 0, 413, 0, 414, 0, 0, 0, 0, 319,
	286, 287, 351, 291, 297, 340, 385, 325, 345, 249,
	376, 352, 301, 0, 0, 649, 623, 648, 650, 651,
	647, 652, 653, 634, 537, 0, 584, 645, 644, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 295, 0, 336, 274, 0,
	0, 612, 589, 590, 591, 536, 592, 587, 588, 613,
	582, 609, 610, 561, 585, 593, 608, 594, 611, 614,
	615, 654, 655, 600, 656, 597, 616, 607, 606, 595,
	583, 617, 618, 568, 563, 598, 599, 586, 601, 602,
	603, 564, 565, 566, 567, 0, 0, 0, 392, 393,
	394, 416, 378, 0, 431, 160, 361, 50, 152, 128,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 145, 0, 269, 0, 154, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 111, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 157, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 127,
	151, 158, 0, 97, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 175, 0, 0, 0, 357, 0, 0,
	293, 150, 144, 143, 400, 0, 344, 326, 56, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 146,
	147, 148, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 379, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 178,
	0, 0, 425, 186, 0, 0, 0, 149, 0, 187,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 129,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 0, 0,
	0, 392, 393, 394, 416, 378, 361, 188, 38, 176,
	179, 181, 180, 0, 48, 5, 0, 324, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 182,
	0, 0, 546, 555, 0, 0, 247, 183, 0, 0,
	547, 0, 554, 548, 552, 551, 549, 550, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 553, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 0, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 160, 361,
	50, 152, 128, 0, 0, 0, 0, 0, 0, 0,
	324, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 427, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 358, 374, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	0, 371, 399, 263, 390, 0, 382, 242, 0, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 415, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 400, 0, 344,
	326, 0, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 338, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 434, 262,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 395, 0, 0, 0, 425, 433, 0, 0, 0,
	0, 0, 432, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 405, 0, 0,
	312, 313, 314, 315, 452, 454, 252, 408, 337, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 319, 286, 287, 351, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 129, 336, 274, 0, 0, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 361, 0, 0, 392, 393, 394, 416, 378, 0,
	431, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 426, 0, 427, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 835,
	0, 0, 0, 0, 0, 0, 238, 358, 374, 248,
	349, 387, 253, 356, 243, 323, 346, 0, 0, 1870,
	1872, 1873, 1874, 1875, 1876, 1877, 0, 1882, 1878, 1879,
	1880, 1881, 0, 1865, 1866, 1867, 1868, 833, 1851, 1871,
	0, 1852, 320, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1869, 332, 298, 333, 285, 310,
	309, 311, 858, 860, 862, 864, 867, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 293, 0, 0, 0, 1864,
	0, 344, 326, 0, 0, 0, 342, 296, 369, 334,
	375, 359, 383, 338, 335, 233, 360, 266, 307, 244,
	246, 261, 268, 270, 272, 273, 316, 317, 329, 348,
	362, 363, 364, 265, 254, 343, 255, 282, 256, 234,
	258, 257, 259, 350, 260, 236, 330, 367, 0, 278,
	339, 303, 237, 302, 331, 366, 365, 245, 391, 397,
	398, 403, 0, 404, 0, 0, 0, 412, 417, 418,
	419, 421, 422, 423, 424, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 396, 276, 230, 231,
	434, 262, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 395, 0, 0, 0, 425, 433, 0,
	0, 0, 0, 0, 432, 328, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 377, 389, 407, 410, 0, 0, 0, 0, 235,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 405,
	0, 0, 312, 313, 314, 315, 279, 0, 252, 408,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 857, 295, 0, 336, 274, 0, 0, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 361, 0, 0, 392, 393, 394, 416,
	378, 0, 431, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 426, 0, 427,
	0, 0, 0, 0, 0, 353, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 247, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 1943, 1946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 358,
	374, 248, 349, 387, 253, 356, 243, 323, 346, 0,
	0, 240, 372, 355, 305, 288, 289, 239, 0, 341,
	267, 280, 264, 321, 0, 371, 399, 263, 390, 0,
	382, 242, 0, 381, 320, 368, 373, 306, 300, 241,
	370, 304, 299, 292, 271, 415, 284, 332, 298, 333,
	285, 310, 309, 311, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 384, 0, 0,
	0, 1942, 1933, 1941, 357, 1939, 1944, 293, 0, 0,
	0, 400, 0, 344, 326, 0, 0, 0, 342, 296,
	369, 334, 375, 359, 383, 338, 335, 233, 360, 266,
	307, 244, 246, 261, 268, 270, 272, 273, 316, 317,
	329, 348, 362, 363, 364, 265, 254, 343, 255, 282,
	256, 234, 258, 257, 259, 350, 260, 236, 330, 367,
	1945, 278, 339, 303, 237, 302, 331, 366, 365, 245,
	391, 397, 398, 403, 0, 404, 0, 0, 0, 412,
	417, 418, 419, 421, 422, 423, 424, 0, 0, 0,
	0, 406, 0, 0, 0, 0, 0, 0, 396, 276,
	230, 231, 434, 262, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 395, 0, 0, 0, 425,
	433, 0, 0, 0, 0, 0, 432, 328, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 377, 389, 407, 410, 0, 0, 0,
	0, 235, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 405, 0, 0, 312, 313, 314, 315, 279, 0,
	252, 408, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 275, 281, 420, 283, 251, 327, 277, 386,
	290, 0, 413, 0, 414, 0, 0, 0, 0, 319,
	286, 287, 351, 291, 297, 340, 385, 325, 345, 249,
	376, 352, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 295, 0, 336, 274, 0,
	0, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 361, 0, 0, 392, 393,
	394, 416, 378, 0, 431, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 426,
	0, 427, 0, 0, 0, 0, 0, 353, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 247, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 1943,
	1946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 358, 374, 248, 349, 387, 253, 356, 243, 323,
	346, 0, 0, 240, 372, 355, 305, 288, 289, 239,
	0, 341, 267, 280, 264, 321, 0, 371, 399, 263,
	390, 0, 382, 242, 0, 381, 320, 368, 373, 306,
	300, 241, 370, 304, 299, 292, 271, 415, 284, 332,
	298, 333, 285, 310, 309, 311, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1947, 384,
	0, 0, 0, 1942, 0, 1941, 357, 1939, 1944, 293,
	0, 0, 0, 400, 0, 344, 326, 0, 0, 0,
	342, 296, 369, 334, 375, 359, 383, 338, 335, 233,
	360, 266, 307, 244, 246, 261, 268, 270, 272, 273,
	316, 317, 329, 348, 362, 363, 364, 265, 254, 343,
	255, 282, 256, 234, 258, 257, 259, 350, 260, 236,
	330, 367, 1945, 278, 339, 303, 237, 302, 331, 366,
	365, 245, 391, 397, 398, 403, 0, 404, 0, 0,
	0, 412, 417, 418, 419, 421, 422, 423, 424, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	396, 276, 230, 231, 434, 262, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 395, 0, 0,
	0, 425, 433, 0, 0, 0, 0, 0, 432, 328,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 377, 389, 407, 410, 0,
	0, 0, 0, 235, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 405, 0, 0, 312, 313, 314, 315,
	279, 0, 252, 408, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 401, 402, 275, 281, 420, 283, 251, 327,
	277, 386, 290, 0, 413, 0, 414, 0, 0, 0,
	0, 319, 286, 287, 351, 291, 297, 340, 385, 325,
	345, 249, 376, 352, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 295, 0, 336,
	274, 0, 0, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 361, 0, 0,
	392, 393, 394, 416, 378, 0, 431, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 427, 0, 0, 0, 0, 0, 353,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 1677, 0, 0, 0, 247, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 953, 954, 955, 952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 434, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 433, 0, 0, 0, 0, 0,
	432, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 0, 0, 312, 313,
	314, 315, 279, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	0, 336, 274, 0, 0, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 361,
	0, 0, 392, 393, 394, 416, 378, 0, 431, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 770, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 427, 0, 0, 0, 0,
	0, 353, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 777, 778, 0, 0, 0, 0, 247,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 358, 765, 248, 349, 387,
	253, 356, 243, 323, 346, 0, 0, 240, 372, 355,
	305, 288, 289, 239, 0, 341, 267, 280, 264, 321,
	0, 371, 399, 263, 390, 756, 382, 242, 755, 381,
	320, 368, 373, 306, 300, 241, 370, 304, 299, 292,
	271, 415, 284, 332, 298, 333, 285, 310, 309, 311,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 293, 0, 0, 0, 400, 0, 344,
	326, 0, 0, 0, 342, 296, 369, 334, 375, 359,
	383, 768, 335, 233, 360, 266, 307, 244, 246, 261,
	268, 270, 272, 273, 316, 317, 329, 348, 362, 363,
	364, 265, 254, 343, 255, 282, 256, 234, 258, 257,
	259, 350, 260, 236, 330, 367, 0, 278, 339, 303,
	237, 302, 331, 366, 365, 245, 391, 397, 398, 403,
	0, 404, 0, 0, 0, 412, 417, 418, 419, 421,
	422, 423, 424, 0, 0, 0, 0, 406, 0, 0,
	0, 0, 0, 0, 396, 276, 230, 231, 434, 262,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 395, 0, 0, 0, 425, 433, 0, 0, 0,
	0, 0, 432, 328, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 377,
	389, 407, 410, 0, 0, 0, 0, 235, 409, 0,
	0, 0, 0, 0, 0, 769, 0, 380, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 772, 0, 0,
	312, 313, 314, 315, 279, 0, 252, 408, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 401, 402, 275, 281,
	420, 283, 251, 327, 277, 386, 290, 0, 413, 0,
	414, 0, 0, 0, 0, 779, 766, 775, 767, 291,
	297, 340, 385, 325, 345, 249, 376, 352, 776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 295, 0, 336, 274, 0, 0, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 361, 0, 0, 392, 393, 394, 416, 378, 0,
	431, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 426, 0, 427, 0, 0,
	0, 0, 0, 353, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 247, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 358, 374, 248,
	349, 387, 253, 356, 243, 323, 346, 0, 0, 240,
	372, 355, 305, 288, 289, 239, 0, 341, 267, 280,
	264, 321, 0, 371, 399, 263, 390, 0, 382, 242,
	0, 381, 320, 368, 373, 306, 300, 241, 370, 304,
	299, 292, 271, 415, 284, 332, 298, 333, 285, 310,
	309, 311, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 384, 0, 0, 0, 1954,
	1952, 0, 357, 0, 1953, 293, 0, 0, 0, 400,
	0, 344, 326, 0, 0, 0, 342, 296, 369, 334,
	375, 359, 383, 338, 335, 233, 360, 266, 307, 244,
	246, 261, 268, 270, 272, 273, 316, 317, 329, 348,
	362, 363, 364, 265, 254, 343, 255, 282, 256, 234,
	258, 257, 259, 350, 260, 236, 330, 367, 0, 278,
	339, 303, 237, 302, 331, 366, 365, 245, 391, 397,
	398, 403, 0, 404, 0, 0, 0, 412, 417, 418,
	419, 421, 422, 423, 424, 0, 0, 0, 0, 406,
	0, 0, 0, 0, 0, 0, 396, 276, 230, 231,
	434, 262, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 395, 0, 0, 0, 425, 433, 0,
	0, 0, 0, 0, 432, 328, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 377, 389, 407, 410, 0, 0, 0, 0, 235,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 405,
	0, 0, 312, 313, 314, 315, 279, 0, 252, 408,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	275, 281, 420, 283, 251, 327, 277, 386, 290, 0,
	413, 0, 414, 0, 0, 0, 0, 319, 286, 287,
	351, 291, 297, 340, 385, 325, 345, 249, 376, 352,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 295, 0, 336, 274, 0, 0, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 160, 361, 0, 392, 393, 394, 416,
	378, 0, 431, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 111, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 1720, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 129, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 160, 361, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 427, 0, 0, 111, 0, 0, 353,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 1711, 0,
	182, 0, 0, 0, 0, 0, 0, 247, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 358, 374, 248, 349, 387, 253, 356,
	243, 323, 346, 0, 0, 240, 372, 355, 305, 288,
	289, 239, 0, 341, 267, 280, 264, 321, 0, 371,
	399, 263, 390, 0, 382, 242, 0, 381, 320, 368,
	373, 306, 300, 241, 370, 304, 299, 292, 271, 415,
	284, 332, 298, 333, 285, 310, 309, 311, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 293, 0, 0, 0, 400, 0, 344, 326, 0,
	0, 0, 342, 296, 369, 334, 375, 359, 383, 338,
	335, 233, 360, 266, 307, 244, 246, 261, 268, 270,
	272, 273, 316, 317, 329, 348, 362, 363, 364, 265,
	254, 343, 255, 282, 256, 234, 258, 257, 259, 350,
	260, 236, 330, 367, 0, 278, 339, 303, 237, 302,
	331, 366, 365, 245, 391, 397, 398, 403, 0, 404,
	0, 0, 0, 412, 417, 418, 419, 421, 422, 423,
	424, 0, 0, 0, 0, 406, 0, 0, 0, 0,
	0, 0, 396, 276, 230, 231, 434, 262, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 395,
	0, 0, 0, 425, 433, 0, 0, 0, 0, 0,
	432, 328, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 377, 389, 407,
	410, 0, 0, 0, 0, 235, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 405, 0, 0, 312, 313,
	314, 315, 279, 0, 252, 408, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 275, 281, 420, 283,
	251, 327, 277, 386, 290, 0, 413, 0, 414, 0,
	0, 0, 0, 319, 286, 287, 351, 291, 297, 340,
	385, 325, 345, 249, 376, 352, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 295,
	129, 336, 274, 0, 0, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 160,
	361, 0, 392, 393, 394, 416, 378, 0, 431, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 111,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 129, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 777, 778, 0, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 756, 382,
	242, 755, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 779, 1635,
	775, 1636, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 2342, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 2345,
	0, 0, 2344, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 1194, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 1192, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1190, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 361, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 1188, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 427, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 1192, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1190, 0, 0, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 0,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 434, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 433, 0, 0, 0, 0,
	0, 432, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 0, 0, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 275, 281, 420,
	283, 251, 327, 277, 386, 290, 0, 413, 0, 414,
	0, 0, 0, 0, 319, 286, 287, 351, 291, 297,
	340, 385, 325, 345, 249, 376, 352, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	295, 0, 336, 274, 0, 0, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	361, 0, 0, 392, 393, 394, 416, 378, 0, 431,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3074, 0, 182, 605, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 1192, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1190, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	1192, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2733, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 2028, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 361, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 2047, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 427, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 1192, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 0,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 434, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 433, 0, 0, 0, 0,
	0, 432, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 0, 0, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 275, 281, 420,
	283, 251, 327, 277, 386, 290, 0, 413, 0, 414,
	0, 0, 0, 0, 319, 286, 287, 351, 291, 297,
	340, 385, 325, 345, 249, 376, 352, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	295, 0, 336, 274, 0, 0, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	361, 0, 0, 392, 393, 394, 416, 378, 0, 431,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3156, 0, 182, 0, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 605, 0, 0, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3089, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 3022, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 361, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 427, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2831, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 0,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 434, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 433, 0, 0, 0, 0,
	0, 432, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 0, 0, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 275, 281, 420,
	283, 251, 327, 277, 386, 290, 0, 413, 0, 414,
	0, 0, 0, 0, 319, 286, 287, 351, 291, 297,
	340, 385, 325, 345, 249, 376, 352, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	295, 0, 336, 274, 0, 0, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	361, 0, 0, 392, 393, 394, 416, 378, 0, 431,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 2880, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 361, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 427, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 2500, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 0,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 434, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 433, 0, 0, 0, 0,
	0, 432, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 0, 0, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 275, 281, 420,
	283, 251, 327, 277, 386, 290, 0, 413, 0, 414,
	0, 0, 0, 0, 319, 286, 287, 351, 291, 297,
	340, 385, 325, 345, 249, 376, 352, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	295, 0, 336, 274, 0, 0, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	361, 0, 0, 392, 393, 394, 416, 378, 0, 431,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 1192, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	2028, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 361, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 427, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 0,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 434, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 433, 0, 0, 0, 0,
	0, 432, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 0, 0, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 275, 281, 420,
	283, 251, 327, 277, 386, 290, 0, 413, 0, 414,
	0, 0, 0, 0, 319, 286, 287, 351, 291, 297,
	340, 385, 325, 345, 249, 376, 352, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	295, 0, 336, 274, 0, 0, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	361, 0, 0, 392, 393, 394, 416, 378, 0, 431,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 2063, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 0, 0, 0, 392, 393, 394, 416, 378,
	361, 431, 0, 0, 1905, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	1192, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 1519, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 1216, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 361, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 427, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 358, 374, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 0,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 434, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 433, 0, 0, 0, 0,
	0, 432, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 0, 0, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 275, 281, 420,
	283, 251, 327, 277, 386, 290, 0, 413, 0, 414,
	0, 0, 0, 0, 319, 286, 287, 351, 291, 297,
	340, 385, 325, 345, 249, 376, 352, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 232, 0,
	295, 0, 336, 274, 0, 0, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	361, 0, 0, 392, 393, 394, 416, 378, 0, 431,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 374, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 472, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 473, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 261, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 361, 0, 0, 392, 393, 394,
	416, 378, 0, 431, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 439, 269, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	427, 0, 0, 0, 0, 0, 353, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 247, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	358, 374, 248, 349, 387, 253, 356, 243, 323, 346,
	0, 0, 240, 372, 355, 305, 288, 289, 239, 0,
	341, 267, 280, 264, 321, 0, 371, 399, 263, 390,
	0, 382, 242, 0, 381, 320, 368, 373, 306, 300,
	241, 370, 304, 299, 292, 271, 415, 284, 332, 298,
	333, 285, 310, 309, 311, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 293, 0,
	0, 0, 400, 0, 344, 326, 0, 0, 0, 342,
	296, 369, 334, 375, 359, 383, 338, 335, 233, 360,
	266, 307, 244, 246, 261, 268, 270, 272, 273, 316,
	317, 329, 348, 362, 363, 364, 265, 254, 343, 255,
	282, 256, 234, 258, 257, 259, 350, 260, 236, 330,
	367, 0, 278, 339, 303, 237, 302, 331, 366, 365,
	245, 391, 397, 398, 403, 0, 404, 0, 0, 0,
	412, 417, 418, 419, 421, 422, 423, 424, 0, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 396,
	276, 230, 231, 434, 262, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 395, 0, 0, 0,
	425, 433, 0, 0, 0, 0, 0, 432, 328, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 377, 389, 407, 410, 0, 0,
	0, 0, 235, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 405, 0, 0, 312, 313, 314, 315, 279,
	0, 252, 408, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 402, 275, 281, 420, 283, 251, 327, 277,
	386, 290, 0, 413, 0, 414, 0, 0, 0, 0,
	319, 286, 287, 351, 291, 297, 340, 385, 325, 345,
	249, 376, 352, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 295, 0, 336, 274,
	0, 0, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 361, 0, 0, 392,
	393, 394, 416, 378, 0, 431, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 0, 427, 0, 0, 0, 0, 0, 353, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 247, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 358, 374, 248, 349, 387, 253, 356, 243,
	323, 346, 0, 0, 240, 372, 355, 305, 288, 289,
	239, 0, 341, 267, 280, 264, 321, 0, 371, 399,
	263, 390, 0, 382, 242, 0, 381, 320, 368, 373,
	306, 300, 241, 370, 304, 299, 292, 271, 415, 284,
	332, 298, 333, 285, 310, 309, 311, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	293, 0, 0, 0, 400, 0, 344, 326, 0, 0,
	0, 342, 296, 369, 334, 375, 359, 383, 338, 335,
	233, 360, 266, 307, 244, 246, 261, 268, 270, 272,
	273, 316, 317, 329, 348, 362, 363, 364, 265, 254,
	343, 255, 282, 256, 234, 258, 257, 259, 350, 260,
	236, 330, 367, 0, 278, 339, 303, 237, 302, 331,
	366, 365, 245, 391, 397, 398, 403, 0, 404, 0,
	0, 0, 412, 417, 418, 419, 421, 422, 423, 424,
	0, 0, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 396, 276, 230, 231, 434, 262, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 395, 0,
	0, 0, 425, 433, 0, 0, 0, 0, 0, 432,
	328, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 377, 389, 407, 410,
	0, 0, 0, 0, 235, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 405, 0, 0, 312, 313, 314,
	315, 279, 0, 252, 408, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 275, 281, 420, 283, 251,
	327, 277, 386, 290, 0, 413, 0, 414, 0, 0,
	0, 0, 319, 286, 287, 351, 291, 297, 340, 385,
	325, 345, 249, 376, 352, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 295, 0,
	336, 274, 0, 0, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 361, 0,
	0, 392, 393, 394, 416, 378, 0, 431, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 427, 0, 0, 0, 0, 0,
	353, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 247, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 358, 1172, 248, 349, 387, 253,
	356, 243, 323, 346, 0, 0, 240, 372, 355, 305,
	288, 289, 239, 0, 341, 267, 280, 264, 321, 0,
	371, 399, 263, 390, 0, 382, 242, 0, 381, 320,
	368, 373, 306, 300, 241, 370, 304, 299, 292, 271,
	415, 284, 332, 298, 333, 285, 310, 309, 311, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 293, 0, 0, 0, 400, 0, 344, 326,
	0, 0, 0, 342, 296, 369, 334, 375, 359, 383,
	338, 335, 233, 360, 266, 307, 244, 246, 261, 268,
	270, 272, 273, 316, 317, 329, 348, 362, 363, 364,
	265, 254, 343, 255, 282, 256, 234, 258, 257, 259,
	350, 260, 236, 330, 367, 0, 278, 339, 303, 237,
	302, 331, 366, 365, 245, 391, 397, 398, 403, 0,
	404, 0, 0, 0, 412, 417, 418, 419, 421, 422,
	423, 424, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 396, 276, 230, 231, 434, 262, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	395, 0, 0, 0, 425, 433, 0, 0, 0, 0,
	0, 432, 328, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 377, 389,
	407, 410, 0, 0, 0, 0, 235, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 405, 0, 0, 312,
	313, 314, 315, 279, 0, 252, 408, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 275, 281, 420,
	283, 251, 327, 277, 386, 290, 0, 413, 0, 414,
	0, 0, 0, 0, 319, 286, 287, 351, 291, 297,
	340, 385, 325, 345, 249, 376, 352, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	295, 0, 336, 274, 0, 0, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	361, 0, 0, 392, 393, 394, 416, 378, 0, 431,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 427, 0, 0, 0,
	0, 0, 353, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	247, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 358, 1170, 248, 349,
	387, 253, 356, 243, 323, 346, 0, 0, 240, 372,
	355, 305, 288, 289, 239, 0, 341, 267, 280, 264,
	321, 0, 371, 399, 263, 390, 0, 382, 242, 0,
	381, 320, 368, 373, 306, 300, 241, 370, 304, 299,
	292, 271, 415, 284, 332, 298, 333, 285, 310, 309,
	311, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 293, 0, 0, 0, 400, 0,
	344, 326, 0, 0, 0, 342, 296, 369, 334, 375,
	359, 383, 338, 335, 233, 360, 266, 307, 244, 246,
	261, 268, 270, 272, 273, 316, 317, 329, 348, 362,
	363, 364, 265, 254, 343, 255, 282, 256, 234, 258,
	257, 259, 350, 260, 236, 330, 367, 0, 278, 339,
	303, 237, 302, 331, 366, 365, 245, 391, 397, 398,
	403, 0, 404, 0, 0, 0, 412, 417, 418, 419,
	421, 422, 423, 424, 0, 0, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 396, 276, 230, 231, 434,
	262, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 395, 0, 0, 0, 425, 433, 0, 0,
	0, 0, 0, 432, 328, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	377, 389, 407, 410, 0, 0, 0, 0, 235, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 405, 0,
	0, 312, 313, 314, 315, 279, 0, 252, 408, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 401, 402, 275,
	281, 420, 283, 251, 327, 277, 386, 290, 0, 413,
	0, 414, 0, 0, 0, 0, 319, 286, 287, 351,
	291, 297, 340, 385, 325, 345, 249, 376, 352, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 295, 0, 336, 274, 0, 0, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 361, 0, 0, 392, 393, 394, 416, 378,
	0, 431, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 427, 0,
	0, 0, 0, 0, 353, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 247, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 358, 374,
	248, 349, 387, 253, 356, 243, 323, 346, 0, 0,
	240, 372, 355, 305, 288, 289, 239, 0, 341, 267,
	280, 264, 321, 0, 371, 399, 263, 390, 0, 382,
	242, 0, 381, 320, 368, 373, 306, 300, 241, 370,
	304, 299, 292, 271, 415, 284, 332, 298, 333, 285,
	310, 309, 311, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 293, 0, 0, 0,
	400, 0, 344, 326, 0, 0, 0, 342, 296, 369,
	334, 375, 359, 383, 338, 335, 233, 360, 266, 307,
	244, 246, 513, 268, 270, 272, 273, 316, 317, 329,
	348, 362, 363, 364, 265, 254, 343, 255, 282, 256,
	234, 258, 257, 259, 350, 260, 236, 330, 367, 0,
	278, 339, 303, 237, 302, 331, 366, 365, 245, 391,
	397, 398, 403, 0, 404, 0, 0, 0, 412, 417,
	418, 419, 421, 422, 423, 424, 0, 0, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 396, 276, 230,
	231, 434, 262, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 395, 0, 0, 0, 425, 433,
	0, 0, 0, 0, 0, 432, 328, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 377, 389, 407, 410, 0, 0, 0, 0,
	235, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	405, 0, 0, 312, 313, 314, 315, 279, 0, 252,
	408, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 275, 281, 420, 283, 251, 327, 277, 386, 290,
	0, 413, 0, 414, 0, 0, 0, 0, 319, 286,
	287, 351, 291, 297, 340, 385, 325, 345, 249, 376,
	352, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 295, 0, 336, 274, 0, 0,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 847, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 0, 0, 0, 392, 393, 394,
	416, 378, 160, 431, 50, 152, 128, 0, 0, 1591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 1562, 0, 0, 0, 0, 0,
	0, 0, 111, 1594, 1595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 1561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 835, 0, 0, 1568, 825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 855, 859, 861, 863, 865, 866, 868, 0, 873,
	869, 870, 871, 872, 0, 850, 851, 852, 853, 833,
	834, 856, 0, 836, 0, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 848, 854, 0, 115, 116,
	0, 117, 118, 0, 858, 860, 862, 864, 867, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 127, 151, 158, 0,
	97, 0, 0, 0, 0, 698, 0, 702, 1553, 1552,
	1555, 0, 1551, 0, 0, 0, 0, 1572, 150, 144,
	143, 0, 0, 0, 0, 56, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1566, 1600,
	0, 0, 1567, 1569, 1571, 0, 1573, 1574, 1575, 1579,
	1580, 1581, 1583, 1586, 1587, 1588, 0, 0, 0, 0,
	0, 0, 0, 1576, 1585, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 146, 147, 148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 700, 0, 694, 149, 683, 108, 1591, 0, 0,
	0, 0, 697, 696, 1589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 1565, 0, 688, 847, 0, 0, 0, 1564, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 109, 0, 0, 0, 0, 0, 0,
	0, 1570, 703, 0, 49, 1591, 0, 693, 0, 0,
	0, 692, 3173, 1597, 1596, 0, 0, 679, 0, 0,
	0, 686, 1568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 684, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 0, 0, 0, 681,
	0, 0, 0, 0, 0, 1558, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 0, 129, 0, 1584, 0,
	1568, 0, 0, 0, 0, 0, 0, 1599, 0, 685,
	1598, 0, 0, 855, 859, 861, 863, 865, 866, 868,
	0, 873, 869, 870, 871, 872, 0, 850, 851, 852,
	853, 833, 834, 856, 0, 836, 0, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 848, 854, 0,
	0, 0, 0, 0, 110, 38, 858, 860, 862, 864,
	867, 48, 2928, 0, 0, 114, 1584, 0, 0, 0,
	0, 0, 0, 0, 1591, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 699, 0, 1578, 0, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 1600, 1593, 0,
	1567, 1569, 1571, 0, 1573, 1574, 1575, 1579, 1580, 1581,
	1583, 1586, 1587, 1588, 0, 0, 0, 0, 0, 0,
	0, 1576, 1585, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 1568,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 1600, 0, 0, 1567, 1569,
	1571, 0, 1573, 1574, 1575, 1579, 1580, 1581, 1583, 1586,
	1587, 1588, 0, 0, 0, 0, 0, 0, 0, 1576,
	1585, 1577, 1589, 0, 0, 0, 492, 0, 491, 498,
	488, 0, 0, 2562, 0, 0, 0, 0, 0, 1565,
	495, 496, 0, 497, 501, 1584, 1564, 483, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 2574, 0, 0, 492, 0, 491, 498, 488, 1570,
	0, 0, 0, 0, 2565, 0, 0, 0, 495, 496,
	1589, 497, 501, 2560, 0, 483, 0, 0, 2580, 2581,
	510, 0, 0, 512, 2561, 506, 0, 1565, 511, 0,
	0, 0, 0, 492, 1564, 491, 498, 488, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 495, 496, 0,
	497, 501, 0, 1578, 483, 0, 0, 0, 1582, 0,
	0, 2566, 0, 0, 506, 0, 0, 1570, 510, 0,
	0, 512, 0, 1566, 1600, 0, 511, 1567, 1569, 1571,
	0, 1573, 1574, 1575, 1579, 1580, 1581, 1583, 1586, 1587,
	1588, 0, 0, 0, 0, 0, 857, 0, 1576, 1585,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2579, 0, 1941, 0, 0, 0, 0, 0,
	484, 486, 485, 0, 0, 0, 0, 0, 0, 1589,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 2570,
	0, 0, 494, 0, 0, 0, 1565, 0, 0, 509,
	0, 0, 0, 1564, 0, 0, 487, 0, 0, 0,
	478, 2567, 2571, 2569, 2568, 0, 0, 0, 484, 486,
	485, 0, 0, 0, 0, 0, 0, 1582, 490, 0,
	0, 0, 0, 0, 0, 0, 1570, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 509, 0, 2576,
	2577, 0, 0, 0, 487, 0, 0, 484, 486, 485,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 509, 0, 0, 2582,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 2563, 0, 0, 0, 0, 0, 2575, 489, 493,
	499, 0, 500, 502, 0, 0, 503, 504, 505, 0,
	0, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 493, 499, 0,
	500, 502, 0, 0, 503, 504, 505, 0, 0, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 493, 499, 0, 500,
	502, 0, 0, 503, 504, 505, 0, 0, 507, 508,
}

var yyPact = [...]int{
	268, -1000, -1000, -1000, -302, 9645, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34515, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34515, -300,
	33963, 33963, -1000, -1000, 2022, -1000, 33411, 10768, 34515, 279,
	276, 34515, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 600, -1000, 32859,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 522, 37446, 36171,
	7426, -249, -1000, 2754, -97, 747, 765, 887, 887, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 36860, 746, 32307,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2865, 345, 746, 13528, 8, 7, 2754, 329, 2258, -1000,
	1030, 36732, 155, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7426, 7426, 9645, -311, 9645, 7426,
	34515, 34515, -1000, -1000, -1000, -1000, 522, 37446, 7426, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36682, -1000,
	1275, -1000, -1000, -1000, -1000, 2365, 1272, 1912, 471, 34515,
	-1000, 1271, 471, -1000, -1000, -1000, 2754, 2754, -1000, 34515,
	34515, 71, 1396, -1000, 317, 324, 330, 1265, -1000, -1000,
	-1000, -1000, -1000, -1000, 404, 2771, -1000, 34515, 34515, 2391,
	34515, -1000, 1749, 433, 37494, 2639, 1266, 668, 2444, -1000,
	-1000, 2362, -1000, 185, 139, 160, 379, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 200, -1000, 2697, -1000, -1000, 181,
	-1000, -1000, 162, -1000, -1000, -1000, 6, -1000, -1000, -1000,
	-1000, -1000, -1000, -98, -1000, -1000, 807, 1780, 7426, -1000,
	1723, -1000, 1469, -1000, -1000, -1000, -1000, 4656, 9082, 9082,
	9082, 9082, -1000, -1000, 2193, 7426, 2351, 2349, -1000, -1000,
	-1000, -1000, -1000, 1264, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1911, 8530, -1000, 2345,
	2344, 2343, 2342, 2324, 2323, 2319, 2309, 2308, 2307, 2305,
	2304, 2303, 2302, 2083, 10205, 2298, 1905, 1903, 2297, 2290,
	2289, 1898, 2083, 2083, 2288, 2282, 2280, 2278, 2271, 2269,
	2266, 2263, 2261, 2260, 2259, 2252, 2250, 2246, 2245, 2244,
	2243, 2241, 2229, 2227, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1244, -1000, 2226,
	2623, 2709, 2094, 2748, 2680, 2676, 2671, 2663, 1697, -1000,
	-1000, -1000, -113, -1000, -1000, 790, -1000, 715, -1000, 34515,
	34515, 34515, 588, 520, 520, 520, 520, 520, 520, 545,
	520, 581, 572, 561, 520, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -118, 1394, 1392, 2524, 682, -1000, -1000, -1000,
	-1000, 1072, 34515, -1000, 2136, 1332, 2705, 449, 442, 438,
	1332, 343, -1000, 1426, 1426, 1426, 1426, 1332, 370, 444,
	2709, 2709, -12, 1426, -8, 1332, 1332, -8, 1332, 1332,
	1332, 135, -297, -1000, -1000, -1000, 1426, 1426, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2692, 2690, 522, 34515, 119,
	34515, 522, 522, 522, 527, -54, 35619, 35067, 1749, 430,
	427, 1128, 1437, -1000, 1321, 34515, 34515, 1321, 1321, 17947,
	17395, -1000, 34515, -1000, 2709, 2094, -1000, 2063, 2428, 2062,
	2094, 522, 522, 522, 522, 522, 153, 522, 522, 522,
	34515, 34515, 31755, 522, 522, 6312, 6312, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9645, 1707, 1754, 152,
	-68, -309, 184, -1000, -1000, 34515, 2595, 159, -1000, -1000,
	-1000, 2084, -1000, 2134, 2134, 2134, 2134, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2168, 2222, -1000, -1000,
	2133, 2133, 2133, 2084, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2158,
	2158, 2160, 2160, 2158, 34515, 7426, 34515, 2633, 322, 2212,
	-1000, 34515, 315, 2709, 2623, 2709, -1000, -1000, 1261, 1695,
	1892, -1000, -1000, 317, 1277, -1000, 925, -1000, -1000, -1000,
	-1000, 34515, -98, 310, -1000, -1000, 1882, 2207, -1000, 468,
	940, 1102, -1000, 149, 37533, 27331, 1749, 27331, 34515, -1000,
	-1000, -1000, -1000, -1000, -1000, 3, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 173,
	-1000, 7426, 7426, 7426, 7426, 7426, -1000, 548, 7978, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9082, 9082, 9082, 9082,
	9082, 9082, 9082, 9082, 9082, 9082, 9082, 9082, 2182, 1378,
	9082, 9082, 9082, 9082, 2428, 2632, 1076, 231, -1000, -1000,
	-1000, -1000, -1000, 1422, 1780, 7426, 7426, 34515, -1000, 2900,
	7426, 7426, 3019, 7426, 2661, 7426, 7426, 7426, 2060, 3551,
	34515, 7426, -1000, 2059, 2055, -1000, -1000, 1553, 7426, -1000,
	-1000, 7426, -1000, -1000, 7426, 9082, 7426, -1000, -1000, -1000,
	2046, 2661, 2661, 7426, 7426, 2661, 2661, 2661, 1406, 2661,
	2661, 2661, 2661, 2661, 2661, 2661, 2661, 2050, 2048, 2047,
	2709, -249, 5760, -1000, -255, 2623, 7426, -1000, -1000, 7426,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1890, -50,
	753, 718, 734, -1000, 2653, -1000, 2206, 2205, 1260, 520,
	-1000, 34515, 1443, 34515, 27331, 34515, 34515, 1749, 34515, 34515,
	520, 520, 520, 34515, -1000, 2556, 27331, 2535, 527, -1000,
	34515, 1072, 2652, 34515, 2759, 9082, 9082, 31203, 1426, 1332,
	1332, -1000, -1000, 34515, -1000, -1000, -1000, 1426, 34515, 1426,
	1426, 2759, 1426, -1000, -1000, -1000, 1332, 1332, -1000, -1000,
	-1000, -1000, 1426, 1426, -1000, -1000, 2759, 34515, 1, 2759,
	2759, -23, -1000, -1000, -1000, 34515, 34515, 520, 34515, -1000,
	34515, 34515, -1000, -1000, 34515, 36743, 34515, 30651, 2689, -1000,
	27331, 34515, 34515, 25123, -1000, 1051, -1000, -46, -1000, -65,
	-54, 1321, -54, 1321, -1000, 466, 479, 16291, 403, 27331,
	4103, -1000, -1000, 1321, 1321, 4103, 4103, 1280, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1071, -1000, 172, 2623, -1000,
	-1000, -1000, -1000, -1000, 34515, 34515, 27331, 1749, 34515, 522,
	34515, 34515, 34515, -1000, 2197, -1000, 2637, 34515, 34515, 1098,
	-1000, -1000, 12976, 1257, 1098, -1000, 1434, -1000, 7426, 9645,
	-274, 7426, 9645, 9645, 7426, 9645, -1000, 7426, 151, -1000,
	-1000, -1000, -1000, 1693, -1000, 1691, -1000, -1000, -1000, 1889,
	1889, -1000, 1690, -1000, -1000, -1000, -1000, 1684, -1000, -1000,
	1680, -1000, -1000, -1000, 2035, 807, -1000, 1884, 2436, -250,
	-1000, 15186, 34515, 34515, -1000, -1000, -250, -1000, 14633, 34515,
	2623, -1000, 2623, 34515, -1000, 2704, -1000, 317, 260, -1000,
	-1000, -1000, -1000, -1000, -1000, 1252, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1069, -1000, 34515, -1000, -1000,
	149, 27331, 28435, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	201, -1000, -1000, 165, -1000, 538, 103, 1273, -1000, -1000,
	129, 168, 613, 1780, -1000, 1475, 1475, 1457, -1000, 497,
	-1000, -1000, -1000, -1000, 2193, -1000, -1000, -1000, 1230, 2272,
	-1000, 1304, 1304, 1256, 1256, 1256, 1256, 1256, 1384, 1384,
	-1000, -1000, -1000, 4656, 2182, 9082, 9082, 9082, 9082, 493,
	493, 3460, 3416, -1000, 7426, 1433, -1000, 7426, 2011, 958,
	1251, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2033, 2031, 2209, 2770, 2028, 7426, -1000, -1000, 1268,
	1255, 1254, -1000, 1837, 6874, -1000, -1000, -1000, 2024, 1242,
	2020, -1000, -1000, -1000, 2018, 1253, 935, 2015, 2360, 2008,
	1067, 7426, 7426, 1249, 1246, 7426, 7426, 7426, 7426, 2006,
	7426, 7426, 7426, 7426, 7426, 7426, 7426, 7426, 26, 26,
	26, -1000, -1000, 1245, -1000, 1780, -1000, 1878, -1000, 1024,
	1064, -1000, 1886, -1000, -1000, -1000, -1000, 742, 704, 784,
	34515, 919, 11320, 34515, 34515, 2136, 2635, 134, -1000, 1063,
	-1000, 103, -106, 292, 817, 2386, 2768, 34515, 34515, 34515,
	2649, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30099,
	-1000, 2178, 1243, -1000, -1000, 7426, -1000, -1000, 2385, 34515,
	34515, 2759, 2759, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	34515, 2759, 2759, 1332, 1426, -1000, -1000, 1426, -1000, -1000,
	1426, -1000, 1239, -1000, 34515, -1000, -1000, -1000, 2136, 1055,
	-1000, 11872, 14080, 450, -1000, 737, 1342, 857, 537, 2576,
	176, -1000, 1342, -200, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 398, 395, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
	1342, 1342, 1342, 1342, 762, 1342, 1342, 1342, 1342, 1342,
	-1000, 1342, 2177, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	434, 133, 2687, 216, 213, 1063, 2685, 230, 2769, 904,
	-1000, -1000, -1000, -1000, 20155, 20155, 15739, 20155, -1000, 1279,
	-54, -90, -1000, -1000, 1051, 4103, 1051, 4103, -1000, -1000,
	534, -1000, -1000, 817, -1000, 34515, 34515, -1000, -1000, 2176,
	1391, -1000, -1000, 10205, -1000, 4103, 4103, -1000, -1000, 20707,
	34515, -1000, -101, -1000, -84, 2703, 1049, -1000, -1000, 1050,
	817, 2433, 34515, 1049, -1000, -1000, 11320, 34515, -1000, -1000,
	2759, 6312, -1000, 25123, -1000, -1000, 29539, -1000, 28987, 2759,
	1412, -1000, 9645, 1722, 148, -1000, 180, -313, 150, 1531,
	144, 1780, -1000, -1000, 2005, 2003, 1236, -1000, 1227, 1982,
	1225, 1208, -1000, -21, -1000, 2604, 821, -1000, 2174, -1000,
	1201, 2517, -1000, 1048, -1000, 1373, 1195, -1000, 821, 1189,
	2510, 1048, 2703, -1000, 1235, 67, -1000, -1000, 34515, 1882,
	1176, 28435, 968, -1000, 533, 1233, 1232, -1000, 27331, 183,
	27331, -1000, 27331, -1000, -1000, 335, -1000, 34515, 2618, -1000,
	-1000, -1000, 1830, -328, -1000, -1000, -1000, -1000, -1000, 1163,
	-1000, 493, 493, 3460, 3394, -1000, 9082, -1000, 9082, 2591,
	1401, -1000, 7426, 1656, 3278, 1688, 19051, 34515, -1000, -1000,
	7426, 7426, -1000, 2557, -1000, -1000, -1000, -1000, 7426, 7426,
	2026, -1000, 34515, -1000, -1000, -1000, -1000, 19051, -1000, 9082,
	-1000, 7426, 1086, 2521, 26, 26, 2506, 2491, 2477, 1158,
	26, 2447, 2424, 2376, 2370, 2366, 2359, 2346, 2312, -1000,
	2170, -1000, -1000, 5760, -1000, -21, 7426, 7426, 7426, 2569,
	-1000, -1000, -1000, -1000, -1000, 701, 156, 1980, 1045, -1000,
	-1000, 34515, -1000, -1000, -1000, 1972, 1019, -1000, -1000, -1000,
	37094, 2134, 2134, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2168, -1000, -1000, 2133, 2133, 2133, 2084, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2158, 2158,
	2160, 2160, 2158, -1000, 2136, 2648, -1000, 31, 1342, 502,
	27331, 422, -1000, 34515, 1689, 1371, 2431, 272, 2585, 34515,
	2154, 2153, 2152, 274, 37094, 34515, 1041, -1000, 1212, 36732,
	-1000, 34515, 1780, -1000, 1749, -1000, 1332, -1000, -1000, 2759,
	1126, -1000, -1000, 2759, 1332, 1332, 1426, 34515, -1000, 2646,
	36743, -1000, 2575, 34515, -1000, -1000, 37094, 619, -1000, 669,
	520, 34515, 1513, 669, 1491, 2150, -1000, -1000, -1000, 34515,
	34515, -1000, 34515, 1489, 1488, -1000, 34515, 34515, 34515, 34515,
	-1000, -1000, 2593, -1000, 1342, 1342, 655, -1000, -1000, 478,
	-1000, 1679, 1678, 1676, 1673, 1877, 1875, 1874, 1342, 1342,
	1666, 1868, 27883, 1867, 950, 1665, 1664, 1662, 1740, 1865,
	652, -1000, 1862, 1716, 1715, 1706, 34515, 2146, 1815, -1000,
	-1000, 31, 1342, 205, 34515, 1368, 502, 281, 1711, 16843,
	34515, 25123, 25123, 25123, 25123, -1000, 2498, 2493, -1000, 2468,
	2458, 2511, 34515, 25123, 2136, -1000, 27883, -1000, -1000, -1000,
	2428, 1153, 2747, 690, 7426, -1000, -1000, -69, -81, -1000,
	-1000, -1000, 27331, 1856, 403, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2787, 34515, 34515, 598, 1971, -1000, 2757,
	-1000, 1007, -1000, -1000, 1210, -1000, 2757, 1430, -306, 9645,
	1419, 1359, -1000, 7426, 9645, 7426, -275, 196, -278, -1000,
	-1000, -1000, 1854, -1000, -1000, -1000, 1657, -1000, 1654, 36,
	55, 1487, -250, 5760, 325, 34515, -250, 34515, 5760, -1000,
	34515, 323, -250, -1000, 34515, 1645, -1000, -1000, -1000, 2761,
	27331, 1749, 1300, 26779, -1000, 179, -1000, 198, 440, 1852,
	-1000, 559, 100, -1000, 1361, 1830, -1000, -1000, -1000, 9082,
	-1000, -1000, -1000, -1000, 1780, 7426, 1970, -1000, 727, 727,
	1965, -1000, 2134, 2134, -1000, 2084, 2133, 2084, 727, 727,
	1960, -1000, 1801, 2267, -1000, 2248, 2172, 7426, -1000, 1957,
	3295, 971, -124, 26, -1000, -1000, -1000, 26, 26, 26,
	26, -1000, 26, 26, 26, 26, 26, 26, 26, 26,
	472, -1000, 36, 1780, 1780, -1000, -1000, 2578, -1000, 1851,
	1849, 919, 37094, 604, 11320, 2586, 2645, 332, 1718, -1000,
	-1000, -1000, 26227, 426, -1000, -1000, -1000, 513, 164, 1632,
	414, -1000, 34515, 230, 2551, 1358, 1848, 34515, -1000, -1000,
	-1000, -1000, -1000, 2585, -1000, 758, 255, 12424, 12424, 12424,
	261, 1444, -1000, 471, 942, 1197, 25123, 34515, -1000, 24571,
	1952, -1000, 817, 2759, -1000, 34515, -1000, 2759, 2759, 1332,
	-1000, 332, -1000, -1000, -1000, 34515, 2575, 37423, -1000, 34515,
	-1000, 34515, -1000, 34515, 34515, 520, 7426, -1000, -1000, -1000,
	34515, -1000, 252, 517, 517, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19051, 19051, 2679, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1844, 1839, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34515, 1144,
	-1000, 1355, 1718, 26227, 1354, 1321, 1838, 426, 1689, 1352,
	-1000, 1831, -1000, 846, 34515, 34515, -1000, 1003, -1000, 1351,
	2371, 2430, 2371, -1000, -1000, -1000, -1000, 2486, -1000, 2470,
	-1000, -1000, 1003, -1000, -1000, -1000, -1000, -1000, 690, -1000,
	2702, 669, 669, 669, 1948, -1000, -1000, -1000, 968, 1946,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2753,
	2745, 25675, 2753, -1000, -306, 1387, -1000, 1545, 143, 1425,
	34515, -1000, -1000, -1000, 1940, 1939, -259, 59, 2744, 2739,
	2784, -1000, 1938, 963, -250, -1000, -1000, 821, -1000, -1000,
	-1000, -250, -1000, 821, -1000, -1000, 1749, -1000, 195, -1000,
	-1000, -1000, -1000, -1000, -1000, 86, -1000, 34515, -1000, 1830,
	1829, 99, -1000, 1780, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7426,
	-1000, -1000, -1000, 2017, -1000, -1000, 7426, 1936, 1827, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2751, -1000, 2736, -259, -1000, -1000, -1000, -1000,
	-1000, -1000, 37094, -1000, 1087, 332, -168, -1000, 1826, 102,
	-1000, -1000, -1000, 1820, 1818, 1631, -1000, -1000, 1694, 1164,
	113, -1000, -1000, -1000, -1000, -1000, -1000, 1711, 1708, 1350,
	-333, -1000, 2130, -1000, 1342, 1342, 1342, 34515, 1922, 862,
	-1000, -1000, -1000, -1000, 1904, 1842, 482, 1364, 1357, -1000,
	1597, 20155, 25123, 24571, 930, -1000, 1191, -1000, -1000, -1000,
	2759, -1000, -1000, 2759, -1000, -1000, -1000, -1000, 37423, -1000,
	-1000, 1525, 9082, -1000, -1000, 1816, 19603, 657, 1349, 1347,
	658, 2129, -1000, 349, 2781, -1000, -1000, -1000, 645, 1483,
	1481, -1000, 34515, -1000, 2124, -1000, 2119, 2381, 298, 2116,
	2112, 34515, 1969, -1000, -1000, -1000, -1000, -1000, -1000, 334,
	-1000, 1231, -1000, 19051, -1000, -1000, 1133, -1000, 1815, 1812,
	-1000, 102, 1810, 4103, -1000, -1000, 2551, 1808, -1000, 34515,
	846, 846, 2751, 34515, 5760, -1000, -1000, 7426, 2103, -1000,
	7426, -1000, -1000, -1000, -1000, -1000, 2098, 2522, -1000, -1000,
	-1000, -1000, -1000, -1000, 7426, 7426, -1000, -1000, 519, 9645,
	-279, 194, -1000, -1000, -1000, -261, 1805, -1000, -1000, 2735,
	1798, 1719, 34515, -1000, 821, 821, 817, -1000, -1000, -23,
	-1000, -1000, -1000, 1964, -1000, 1899, 26, -1000, 136, 7426,
	-261, -166, -1000, -1000, -168, -1000, 319, -1000, -1000, 306,
	-1000, -1000, 221, -1000, -1000, 1605, 464, -1000, -1000, -1000,
	1797, 1528, 1738, 23467, 19051, 19603, 1790, -1000, 37318, 12424,
	173, 37318, 771, 1356, -1000, 1587, -1000, 1581, -1000, 2759,
	930, 1191, -1000, -1000, 1293, -1000, -1000, -1000, -1000, 3460,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1789, 1785,
	-1000, -1000, -1000, -1000, -1000, 1580, 2092, -115, 2666, -1000,
	-1000, 2091, 23467, 23467, 287, 287, 23467, 23467, 2088, 517,
	-1000, 1342, 923, -1000, -1000, -1000, -1000, -1000, -1000, 1708,
	-1000, -1000, 2709, -1000, -1000, 1780, 34515, 1780, 24019, -1000,
	2732, 2731, 1780, 807, -1000, -306, 34515, 34515, -264, 1578,
	-1000, 1773, 56, -1000, -1000, 811, -267, 35, 49, -1000,
	-1000, -1000, 1777, -1000, 918, -1000, -1000, -1000, 807, -264,
	34515, -1000, 348, -1000, -1000, 435, 1771, -1000, -1000, 220,
	-1000, -1000, -1000, -1000, -1000, 98, -1000, 1345, 1132, -1000,
	2084, 7426, -1000, -1000, -1000, 470, 37159, -1000, 857, -1000,
	-1000, -23, 470, 423, 249, -1000, 1570, -1000, -1000, 2751,
	-1000, -1000, -1000, 1745, 7426, 2083, 1342, -154, 23467, 1115,
	1114, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1113, 1101,
	23467, -1000, -1000, 19051, 1342, -1000, -1000, 1099, 1091, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2079, -1000, -1000, 2730,
	-1000, 1768, 525, 39, 49, -1000, 2728, 54, 2727, 2725,
	-1000, -1000, 469, -253, 24, 23, 15, -1000, -1000, -1000,
	7426, -1000, 2642, -1000, 177, -1000, 82, -1000, -1000, -1000,
	1738, 1734, -1000, 23467, 2615, 1893, 305, 2724, 37318, -1000,
	1342, -1000, 305, -1000, 266, -1000, 1330, -1000, 1567, -1000,
	2709, -1000, 1772, -1000, 34515, 2410, -1000, 146, 1085, 2314,
	2274, 2049, 1901, 1068, -1000, 19051, -1000, -1000, 22915, 34515,
	1719, -1000, 2077, 1564, 59, 40, 2723, -1000, 1719, 2718,
	1719, 1719, 1450, -1000, 20, 18, 13, -1000, -1000, -1000,
	-1000, 1733, -1000, -1000, -1000, -1000, 225, -1000, -1000, 2615,
	-1000, 2716, 362, -1000, 19051, -1000, -1000, -1000, 1548, -1000,
	-1000, 517, -1000, -1000, 2404, 2393, 2767, -1000, -1000, -1000,
	-1000, 225, 287, 225, 287, 225, 287, 225, 287, 169,
	-1000, -1000, -1000, 1057, -1000, -1000, 2659, 18499, 32, -1000,
	-1000, -1000, 1732, -1000, 1719, -1000, -1000, 469, -1000, -1000,
	-1000, -1000, -1000, 1342, 1710, 248, -1000, -1000, -1000, 22363,
	337, 356, 353, -1000, 463, -1000, -1000, -1000, -1000, -1000,
	2780, -1000, 2776, 649, 649, -1000, -1000, -1000, -1000, -1000,
	-1000, 34515, -1000, 34515, -1000, 1047, -1000, -1000, -1000, 920,
	-1000, -1000, -1000, -1000, -1000, 1547, -1000, 34515, -1000, 34515,
	326, 1539, 9082, 2075, 9082, 2074, 327, 2073, -1000, -1000,
	-1000, 1624, 360, -1000, 225, 225, 225, 225, -1000, 799,
	-1000, 1337, -1000, 21811, 34515, -1000, -1000, 1040, 2072, 2711,
	-1000, 3156, 34515, 3136, 34515, 2071, 1284, 9082, -1000, -1000,
	-1000, 34515, 5208, -1000, 858, -1000, -1000, 461, 336, -1000,
	1016, -1000, 982, 21259, 1536, 3092, -1000, -1000, 1780, 34515,
	977, -1000, 34515, 318, -1000, -1000, -1000, 924, -1000, -1000,
	-1000, -1000, 461, 2509, -1000, 1486, -1000, -1000, 37091, 599,
	-1000, -1000, 37091, 320, -1000, 456, 2066, -1000, -1000, 905,
	-1000, 34515, 641, 7426, -1000, 320, 37318, -1000, 7426, 875,
	-1000, 37318, 859, -1000, -1000,
}

var yyPgo = [...]int{
	0, 155, 2802, 238, 157, 3333, 87, 236, 205, 202,
	233, 3332, 3331, 2605, 2594, 3330, 3329, 3328, 3327, 3326,
	3324, 3322, 3313, 3309, 3307, 3303, 3289, 3288, 3287, 3286,
	3283, 3282, 3268, 3267, 3266, 3265, 3264, 3263, 3262, 232,
	3261, 3260, 3259, 3258, 3256, 3255, 3254, 3247, 3246, 3244,
	3243, 3242, 3240, 3239, 3223, 3222, 3221, 3220, 3219, 3217,
	3216, 3215, 3214, 3212, 3211, 3210, 3209, 3208, 3207, 3206,
	198, 3203, 2593, 3202, 3200, 3199, 3198, 3197, 3195, 3192,
	218, 3186, 3184, 3183, 3181, 3180, 3179, 3178, 3175, 3171,
	3170, 3169, 216, 3167, 3166, 3165, 3164, 3163, 3162, 213,
	3161, 151, 195, 3160, 3159, 3157, 3156, 3155, 223, 235,
	61, 3152, 45, 3151, 209, 3149, 136, 3147, 134, 3146,
	3142, 3141, 3140, 3138, 3134, 3132, 3131, 3130, 3128, 3127,
	3122, 3121, 3120, 3119, 3118, 79, 3117, 246, 3116, 64,
	3113, 3112, 109, 166, 183, 248, 68, 244, 234, 171,
	160, 84, 3111, 2606, 3110, 207, 217, 144, 26, 3109,
	162, 3108, 143, 36, 40, 237, 116, 50, 174, 98,
	3107, 208, 94, 91, 3106, 3105, 170, 240, 173, 3102,
	120, 3099, 3098, 3096, 3095, 203, 185, 3087, 3084, 114,
	3083, 3082, 108, 3080, 56, 186, 148, 176, 3079, 1363,
	101, 113, 161, 3078, 3077, 82, 3076, 3075, 3074, 3073,
	164, 3071, 3068, 127, 78, 3067, 3066, 3065, 55, 3063,
	30, 3062, 63, 3061, 3060, 3057, 3053, 3051, 3049, 3048,
	3047, 3046, 3045, 3044, 65, 3042, 3038, 16, 21, 24,
	3036, 23, 3034, 153, 3033, 3032, 3030, 97, 3024, 4,
	3022, 214, 124, 88, 137, 3021, 417, 3020, 3019, 3018,
	139, 3017, 532, 3015, 3013, 3012, 3011, 3006, 14, 3005,
	206, 44, 3004, 86, 122, 3002, 34, 43, 192, 201,
	3000, 2999, 2998, 128, 103, 28, 0, 2997, 140, 2994,
	2992, 2989, 239, 2987, 220, 204, 156, 132, 258, 212,
	2983, 2982, 77, 2979, 142, 81, 47, 117, 8, 18,
	189, 2974, 734, 167, 2973, 196, 2972, 141, 1, 133,
	2971, 2970, 42, 295, 2968, 2967, 2966, 104, 2964, 2963,
	99, 85, 2962, 2961, 2958, 38, 2954, 33, 25, 2953,
	111, 2952, 231, 2950, 249, 125, 165, 159, 135, 211,
	222, 67, 66, 2949, 1477, 138, 83, 29, 2948, 215,
	2947, 145, 115, 2946, 107, 2944, 229, 377, 191, 2943,
	169, 10, 41, 32, 2942, 9, 2941, 121, 210, 2940,
	2939, 20, 46, 2938, 17, 2937, 2936, 2935, 2934, 5,
	2932, 2929, 2928, 2, 7, 2927, 3, 197, 2926, 2925,
	2923, 2922, 48, 129, 2920, 106, 180, 149, 2919, 80,
	2918, 2917, 2916, 828, 2915, 241, 2914, 2913, 2912, 2911,
	2910, 2908, 2907, 2906, 2905, 105, 53, 2903, 2901, 2900,
	2899, 72, 131, 2896, 2895, 2893, 2889, 35, 163, 2888,
	19, 2885, 31, 27, 37, 2883, 119, 2881, 12, 168,
	2880, 2878, 15, 2877, 2876, 11, 13, 2875, 2873, 102,
	2872, 76, 22, 147, 89, 2869, 2868, 75, 200, 118,
	2867, 2866, 228, 225, 187, 2865, 150, 221, 243, 2864,
	199, 2860, 2858, 2857, 2856, 2855, 2853, 1282, 2850, 2849,
	227, 60, 70, 93, 2847, 2846, 2835, 73, 146, 96,
	95, 54, 71, 2834, 92, 188, 2832, 178, 2831, 2830,
	90, 2829, 2826, 2825, 2822, 2819, 172, 2812, 2809, 175,
	219, 2807, 2806, 2805, 2804, 242, 277, 2784,
}

//line mysql_sql.y:10074
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 515, 523, 523, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 513, 513, 513, 514, 514, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 458, 458, 457, 457, 456, 456, 410, 410,
	455, 455, 455, 454, 454, 454, 453, 453, 452, 452,
	451, 451, 449, 449, 450, 448, 447, 447, 447, 445,
	445, 445, 441, 441, 443, 442, 442, 444, 436, 436,
	439, 439, 437, 437, 437, 437, 440, 435, 435, 435,
	434, 434, 91, 91, 91, 356, 356, 90, 90, 370,
	370, 370, 370, 370, 368, 368, 368, 368, 368, 368,
	367, 367, 366, 366, 371, 371, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 81, 81, 81, 81,
	81, 86, 86, 86, 520, 520, 519, 519, 521, 521,
	521, 521, 522, 522, 84, 84, 84, 85, 365, 365,
	365, 82, 83, 83, 355, 355, 360, 360, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 364, 364, 364, 362, 362, 361, 361, 363, 363,
	75, 75, 75, 78, 77, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 352,
	352, 351, 87, 87, 88, 517, 517, 516, 518, 518,
	518, 518, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 483, 483, 483, 485, 485, 290, 291, 524, 293,
	289, 289, 289, 479, 479, 480, 481, 482, 482, 482,
	93, 11, 11, 11, 11, 11, 11, 11, 69, 74,
	242, 242, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 230, 230,
	230, 225, 225, 225, 225, 226, 226, 227, 227, 228,
	228, 228, 228, 229, 229, 247, 247, 247, 246, 244,
	244, 244, 244, 244, 244, 245, 245, 245, 248, 248,
	67, 73, 73, 73, 496, 496, 68, 507, 507, 413,
	413, 304, 304, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 418,
	419, 300, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	46, 45, 45, 45, 341, 341, 44, 525, 525, 279,
	279, 56, 55, 48, 57, 58, 59, 60, 61, 62,
	43, 54, 54, 54, 54, 54, 54, 54, 54, 65,
	65, 430, 430, 527, 527, 527, 63, 64, 412, 412,
	412, 53, 52, 51, 50, 49, 49, 42, 42, 41,
	41, 47, 129, 130, 297, 297, 297, 299, 299, 295,
	526, 526, 384, 384, 298, 298, 40, 40, 40, 40,
	66, 296, 296, 278, 294, 294, 294, 12, 12, 10,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 23, 24, 26, 349, 349, 346, 25,
	18, 17, 20, 16, 16, 19, 21, 22, 22, 9,
	9, 9, 9, 13, 13, 14, 150, 150, 200, 200,
	491, 491, 487, 487, 488, 488, 488, 489, 489, 490,
	490, 99, 424, 424, 424, 424, 424, 424, 8, 172,
	172, 423, 423, 423, 423, 423, 423, 353, 353, 468,
	468, 468, 469, 171, 171, 166, 166, 425, 425, 319,
	470, 470, 433, 433, 432, 432, 431, 431, 169, 169,
	170, 170, 153, 153, 109, 109, 438, 438, 438, 438,
	446, 446, 409, 409, 234, 234, 271, 271, 272, 272,
	143, 143, 144, 144, 144, 144, 144, 144, 476, 476,
	478, 478, 477, 168, 168, 164, 164, 165, 165, 165,
	163, 163, 162, 161, 161, 160, 158, 158, 158, 159,
	159, 159, 176, 176, 146, 146, 146, 145, 145, 145,
	145, 145, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 147, 147, 484, 484, 484, 414,
	414, 414, 421, 421, 253, 253, 254, 254, 252, 252,
	148, 148, 149, 149, 149, 149, 251, 251, 250, 151,
	151, 157, 156, 156, 152, 152, 152, 152, 261, 261,
	260, 260, 260, 260, 102, 107, 107, 108, 175, 175,
	259, 258, 258, 258, 174, 174, 173, 173, 167, 167,
	155, 155, 155, 155, 257, 154, 255, 512, 512, 511,
	511, 510, 508, 508, 508, 509, 509, 509, 509, 460,
	460, 460, 460, 460, 284, 284, 284, 288, 288, 287,
	287, 287, 287, 287, 292, 7, 7, 7, 7, 7,
	7, 30, 30, 30, 30, 30, 30, 30, 30, 36,
	184, 185, 37, 186, 186, 187, 187, 188, 188, 189,
	190, 191, 191, 191, 191, 35, 177, 177, 178, 178,
	179, 179, 180, 181, 181, 181, 183, 182, 34, 34,
	27, 136, 136, 137, 137, 137, 137, 139, 139, 231,
	231, 231, 138, 138, 140, 140, 140, 492, 495, 493,
	493, 497, 497, 497, 498, 498, 498, 498, 499, 499,
	28, 126, 131, 502, 502, 502, 501, 501, 503, 503,
	504, 504, 275, 275, 276, 276, 134, 135, 135, 133,
	128, 142, 142, 142, 142, 142, 127, 132, 494, 500,
	500, 500, 350, 350, 347, 348, 348, 345, 344, 344,
	344, 506, 506, 505, 505, 505, 285, 285, 29, 340,
	340, 342, 343, 343, 343, 334, 334, 334, 334, 33,
	338, 338, 339, 339, 339, 339, 339, 335, 335, 337,
	337, 333, 333, 333, 333, 333, 32, 141, 141, 332,
	332, 330, 330, 328, 328, 329, 329, 327, 327, 327,
	331, 331, 31, 31, 31, 111, 110, 110, 110, 274,
	274, 273, 273, 112, 38, 212, 212, 398, 398, 398,
	398, 398, 416, 416, 416, 399, 399, 399, 400, 400,
	400, 401, 401, 401, 401, 401, 415, 415, 417, 417,
	417, 372, 372, 373, 373, 373, 376, 376, 390, 390,
	391, 391, 389, 389, 396, 396, 395, 395, 394, 394,
	393, 393, 392, 392, 392, 392, 387, 387, 386, 386,
	374, 374, 374, 374, 374, 375, 375, 375, 385, 385,
	388, 388, 218, 218, 219, 219, 219, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 466, 466, 467, 221, 221, 232, 232, 232,
	232, 232, 232, 220, 220, 222, 222, 201, 201, 199,
	199, 192, 192, 193, 193, 194, 194, 194, 198, 198,
	197, 197, 197, 197, 195, 195, 196, 196, 196, 196,
	196, 196, 358, 358, 463, 463, 464, 464, 459, 459,
	459, 462, 462, 462, 462, 462, 465, 465, 465, 461,
	461, 202, 269, 269, 269, 286, 286, 286, 286, 268,
	268, 268, 217, 217, 216, 216, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 357, 357, 301, 301,
	302, 302, 241, 240, 240, 240, 240, 240, 238, 239,
	237, 237, 237, 237, 237, 236, 236, 235, 235, 235,
	336, 336, 233, 233, 224, 224, 224, 223, 223, 223,
	397, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 267, 267, 267, 311, 311,
	316, 316, 475, 475, 474, 203, 203, 203, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 213, 213, 213,
	381, 381, 381, 381, 382, 382, 382, 382, 383, 383,
	383, 379, 379, 380, 380, 320, 321, 321, 422, 422,
	377, 377, 378, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	429, 429, 429, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 486,
	486, 486, 471, 471, 471, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 265, 265, 265, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 322, 322, 323, 323, 426, 426, 426, 426,
	426, 426, 427, 427, 428, 428, 428, 428, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 309, 262, 262,
	262, 324, 317, 317, 318, 318, 312, 312, 312, 312,
	312, 312, 312, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 313, 313, 315, 315, 326,
	326, 326, 325, 325, 325, 325, 325, 325, 325, 215,
	215, 215, 215, 306, 306, 306, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 205, 205, 205,
	205, 209, 209, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 210, 210, 210,
	210, 210, 208, 208, 208, 208, 208, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 100, 101, 101, 207, 270, 270, 402,
	402, 405, 405, 403, 403, 404, 406, 406, 406, 407,
	407, 407, 408, 408, 408, 411, 411, 277, 277, 277,
	283, 283, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 2, 2, 1, 3, 3, 4, 3,
	7, 5, 8, 2, 2, 1, 3, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 2, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 3, 1, 1,
	7, 7, 8, 8, 0, 4, 7, 0, 3, 0,
	2, 0, 1, 1, 1, 1, 4, 2, 2, 3,
	3, 4, 5, 3, 4, 4, 2, 2, 2, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 5, 3, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 1, 1, 6,
	8, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 4, 6, 7, 4, 4, 7,
	8, 3, 3, 3, 0, 2, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 4,
	3, 1, 3, 1, 1, 3, 5, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 3, 6, 3, 5, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 1,
	3, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 5, 3, 4, 6, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 0, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 8,
	7, 1, 2, 2, 3, 3, 3, 0, 4, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 1, 0, 2,
	7, 8, 8, 0, 3, 3, 0, 2, 0, 3,
	0, 5, 1, 3, 0, 3, 3, 0, 2, 9,
	6, 0, 2, 2, 3, 3, 4, 4, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 11, 9, 11, 2, 2, 4, 5, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 4, 1, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 9, 7, 9, 2, 1, 7, 9, 7, 9,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 3, 2, 2, 1, 5,
	6, 4, 1, 1, 1, 5, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 4, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 1, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 2, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -515, -523, -2, -5, 580, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -143, -106, 573, -76,
	-77, -78, -30, -29, -28, -27, -126, -131, 579, 432,
	12, 481, -13, -14, -476, -15, 253, -289, -290, -291,
	-293, -524, -40, -41, -42, -49, -50, -51, -52, -53,
	-63, -64, -65, -43, -44, -45, -48, -46, -56, -55,
	-57, -58, -59, -60, -61, -62, -47, -129, -130, -66,
	-68, -67, -73, -69, -74, -128, -133, 228, -72, 75,
	-82, -83, -84, -85, -86, -88, -89, 358, 364, 421,
	572, 60, -144, -146, 583, 156, 157, 159, 160, -31,
	-32, -33, -34, -35, -36, -38, -37, 224, 14, 514,
	-16, -19, -17, -20, -18, -25, -26, -24, -21, -23,
	-127, -22, -132, 248, 247, 37, 314, 315, 316, 362,
	246, 225, 13, 30, 41, 340, -145, 81, 226, -147,
	10, 585, -6, -3, -2, -113, -117, -121, -124, -125,
	-122, -123, -4, -101, 114, 238, 574, -286, 354, 575,
	577, 576, 84, 92, -280, -282, 358, 364, 572, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 484, 559, 560, 561, 562,
	338, 339, 511, 265, 289, 389, 295, 302, 156, 175,
	169, 197, 189, 164, 269, 307, 270, 91, 159, 467,
	104, 444, 418, 162, 284, 286, 288, 291, 290, 292,
	294, 271, 341, 185, 180, 283, 267, 178, 272, 39,
	273, 202, 274, 275, 516, 440, 337, 446, 299, 416,
	179, 441, 287, 443, 204, 208, 458, 459, 173, 174,
	448, 461, 201, 245, 42, 513, 257, 462, 206, 200,
	196, 470, 303, 301, 199, 172, 195, 268, 64, 210,
	209, 211, 412, 413, 414, 415, 276, 277, 352, 457,
	192, 181, 342, 165, 22, 465, 252, 445, 365, 278,
	296, 304, 205, 207, 259, 264, 515, 420, 263, 300,
	463, 177, 256, 285, 251, 466, 166, 367, 279, 160,
	293, 460, 469, 63, 380, 171, 163, 242, 157, 261,
	266, 11, 280, 281, 282, 306, 305, 297, 193, 258,
	198, 183, 170, 194, 158, 260, 468, 381, 570, 340,
	399, 191, 188, 262, 235, 464, 447, 161, 403, 382,
	186, 308, 566, 567, 568, 353, 336, 309, 310, 184,
	249, 438, 439, 311, 313, 409, 329, 383, 419, 390,
	384, 217, 317, 450, 452, 203, 569, 318, 319, 320,
	442, 321, 322, 323, 324, 357, 55, 57, -363, -361,
	-286, 572, 364, 358, 340, -186, -286, 584, -153, 38,
	-199, -286, -153, -72, -14, -13, -145, -146, -199, 232,
	-294, 23, 416, -80, 417, 228, 81, -286, -9, -92,
	-8, -99, -70, -143, 421, -292, -286, 314, 314, -292,
	232, -286, 263, 397, -413, 238, -367, -340, 264, -366,
	-342, -369, -343, 31, 224, 226, 225, 260, 14, 362,
	234, 12, 10, 363, 246, 24, 25, 27, 13, 364,
	366, 28, 367, 370, 371, 372, 41, 375, 376, 253,
	84, 92, 87, 271, -185, -286, -318, -312, 111, 254,
	-314, -307, -308, -310, -455, -449, -305, 81, 138, 139,
	146, 112, -309, -397, 35, 114, 523, 482, -263, -264,
	-265, -266, -267, -286, -450, -448, 87, 95, 98, 101,
	102, 100, 99, 182, 97, 88, 150, 151, -146, 84,
	-471, 531, -281, 552, 559, 560, 561, 562, 551, 60,
	-420, -428, 231, -426, 149, 187, 249, 183, 12, 144,
	409, 184, 528, 548, 484, 532, 555, 525, 526, 520,
	521, 522, 524, 533, 535, 547, -429, 543, 553, 554,
	541, 556, 557, 558, 86, 85, 546, 545, 534, 529,
	530, 536, 519, 527, 537, 538, 544, 549, 550, 346,
	104, 347, 348, 474, 341, 349, 238, 416, 69, 350,
	351, 352, 353, 354, 481, 355, 70, 356, 345, 253,
	399, 357, 186, 203, 486, 485, 487, 478, 475, 473,
	476, 477, 479, 480, 539, 540, 542, -107, -108, 564,
	-162, -163, -256, 19, 6, 7, 8, 9, -513, 418,
	515, 161, 158, -354, 161, 110, 166, 165, -354, 317,
	259, 359, -136, 235, 338, 399, 321, 93, 263, -334,
	-332, -415, 311, 307, 233, -137, 243, 242, 105, 474,
	231, 373, 107, 302, 55, 57, -487, -488, 221, 222,
	223, -478, 507, -477, -286, 348, 26, 232, 359, 259,
	452, 450, 451, 453, 454, 455, 456, -54, -430, -412,
	447, 446, -298, 439, 445, 437, 449, 440, 339, 323,
	322, 224, 581, 508, -277, 383, 419, 471, 472, 360,
	420, 458, 460, 441, 104, 190, 187, 235, 232, 338,
	474, 399, 93, 321, -487, 158, 458, 460, 263, 397,
	40, -360, 409, -359, -361, 459, 470, 85, 86, 457,
	-277, 104, 438, 438, -163, -256, -162, -144, -146, -102,
	-476, 233, 338, 399, 263, 234, 232, 235, 474, 231,
	314, 359, 259, 321, 93, -414, -484, 31, -421, 218,
	219, 220, 32, 33, -1, 118, 585, -312, -312, -6,
	586, -6, -312, -286, -286, 153, -205, -209, -206, -208,
	-207, -211, -210, 187, 188, 149, 191, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 30, 203, 249,
	183, 184, 185, 186, 204, 169, 189, 512, 212, 170,
	213, 171, 214, 172, 215, 173, 174, 216, 175, 178,
	179, 180, 181, 177, 152, 81, 152, 87, -169, 255,
	-199, 152, -169, -163, -162, -163, -199, -268, -286, 418,
	121, -80, -80, 417, -479, -480, -481, -483, 228, 417,
	416, 152, 271, 15, -292, -292, 79, -199, -342, 263,
	-367, -340, 35, 78, 153, 236, 153, 78, 81, 360,
	338, 399, 361, 474, 232, 373, 235, 263, 374, 338,
	399, 232, 235, 474, 263, 338, 232, 235, 399, 263,
	374, 437, 438, 235, 26, 365, 368, 369, 438, -434,
	470, 153, 110, 107, 108, 109, -312, 128, -325, 121,
	122, 123, 124, 125, 126, 127, 135, 134, 145, 138,
	139, 140, 141, 142, 143, 144, 136, 137, 131, 111,
	129, 133, 130, 113, -146, -312, -318, 60, -310, -310,
	-310, -310, -397, -316, -312, 81, 81, 152, 87, -312,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, -427, 81, 81, -322, -323, 81, 81, -305,
	-268, 81, 87, 87, 81, 81, 81, 87, -323, -323,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-163, 153, 81, -109, 38, -165, 21, -147, -146, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 95, 463,
	514, 164, 165, 166, -184, -286, -186, -177, -286, 235,
	-137, -330, 238, -330, -330, -330, -330, -330, 234, -330,
	232, 232, 232, -330, 481, 121, 121, 58, -489, 168,
	153, -478, -168, 81, -297, 129, 133, 23, 261, 261,
	261, -297, 301, -525, -526, 15, 131, -295, -526, -295,
	-295, -297, -527, 234, 448, 42, 262, 261, -164, -165,
	-164, 442, 438, -384, 443, 444, -299, -526, -298, -297,
	-297, -298, -297, -297, -297, 232, 235, 474, 321, 582,
	-525, -525, 30, 30, -413, -199, -413, 508, -278, -286,
	-413, -413, -413, -490, 237, -520, -519, 461, -522, 463,
	158, -361, 158, -361, -342, 263, 263, 153, 121, 23,
	-362, 121, 132, -361, -361, -362, -362, -220, 40, -285,
	149, -286, 87, -220, 40, -517, -516, -199, -164, -147,
	-146, 82, 82, 82, -413, -413, -413, -413, -413, -415,
	-413, -413, -413, -292, -177, -186, 238, -413, -413, -148,
	-149, 140, -312, -286, -148, -3, -115, -114, 115, 116,
	118, 575, 354, 574, 578, 572, -361, 40, -408, 381,
	380, -402, -404, 81, -403, 81, -403, -403, -403, 81,
	81, -405, 81, -405, -405, -402, -406, 81, -406, -407,
	81, -407, -406, -286, -317, -318, -286, 38, -423, 60,
	-143, 81, 30, 81, -286, -424, 60, -143, 81, 30,
	-164, -109, -165, 152, 95, 87, -80, 82, 153, -482,
	101, 102, -485, 201, 193, -286, -95, 87, -7, -8,
	-9, -10, -39, -70, -143, -451, -449, 81, 31, 408,
	78, 15, -368, 232, 474, 359, 259, 235, 338, -366,
	-349, -346, -344, -285, -342, -345, -344, -371, -268, 438,
	-110, 422, 313, -312, -312, -312, -312, -312, 100, 111,
	336, 101, 102, -307, -326, 31, 309, 310, -308, -308,
	-308, -308, -308, -308, -308, -308, -308, -308, -308, -308,
	-315, -324, -397, 81, 131, 129, 133, 130, 113, -310,
	-310, -308, -308, 82, 153, -475, -474, 115, -312, -312,
	-286, -472, -473, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 350, 345, 351, 349, 341, 357,
	352, 353, 186, 505, 506, 499, 500, 501, 502, 503,
	504, -317, -317, -312, -472, -317, -262, 32, 31, -318,
	-318, -318, 82, -312, -486, 334, 333, 335, -166, -286,
	-317, 82, 82, 82, 95, -318, -318, -317, -308, -317,
	-473, -262, -262, -318, -318, -262, -262, -262, -262, 140,
	-262, -262, -262, -262, -262, -262, -262, -262, 82, 82,
	82, -164, -108, -432, -431, -312, 40, 565, -109, -312,
	-161, -160, -312, -514, 87, 464, 465, 162, 165, 164,
	34, 81, 81, 152, -330, -199, 111, -492, -286, -350,
	-347, -344, -286, -286, -340, -286, -286, -330, -330, -330,
	-199, -231, 52, 53, 54, -344, -138, 55, 56, -490,
	-477, 34, -167, -286, -252, 16, -310, -310, -344, 263,
	-525, -297, -297, -279, -278, -299, -294, -299, -299, -252,
	-526, -297, -297, -299, -295, -252, -286, 438, -252, -252,
	-384, -296, -286, -296, -330, -278, -279, -279, -199, -242,
	-243, 229, 226, 225, -249, 227, 302, -331, 482, -226,
	-227, 76, 41, -229, 385, 378, 265, 269, 91, 270,
	418, 271, 234, 273, 274, 275, 290, 292, 245, 276,
	277, 278, 409, 279, 157, 291, 280, 281, 282, 361,
	-221, 6, 324, 40, 50, 51, 431, 430, 517, 514,
	266, -492, -492, 30, 30, -350, -286, -286, -156, -151,
	-155, -152, -157, -255, -257, -154, 81, -199, -146, -286,
	153, 462, 464, 465, -520, -362, -520, -362, 31, 408,
	-365, 408, 31, -340, -359, 458, 460, -355, 87, 409,
	-345, -364, 78, 149, -431, -362, -362, -364, -364, 148,
	153, -518, 463, 464, 221, -109, -201, -199, -492, -349,
	-340, -286, -413, -201, -286, -286, 81, 35, -286, -286,
	-251, 153, -250, 15, -287, -286, 34, 87, 152, -251,
	-116, -114, 117, -312, -6, 574, -312, -6, -6, -312,
	-6, -312, -411, 382, 95, 95, -270, 87, -270, 95,
	95, 95, 82, 87, -353, 78, -425, -319, -470, 564,
	-171, 82, -166, -468, -469, -166, -170, -286, -425, -171,
	82, -468, -109, -109, -286, 23, -80, -480, 152, 153,
	-167, -368, -348, -345, -370, 140, -286, -356, 153, 514,
	589, 85, 236, -506, -505, 400, 82, 153, -435, 237,
	481, 87, 587, 217, 100, 336, 101, 102, -397, -318,
	-315, -310, -310, -308, -308, -313, 250, -313, 110, -312,
	-311, -474, 117, -312, 34, 153, 79, 152, 82, 82,
	15, 15, 82, -312, 82, 82, 82, 82, 15, 15,
	-312, 82, 152, 82, 82, 82, 82, 79, 82, 153,
	82, 153, -318, -312, 82, 82, -312, -312, -312, -318,
	82, -312, -312, -312, -312, -312, -312, -312, -312, -378,
	433, -378, -378, 153, 82, 87, 153, 22, 153, -158,
	36, 37, 163, 166, 166, 165, -185, -187, -188, -189,
	-190, -191, 131, 154, 155, -178, -179, -180, -181, -205,
	-268, 188, 191, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 249, 183, 184, 185, 186, 204,
	169, 189, 170, 171, 172, 173, 174, 175, 178, 179,
	180, 181, 177, -286, -199, -168, 35, -495, 386, -507,
	153, 40, -505, 474, -134, 313, -333, 79, -141, 15,
	-199, -199, -199, -212, 34, 15, -150, -200, -286, 81,
	82, 153, -312, -341, 79, -286, -279, -252, -252, -199,
	-286, -252, -252, -297, -299, -299, -295, 152, -278, -168,
	153, -198, -202, 240, -195, -197, -268, -302, -196, 243,
	-464, 241, 239, 105, 244, 298, 106, 234, -244, 234,
	106, -286, 240, 244, 239, -245, 234, 298, 241, -230,
	236, 34, -283, 121, -277, 148, 236, 42, 361, -283,
	518, -283, -283, -283, -283, -283, -283, -283, 272, 272,
	-283, -283, -283, -283, -283, -283, -283, -283, -283, -283,
	-283, 158, -283, -283, -283, -283, -283, -283, 81, 267,
	268, -496, 386, 30, 344, 344, -507, 30, -142, 338,
	30, -258, -259, -260, -261, 67, 71, 73, 68, 69,
	70, 74, 30, 153, -284, -288, 34, -286, 87, -284,
	-146, -151, -156, -284, 81, -519, -521, 466, 463, 469,
	-364, -364, 236, 81, 121, -364, -364, 40, -285, -516,
	470, 464, -176, 23, 153, 78, -201, -178, -186, -252,
	-149, -151, -286, 87, -286, 140, -252, 118, -6, 116,
	-120, -119, -118, 119, 572, 578, 118, 118, 118, 82,
	82, 82, 153, 82, 82, 82, 153, 82, 153, -438,
	443, 39, 153, 81, 82, 153, 60, 153, 121, 82,
	153, 82, 60, -176, 152, 418, -286, -449, 82, -370,
	153, 236, 152, 152, -346, 364, -285, -348, 20, 514,
	-268, 38, -274, -273, 87, 587, 82, -313, -313, 110,
	-310, -307, 82, 118, -312, 116, -203, -205, 380, 381,
	-204, -210, 149, 187, 249, 186, 185, 183, 380, 381,
	-220, -286, -312, -312, 82, -312, -312, 15, -286, -220,
	-308, -312, -163, 82, -377, -378, -377, 82, 82, 82,
	82, -377, 82, 82, 82, 82, 82, 82, 82, 82,
	81, -431, -438, -312, -312, -160, -159, 43, 166, 372,
	82, 153, -268, 82, 153, -205, -168, 34, -498, 445,
	388, 398, -283, -304, -303, 340, 41, -418, 409, 394,
	395, -347, 263, -286, -504, 94, 121, 78, 328, 329,
	330, 331, -328, -329, -327, -331, -492, 81, 81, 81,
	-398, 318, -205, -199, -150, -286, 15, 153, -491, 152,
	-1, -286, -340, -297, -252, -526, -252, -297, -297, -299,
	-286, 34, -243, -247, 44, 46, -202, -205, -196, -463,
	-464, -330, -286, 106, -463, 106, 81, -286, -286, -286,
	106, 106, -286, -286, -286, -246, -296, -225, 40, 47,
	48, 49, -283, -283, 190, -228, 40, 408, 410, 411,
	95, 95, 95, 95, 87, 87, 87, -283, -283, 95,
	87, -288, 87, -465, 165, 44, 45, 95, 95, 95,
	95, 40, 87, -232, 40, 283, 287, 284, 285, 286,
	87, 95, 40, 95, 40, 95, 40, -286, 81, -466,
	-467, 87, -498, -283, 344, -361, 121, -304, -503, 313,
	-135, 91, 31, -172, 229, 226, -492, -352, -351, -268,
	-155, -155, -155, -155, 67, 67, 67, 72, 67, 72,
	67, -260, -352, -157, -168, -288, 82, -512, -511, -510,
	-508, 75, 237, 76, -317, 463, 467, 468, -348, -300,
	87, -355, 13, -199, -199, -417, 293, 294, 82, -254,
	17, 152, -254, 114, -6, -116, -118, -312, -6, -312,
	574, 354, 575, 87, 95, 95, -446, 428, 423, 425,
	106, -319, -433, -432, 60, -143, -166, -425, -469, -431,
	-286, 60, -143, -425, -286, 95, 15, -345, -340, 140,
	140, -286, 365, -356, 87, 387, 87, 232, 588, 153,
	121, -274, -307, -312, 82, -213, 174, 173, -213, 82,
	-403, -403, -402, -405, -402, -213, -213, 82, 82, 23,
	82, 82, 82, -312, 82, 82, 153, -422, 483, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -321, -320, 255, -446, 44, 45, 87, 87,
	-189, -205, 230, -180, 40, 34, -143, -499, 91, -493,
	87, -286, -500, 91, 389, 151, 342, 40, 390, 391,
	406, 337, 95, 95, 396, -494, -286, -142, -502, 51,
	121, 87, -199, -327, -277, 148, 274, 321, -192, -193,
	-194, -202, -195, -197, -192, -192, -399, 320, 20, 95,
	139, -169, 79, 152, -151, -200, -286, 140, 82, -252,
	-286, -252, -252, -297, -143, -268, -247, -217, -216, -214,
	100, 111, 40, 378, -215, 91, 148, 288, 291, 290,
	266, 289, -241, -301, 78, 384, 326, 327, -331, 239,
	105, 106, 366, -302, -461, -286, -459, -461, -286, -459,
	-459, -330, -312, -286, -248, 326, 327, -357, 299, 111,
	-357, -220, -220, 30, 87, 87, -201, 82, 153, 121,
	-499, -493, 121, -362, 87, -500, -504, 121, 87, 153,
	-172, -172, -252, 153, 121, -174, -173, 78, 79, -175,
	78, -173, 67, 67, -252, -510, -509, 23, -464, -464,
	-464, 82, 82, -253, 18, 20, 140, -253, 118, 116,
	118, 118, -286, 82, 82, -409, 566, -442, -444, 423,
	20, 20, 13, 82, -425, -425, -340, -356, 409, -199,
	-273, 87, 588, -312, 82, -312, 82, 87, -163, 20,
	-409, -182, -205, -305, -143, -139, 514, 87, -497, 400,
	87, 87, 95, 40, 95, 151, 392, -419, -135, -501,
	91, 121, 587, 81, -283, -283, -283, -286, 82, 153,
	82, 82, -400, 254, 95, 139, 95, 139, 95, -284,
	-151, -286, -252, -491, 152, -252, -252, -214, 100, -308,
	87, -222, -285, 149, -223, 40, 287, 283, 121, 121,
	-224, 40, 267, 268, -233, 81, 298, 13, 190, 106,
	106, -199, 81, 81, 79, 308, 81, 81, -461, 82,
	299, 148, -220, 82, -467, 87, -497, 87, -364, -502,
	87, -492, -163, -351, -431, -312, 81, -312, 81, 67,
	19, 17, -312, -318, 238, -6, 575, 354, -234, 567,
	87, 20, 87, -440, 87, -352, -112, -436, -384, 82,
	82, -377, -380, -379, -383, 429, 300, 436, -318, -234,
	513, -139, -140, 59, 470, 20, 514, 341, 40, 95,
	40, 393, 87, 101, 102, -275, -276, 87, -335, -337,
	-268, 81, -220, -222, 87, -218, -219, -249, -331, -194,
	-111, -110, -218, -401, 157, 95, 139, 95, 95, -252,
	-252, 87, 87, 95, 81, -426, 30, -336, 81, -335,
	-335, -462, 328, 329, 330, 332, 331, -462, -335, -335,
	81, -358, -357, -283, 148, -501, -164, -167, -460, -286,
	239, 20, 20, -286, -286, -271, 568, 95, 87, 425,
	-410, 569, -445, 428, -439, -437, 423, 424, 425, 426,
	82, -382, 113, 392, 396, -306, -309, 95, 98, 182,
	151, -271, -183, -286, 298, 87, 387, 87, 341, 588,
	153, 121, 82, 153, -402, -312, -372, 255, 153, -249,
	-277, -112, -372, -416, 165, 319, 514, 95, 139, 95,
	-163, 82, -312, -322, -283, -236, -235, 510, -335, 82,
	82, 82, 82, -335, -220, -283, 82, 82, 153, 81,
	20, 87, -447, 237, -443, -444, 427, -437, 20, 425,
	20, 20, -381, -382, 396, -306, -309, 564, 434, 434,
	434, 34, 365, 409, -276, 87, -338, -337, -158, 82,
	-373, 307, 20, -249, -283, -373, 319, 95, 139, 95,
	-164, 82, -286, -240, -238, -239, 78, 441, 296, 297,
	82, -338, 79, -338, 79, -338, 79, -338, 79, 82,
	-220, -286, 239, -272, -286, -440, -454, 81, 95, -442,
	-441, -443, 20, -440, 20, -440, -440, 110, 435, 435,
	435, 87, -339, 245, 91, 514, 326, 327, -158, 20,
	-374, 300, 301, -375, -388, 303, -220, 95, -357, -239,
	78, -238, 78, 14, 13, -462, -462, -462, -462, -241,
	82, 153, -458, 30, 82, -453, -452, -269, -448, -286,
	428, 429, 87, -440, -381, -283, 87, 325, -268, 81,
	-386, 304, 81, -384, 81, -384, 106, 329, -237, 293,
	294, 30, 165, -237, -338, -338, -338, -338, -286, -457,
	-456, -455, 82, 153, 152, 95, -286, -371, -376, 305,
	95, -308, 81, -308, 81, -385, 302, 81, 100, 40,
	295, 153, 121, -452, -286, 82, -390, 81, 20, 82,
	-371, 82, -371, 81, 121, -308, -456, 40, -312, 152,
	-391, -389, 255, -375, 82, 82, 82, -371, 95, 82,
	-286, 82, 153, -286, -387, 306, 82, -389, -392, 60,
	95, -396, -393, 81, -249, 257, 131, -396, -249, -395,
	-394, 305, 258, 81, 82, 153, -286, 254, 81, -318,
	-394, -393, -318, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 805, 806, 807, 808, 809, 810, 0, 0,
	0, 0, 579, 580, 0, 549, 0, 0, 0, 0,
	0, 0, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	351, 352, 353, 354, 355, 356, 357, 0, 285, 281,
	206, 207, 208, 209, 210, 292, 293, 419, 0, 0,
	0, 0, 660, -2, 53, 274, 0, 265, 265, 811,
	812, 813, 814, 815, 816, 817, 818, -2, 592, 0,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 340, 341, 342, 336, 337, 339, 338,
	-2, 0, 592, 0, 0, 0, 680, 0, 0, 697,
	719, 23, 0, 7, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 0, 0, 19, 0, 19, 0,
	0, 0, 1155, 1156, 1157, 1158, -2, 1641, 1619, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 0, 258,
	256, 1619, 1641, 1701, 1734, 0, 823, 0, 638, 0,
	643, 1109, 638, 286, 581, 582, 680, 680, 547, 0,
	322, 0, 1632, 326, 0, 0, 0, 544, 316, 317,
	318, 319, 320, 321, 0, 0, 804, 0, 0, 312,
	0, 280, 1692, 0, 0, 0, 0, 0, 0, 150,
	929, 152, 931, 156, 163, 0, 0, 168, 169, 172,
	173, 174, 175, 176, 0, 180, 0, 182, 185, 0,
	187, 188, 0, 191, 192, 193, 0, 203, 204, 205,
	932, 933, 934, -2, 81, 821, 1553, 1444, 0, 1451,
	1452, 1463, 1474, 1233, 1234, 1235, 1236, 0, 0, 0,
	0, 0, 1243, 1244, 0, 1260, 1797, 0, 1250, 1251,
	1252, 1253, 1254, 90, 102, 103, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 0, 1417, 1220, 1155,
	0, 1805, 0, 1825, 1830, 1831, 1832, 1833, 1824, 0,
	0, 1402, 0, 1392, 0, 0, -2, -2, 0, 0,
	1760, -2, 1802, 1821, 1829, 1806, 1828, 1799, 1800, 1794,
	1795, 1796, 1798, 1807, 1809, 1820, 0, 1816, 1826, 1827,
	0, 0, 0, 0, 104, 105, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1408,
	-2, 1410, 1411, 1413, -2, 1415, 1416, -2, 1419, 1420,
	1421, -2, -2, 1424, 1425, 1426, 1427, 1428, 1429, 1432,
	-2, -2, -2, -2, 1404, 1405, 1406, 1407, 1396, 1397,
	1398, 1399, 1400, 1401, -2, -2, -2, 680, 755, 0,
	-2, 0, 0, 0, 702, 705, 708, 711, 0, 54,
	55, 275, 276, 264, 266, 0, 270, 0, 263, 0,
	0, 0, 0, 961, 961, 961, 961, 961, 961, 0,
	961, 0, 0, 0, 961, 851, 936, 937, 938, 959,
	960, 1007, 0, 0, 0, 0, 597, 593, 594, 595,
	596, 668, 0, 670, 673, 524, 471, 0, 0, 0,
	524, 0, 485, 477, 0, 0, 0, 524, 0, 0,
	675, 675, 0, 527, 534, 524, 524, -2, 524, 524,
	524, 0, 0, 491, 492, 493, 477, 477, 496, 497,
	498, 509, 510, 535, 1577, 0, 0, 419, 0, 419,
	0, 419, 419, 419, 599, 1729, 1639, 1706, 1692, 0,
	0, 231, 1760, 236, 0, 1640, 1655, 0, 0, 1673,
	0, -2, 0, 302, 675, 0, 681, 0, 680, 0,
	0, 419, 419, 419, 419, 419, 1006, 419, 419, 419,
	0, 0, 0, 419, 419, 0, 0, 720, 721, 716,
	717, 718, 722, 723, 5, 6, 19, 0, 0, 0,
	0, 0, 0, 60, 59, 0, 1554, 1572, 1508, 1509,
	1510, 1559, 1512, 1563, 1563, 1563, 1563, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 0, 0, 1552, 1532,
	1561, 1561, 1561, 1559, 1556, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1566,
	1566, 1569, 1569, 1566, 0, 1442, 0, 0, 0, 0,
	642, 0, 0, 675, -2, 0, 548, 323, 1159, 0,
	0, 327, 328, 0, 0, 343, 0, 346, 331, 332,
	333, 0, 130, 0, 314, 315, 0, 0, 282, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 160,
	157, 164, 167, 177, 184, 0, 196, 198, 201, 158,
	165, 170, 171, 178, 199, 159, 161, 162, 166, 200,
	202, 179, 183, 197, 181, 186, 189, 190, 195, 0,
	131, 0, 0, 0, 0, 0, 1450, 0, 0, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1444, 0, 0, 1239, 1240,
	1241, 1242, 1245, 0, 1261, 0, 0, 0, 1506, 0,
	1442, 1442, 0, 1442, 1438, 0, 0, 0, 0, 0,
	0, 1442, 1378, 0, 0, 1380, 1393, 0, 0, 1382,
	1383, 0, 1386, 1387, 1442, 0, 1442, 1391, 1374, 1375,
	0, 1438, 1438, 0, 0, 1438, 1438, 1438, 1438, 1438,
	1438, 1438, 1438, 1438, 1438, 1438, 1438, 0, 0, 0,
	675, 0, 0, 663, 0, 644, 0, 699, 701, 0,
	703, 704, 706, 707, 709, 710, 712, 713, 56, 0,
	0, 268, 0, 273, 0, 820, 0, 0, 836, 961,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	961, 961, 961, 0, 853, 0, 0, 0, 599, 598,
	0, 669, 0, 0, 728, 0, 0, 0, 477, 524,
	524, 483, 484, 479, 478, 530, 531, 527, 0, 527,
	527, 728, 0, 503, 504, 505, 524, 524, 511, 676,
	512, 513, 527, 0, 532, 533, 728, 0, 0, 728,
	728, 0, 521, 522, 523, 0, 0, 961, 0, 540,
	479, 479, 1578, 1579, 0, 970, 0, 0, 0, 543,
	0, 0, 0, 0, 600, 211, 214, 0, 217, 0,
	1729, 0, 1729, 0, 224, 0, 0, 0, 0, 0,
	0, 254, 255, 0, 0, 0, 0, 245, 248, 1103,
	1104, 926, 927, 249, 250, 294, 295, 0, 644, 698,
	700, 694, 695, 696, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 575, 0, 577, 0, 0, 0, 736,
	730, 732, 799, 90, 736, 8, 77, 74, 0, 19,
	0, 0, 19, 19, 0, 19, 259, 0, 1575, 1573,
	1574, 1511, 1560, 0, 1537, 0, 1538, 1539, 1540, 0,
	0, 1533, 0, 1534, 1535, 1536, 1527, 0, 1528, 1529,
	0, 1530, 1531, 257, 0, 1443, 824, 0, 617, 630,
	612, 0, 619, 0, 1110, 601, 630, 603, 0, 619,
	644, 666, 644, 0, 324, 0, 329, 0, 0, 345,
	347, 348, 349, 334, 335, 545, 310, 311, 303, 304,
	305, 306, 307, 308, 309, 313, 100, 0, 283, 284,
	0, 0, 0, 144, 145, 146, 147, 148, 149, 151,
	135, 566, 568, 918, 930, 0, 921, 0, 154, 194,
	127, 0, 0, 1445, 1446, 1447, 1448, 1449, 1453, 0,
	1455, 1457, 1459, 1461, 0, 1479, -2, -2, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1464, 1477, 1478, 0, 0, 0, 0, 0, 0, 1475,
	1475, 1470, 0, 1237, 0, 1258, 1262, 0, 0, 0,
	91, 1437, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 0, 0, 1444, 0, 0, 0, 1439, 1440, 0,
	0, 0, 1333, 0, 0, 1339, 1340, 1341, 0, 625,
	0, 1403, 1379, 1394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 756, 0, 634, 636, 637, 0, 664, 677,
	682, 683, 686, 52, 57, 277, 278, 0, 0, 272,
	0, -2, 838, 0, 0, 673, 0, 0, 867, 417,
	912, 0, 0, 0, 928, 951, 957, 0, 0, 0,
	985, 854, 859, 860, 861, 855, 856, 862, 863, 0,
	671, 0, 0, 768, 470, 0, 525, 526, 474, 1692,
	479, 728, 728, 486, 480, 487, 529, 488, 489, 490,
	0, 728, 728, 524, 527, 514, 528, 527, 517, 518,
	0, 536, 541, 537, 0, 539, 494, 495, 673, 359,
	360, 0, 0, 0, 365, 378, 1580, 0, 0, 0,
	0, 375, 1580, 0, 1580, 1580, 1580, 1580, 1580, 1580,
	1580, 0, 0, 1580, 1580, 1580, 1580, 1580, 1580, 1580,
	1580, 1580, 1580, 1580, 0, 1580, 1580, 1580, 1580, 1580,
	1089, 1580, 0, 971, 385, 386, 387, 388, 393, 394,
	0, 414, 0, 0, 0, 417, 0, 901, 741, 0,
	742, 743, 739, 770, 794, 794, 0, 794, 774, 1109,
	0, 0, 222, 223, 212, 0, 213, 0, 225, 226,
	0, 228, 229, 230, 237, 1639, 1706, 232, 234, 0,
	0, 238, 251, 252, 253, 0, 0, 243, 244, 0,
	0, 297, 298, 300, 0, 692, 563, 1107, 564, 565,
	569, 0, 0, 572, 573, 574, 838, 0, 906, 907,
	728, 0, 737, 0, 733, 800, 0, 802, 0, 728,
	0, 75, 19, 0, 68, 65, 0, 0, 0, 0,
	0, 1555, 1507, 1576, 0, 0, 0, 1557, 0, 0,
	0, 0, 58, 646, 608, 0, 611, 627, 0, 631,
	0, 0, 623, 616, 620, 0, 0, 640, 602, 0,
	0, 607, 692, 667, 1160, 0, 330, 344, 0, 0,
	0, 0, 138, 915, 0, 139, 143, 133, 0, 0,
	0, 920, 0, 917, 922, 0, 153, 0, 0, 128,
	129, 976, 981, 0, 1454, 1456, 1458, 1460, 1462, 0,
	1465, 1475, 1475, 1471, 0, 1466, 0, 1468, 0, 1445,
	0, 1263, 0, 0, 0, 0, 0, 0, 1323, 1324,
	0, 0, 1328, 0, 1330, 1331, 1332, 1334, 0, 0,
	0, 1338, 0, 1377, 1395, 1381, 1384, 0, 1388, 0,
	1390, 0, 680, 0, 1300, 1300, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 1256, 1257, 0, 757, 646, 0, 0, 0, 689,
	687, 688, 279, 267, 269, 0, 0, 0, 826, 827,
	829, 0, 832, 833, 834, 0, 839, 840, 842, 843,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1624, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 837, 673, 0, 962, 874, 1580, 421,
	0, 0, 914, 0, 890, 0, 0, 0, -2, 0,
	0, 0, 0, 987, 0, 0, 0, 586, 590, 23,
	674, 0, 729, 472, 0, 473, 524, 481, 482, 728,
	1109, 506, 507, 728, 524, 524, 527, 0, 538, 0,
	970, 362, 395, 0, 1118, 1119, 0, 0, 1125, 1134,
	961, 1190, 0, 1134, 0, 0, 1136, 1137, 363, 0,
	0, 401, 0, 0, 0, 364, 0, 0, 0, 0,
	379, 380, 0, 1581, 1580, 1580, 0, 373, 374, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 1580, 1580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 0, 0, 0, 0, 0, 1095,
	1096, 874, 1580, 0, 0, 0, 421, 888, 897, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 760, 0,
	0, 0, 0, 0, 673, 795, 0, 797, 798, 772,
	-2, 0, 741, 777, 1442, 215, 216, 0, 0, 221,
	239, 241, 0, 0, 0, 240, 242, 246, 247, 296,
	299, 301, 662, 0, 0, 0, 1008, 0, 578, 726,
	731, 738, 801, 803, 91, 734, 726, 0, 78, 19,
	77, 69, 70, 0, 19, 0, 0, 0, 0, 1565,
	1564, 1550, 0, 1551, 1562, 1567, 0, 1570, 0, 650,
	0, 0, 630, 632, 0, 0, 630, 0, 0, 639,
	0, 0, 630, 665, 0, 0, 546, 101, 350, 0,
	0, 0, 0, 0, 567, 0, 919, 135, 0, 0,
	155, 0, 0, 979, 0, 981, 1441, 1467, 1469, 0,
	1476, 1472, 1238, 1246, 1259, 0, 0, 1265, 1277, 1277,
	0, 1268, 1563, 1563, 1271, 1559, 1561, 1559, 1277, 1277,
	0, 92, 0, 0, 1329, 0, 0, 0, 626, 0,
	0, 0, 1298, 1300, 1305, 1301, 1306, 1300, 1300, 1300,
	1300, 1311, 1300, 1300, 1300, 1300, 1300, 1300, 1300, 1300,
	1296, 635, 650, 678, 679, 684, 685, 0, 271, 0,
	0, 831, 0, 0, 0, 844, 0, 0, 878, 875,
	876, 877, 0, 909, 422, 423, 424, 425, 0, 0,
	0, 913, 0, 901, 883, 0, 0, 0, 952, 953,
	954, 955, 956, -2, 965, 0, 0, 1111, 1111, 1111,
	995, 0, 986, 638, 0, -2, 0, 0, 588, 0,
	0, 769, 475, 728, 499, 0, 515, 728, 728, 524,
	542, 0, 361, 367, 396, 0, 395, -2, 1124, 1149,
	1135, 1149, 1191, 1149, 1149, 961, 0, 399, 400, 402,
	0, 404, 0, 0, 0, 366, 398, 369, 381, 382,
	383, 384, 0, 0, 0, 376, 389, 390, 391, 392,
	1057, 1058, 1059, 1062, 1063, 1064, 1065, 0, 0, 1068,
	1069, 1070, 1071, 1072, 1146, 1147, 1148, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1097, 1098, 1099, 1100, 1101, 1102,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 0, 0,
	1092, 0, 878, 0, 0, 0, 0, 909, 890, 0,
	900, 0, 902, 903, 0, 0, 609, 728, 289, 0,
	764, 758, 0, 747, 762, 763, 750, 0, 752, 0,
	748, 749, 728, 740, 771, 796, 773, 776, 778, 779,
	785, 0, 0, 0, 0, 218, 219, 220, 227, 0,
	441, 233, 693, 1108, 570, 571, 1009, 1010, 576, 724,
	0, 0, 724, 73, 76, 0, 71, 0, 0, 0,
	0, 63, 61, 1558, 0, 0, 652, 115, 0, 0,
	0, 628, 0, 633, 630, 615, 624, 614, 621, 622,
	641, 630, 606, 605, 1161, 325, 0, 916, 135, 140,
	141, 142, 136, 134, 923, 0, 925, 0, 977, 981,
	0, 0, 1473, 1264, 1247, 1266, 1278, 1279, 1267, 1248,
	1269, 1270, 1272, 1273, 1274, 1275, 1276, 1249, 1325, 0,
	1327, 1335, 1336, 0, 1385, 1389, 0, 0, 0, 1304,
	1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 680, 1297, 0, 652, 690, 691, 819, 822,
	828, 830, 0, 841, 0, 0, 857, 850, 0, 0,
	869, 870, 880, 0, 0, 0, 427, 428, 0, 0,
	0, 440, 436, 437, 438, 418, 908, 897, 886, 0,
	0, 896, 0, 966, 1580, 1580, 1580, 0, 0, 1112,
	1113, 1115, 1116, 1117, 0, 0, 998, 0, 0, 989,
	0, 794, 0, 0, 728, 587, 590, 591, 672, 476,
	728, 519, 516, 728, 358, 397, 368, 1151, -2, 1164,
	1166, 0, 971, 1169, 1170, 0, 0, 0, 0, 0,
	0, 1212, 1178, 0, 0, 1182, 1183, 1184, 0, 0,
	1491, 1492, 0, 1189, 0, 1150, 0, 1138, 1150, 0,
	0, 1149, 0, 403, 405, 408, 409, 406, 1186, 0,
	407, 1060, 1061, 0, 1066, 1067, 0, 1091, 0, 0,
	410, 0, 0, 0, 411, 416, 883, 0, 898, 0,
	904, 905, 680, 0, 0, 744, 765, 0, 0, 745,
	0, 746, 751, 753, 288, 780, 0, 0, 782, 783,
	784, 775, 235, 714, 0, 0, 735, 715, 0, 19,
	0, 0, 66, 1568, 1571, 654, 0, 651, 116, 0,
	0, 0, 0, 629, 613, 604, 137, 132, 924, 118,
	980, 982, 978, 0, 1337, 0, 1300, 1299, 1293, 0,
	654, 0, 847, 845, 857, 849, 864, 879, 868, 0,
	910, 911, 0, 429, 430, 0, 433, 439, 881, 882,
	0, 0, 894, 0, 0, 0, 0, 958, -2, 0,
	0, -2, 1001, 0, 996, 0, 988, 0, 991, 728,
	728, -2, 584, 589, 0, 500, 520, 1165, 1167, 1168,
	1171, 1172, 1105, 1106, 1173, 1217, 1218, 1219, 0, 0,
	1176, 1214, 1215, 1216, 1177, 0, 0, 0, 0, 1489,
	1490, 1210, 0, 0, 0, 0, 0, 0, 0, 1132,
	1187, 1580, 371, 1090, 1093, 1094, 415, 412, 413, 886,
	889, 610, 675, 290, 291, 766, 0, 759, 789, 786,
	0, 0, 725, 727, 67, 72, 0, 0, 656, 0,
	653, 0, 647, 649, 126, 618, 88, 109, 0, 1326,
	1376, 1303, 0, 1294, 0, 1288, 1289, 1290, 1295, 656,
	0, 848, 0, 865, 866, 0, 0, 426, 431, 0,
	434, 435, 887, 884, 885, 0, 892, 0, 0, 947,
	1559, 0, 967, 968, 969, 1011, -2, 1054, 0, 1114,
	973, 118, 1011, 992, 0, 999, 0, 997, 990, 680,
	585, 1174, 1175, 0, 0, 1392, 1580, 1205, 0, 0,
	0, 1139, 1141, 1142, 1143, 1144, 1145, 1140, 0, 0,
	0, 1131, 1133, 0, 1580, 899, 287, 0, 0, 790,
	792, 787, 788, 62, 64, 79, 0, 655, 117, 0,
	80, 0, 106, 0, 119, 120, 0, 0, 0, 0,
	1302, 1291, 0, 0, 0, 0, 0, 1493, 1494, 1495,
	0, 645, 0, 846, 0, 871, 0, 873, 432, 891,
	894, 0, 940, 0, 686, 0, 1013, 0, 970, 1056,
	1580, 975, 1013, 984, 0, 994, 0, 1003, 0, 1000,
	675, 1213, 0, 1181, 0, 1193, 1206, 0, 0, 940,
	940, 940, 940, 0, 370, 0, 767, 781, 0, 0,
	0, 89, 93, 0, 115, 112, 0, 121, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 1284, 1285, 1286,
	1287, 0, 858, 872, 893, 895, 939, 948, 949, 686,
	972, 0, 1050, 1055, 0, 974, 993, 1002, 0, 1005,
	583, 1179, 1185, 1192, 1194, 1195, 0, 1207, 1208, 1209,
	1211, 1120, 0, 1122, 0, 1126, 0, 1128, 0, 0,
	372, 791, 793, 0, 658, 648, 82, 0, 0, 110,
	111, 113, 0, 122, 0, 124, 125, 0, 1281, 1282,
	1283, 835, 941, 1580, 0, 0, 945, 946, 950, 0,
	1038, 0, 0, 1044, 0, 1051, 1060, 1004, 1180, 1196,
	0, 1197, 0, 0, 0, 940, 940, 940, 940, 1130,
	657, 0, 983, 0, 94, 0, 96, 98, 99, 1152,
	107, 108, 114, 123, 1292, 0, 943, 0, 1014, 0,
	1016, 0, 0, 0, 0, 0, 1048, 0, 1198, 1200,
	1201, 0, 0, 1199, 1121, 1123, 1127, 1129, 659, 83,
	84, 0, 95, 0, 0, 942, 944, 0, 1018, 0,
	1039, 0, 0, 0, 0, 0, 0, 0, 1202, 1204,
	1203, 0, 0, 97, 1153, 1015, 1012, 0, 1050, 1040,
	0, 1042, 0, 0, 0, 0, 85, 86, 87, 0,
	0, 1020, 0, 1036, 1041, 1043, 1045, 0, 1049, 1047,
	1154, 1019, 0, 1032, 1017, 0, 1046, 1021, -2, 0,
	1037, 1022, -2, 0, 1030, 0, 0, 1023, 1031, 0,
	1026, 0, 0, 0, 1025, 0, -2, 1033, 0, 0,
	1027, -2, 0, 1035, 1034,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 112, 3, 3, 3, 143, 135, 3,
	81, 82, 140, 138, 153, 139, 152, 141, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 586, 585,
	122, 121, 123, 3, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 145, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 587, 134, 588, 146,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 113, 114,
	115, 116, 117, 118, 119, 120, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 136, 137, 142, 144,
	147, 148, 149, 150, 151, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:735
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:742
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:748
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:756
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:762
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:766
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:791
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:800
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:832
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:839
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:859
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:865
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:872
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:880
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:886
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:905
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:913
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:921
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:929
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:957
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:973
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:987
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:993
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:997
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1012
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1026
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1045
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1051
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1072
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1096
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1102
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1106
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1112
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1127
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1131
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1149
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1153
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1162
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1166
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1172
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1181
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1192
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1196
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1202
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1206
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1212
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1216
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1222
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1246
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1265
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1269
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1273
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1282
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1289
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1297
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1304
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1309
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1316
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1325
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1349
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1353
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1359
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1365
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1383
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1427
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1446
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1483
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1487
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1529
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1535
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1550
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1559
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1563
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1567
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1571
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1575
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1579
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1586
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1590
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1612
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1616
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1662
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1666
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1670
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1674
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1682
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1706
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1714
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1718
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1722
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1726
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1730
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1734
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1738
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1778
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1814
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1818
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1855
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1859
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1872
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1880
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1884
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1888
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1892
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1898
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1961
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1969
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1985
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1992
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1998
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2002
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2073
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2103
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2125
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2141
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2145
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2149
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2159
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2165
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2169
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2175
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2179
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2201
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2205
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2209
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2213
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2217
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2221
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2225
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2229
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2233
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2333
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2337
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2359
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2363
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2369
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2375
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2379
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2383
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2387
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2393
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2431
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2545
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2551
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2557
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2562
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2563
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2564
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2605
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2609
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2615
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2630
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2634
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2638
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2647
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2656
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2662
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2670
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2674
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2678
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2686
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2690
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2695
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2732
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2748
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2799
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2806
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2813
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2822
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2826
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2861
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2874
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2891
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2911
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2915
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2924
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2988
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2992
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3006
		{
			yyVAL.item = nil
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3011
		{
			yyVAL.item = nil
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3063
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3076
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3087
		{
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3091
		{
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3154
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3160
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3177
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3197
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3210
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3220
		{
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3222
		{
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3250
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3254
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3258
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3264
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3270
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3313
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3317
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3371
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3375
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3380
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3384
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3390
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3403
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3407
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3438
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3442
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3448
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3454
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3458
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3462
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3472
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3523
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3527
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3533
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3542
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3561
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3573
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3583
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3589
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3616
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3621
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3628
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3644
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3657
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3668
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3672
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3678
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3683
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3690
		{
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3692
		{
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3695
		{
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3704
		{
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3708
		{
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3722
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3735
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3743
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3750
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3757
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3777
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3787
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3791
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3797
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3804
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3810
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3818
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3825
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3832
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3851
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3855
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3864
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3868
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3874
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3883
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3887
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3893
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3897
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3903
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3907
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3913
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3918
		{
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3929
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3933
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3949
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3955
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3959
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3965
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3969
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3991
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3998
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4005
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4023
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4042
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4048
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4055
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4059
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4072
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4076
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4081
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4085
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4092
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4097
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4104
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4110
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4122
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4126
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4130
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4136
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4143
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4152
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4156
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4162
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4174
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4179
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4183
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4189
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4193
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4197
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4206
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4212
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4218
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4222
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4233
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4237
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4241
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4246
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4250
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4254
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4263
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4271
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4275
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4279
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4293
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4339
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4347
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4355
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4364
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4372
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4380
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4388
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4396
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4404
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4412
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4420
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4428
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4449
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4463
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4467
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4471
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4480
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4497
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4521
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4525
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4531
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4535
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4549
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4557
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4571
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4589
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4595
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4604
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4613
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4622
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4632
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4636
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4646
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4650
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4654
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4658
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4664
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4674
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4678
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4684
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4700
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4706
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4710
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4714
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4724
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4740
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4744
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4750
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4754
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4764
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4777
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4783
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4789
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4802
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4820
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4824
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4830
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4853
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4857
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4861
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4865
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4874
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4878
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4882
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4886
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4891
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4895
		{
			yyVAL.str = yyDollar[1].str
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4899
		{
			yyVAL.str = yyDollar[2].str
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4905
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4915
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4919
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4923
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4927
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4933
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4967
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4977
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4983
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 822:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4989
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4999
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5004
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5021
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5038
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5042
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5046
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5050
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5057
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5069
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5074
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5080
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5087
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5091
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5097
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5103
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5107
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5111
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5117
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5123
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5129
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5138
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5149
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5161
		{
			yyVAL.str = yyDollar[1].str
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5165
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5171
		{
			yyVAL.str = "OR REPLACE"
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5175
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5179
		{
			yyVAL.str = "DEFINER = "
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5183
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5188
		{
			yyVAL.str = ""
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5192
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5206
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5214
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5220
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5230
		{
			yyVAL.str = yyDollar[1].str
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5234
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5240
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5253
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5281
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5289
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5295
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5304
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5316
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5328
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5346
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5353
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5361
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5367
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5375
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5381
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5404
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5408
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5413
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5417
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5424
		{
			yyVAL.str = yyDollar[3].str
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5429
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5433
		{
			yyVAL.str = yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5439
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5467
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5473
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5485
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5494
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5512
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5517
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5523
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5531
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5637
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5641
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5647
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5657
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5661
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5667
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5677
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5681
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5685
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5694
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5700
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5707
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5713
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5722
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5729
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5738
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5742
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5748
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5762
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5766
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5770
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5775
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5793
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5816
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5842
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5846
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5850
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5854
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5860
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5864
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5870
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5896
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5902
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5917
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5927
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5931
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5940
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5946
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5950
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5956
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5960
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5964
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5969
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5973
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5979
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6000
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6013
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6030
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6038
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6049
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6053
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6058
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6062
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6080
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6093
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6107
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6115
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6122
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6129
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6136
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6143
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6166
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6177
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6184
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6195
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6202
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6209
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6216
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6223
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6227
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6236
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6249
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6263
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6281
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6294
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6300
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6304
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6310
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6333
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6339
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6343
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6349
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6365
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6369
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6378
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6383
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6387
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6392
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6396
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6406
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6410
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6421
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6429
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6437
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6445
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6456
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6465
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6475
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6485
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6489
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6494
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6507
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6513
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6517
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6521
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6527
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6531
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6535
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6539
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6543
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6547
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6551
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6556
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6560
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6564
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6568
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6572
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6576
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6580
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6584
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6588
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6592
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6596
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6600
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6604
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6608
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6612
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6616
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6620
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6624
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6628
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6632
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6636
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6640
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6644
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6648
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6652
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6656
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6660
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6664
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6670
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6674
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6680
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6686
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6690
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6696
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6700
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6704
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6708
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6730
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6734
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6743
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6748
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6765
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6771
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6775
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6779
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6785
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6789
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6795
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6804
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6813
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6836
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6861
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6875
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6881
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6890
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6899
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6908
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6917
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6927
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6935
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6941
		{
			yyVAL.str = ""
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6945
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6955
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6961
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6967
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6986
		{
			yyVAL.str = ""
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6990
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6996
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7002
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7006
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7010
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7016
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7020
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7024
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7028
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7034
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7038
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7042
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7051
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7057
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7061
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7067
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7071
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7075
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7079
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7083
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7087
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7116
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7124
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7149
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7168
		{
			yyVAL.str = ""
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7172
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7178
		{
			yyVAL.str = ""
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7182
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7188
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7200
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7207
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7214
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7221
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7228
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7237
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7243
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7261
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7270
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7294
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7299
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7303
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7319
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7329
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7337
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7341
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7345
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7349
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7357
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7361
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7365
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7369
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7373
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7379
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7383
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7387
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7391
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7395
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7399
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7403
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7407
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7411
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7415
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7419
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7423
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7428
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7436
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7441
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7445
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7454
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7458
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7462
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7466
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7470
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7476
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7484
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7505
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7510
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7514
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7520
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7524
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7530
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7539
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7551
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7585
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7598
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7623
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7652
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7667
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7699
		{
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7706
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7710
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7714
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7720
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7724
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7728
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7732
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7738
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7742
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7746
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7752
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7760
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7774
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7781
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7790
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7795
		{
			yyVAL.str = ","
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7799
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7811
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7837
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7848
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7867
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7876
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7886
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7896
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7906
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7916
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7926
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7936
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7966
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7976
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7996
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8013
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8021
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8029
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8037
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8045
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8055
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8063
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8072
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8080
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8088
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8096
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8104
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8115
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8148
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8170
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8218
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8230
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8249
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8256
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8263
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8275
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8283
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8293
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8303
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8311
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8322
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8331
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8340
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8348
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8358
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8366
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8390
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8409
		{
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8411
		{
		}
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8452
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8463
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8467
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8471
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8477
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8486
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8492
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8496
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8503
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8507
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8511
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8519
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8523
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8527
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8531
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8537
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8541
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8545
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8549
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8553
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8557
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8561
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8565
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8569
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8573
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8581
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8585
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8589
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8593
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8597
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8601
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8605
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8609
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8613
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8617
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8627
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8633
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8637
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8644
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8648
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8652
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8658
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8662
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8666
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8670
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8674
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8678
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8682
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8688
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8692
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8696
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8700
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8706
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8719
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8724
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8730
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8734
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8747
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8752
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8756
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8760
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8764
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8768
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8772
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8786
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8790
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8797
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8808
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8813
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8831
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8843
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8855
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8907
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8920
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8933
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8959
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8985
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9000
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9027
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9069
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9105
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9170
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9190
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9210
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9246
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9259
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9272
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9285
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9298
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9310
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9322
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9334
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9346
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9370
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9382
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9394
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9406
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9419
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9432
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9447
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9455
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9464
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9474
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9497
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9502
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9508
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9515
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9519
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9524
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9528
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9534
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9540
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9547
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9554
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9563
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9570
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9577
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9586
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9590
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9594
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9600
		{
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9602
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9612
		{
			yyVAL.str = ""
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9616
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

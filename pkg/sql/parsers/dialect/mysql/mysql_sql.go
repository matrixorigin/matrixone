// Code generated by goyacc -o /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.go /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y. DO NOT EDIT.

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:16

import (
	"fmt"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const LOWER_THAN_COMMA = 57354
const SELECT = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CONNECT = 57367
const MANAGE = 57368
const GRANTS = 57369
const OWNERSHIP = 57370
const REFERENCE = 57371
const LOWER_THAN_SET = 57372
const SET = 57373
const ALL = 57374
const DISTINCT = 57375
const DISTINCTROW = 57376
const AS = 57377
const EXISTS = 57378
const ASC = 57379
const DESC = 57380
const INTO = 57381
const DUPLICATE = 57382
const DEFAULT = 57383
const LOCK = 57384
const KEYS = 57385
const NULLS = 57386
const FIRST = 57387
const LAST = 57388
const AFTER = 57389
const INSTANT = 57390
const INPLACE = 57391
const COPY = 57392
const DISABLE = 57393
const ENABLE = 57394
const UNDEFINED = 57395
const MERGE = 57396
const TEMPTABLE = 57397
const DEFINER = 57398
const INVOKER = 57399
const SQL = 57400
const SECURITY = 57401
const CASCADED = 57402
const VALUES = 57403
const NEXT = 57404
const VALUE = 57405
const SHARE = 57406
const MODE = 57407
const SQL_NO_CACHE = 57408
const SQL_CACHE = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const CROSS_L2 = 57420
const APPLY = 57421
const LOWER_THAN_ON = 57422
const ON = 57423
const USING = 57424
const SUBQUERY_AS_EXPR = 57425
const LOWER_THAN_STRING = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const STRING = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const QUOTE_ID = 57435
const STAGE = 57436
const CREDENTIALS = 57437
const STAGES = 57438
const SNAPSHOTS = 57439
const INTEGRAL = 57440
const HEX = 57441
const FLOAT = 57442
const HEXNUM = 57443
const BIT_LITERAL = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const LOWER_THAN_CHARSET = 57448
const CHARSET = 57449
const UNIQUE = 57450
const KEY = 57451
const OR = 57452
const PIPE_CONCAT = 57453
const XOR = 57454
const AND = 57455
const NOT = 57456
const BETWEEN = 57457
const CASE = 57458
const WHEN = 57459
const THEN = 57460
const ELSE = 57461
const END = 57462
const ELSEIF = 57463
const LOWER_THAN_EQ = 57464
const LE = 57465
const GE = 57466
const NE = 57467
const NULL_SAFE_EQUAL = 57468
const IS = 57469
const LIKE = 57470
const REGEXP = 57471
const IN = 57472
const ASSIGNMENT = 57473
const ILIKE = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const INTERVAL = 57483
const OUT = 57484
const INOUT = 57485
const BEGIN = 57486
const START = 57487
const TRANSACTION = 57488
const COMMIT = 57489
const ROLLBACK = 57490
const WORK = 57491
const CONSISTENT = 57492
const SNAPSHOT = 57493
const CHAIN = 57494
const NO = 57495
const RELEASE = 57496
const PRIORITY = 57497
const QUICK = 57498
const BIT = 57499
const TINYINT = 57500
const SMALLINT = 57501
const MEDIUMINT = 57502
const INT = 57503
const INTEGER = 57504
const BIGINT = 57505
const INTNUM = 57506
const REAL = 57507
const DOUBLE = 57508
const FLOAT_TYPE = 57509
const DECIMAL = 57510
const NUMERIC = 57511
const DECIMAL_VALUE = 57512
const TIME = 57513
const TIMESTAMP = 57514
const DATETIME = 57515
const YEAR = 57516
const CHAR = 57517
const VARCHAR = 57518
const BOOL = 57519
const CHARACTER = 57520
const VARBINARY = 57521
const NCHAR = 57522
const TEXT = 57523
const TINYTEXT = 57524
const MEDIUMTEXT = 57525
const LONGTEXT = 57526
const DATALINK = 57527
const BLOB = 57528
const TINYBLOB = 57529
const MEDIUMBLOB = 57530
const LONGBLOB = 57531
const JSON = 57532
const ENUM = 57533
const UUID = 57534
const VECF32 = 57535
const VECF64 = 57536
const GEOMETRY = 57537
const POINT = 57538
const LINESTRING = 57539
const POLYGON = 57540
const GEOMETRYCOLLECTION = 57541
const MULTIPOINT = 57542
const MULTILINESTRING = 57543
const MULTIPOLYGON = 57544
const INT1 = 57545
const INT2 = 57546
const INT3 = 57547
const INT4 = 57548
const INT8 = 57549
const S3OPTION = 57550
const STAGEOPTION = 57551
const SQL_SMALL_RESULT = 57552
const SQL_BIG_RESULT = 57553
const SQL_BUFFER_RESULT = 57554
const LOW_PRIORITY = 57555
const HIGH_PRIORITY = 57556
const DELAYED = 57557
const CREATE = 57558
const ALTER = 57559
const DROP = 57560
const RENAME = 57561
const ANALYZE = 57562
const PHYPLAN = 57563
const ADD = 57564
const RETURNS = 57565
const SCHEMA = 57566
const TABLE = 57567
const SEQUENCE = 57568
const INDEX = 57569
const VIEW = 57570
const TO = 57571
const IGNORE = 57572
const IF = 57573
const PRIMARY = 57574
const COLUMN = 57575
const CONSTRAINT = 57576
const SPATIAL = 57577
const FULLTEXT = 57578
const FOREIGN = 57579
const KEY_BLOCK_SIZE = 57580
const SHOW = 57581
const DESCRIBE = 57582
const EXPLAIN = 57583
const DATE = 57584
const ESCAPE = 57585
const REPAIR = 57586
const OPTIMIZE = 57587
const TRUNCATE = 57588
const MAXVALUE = 57589
const PARTITION = 57590
const REORGANIZE = 57591
const LESS = 57592
const THAN = 57593
const PROCEDURE = 57594
const TRIGGER = 57595
const STATUS = 57596
const VARIABLES = 57597
const ROLE = 57598
const PROXY = 57599
const AVG_ROW_LENGTH = 57600
const STORAGE = 57601
const DISK = 57602
const MEMORY = 57603
const CHECKSUM = 57604
const COMPRESSION = 57605
const DATA = 57606
const DIRECTORY = 57607
const DELAY_KEY_WRITE = 57608
const ENCRYPTION = 57609
const ENGINE = 57610
const MAX_ROWS = 57611
const MIN_ROWS = 57612
const PACK_KEYS = 57613
const ROW_FORMAT = 57614
const STATS_AUTO_RECALC = 57615
const STATS_PERSISTENT = 57616
const STATS_SAMPLE_PAGES = 57617
const DYNAMIC = 57618
const COMPRESSED = 57619
const REDUNDANT = 57620
const COMPACT = 57621
const FIXED = 57622
const COLUMN_FORMAT = 57623
const AUTO_RANDOM = 57624
const ENGINE_ATTRIBUTE = 57625
const SECONDARY_ENGINE_ATTRIBUTE = 57626
const INSERT_METHOD = 57627
const RESTRICT = 57628
const CASCADE = 57629
const ACTION = 57630
const PARTIAL = 57631
const SIMPLE = 57632
const CHECK = 57633
const ENFORCED = 57634
const RANGE = 57635
const LIST = 57636
const ALGORITHM = 57637
const LINEAR = 57638
const PARTITIONS = 57639
const SUBPARTITION = 57640
const SUBPARTITIONS = 57641
const CLUSTER = 57642
const TYPE = 57643
const ANY = 57644
const SOME = 57645
const EXTERNAL = 57646
const LOCALFILE = 57647
const URL = 57648
const PREPARE = 57649
const DEALLOCATE = 57650
const RESET = 57651
const EXTENSION = 57652
const RETENTION = 57653
const PERIOD = 57654
const INCREMENT = 57655
const CYCLE = 57656
const MINVALUE = 57657
const PUBLICATION = 57658
const SUBSCRIPTIONS = 57659
const PUBLICATIONS = 57660
const PROPERTIES = 57661
const PARSER = 57662
const VISIBLE = 57663
const INVISIBLE = 57664
const BTREE = 57665
const HASH = 57666
const RTREE = 57667
const BSI = 57668
const IVFFLAT = 57669
const MASTER = 57670
const ZONEMAP = 57671
const LEADING = 57672
const BOTH = 57673
const TRAILING = 57674
const UNKNOWN = 57675
const LISTS = 57676
const OP_TYPE = 57677
const REINDEX = 57678
const EXPIRE = 57679
const ACCOUNT = 57680
const ACCOUNTS = 57681
const UNLOCK = 57682
const DAY = 57683
const NEVER = 57684
const PUMP = 57685
const MYSQL_COMPATIBILITY_MODE = 57686
const UNIQUE_CHECK_ON_AUTOINCR = 57687
const MODIFY = 57688
const CHANGE = 57689
const SECOND = 57690
const ASCII = 57691
const COALESCE = 57692
const COLLATION = 57693
const HOUR = 57694
const MICROSECOND = 57695
const MINUTE = 57696
const MONTH = 57697
const QUARTER = 57698
const REPEAT = 57699
const REVERSE = 57700
const ROW_COUNT = 57701
const WEEK = 57702
const REVOKE = 57703
const FUNCTION = 57704
const PRIVILEGES = 57705
const TABLESPACE = 57706
const EXECUTE = 57707
const SUPER = 57708
const GRANT = 57709
const OPTION = 57710
const REFERENCES = 57711
const REPLICATION = 57712
const SLAVE = 57713
const CLIENT = 57714
const USAGE = 57715
const RELOAD = 57716
const FILE = 57717
const TEMPORARY = 57718
const ROUTINE = 57719
const EVENT = 57720
const SHUTDOWN = 57721
const NULLX = 57722
const AUTO_INCREMENT = 57723
const APPROXNUM = 57724
const SIGNED = 57725
const UNSIGNED = 57726
const ZEROFILL = 57727
const ENGINES = 57728
const LOW_CARDINALITY = 57729
const AUTOEXTEND_SIZE = 57730
const ADMIN_NAME = 57731
const RANDOM = 57732
const SUSPEND = 57733
const ATTRIBUTE = 57734
const HISTORY = 57735
const REUSE = 57736
const CURRENT = 57737
const OPTIONAL = 57738
const FAILED_LOGIN_ATTEMPTS = 57739
const PASSWORD_LOCK_TIME = 57740
const UNBOUNDED = 57741
const SECONDARY = 57742
const RESTRICTED = 57743
const USER = 57744
const IDENTIFIED = 57745
const CIPHER = 57746
const ISSUER = 57747
const X509 = 57748
const SUBJECT = 57749
const SAN = 57750
const REQUIRE = 57751
const SSL = 57752
const NONE = 57753
const PASSWORD = 57754
const SHARED = 57755
const EXCLUSIVE = 57756
const MAX_QUERIES_PER_HOUR = 57757
const MAX_UPDATES_PER_HOUR = 57758
const MAX_CONNECTIONS_PER_HOUR = 57759
const MAX_USER_CONNECTIONS = 57760
const FORMAT = 57761
const VERBOSE = 57762
const CONNECTION = 57763
const TRIGGERS = 57764
const PROFILES = 57765
const LOAD = 57766
const INLINE = 57767
const INFILE = 57768
const TERMINATED = 57769
const OPTIONALLY = 57770
const ENCLOSED = 57771
const ESCAPED = 57772
const STARTING = 57773
const LINES = 57774
const ROWS = 57775
const IMPORT = 57776
const DISCARD = 57777
const JSONTYPE = 57778
const MODUMP = 57779
const OVER = 57780
const PRECEDING = 57781
const FOLLOWING = 57782
const GROUPS = 57783
const DATABASES = 57784
const TABLES = 57785
const SEQUENCES = 57786
const EXTENDED = 57787
const FULL = 57788
const PROCESSLIST = 57789
const FIELDS = 57790
const COLUMNS = 57791
const OPEN = 57792
const ERRORS = 57793
const WARNINGS = 57794
const INDEXES = 57795
const SCHEMAS = 57796
const NODE = 57797
const LOCKS = 57798
const ROLES = 57799
const TABLE_NUMBER = 57800
const COLUMN_NUMBER = 57801
const TABLE_VALUES = 57802
const TABLE_SIZE = 57803
const NAMES = 57804
const GLOBAL = 57805
const PERSIST = 57806
const SESSION = 57807
const ISOLATION = 57808
const LEVEL = 57809
const READ = 57810
const WRITE = 57811
const ONLY = 57812
const REPEATABLE = 57813
const COMMITTED = 57814
const UNCOMMITTED = 57815
const SERIALIZABLE = 57816
const LOCAL = 57817
const EVENTS = 57818
const PLUGINS = 57819
const CURRENT_TIMESTAMP = 57820
const DATABASE = 57821
const CURRENT_TIME = 57822
const LOCALTIME = 57823
const LOCALTIMESTAMP = 57824
const UTC_DATE = 57825
const UTC_TIME = 57826
const UTC_TIMESTAMP = 57827
const REPLACE = 57828
const CONVERT = 57829
const SEPARATOR = 57830
const TIMESTAMPDIFF = 57831
const CURRENT_DATE = 57832
const CURRENT_USER = 57833
const CURRENT_ROLE = 57834
const SECOND_MICROSECOND = 57835
const MINUTE_MICROSECOND = 57836
const MINUTE_SECOND = 57837
const HOUR_MICROSECOND = 57838
const HOUR_SECOND = 57839
const HOUR_MINUTE = 57840
const DAY_MICROSECOND = 57841
const DAY_SECOND = 57842
const DAY_MINUTE = 57843
const DAY_HOUR = 57844
const YEAR_MONTH = 57845
const SQL_TSI_HOUR = 57846
const SQL_TSI_DAY = 57847
const SQL_TSI_WEEK = 57848
const SQL_TSI_MONTH = 57849
const SQL_TSI_QUARTER = 57850
const SQL_TSI_YEAR = 57851
const SQL_TSI_SECOND = 57852
const SQL_TSI_MINUTE = 57853
const RECURSIVE = 57854
const CONFIG = 57855
const DRAINER = 57856
const SOURCE = 57857
const STREAM = 57858
const HEADERS = 57859
const CONNECTOR = 57860
const CONNECTORS = 57861
const DAEMON = 57862
const PAUSE = 57863
const CANCEL = 57864
const TASK = 57865
const RESUME = 57866
const MATCH = 57867
const AGAINST = 57868
const BOOLEAN = 57869
const LANGUAGE = 57870
const WITH = 57871
const QUERY = 57872
const EXPANSION = 57873
const WITHOUT = 57874
const VALIDATION = 57875
const UPGRADE = 57876
const RETRY = 57877
const ADDDATE = 57878
const BIT_AND = 57879
const BIT_OR = 57880
const BIT_XOR = 57881
const CAST = 57882
const COUNT = 57883
const APPROX_COUNT = 57884
const APPROX_COUNT_DISTINCT = 57885
const SERIAL_EXTRACT = 57886
const APPROX_PERCENTILE = 57887
const CURDATE = 57888
const CURTIME = 57889
const DATE_ADD = 57890
const DATE_SUB = 57891
const EXTRACT = 57892
const GROUP_CONCAT = 57893
const MAX = 57894
const MID = 57895
const MIN = 57896
const NOW = 57897
const POSITION = 57898
const SESSION_USER = 57899
const STD = 57900
const STDDEV = 57901
const MEDIAN = 57902
const CLUSTER_CENTERS = 57903
const KMEANS = 57904
const STDDEV_POP = 57905
const STDDEV_SAMP = 57906
const SUBDATE = 57907
const SUBSTR = 57908
const SUBSTRING = 57909
const SUM = 57910
const SYSDATE = 57911
const SYSTEM_USER = 57912
const TRANSLATE = 57913
const TRIM = 57914
const VARIANCE = 57915
const VAR_POP = 57916
const VAR_SAMP = 57917
const AVG = 57918
const RANK = 57919
const ROW_NUMBER = 57920
const DENSE_RANK = 57921
const BIT_CAST = 57922
const BITMAP_BIT_POSITION = 57923
const BITMAP_BUCKET_NUMBER = 57924
const BITMAP_COUNT = 57925
const BITMAP_CONSTRUCT_AGG = 57926
const BITMAP_OR_AGG = 57927
const NEXTVAL = 57928
const SETVAL = 57929
const CURRVAL = 57930
const LASTVAL = 57931
const ARROW = 57932
const ROW = 57933
const OUTFILE = 57934
const HEADER = 57935
const MAX_FILE_SIZE = 57936
const FORCE_QUOTE = 57937
const PARALLEL = 57938
const STRICT = 57939
const UNUSED = 57940
const BINDINGS = 57941
const DO = 57942
const DECLARE = 57943
const LOOP = 57944
const WHILE = 57945
const LEAVE = 57946
const ITERATE = 57947
const UNTIL = 57948
const CALL = 57949
const PREV = 57950
const SLIDING = 57951
const FILL = 57952
const SPBEGIN = 57953
const BACKEND = 57954
const SERVERS = 57955
const HANDLER = 57956
const PERCENT = 57957
const SAMPLE = 57958
const MO_TS = 57959
const PITR = 57960
const CDC = 57961
const GROUPING = 57962
const SETS = 57963
const CUBE = 57964
const ROLLUP = 57965
const GROUPING_ID = 57966
const KILL = 57967
const BACKUP = 57968
const FILESYSTEM = 57969
const PARALLELISM = 57970
const RESTORE = 57971
const QUERY_RESULT = 57972

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"LOWER_THAN_COMMA",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"CROSS_L2",
	"APPLY",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"SNAPSHOTS",
	"INTEGRAL",
	"HEX",
	"FLOAT",
	"HEXNUM",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"DATALINK",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"PHYPLAN",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"RETENTION",
	"PERIOD",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"MASTER",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"OP_TYPE",
	"REINDEX",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"UNIQUE_CHECK_ON_AUTOINCR",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UPGRADE",
	"RETRY",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"SERIAL_EXTRACT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"BITMAP_BIT_POSITION",
	"BITMAP_BUCKET_NUMBER",
	"BITMAP_COUNT",
	"BITMAP_CONSTRUCT_AGG",
	"BITMAP_OR_AGG",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"STRICT",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"MO_TS",
	"PITR",
	"CDC",
	"GROUPING",
	"SETS",
	"CUBE",
	"ROLLUP",
	"GROUPING_ID",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"PARALLELISM",
	"RESTORE",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:12601

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 134,
	11, 782,
	22, 782,
	-2, 775,
	-1, 157,
	242, 1202,
	244, 1101,
	-2, 1148,
	-1, 184,
	43, 605,
	244, 605,
	271, 612,
	272, 612,
	470, 605,
	-2, 640,
	-1, 224,
	651, 1963,
	-2, 515,
	-1, 527,
	651, 2083,
	-2, 396,
	-1, 585,
	651, 2142,
	-2, 394,
	-1, 586,
	651, 2143,
	-2, 395,
	-1, 587,
	651, 2144,
	-2, 397,
	-1, 725,
	323, 176,
	442, 176,
	443, 176,
	-2, 1867,
	-1, 791,
	84, 1653,
	-2, 2019,
	-1, 792,
	84, 1671,
	-2, 1990,
	-1, 796,
	84, 1672,
	-2, 2018,
	-1, 830,
	84, 1580,
	-2, 2220,
	-1, 831,
	84, 1581,
	-2, 2219,
	-1, 832,
	84, 1582,
	-2, 2209,
	-1, 833,
	84, 2181,
	-2, 2202,
	-1, 834,
	84, 2182,
	-2, 2203,
	-1, 835,
	84, 2183,
	-2, 2211,
	-1, 836,
	84, 2184,
	-2, 2191,
	-1, 837,
	84, 2185,
	-2, 2200,
	-1, 838,
	84, 2186,
	-2, 2212,
	-1, 839,
	84, 2187,
	-2, 2213,
	-1, 840,
	84, 2188,
	-2, 2218,
	-1, 841,
	84, 2189,
	-2, 2223,
	-1, 842,
	84, 2190,
	-2, 2224,
	-1, 843,
	84, 1649,
	-2, 2057,
	-1, 844,
	84, 1650,
	-2, 1851,
	-1, 845,
	84, 1651,
	-2, 2066,
	-1, 846,
	84, 1652,
	-2, 1860,
	-1, 848,
	84, 1655,
	-2, 1868,
	-1, 849,
	84, 1656,
	-2, 2090,
	-1, 851,
	84, 1659,
	-2, 1887,
	-1, 853,
	84, 1661,
	-2, 2102,
	-1, 854,
	84, 1662,
	-2, 2101,
	-1, 855,
	84, 1663,
	-2, 1931,
	-1, 856,
	84, 1664,
	-2, 2014,
	-1, 859,
	84, 1667,
	-2, 2113,
	-1, 861,
	84, 1669,
	-2, 2116,
	-1, 862,
	84, 1670,
	-2, 2118,
	-1, 863,
	84, 1673,
	-2, 2126,
	-1, 864,
	84, 1674,
	-2, 1999,
	-1, 865,
	84, 1675,
	-2, 2044,
	-1, 866,
	84, 1676,
	-2, 2009,
	-1, 867,
	84, 1677,
	-2, 2034,
	-1, 878,
	84, 1558,
	-2, 2214,
	-1, 879,
	84, 1559,
	-2, 2215,
	-1, 880,
	84, 1560,
	-2, 2216,
	-1, 979,
	465, 640,
	466, 640,
	-2, 606,
	-1, 1029,
	126, 1851,
	137, 1851,
	157, 1851,
	-2, 1825,
	-1, 1146,
	22, 809,
	-2, 758,
	-1, 1256,
	11, 782,
	22, 782,
	-2, 1437,
	-1, 1339,
	22, 809,
	-2, 758,
	-1, 1689,
	84, 1724,
	-2, 2016,
	-1, 1690,
	84, 1725,
	-2, 2017,
	-1, 1858,
	85, 973,
	-2, 979,
	-1, 2304,
	109, 1140,
	153, 1140,
	192, 1140,
	195, 1140,
	284, 1140,
	-2, 1133,
	-1, 2462,
	11, 782,
	22, 782,
	-2, 914,
	-1, 2495,
	85, 1811,
	158, 1811,
	-2, 2001,
	-1, 2496,
	85, 1811,
	158, 1811,
	-2, 2000,
	-1, 2497,
	85, 1787,
	158, 1787,
	-2, 1987,
	-1, 2498,
	85, 1788,
	158, 1788,
	-2, 1992,
	-1, 2499,
	85, 1789,
	158, 1789,
	-2, 1919,
	-1, 2500,
	85, 1790,
	158, 1790,
	-2, 1913,
	-1, 2501,
	85, 1791,
	158, 1791,
	-2, 1841,
	-1, 2502,
	85, 1792,
	158, 1792,
	-2, 1989,
	-1, 2503,
	85, 1793,
	158, 1793,
	-2, 1917,
	-1, 2504,
	85, 1794,
	158, 1794,
	-2, 1912,
	-1, 2505,
	85, 1795,
	158, 1795,
	-2, 1901,
	-1, 2506,
	85, 1811,
	158, 1811,
	-2, 1902,
	-1, 2507,
	85, 1811,
	158, 1811,
	-2, 1903,
	-1, 2509,
	85, 1800,
	158, 1800,
	-2, 2034,
	-1, 2510,
	85, 1777,
	158, 1777,
	-2, 2019,
	-1, 2511,
	85, 1809,
	158, 1809,
	-2, 1990,
	-1, 2512,
	85, 1809,
	158, 1809,
	-2, 2018,
	-1, 2513,
	85, 1809,
	158, 1809,
	-2, 1869,
	-1, 2514,
	85, 1807,
	158, 1807,
	-2, 2009,
	-1, 2515,
	85, 1804,
	158, 1804,
	-2, 1892,
	-1, 2516,
	84, 1758,
	85, 1758,
	158, 1758,
	400, 1758,
	401, 1758,
	402, 1758,
	-2, 1840,
	-1, 2517,
	84, 1759,
	85, 1759,
	158, 1759,
	400, 1759,
	401, 1759,
	402, 1759,
	-2, 1842,
	-1, 2518,
	84, 1760,
	85, 1760,
	158, 1760,
	400, 1760,
	401, 1760,
	402, 1760,
	-2, 2062,
	-1, 2519,
	84, 1762,
	85, 1762,
	158, 1762,
	400, 1762,
	401, 1762,
	402, 1762,
	-2, 1991,
	-1, 2520,
	84, 1764,
	85, 1764,
	158, 1764,
	400, 1764,
	401, 1764,
	402, 1764,
	-2, 1972,
	-1, 2521,
	84, 1766,
	85, 1766,
	158, 1766,
	400, 1766,
	401, 1766,
	402, 1766,
	-2, 1918,
	-1, 2522,
	84, 1768,
	85, 1768,
	158, 1768,
	400, 1768,
	401, 1768,
	402, 1768,
	-2, 1897,
	-1, 2523,
	84, 1769,
	85, 1769,
	158, 1769,
	400, 1769,
	401, 1769,
	402, 1769,
	-2, 1898,
	-1, 2524,
	84, 1771,
	85, 1771,
	158, 1771,
	400, 1771,
	401, 1771,
	402, 1771,
	-2, 1839,
	-1, 2525,
	85, 1814,
	158, 1814,
	400, 1814,
	401, 1814,
	402, 1814,
	-2, 1874,
	-1, 2526,
	85, 1814,
	158, 1814,
	400, 1814,
	401, 1814,
	402, 1814,
	-2, 1888,
	-1, 2527,
	85, 1817,
	158, 1817,
	400, 1817,
	401, 1817,
	402, 1817,
	-2, 1870,
	-1, 2528,
	85, 1817,
	158, 1817,
	400, 1817,
	401, 1817,
	402, 1817,
	-2, 1934,
	-1, 2529,
	85, 1814,
	158, 1814,
	400, 1814,
	401, 1814,
	402, 1814,
	-2, 1956,
	-1, 2742,
	109, 1140,
	153, 1140,
	192, 1140,
	195, 1140,
	284, 1140,
	-2, 1134,
	-1, 2760,
	82, 702,
	158, 702,
	-2, 1318,
	-1, 3178,
	195, 1140,
	308, 1405,
	-2, 1377,
	-1, 3357,
	109, 1140,
	153, 1140,
	192, 1140,
	195, 1140,
	-2, 1258,
	-1, 3359,
	109, 1140,
	153, 1140,
	192, 1140,
	195, 1140,
	-2, 1258,
	-1, 3371,
	82, 702,
	158, 702,
	-2, 1318,
	-1, 3392,
	195, 1140,
	308, 1405,
	-2, 1378,
	-1, 3544,
	109, 1140,
	153, 1140,
	192, 1140,
	195, 1140,
	-2, 1259,
	-1, 3572,
	85, 1220,
	158, 1220,
	-2, 1140,
	-1, 3715,
	85, 1220,
	158, 1220,
	-2, 1140,
	-1, 3879,
	85, 1224,
	158, 1224,
	-2, 1140,
	-1, 3929,
	85, 1225,
	158, 1225,
	-2, 1140,
}

const yyPrivate = 57344

const yyLast = 52798

var yyAct = [...]int{
	758, 735, 3978, 760, 3951, 2790, 213, 3970, 3883, 1943,
	1669, 1591, 3377, 3476, 3889, 3197, 3882, 3890, 3804, 3715,
	3778, 3164, 744, 3759, 3269, 3600, 3839, 3406, 3693, 1665,
	737, 2584, 2784, 3660, 3270, 3753, 1291, 3532, 3531, 1503,
	3714, 3782, 3529, 2702, 3633, 788, 625, 37, 1147, 2787,
	3684, 3471, 3480, 1580, 3760, 3339, 1716, 3762, 1436, 1028,
	643, 3344, 649, 649, 1891, 3173, 2763, 3553, 649, 667,
	676, 3541, 3135, 676, 1141, 1672, 2351, 3095, 3121, 3267,
	3393, 3511, 3360, 2899, 2039, 3124, 2900, 3546, 3329, 2052,
	1730, 2898, 2813, 1442, 733, 2879, 3193, 3175, 3309, 2075,
	2619, 2036, 3362, 3182, 2491, 2965, 198, 3255, 2925, 2354,
	2895, 2150, 3235, 3181, 65, 1137, 673, 2456, 1903, 2731,
	684, 3098, 2002, 3096, 2493, 3100, 1496, 3097, 3106, 3102,
	688, 727, 3144, 2315, 3093, 2260, 3012, 2793, 133, 2384,
	2743, 3070, 36, 2283, 732, 2938, 2116, 2259, 2133, 1823,
	2563, 2545, 2117, 2108, 2109, 2081, 2032, 2948, 1405, 2457,
	952, 1569, 2146, 1584, 2442, 2145, 2006, 1576, 2003, 2720,
	2795, 2715, 2815, 1581, 2437, 1933, 6, 2352, 2314, 2755,
	209, 8, 208, 7, 1867, 2304, 1085, 2489, 1663, 625,
	2180, 2147, 1512, 1668, 1543, 642, 2295, 1481, 1476, 2347,
	736, 1022, 2157, 726, 1723, 1612, 2652, 1654, 2115, 27,
	1425, 1703, 2112, 213, 1550, 213, 1163, 1076, 1077, 734,
	15, 1595, 1902, 2097, 649, 2071, 745, 681, 1021, 1863,
	1662, 1480, 2464, 1866, 658, 951, 1478, 882, 108, 2438,
	16, 1534, 1731, 690, 988, 1437, 24, 624, 33, 23,
	1445, 1446, 17, 1592, 199, 1542, 10, 14, 928, 675,
	974, 691, 195, 191, 934, 1292, 687, 3769, 1361, 1337,
	2154, 661, 3678, 884, 885, 2688, 949, 2688, 672, 2688,
	2466, 1073, 942, 3374, 943, 1224, 1225, 1226, 1223, 671,
	1408, 1224, 1225, 1226, 1223, 1224, 1225, 1226, 1223, 3151,
	2982, 2981, 1142, 1421, 2164, 3504, 3347, 1037, 1372, 668,
	3262, 1143, 2607, 2551, 2548, 2549, 1836, 669, 1557, 1072,
	1069, 1074, 923, 2546, 1553, 1068, 670, 197, 644, 654,
	2258, 1034, 679, 645, 2651, 1036, 937, 1356, 933, 1069,
	1412, 1008, 3740, 1069, 3628, 904, 902, 3080, 2264, 2268,
	1359, 3063, 1837, 1142, 3060, 3065, 1604, 3062, 3962, 1459,
	1830, 2680, 2678, 1352, 196, 61, 187, 158, 3469, 2961,
	1555, 2959, 2086, 3748, 1067, 3640, 3634, 1603, 8, 3472,
	7, 3268, 188, 2130, 1286, 728, 3764, 2111, 883, 179,
	3039, 2103, 2392, 189, 914, 3700, 650, 894, 1222, 3864,
	1186, 3516, 3512, 1055, 2682, 1224, 1225, 1226, 1223, 2593,
	2151, 1367, 132, 196, 1224, 1225, 1226, 1223, 3361, 2306,
	196, 196, 2601, 1590, 3665, 2305, 3815, 119, 1520, 1366,
	196, 61, 187, 158, 196, 192, 1365, 196, 1599, 3701,
	1364, 1362, 904, 2749, 903, 901, 902, 1038, 686, 1380,
	196, 61, 187, 158, 3037, 1610, 196, 2162, 196, 61,
	187, 158, 2893, 196, 1397, 1032, 1033, 939, 1596, 932,
	196, 1455, 1368, 2299, 1456, 1056, 2483, 1221, 936, 935,
	728, 2484, 2984, 1655, 192, 1607, 1659, 1003, 1001, 2931,
	1002, 1598, 2747, 899, 2049, 917, 2015, 1201, 1839, 924,
	1202, 192, 2932, 2933, 2973, 192, 895, 1635, 1609, 3667,
	1658, 132, 140, 141, 1621, 142, 143, 997, 132, 931,
	2704, 192, 196, 61, 187, 158, 2564, 192, 1204, 192,
	2016, 2017, 3493, 3064, 192, 1482, 3061, 1484, 941, 1848,
	1849, 192, 2750, 930, 1433, 1443, 1444, 929, 1050, 1045,
	1040, 1044, 1048, 916, 196, 61, 187, 158, 2705, 922,
	3861, 873, 1458, 872, 874, 875, 1917, 876, 877, 2717,
	1214, 196, 61, 187, 158, 1671, 1053, 3917, 1009, 2718,
	1043, 920, 1219, 1379, 157, 185, 194, 186, 117, 2470,
	3893, 3894, 2469, 192, 1031, 2471, 1660, 1030, 3751, 3767,
	1005, 1194, 3766, 3168, 1196, 3166, 3765, 184, 178, 177,
	1199, 2247, 2683, 2966, 67, 1556, 1554, 1441, 1158, 940,
	1657, 1440, 1443, 1444, 3857, 192, 3767, 3852, 2716, 3271,
	2166, 1051, 1197, 3766, 3851, 1155, 2588, 3765, 3850, 3841,
	1054, 3844, 192, 3866, 3867, 921, 2834, 649, 649, 3271,
	157, 1644, 194, 3841, 3637, 1765, 3862, 3863, 649, 1151,
	3955, 3956, 1041, 1675, 1007, 3754, 3755, 3756, 3757, 2967,
	1152, 2968, 3492, 184, 1200, 180, 181, 182, 676, 676,
	3494, 649, 1161, 2033, 2023, 3775, 1052, 3284, 1166, 1169,
	2723, 3330, 1650, 2158, 1166, 1169, 2427, 3117, 3337, 2706,
	2027, 3107, 3521, 3669, 3670, 2094, 3002, 2294, 190, 940,
	673, 673, 673, 2163, 1190, 1563, 1562, 3115, 2707, 1217,
	1218, 3418, 938, 3859, 3000, 1457, 1042, 2681, 1216, 128,
	1469, 2598, 183, 183, 2390, 129, 1381, 1656, 1189, 3470,
	1192, 1006, 2960, 2885, 1264, 1431, 2429, 3892, 1079, 2047,
	2048, 1203, 1195, 1198, 3111, 722, 1355, 3674, 724, 3768,
	3518, 927, 3122, 723, 3677, 3313, 1144, 3287, 2486, 3006,
	3652, 2687, 3653, 3112, 3113, 1143, 2430, 2431, 1191, 2700,
	1037, 2435, 1674, 1673, 1212, 1213, 3627, 2141, 2152, 3114,
	1151, 1143, 130, 897, 1143, 1211, 1150, 2152, 2152, 641,
	2370, 3194, 3195, 1049, 1034, 60, 2350, 2373, 1036, 3433,
	3196, 2169, 2171, 2172, 3430, 2265, 1181, 2701, 3133, 1838,
	1295, 3924, 1605, 2983, 3145, 3797, 3655, 3705, 3792, 2980,
	2756, 898, 2881, 2185, 2153, 1069, 2422, 3697, 1069, 1046,
	1069, 3699, 1047, 3170, 3423, 1143, 678, 1069, 677, 1069,
	1069, 3865, 2891, 1037, 62, 1193, 2301, 3654, 3652, 3783,
	3653, 915, 913, 2165, 2372, 3071, 3799, 3378, 3805, 3109,
	1420, 3165, 672, 672, 672, 3123, 3647, 1034, 674, 2789,
	1004, 1036, 1160, 671, 671, 671, 674, 1168, 1167, 138,
	193, 3385, 139, 1168, 1167, 2785, 2786, 159, 2789, 1358,
	3199, 1360, 58, 668, 668, 668, 3322, 685, 883, 2371,
	2547, 669, 669, 669, 3655, 3434, 1170, 1377, 643, 1558,
	670, 670, 670, 3774, 2679, 1146, 3517, 1296, 1145, 1033,
	1335, 3664, 2357, 1340, 1154, 1156, 1159, 1174, 1175, 3320,
	62, 3668, 1057, 1039, 1178, 3654, 159, 2602, 62, 1363,
	674, 952, 1180, 159, 159, 1645, 193, 3084, 1646, 1260,
	1261, 1262, 1263, 159, 2425, 3123, 3591, 159, 131, 45,
	159, 1432, 900, 1265, 3321, 59, 2486, 1840, 1157, 5,
	1139, 2279, 674, 159, 1443, 1444, 1443, 1444, 3706, 159,
	3989, 159, 1258, 135, 136, 3483, 159, 137, 3698, 674,
	2402, 2357, 2360, 159, 649, 2722, 1206, 1471, 942, 1207,
	943, 649, 62, 3118, 625, 625, 3108, 2401, 1172, 2729,
	3671, 3586, 2034, 3003, 625, 625, 1492, 3580, 1507, 1507,
	1418, 649, 1439, 2835, 3973, 2836, 2837, 1209, 2423, 2424,
	3858, 1491, 1435, 1434, 62, 3601, 3602, 3603, 3607, 3605,
	3606, 3604, 676, 1535, 643, 159, 2170, 1505, 1505, 1546,
	1546, 62, 2726, 2727, 998, 1179, 1307, 1308, 1509, 1417,
	213, 2356, 3110, 3171, 3522, 1416, 2358, 2725, 3806, 625,
	2024, 1514, 3648, 1681, 1684, 1685, 3761, 159, 1651, 3685,
	3881, 3174, 1138, 3198, 1682, 3059, 2026, 2735, 2738, 2739,
	2740, 2736, 2737, 2863, 159, 3719, 2393, 3363, 3131, 2350,
	2367, 3194, 3195, 1378, 3467, 2927, 2929, 1373, 686, 1205,
	3274, 2943, 2944, 3838, 1479, 1470, 1186, 1255, 3190, 3075,
	2359, 1588, 2594, 2475, 2388, 2361, 1593, 2693, 1564, 2155,
	2356, 2350, 2355, 1602, 2353, 2358, 2022, 1000, 1341, 2000,
	999, 2360, 1501, 1502, 1339, 1389, 2345, 3226, 1210, 1842,
	3005, 1395, 1394, 1393, 1392, 1010, 680, 3323, 3191, 1402,
	3648, 3593, 1633, 3974, 3649, 946, 947, 948, 1427, 1428,
	2832, 2167, 2168, 1208, 1383, 1597, 1507, 3310, 1507, 1151,
	3014, 3013, 1608, 2697, 1611, 2854, 2855, 1382, 2272, 2359,
	1371, 1628, 1629, 2274, 2273, 673, 1851, 944, 673, 673,
	1369, 1370, 1852, 3502, 1185, 1486, 1488, 1422, 1426, 1426,
	1426, 1643, 1407, 1374, 1375, 1499, 1500, 1404, 3077, 1384,
	1385, 1386, 1387, 1388, 2181, 1390, 3718, 1447, 2271, 3132,
	1450, 1396, 1422, 1422, 998, 1850, 1411, 905, 1567, 1536,
	1570, 1571, 1037, 1419, 2414, 1601, 1507, 3587, 3588, 1037,
	1429, 998, 1572, 1573, 941, 906, 3554, 2278, 1448, 1449,
	3880, 1451, 1452, 1729, 1453, 1578, 1579, 1413, 1490, 3582,
	1559, 1413, 3991, 3581, 2361, 1717, 2928, 1778, 1760, 1761,
	729, 1764, 1586, 1632, 1460, 1461, 1515, 3848, 1414, 1779,
	1583, 654, 1631, 1587, 1527, 2387, 3971, 3972, 1521, 1222,
	2761, 1533, 1786, 1148, 1788, 1547, 1789, 1790, 1791, 2454,
	2853, 2366, 2286, 3150, 1548, 2364, 1670, 1000, 1683, 3232,
	999, 1148, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1000, 2287, 2288, 999, 1714, 1715,
	1667, 3985, 3275, 2486, 1151, 2864, 2866, 2867, 2868, 2865,
	1841, 3980, 2694, 2330, 1844, 2215, 1846, 672, 2214, 1763,
	672, 672, 3192, 1853, 1686, 1855, 1856, 1648, 671, 1664,
	1535, 671, 671, 1641, 1843, 1864, 1507, 1869, 1870, 909,
	1872, 1471, 649, 1614, 1821, 1011, 1787, 649, 668, 2762,
	1507, 668, 668, 2297, 952, 1619, 669, 1892, 1622, 669,
	669, 3968, 1642, 3931, 1638, 670, 1507, 2455, 670, 670,
	1640, 3232, 1471, 1824, 2160, 3228, 1639, 667, 1661, 1620,
	1636, 1637, 1623, 1624, 3981, 3904, 1060, 1065, 1066, 1777,
	908, 1222, 1186, 3901, 911, 910, 2455, 1916, 1666, 3895,
	2194, 2762, 1224, 1225, 1226, 1223, 1923, 1923, 2566, 1471,
	1222, 1471, 1471, 3326, 2074, 649, 649, 3286, 1990, 1864,
	1994, 1712, 1713, 1507, 1997, 1998, 1705, 3877, 1336, 2013,
	1224, 1225, 1226, 1223, 3932, 2252, 3932, 887, 888, 889,
	890, 1832, 2593, 3203, 625, 1653, 1507, 3832, 2329, 3831,
	3201, 1070, 1071, 3825, 3069, 3800, 1075, 3067, 3905, 1873,
	2455, 3788, 1224, 1225, 1226, 1223, 3902, 3738, 3737, 1871,
	2296, 3732, 3681, 649, 1864, 1507, 2193, 2057, 2946, 649,
	649, 649, 684, 684, 3731, 1768, 1769, 1770, 2709, 2067,
	2068, 2069, 2070, 3730, 1920, 1827, 2076, 2684, 1784, 3729,
	3878, 1785, 1792, 213, 1945, 3709, 213, 213, 3035, 213,
	2583, 1992, 1224, 1225, 1226, 1223, 1518, 3708, 1798, 1799,
	1222, 3680, 1222, 2050, 1822, 3439, 3681, 1926, 2160, 1868,
	887, 888, 889, 890, 3789, 2571, 1828, 3387, 1820, 2011,
	3739, 2319, 2151, 1884, 3681, 2357, 2360, 2014, 3353, 1778,
	1778, 2119, 3302, 2042, 2043, 2072, 2343, 3681, 2191, 1897,
	1778, 1778, 3298, 2019, 3211, 2021, 3681, 2135, 2059, 2060,
	2061, 1859, 3681, 2028, 2922, 2257, 2040, 2041, 2160, 1894,
	1895, 1062, 1063, 1064, 2670, 1652, 1186, 892, 1888, 1889,
	2160, 1909, 2658, 1239, 3681, 2251, 1183, 2250, 2486, 1597,
	1892, 648, 648, 1914, 1507, 2149, 2056, 656, 2035, 2085,
	3388, 1905, 2088, 2089, 2222, 2091, 1868, 2650, 1422, 2609,
	2129, 3354, 2142, 673, 2591, 3303, 1904, 2121, 1906, 1907,
	2045, 2579, 1426, 1927, 1928, 3299, 1999, 3212, 1403, 1860,
	1861, 1862, 1913, 1720, 1426, 1922, 1924, 2455, 1991, 2573,
	1493, 1875, 1876, 1877, 1878, 3998, 1996, 2319, 1900, 1901,
	3982, 2001, 1184, 1037, 2143, 1222, 1037, 2018, 1664, 2020,
	1899, 2568, 2029, 1184, 1037, 1910, 1911, 3374, 2560, 2361,
	892, 2558, 2950, 2764, 2356, 2350, 2355, 1034, 2353, 2358,
	1222, 1036, 1222, 2596, 2556, 1921, 3336, 2319, 1034, 1893,
	2612, 2114, 1036, 2054, 2569, 2055, 2554, 2595, 2318, 2062,
	2063, 2125, 2114, 2253, 2082, 2587, 1925, 2229, 2337, 2228,
	1908, 3617, 2574, 2080, 1238, 1237, 1247, 1248, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1239, 1915, 2210, 2195, 1918,
	1919, 2213, 2204, 2359, 2569, 2203, 2627, 2202, 2140, 2099,
	2159, 2561, 1625, 3155, 2559, 2178, 2179, 2079, 2065, 1616,
	1272, 1171, 1135, 656, 1130, 3437, 1892, 2555, 1255, 2128,
	2131, 1037, 2126, 2120, 1129, 1125, 1126, 1127, 1128, 2555,
	2632, 2319, 2631, 2630, 2628, 672, 2252, 2997, 2262, 2263,
	1222, 2266, 1222, 2139, 2269, 1034, 671, 2044, 3793, 1036,
	1242, 1243, 1244, 1245, 1246, 1239, 3992, 3959, 727, 3555,
	2144, 649, 649, 649, 1222, 1222, 668, 3146, 1222, 907,
	1222, 2137, 1423, 2160, 669, 1626, 649, 649, 649, 649,
	2245, 1767, 1766, 670, 2385, 1767, 1766, 3366, 3364, 2316,
	1454, 1409, 3794, 1495, 1497, 1410, 3770, 2138, 3679, 2322,
	1471, 2629, 3644, 3556, 2182, 1498, 3584, 3583, 3569, 1464,
	1465, 3525, 1467, 1468, 2173, 1472, 1473, 1474, 3346, 2175,
	3233, 3224, 3218, 761, 771, 3213, 1471, 2187, 2176, 2177,
	3126, 3367, 3365, 762, 1705, 763, 767, 770, 766, 764,
	765, 2888, 2887, 2379, 2733, 2689, 3147, 2606, 1522, 1523,
	1524, 1525, 1526, 2572, 1528, 1529, 1530, 1531, 1532, 3260,
	2174, 2477, 1538, 1539, 1540, 1541, 1793, 1794, 1795, 1796,
	2124, 2123, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 2122, 768, 1399,
	3148, 1424, 1409, 2334, 1804, 1494, 1410, 2336, 1797, 2338,
	649, 1923, 1398, 1153, 2546, 2386, 2616, 2540, 2083, 2459,
	2459, 2013, 2459, 912, 1724, 1224, 1225, 1226, 1223, 2952,
	769, 1227, 1854, 2246, 2248, 2249, 3263, 3849, 1724, 1257,
	2188, 625, 625, 1223, 2254, 1711, 1226, 1223, 1267, 1151,
	3596, 3595, 2633, 2634, 2339, 1507, 649, 2223, 2224, 2969,
	2226, 1708, 1710, 1707, 1551, 1709, 2083, 2233, 2349, 649,
	2824, 2280, 2822, 1275, 2348, 1151, 2530, 643, 2801, 1295,
	2799, 2298, 3988, 1546, 2481, 2013, 3526, 3527, 2535, 3575,
	2537, 2672, 3964, 2673, 213, 1224, 1225, 1226, 1223, 2342,
	2391, 3519, 3334, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	1274, 3963, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 1273, 2415, 2416, 2417, 2418, 2419, 1782,
	2420, 2472, 2323, 2473, 2576, 1037, 3908, 2461, 3876, 2465,
	2875, 2335, 2873, 2463, 1783, 2871, 3987, 2362, 2363, 3875,
	2368, 2589, 2478, 2479, 2860, 2149, 3795, 2703, 2488, 1034,
	3520, 3335, 1507, 1036, 1507, 3734, 1507, 3722, 3712, 3702,
	2326, 1151, 3635, 3558, 3557, 2332, 3379, 3368, 2333, 2608,
	3028, 3333, 1426, 3214, 3116, 2993, 1296, 1224, 1225, 1226,
	1223, 2964, 2963, 2599, 1224, 1225, 1226, 1223, 2550, 2874,
	2541, 2872, 1551, 2432, 2870, 1507, 2636, 2534, 2436, 2858,
	2857, 2856, 2494, 2859, 2331, 1224, 1225, 1226, 1223, 2848,
	2842, 2643, 2467, 2841, 3261, 2840, 1507, 2839, 2685, 2562,
	3713, 2474, 2256, 2102, 1505, 2101, 1224, 1225, 1226, 1223,
	2100, 3027, 1486, 1488, 2635, 2618, 648, 1140, 2482, 2096,
	2095, 2324, 2325, 2051, 1847, 1505, 3340, 1149, 1845, 1617,
	1354, 2327, 2328, 2732, 3345, 2644, 2485, 3101, 1224, 1225,
	1226, 1223, 2531, 3672, 3673, 2691, 2692, 2533, 1133, 2695,
	1177, 3984, 2647, 2648, 1238, 1237, 1247, 1248, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1239, 1151, 3983, 722, 3477,
	1151, 724, 3957, 2624, 3923, 3922, 723, 1507, 2603, 3919,
	1471, 1224, 1225, 1226, 1223, 3855, 1994, 2642, 3854, 3661,
	2542, 3836, 2645, 2605, 2760, 2620, 3777, 2620, 3530, 3758,
	2766, 2600, 1224, 1225, 1226, 1223, 1132, 3749, 2614, 3726,
	3886, 1552, 2585, 2586, 3721, 2581, 2592, 2676, 2776, 3720,
	2597, 3676, 3663, 2590, 3662, 1664, 3636, 3577, 1151, 1545,
	1545, 3537, 3523, 3505, 3503, 2748, 2798, 1224, 1225, 1226,
	1223, 3500, 3497, 1151, 1151, 1151, 1923, 2610, 2611, 1151,
	3496, 2808, 2809, 2810, 2811, 1151, 2818, 3475, 2819, 2820,
	2626, 2821, 3473, 2823, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1239, 2744, 3447, 2818, 3016, 3444, 2745, 3441, 2880,
	3332, 2613, 1224, 1225, 1226, 1223, 2459, 1224, 1225, 1226,
	1223, 3331, 2532, 3328, 2777, 3318, 3311, 3295, 2730, 3293,
	2876, 2539, 1037, 2710, 3221, 3220, 3215, 2494, 3209, 3208,
	625, 1945, 3127, 3088, 2719, 2058, 1994, 2757, 3087, 3083,
	1151, 2013, 2013, 2013, 2013, 2013, 3081, 3079, 3076, 2712,
	3990, 2714, 2767, 3074, 2206, 1151, 2013, 2261, 3007, 2459,
	3004, 2962, 2936, 2796, 2869, 2861, 2779, 2796, 2851, 2882,
	2849, 2792, 1224, 1225, 1226, 1223, 1507, 2711, 2930, 2845,
	3781, 2728, 2844, 2843, 2698, 1489, 2803, 649, 649, 2690,
	1868, 2686, 2759, 2751, 2765, 829, 828, 3945, 8, 2582,
	7, 2804, 2805, 2275, 2270, 3498, 2807, 1224, 1225, 1226,
	1223, 2267, 2814, 1676, 1677, 1678, 1679, 1680, 2105, 2781,
	2778, 2098, 2205, 1835, 1834, 1618, 2830, 2831, 2800, 2794,
	773, 134, 1224, 1225, 1226, 1223, 134, 1303, 2918, 1299,
	2806, 2846, 2847, 213, 1298, 1136, 896, 2198, 213, 1224,
	1225, 1226, 1223, 3812, 196, 1721, 187, 158, 3808, 1725,
	1726, 1727, 1728, 2653, 2654, 2850, 2838, 2884, 1762, 2659,
	1778, 3657, 1778, 3656, 3645, 2979, 1772, 2901, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1228, 2775, 3499, 2992, 3484,
	3359, 3358, 2901, 1466, 1507, 3357, 655, 2999, 2883, 134,
	1477, 3325, 2889, 3307, 3305, 3304, 3301, 3300, 3486, 2902,
	2903, 2904, 2905, 2906, 2768, 2920, 2974, 2916, 2921, 2947,
	1513, 3294, 2919, 2773, 2774, 192, 2791, 2985, 3292, 1825,
	3276, 2886, 3485, 3266, 2937, 1224, 1225, 1226, 1223, 1751,
	3265, 2934, 1224, 1225, 1226, 1223, 3427, 3251, 3250, 2953,
	3156, 3091, 1824, 3066, 2957, 3033, 3026, 2978, 1571, 1224,
	1225, 1226, 1223, 2797, 3018, 3017, 3011, 2769, 1572, 1573,
	2945, 2708, 2772, 1224, 1225, 1226, 1223, 2557, 2553, 2552,
	1578, 1579, 2234, 1037, 3021, 2227, 3023, 2221, 2220, 2192,
	2219, 2218, 1586, 2216, 1037, 3078, 2955, 2951, 2212, 2954,
	1583, 2211, 3082, 1587, 1896, 2209, 3085, 3086, 2200, 3290,
	2197, 2196, 3001, 2104, 1151, 1818, 1817, 2972, 2977, 1816,
	3104, 2970, 2975, 1035, 2976, 2996, 1781, 2987, 134, 1912,
	3120, 1780, 2989, 2988, 2986, 649, 1224, 1225, 1226, 1223,
	1771, 196, 1519, 134, 1517, 134, 3944, 3136, 1151, 3031,
	3907, 649, 3830, 1151, 1151, 3008, 2995, 3009, 1293, 3015,
	3807, 3744, 2013, 2316, 3741, 3154, 1224, 1225, 1226, 1223,
	3024, 3025, 3728, 3723, 1566, 3068, 1224, 1225, 1226, 1223,
	3030, 3630, 3629, 3611, 2379, 3594, 3590, 1825, 2190, 3019,
	3020, 3568, 1825, 1825, 3552, 3457, 3180, 3139, 3183, 3022,
	3183, 3183, 3143, 3455, 3130, 1151, 1747, 1224, 1225, 1226,
	1223, 3029, 192, 1744, 3425, 3424, 3421, 1746, 1743, 1745,
	1749, 1750, 3420, 3204, 3073, 1748, 3386, 3200, 3163, 3072,
	2744, 1507, 1507, 3383, 3381, 3090, 3348, 3824, 1224, 1225,
	1226, 1223, 2084, 1577, 1568, 2087, 3202, 3158, 2090, 1582,
	1585, 2092, 1574, 3089, 1406, 2877, 2802, 2753, 2752, 2746,
	1505, 1505, 1037, 2713, 1037, 1224, 1225, 1226, 1223, 1037,
	3205, 3206, 2671, 2567, 3149, 2476, 2421, 2317, 649, 3167,
	3169, 2289, 3138, 3129, 3152, 3104, 1034, 3141, 3142, 2255,
	1036, 3937, 2669, 1706, 1471, 1037, 3153, 1994, 1994, 3179,
	192, 3188, 2064, 1858, 2349, 1831, 2134, 1649, 1600, 1575,
	2348, 3162, 1353, 3184, 3185, 2668, 1338, 1334, 3178, 1224,
	1225, 1226, 1223, 1333, 2917, 2667, 1332, 1331, 3189, 1238,
	1237, 1247, 1248, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1239, 1330, 1224, 1225, 1226, 1223, 1329, 1151, 2217, 3822,
	2666, 2636, 1224, 1225, 1226, 1223, 1328, 1327, 1326, 1325,
	3264, 1324, 1323, 1322, 3935, 3566, 1321, 3210, 1320, 1754,
	1755, 1756, 1757, 1758, 1759, 1752, 1753, 1224, 1225, 1226,
	1223, 1874, 1319, 1318, 3040, 3041, 1879, 1317, 1316, 1315,
	3042, 3043, 3044, 3045, 1314, 3046, 3047, 3048, 3049, 3050,
	3051, 3052, 3053, 3054, 3055, 3056, 649, 3229, 3230, 3216,
	3223, 2184, 3227, 3219, 3217, 2189, 2665, 3240, 3222, 1238,
	1237, 1247, 1248, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1239, 1313, 1312, 3244, 1311, 1310, 1309, 3247, 3248, 3249,
	1306, 1305, 1304, 1224, 1225, 1226, 1223, 1302, 1301, 1468,
	1300, 3253, 1297, 1290, 1929, 1930, 2201, 1289, 1287, 3259,
	2664, 1286, 1285, 1284, 2208, 1283, 3161, 1247, 1248, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1239, 2076, 3315, 1282,
	1281, 3317, 1280, 1279, 2494, 1278, 2225, 1224, 1225, 1226,
	1223, 2230, 2231, 2232, 3279, 1277, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 3296, 1276, 3283, 3157,
	3186, 1271, 2053, 1270, 3159, 3160, 2663, 3288, 2053, 2053,
	2053, 1269, 1268, 649, 1994, 3282, 2662, 3277, 3319, 1188,
	1134, 3820, 3236, 3237, 3352, 2661, 3242, 3818, 3278, 2660,
	3324, 2620, 2439, 1224, 1225, 1226, 1223, 3327, 3422, 2321,
	2459, 2013, 3371, 1224, 1225, 1226, 1223, 2303, 1176, 3891,
	3308, 3239, 1224, 1225, 1226, 1223, 1224, 1225, 1226, 1223,
	2657, 3312, 2734, 2487, 2107, 3389, 3314, 1187, 1151, 2445,
	2449, 2450, 2451, 2446, 2453, 2447, 2452, 3180, 2656, 2448,
	2909, 1151, 3241, 134, 134, 134, 1035, 1224, 1225, 1226,
	1223, 2908, 1151, 2910, 3436, 3573, 2913, 1037, 1507, 2907,
	2580, 2914, 3341, 118, 1037, 1224, 1225, 1226, 1223, 2911,
	64, 3373, 2655, 2915, 2912, 2450, 2451, 649, 2570, 1994,
	1400, 1886, 1887, 1151, 3343, 3459, 3125, 1505, 2389, 3176,
	3231, 3177, 2991, 3460, 2565, 63, 3432, 3438, 3254, 1224,
	1225, 1226, 1223, 3280, 3281, 3419, 1881, 1882, 1883, 3243,
	1983, 3380, 213, 3382, 1560, 3376, 3412, 3369, 2649, 1256,
	3349, 3350, 3351, 3370, 2639, 1151, 3355, 3356, 2604, 651,
	3451, 3448, 2585, 2586, 2276, 3461, 652, 3428, 3431, 1613,
	3426, 1594, 3458, 2066, 3435, 1224, 1225, 1226, 1223, 1182,
	3099, 1224, 1225, 1226, 1223, 3442, 3443, 2615, 3440, 3446,
	1825, 653, 1825, 1719, 3501, 3390, 3449, 2826, 3453, 3452,
	3450, 3445, 3092, 3508, 2827, 2828, 2829, 1151, 3429, 2780,
	2754, 1825, 1825, 2341, 1224, 1225, 1226, 1223, 3948, 2814,
	1224, 1225, 1226, 1223, 2312, 3482, 1890, 1857, 3725, 1151,
	1507, 1507, 1767, 1766, 3207, 3136, 1349, 1350, 3478, 3479,
	1347, 1348, 2433, 1545, 3506, 3507, 2428, 3545, 3468, 3545,
	2901, 2445, 2449, 2450, 2451, 2446, 2453, 2447, 2452, 1505,
	1717, 2448, 1151, 3562, 1151, 1995, 3539, 3540, 1463, 3535,
	1345, 1346, 3565, 1462, 3567, 1343, 1344, 1215, 3246, 2939,
	2277, 1507, 2136, 1415, 3514, 3542, 1391, 3536, 3513, 3515,
	1438, 3914, 2901, 2575, 3912, 2578, 1342, 3869, 3846, 649,
	3524, 1151, 1151, 3845, 3843, 1151, 1151, 3538, 3784, 3745,
	1717, 3550, 3625, 3624, 3549, 3563, 3474, 3297, 3373, 3273,
	3272, 3257, 2374, 3613, 3561, 2344, 2121, 1615, 3510, 3608,
	2290, 2291, 2292, 3256, 3571, 2949, 1892, 3578, 3622, 3598,
	3599, 1413, 3316, 3609, 3610, 2307, 2308, 2309, 2310, 3419,
	3631, 3632, 1037, 3574, 3939, 3938, 1148, 2994, 2696, 2617,
	3412, 3570, 2623, 1507, 2305, 2199, 3533, 1357, 1173, 2637,
	2638, 3576, 3938, 3372, 3939, 3592, 3252, 2640, 2641, 200,
	3, 1430, 3375, 3658, 887, 888, 889, 890, 3618, 1148,
	3619, 3463, 1505, 2646, 3651, 72, 2, 3960, 3961, 1670,
	3620, 1670, 3643, 1, 2677, 3614, 1829, 1351, 891, 886,
	1483, 3638, 2468, 2046, 1511, 1833, 893, 2923, 2924, 3245,
	2926, 2699, 1676, 1825, 2156, 2890, 3646, 2426, 952, 3650,
	2293, 3495, 3119, 3694, 3688, 1401, 945, 1773, 3533, 3533,
	1630, 1059, 3533, 3533, 1516, 1165, 1627, 1164, 655, 1151,
	1162, 1722, 775, 3615, 2110, 3642, 2878, 3616, 2852, 3711,
	3675, 3621, 3717, 3947, 3977, 3906, 3950, 3682, 1647, 1477,
	759, 3686, 3837, 3750, 3910, 3752, 3641, 2161, 1220, 2971,
	134, 3691, 3690, 970, 816, 786, 3689, 1288, 3703, 3482,
	1606, 3038, 1151, 3707, 3036, 1061, 785, 1507, 3338, 2724,
	2770, 2771, 3626, 2942, 3696, 1058, 971, 3487, 2093, 3488,
	3747, 3639, 1561, 1565, 2340, 1513, 3704, 3803, 3724, 3572,
	3172, 2788, 1589, 3798, 3384, 3491, 1505, 3489, 2053, 3490,
	3733, 692, 2025, 623, 1019, 3612, 3735, 2106, 1037, 693,
	2320, 3860, 3727, 925, 2302, 926, 3773, 918, 134, 2742,
	3763, 2741, 1687, 1229, 1704, 134, 3057, 3058, 1266, 731,
	2186, 2721, 1151, 3746, 3407, 2935, 71, 70, 134, 69,
	68, 134, 134, 221, 777, 220, 3659, 3785, 3528, 3833,
	3952, 757, 756, 755, 134, 754, 1670, 753, 3771, 752,
	3559, 3560, 2444, 2443, 3780, 2441, 2440, 2008, 2007, 3779,
	2073, 3776, 3134, 2817, 2812, 3802, 1934, 1932, 1475, 1151,
	2369, 2376, 1931, 3787, 3888, 3813, 3814, 1507, 3589, 2862,
	3827, 3481, 1880, 2365, 1951, 3834, 2833, 1948, 1947, 3533,
	3817, 3819, 3821, 3823, 2825, 3585, 3801, 3736, 3579, 3835,
	1979, 3810, 3796, 3692, 3544, 3391, 1505, 3816, 3392, 3398,
	2311, 1084, 1080, 1082, 1083, 1081, 3826, 2625, 3225, 2346,
	3094, 2285, 2284, 2282, 2281, 1376, 3840, 1507, 3842, 3772,
	3694, 1238, 1237, 1247, 1248, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1239, 3853, 3856, 3509, 3879, 2492, 2490, 1131,
	3238, 3234, 3887, 3868, 2118, 2132, 1505, 3870, 3872, 3533,
	2990, 3873, 3874, 2009, 2005, 2004, 3871, 2892, 2434, 3786,
	3666, 1885, 919, 2300, 3790, 3791, 41, 2956, 115, 2958,
	105, 175, 3903, 56, 3896, 174, 3897, 55, 3898, 113,
	3899, 172, 54, 3900, 100, 99, 112, 3913, 1825, 3915,
	3916, 170, 53, 1825, 3909, 3811, 3533, 3911, 205, 204,
	1151, 207, 3763, 3918, 2134, 196, 61, 187, 158, 206,
	203, 2543, 2544, 3742, 3743, 202, 1549, 201, 3847, 3717,
	3548, 3829, 3927, 188, 881, 44, 43, 3928, 3930, 3929,
	179, 176, 3933, 2758, 189, 3936, 3946, 3934, 3954, 3010,
	42, 3953, 106, 57, 40, 39, 38, 3940, 3941, 3942,
	3943, 34, 13, 132, 12, 3965, 35, 1151, 3958, 22,
	21, 1634, 20, 3032, 2183, 1751, 26, 3966, 119, 3802,
	3967, 3969, 32, 31, 127, 126, 192, 3975, 30, 125,
	3979, 124, 123, 122, 121, 120, 3976, 3564, 1238, 1237,
	1247, 1248, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1239,
	29, 19, 48, 3986, 47, 46, 9, 116, 3034, 111,
	109, 28, 3954, 3994, 110, 3953, 3993, 107, 103, 101,
	83, 3396, 82, 3979, 3995, 81, 96, 95, 94, 3999,
	93, 3920, 3921, 92, 91, 89, 90, 3925, 969, 2012,
	958, 1238, 1237, 1247, 1248, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1239, 140, 141, 80, 142, 143, 79, 78,
	77, 3408, 1238, 1237, 1247, 1248, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1239, 3399, 76, 98, 104, 102, 87,
	97, 88, 86, 85, 84, 3394, 75, 74, 73, 156,
	3416, 3417, 155, 154, 1670, 153, 3395, 152, 150, 151,
	149, 148, 147, 146, 145, 144, 2940, 2941, 49, 50,
	51, 955, 956, 134, 52, 166, 134, 134, 165, 134,
	167, 169, 998, 3187, 171, 157, 185, 194, 186, 117,
	168, 173, 1747, 3400, 163, 161, 164, 162, 160, 1744,
	66, 11, 114, 1746, 1743, 1745, 1749, 1750, 184, 178,
	177, 1748, 18, 25, 4, 67, 0, 0, 0, 1035,
	0, 0, 134, 0, 0, 1250, 0, 1254, 0, 0,
	1035, 1237, 1247, 1248, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1239, 0, 1251, 1253, 1249, 134, 1252, 1238, 1237,
	1247, 1248, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1239,
	0, 0, 0, 0, 0, 1000, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3415,
	0, 2355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 984, 0, 0, 190,
	0, 0, 0, 0, 0, 959, 3404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1256, 0, 0,
	128, 0, 0, 0, 183, 0, 129, 0, 3401, 3405,
	3403, 3402, 961, 0, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1754, 1755, 1756, 1757, 1758,
	1759, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3410, 3411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 983, 981, 3289,
	0, 0, 0, 0, 3128, 0, 3291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3418, 0, 0, 980,
	3140, 0, 0, 0, 0, 0, 0, 1980, 3397, 0,
	0, 954, 1941, 0, 3409, 0, 0, 0, 3306, 0,
	0, 0, 960, 993, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 1950, 0, 0, 989, 0, 0, 0,
	0, 0, 1984, 1985, 0, 0, 0, 0, 0, 0,
	138, 193, 0, 139, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 58, 1980, 0, 0, 0, 1949, 0,
	0, 196, 990, 994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 977, 3543, 975, 979, 997, 0, 0, 1983,
	976, 973, 972, 0, 978, 963, 964, 962, 965, 966,
	967, 968, 0, 995, 0, 996, 0, 2053, 0, 0,
	0, 0, 0, 0, 0, 0, 991, 992, 0, 131,
	45, 0, 0, 0, 3414, 0, 59, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1973, 135, 136, 0, 0, 137, 0,
	1825, 0, 0, 987, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 1825, 0, 0, 3454, 0, 0,
	3456, 0, 0, 0, 982, 0, 0, 0, 0, 0,
	0, 2462, 0, 0, 0, 0, 0, 3462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 1940, 1942, 1939, 0, 0,
	1936, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3285, 1967, 0, 0, 0,
	0, 0, 0, 0, 1952, 2012, 1935, 0, 0, 0,
	0, 0, 985, 0, 134, 0, 1955, 1989, 957, 953,
	1956, 1958, 1960, 0, 1962, 1963, 1964, 1968, 1969, 1970,
	1972, 1975, 1976, 1977, 0, 1980, 0, 0, 0, 0,
	1941, 1965, 1974, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 0, 0, 0, 0, 0,
	1983, 1950, 0, 0, 0, 0, 0, 1981, 0, 0,
	1984, 1985, 0, 1955, 1989, 0, 0, 1956, 1958, 1960,
	0, 1962, 1963, 1964, 1968, 1969, 1970, 1972, 1975, 1976,
	1977, 0, 0, 0, 1937, 1938, 1949, 0, 1965, 1974,
	1966, 0, 2053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 1981, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 1973, 1987, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 2053, 0, 0, 0,
	0, 0, 0, 0, 0, 3683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 134, 0,
	0, 0, 0, 0, 0, 1946, 1959, 0, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1940, 2783, 1939, 0, 0, 2782, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 1982, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1989, 0, 0, 1956, 1958,
	1960, 0, 1962, 1963, 1964, 1968, 1969, 1970, 1972, 1975,
	1976, 1977, 0, 0, 0, 0, 0, 0, 0, 1965,
	1974, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 3547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 1103,
	0, 2012, 2012, 2012, 2012, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 0,
	0, 0, 1937, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3597, 0,
	1978, 0, 0, 0, 3809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 134, 0,
	1987, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 3884, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 1111, 1115, 1117, 1119, 1121, 1122, 1124, 0,
	1129, 1125, 1126, 1127, 1128, 0, 1106, 1107, 1108, 1109,
	1086, 1087, 1112, 1946, 1089, 0, 1091, 1092, 1093, 1094,
	1090, 1095, 1096, 1097, 1098, 1099, 1102, 1104, 1100, 1101,
	1110, 0, 0, 0, 0, 0, 0, 0, 1114, 1116,
	1118, 1120, 1123, 0, 1088, 0, 0, 0, 1078, 0,
	0, 0, 3884, 0, 0, 1982, 0, 0, 1988, 0,
	0, 0, 0, 0, 1111, 1115, 1117, 1119, 1121, 1122,
	1124, 0, 1129, 1125, 1126, 1127, 1128, 1105, 1106, 1107,
	1108, 1109, 1086, 1087, 1112, 1103, 1089, 0, 1091, 1092,
	1093, 1094, 1090, 1095, 1096, 1097, 1098, 1099, 1102, 1104,
	1100, 1101, 1110, 3884, 704, 703, 710, 700, 0, 0,
	1114, 1116, 1118, 1120, 1123, 0, 707, 708, 0, 709,
	713, 0, 0, 694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 704, 703, 710, 700, 0,
	0, 1224, 1225, 1226, 1223, 0, 0, 707, 708, 1105,
	709, 713, 0, 0, 694, 0, 0, 0, 1035, 0,
	134, 0, 0, 3997, 718, 134, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 722, 0,
	0, 724, 0, 0, 0, 0, 723, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 722,
	0, 0, 724, 0, 0, 0, 0, 723, 2621, 2622,
	1751, 0, 0, 0, 0, 0, 0, 0, 1111, 1115,
	1117, 1119, 1121, 1122, 1124, 0, 1129, 1125, 1126, 1127,
	1128, 0, 1106, 1107, 1108, 1109, 1086, 1087, 1112, 0,
	1089, 0, 1091, 1092, 1093, 1094, 1090, 1095, 1096, 1097,
	1098, 1099, 1102, 1104, 1100, 1101, 1110, 0, 0, 0,
	0, 0, 0, 0, 1114, 1116, 1118, 1120, 1123, 0,
	704, 703, 710, 700, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 708, 0, 709, 713, 0, 0, 694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 1105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 697, 696, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 0,
	0, 0, 0, 0, 721, 695, 697, 696, 0, 0,
	0, 699, 1113, 0, 0, 689, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 721, 0, 1747, 0, 0,
	0, 0, 699, 0, 1744, 0, 0, 0, 1746, 1743,
	1745, 1749, 1750, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 705, 711, 0, 712, 714, 0,
	0, 715, 716, 717, 0, 0, 719, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 697, 696, 134, 701, 705, 711, 0, 712, 714,
	134, 702, 715, 716, 717, 0, 0, 719, 720, 0,
	0, 0, 0, 706, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 699, 0, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1754, 1755, 1756, 1757, 1758, 1759, 1752, 1753, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 698, 0, 0, 0, 0, 0, 0, 701,
	705, 711, 0, 712, 714, 0, 0, 715, 716, 717,
	0, 0, 719, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 793, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 511, 544, 533, 617, 499, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 326,
	0, 0, 356, 548, 530, 540, 531, 516, 517, 518,
	525, 336, 519, 520, 521, 491, 522, 492, 523, 524,
	784, 547, 498, 416, 370, 565, 564, 0, 0, 852,
	860, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 0, 738, 0, 0, 774, 829, 828, 761,
	771, 0, 0, 299, 219, 493, 613, 495, 494, 762,
	0, 763, 767, 770, 766, 764, 765, 0, 844, 0,
	0, 0, 0, 0, 0, 730, 742, 0, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 740, 0, 0, 0, 0, 794, 0,
	741, 0, 0, 789, 768, 772, 0, 0, 0, 0,
	289, 422, 439, 300, 412, 452, 305, 419, 295, 385,
	409, 0, 0, 291, 437, 418, 367, 346, 347, 290,
	0, 404, 324, 338, 321, 383, 769, 792, 796, 320,
	866, 790, 447, 293, 0, 446, 382, 433, 438, 368,
	362, 0, 292, 435, 366, 361, 350, 328, 867, 351,
	352, 342, 394, 360, 395, 343, 372, 371, 373, 0,
	0, 0, 0, 0, 475, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	787, 0, 610, 0, 449, 0, 0, 850, 0, 0,
	0, 421, 0, 0, 353, 0, 0, 0, 791, 0,
	407, 388, 863, 0, 134, 405, 358, 434, 396, 440,
	423, 448, 401, 397, 284, 424, 323, 369, 296, 298,
	318, 325, 327, 329, 330, 378, 379, 391, 411, 425,
	426, 427, 322, 306, 406, 307, 340, 308, 285, 314,
	312, 315, 413, 316, 287, 392, 431, 0, 335, 402,
	365, 288, 364, 393, 430, 429, 297, 456, 462, 463,
	552, 0, 468, 637, 638, 639, 477, 0, 398, 482,
	483, 484, 486, 487, 488, 489, 553, 570, 537, 507,
	470, 561, 504, 508, 509, 573, 1775, 1774, 1776, 461,
	354, 355, 0, 333, 281, 282, 632, 848, 384, 575,
	608, 609, 500, 0, 862, 843, 845, 846, 849, 853,
	854, 855, 856, 857, 859, 861, 865, 631, 0, 554,
	569, 635, 568, 628, 390, 0, 410, 566, 513, 0,
	558, 532, 0, 559, 528, 563, 0, 502, 0, 417,
	442, 454, 471, 474, 503, 588, 589, 590, 286, 473,
	592, 593, 594, 595, 596, 597, 598, 591, 864, 535,
	512, 538, 453, 515, 514, 0, 0, 549, 795, 550,
	551, 374, 375, 376, 377, 851, 576, 304, 472, 400,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 542, 539, 640, 0, 599, 600, 0, 0, 466,
	467, 332, 339, 485, 341, 303, 389, 334, 451, 348,
	0, 478, 543, 479, 602, 605, 603, 604, 381, 344,
	345, 414, 349, 359, 403, 450, 387, 408, 301, 441,
	415, 363, 529, 556, 873, 847, 872, 874, 875, 871,
	876, 877, 858, 751, 0, 802, 869, 868, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	584, 583, 582, 581, 580, 579, 578, 577, 0, 0,
	526, 428, 313, 275, 309, 310, 317, 629, 626, 432,
	630, 0, 283, 506, 357, 0, 399, 331, 571, 572,
	0, 0, 836, 809, 810, 811, 748, 812, 806, 807,
	749, 808, 837, 800, 833, 834, 776, 803, 813, 832,
	814, 835, 838, 839, 878, 879, 820, 804, 247, 880,
	817, 840, 831, 830, 815, 801, 841, 842, 783, 778,
	818, 819, 805, 824, 825, 826, 750, 797, 798, 799,
	821, 822, 779, 780, 781, 782, 0, 0, 0, 457,
	458, 459, 481, 0, 443, 505, 627, 0, 0, 0,
	0, 0, 0, 0, 555, 567, 601, 0, 611, 612,
	614, 616, 827, 618, 420, 0, 620, 621, 622, 619,
	823, 793, 633, 496, 497, 634, 607, 0, 743, 0,
	386, 0, 511, 544, 533, 617, 499, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 326, 1826, 0,
	356, 548, 530, 540, 531, 516, 517, 518, 525, 336,
	519, 520, 521, 491, 522, 492, 523, 524, 784, 547,
	498, 416, 370, 565, 564, 0, 0, 852, 860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 738, 0, 0, 774, 829, 828, 761, 771, 0,
	0, 299, 219, 493, 613, 495, 494, 762, 0, 763,
	767, 770, 766, 764, 765, 0, 844, 0, 0, 0,
	0, 0, 0, 730, 742, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	739, 740, 0, 0, 0, 0, 794, 0, 741, 0,
	0, 2038, 768, 772, 0, 0, 0, 0, 289, 422,
	439, 300, 412, 452, 305, 419, 295, 385, 409, 0,
	0, 291, 437, 418, 367, 346, 347, 290, 0, 404,
	324, 338, 321, 383, 769, 792, 796, 320, 866, 790,
	447, 293, 0, 446, 382, 433, 438, 368, 362, 0,
	292, 435, 366, 361, 350, 328, 867, 351, 352, 342,
	394, 360, 395, 343, 372, 371, 373, 0, 0, 0,
	0, 0, 475, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 787, 0,
	610, 0, 449, 0, 0, 850, 0, 0, 0, 421,
	0, 0, 353, 0, 0, 0, 791, 0, 407, 388,
	863, 0, 0, 405, 358, 434, 396, 440, 423, 448,
	401, 397, 284, 424, 323, 369, 296, 298, 318, 325,
	327, 329, 330, 378, 379, 391, 411, 425, 426, 427,
	322, 306, 406, 307, 340, 308, 285, 314, 312, 315,
	413, 316, 287, 392, 431, 0, 335, 402, 365, 288,
	364, 393, 430, 429, 297, 456, 462, 463, 552, 0,
	468, 637, 638, 639, 477, 0, 398, 482, 483, 484,
	486, 487, 488, 489, 553, 570, 537, 507, 470, 561,
	504, 508, 509, 573, 0, 0, 0, 461, 354, 355,
	0, 333, 281, 282, 632, 848, 384, 575, 608, 609,
	500, 0, 862, 843, 845, 846, 849, 853, 854, 855,
	856, 857, 859, 861, 865, 631, 0, 554, 569, 635,
	568, 628, 390, 0, 410, 566, 513, 0, 558, 532,
	0, 559, 528, 563, 0, 502, 0, 417, 442, 454,
	471, 474, 503, 588, 589, 590, 286, 473, 592, 593,
	594, 595, 596, 597, 598, 591, 864, 535, 512, 538,
	453, 515, 514, 0, 0, 549, 795, 550, 551, 374,
	375, 376, 377, 851, 576, 304, 472, 400, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 542,
	539, 640, 0, 599, 600, 0, 0, 466, 467, 332,
	339, 485, 341, 303, 389, 334, 451, 348, 0, 478,
	543, 479, 602, 605, 603, 604, 381, 344, 345, 414,
	349, 359, 403, 450, 387, 408, 301, 441, 415, 363,
	529, 556, 873, 847, 872, 874, 875, 871, 876, 877,
	858, 751, 0, 802, 869, 868, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 583,
	582, 581, 580, 579, 578, 577, 0, 0, 526, 428,
	313, 275, 309, 310, 317, 629, 626, 432, 630, 0,
	283, 506, 357, 0, 399, 331, 571, 572, 0, 0,
	836, 809, 810, 811, 748, 812, 806, 807, 749, 808,
	837, 800, 833, 834, 776, 803, 813, 832, 814, 835,
	838, 839, 878, 879, 820, 804, 247, 880, 817, 840,
	831, 830, 815, 801, 841, 842, 783, 778, 818, 819,
	805, 824, 825, 826, 750, 797, 798, 799, 821, 822,
	779, 780, 781, 782, 0, 0, 0, 457, 458, 459,
	481, 0, 443, 505, 627, 0, 0, 0, 0, 0,
	0, 0, 555, 567, 601, 0, 611, 612, 614, 616,
	827, 618, 420, 0, 620, 621, 622, 619, 823, 0,
	633, 496, 497, 634, 607, 0, 743, 196, 793, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 511,
	544, 533, 617, 499, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 326, 0, 0, 356, 548, 530,
	540, 531, 516, 517, 518, 525, 336, 519, 520, 521,
	491, 522, 492, 523, 524, 1259, 547, 498, 416, 370,
	565, 564, 0, 0, 852, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 774, 829, 828, 761, 771, 0, 0, 299, 219,
	493, 613, 495, 494, 762, 0, 763, 767, 770, 766,
	764, 765, 0, 844, 0, 0, 0, 0, 0, 0,
	730, 742, 0, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 739, 740, 0,
	0, 0, 0, 794, 0, 741, 0, 0, 789, 768,
	772, 0, 0, 0, 0, 289, 422, 439, 300, 412,
	452, 305, 419, 295, 385, 409, 0, 0, 291, 437,
	418, 367, 346, 347, 290, 0, 404, 324, 338, 321,
	383, 769, 792, 796, 320, 866, 790, 447, 293, 0,
	446, 382, 433, 438, 368, 362, 0, 292, 435, 366,
	361, 350, 328, 867, 351, 352, 342, 394, 360, 395,
	343, 372, 371, 373, 0, 0, 0, 0, 0, 475,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 787, 0, 610, 0, 449,
	0, 0, 850, 0, 0, 0, 421, 0, 0, 353,
	0, 0, 0, 791, 0, 407, 388, 863, 0, 0,
	405, 358, 434, 396, 440, 423, 448, 401, 397, 284,
	424, 323, 369, 296, 298, 318, 325, 327, 329, 330,
	378, 379, 391, 411, 425, 426, 427, 322, 306, 406,
	307, 340, 308, 285, 314, 312, 315, 413, 316, 287,
	392, 431, 0, 335, 402, 365, 288, 364, 393, 430,
	429, 297, 456, 462, 463, 552, 0, 468, 637, 638,
	639, 477, 0, 398, 482, 483, 484, 486, 487, 488,
	489, 553, 570, 537, 507, 470, 561, 504, 508, 509,
	573, 0, 0, 0, 461, 354, 355, 0, 333, 281,
	282, 632, 848, 384, 575, 608, 609, 500, 0, 862,
	843, 845, 846, 849, 853, 854, 855, 856, 857, 859,
	861, 865, 631, 0, 554, 569, 635, 568, 628, 390,
	0, 410, 566, 513, 0, 558, 532, 0, 559, 528,
	563, 0, 502, 0, 417, 442, 454, 471, 474, 503,
	588, 589, 590, 286, 473, 592, 593, 594, 595, 596,
	597, 598, 591, 864, 535, 512, 538, 453, 515, 514,
	0, 0, 549, 795, 550, 551, 374, 375, 376, 377,
	851, 576, 304, 472, 400, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 542, 539, 640, 0,
	599, 600, 0, 0, 466, 467, 332, 339, 485, 341,
	303, 389, 334, 451, 348, 0, 478, 543, 479, 602,
	605, 603, 604, 381, 344, 345, 414, 349, 359, 403,
	450, 387, 408, 301, 441, 415, 363, 529, 556, 873,
	847, 872, 874, 875, 871, 876, 877, 858, 751, 0,
	802, 869, 868, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 583, 582, 581, 580,
	579, 578, 577, 0, 0, 526, 428, 313, 275, 309,
	310, 317, 629, 626, 432, 630, 0, 283, 506, 357,
	159, 399, 331, 571, 572, 0, 0, 836, 809, 810,
	811, 748, 812, 806, 807, 749, 808, 837, 800, 833,
	834, 776, 803, 813, 832, 814, 835, 838, 839, 878,
	879, 820, 804, 247, 880, 817, 840, 831, 830, 815,
	801, 841, 842, 783, 778, 818, 819, 805, 824, 825,
	826, 750, 797, 798, 799, 821, 822, 779, 780, 781,
	782, 0, 0, 0, 457, 458, 459, 481, 0, 443,
	505, 627, 0, 0, 0, 0, 0, 0, 0, 555,
	567, 601, 0, 611, 612, 614, 616, 827, 618, 420,
	0, 620, 621, 622, 619, 823, 793, 633, 496, 497,
	634, 607, 0, 743, 0, 386, 0, 511, 544, 533,
	617, 499, 0, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 326, 3996, 0, 356, 548, 530, 540, 531,
	516, 517, 518, 525, 336, 519, 520, 521, 491, 522,
	492, 523, 524, 784, 547, 498, 416, 370, 565, 564,
	0, 0, 852, 860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 774,
	829, 828, 761, 771, 0, 0, 299, 219, 493, 613,
	495, 494, 762, 0, 763, 767, 770, 766, 764, 765,
	0, 844, 0, 0, 0, 0, 0, 0, 730, 742,
	0, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 739, 740, 0, 0, 0,
	0, 794, 0, 741, 0, 0, 789, 768, 772, 0,
	0, 0, 0, 289, 422, 439, 300, 412, 452, 305,
	419, 295, 385, 409, 0, 0, 291, 437, 418, 367,
	346, 347, 290, 0, 404, 324, 338, 321, 383, 769,
	792, 796, 320, 866, 790, 447, 293, 0, 446, 382,
	433, 438, 368, 362, 0, 292, 435, 366, 361, 350,
	328, 867, 351, 352, 342, 394, 360, 395, 343, 372,
	371, 373, 0, 0, 0, 0, 0, 475, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 787, 0, 610, 0, 449, 0, 0,
	850, 0, 0, 0, 421, 0, 0, 353, 0, 0,
	0, 791, 0, 407, 388, 863, 0, 0, 405, 358,
	434, 396, 440, 423, 448, 401, 397, 284, 424, 323,
	369, 296, 298, 318, 325, 327, 329, 330, 378, 379,
	391, 411, 425, 426, 427, 322, 306, 406, 307, 340,
	308, 285, 314, 312, 315, 413, 316, 287, 392, 431,
	0, 335, 402, 365, 288, 364, 393, 430, 429, 297,
	456, 462, 463, 552, 0, 468, 637, 638, 639, 477,
	0, 398, 482, 483, 484, 486, 487, 488, 489, 553,
	570, 537, 507, 470, 561, 504, 508, 509, 573, 0,
	0, 0, 461, 354, 355, 0, 333, 281, 282, 632,
	848, 384, 575, 608, 609, 500, 0, 862, 843, 845,
	846, 849, 853, 854, 855, 856, 857, 859, 861, 865,
	631, 0, 554, 569, 635, 568, 628, 390, 0, 410,
	566, 513, 0, 558, 532, 0, 559, 528, 563, 0,
	502, 0, 417, 442, 454, 471, 474, 503, 588, 589,
	590, 286, 473, 592, 593, 594, 595, 596, 597, 598,
	591, 864, 535, 512, 538, 453, 515, 514, 0, 0,
	549, 795, 550, 551, 374, 375, 376, 377, 851, 576,
	304, 472, 400, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 542, 539, 640, 0, 599, 600,
	0, 0, 466, 467, 332, 339, 485, 341, 303, 389,
	334, 451, 348, 0, 478, 543, 479, 602, 605, 603,
	604, 381, 344, 345, 414, 349, 359, 403, 450, 387,
	408, 301, 441, 415, 363, 529, 556, 873, 847, 872,
	874, 875, 871, 876, 877, 858, 751, 0, 802, 869,
	868, 870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 583, 582, 581, 580, 579, 578,
	577, 0, 0, 526, 428, 313, 275, 309, 310, 317,
	629, 626, 432, 630, 0, 283, 506, 357, 0, 399,
	331, 571, 572, 0, 0, 836, 809, 810, 811, 748,
	812, 806, 807, 749, 808, 837, 800, 833, 834, 776,
	803, 813, 832, 814, 835, 838, 839, 878, 879, 820,
	804, 247, 880, 817, 840, 831, 830, 815, 801, 841,
	842, 783, 778, 818, 819, 805, 824, 825, 826, 750,
	797, 798, 799, 821, 822, 779, 780, 781, 782, 0,
	0, 0, 457, 458, 459, 481, 0, 443, 505, 627,
	0, 0, 0, 0, 0, 0, 0, 555, 567, 601,
	0, 611, 612, 614, 616, 827, 618, 420, 0, 620,
	621, 622, 619, 823, 793, 633, 496, 497, 634, 607,
	0, 743, 0, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 784, 547, 498, 416, 370, 565, 564, 0, 0,
	852, 860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 774, 829, 828,
	761, 771, 0, 0, 299, 219, 493, 613, 495, 494,
	762, 0, 763, 767, 770, 766, 764, 765, 0, 844,
	0, 0, 0, 0, 0, 0, 730, 742, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 740, 0, 0, 0, 0, 794,
	0, 741, 0, 0, 789, 768, 772, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 769, 792, 796,
	320, 866, 790, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 867,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 787, 0, 610, 0, 449, 0, 0, 850, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 791,
	0, 407, 388, 863, 3885, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 848, 384,
	575, 608, 609, 500, 0, 862, 843, 845, 846, 849,
	853, 854, 855, 856, 857, 859, 861, 865, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 864,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 795,
	550, 551, 374, 375, 376, 377, 851, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 873, 847, 872, 874, 875,
	871, 876, 877, 858, 751, 0, 802, 869, 868, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 836, 809, 810, 811, 748, 812, 806,
	807, 749, 808, 837, 800, 833, 834, 776, 803, 813,
	832, 814, 835, 838, 839, 878, 879, 820, 804, 247,
	880, 817, 840, 831, 830, 815, 801, 841, 842, 783,
	778, 818, 819, 805, 824, 825, 826, 750, 797, 798,
	799, 821, 822, 779, 780, 781, 782, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 827, 618, 420, 0, 620, 621, 622,
	619, 823, 793, 633, 496, 497, 634, 607, 0, 743,
	0, 386, 0, 511, 544, 533, 617, 499, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 326, 1826,
	0, 356, 548, 530, 540, 531, 516, 517, 518, 525,
	336, 519, 520, 521, 491, 522, 492, 523, 524, 784,
	547, 498, 416, 370, 565, 564, 0, 0, 852, 860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 774, 829, 828, 761, 771,
	0, 0, 299, 219, 493, 613, 495, 494, 762, 0,
	763, 767, 770, 766, 764, 765, 0, 844, 0, 0,
	0, 0, 0, 0, 730, 742, 0, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 740, 0, 0, 0, 0, 794, 0, 741,
	0, 0, 789, 768, 772, 0, 0, 0, 0, 289,
	422, 439, 300, 412, 452, 305, 419, 295, 385, 409,
	0, 0, 291, 437, 418, 367, 346, 347, 290, 0,
	404, 324, 338, 321, 383, 769, 792, 796, 320, 866,
	790, 447, 293, 0, 446, 382, 433, 438, 368, 362,
	0, 292, 435, 366, 361, 350, 328, 867, 351, 352,
	342, 394, 360, 395, 343, 372, 371, 373, 0, 0,
	0, 0, 0, 475, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 787,
	0, 610, 0, 449, 0, 0, 850, 0, 0, 0,
	421, 0, 0, 353, 0, 0, 0, 791, 0, 407,
	388, 863, 0, 0, 405, 358, 434, 396, 440, 423,
	448, 401, 397, 284, 424, 323, 369, 296, 298, 318,
	325, 327, 329, 330, 378, 379, 391, 411, 425, 426,
	427, 322, 306, 406, 307, 340, 308, 285, 314, 312,
	315, 413, 316, 287, 392, 431, 0, 335, 402, 365,
	288, 364, 393, 430, 429, 297, 456, 462, 463, 552,
	0, 468, 637, 638, 639, 477, 0, 398, 482, 483,
	484, 486, 487, 488, 489, 553, 570, 537, 507, 470,
	561, 504, 508, 509, 573, 0, 0, 0, 461, 354,
	355, 0, 333, 281, 282, 632, 848, 384, 575, 608,
	609, 500, 0, 862, 843, 845, 846, 849, 853, 854,
	855, 856, 857, 859, 861, 865, 631, 0, 554, 569,
	635, 568, 628, 390, 0, 410, 566, 513, 0, 558,
	532, 0, 559, 528, 563, 0, 502, 0, 417, 442,
	454, 471, 474, 503, 588, 589, 590, 286, 473, 592,
	593, 594, 595, 596, 597, 598, 591, 864, 535, 512,
	538, 453, 515, 514, 0, 0, 549, 795, 550, 551,
	374, 375, 376, 377, 851, 576, 304, 472, 400, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 539, 640, 0, 599, 600, 0, 0, 466, 467,
	332, 339, 485, 341, 303, 389, 334, 451, 348, 0,
	478, 543, 479, 602, 605, 603, 604, 381, 344, 345,
	414, 349, 359, 403, 450, 387, 408, 301, 441, 415,
	363, 529, 556, 873, 847, 872, 874, 875, 871, 876,
	877, 858, 751, 0, 802, 869, 868, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	583, 582, 581, 580, 579, 578, 577, 0, 0, 526,
	428, 313, 275, 309, 310, 317, 629, 626, 432, 630,
	0, 283, 506, 357, 0, 399, 331, 571, 572, 0,
	0, 836, 809, 810, 811, 748, 812, 806, 807, 749,
	808, 837, 800, 833, 834, 776, 803, 813, 832, 814,
	835, 838, 839, 878, 879, 820, 804, 247, 880, 817,
	840, 831, 830, 815, 801, 841, 842, 783, 778, 818,
	819, 805, 824, 825, 826, 750, 797, 798, 799, 821,
	822, 779, 780, 781, 782, 0, 0, 0, 457, 458,
	459, 481, 0, 443, 505, 627, 0, 0, 0, 0,
	0, 0, 0, 555, 567, 601, 0, 611, 612, 614,
	616, 827, 618, 420, 0, 620, 621, 622, 619, 823,
	793, 633, 496, 497, 634, 607, 0, 743, 0, 386,
	0, 511, 544, 533, 617, 499, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 326, 0, 0, 356,
	548, 530, 540, 531, 516, 517, 518, 525, 336, 519,
	520, 521, 491, 522, 492, 523, 524, 784, 547, 498,
	416, 370, 565, 564, 0, 0, 852, 860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 774, 829, 828, 761, 771, 0, 0,
	299, 219, 493, 613, 495, 494, 762, 0, 763, 767,
	770, 766, 764, 765, 0, 844, 0, 0, 0, 0,
	0, 0, 730, 742, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 739,
	740, 1544, 0, 0, 0, 794, 0, 741, 0, 0,
	789, 768, 772, 0, 0, 0, 0, 289, 422, 439,
	300, 412, 452, 305, 419, 295, 385, 409, 0, 0,
	291, 437, 418, 367, 346, 347, 290, 0, 404, 324,
	338, 321, 383, 769, 792, 796, 320, 866, 790, 447,
	293, 0, 446, 382, 433, 438, 368, 362, 0, 292,
	435, 366, 361, 350, 328, 867, 351, 352, 342, 394,
	360, 395, 343, 372, 371, 373, 0, 0, 0, 0,
	0, 475, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 787, 0, 610,
	0, 449, 0, 0, 850, 0, 0, 0, 421, 0,
	0, 353, 0, 0, 0, 791, 0, 407, 388, 863,
	0, 0, 405, 358, 434, 396, 440, 423, 448, 401,
	397, 284, 424, 323, 369, 296, 298, 318, 325, 327,
	329, 330, 378, 379, 391, 411, 425, 426, 427, 322,
	306, 406, 307, 340, 308, 285, 314, 312, 315, 413,
	316, 287, 392, 431, 0, 335, 402, 365, 288, 364,
	393, 430, 429, 297, 456, 462, 463, 552, 0, 468,
	637, 638, 639, 477, 0, 398, 482, 483, 484, 486,
	487, 488, 489, 553, 570, 537, 507, 470, 561, 504,
	508, 509, 573, 0, 0, 0, 461, 354, 355, 0,
	333, 281, 282, 632, 848, 384, 575, 608, 609, 500,
	0, 862, 843, 845, 846, 849, 853, 854, 855, 856,
	857, 859, 861, 865, 631, 0, 554, 569, 635, 568,
	628, 390, 0, 410, 566, 513, 0, 558, 532, 0,
	559, 528, 563, 0, 502, 0, 417, 442, 454, 471,
	474, 503, 588, 589, 590, 286, 473, 592, 593, 594,
	595, 596, 597, 598, 591, 864, 535, 512, 538, 453,
	515, 514, 0, 0, 549, 795, 550, 551, 374, 375,
	376, 377, 851, 576, 304, 472, 400, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 542, 539,
	640, 0, 599, 600, 0, 0, 466, 467, 332, 339,
	485, 341, 303, 389, 334, 451, 348, 0, 478, 543,
	479, 602, 605, 603, 604, 381, 344, 345, 414, 349,
	359, 403, 450, 387, 408, 301, 441, 415, 363, 529,
	556, 873, 847, 872, 874, 875, 871, 876, 877, 858,
	751, 0, 802, 869, 868, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 583, 582,
	581, 580, 579, 578, 577, 0, 0, 526, 428, 313,
	275, 309, 310, 317, 629, 626, 432, 630, 0, 283,
	506, 357, 0, 399, 331, 571, 572, 0, 0, 836,
	809, 810, 811, 748, 812, 806, 807, 749, 808, 837,
	800, 833, 834, 776, 803, 813, 832, 814, 835, 838,
	839, 878, 879, 820, 804, 247, 880, 817, 840, 831,
	830, 815, 801, 841, 842, 783, 778, 818, 819, 805,
	824, 825, 826, 750, 797, 798, 799, 821, 822, 779,
	780, 781, 782, 0, 0, 0, 457, 458, 459, 481,
	0, 443, 505, 627, 0, 0, 0, 0, 0, 0,
	0, 555, 567, 601, 0, 611, 612, 614, 616, 827,
	618, 420, 0, 620, 621, 622, 619, 823, 0, 633,
	496, 497, 634, 607, 793, 743, 0, 2207, 0, 0,
	0, 0, 0, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 784, 547, 498, 416, 370, 565, 564, 0, 0,
	852, 860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 774, 829, 828,
	761, 771, 0, 0, 299, 219, 493, 613, 495, 494,
	762, 0, 763, 767, 770, 766, 764, 765, 0, 844,
	0, 0, 0, 0, 0, 0, 730, 742, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 740, 0, 0, 0, 0, 794,
	0, 741, 0, 0, 789, 768, 772, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 769, 792, 796,
	320, 866, 790, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 867,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 787, 0, 610, 0, 449, 0, 0, 850, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 791,
	0, 407, 388, 863, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 848, 384,
	575, 608, 609, 500, 0, 862, 843, 845, 846, 849,
	853, 854, 855, 856, 857, 859, 861, 865, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 864,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 795,
	550, 551, 374, 375, 376, 377, 851, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 873, 847, 872, 874, 875,
	871, 876, 877, 858, 751, 0, 802, 869, 868, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 836, 809, 810, 811, 748, 812, 806,
	807, 749, 808, 837, 800, 833, 834, 776, 803, 813,
	832, 814, 835, 838, 839, 878, 879, 820, 804, 247,
	880, 817, 840, 831, 830, 815, 801, 841, 842, 783,
	778, 818, 819, 805, 824, 825, 826, 750, 797, 798,
	799, 821, 822, 779, 780, 781, 782, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 827, 618, 420, 0, 620, 621, 622,
	619, 823, 793, 633, 496, 497, 634, 607, 0, 743,
	0, 386, 0, 511, 544, 533, 617, 499, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 326, 0,
	0, 356, 548, 530, 540, 531, 516, 517, 518, 525,
	336, 519, 520, 521, 491, 522, 492, 523, 524, 784,
	547, 498, 416, 370, 565, 564, 0, 0, 852, 860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 774, 829, 828, 761, 771,
	0, 0, 299, 219, 493, 613, 495, 494, 762, 0,
	763, 767, 770, 766, 764, 765, 0, 844, 0, 0,
	0, 0, 0, 0, 730, 742, 0, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 740, 1819, 0, 0, 0, 794, 0, 741,
	0, 0, 789, 768, 772, 0, 0, 0, 0, 289,
	422, 439, 300, 412, 452, 305, 419, 295, 385, 409,
	0, 0, 291, 437, 418, 367, 346, 347, 290, 0,
	404, 324, 338, 321, 383, 769, 792, 796, 320, 866,
	790, 447, 293, 0, 446, 382, 433, 438, 368, 362,
	0, 292, 435, 366, 361, 350, 328, 867, 351, 352,
	342, 394, 360, 395, 343, 372, 371, 373, 0, 0,
	0, 0, 0, 475, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 787,
	0, 610, 0, 449, 0, 0, 850, 0, 0, 0,
	421, 0, 0, 353, 0, 0, 0, 791, 0, 407,
	388, 863, 0, 0, 405, 358, 434, 396, 440, 423,
	448, 401, 397, 284, 424, 323, 369, 296, 298, 318,
	325, 327, 329, 330, 378, 379, 391, 411, 425, 426,
	427, 322, 306, 406, 307, 340, 308, 285, 314, 312,
	315, 413, 316, 287, 392, 431, 0, 335, 402, 365,
	288, 364, 393, 430, 429, 297, 456, 462, 463, 552,
	0, 468, 637, 638, 639, 477, 0, 398, 482, 483,
	484, 486, 487, 488, 489, 553, 570, 537, 507, 470,
	561, 504, 508, 509, 573, 0, 0, 0, 461, 354,
	355, 0, 333, 281, 282, 632, 848, 384, 575, 608,
	609, 500, 0, 862, 843, 845, 846, 849, 853, 854,
	855, 856, 857, 859, 861, 865, 631, 0, 554, 569,
	635, 568, 628, 390, 0, 410, 566, 513, 0, 558,
	532, 0, 559, 528, 563, 0, 502, 0, 417, 442,
	454, 471, 474, 503, 588, 589, 590, 286, 473, 592,
	593, 594, 595, 596, 597, 598, 591, 864, 535, 512,
	538, 453, 515, 514, 0, 0, 549, 795, 550, 551,
	374, 375, 376, 377, 851, 576, 304, 472, 400, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 539, 640, 0, 599, 600, 0, 0, 466, 467,
	332, 339, 485, 341, 303, 389, 334, 451, 348, 0,
	478, 543, 479, 602, 605, 603, 604, 381, 344, 345,
	414, 349, 359, 403, 450, 387, 408, 301, 441, 415,
	363, 529, 556, 873, 847, 872, 874, 875, 871, 876,
	877, 858, 751, 0, 802, 869, 868, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	583, 582, 581, 580, 579, 578, 577, 0, 0, 526,
	428, 313, 275, 309, 310, 317, 629, 626, 432, 630,
	0, 283, 506, 357, 0, 399, 331, 571, 572, 0,
	0, 836, 809, 810, 811, 748, 812, 806, 807, 749,
	808, 837, 800, 833, 834, 776, 803, 813, 832, 814,
	835, 838, 839, 878, 879, 820, 804, 247, 880, 817,
	840, 831, 830, 815, 801, 841, 842, 783, 778, 818,
	819, 805, 824, 825, 826, 750, 797, 798, 799, 821,
	822, 779, 780, 781, 782, 0, 0, 0, 457, 458,
	459, 481, 0, 443, 505, 627, 0, 0, 0, 0,
	0, 0, 0, 555, 567, 601, 0, 611, 612, 614,
	616, 827, 618, 420, 0, 620, 621, 622, 619, 823,
	793, 633, 496, 497, 634, 607, 0, 743, 0, 386,
	0, 511, 544, 533, 617, 499, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 326, 0, 0, 356,
	548, 530, 540, 531, 516, 517, 518, 525, 336, 519,
	520, 521, 491, 522, 492, 523, 524, 784, 547, 498,
	416, 370, 565, 564, 0, 0, 852, 860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 774, 829, 828, 761, 771, 0, 0,
	299, 219, 493, 613, 495, 494, 762, 0, 763, 767,
	770, 766, 764, 765, 0, 844, 0, 0, 0, 0,
	0, 0, 730, 742, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 739,
	740, 0, 0, 0, 0, 794, 0, 741, 0, 0,
	789, 768, 772, 0, 0, 0, 0, 289, 422, 439,
	300, 412, 452, 305, 419, 295, 385, 409, 0, 0,
	291, 437, 418, 367, 346, 347, 290, 0, 404, 324,
	338, 321, 383, 769, 792, 796, 320, 866, 790, 447,
	293, 0, 446, 382, 433, 438, 368, 362, 0, 292,
	435, 366, 361, 350, 328, 867, 351, 352, 342, 394,
	360, 395, 343, 372, 371, 373, 0, 0, 0, 0,
	0, 475, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 787, 0, 610,
	0, 449, 0, 0, 850, 0, 0, 0, 421, 0,
	0, 353, 0, 0, 0, 791, 0, 407, 388, 863,
	0, 0, 405, 358, 434, 396, 440, 423, 448, 401,
	397, 284, 424, 323, 369, 296, 298, 318, 325, 327,
	329, 330, 378, 379, 391, 411, 425, 426, 427, 322,
	306, 406, 307, 340, 308, 285, 314, 312, 315, 413,
	316, 287, 392, 431, 0, 335, 402, 365, 288, 364,
	393, 430, 429, 297, 456, 462, 463, 552, 0, 468,
	637, 638, 639, 477, 0, 398, 482, 483, 484, 486,
	487, 488, 489, 553, 570, 537, 507, 470, 561, 504,
	508, 509, 573, 0, 0, 0, 461, 354, 355, 0,
	333, 281, 282, 632, 848, 384, 575, 608, 609, 500,
	0, 862, 843, 845, 846, 849, 853, 854, 855, 856,
	857, 859, 861, 865, 631, 0, 554, 569, 635, 568,
	628, 390, 0, 410, 566, 513, 0, 558, 532, 0,
	559, 528, 563, 0, 502, 0, 417, 442, 454, 471,
	474, 503, 588, 589, 590, 286, 473, 592, 593, 594,
	595, 596, 597, 598, 591, 864, 535, 512, 538, 453,
	515, 514, 0, 0, 549, 795, 550, 551, 374, 375,
	376, 377, 851, 576, 304, 472, 400, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 542, 539,
	640, 0, 599, 600, 0, 0, 466, 467, 332, 339,
	485, 341, 303, 389, 334, 451, 348, 0, 478, 543,
	479, 602, 605, 603, 604, 381, 344, 345, 414, 349,
	359, 403, 450, 387, 408, 301, 441, 415, 363, 529,
	556, 873, 847, 872, 874, 875, 871, 876, 877, 858,
	751, 0, 802, 869, 868, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 583, 582,
	581, 580, 579, 578, 577, 0, 0, 526, 428, 313,
	275, 309, 310, 317, 629, 626, 432, 630, 0, 283,
	506, 357, 0, 399, 331, 571, 572, 0, 0, 836,
	809, 810, 811, 748, 812, 806, 807, 749, 808, 837,
	800, 833, 834, 776, 803, 813, 832, 814, 835, 838,
	839, 878, 879, 820, 804, 247, 880, 817, 840, 831,
	830, 815, 801, 841, 842, 783, 778, 818, 819, 805,
	824, 825, 826, 750, 797, 798, 799, 821, 822, 779,
	780, 781, 782, 0, 0, 0, 457, 458, 459, 481,
	0, 443, 505, 627, 0, 0, 0, 0, 0, 0,
	0, 555, 567, 601, 0, 611, 612, 614, 616, 827,
	618, 420, 0, 620, 621, 622, 619, 823, 793, 633,
	496, 497, 634, 607, 0, 743, 0, 386, 0, 511,
	544, 533, 617, 499, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 326, 0, 0, 356, 548, 530,
	540, 531, 516, 517, 518, 525, 336, 519, 520, 521,
	491, 522, 492, 523, 524, 784, 547, 498, 416, 370,
	565, 564, 0, 0, 852, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 774, 829, 828, 761, 771, 0, 0, 299, 219,
	493, 613, 495, 494, 762, 0, 763, 767, 770, 766,
	764, 765, 0, 844, 0, 0, 0, 0, 0, 0,
	730, 742, 0, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 739, 740, 0,
	0, 0, 0, 794, 0, 741, 0, 0, 789, 768,
	772, 0, 0, 0, 0, 289, 422, 439, 300, 412,
	452, 305, 419, 295, 385, 409, 0, 0, 291, 437,
	418, 367, 346, 347, 290, 0, 404, 324, 338, 321,
	383, 769, 792, 796, 320, 866, 790, 447, 293, 0,
	446, 382, 433, 438, 368, 362, 0, 292, 435, 366,
	361, 350, 328, 867, 351, 352, 342, 394, 360, 395,
	343, 372, 371, 373, 0, 0, 0, 0, 0, 475,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 787, 0, 610, 0, 449,
	0, 0, 850, 0, 0, 0, 421, 0, 0, 353,
	0, 0, 0, 791, 0, 407, 388, 863, 0, 0,
	405, 358, 434, 396, 440, 423, 448, 401, 397, 284,
	424, 323, 369, 296, 298, 318, 325, 327, 329, 330,
	378, 379, 391, 411, 425, 426, 427, 322, 306, 406,
	307, 340, 308, 285, 314, 312, 315, 413, 316, 287,
	392, 431, 0, 335, 402, 365, 288, 364, 393, 430,
	429, 297, 456, 462, 463, 552, 0, 468, 637, 638,
	639, 477, 0, 398, 482, 483, 484, 486, 487, 488,
	489, 553, 570, 537, 507, 470, 561, 504, 508, 509,
	573, 0, 0, 0, 461, 354, 355, 0, 333, 281,
	282, 632, 848, 384, 575, 608, 609, 500, 0, 862,
	843, 845, 846, 849, 853, 854, 855, 856, 857, 859,
	861, 865, 631, 0, 554, 569, 635, 568, 628, 390,
	0, 410, 566, 513, 0, 558, 532, 0, 559, 528,
	563, 0, 502, 0, 417, 442, 454, 471, 474, 503,
	588, 589, 590, 286, 473, 592, 593, 594, 595, 596,
	597, 598, 591, 864, 535, 512, 538, 453, 515, 514,
	0, 0, 549, 795, 550, 551, 374, 375, 376, 377,
	851, 576, 304, 472, 400, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 542, 539, 640, 0,
	599, 600, 0, 0, 466, 467, 332, 339, 485, 341,
	303, 389, 334, 451, 348, 0, 478, 543, 479, 602,
	605, 603, 604, 381, 344, 345, 414, 349, 359, 403,
	450, 387, 408, 301, 441, 415, 363, 529, 556, 873,
	847, 872, 874, 875, 871, 876, 877, 858, 751, 0,
	802, 869, 868, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 583, 582, 581, 580,
	579, 578, 577, 0, 0, 526, 428, 313, 275, 309,
	310, 317, 629, 626, 432, 630, 0, 283, 506, 357,
	0, 399, 331, 571, 572, 0, 0, 836, 809, 810,
	811, 748, 812, 806, 807, 749, 808, 837, 800, 833,
	834, 776, 803, 813, 832, 814, 835, 838, 839, 878,
	879, 820, 804, 247, 880, 817, 840, 831, 830, 815,
	801, 841, 842, 783, 778, 818, 819, 805, 824, 825,
	826, 750, 797, 798, 799, 821, 822, 779, 780, 781,
	782, 0, 0, 0, 457, 458, 459, 481, 0, 443,
	505, 627, 0, 0, 0, 0, 0, 0, 0, 555,
	567, 601, 0, 611, 612, 614, 616, 827, 618, 420,
	0, 3464, 621, 3465, 3466, 823, 793, 633, 496, 497,
	634, 607, 0, 743, 0, 386, 0, 511, 544, 533,
	617, 499, 0, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 326, 0, 0, 356, 548, 530, 540, 531,
	516, 517, 518, 525, 336, 519, 520, 521, 491, 522,
	492, 523, 524, 784, 547, 498, 416, 370, 565, 564,
	0, 0, 852, 860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 774,
	829, 828, 761, 771, 0, 0, 299, 219, 493, 613,
	495, 494, 2674, 0, 2675, 767, 770, 766, 764, 765,
	0, 844, 0, 0, 0, 0, 0, 0, 730, 742,
	0, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 739, 740, 0, 0, 0,
	0, 794, 0, 741, 0, 0, 789, 768, 772, 0,
	0, 0, 0, 289, 422, 439, 300, 412, 452, 305,
	419, 295, 385, 409, 0, 0, 291, 437, 418, 367,
	346, 347, 290, 0, 404, 324, 338, 321, 383, 769,
	792, 796, 320, 866, 790, 447, 293, 0, 446, 382,
	433, 438, 368, 362, 0, 292, 435, 366, 361, 350,
	328, 867, 351, 352, 342, 394, 360, 395, 343, 372,
	371, 373, 0, 0, 0, 0, 0, 475, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 787, 0, 610, 0, 449, 0, 0,
	850, 0, 0, 0, 421, 0, 0, 353, 0, 0,
	0, 791, 0, 407, 388, 863, 0, 0, 405, 358,
	434, 396, 440, 423, 448, 401, 397, 284, 424, 323,
	369, 296, 298, 318, 325, 327, 329, 330, 378, 379,
	391, 411, 425, 426, 427, 322, 306, 406, 307, 340,
	308, 285, 314, 312, 315, 413, 316, 287, 392, 431,
	0, 335, 402, 365, 288, 364, 393, 430, 429, 297,
	456, 462, 463, 552, 0, 468, 637, 638, 639, 477,
	0, 398, 482, 483, 484, 486, 487, 488, 489, 553,
	570, 537, 507, 470, 561, 504, 508, 509, 573, 0,
	0, 0, 461, 354, 355, 0, 333, 281, 282, 632,
	848, 384, 575, 608, 609, 500, 0, 862, 843, 845,
	846, 849, 853, 854, 855, 856, 857, 859, 861, 865,
	631, 0, 554, 569, 635, 568, 628, 390, 0, 410,
	566, 513, 0, 558, 532, 0, 559, 528, 563, 0,
	502, 0, 417, 442, 454, 471, 474, 503, 588, 589,
	590, 286, 473, 592, 593, 594, 595, 596, 597, 598,
	591, 864, 535, 512, 538, 453, 515, 514, 0, 0,
	549, 795, 550, 551, 374, 375, 376, 377, 851, 576,
	304, 472, 400, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 542, 539, 640, 0, 599, 600,
	0, 0, 466, 467, 332, 339, 485, 341, 303, 389,
	334, 451, 348, 0, 478, 543, 479, 602, 605, 603,
	604, 381, 344, 345, 414, 349, 359, 403, 450, 387,
	408, 301, 441, 415, 363, 529, 556, 873, 847, 872,
	874, 875, 871, 876, 877, 858, 751, 0, 802, 869,
	868, 870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 583, 582, 581, 580, 579, 578,
	577, 0, 0, 526, 428, 313, 275, 309, 310, 317,
	629, 626, 432, 630, 0, 283, 506, 357, 0, 399,
	331, 571, 572, 0, 0, 836, 809, 810, 811, 748,
	812, 806, 807, 749, 808, 837, 800, 833, 834, 776,
	803, 813, 832, 814, 835, 838, 839, 878, 879, 820,
	804, 247, 880, 817, 840, 831, 830, 815, 801, 841,
	842, 783, 778, 818, 819, 805, 824, 825, 826, 750,
	797, 798, 799, 821, 822, 779, 780, 781, 782, 0,
	0, 0, 457, 458, 459, 481, 0, 443, 505, 627,
	0, 0, 0, 0, 0, 0, 0, 555, 567, 601,
	0, 611, 612, 614, 616, 827, 618, 420, 0, 620,
	621, 622, 619, 823, 793, 633, 496, 497, 634, 607,
	0, 743, 0, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 1688, 0, 0, 0, 746, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 784, 547, 498, 416, 370, 565, 564, 0, 0,
	852, 860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 774, 829, 828,
	761, 771, 0, 0, 299, 219, 493, 613, 495, 494,
	762, 0, 763, 767, 770, 766, 764, 765, 0, 844,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 740, 0, 0, 0, 0, 794,
	0, 741, 0, 0, 789, 768, 772, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 769, 792, 796,
	320, 866, 790, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 867,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 787, 0, 610, 0, 449, 0, 0, 850, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 791,
	0, 407, 388, 863, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 1689,
	1690, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 848, 384,
	575, 608, 609, 500, 0, 862, 843, 845, 846, 849,
	853, 854, 855, 856, 857, 859, 861, 865, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 864,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 795,
	550, 551, 374, 375, 376, 377, 851, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 873, 847, 872, 874, 875,
	871, 876, 877, 858, 751, 0, 802, 869, 868, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 836, 809, 810, 811, 748, 812, 806,
	807, 749, 808, 837, 800, 833, 834, 776, 803, 813,
	832, 814, 835, 838, 839, 878, 879, 820, 804, 247,
	880, 817, 840, 831, 830, 815, 801, 841, 842, 783,
	778, 818, 819, 805, 824, 825, 826, 750, 797, 798,
	799, 821, 822, 779, 780, 781, 782, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 827, 618, 420, 0, 620, 621, 622,
	619, 823, 793, 633, 496, 497, 634, 607, 0, 743,
	0, 386, 0, 511, 544, 533, 617, 499, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 326, 0,
	0, 356, 548, 530, 540, 531, 516, 517, 518, 525,
	336, 519, 520, 521, 491, 522, 492, 523, 524, 784,
	547, 498, 416, 370, 565, 564, 0, 0, 852, 860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 774, 829, 828, 761, 771,
	0, 0, 299, 219, 493, 613, 495, 494, 762, 0,
	763, 767, 770, 766, 764, 765, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 739, 740, 0, 0, 0, 0, 794, 0, 741,
	0, 0, 789, 768, 772, 0, 0, 0, 0, 289,
	422, 439, 300, 412, 452, 305, 419, 295, 385, 409,
	0, 0, 291, 437, 418, 367, 346, 347, 290, 0,
	404, 324, 338, 321, 383, 769, 792, 796, 320, 866,
	790, 447, 293, 0, 446, 382, 433, 438, 368, 362,
	0, 292, 435, 366, 361, 350, 328, 867, 351, 352,
	342, 394, 360, 395, 343, 372, 371, 373, 0, 0,
	0, 0, 0, 475, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 787,
	0, 610, 0, 449, 0, 0, 850, 0, 0, 0,
	421, 0, 0, 353, 0, 0, 0, 791, 0, 407,
	388, 863, 0, 0, 405, 358, 434, 396, 440, 423,
	448, 401, 397, 284, 424, 323, 369, 296, 298, 318,
	325, 327, 329, 330, 378, 379, 391, 411, 425, 426,
	427, 322, 306, 406, 307, 340, 308, 285, 314, 312,
	315, 413, 316, 287, 392, 431, 0, 335, 402, 365,
	288, 364, 393, 430, 429, 297, 456, 462, 463, 552,
	0, 468, 637, 638, 639, 477, 0, 398, 482, 483,
	484, 486, 487, 488, 489, 553, 570, 537, 507, 470,
	561, 504, 508, 509, 573, 0, 0, 0, 461, 354,
	355, 0, 333, 281, 282, 632, 848, 384, 575, 608,
	609, 500, 0, 862, 843, 845, 846, 849, 853, 854,
	855, 856, 857, 859, 861, 865, 631, 0, 554, 569,
	635, 568, 628, 390, 0, 410, 566, 513, 0, 558,
	532, 0, 559, 528, 563, 0, 502, 0, 417, 442,
	454, 471, 474, 503, 588, 589, 590, 286, 473, 592,
	593, 594, 595, 596, 597, 598, 591, 864, 535, 512,
	538, 453, 515, 514, 0, 0, 549, 795, 550, 551,
	374, 375, 376, 377, 851, 576, 304, 472, 400, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 539, 640, 0, 599, 600, 0, 0, 466, 467,
	332, 339, 485, 341, 303, 389, 334, 451, 348, 0,
	478, 543, 479, 602, 605, 603, 604, 381, 344, 345,
	414, 349, 359, 403, 450, 387, 408, 301, 441, 415,
	363, 529, 556, 873, 847, 872, 874, 875, 871, 876,
	877, 858, 751, 0, 802, 869, 868, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	583, 582, 581, 580, 579, 578, 577, 0, 0, 526,
	428, 313, 275, 309, 310, 317, 629, 626, 432, 630,
	0, 283, 506, 357, 0, 399, 331, 571, 572, 0,
	0, 836, 809, 810, 811, 748, 812, 806, 807, 749,
	808, 837, 800, 833, 834, 776, 803, 813, 832, 814,
	835, 838, 839, 878, 879, 820, 804, 247, 880, 817,
	840, 831, 830, 815, 801, 841, 842, 783, 778, 818,
	819, 805, 824, 825, 826, 750, 797, 798, 799, 821,
	822, 779, 780, 781, 782, 0, 0, 0, 457, 458,
	459, 481, 0, 443, 505, 627, 0, 0, 0, 0,
	0, 0, 0, 555, 567, 601, 0, 611, 612, 614,
	616, 827, 618, 420, 0, 620, 621, 622, 619, 823,
	793, 633, 496, 497, 634, 607, 0, 743, 0, 386,
	0, 511, 544, 533, 617, 499, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 326, 0, 0, 356,
	548, 530, 540, 531, 516, 517, 518, 525, 336, 519,
	520, 521, 491, 522, 492, 523, 524, 784, 547, 498,
	416, 370, 565, 564, 0, 0, 852, 860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 829, 828, 761, 771, 0, 0,
	299, 219, 493, 613, 495, 494, 762, 0, 763, 767,
	770, 766, 764, 765, 0, 844, 0, 0, 0, 0,
	0, 0, 730, 742, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 739,
	740, 0, 0, 0, 0, 794, 0, 741, 0, 0,
	789, 768, 772, 0, 0, 0, 0, 289, 422, 439,
	300, 412, 452, 305, 419, 295, 385, 409, 0, 0,
	291, 437, 418, 367, 346, 347, 290, 0, 404, 324,
	338, 321, 383, 769, 792, 796, 320, 866, 790, 447,
	293, 0, 446, 382, 433, 438, 368, 362, 0, 292,
	435, 366, 361, 350, 328, 867, 351, 352, 342, 394,
	360, 395, 343, 372, 371, 373, 0, 0, 0, 0,
	0, 475, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 787, 0, 610,
	0, 449, 0, 0, 850, 0, 0, 0, 421, 0,
	0, 353, 0, 0, 0, 791, 0, 407, 388, 863,
	0, 0, 405, 358, 434, 396, 440, 423, 448, 401,
	397, 284, 424, 323, 369, 296, 298, 318, 325, 327,
	329, 330, 378, 379, 391, 411, 425, 426, 427, 322,
	306, 406, 307, 340, 308, 285, 314, 312, 315, 413,
	316, 287, 392, 431, 0, 335, 402, 365, 288, 364,
	393, 430, 429, 297, 456, 462, 463, 552, 0, 468,
	637, 638, 639, 477, 0, 398, 482, 483, 484, 486,
	487, 488, 489, 553, 570, 537, 507, 470, 561, 504,
	508, 509, 573, 0, 0, 0, 461, 354, 355, 0,
	333, 281, 282, 632, 848, 384, 575, 608, 609, 500,
	0, 862, 843, 845, 846, 849, 853, 854, 855, 856,
	857, 859, 861, 865, 631, 0, 554, 569, 635, 568,
	628, 390, 0, 410, 566, 513, 0, 558, 532, 0,
	559, 528, 563, 0, 502, 0, 417, 442, 454, 471,
	474, 503, 588, 589, 590, 286, 473, 592, 593, 594,
	595, 596, 597, 598, 591, 864, 535, 512, 538, 453,
	515, 514, 0, 0, 549, 795, 550, 551, 374, 375,
	376, 377, 851, 576, 304, 472, 400, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 542, 539,
	640, 0, 599, 600, 0, 0, 466, 467, 332, 339,
	485, 341, 303, 389, 334, 451, 348, 0, 478, 543,
	479, 602, 605, 603, 604, 381, 344, 345, 414, 349,
	359, 403, 450, 387, 408, 301, 441, 415, 363, 529,
	556, 873, 847, 872, 874, 875, 871, 876, 877, 858,
	751, 0, 802, 869, 868, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 583, 582,
	581, 580, 579, 578, 577, 0, 0, 526, 428, 313,
	275, 309, 310, 317, 629, 626, 432, 630, 0, 283,
	506, 357, 0, 399, 331, 571, 572, 0, 0, 836,
	809, 810, 811, 748, 812, 806, 807, 749, 808, 837,
	800, 833, 834, 776, 803, 813, 832, 814, 835, 838,
	839, 878, 879, 820, 804, 247, 880, 817, 840, 831,
	830, 815, 801, 841, 842, 783, 778, 818, 819, 805,
	824, 825, 826, 750, 797, 798, 799, 821, 822, 779,
	780, 781, 782, 0, 0, 0, 457, 458, 459, 481,
	0, 443, 505, 627, 0, 0, 0, 0, 0, 0,
	0, 555, 567, 601, 0, 611, 612, 614, 616, 827,
	618, 420, 0, 620, 621, 622, 619, 823, 0, 633,
	496, 497, 634, 607, 0, 743, 196, 61, 187, 158,
	0, 0, 0, 0, 0, 0, 386, 0, 511, 544,
	533, 617, 499, 0, 188, 0, 0, 0, 0, 0,
	0, 179, 0, 326, 0, 189, 356, 548, 530, 540,
	531, 516, 517, 518, 525, 336, 519, 520, 521, 491,
	522, 492, 523, 524, 132, 547, 498, 416, 370, 565,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 299, 219, 493,
	613, 495, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 422, 439, 300, 412, 452,
	305, 419, 295, 385, 409, 0, 0, 291, 437, 418,
	367, 346, 347, 290, 0, 404, 324, 338, 321, 383,
	0, 436, 464, 320, 455, 0, 447, 293, 0, 446,
	382, 433, 438, 368, 362, 0, 292, 435, 366, 361,
	350, 328, 480, 351, 352, 342, 394, 360, 395, 343,
	372, 371, 373, 0, 0, 0, 0, 0, 475, 476,
	0, 0, 0, 0, 0, 0, 157, 185, 194, 186,
	117, 0, 0, 606, 0, 0, 610, 0, 449, 0,
	0, 211, 0, 0, 0, 421, 0, 0, 353, 184,
	178, 177, 465, 0, 407, 388, 223, 0, 0, 405,
	358, 434, 396, 440, 423, 448, 401, 397, 284, 424,
	323, 369, 296, 298, 318, 325, 327, 329, 330, 378,
	379, 391, 411, 425, 426, 427, 322, 306, 406, 307,
	340, 308, 285, 314, 312, 315, 413, 316, 287, 392,
	431, 0, 335, 402, 365, 288, 364, 393, 430, 429,
	297, 456, 462, 463, 552, 0, 468, 585, 586, 587,
	477, 0, 398, 482, 483, 484, 486, 487, 488, 489,
	553, 570, 537, 507, 470, 561, 504, 508, 509, 573,
	0, 0, 0, 461, 354, 355, 0, 333, 281, 282,
	444, 319, 384, 575, 608, 609, 500, 0, 562, 501,
	510, 311, 534, 546, 545, 380, 460, 214, 557, 560,
	490, 224, 0, 554, 569, 527, 568, 225, 390, 0,
	410, 566, 513, 0, 558, 532, 0, 559, 528, 563,
	0, 502, 0, 417, 442, 454, 471, 474, 503, 588,
	589, 590, 286, 473, 592, 593, 594, 595, 596, 597,
	598, 591, 445, 535, 512, 538, 453, 515, 514, 0,
	0, 549, 469, 550, 551, 374, 375, 376, 377, 337,
	576, 304, 472, 400, 130, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 542, 539, 222, 0, 599,
	600, 0, 0, 466, 467, 332, 339, 485, 341, 303,
	389, 334, 451, 348, 0, 478, 543, 479, 602, 605,
	603, 604, 381, 344, 345, 414, 349, 359, 403, 450,
	387, 408, 301, 441, 415, 363, 529, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 583, 582, 581, 580, 579,
	578, 577, 0, 0, 526, 428, 313, 275, 309, 310,
	317, 229, 294, 432, 230, 0, 283, 506, 357, 159,
	399, 331, 571, 572, 58, 0, 231, 232, 233, 234,
	235, 236, 237, 238, 276, 239, 240, 241, 242, 243,
	244, 245, 248, 249, 250, 251, 252, 253, 254, 255,
	574, 246, 247, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 0, 0, 0,
	277, 278, 279, 280, 0, 0, 271, 272, 273, 274,
	0, 0, 0, 457, 458, 459, 481, 0, 443, 505,
	226, 45, 212, 215, 217, 216, 0, 59, 555, 567,
	601, 5, 611, 612, 614, 616, 615, 618, 420, 0,
	620, 621, 622, 619, 196, 135, 227, 496, 497, 228,
	607, 0, 0, 0, 386, 0, 511, 544, 533, 617,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 356, 548, 530, 540, 531, 516,
	517, 518, 525, 336, 519, 520, 521, 491, 522, 492,
	523, 524, 132, 547, 498, 416, 370, 565, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 299, 219, 493, 613, 495,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 2357, 2360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 422, 439, 300, 412, 452, 305, 419,
	295, 385, 409, 0, 0, 291, 437, 418, 367, 346,
	347, 290, 0, 404, 324, 338, 321, 383, 0, 436,
	464, 320, 455, 0, 447, 293, 0, 446, 382, 433,
	438, 368, 362, 0, 292, 435, 366, 361, 350, 328,
	480, 351, 352, 342, 394, 360, 395, 343, 372, 371,
	373, 0, 0, 0, 0, 0, 475, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 610, 2361, 449, 0, 0, 0,
	2356, 0, 2355, 421, 2353, 2358, 353, 0, 0, 0,
	465, 0, 407, 388, 636, 0, 0, 405, 358, 434,
	396, 440, 423, 448, 401, 397, 284, 424, 323, 369,
	296, 298, 318, 325, 327, 329, 330, 378, 379, 391,
	411, 425, 426, 427, 322, 306, 406, 307, 340, 308,
	285, 314, 312, 315, 413, 316, 287, 392, 431, 2359,
	335, 402, 365, 288, 364, 393, 430, 429, 297, 456,
	462, 463, 552, 0, 468, 637, 638, 639, 477, 0,
	398, 482, 483, 484, 486, 487, 488, 489, 553, 570,
	537, 507, 470, 561, 504, 508, 509, 573, 0, 0,
	0, 461, 354, 355, 0, 333, 281, 282, 632, 319,
	384, 575, 608, 609, 500, 0, 562, 501, 510, 311,
	534, 546, 545, 380, 460, 0, 557, 560, 490, 631,
	0, 554, 569, 635, 568, 628, 390, 0, 410, 566,
	513, 0, 558, 532, 0, 559, 528, 563, 0, 502,
	0, 417, 442, 454, 471, 474, 503, 588, 589, 590,
	286, 473, 592, 593, 594, 595, 596, 597, 598, 591,
	445, 535, 512, 538, 453, 515, 514, 0, 0, 549,
	469, 550, 551, 374, 375, 376, 377, 337, 576, 304,
	472, 400, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 542, 539, 640, 0, 599, 600, 0,
	0, 466, 467, 332, 339, 485, 341, 303, 389, 334,
	451, 348, 0, 478, 543, 479, 602, 605, 603, 604,
	381, 344, 345, 414, 349, 359, 403, 450, 387, 408,
	301, 441, 415, 363, 529, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 584, 583, 582, 581, 580, 579, 578, 577,
	0, 0, 526, 428, 313, 275, 309, 310, 317, 629,
	626, 432, 630, 0, 283, 506, 357, 159, 399, 331,
	571, 572, 0, 0, 231, 232, 233, 234, 235, 236,
	237, 238, 276, 239, 240, 241, 242, 243, 244, 245,
	248, 249, 250, 251, 252, 253, 254, 255, 574, 246,
	247, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 0, 0, 0, 277, 278,
	279, 280, 0, 0, 271, 272, 273, 274, 0, 0,
	0, 457, 458, 459, 481, 0, 443, 505, 627, 0,
	0, 0, 0, 0, 0, 0, 555, 567, 601, 0,
	611, 612, 614, 616, 615, 618, 420, 0, 620, 621,
	622, 619, 0, 0, 633, 496, 497, 634, 607, 386,
	0, 511, 544, 533, 617, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 356,
	548, 530, 540, 531, 516, 517, 518, 525, 336, 519,
	520, 521, 491, 522, 492, 523, 524, 0, 547, 498,
	416, 370, 565, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 0, 0, 218, 0, 0, 761, 771, 0, 0,
	299, 219, 493, 613, 495, 494, 762, 0, 763, 767,
	770, 766, 764, 765, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 289, 422, 439,
	300, 412, 452, 305, 419, 295, 385, 409, 0, 0,
	291, 437, 418, 367, 346, 347, 290, 0, 404, 324,
	338, 321, 383, 769, 436, 464, 320, 455, 0, 447,
	293, 0, 446, 382, 433, 438, 368, 362, 0, 292,
	435, 366, 361, 350, 328, 480, 351, 352, 342, 394,
	360, 395, 343, 372, 371, 373, 0, 0, 0, 0,
	0, 475, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 0, 0, 610,
	0, 449, 0, 0, 0, 0, 0, 0, 421, 0,
	0, 353, 0, 0, 0, 465, 0, 407, 388, 636,
	0, 0, 405, 358, 434, 396, 440, 423, 448, 401,
	397, 284, 424, 323, 369, 296, 298, 318, 325, 327,
	329, 330, 378, 379, 391, 411, 425, 426, 427, 322,
	306, 406, 307, 340, 308, 285, 314, 312, 315, 413,
	316, 287, 392, 431, 0, 335, 402, 365, 288, 364,
	393, 430, 429, 297, 456, 462, 463, 552, 0, 468,
	637, 638, 639, 477, 0, 398, 482, 483, 484, 486,
	487, 488, 489, 553, 570, 537, 507, 470, 561, 504,
	508, 509, 573, 0, 0, 0, 461, 354, 355, 0,
	333, 281, 282, 632, 319, 384, 575, 608, 609, 500,
	0, 562, 501, 510, 311, 534, 546, 545, 380, 460,
	0, 557, 560, 490, 631, 0, 554, 569, 635, 568,
	628, 390, 0, 410, 566, 513, 0, 558, 532, 0,
	559, 528, 563, 0, 502, 0, 417, 442, 454, 471,
	474, 503, 588, 589, 590, 286, 473, 592, 593, 594,
	595, 596, 597, 598, 591, 445, 535, 512, 538, 453,
	515, 514, 0, 0, 549, 469, 550, 551, 374, 375,
	376, 377, 337, 576, 304, 472, 400, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 542, 539,
	640, 0, 599, 600, 0, 0, 466, 467, 332, 339,
	485, 341, 303, 389, 334, 451, 348, 0, 478, 543,
	479, 602, 605, 603, 604, 381, 344, 345, 414, 349,
	359, 403, 450, 387, 408, 301, 441, 415, 363, 529,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 583, 582,
	581, 580, 579, 578, 577, 0, 0, 526, 428, 313,
	275, 309, 310, 317, 629, 626, 432, 630, 0, 283,
	506, 357, 0, 399, 331, 571, 572, 0, 0, 231,
	232, 233, 234, 235, 236, 237, 238, 276, 239, 240,
	241, 242, 243, 244, 245, 248, 249, 250, 251, 252,
	253, 254, 255, 574, 246, 247, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	0, 0, 0, 277, 278, 279, 280, 0, 0, 271,
	272, 273, 274, 0, 0, 0, 457, 458, 459, 481,
	0, 443, 505, 627, 0, 0, 0, 0, 0, 0,
	0, 555, 567, 601, 0, 611, 612, 614, 616, 615,
	618, 420, 0, 620, 621, 622, 619, 0, 0, 633,
	496, 497, 634, 607, 196, 61, 187, 158, 0, 0,
	0, 0, 0, 0, 386, 659, 511, 544, 533, 617,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 356, 548, 530, 540, 531, 516,
	517, 518, 525, 336, 519, 520, 521, 491, 522, 492,
	523, 524, 0, 547, 498, 416, 370, 565, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 299, 219, 493, 613, 495,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 422, 439, 300, 412, 452, 305, 419,
	295, 385, 409, 0, 0, 291, 437, 418, 367, 346,
	347, 290, 0, 404, 324, 338, 321, 383, 0, 436,
	464, 320, 455, 0, 447, 293, 0, 446, 382, 433,
	438, 368, 362, 0, 292, 435, 366, 361, 350, 328,
	480, 351, 352, 342, 394, 360, 395, 343, 372, 371,
	373, 0, 0, 0, 0, 0, 475, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 663, 664,
	0, 606, 0, 0, 610, 0, 449, 0, 0, 0,
	0, 0, 0, 421, 0, 0, 353, 0, 0, 0,
	465, 0, 407, 388, 636, 0, 0, 405, 358, 434,
	396, 440, 423, 448, 401, 397, 284, 424, 323, 369,
	296, 298, 318, 325, 327, 329, 330, 378, 379, 391,
	411, 425, 426, 427, 322, 306, 406, 307, 340, 308,
	285, 314, 312, 315, 413, 316, 287, 392, 431, 0,
	335, 402, 365, 288, 364, 393, 430, 429, 297, 456,
	462, 463, 552, 0, 468, 637, 638, 639, 477, 0,
	398, 482, 483, 484, 486, 487, 488, 489, 553, 570,
	537, 507, 470, 561, 504, 508, 509, 573, 0, 0,
	0, 461, 354, 355, 0, 333, 281, 282, 632, 319,
	384, 575, 608, 609, 500, 0, 562, 501, 510, 311,
	534, 546, 545, 380, 460, 0, 557, 560, 490, 631,
	0, 554, 569, 635, 568, 628, 390, 0, 410, 566,
	513, 0, 558, 532, 0, 559, 528, 563, 0, 502,
	0, 417, 442, 454, 471, 474, 503, 588, 589, 590,
	286, 473, 592, 593, 594, 595, 596, 597, 598, 591,
	445, 535, 512, 538, 453, 515, 514, 0, 0, 549,
	469, 550, 551, 374, 375, 376, 377, 660, 662, 304,
	472, 400, 674, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 542, 539, 640, 0, 599, 600, 0,
	0, 466, 467, 332, 339, 485, 341, 303, 389, 334,
	451, 348, 0, 478, 543, 479, 602, 605, 603, 604,
	381, 344, 345, 414, 349, 359, 403, 450, 387, 408,
	301, 441, 415, 363, 529, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 584, 583, 582, 581, 580, 579, 578, 577,
	0, 0, 526, 428, 313, 275, 309, 310, 317, 629,
	626, 432, 630, 0, 283, 506, 357, 159, 399, 331,
	571, 572, 0, 0, 231, 232, 233, 234, 235, 236,
	237, 238, 276, 239, 240, 241, 242, 243, 244, 245,
	248, 249, 250, 251, 252, 253, 254, 255, 574, 246,
	247, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 0, 0, 0, 277, 278,
	279, 280, 0, 0, 271, 272, 273, 274, 0, 0,
	0, 457, 458, 459, 481, 0, 443, 505, 627, 0,
	0, 0, 0, 0, 0, 0, 555, 567, 601, 0,
	611, 612, 614, 616, 615, 618, 420, 0, 620, 621,
	622, 619, 0, 0, 633, 496, 497, 634, 607, 386,
	0, 511, 544, 533, 617, 499, 0, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 356,
	548, 530, 540, 531, 516, 517, 518, 525, 336, 519,
	520, 521, 491, 522, 492, 523, 524, 0, 547, 498,
	416, 370, 565, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	299, 219, 493, 613, 495, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 0, 289, 422, 439,
	300, 412, 452, 305, 419, 295, 385, 409, 0, 0,
	2516, 2519, 2520, 2521, 2522, 2523, 2524, 0, 2529, 2525,
	2526, 2527, 2528, 0, 2511, 2512, 2513, 2514, 1086, 2495,
	2517, 0, 2496, 382, 2497, 2498, 2499, 2500, 1090, 2501,
	2502, 2503, 2504, 2505, 2508, 2509, 2506, 2507, 2515, 394,
	360, 395, 343, 372, 371, 373, 1114, 1116, 1118, 1120,
	1123, 475, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 0, 0, 610,
	0, 449, 0, 0, 0, 0, 0, 0, 421, 0,
	0, 353, 0, 0, 0, 2510, 0, 407, 388, 636,
	0, 0, 405, 358, 434, 396, 440, 423, 448, 401,
	397, 284, 424, 323, 369, 296, 298, 318, 325, 327,
	329, 330, 378, 379, 391, 411, 425, 426, 427, 322,
	306, 406, 307, 340, 308, 285, 314, 312, 315, 413,
	316, 287, 392, 431, 0, 335, 402, 365, 288, 364,
	393, 430, 429, 297, 456, 462, 463, 552, 0, 468,
	637, 638, 639, 477, 0, 398, 482, 483, 484, 486,
	487, 488, 489, 553, 570, 537, 507, 470, 561, 504,
	508, 509, 573, 0, 0, 0, 461, 354, 355, 0,
	333, 281, 282, 632, 319, 384, 575, 608, 609, 500,
	0, 562, 501, 510, 311, 534, 546, 545, 380, 460,
	0, 557, 560, 490, 631, 0, 554, 569, 635, 568,
	628, 390, 0, 410, 566, 513, 0, 558, 532, 0,
	559, 528, 563, 0, 502, 0, 417, 442, 454, 471,
	474, 503, 588, 589, 590, 286, 473, 592, 593, 594,
	595, 596, 597, 598, 591, 445, 535, 512, 538, 453,
	515, 514, 0, 0, 549, 469, 550, 551, 374, 375,
	376, 377, 337, 576, 304, 472, 400, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 542, 539,
	640, 0, 599, 600, 0, 0, 466, 467, 332, 339,
	485, 341, 303, 389, 334, 451, 348, 0, 478, 543,
	479, 602, 605, 603, 604, 381, 344, 345, 414, 349,
	359, 403, 450, 387, 408, 301, 441, 415, 363, 529,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 583, 582,
	581, 580, 579, 578, 577, 0, 0, 526, 428, 313,
	275, 309, 310, 317, 629, 626, 432, 630, 0, 283,
	2518, 357, 0, 399, 331, 571, 572, 0, 0, 231,
	232, 233, 234, 235, 236, 237, 238, 276, 239, 240,
	241, 242, 243, 244, 245, 248, 249, 250, 251, 252,
	253, 254, 255, 574, 246, 247, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	0, 0, 0, 277, 278, 279, 280, 0, 0, 271,
	272, 273, 274, 0, 0, 0, 457, 458, 459, 481,
	0, 443, 505, 627, 0, 0, 0, 0, 0, 0,
	0, 555, 567, 601, 0, 611, 612, 614, 616, 615,
	618, 420, 0, 620, 621, 622, 619, 0, 0, 633,
	496, 497, 634, 607, 386, 0, 511, 544, 533, 617,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 356, 548, 530, 540, 531, 516,
	517, 518, 525, 336, 519, 520, 521, 491, 522, 492,
	523, 524, 0, 547, 498, 416, 370, 565, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 299, 219, 493, 613, 495,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 2357, 2360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 422, 439, 300, 412, 452, 305, 419,
	295, 385, 409, 0, 0, 291, 437, 418, 367, 346,
	347, 290, 0, 404, 324, 338, 321, 383, 0, 436,
	464, 320, 455, 0, 447, 293, 0, 446, 382, 433,
	438, 368, 362, 0, 292, 435, 366, 361, 350, 328,
	480, 351, 352, 342, 394, 360, 395, 343, 372, 371,
	373, 0, 0, 0, 0, 0, 475, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 610, 2361, 449, 0, 0, 0,
	2356, 0, 2355, 421, 2353, 2358, 353, 0, 0, 0,
	465, 0, 407, 388, 636, 0, 0, 405, 358, 434,
	396, 440, 423, 448, 401, 397, 284, 424, 323, 369,
	296, 298, 318, 325, 327, 329, 330, 378, 379, 391,
	411, 425, 426, 427, 322, 306, 406, 307, 340, 308,
	285, 314, 312, 315, 413, 316, 287, 392, 431, 2359,
	335, 402, 365, 288, 364, 393, 430, 429, 297, 456,
	462, 463, 552, 0, 468, 637, 638, 639, 477, 0,
	398, 482, 483, 484, 486, 487, 488, 489, 553, 570,
	537, 507, 470, 561, 504, 508, 509, 573, 0, 0,
	0, 461, 354, 355, 0, 333, 281, 282, 632, 319,
	384, 575, 608, 609, 500, 0, 562, 501, 510, 311,
	534, 546, 545, 380, 460, 0, 557, 560, 490, 631,
	0, 554, 569, 635, 568, 628, 390, 0, 410, 566,
	513, 0, 558, 532, 0, 559, 528, 563, 0, 502,
	0, 417, 442, 454, 471, 474, 503, 588, 589, 590,
	286, 473, 592, 593, 594, 595, 596, 597, 598, 591,
	445, 535, 512, 538, 453, 515, 514, 0, 0, 549,
	469, 550, 551, 374, 375, 376, 377, 337, 576, 304,
	472, 400, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 542, 539, 640, 0, 599, 600, 0,
	0, 466, 467, 332, 339, 485, 341, 303, 389, 334,
	451, 348, 0, 478, 543, 479, 602, 605, 603, 604,
	381, 344, 345, 414, 349, 359, 403, 450, 387, 408,
	301, 441, 415, 363, 529, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 584, 583, 582, 581, 580, 579, 578, 577,
	0, 0, 526, 428, 313, 275, 309, 310, 317, 629,
	626, 432, 630, 0, 283, 506, 357, 0, 399, 331,
	571, 572, 0, 0, 231, 232, 233, 234, 235, 236,
	237, 238, 276, 239, 240, 241, 242, 243, 244, 245,
	248, 249, 250, 251, 252, 253, 254, 255, 574, 246,
	247, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 0, 0, 0, 277, 278,
	279, 280, 0, 0, 271, 272, 273, 274, 0, 0,
	0, 457, 458, 459, 481, 0, 443, 505, 627, 0,
	0, 0, 0, 0, 0, 0, 555, 567, 601, 0,
	611, 612, 614, 616, 615, 618, 420, 0, 620, 621,
	622, 619, 0, 0, 633, 496, 497, 634, 607, 386,
	0, 511, 544, 533, 617, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 356,
	548, 530, 540, 531, 516, 517, 518, 525, 336, 519,
	520, 521, 491, 522, 492, 523, 524, 0, 547, 498,
	416, 370, 565, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	299, 219, 493, 613, 495, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 2378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 422, 439,
	300, 412, 452, 305, 419, 295, 385, 409, 0, 0,
	291, 437, 418, 367, 346, 347, 290, 0, 404, 324,
	338, 321, 383, 0, 436, 464, 320, 455, 0, 447,
	293, 0, 446, 382, 433, 438, 368, 362, 0, 292,
	435, 366, 361, 350, 328, 480, 351, 352, 342, 394,
	360, 395, 343, 372, 371, 373, 0, 0, 0, 0,
	0, 475, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 0, 0, 610,
	2377, 449, 0, 0, 0, 2383, 2380, 2382, 421, 0,
	2381, 353, 0, 0, 0, 465, 0, 407, 388, 636,
	0, 2375, 405, 358, 434, 396, 440, 423, 448, 401,
	397, 284, 424, 323, 369, 296, 298, 318, 325, 327,
	329, 330, 378, 379, 391, 411, 425, 426, 427, 322,
	306, 406, 307, 340, 308, 285, 314, 312, 315, 413,
	316, 287, 392, 431, 0, 335, 402, 365, 288, 364,
	393, 430, 429, 297, 456, 462, 463, 552, 0, 468,
	637, 638, 639, 477, 0, 398, 482, 483, 484, 486,
	487, 488, 489, 553, 570, 537, 507, 470, 561, 504,
	508, 509, 573, 0, 0, 0, 461, 354, 355, 0,
	333, 281, 282, 632, 319, 384, 575, 608, 609, 500,
	0, 562, 501, 510, 311, 534, 546, 545, 380, 460,
	0, 557, 560, 490, 631, 0, 554, 569, 635, 568,
	628, 390, 0, 410, 566, 513, 0, 558, 532, 0,
	559, 528, 563, 0, 502, 0, 417, 442, 454, 471,
	474, 503, 588, 589, 590, 286, 473, 592, 593, 594,
	595, 596, 597, 598, 591, 445, 535, 512, 538, 453,
	515, 514, 0, 0, 549, 469, 550, 551, 374, 375,
	376, 377, 337, 576, 304, 472, 400, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 542, 539,
	640, 0, 599, 600, 0, 0, 466, 467, 332, 339,
	485, 341, 303, 389, 334, 451, 348, 0, 478, 543,
	479, 602, 605, 603, 604, 381, 344, 345, 414, 349,
	359, 403, 450, 387, 408, 301, 441, 415, 363, 529,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 583, 582,
	581, 580, 579, 578, 577, 0, 0, 526, 428, 313,
	275, 309, 310, 317, 629, 626, 432, 630, 0, 283,
	506, 357, 0, 399, 331, 571, 572, 0, 0, 231,
	232, 233, 234, 235, 236, 237, 238, 276, 239, 240,
	241, 242, 243, 244, 245, 248, 249, 250, 251, 252,
	253, 254, 255, 574, 246, 247, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	0, 0, 0, 277, 278, 279, 280, 0, 0, 271,
	272, 273, 274, 0, 0, 0, 457, 458, 459, 481,
	0, 443, 505, 627, 0, 0, 0, 0, 0, 0,
	0, 555, 567, 601, 0, 611, 612, 614, 616, 615,
	618, 420, 0, 620, 621, 622, 619, 0, 0, 633,
	496, 497, 634, 607, 386, 0, 511, 544, 533, 617,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 356, 548, 530, 540, 531, 516,
	517, 518, 525, 336, 519, 520, 521, 491, 522, 492,
	523, 524, 0, 547, 498, 416, 370, 565, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 299, 219, 493, 613, 495,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 2378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 422, 439, 300, 412, 452, 305, 419,
	295, 385, 409, 0, 0, 291, 437, 418, 367, 346,
	347, 290, 0, 404, 324, 338, 321, 383, 0, 436,
	464, 320, 455, 0, 447, 293, 0, 446, 382, 433,
	438, 368, 362, 0, 292, 435, 366, 361, 350, 328,
	480, 351, 352, 342, 394, 360, 395, 343, 372, 371,
	373, 0, 0, 0, 0, 0, 475, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 610, 2377, 449, 0, 0, 0,
	2383, 2380, 2382, 421, 0, 2381, 353, 0, 0, 0,
	465, 0, 407, 388, 636, 0, 0, 405, 358, 434,
	396, 440, 423, 448, 401, 397, 284, 424, 323, 369,
	296, 298, 318, 325, 327, 329, 330, 378, 379, 391,
	411, 425, 426, 427, 322, 306, 406, 307, 340, 308,
	285, 314, 312, 315, 413, 316, 287, 392, 431, 0,
	335, 402, 365, 288, 364, 393, 430, 429, 297, 456,
	462, 463, 552, 0, 468, 637, 638, 639, 477, 0,
	398, 482, 483, 484, 486, 487, 488, 489, 553, 570,
	537, 507, 470, 561, 504, 508, 509, 573, 0, 0,
	0, 461, 354, 355, 0, 333, 281, 282, 632, 319,
	384, 575, 608, 609, 500, 0, 562, 501, 510, 311,
	534, 546, 545, 380, 460, 0, 557, 560, 490, 631,
	0, 554, 569, 635, 568, 628, 390, 0, 410, 566,
	513, 0, 558, 532, 0, 559, 528, 563, 0, 502,
	0, 417, 442, 454, 471, 474, 503, 588, 589, 590,
	286, 473, 592, 593, 594, 595, 596, 597, 598, 591,
	445, 535, 512, 538, 453, 515, 514, 0, 0, 549,
	469, 550, 551, 374, 375, 376, 377, 337, 576, 304,
	472, 400, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 542, 539, 640, 0, 599, 600, 0,
	0, 466, 467, 332, 339, 485, 341, 303, 389, 334,
	451, 348, 0, 478, 543, 479, 602, 605, 603, 604,
	381, 344, 345, 414, 349, 359, 403, 450, 387, 408,
	301, 441, 415, 363, 529, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 584, 583, 582, 581, 580, 579, 578, 577,
	0, 0, 526, 428, 313, 275, 309, 310, 317, 629,
	626, 432, 630, 0, 283, 506, 357, 0, 399, 331,
	571, 572, 0, 0, 231, 232, 233, 234, 235, 236,
	237, 238, 276, 239, 240, 241, 242, 243, 244, 245,
	248, 249, 250, 251, 252, 253, 254, 255, 574, 246,
	247, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 0, 0, 0, 277, 278,
	279, 280, 0, 0, 271, 272, 273, 274, 0, 0,
	0, 457, 458, 459, 481, 0, 443, 505, 627, 0,
	0, 0, 0, 0, 0, 0, 555, 567, 601, 0,
	611, 612, 614, 616, 615, 618, 420, 0, 620, 621,
	622, 619, 0, 0, 633, 496, 497, 634, 607, 386,
	0, 511, 544, 533, 617, 499, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 0, 326, 0, 0, 356,
	548, 530, 540, 531, 516, 517, 518, 525, 336, 519,
	520, 521, 491, 522, 492, 523, 524, 0, 547, 498,
	416, 370, 565, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 2078, 0, 0, 0,
	299, 219, 493, 613, 495, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 0, 1224, 1225,
	1226, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 422, 439,
	300, 412, 452, 305, 419, 295, 385, 409, 0, 0,
	291, 437, 418, 367, 346, 347, 290, 0, 404, 324,
	338, 321, 383, 0, 436, 464, 320, 455, 0, 447,
	293, 0, 446, 382, 433, 438, 368, 362, 0, 292,
	435, 366, 361, 350, 328, 480, 351, 352, 342, 394,
	360, 395, 343, 372, 371, 373, 0, 0, 0, 0,
	0, 475, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 0, 0, 610,
	0, 449, 0, 0, 0, 0, 0, 0, 421, 0,
	0, 353, 0, 0, 0, 465, 0, 407, 388, 636,
	0, 0, 405, 358, 434, 396, 440, 423, 448, 401,
	397, 284, 424, 323, 369, 296, 298, 318, 325, 327,
	329, 330, 378, 379, 391, 411, 425, 426, 427, 322,
	306, 406, 307, 340, 308, 285, 314, 312, 315, 413,
	316, 287, 392, 431, 0, 335, 402, 365, 288, 364,
	393, 430, 429, 297, 456, 462, 463, 552, 0, 468,
	637, 638, 639, 477, 0, 398, 482, 483, 484, 486,
	487, 488, 489, 553, 570, 537, 507, 470, 561, 504,
	508, 509, 573, 0, 0, 0, 461, 354, 355, 0,
	333, 281, 282, 632, 319, 384, 575, 608, 609, 500,
	0, 562, 501, 510, 311, 534, 546, 545, 380, 460,
	0, 557, 560, 490, 631, 0, 554, 569, 635, 568,
	628, 390, 0, 410, 566, 513, 0, 558, 532, 0,
	559, 528, 563, 0, 502, 0, 417, 442, 454, 471,
	474, 503, 588, 589, 590, 286, 473, 592, 593, 594,
	595, 596, 597, 598, 591, 445, 535, 512, 538, 453,
	515, 514, 0, 0, 549, 469, 550, 551, 374, 375,
	376, 377, 337, 576, 304, 472, 400, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 542, 539,
	640, 0, 599, 600, 0, 0, 466, 467, 332, 339,
	485, 341, 303, 389, 334, 451, 348, 0, 478, 543,
	479, 602, 605, 603, 604, 381, 344, 345, 414, 349,
	359, 403, 450, 387, 408, 301, 441, 415, 363, 529,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 584, 583, 582,
	581, 580, 579, 578, 577, 0, 0, 526, 428, 313,
	275, 309, 310, 317, 629, 626, 432, 630, 0, 283,
	506, 357, 0, 399, 331, 571, 572, 0, 0, 231,
	232, 233, 234, 235, 236, 237, 238, 276, 239, 240,
	241, 242, 243, 244, 245, 248, 249, 250, 251, 252,
	253, 254, 255, 574, 246, 247, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	0, 0, 0, 277, 278, 279, 280, 0, 0, 271,
	272, 273, 274, 0, 0, 0, 457, 458, 459, 481,
	0, 443, 505, 627, 0, 0, 0, 0, 0, 0,
	0, 555, 567, 601, 0, 611, 612, 614, 616, 615,
	618, 420, 0, 620, 621, 622, 619, 196, 0, 633,
	496, 497, 634, 607, 0, 0, 0, 386, 0, 511,
	544, 533, 617, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 356, 548, 530,
	540, 531, 516, 517, 518, 525, 336, 519, 520, 521,
	491, 522, 492, 523, 524, 132, 547, 498, 416, 370,
	565, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 2127,
	0, 218, 0, 0, 0, 0, 0, 0, 299, 219,
	493, 613, 495, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 422, 439, 300, 412,
	452, 305, 419, 295, 385, 409, 0, 0, 291, 437,
	418, 367, 346, 347, 290, 0, 404, 324, 338, 321,
	383, 0, 436, 464, 320, 455, 0, 447, 293, 0,
	446, 382, 433, 438, 368, 362, 0, 292, 435, 366,
	361, 350, 328, 480, 351, 352, 342, 394, 360, 395,
	343, 372, 371, 373, 0, 0, 0, 0, 0, 475,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 0, 0, 610, 0, 449,
	0, 0, 0, 0, 0, 0, 421, 0, 0, 353,
	0, 0, 0, 465, 0, 407, 388, 636, 0, 0,
	405, 358, 434, 396, 440, 423, 448, 401, 397, 284,
	424, 323, 369, 296, 298, 318, 325, 327, 329, 330,
	378, 379, 391, 411, 425, 426, 427, 322, 306, 406,
	307, 340, 308, 285, 314, 312, 315, 413, 316, 287,
	392, 431, 0, 335, 402, 365, 288, 364, 393, 430,
	429, 297, 456, 462, 463, 552, 0, 468, 637, 638,
	639, 477, 0, 398, 482, 483, 484, 486, 487, 488,
	489, 553, 570, 537, 507, 470, 561, 504, 508, 509,
	573, 0, 0, 0, 461, 354, 355, 0, 333, 281,
	282, 632, 319, 384, 575, 608, 609, 500, 0, 562,
	501, 510, 311, 534, 546, 545, 380, 460, 0, 557,
	560, 490, 631, 0, 554, 569, 635, 568, 628, 390,
	0, 410, 566, 513, 0, 558, 532, 0, 559, 528,
	563, 0, 502, 0, 417, 442, 454, 471, 474, 503,
	588, 589, 590, 286, 473, 592, 593, 594, 595, 596,
	597, 598, 591, 445, 535, 512, 538, 453, 515, 514,
	0, 0, 549, 469, 550, 551, 374, 375, 376, 377,
	337, 576, 304, 472, 400, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 542, 539, 640, 0,
	599, 600, 0, 0, 466, 467, 332, 339, 485, 341,
	303, 389, 334, 451, 348, 0, 478, 543, 479, 602,
	605, 603, 604, 381, 344, 345, 414, 349, 359, 403,
	450, 387, 408, 301, 441, 415, 363, 529, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 584, 583, 582, 581, 580,
	579, 578, 577, 0, 0, 526, 428, 313, 275, 309,
	310, 317, 629, 626, 432, 630, 0, 283, 506, 357,
	159, 399, 331, 571, 572, 0, 0, 231, 232, 233,
	234, 235, 236, 237, 238, 276, 239, 240, 241, 242,
	243, 244, 245, 248, 249, 250, 251, 252, 253, 254,
	255, 574, 246, 247, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 0, 0,
	0, 277, 278, 279, 280, 0, 0, 271, 272, 273,
	274, 0, 0, 0, 457, 458, 459, 481, 0, 443,
	505, 627, 0, 0, 0, 0, 0, 0, 0, 555,
	567, 601, 0, 611, 612, 614, 616, 615, 618, 420,
	0, 620, 621, 622, 619, 196, 0, 633, 496, 497,
	634, 607, 0, 0, 0, 386, 0, 511, 544, 533,
	617, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 356, 548, 530, 540, 531,
	516, 517, 518, 525, 336, 519, 520, 521, 491, 522,
	492, 523, 524, 132, 547, 498, 416, 370, 565, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 2113, 0, 218,
	0, 0, 0, 0, 0, 0, 299, 219, 493, 613,
	495, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 422, 439, 300, 412, 452, 305,
	419, 295, 385, 409, 0, 0, 291, 437, 418, 367,
	346, 347, 290, 0, 404, 324, 338, 321, 383, 0,
	436, 464, 320, 455, 0, 447, 293, 0, 446, 382,
	433, 438, 368, 362, 0, 292, 435, 366, 361, 350,
	328, 480, 351, 352, 342, 394, 360, 395, 343, 372,
	371, 373, 0, 0, 0, 0, 0, 475, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 610, 0, 449, 0, 0,
	0, 0, 0, 0, 421, 0, 0, 353, 0, 0,
	0, 465, 0, 407, 388, 636, 0, 0, 405, 358,
	434, 396, 440, 423, 448, 401, 397, 284, 424, 323,
	369, 296, 298, 318, 325, 327, 329, 330, 378, 379,
	391, 411, 425, 426, 427, 322, 306, 406, 307, 340,
	308, 285, 314, 312, 315, 413, 316, 287, 392, 431,
	0, 335, 402, 365, 288, 364, 393, 430, 429, 297,
	456, 462, 463, 552, 0, 468, 637, 638, 639, 477,
	0, 398, 482, 483, 484, 486, 487, 488, 489, 553,
	570, 537, 507, 470, 561, 504, 508, 509, 573, 0,
	0, 0, 461, 354, 355, 0, 333, 281, 282, 632,
	319, 384, 575, 608, 609, 500, 0, 562, 501, 510,
	311, 534, 546, 545, 380, 460, 0, 557, 560, 490,
	631, 0, 554, 569, 635, 568, 628, 390, 0, 410,
	566, 513, 0, 558, 532, 0, 559, 528, 563, 0,
	502, 0, 417, 442, 454, 471, 474, 503, 588, 589,
	590, 286, 473, 592, 593, 594, 595, 596, 597, 598,
	591, 445, 535, 512, 538, 453, 515, 514, 0, 0,
	549, 469, 550, 551, 374, 375, 376, 377, 337, 576,
	304, 472, 400, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 542, 539, 640, 0, 599, 600,
	0, 0, 466, 467, 332, 339, 485, 341, 303, 389,
	334, 451, 348, 0, 478, 543, 479, 602, 605, 603,
	604, 381, 344, 345, 414, 349, 359, 403, 450, 387,
	408, 301, 441, 415, 363, 529, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 583, 582, 581, 580, 579, 578,
	577, 0, 0, 526, 428, 313, 275, 309, 310, 317,
	629, 626, 432, 630, 0, 283, 506, 357, 159, 399,
	331, 571, 572, 0, 0, 231, 232, 233, 234, 235,
	236, 237, 238, 276, 239, 240, 241, 242, 243, 244,
	245, 248, 249, 250, 251, 252, 253, 254, 255, 574,
	246, 247, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 0, 0, 0, 277,
	278, 279, 280, 0, 0, 271, 272, 273, 274, 0,
	0, 0, 457, 458, 459, 481, 0, 443, 505, 627,
	0, 0, 0, 0, 0, 0, 0, 555, 567, 601,
	0, 611, 612, 614, 616, 615, 618, 420, 0, 620,
	621, 622, 619, 0, 0, 633, 496, 497, 634, 607,
	386, 0, 511, 544, 533, 617, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 1018, 0,
	356, 548, 530, 540, 531, 516, 517, 518, 525, 336,
	519, 520, 521, 491, 522, 492, 523, 524, 0, 547,
	498, 416, 370, 565, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 1025, 1026, 0, 0, 0,
	0, 299, 219, 493, 613, 495, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 422,
	1012, 300, 412, 452, 305, 419, 295, 385, 409, 0,
	0, 291, 437, 418, 367, 346, 347, 290, 0, 404,
	324, 338, 321, 383, 0, 436, 464, 320, 455, 1000,
	447, 293, 999, 446, 382, 433, 438, 368, 362, 0,
	292, 435, 366, 361, 350, 328, 480, 351, 352, 342,
	394, 360, 395, 343, 372, 371, 373, 0, 0, 0,
	0, 0, 475, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	610, 0, 449, 0, 0, 0, 0, 0, 0, 421,
	0, 0, 353, 0, 0, 0, 465, 0, 407, 388,
	636, 0, 0, 405, 358, 434, 396, 440, 423, 448,
	1016, 397, 284, 424, 323, 369, 296, 298, 318, 325,
	327, 329, 330, 378, 379, 391, 411, 425, 426, 427,
	322, 306, 406, 307, 340, 308, 285, 314, 312, 315,
	413, 316, 287, 392, 431, 0, 335, 402, 365, 288,
	364, 393, 430, 429, 297, 456, 462, 463, 552, 0,
	468, 637, 638, 639, 477, 0, 398, 482, 483, 484,
	486, 487, 488, 489, 553, 570, 537, 507, 470, 561,
	504, 508, 509, 573, 0, 0, 0, 461, 354, 355,
	0, 333, 281, 282, 632, 319, 384, 575, 608, 609,
	500, 0, 562, 501, 510, 311, 534, 546, 545, 380,
	460, 0, 557, 560, 490, 631, 0, 554, 569, 635,
	568, 628, 390, 0, 410, 566, 513, 0, 558, 532,
	0, 559, 528, 563, 0, 502, 0, 417, 442, 454,
	471, 474, 503, 588, 589, 590, 286, 473, 592, 593,
	594, 595, 596, 597, 1017, 591, 445, 535, 512, 538,
	453, 515, 514, 0, 0, 549, 1020, 550, 551, 374,
	375, 376, 377, 337, 576, 1015, 472, 400, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 542,
	539, 640, 0, 599, 600, 0, 0, 466, 467, 332,
	339, 485, 341, 303, 389, 334, 451, 348, 0, 478,
	543, 479, 602, 605, 603, 604, 1027, 1013, 1023, 1014,
	349, 359, 403, 450, 387, 408, 301, 441, 415, 1024,
	529, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 583,
	582, 581, 580, 579, 578, 577, 0, 0, 526, 428,
	313, 275, 309, 310, 317, 629, 626, 432, 630, 0,
	283, 506, 357, 0, 399, 331, 571, 572, 0, 0,
	231, 232, 233, 234, 235, 236, 237, 238, 276, 239,
	240, 241, 242, 243, 244, 245, 248, 249, 250, 251,
	252, 253, 254, 255, 574, 246, 247, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 0, 0, 0, 277, 278, 279, 280, 0, 0,
	271, 272, 273, 274, 0, 0, 0, 457, 458, 459,
	481, 0, 443, 505, 627, 0, 0, 0, 0, 0,
	0, 0, 555, 567, 601, 0, 611, 612, 614, 616,
	615, 618, 420, 0, 620, 621, 622, 619, 196, 0,
	633, 496, 497, 634, 607, 0, 0, 0, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 132, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 159, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 1025, 1026,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 1000, 447, 293, 999, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 1027,
	2030, 1023, 2031, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 1024, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 2894, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	2897, 0, 0, 0, 2896, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 1510, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	1508, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 1504, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 1508, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3949, 0, 218, 829, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 1508, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 2422, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 950,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 1508, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 2458, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	2460, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 2078, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	3103, 3105, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 2480, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 1508, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 646, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 829, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3926, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 3695, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 3828,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3534,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3710, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 3623, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	3137, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 3342, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	1508, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 2460, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 2816, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	2577, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	2536, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 2313, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 1865, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	1508, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 1898, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 1537, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 657, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 950,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 1487, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 318, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 1485, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 401, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 598, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 0, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 0, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 386, 0, 511, 544, 533, 617, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 356, 548, 530, 540, 531, 516, 517,
	518, 525, 336, 519, 520, 521, 491, 522, 492, 523,
	524, 0, 547, 498, 416, 370, 565, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 299, 219, 493, 613, 495, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 422, 439, 300, 412, 452, 305, 419, 295,
	385, 409, 0, 0, 291, 437, 418, 367, 346, 347,
	290, 0, 404, 324, 338, 321, 383, 0, 436, 464,
	320, 455, 0, 447, 293, 0, 446, 382, 433, 438,
	368, 362, 0, 292, 435, 366, 361, 350, 328, 480,
	351, 352, 342, 394, 360, 395, 343, 372, 371, 373,
	0, 0, 0, 0, 0, 475, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 610, 0, 449, 0, 0, 0, 0,
	0, 0, 421, 0, 0, 353, 0, 0, 0, 465,
	0, 407, 388, 636, 0, 0, 405, 358, 434, 396,
	440, 423, 448, 401, 397, 284, 424, 323, 369, 296,
	298, 725, 325, 327, 329, 330, 378, 379, 391, 411,
	425, 426, 427, 322, 306, 406, 307, 340, 308, 285,
	314, 312, 315, 413, 316, 287, 392, 431, 0, 335,
	402, 365, 288, 364, 393, 430, 429, 297, 456, 462,
	463, 552, 0, 468, 637, 638, 639, 477, 0, 398,
	482, 483, 484, 486, 487, 488, 489, 553, 570, 537,
	507, 470, 561, 504, 508, 509, 573, 0, 0, 0,
	461, 354, 355, 0, 333, 281, 282, 632, 319, 384,
	575, 608, 609, 500, 0, 562, 501, 510, 311, 534,
	546, 545, 380, 460, 0, 557, 560, 490, 631, 0,
	554, 569, 635, 568, 628, 390, 0, 410, 566, 513,
	0, 558, 532, 0, 559, 528, 563, 0, 502, 0,
	417, 442, 454, 471, 474, 503, 588, 589, 590, 286,
	473, 592, 593, 594, 595, 596, 597, 598, 591, 445,
	535, 512, 538, 453, 515, 514, 0, 0, 549, 469,
	550, 551, 374, 375, 376, 377, 337, 576, 304, 472,
	400, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 542, 539, 640, 0, 599, 600, 0, 0,
	466, 467, 332, 339, 485, 341, 303, 389, 334, 451,
	348, 0, 478, 543, 479, 602, 605, 603, 604, 381,
	344, 345, 414, 349, 359, 403, 450, 387, 408, 301,
	441, 415, 363, 529, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 583, 582, 581, 580, 579, 578, 577, 0,
	0, 526, 428, 313, 275, 309, 310, 317, 629, 626,
	432, 630, 0, 283, 506, 357, 0, 399, 331, 571,
	572, 0, 0, 231, 232, 233, 234, 235, 236, 237,
	238, 276, 239, 240, 241, 242, 243, 244, 245, 248,
	249, 250, 251, 252, 253, 254, 255, 574, 246, 247,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 0, 0, 0, 277, 278, 279,
	280, 0, 0, 271, 272, 273, 274, 0, 0, 0,
	457, 458, 459, 481, 0, 443, 505, 627, 0, 0,
	0, 0, 0, 0, 0, 555, 567, 601, 0, 611,
	612, 614, 616, 615, 618, 420, 0, 620, 621, 622,
	619, 0, 0, 633, 496, 497, 634, 607, 386, 0,
	511, 544, 533, 617, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 356, 548,
	530, 540, 531, 516, 517, 518, 525, 336, 519, 520,
	521, 491, 522, 492, 523, 524, 0, 547, 498, 416,
	370, 565, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 299,
	219, 493, 613, 495, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 422, 439, 300,
	412, 452, 305, 419, 295, 385, 409, 0, 0, 291,
	437, 418, 367, 346, 347, 290, 0, 404, 324, 338,
	321, 383, 0, 436, 464, 320, 455, 0, 447, 293,
	0, 446, 382, 433, 438, 368, 362, 0, 292, 435,
	366, 361, 350, 328, 480, 351, 352, 342, 394, 360,
	395, 343, 372, 371, 373, 0, 0, 0, 0, 0,
	475, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 610, 0,
	449, 0, 0, 0, 0, 0, 0, 421, 0, 0,
	353, 0, 0, 0, 465, 0, 407, 388, 636, 0,
	0, 405, 358, 434, 396, 440, 423, 448, 682, 397,
	284, 424, 323, 369, 296, 298, 318, 325, 327, 329,
	330, 378, 379, 391, 411, 425, 426, 427, 322, 306,
	406, 307, 340, 308, 285, 314, 312, 315, 413, 316,
	287, 392, 431, 0, 335, 402, 365, 288, 364, 393,
	430, 429, 297, 456, 462, 463, 552, 0, 468, 637,
	638, 639, 477, 0, 398, 482, 483, 484, 486, 487,
	488, 489, 553, 570, 537, 507, 470, 561, 504, 508,
	509, 573, 0, 0, 0, 461, 354, 355, 0, 333,
	281, 282, 632, 319, 384, 575, 608, 609, 500, 0,
	562, 501, 510, 311, 534, 546, 545, 380, 460, 0,
	557, 560, 490, 631, 0, 554, 569, 635, 568, 628,
	390, 0, 410, 566, 513, 0, 558, 532, 0, 559,
	528, 563, 0, 502, 0, 417, 442, 454, 471, 474,
	503, 588, 589, 590, 286, 473, 592, 593, 594, 595,
	596, 597, 683, 591, 445, 535, 512, 538, 453, 515,
	514, 0, 0, 549, 469, 550, 551, 374, 375, 376,
	377, 337, 576, 304, 472, 400, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 542, 539, 640,
	0, 599, 600, 0, 0, 466, 467, 332, 339, 485,
	341, 303, 389, 334, 451, 348, 0, 478, 543, 479,
	602, 605, 603, 604, 381, 344, 345, 414, 349, 359,
	403, 450, 387, 408, 301, 441, 415, 363, 529, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 583, 582, 581,
	580, 579, 578, 577, 0, 0, 526, 428, 313, 275,
	309, 310, 317, 629, 626, 432, 630, 0, 283, 506,
	357, 0, 399, 331, 571, 572, 0, 0, 231, 232,
	233, 234, 235, 236, 237, 238, 276, 239, 240, 241,
	242, 243, 244, 245, 248, 249, 250, 251, 252, 253,
	254, 255, 574, 246, 247, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 0,
	0, 0, 277, 278, 279, 280, 1980, 0, 271, 272,
	273, 274, 0, 0, 0, 457, 458, 459, 481, 0,
	443, 505, 627, 0, 0, 0, 0, 0, 0, 0,
	555, 567, 601, 0, 611, 612, 614, 616, 615, 618,
	420, 1983, 620, 621, 622, 619, 0, 0, 633, 496,
	497, 634, 607, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3687, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 1989, 0, 0, 1956,
	1958, 1960, 0, 1962, 1963, 1964, 1968, 1969, 1970, 1972,
	1975, 1976, 1977, 1973, 0, 0, 0, 0, 1961, 0,
	1965, 1974, 1966, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	1989, 0, 0, 1956, 1958, 1960, 1981, 1962, 1963, 1964,
	1968, 1969, 1970, 1972, 1975, 1976, 1977, 0, 0, 0,
	0, 0, 0, 0, 1965, 1974, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 1967, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 1953, 1955, 1989, 0, 0,
	1956, 1958, 1960, 0, 1962, 1963, 1964, 1968, 1969, 1970,
	1972, 1975, 1976, 1977, 0, 0, 0, 0, 0, 1971,
	0, 1965, 1974, 1966, 0, 1978, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3551,
}

var yyPact = [...]int{
	351, -1000, -1000, -1000, -321, 15253, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49025, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 444, 49025,
	-319, 30900, 47150, -1000, -1000, 2541, -1000, 47775, 17141, 49025,
	524, 522, 49025, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 924, -1000, 51525,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 870, 5211,
	50900, 11476, -220, -1000, 1574, -41, 2456, 476, -191, -192,
	1081, 1102, 1274, 1274, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 226, 945, 48400,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3983, 245, 923, 945, 22147, 137,
	134, 1574, 450, -90, 307, -1000, 1404, 3862, 202, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11476, 11476, 15253, -370, 15253, 11476, 49025, 49025, -1000, -1000,
	-1000, -1000, -319, 47775, 870, 5211, 11476, 2456, 476, -191,
	-192, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -90, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 134, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 5010, -1000, 1657, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2236, 3046, 1655, 2455, 827, 47150, 49025, -1000, 145,
	827, -1000, -1000, -1000, 1574, 3498, -1000, 49025, 49025, 232,
	1877, -1000, 558, 541, 445, 457, 350, 1654, -1000, -1000,
	-1000, -1000, -1000, -1000, 737, 3471, -1000, 49025, 49025, 3076,
	49025, -1000, 2201, 792, -1000, 5242, 3263, 1565, 968, 3096,
	-1000, -1000, 3045, -1000, 358, 359, 255, 764, 440, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 325, -1000, 3370, -1000,
	-1000, 343, -1000, -1000, 331, -1000, -1000, -1000, 122, -1000,
	-1000, -1000, -1000, -1000, -1000, -15, -1000, -1000, 1151, 1973,
	11476, 2452, -1000, 4019, 1665, -1000, -1000, -1000, 7074, 13988,
	13988, 13988, 13988, 49025, -1000, -1000, 2816, 11476, 3038, 3037,
	3029, 3027, -1000, -1000, -1000, -1000, -1000, -1000, 1653, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2010, -1000,
	-1000, -1000, 14616, -1000, 3023, 3011, 3001, 2999, 2998, 2996,
	2995, 2981, 2979, 2978, 2977, 2974, 2973, 2969, 2674, 16506,
	2968, 2454, 2449, 2966, 2964, 2963, 2447, 2958, 2957, 2956,
	2674, 2674, 2952, 2951, 2950, 2948, 2947, 2910, 2905, 2904,
	2903, 2899, 2898, 2884, 2882, 2879, 2878, 2877, 2875, 2874,
	2873, 2872, 2862, 2857, 2843, 2842, 2839, 2833, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1320, -1000, 2832, 3465, 2728, -1000, 3363, 3358, 3328,
	3324, -263, 2828, 2150, -1000, -1000, 112, 3470, 49025, -285,
	49025, 409, -100, -104, -111, -1000, -74, -1000, -1000, 1041,
	-1000, 1029, -1000, 869, 869, 869, 49025, 49025, 204, 952,
	869, 869, 869, 869, 869, 911, 869, 3382, 922, 921,
	920, 919, 869, -39, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1876, 1863, 3171, 996, -1000, -1000, -1000, -1000, 1530,
	49025, -1000, 2770, 409, 1757, 1757, 3443, 3443, 3379, 804,
	798, 759, 1757, 559, -1000, 1855, 1855, 1855, 1855, 1757,
	501, 771, 3388, 3388, 157, 1855, 54, 1757, 1757, 54,
	1757, 1757, -1000, 1858, 229, -271, -1000, -1000, -1000, -1000,
	1855, 1855, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3362,
	3357, 870, 870, 49025, 870, 200, 49025, 870, 870, 870,
	49025, 877, 52, 50275, 49650, 2398, 2201, 768, 753, 1542,
	1869, -1000, 1768, 49025, 49025, 1768, 1768, 25275, 24650, -1000,
	49025, -1000, 3465, 2728, 2659, 1481, 2657, 2728, -112, 409,
	870, 870, 870, 870, 870, 316, 870, 870, 870, 870,
	870, 49025, 49025, 46525, 870, 870, 870, 870, 9586, 9586,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15253,
	2072, 2210, 201, -4, -305, 302, -1000, -1000, 49025, 3223,
	315, -1000, -1000, -1000, 2690, -1000, 2760, 2760, 2760, 2760,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2760, 2760, 2768, 2825, -1000, -1000, 2759, 2759, 2759, 2690,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2765, 2765, 2766, 2766, 2765,
	49025, -123, -1000, -1000, 11476, 49025, 3252, 407, 2824, 827,
	-1000, -1000, 49025, 188, 424, 3465, 3250, 3388, 3426, -1000,
	-1000, 1652, 2149, 2435, -1000, 350, -1000, 437, 350, -1000,
	509, 509, 1717, -1000, 1095, -1000, -1000, -1000, -1000, -1000,
	-1000, 49025, -15, 417, -1000, -1000, 2407, 2823, -1000, 660,
	1554, 1478, -1000, 241, 5387, 39650, 2201, 39650, 49025, -1000,
	-1000, -1000, -1000, -1000, -1000, 115, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	340, -1000, 11476, 11476, 11476, 11476, 11476, -1000, 978, 13360,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13988, 13988, 13988,
	13988, 13988, 13988, 13988, 13988, 13988, 13988, 13988, 13988, 2809,
	1917, 13988, 13988, 13988, 13988, 27775, 1481, 3228, 1535, 300,
	1665, 1665, 1665, 1665, 11476, -1000, 1894, 1973, 11476, 11476,
	11476, 11476, 49025, -1000, -1000, 5149, 11476, 11476, 3744, 11476,
	3320, 11476, 11476, 11476, 2655, 5809, 49025, 11476, -1000, 2646,
	2641, -1000, -1000, 2034, 11476, -1000, -1000, 11476, -1000, -1000,
	11476, 13988, 11476, -1000, 11476, 11476, 11476, -1000, -1000, 2448,
	3320, 3320, 3320, 1853, 11476, 11476, 3320, 3320, 3320, 1849,
	3320, 3320, 3320, 3320, 3320, 3320, 3320, 3320, 3320, 3320,
	3320, 2634, 2631, 2630, 10848, 3388, -220, -1000, 8958, 3250,
	3388, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -267, 2821, 49025, 2434, 2433, -333, 184, 481, 49025,
	1142, -1000, -1000, 49025, 2148, 49025, 2144, 53, 1078, 1036,
	1043, -1000, 49025, 1906, 49025, 49025, 3312, -1000, 2819, 49025,
	869, 869, 869, -1000, 44650, 39650, 49025, 49025, 2201, 49025,
	49025, 49025, 869, 869, 869, 869, 49025, -1000, 3203, 39650,
	3175, 877, -1000, 49025, 1530, 3311, 49025, -1000, 3443, 13988,
	13988, -1000, -1000, 11476, -1000, 45900, 1855, 1757, 1757, -1000,
	-1000, 49025, -1000, -1000, -1000, 1855, 49025, 1855, 1855, 3443,
	1855, -1000, -1000, -1000, 1757, 1757, -1000, -1000, 11476, -1000,
	-1000, 1855, 1855, -1000, -1000, 3443, 49025, 106, 3443, 3443,
	80, -1000, -1000, -1000, 1757, 49025, 49025, 869, 49025, -1000,
	49025, 49025, -1000, -1000, 49025, 49025, 4341, 49025, 44650, 45275,
	3354, -1000, 39650, 49025, 49025, 1528, -1000, 903, 37150, -1000,
	1439, -1000, 12, -1000, 44, 52, 1768, 52, 1768, 900,
	-1000, 652, 668, 23400, 593, 39650, 6437, -1000, -1000, 1768,
	1768, 6437, 6437, 1694, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1522, -1000, 264, 3388, -1000, -1000, -1000, -1000, -1000,
	2143, -1000, 49025, 44650, 39650, 2201, 49025, 870, 49025, 49025,
	49025, 49025, 49025, -1000, 2818, 1651, -1000, 3257, 49025, 49025,
	49025, 49025, 1447, -1000, -1000, 20266, 1650, 1447, -1000, 1934,
	-1000, 11476, 15253, -247, 11476, 15253, 15253, 11476, 15253, -1000,
	11476, 303, -1000, -1000, -1000, -1000, 2140, -1000, 2139, -1000,
	-1000, -1000, -1000, -1000, 2431, 2431, -1000, 2130, -1000, -1000,
	-1000, -1000, 2125, -1000, -1000, 2123, -1000, -1000, -1000, -1000,
	-161, 2628, 1151, -1000, 2428, 3093, -221, -1000, 21522, 49025,
	49025, 407, -338, 1861, 1845, 1844, -1000, -221, -1000, 20894,
	49025, 3388, -1000, -226, 3250, 11476, 49025, -1000, 3378, -1000,
	-1000, 350, -1000, -1000, -1000, 509, 451, -1000, -1000, -1000,
	-1000, -1000, -1000, 1641, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 432, -91, -95, 1514, -1000, 49025,
	-1000, -1000, 241, 39650, 41525, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 252, -1000, -1000, 182, -1000, 893, 273, 1715,
	-1000, -1000, 210, 214, 194, 956, 1973, -1000, 1922, 1922,
	1918, -1000, 706, -1000, -1000, -1000, -1000, 2816, -1000, -1000,
	-1000, 2926, 4001, -1000, 1705, 1705, 1493, 1493, 1493, 1493,
	1493, 2241, 2241, -1000, -1000, -1000, 7074, 2809, 13988, 13988,
	13988, 13988, 974, 974, 3652, 3819, -1000, -1000, -1000, -1000,
	11476, 183, 1908, -1000, 11476, 2753, 1450, 2654, 1368, 1631,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2626, 2625, 2530, 3468, 2623, 11476, -1000, -1000, 1712, 1710,
	1707, -1000, 2437, 10220, -1000, -1000, -1000, 2620, 1630, 2616,
	-1000, -1000, -1000, 2613, 1706, 1283, 2608, 2790, 2606, 2605,
	2603, 2602, 1506, 11476, 11476, 11476, 11476, 2600, 1684, 1682,
	11476, 11476, 11476, 11476, 2597, 11476, 11476, 11476, 11476, 11476,
	11476, 11476, 11476, 11476, 11476, 49025, 156, 156, 156, 1489,
	1487, -1000, -1000, 1678, -1000, 1973, -1000, -1000, 3250, -1000,
	2805, 2122, 1467, -1000, -1000, -315, 2367, 49025, 49025, 180,
	49025, 2421, -286, 49025, -1000, -1000, 2414, -1000, -1000, -1000,
	1070, 1027, 1033, 2413, 3248, 3376, 957, 49025, 1186, 2797,
	49025, 49025, 49025, 301, -1000, -1000, 1362, -1000, 273, -23,
	533, 1284, 3075, 3467, -127, 49025, 49025, 49025, 49025, 3309,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 44025, -1000,
	2793, 1673, -1000, -1000, 1665, 1665, 1973, 3067, 49025, 49025,
	3443, 3443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1855,
	3443, 3443, 1340, 1757, 1855, -1000, -1000, 1855, -338, -1000,
	1855, -1000, -338, 1611, -338, 49025, -1000, -1000, -1000, 3298,
	2770, 1448, -1000, -1000, -1000, 3424, 891, 859, 859, 1075,
	556, 3421, 19016, -1000, 1758, 1152, 888, 3195, 353, -1000,
	1758, -158, 841, 1758, 1758, 1758, 1758, 1758, 1758, 1758,
	735, 718, 1758, 1758, 1758, 1758, 1758, 1758, 1758, 1758,
	1758, 1758, 1758, 1091, 1758, 1758, 1758, 1758, 1758, -1000,
	1758, 2792, 508, -1000, -1000, -1000, -1000, -1000, -1000, 761,
	654, 290, 3335, 385, -1000, 415, 1362, 3331, 426, 49025,
	49025, 3111, 1288, -1000, -1000, -1000, -1000, -1000, 28400, 28400,
	22775, 28400, -1000, 196, 52, 104, -1000, -1000, 1439, 6437,
	1439, 6437, 2121, -1000, -1000, 887, -1000, -1000, 1284, -1000,
	49025, 49025, -1000, -1000, 2791, 1835, -1000, -1000, 16506, -1000,
	6437, 6437, -1000, -1000, 30275, 49025, -1000, -16, -1000, -5,
	3250, -1000, 1195, -1000, -1000, 1434, 1284, 3092, 49025, 1195,
	1195, 1195, -1000, -1000, 17766, 49025, 49025, -1000, -1000, -1000,
	-1000, 3443, 9586, -1000, 37150, -1000, -1000, 43400, -1000, 42775,
	3443, 1884, -1000, 15253, 2189, 199, -1000, 293, -309, 192,
	2065, 190, 1973, -1000, -1000, 2594, 2593, 1671, -1000, 1659,
	2592, 1646, 1643, 2119, -1000, 61, -1000, 3204, 1300, -1000,
	2789, -1000, 1636, 3167, -1000, 1427, -1000, 1827, 1614, -1000,
	-1000, -1000, 11476, 42150, 11476, 1300, 1596, 3149, 1427, 3250,
	2409, -1000, 1402, -1000, 2295, 1608, 198, -1000, -1000, -1000,
	49025, 870, 2407, 1589, 41525, 1334, -1000, 886, 1600, 1586,
	-1000, 39650, 347, 39650, -1000, 39650, -1000, -1000, 401, -1000,
	49025, 3239, -1000, -1000, -1000, 2367, 1821, -337, 49025, -1000,
	-1000, -1000, -1000, -1000, 1584, -1000, 974, 974, 3652, 1635,
	-1000, 13988, -1000, 13988, 3222, -1000, 1883, -1000, 11476, 2114,
	4938, 11476, 4938, 1642, 26525, 49025, -1000, -1000, 11476, 11476,
	-1000, 3189, -1000, -1000, -1000, -1000, 11476, 11476, 2290, -1000,
	49025, -1000, -1000, -1000, -1000, 26525, -1000, 13988, -1000, -1000,
	-1000, -1000, 11476, 1302, 1302, 3183, 1582, 156, 156, 156,
	3137, 3103, 3085, 1557, 156, 3054, 3050, 3041, 3031, 2975,
	2931, 2865, 2840, 2830, 2807, 1549, -1000, 2788, -1000, -1000,
	1981, 12732, 8958, -1000, -1000, 299, 1389, 2118, 2401, 121,
	-1000, 1819, -1000, 2399, 49025, 49025, 1120, -1000, 49025, 3461,
	-1000, -1000, -1000, -1000, 1022, 2394, -1000, 462, 2047, 203,
	326, 2586, 1380, -1000, -1000, 49025, -1000, -1000, -1000, 17766,
	2770, 2779, 2770, 161, 1758, 648, 39650, 746, -1000, 49025,
	2156, 1818, 3091, 757, 3219, 49025, 2775, 408, 2774, 2773,
	3295, 500, 5174, 49025, 1293, -1000, 1576, 3862, -1000, 49025,
	-1000, 2201, -1000, 1757, -1000, -1000, 3443, -1000, -1000, 11476,
	11476, 3443, 1757, 1757, -1000, 1855, -1000, 49025, -1000, -338,
	500, 5174, 3294, 4629, 585, 2542, -1000, 49025, -1000, -1000,
	-1000, 822, -1000, 1040, 869, 49025, 1959, 1040, 1957, 2772,
	-1000, -1000, 49025, 49025, 49025, 49025, -1000, -1000, 49025, -1000,
	49025, 49025, 49025, 49025, 49025, 40900, -1000, 49025, 49025, -1000,
	49025, 1951, 49025, 1949, 3276, -1000, 1758, 1758, 985, -1000,
	-1000, 605, -1000, 40900, 2117, 2115, 2113, 2110, 2393, 2392,
	2389, 1758, 1758, 2109, 2380, 40275, 2378, 1150, 2101, 2100,
	2099, 2103, 2375, 1062, -1000, 2374, 2094, 2091, 2089, 49025,
	2771, 2309, 503, -1000, -1000, 2047, 161, 1758, 382, 49025,
	1816, 1815, 648, 529, -34, 24025, -1000, -1000, -1000, 49025,
	37150, 37150, 37150, 37150, 37150, -1000, 3141, 3122, 3135, -1000,
	3151, 3138, 3155, 2845, 49025, 37150, 2770, -1000, 40275, -1000,
	-1000, -1000, 1481, 1539, 3303, 1039, 11476, -1000, -1000, 4,
	13, -1000, -1000, -1000, -1000, 39650, 2372, 593, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3375, 49025, 49025, 818, 2585,
	1370, -1000, -1000, -1000, 5174, 2760, 2760, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2760, 2760, 2768, -1000,
	-1000, 2759, 2759, 2759, 2690, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2765, 2765, 2766, 2766, 2765,
	-1000, -1000, 3436, -1000, 1352, -1000, -1000, 1575, -1000, 3436,
	1900, -328, 15253, 1886, 1880, -1000, 11476, 15253, 11476, -248,
	368, -251, -1000, -1000, -1000, 2371, -1000, -1000, -1000, 2082,
	-1000, 2081, -1000, 164, 225, 1938, -221, 8958, 443, 49025,
	-221, 49025, 8958, -1000, 49025, 179, -349, -350, 173, 421,
	-221, 3375, 61, 11476, 3198, -1000, -1000, 49025, 2075, -1000,
	-1000, -1000, 3460, 39650, 2201, 1692, 39025, -1000, 339, -1000,
	251, 616, 2370, -1000, 918, 119, 2368, 2367, -1000, -1000,
	-1000, -1000, 13988, 1665, -1000, -1000, -1000, 1973, 11476, 2581,
	-1000, 1012, 1012, 2360, 2580, 2579, -1000, 2760, 2760, -1000,
	2690, 2759, 2690, 1012, 1012, 2571, -1000, 2146, 2726, -1000,
	2695, 2664, 11476, -1000, 2570, 3893, 1400, -51, -189, 156,
	156, -1000, -1000, -1000, -1000, 156, 156, 156, 156, -1000,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 830, -96, -275, -99, -277, -1000, 2568, 1349, -1000,
	-1000, -1000, -1000, -1000, 3744, 1346, 547, 547, 2367, 2363,
	-1000, 883, 2358, 1060, 49025, 2357, -288, -1000, 2356, -1000,
	-1000, 49025, 2349, -1000, 647, 49025, 49025, 2348, 2343, 1186,
	5174, 2566, 3287, 18391, 3265, 2163, -1000, -1000, -1000, 29650,
	607, -1000, -1000, -1000, 713, 363, 2074, 597, -1000, 49025,
	520, 3184, 1804, 2342, 49025, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3219, -1000, 955, 485, 35900, 15881, -1000, 400,
	49025, -1000, 18391, 18391, 400, 492, 1846, -1000, 827, 1241,
	142, 37150, 49025, -1000, 36525, 2565, -1000, 1284, 3443, -1000,
	1973, 1973, -338, 3443, 3443, 1757, -1000, -1000, 492, -1000,
	400, -1000, 1485, 19641, 557, 521, 519, -1000, 732, -1000,
	-1000, 826, 3194, 5174, -1000, 49025, -1000, 49025, -1000, 49025,
	49025, 869, 11476, 3194, 49025, 882, -1000, 1137, 463, 466,
	784, 784, 1342, -1000, 3245, -1000, -1000, 1335, -1000, -1000,
	-1000, -1000, 49025, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26525, 26525, 3323, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2339, 2338, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49025, 1529, -1000,
	1799, 2073, 2336, 2163, 29650, 1796, 1768, 2335, 2334, 607,
	2156, 1795, 915, 49025, -1000, 1267, 49025, 49025, -1000, 1263,
	-1000, 1794, 3051, 3080, 3051, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3124, -1000, 3068, -1000, -1000, -1000, 1263, -1000,
	-1000, -1000, -1000, -1000, 1039, -1000, 3374, 1040, 1040, 1040,
	2563, -1000, -1000, -1000, 1334, 2562, -1000, -1000, -1000, 3481,
	-1000, -1000, -1000, -1000, -1000, -1000, 17766, 3207, 3433, 3420,
	38400, 3433, -1000, -328, 1836, -1000, 2093, 187, 1903, 49025,
	-1000, -1000, -1000, 2555, 2548, -229, 185, 3419, 3418, 1105,
	-1000, 2545, 1327, -221, -1000, -1000, 1300, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -221, -1000, 1300, -1000, 164, -1000,
	-1000, 3208, -1000, -1000, 2201, -1000, 242, -1000, -1000, -1000,
	-1000, -1000, -1000, 258, -1000, 49025, -1000, 1309, 117, -1000,
	1973, -1000, -1000, -1000, -1000, -1000, 4938, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11476, -1000,
	-1000, -1000, 2624, -1000, -1000, 11476, 2543, 2329, 2536, 2327,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3465, -1000, 3416,
	1527, 2522, 2521, 1517, 2520, 2519, -1000, 11476, 2518, 3744,
	998, 2326, 998, -1000, -1000, 410, 29025, 49025, 3445, -1000,
	49025, 2325, -1000, -1000, 2047, 629, 664, -1000, -1000, -1000,
	-1000, 927, 400, 2516, 1305, -1000, -1000, -1000, -1000, 400,
	-1000, 2323, 271, -1000, -1000, -1000, -1000, 2321, 2310, 2071,
	-1000, -1000, 2051, 1590, 286, -1000, -1000, -1000, -1000, -1000,
	-1000, 2152, 49025, 37775, 2160, 1792, -343, -1000, 2752, -1000,
	1758, 1758, 1758, 49025, 1513, -1000, 1758, 1758, 2510, -1000,
	-1000, 2506, 2505, -128, 843, 1788, 1787, -1000, 2067, 28400,
	37150, 36525, 1259, -1000, 1570, -1000, -1000, -1000, -1000, -1000,
	-1000, 3443, 843, -1000, 552, 2066, 13988, 2750, 13988, 2749,
	579, 2742, 1502, -1000, 49025, -1000, -1000, 49025, 3950, 2738,
	-1000, 2732, 3066, 526, 2731, 2730, 49025, 2561, -1000, 3194,
	49025, 773, 3205, -1000, -1000, -1000, 458, -1000, -1000, 606,
	-1000, 49025, -1000, 49025, -1000, 1662, -1000, 26525, -1000, -1000,
	1490, -1000, 2309, 2308, 3744, -1000, -1000, 271, 2306, 6437,
	-1000, -1000, -1000, 3184, 2303, 2152, 49025, -1000, 49025, 1267,
	1267, 3465, 49025, 8958, -1000, -1000, 11476, 2719, -1000, 11476,
	-1000, -1000, -1000, -1000, -1000, 2711, 3224, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1833, -1000, 11476, 12104, -1000, -1000,
	866, 15253, -252, 365, -1000, -1000, -1000, -232, 2292, -1000,
	-1000, 3415, 2287, 2199, 49025, -1000, -1000, 1300, 1300, -229,
	-1000, -1000, 1284, -1000, -1000, 1135, 714, -1000, 2504, 2547,
	-1000, 2523, 156, -1000, 156, -1000, 222, 11476, -1000, 2280,
	-1000, -1000, -1000, 2272, -1000, -1000, 2420, -1000, 2502, -1000,
	2271, -1000, -1000, 49025, -1000, -1000, 1045, 2264, -344, 2263,
	2047, 2047, 49025, 5174, -144, -128, 18391, -144, -1000, -1000,
	380, -1000, -1000, 402, -1000, -1000, 2050, 661, -1000, -1000,
	2262, 610, -1000, 1267, -1000, 1785, 1970, 2228, 34025, 26525,
	27775, 2261, -1000, -1000, 35900, 1833, 1833, 4408, 340, 52251,
	-1000, 2710, 1104, 1759, -1000, 2064, -1000, 2063, -1000, 3443,
	1259, 126, -1000, -1000, 1658, -1000, 1104, 2542, 3414, -1000,
	3872, 49025, 2880, 49025, 2707, 1782, 13988, -1000, 826, 3144,
	-1000, -1000, 3950, -1000, -1000, 1974, 13988, -1000, -1000, 2257,
	27775, 986, 1781, 1780, 980, 2702, -1000, 658, 3480, -1000,
	-1000, -1000, 976, 2701, -1000, 1930, 1929, -1000, 49025, -1000,
	34025, 34025, 705, 705, 34025, 34025, 2699, 784, -1000, -1000,
	13988, -1000, -1000, 1758, -1000, -1000, -1000, 1758, 1618, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2160, -1000, -1000, 1195,
	-1000, 3388, -1000, -1000, 1973, 49025, 1973, 35275, -1000, 3412,
	3411, -1000, 1973, 240, -294, 2698, 2697, -1000, -328, 49025,
	49025, -236, 2062, -1000, 2256, 208, -1000, -1000, 1171, -232,
	-238, 80, 26525, 1776, -1000, -1000, -1000, -1000, -1000, 2489,
	-1000, 758, -1000, -1000, -1000, 1151, 2488, 2486, -1000, -1000,
	-1000, -1000, 49025, -1000, 2219, -1000, 2254, 2252, 621, -121,
	-1000, -1000, 449, -1000, -1000, -1000, 613, 2173, -1000, -1000,
	399, -1000, -1000, -1000, 2152, 2251, -1000, -1000, 114, -1000,
	1772, 1486, -1000, 2690, 11476, -1000, -1000, -1000, -1000, -1000,
	-1000, 824, -1000, 400, 52174, -1000, 1152, 27150, -1000, 1135,
	824, 508, 32775, 667, 295, -1000, 2059, -1000, -1000, 3465,
	-1000, 657, -1000, 566, -1000, 1482, -1000, 1470, 34650, 2058,
	2135, -1000, 52120, 969, -1000, -1000, 3652, -1000, -1000, -1000,
	-1000, -1000, -1000, 2249, 2244, -1000, -1000, -1000, -1000, -1000,
	2057, 2689, 66, 3317, 2239, -1000, -1000, 2688, 1464, 1458,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1449,
	1436, 34025, -1000, -1000, 3652, 2055, 26525, 1758, -1000, -1000,
	1433, 1432, -1000, -1000, -1000, -1000, -1000, -298, 2680, 11476,
	11476, -1000, -1000, -1000, 2677, -1000, -1000, 3408, -236, -241,
	2237, 149, 221, -1000, 2229, -1000, -1000, 670, -222, 150,
	146, 143, -1000, -1000, -1000, 11476, -1000, -1000, -1000, 109,
	-1000, 1770, -1000, -1000, 2047, 49025, 615, -1000, -1000, -1000,
	-1000, 256, -1000, -1000, -1000, -1000, -1000, -1000, 2228, 2226,
	-1000, 34025, 3245, 2395, 542, 3407, -1000, 52251, -1000, 1758,
	-1000, 542, 1426, -1000, 1758, 1758, -1000, 497, -1000, 1748,
	-1000, 2046, -1000, 3388, -1000, 494, -1000, 550, -1000, -1000,
	-1000, 1420, -1000, -1000, -1000, 52120, 553, -1000, 810, 2676,
	-1000, -1000, 2473, 11476, 2674, 1758, 2468, -116, 34025, 3055,
	3049, 2867, 2755, 1418, -1000, -1000, 26525, -1000, -1000, 33400,
	-1000, 2668, 1414, 1412, 49025, 2199, -1000, -1000, 2221, -1000,
	876, 205, 221, -1000, 3403, 195, 3402, 3397, 1139, 1912,
	-1000, 181, 177, 170, -1000, -1000, -1000, -1000, -1000, 2219,
	2218, 2215, 589, -1000, 338, -1000, -1000, -1000, 305, -1000,
	-1000, 3245, -1000, 3396, 585, -1000, 26525, -1000, -1000, 32775,
	1833, 1833, -1000, -1000, 2039, -1000, -1000, -1000, -1000, 2028,
	-1000, -1000, -1000, 1392, -1000, 49025, 1006, 8330, -1000, 2245,
	-1000, 49025, -1000, 3078, -1000, 284, 1364, 305, 705, 305,
	705, 305, 705, 305, 705, 335, -1000, -1000, -1000, 1358,
	11476, -1000, -1000, 1350, -1000, -1000, -1000, 2666, 2026, 185,
	191, 3393, -1000, 2199, 3390, 2199, 2199, -1000, 124, 670,
	-1000, -1000, -1000, -1000, -1000, -1000, 2209, -1000, -1000, -1000,
	-1000, 1758, 1758, 2205, 2204, 484, -1000, -1000, -1000, 32150,
	557, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 553, 52251,
	-1000, 8330, 1328, -1000, 1973, -1000, 784, -1000, -1000, 2883,
	2810, 3459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2662, 2412, -1000, 49025, 3307, 25900, 211, -1000,
	-1000, -1000, 2202, -1000, 2199, -1000, -1000, 1731, -1000, -273,
	2001, 1982, -1000, -1000, 49025, -1000, 49025, 552, -1000, 52251,
	1326, -1000, 8330, -1000, -1000, 3479, -1000, 3476, 1003, 1003,
	305, 305, 305, 305, 11476, -1000, -1000, -1000, 49025, -1000,
	1276, -1000, -1000, -1000, 1553, -1000, -1000, -1000, -1000, 2197,
	-1000, -1000, 2181, -1000, -1000, -1000, 1266, 2542, -1000, -1000,
	-1000, -1000, -1000, 2031, 685, -1000, 2365, 1124, -1000, 1730,
	-1000, 31525, 49025, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 49025, 7702, -1000, 1548, -1000, -1000, 1973, 49025, -1000,
}

var yyPgo = [...]int{
	0, 176, 3499, 254, 182, 4124, 106, 256, 257, 240,
	252, 4123, 4122, 4112, 4111, 3245, 3220, 4110, 4108, 4107,
	4106, 4105, 4104, 4101, 4100, 4094, 4091, 4090, 4088, 4085,
	4084, 4080, 4079, 4078, 4075, 4074, 4073, 4072, 4071, 4070,
	4069, 4068, 4067, 4065, 4063, 4062, 4059, 246, 4058, 4057,
	4056, 4054, 4053, 4052, 4051, 4050, 4049, 4048, 4047, 4046,
	4045, 4030, 4029, 4028, 4025, 4008, 4006, 4005, 4004, 4003,
	4000, 3998, 3997, 3996, 3995, 3992, 3990, 3989, 3988, 238,
	3987, 3984, 209, 3981, 3213, 3980, 3979, 3977, 3976, 3975,
	3974, 3972, 3971, 271, 3970, 3955, 3954, 3953, 3952, 3951,
	3949, 3948, 3945, 3944, 3943, 3942, 248, 3936, 3932, 3931,
	3930, 249, 3929, 220, 3926, 180, 142, 3924, 3922, 3921,
	3916, 3915, 3914, 3913, 3912, 3910, 3901, 3896, 3895, 3894,
	3891, 237, 205, 75, 3890, 52, 3888, 3887, 214, 3886,
	155, 3885, 151, 3882, 3881, 3880, 3879, 3871, 3869, 3868,
	3862, 3861, 3856, 3855, 3854, 3852, 3851, 3849, 3847, 3845,
	3843, 3841, 3840, 3838, 3836, 3833, 55, 3832, 264, 3831,
	81, 3830, 185, 3828, 78, 3827, 47, 138, 263, 2530,
	262, 255, 194, 178, 3825, 3824, 333, 3823, 168, 232,
	166, 122, 31, 3820, 148, 3815, 269, 48, 58, 245,
	152, 64, 158, 115, 3814, 212, 110, 112, 3811, 3810,
	145, 3809, 241, 187, 3808, 104, 3807, 3805, 3804, 3789,
	3785, 203, 195, 3784, 3783, 143, 3782, 3781, 74, 134,
	3780, 77, 127, 177, 121, 3779, 1589, 133, 89, 3778,
	123, 100, 3777, 124, 3775, 3774, 3773, 3772, 186, 3771,
	3770, 136, 80, 3769, 3768, 3765, 71, 3764, 82, 3763,
	39, 3760, 56, 3758, 3755, 3754, 3748, 3747, 3746, 3744,
	3743, 3742, 3741, 3739, 3738, 51, 3736, 3735, 7, 14,
	17, 3734, 27, 3732, 175, 3731, 3730, 174, 3728, 198,
	3727, 3726, 97, 92, 3724, 96, 172, 3723, 9, 28,
	72, 3722, 3720, 225, 340, 107, 157, 3718, 274, 3717,
	3716, 3715, 164, 3713, 3712, 655, 3709, 3707, 3705, 3703,
	3702, 3701, 137, 3700, 1, 223, 44, 3699, 135, 147,
	3698, 42, 33, 3696, 59, 118, 222, 141, 98, 3695,
	3694, 3693, 139, 199, 117, 29, 0, 99, 227, 159,
	3690, 3689, 3687, 259, 3686, 234, 210, 239, 290, 260,
	250, 3685, 3684, 76, 3681, 169, 30, 57, 144, 94,
	22, 219, 3680, 1290, 8, 190, 3679, 211, 3678, 11,
	16, 253, 154, 3677, 3676, 36, 265, 3674, 3673, 3672,
	140, 3671, 3669, 308, 87, 3667, 3665, 3664, 3663, 38,
	3662, 37, 20, 3661, 130, 3660, 261, 3659, 193, 162,
	188, 184, 165, 230, 233, 86, 83, 3657, 1869, 156,
	111, 15, 3655, 228, 3654, 201, 126, 3653, 101, 3652,
	243, 266, 207, 3651, 191, 10, 50, 41, 32, 49,
	12, 334, 206, 3649, 3647, 23, 54, 3645, 93, 3644,
	21, 3643, 3642, 43, 3641, 65, 5, 3640, 3639, 19,
	18, 3637, 40, 226, 179, 132, 102, 67, 3636, 3634,
	53, 161, 3633, 167, 173, 163, 3632, 79, 3631, 3630,
	3628, 3626, 907, 3625, 258, 3624, 3623, 3622, 3619, 3618,
	3616, 3615, 3614, 3611, 221, 3610, 153, 45, 3607, 3605,
	3604, 3603, 84, 149, 3599, 3598, 3597, 3596, 35, 150,
	3595, 13, 3594, 24, 26, 34, 3593, 105, 3592, 3,
	200, 3590, 3588, 4, 3586, 3585, 2, 3584, 3583, 113,
	3581, 103, 25, 170, 109, 3578, 3576, 95, 208, 146,
	3574, 3572, 90, 242, 204, 3571, 114, 235, 276, 3570,
	216, 3567, 3566, 3565, 3561, 3560, 3557, 1207, 3556, 3555,
	236, 66, 91, 3552, 229, 129, 3550, 3547, 88, 171,
	125, 128, 61, 85, 3545, 119, 202, 3544, 196, 3541,
	268, 3540, 3539, 108, 3538, 3537, 3536, 3535, 192, 3534,
	3533, 197, 231, 3532, 3530, 273, 3529, 3528, 3527, 3526,
	3524, 3523, 3518, 3517, 3516, 3515, 303, 251, 3501,
}

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:12601
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) PartitionNamesUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) allCDCOptionUnion() *tree.AllOrNotCDC {
	v, _ := st.union.(*tree.AllOrNotCDC)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterPartitionOptionUnion() tree.AlterPartitionOption {
	v, _ := st.union.(tree.AlterPartitionOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) applyTableExprUnion() *tree.ApplyTableExpr {
	v, _ := st.union.(*tree.ApplyTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) atTimeStampUnion() *tree.AtTimeStamp {
	v, _ := st.union.(*tree.AtTimeStamp)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() *tree.GroupByClause {
	v, _ := st.union.(*tree.GroupByClause)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) renameTableOptionUnion() *tree.AlterTable {
	v, _ := st.union.(*tree.AlterTable)
	return v
}

func (st *yySymType) renameTableOptionsUnion() []*tree.AlterTable {
	v, _ := st.union.([]*tree.AlterTable)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) retentionOptionUnion() *tree.RetentionOption {
	v, _ := st.union.(*tree.RetentionOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) snapshotObjectUnion() tree.ObjectInfo {
	v, _ := st.union.(tree.ObjectInfo)
	return v
}

func (st *yySymType) sourceOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) upgrade_targetUnion() *tree.Target {
	v, _ := st.union.(*tree.Target)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 601, 604, 604, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 121,
	121, 337, 337, 338, 338, 123, 333, 333, 332, 332,
	124, 125, 126, 580, 580, 127, 128, 158, 579, 579,
	160, 160, 160, 160, 160, 453, 122, 122, 122, 122,
	122, 164, 164, 164, 164, 164, 120, 586, 586, 586,
	587, 587, 117, 147, 146, 149, 149, 148, 148, 145,
	145, 141, 144, 144, 143, 143, 142, 137, 139, 139,
	138, 140, 140, 118, 106, 119, 528, 528, 527, 527,
	526, 526, 478, 478, 479, 479, 324, 324, 324, 525,
	525, 525, 524, 524, 523, 523, 522, 522, 520, 520,
	521, 519, 518, 518, 518, 516, 516, 516, 512, 512,
	514, 513, 513, 515, 507, 507, 510, 510, 508, 508,
	508, 508, 511, 506, 506, 506, 505, 505, 105, 105,
	105, 420, 420, 104, 104, 434, 434, 434, 434, 434,
	432, 432, 432, 432, 432, 432, 431, 431, 430, 430,
	435, 435, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 94, 94, 94, 94, 94, 94, 99,
	99, 99, 100, 592, 592, 591, 591, 593, 593, 593,
	593, 594, 594, 97, 97, 97, 98, 429, 429, 429,
	95, 96, 96, 419, 419, 424, 424, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	428, 428, 428, 426, 426, 425, 425, 427, 427, 88,
	88, 88, 91, 90, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 89, 89, 89, 89, 89, 89, 83,
	83, 83, 83, 83, 82, 82, 84, 84, 416, 416,
	415, 101, 101, 102, 589, 589, 588, 590, 590, 590,
	590, 103, 109, 109, 109, 109, 109, 109, 109, 109,
	108, 108, 111, 111, 110, 112, 93, 93, 93, 93,
	93, 93, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 553, 553,
	553, 553, 555, 555, 351, 352, 605, 354, 350, 350,
	350, 549, 549, 550, 551, 552, 552, 552, 107, 14,
	211, 211, 452, 452, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 13, 81, 86, 86, 87, 288,
	288, 289, 283, 283, 290, 290, 163, 291, 291, 291,
	296, 296, 297, 297, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 270, 270, 270, 265,
	265, 265, 265, 266, 266, 267, 267, 268, 268, 268,
	268, 269, 269, 343, 343, 292, 292, 292, 294, 294,
	293, 287, 285, 285, 285, 285, 285, 285, 285, 286,
	286, 286, 286, 295, 295, 79, 85, 85, 85, 85,
	567, 567, 80, 578, 578, 482, 482, 365, 365, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 488, 489, 361, 47, 47,
	47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 54, 57, 58, 162, 53, 53, 53, 405,
	405, 52, 606, 606, 336, 336, 67, 66, 56, 68,
	69, 70, 71, 72, 73, 51, 65, 65, 65, 65,
	65, 65, 65, 65, 76, 501, 501, 608, 608, 608,
	74, 75, 481, 481, 481, 64, 63, 62, 61, 60,
	60, 50, 50, 49, 49, 55, 153, 59, 154, 154,
	358, 358, 358, 360, 360, 356, 607, 607, 448, 448,
	359, 359, 48, 48, 48, 48, 77, 357, 357, 335,
	355, 355, 355, 12, 12, 10, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 26, 27, 29, 413, 413, 410, 28,
	20, 19, 19, 23, 22, 18, 18, 21, 24, 25,
	25, 9, 9, 9, 9, 15, 15, 16, 183, 183,
	237, 237, 561, 561, 557, 557, 558, 558, 558, 559,
	559, 560, 560, 113, 495, 495, 495, 495, 495, 495,
	8, 8, 206, 206, 494, 494, 494, 494, 494, 494,
	417, 417, 417, 538, 538, 538, 539, 205, 205, 200,
	200, 496, 496, 382, 540, 540, 504, 504, 503, 503,
	502, 502, 203, 203, 204, 204, 186, 186, 132, 132,
	509, 509, 509, 509, 517, 517, 477, 477, 275, 275,
	326, 326, 327, 327, 176, 176, 177, 177, 177, 177,
	177, 177, 595, 595, 596, 597, 598, 598, 599, 599,
	599, 600, 600, 600, 600, 600, 546, 546, 548, 548,
	547, 202, 202, 198, 198, 199, 199, 199, 197, 197,
	196, 195, 195, 194, 192, 192, 192, 193, 193, 193,
	210, 210, 179, 179, 179, 178, 178, 178, 178, 178,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 180, 180, 554, 554, 554, 483, 483, 483,
	491, 491, 305, 305, 306, 306, 306, 306, 306, 130,
	130, 487, 487, 304, 304, 181, 181, 182, 182, 182,
	182, 303, 303, 302, 191, 191, 190, 189, 189, 189,
	184, 184, 184, 184, 185, 314, 314, 313, 313, 312,
	312, 312, 312, 116, 129, 129, 131, 209, 209, 311,
	310, 310, 310, 310, 208, 208, 207, 207, 201, 201,
	188, 188, 188, 188, 309, 187, 307, 585, 585, 584,
	584, 583, 581, 581, 581, 582, 582, 582, 582, 530,
	530, 530, 530, 530, 344, 344, 344, 349, 349, 347,
	347, 347, 347, 347, 353, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 39, 220, 221,
	40, 222, 222, 223, 223, 224, 224, 225, 226, 227,
	227, 227, 227, 38, 212, 212, 213, 213, 214, 214,
	215, 216, 216, 216, 219, 217, 218, 218, 603, 603,
	602, 37, 37, 30, 167, 167, 168, 168, 168, 170,
	170, 271, 271, 271, 169, 169, 171, 171, 171, 562,
	564, 564, 566, 565, 565, 565, 568, 568, 568, 568,
	568, 569, 569, 569, 569, 570, 570, 31, 150, 150,
	174, 174, 155, 573, 573, 573, 572, 572, 574, 574,
	575, 575, 330, 330, 331, 331, 165, 166, 166, 157,
	152, 173, 173, 173, 173, 173, 175, 175, 239, 239,
	151, 156, 159, 161, 563, 571, 571, 571, 414, 414,
	411, 412, 412, 409, 408, 408, 408, 577, 577, 576,
	576, 576, 345, 345, 32, 404, 404, 406, 407, 407,
	407, 398, 398, 398, 398, 36, 402, 402, 403, 403,
	403, 403, 403, 403, 403, 399, 399, 401, 401, 397,
	397, 397, 397, 397, 397, 397, 35, 172, 172, 396,
	396, 393, 393, 391, 391, 392, 392, 390, 390, 390,
	394, 394, 43, 78, 44, 45, 46, 42, 395, 395,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	134, 133, 133, 133, 133, 133, 136, 136, 329, 329,
	328, 328, 135, 272, 272, 41, 250, 250, 469, 469,
	464, 464, 464, 464, 464, 485, 485, 485, 465, 465,
	465, 466, 466, 466, 468, 468, 468, 467, 467, 467,
	467, 467, 484, 484, 486, 486, 486, 436, 436, 437,
	437, 437, 440, 440, 456, 456, 457, 457, 455, 455,
	462, 462, 461, 461, 460, 460, 459, 459, 458, 458,
	458, 458, 451, 451, 450, 450, 438, 438, 438, 438,
	438, 439, 439, 439, 449, 449, 454, 454, 301, 301,
	300, 300, 258, 258, 259, 259, 299, 299, 256, 256,
	257, 257, 257, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 536,
	536, 537, 261, 261, 273, 273, 273, 273, 273, 273,
	260, 260, 262, 262, 238, 238, 236, 236, 228, 228,
	228, 228, 228, 229, 229, 230, 230, 231, 231, 231,
	235, 235, 234, 234, 234, 234, 232, 232, 233, 233,
	233, 233, 233, 233, 422, 422, 533, 533, 534, 534,
	529, 529, 529, 532, 532, 532, 532, 532, 532, 532,
	535, 535, 535, 531, 531, 240, 323, 323, 323, 346,
	346, 346, 346, 348, 322, 322, 322, 255, 255, 254,
	254, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 421, 421, 362, 362, 363, 363, 282,
	281, 281, 281, 281, 281, 279, 280, 278, 278, 278,
	278, 278, 277, 277, 276, 276, 276, 400, 400, 274,
	274, 264, 264, 264, 263, 263, 263, 463, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 320, 320, 320,
	321, 321, 321, 321, 321, 321, 321, 321, 372, 372,
	378, 378, 545, 545, 544, 241, 241, 241, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 251, 251, 251,
	445, 445, 445, 445, 446, 446, 446, 446, 447, 447,
	447, 443, 443, 444, 444, 383, 384, 384, 492, 492,
	493, 493, 441, 441, 442, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 500, 500,
	500, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 556, 556, 556,
	541, 541, 541, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 318, 318, 318, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 385, 385, 386, 386, 497, 497, 497,
	497, 497, 497, 498, 498, 499, 499, 499, 499, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 370, 315,
	315, 315, 387, 379, 379, 380, 380, 381, 381, 373,
	373, 373, 373, 373, 373, 374, 374, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 375,
	375, 377, 377, 389, 389, 389, 388, 388, 388, 388,
	388, 388, 388, 253, 253, 253, 253, 367, 367, 367,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 243, 243, 243, 243, 247, 247, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 248, 248, 248, 248, 248, 246, 246, 246,
	246, 246, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 114, 115, 115, 245, 325, 325, 470, 470, 473,
	473, 471, 471, 472, 474, 474, 474, 475, 475, 475,
	476, 476, 476, 480, 480, 334, 334, 334, 342, 342,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	8, 0, 2, 0, 2, 11, 1, 3, 0, 3,
	3, 3, 3, 1, 2, 4, 5, 6, 1, 2,
	7, 9, 10, 10, 12, 1, 5, 6, 8, 10,
	9, 5, 7, 9, 8, 6, 4, 0, 1, 1,
	0, 1, 5, 2, 2, 6, 9, 6, 9, 4,
	7, 8, 0, 1, 1, 2, 4, 6, 1, 2,
	4, 0, 2, 10, 11, 2, 0, 2, 1, 3,
	3, 3, 0, 2, 0, 2, 1, 3, 5, 0,
	2, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 0, 3, 3, 0, 3, 3, 0, 1,
	3, 0, 1, 3, 0, 2, 1, 2, 3, 4,
	3, 3, 1, 0, 1, 1, 0, 1, 8, 5,
	7, 0, 3, 8, 5, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 4,
	1, 3, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 2, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 4, 5, 1, 3, 3, 1, 2, 2, 2,
	1, 2, 2, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 2, 2, 0, 1, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 3, 4, 4, 1, 2, 9, 7, 1, 3,
	3, 1, 1, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	3, 4, 4, 5, 3, 4, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 1, 1, 1, 1, 6, 4,
	1, 1, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 10, 7, 4, 4, 3, 1,
	3, 3, 1, 3, 1, 6, 7, 3, 3, 3,
	1, 1, 1, 3, 2, 4, 5, 5, 6, 5,
	5, 3, 2, 2, 1, 3, 4, 3, 7, 5,
	8, 2, 2, 1, 3, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 2, 1, 3,
	2, 1, 2, 2, 1, 2, 3, 2, 2, 3,
	6, 3, 3, 1, 1, 7, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 3, 3, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 5, 3, 3,
	2, 4, 4, 4, 4, 4, 1, 1, 1, 3,
	3, 1, 1, 1, 6, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 4, 7,
	7, 5, 4, 7, 8, 3, 3, 2, 3, 4,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 5, 5, 6, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 5, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 4, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 6, 4, 5, 7,
	4, 5, 0, 1, 3, 8, 0, 6, 0, 4,
	6, 1, 1, 1, 1, 1, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	0, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 4, 7, 6, 6, 3,
	5, 0, 2, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 1,
	4, 4, 4, 3, 3, 2, 2, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 7, 1, 1,
	7, 1, 3, 0, 1, 1, 3, 1, 3, 0,
	1, 1, 1, 14, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 4, 1, 1, 1, 1, 0, 1,
	2, 9, 9, 7, 1, 2, 3, 3, 3, 0,
	4, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 4, 1, 1, 1, 3, 3, 4, 3,
	3, 0, 1, 1, 1, 0, 2, 7, 8, 10,
	2, 2, 8, 0, 3, 3, 0, 3, 0, 3,
	0, 5, 1, 3, 0, 3, 3, 0, 2, 9,
	8, 0, 2, 2, 3, 3, 0, 2, 0, 2,
	4, 4, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 3,
	2, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 8, 2, 4, 4, 4, 9, 0, 2,
	11, 9, 11, 8, 6, 9, 7, 10, 7, 6,
	2, 2, 9, 4, 5, 3, 0, 4, 1, 3,
	0, 3, 6, 0, 2, 10, 0, 2, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 2, 1, 0, 3, 2,
	4, 3, 0, 1, 0, 1, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 1, 3,
	3, 3, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 5, 1,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 4, 0, 5,
	5, 5, 5, 0, 1, 1, 3, 1, 1, 1,
	1, 1, 7, 9, 7, 9, 2, 1, 7, 9,
	7, 9, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 3,
	3, 2, 2, 1, 5, 6, 4, 1, 1, 1,
	5, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	4, 1, 1, 2, 5, 6, 8, 6, 6, 6,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 4,
	7, 9, 7, 7, 7, 9, 7, 7, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 2, 0, 1, 6, 8, 8, 6, 6, 5,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	2, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	4, 4, 4, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 1, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 1, 3, 4,
	4, 5, 4, 5, 3, 4, 5, 6, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -601, -604, -2, -5, 628, -1, -4, -115, -88,
	-7, -14, -117, -118, -8, -113, -9, -10, -12, -92,
	-108, -110, -112, -111, -47, -11, -107, -82, -83, -94,
	-101, -104, -105, -106, -119, -114, -116, -176, -120, -121,
	-122, -164, -125, -127, -128, 618, -89, -90, -91, -33,
	-32, -31, -30, -150, -155, -158, -160, -123, 551, 624,
	454, 14, 503, -15, -16, -546, -17, 263, -350, -351,
	-352, -354, -605, -48, -49, -50, -60, -61, -62, -63,
	-64, -74, -75, -76, -51, -52, -53, -56, -54, -67,
	-66, -68, -69, -70, -71, -72, -73, -55, -59, -153,
	-154, -77, -57, -78, -58, -162, -124, -80, -79, -85,
	-81, -86, -152, -157, -13, -163, -87, 237, -84, 76,
	-95, -96, -97, -98, -99, -100, -102, -103, 378, 384,
	441, 617, 61, -177, -179, 642, 643, 646, 538, 541,
	161, 162, 164, 165, -34, -35, -36, -37, -38, -39,
	-41, -40, -42, -43, -44, -45, -46, 233, 16, 546,
	-18, -21, -19, -22, -20, -28, -29, -27, -24, -26,
	-151, -25, -156, -23, -159, -161, -126, 258, 257, 38,
	324, 325, 326, 382, 256, 234, 236, 15, 31, 42,
	357, -178, 84, 539, 235, -180, 13, 648, -6, -3,
	-2, -137, -141, -145, -148, -149, -146, -147, -4, -115,
	119, 248, 619, -346, 374, 620, 622, 621, 87, 95,
	-339, -341, 454, 263, 378, 384, 617, 643, 646, 538,
	541, 553, 554, 555, 556, 557, 558, 559, 560, 562,
	563, 564, 565, 566, 567, 568, 578, 579, 569, 570,
	571, 572, 573, 574, 575, 576, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	506, 603, 604, 605, 606, 534, 561, 597, 598, 599,
	600, 355, 356, 543, 275, 299, 409, 305, 312, 161,
	180, 174, 203, 194, 539, 169, 279, 317, 280, 94,
	164, 489, 109, 466, 438, 167, 294, 296, 298, 535,
	536, 368, 301, 533, 300, 302, 304, 537, 281, 358,
	190, 185, 293, 277, 183, 282, 40, 283, 208, 284,
	285, 548, 462, 354, 468, 309, 52, 436, 184, 463,
	297, 465, 212, 216, 480, 481, 178, 179, 470, 483,
	207, 210, 211, 255, 351, 352, 43, 545, 267, 484,
	214, 206, 201, 492, 313, 311, 205, 177, 200, 278,
	65, 218, 217, 219, 432, 433, 434, 435, 286, 287,
	372, 479, 197, 186, 359, 170, 23, 487, 262, 467,
	385, 288, 306, 314, 213, 215, 269, 274, 329, 547,
	440, 273, 310, 485, 182, 266, 295, 261, 488, 171,
	387, 289, 165, 303, 482, 491, 64, 400, 176, 168,
	635, 252, 162, 271, 276, 290, 291, 292, 532, 316,
	315, 307, 540, 198, 268, 204, 188, 175, 199, 163,
	270, 490, 401, 615, 357, 419, 196, 193, 272, 245,
	486, 469, 166, 423, 402, 191, 318, 610, 611, 612,
	373, 350, 319, 320, 189, 259, 460, 461, 323, 429,
	341, 403, 439, 410, 404, 225, 226, 327, 472, 474,
	209, 613, 330, 331, 332, 464, 333, 334, 335, 336,
	377, 56, 58, 96, 99, 98, 644, 645, 63, 29,
	363, 366, 398, 405, 343, 616, 544, 340, 344, 345,
	367, 25, 421, 389, 425, 424, 48, 49, 50, 53,
	54, 55, 57, 59, 60, 51, 531, 382, 395, 493,
	45, 47, 392, 27, 369, 420, 442, 339, 422, 453,
	46, 451, 452, 473, 26, 371, 370, 62, 44, 428,
	430, 431, 321, 337, 380, 625, 494, 375, 391, 394,
	376, 342, 365, 396, 67, 66, 388, 626, 383, 381,
	338, 549, 550, 346, 577, 360, 437, 528, 527, 526,
	525, 524, 523, 522, 521, 324, 325, 326, 406, 407,
	408, 418, 411, 412, 413, 414, 415, 416, 417, 456,
	457, 627, 475, 477, 478, 476, 240, 647, 361, 362,
	243, 629, 630, 97, 631, 633, 632, 28, 634, 640,
	637, 638, 639, -427, -425, -346, 539, 617, 384, 538,
	541, 378, 357, 643, 646, 382, 263, 324, 325, 326,
	454, 355, -222, -346, 647, -186, 247, 39, -236, -346,
	-186, -84, -16, -15, -178, -179, -236, 242, -355, 24,
	436, -93, 437, 237, 238, 84, 77, -346, -9, -106,
	-8, -113, -82, -176, 441, -353, -346, 324, 324, -353,
	242, -348, 273, 417, -346, -482, 248, -431, -404, 274,
	-430, -406, -433, -407, 32, 233, 235, 234, 551, 270,
	16, 382, 244, 14, 13, 383, 256, 25, 26, 28,
	15, 384, 386, 29, 387, 390, 391, 392, 42, 395,
	396, 263, 87, 95, 90, 281, -221, -346, -381, -373,
	116, -376, -368, -369, -371, -324, -520, -366, 84, 143,
	144, 151, 117, 649, -370, -463, 36, 119, 557, 561,
	597, 504, -316, -317, -318, -319, -320, -321, -346, -521,
	-519, 90, 100, 102, 106, 107, 105, 103, 155, 187,
	104, 91, 156, -179, 87, -541, 567, -340, 590, 603,
	604, 605, 606, 589, 61, -490, -499, 241, -497, 154,
	192, 259, 188, 14, 149, 429, 189, 598, 599, 600,
	564, 586, 506, 568, 578, 593, 559, 560, 562, 554,
	555, 556, 558, 569, 571, 585, -500, 581, 591, 592,
	577, 601, 602, 641, 594, 595, 596, 633, 89, 88,
	584, 583, 570, 565, 566, 572, 553, 563, 573, 574,
	582, 587, 588, 366, 109, 367, 368, 496, 358, 369,
	248, 436, 70, 370, 371, 372, 373, 374, 503, 375,
	71, 376, 365, 263, 419, 377, 191, 209, 508, 507,
	509, 500, 497, 495, 498, 499, 501, 502, 575, 576,
	580, -129, -131, 608, -595, -308, -596, 6, 7, 8,
	9, -597, 156, -586, 438, 547, 90, 317, 355, 17,
	496, 636, 537, 636, 537, 166, 163, -418, 166, 115,
	171, 170, -418, 636, 168, 635, 327, 269, -395, -167,
	355, 419, 333, 96, 273, -398, -396, 535, -484, 321,
	317, 293, 243, 112, -168, 253, 252, 110, 496, 241,
	393, 312, 56, 58, -557, -558, 230, 231, 232, -548,
	529, -547, -346, 636, 368, 98, 99, 635, 27, 242,
	379, 269, 474, 472, 473, 475, 476, 477, 478, -65,
	-501, -481, 469, 468, -359, 461, 467, 459, 471, 462,
	356, 335, 551, 334, 233, 629, 536, 530, -334, 403,
	439, 493, 494, 380, 440, 480, 482, 463, 109, 195,
	192, 243, 245, 242, 635, 355, 496, 419, 96, 333,
	242, -557, 163, 480, 482, 438, 273, 417, 41, -424,
	429, -423, -425, 481, 492, 88, 89, 479, -334, 109,
	460, 460, -595, -308, -177, -179, -116, -546, 537, 636,
	243, 355, 419, 273, 244, 242, 532, 535, 245, 496,
	241, 324, 379, 269, 333, 96, 168, 635, -483, -554,
	32, -491, 227, 228, 229, 33, 34, -1, 123, 648,
	-373, -373, -6, 651, -6, -373, -346, -346, 158, -243,
	-247, -244, -246, -245, -249, -248, 192, 193, 154, 196,
	202, 198, 199, 200, 201, 203, 204, 205, 206, 207,
	210, 211, 208, 31, 209, 259, 188, 189, 190, 191,
	212, 174, 194, 544, 220, 175, 221, 176, 222, 177,
	223, 178, 179, 224, 180, 183, 184, 185, 186, 182,
	157, -211, 90, 32, 84, 157, 90, -203, 265, -186,
	-236, -228, 157, 649, -203, -595, -196, -197, 11, -236,
	-322, -346, 438, 126, -93, 77, -93, 437, 77, -93,
	437, 237, -549, -550, -551, -553, 237, 437, 436, 238,
	-111, 157, 281, 17, -353, -353, 82, -236, -406, 273,
	-431, -404, 36, 81, 158, 246, 158, 81, 84, 380,
	355, 419, 381, 496, 242, 393, 245, 273, 394, 355,
	419, 242, 245, 496, 273, 355, 242, 245, 419, 273,
	394, 355, 459, 460, 245, 27, 385, 388, 389, 460,
	-505, 492, 158, 115, 112, 113, 114, -373, 133, -388,
	126, 127, 128, 129, 130, 131, 132, 140, 139, 150,
	143, 144, 145, 146, 147, 148, 149, 141, 142, 136,
	116, 134, 138, 135, 118, 153, -179, -373, -381, 61,
	-371, -371, -371, -371, -346, -463, -378, -373, 84, 84,
	84, 84, 157, 103, 90, -373, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, -498, 84,
	84, -385, -386, 84, 84, -366, -322, 84, 90, 90,
	84, 84, 84, 90, 84, 84, 84, -386, -386, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, -197, 158, -196, 84, -196,
	-197, -180, -179, 32, 33, 32, 33, 32, 33, 32,
	33, -598, 626, 84, 100, 644, 225, 17, -346, 635,
	-346, -580, 32, 540, 540, 540, 540, 485, 546, 169,
	170, 171, -393, 248, -393, -393, -220, -346, -222, 379,
	245, 532, 245, -168, -393, -393, -393, -393, -393, 244,
	-393, 24, 242, 242, 242, 242, -393, 503, 126, 126,
	59, -559, 173, 158, -548, -202, 84, -580, -358, 134,
	138, -358, -304, 18, -304, 24, 271, 271, 271, -358,
	311, -606, -607, 17, 136, -356, -607, -356, -356, -358,
	-608, 244, 470, 43, 272, 271, -198, -199, 22, -198,
	464, 460, -448, 465, 466, -360, -607, -359, -358, -358,
	-359, -358, -358, -358, 32, 242, 245, 496, 333, 630,
	-606, -606, 31, 31, -482, -482, -236, -482, -482, 530,
	-335, -346, -482, -482, -482, -288, -289, -236, -560, 247,
	-592, -591, 483, -594, 485, 163, -425, 163, -425, 87,
	-406, 273, 273, 158, 126, 24, -426, 126, 137, -425,
	-425, -426, -426, -260, 41, -345, 154, -346, 90, -260,
	41, -589, -588, -236, -197, -180, -179, 85, 85, 85,
	540, -580, -482, -482, -482, -482, -482, -484, -482, -482,
	-482, -482, -482, -353, -212, -346, -222, 248, -482, -482,
	-482, -482, -181, -182, 145, -373, -346, -181, -3, -139,
	-138, 120, 121, 123, 620, 374, 619, 623, 617, -425,
	41, -476, 401, 400, -470, -472, 84, -471, 84, -471,
	-471, -471, -471, -471, 84, 84, -473, 84, -473, -473,
	-470, -474, 84, -474, -475, 84, -475, -474, -346, -452,
	546, -379, -381, -346, 39, -494, 61, -176, 84, 31,
	84, -203, -346, 189, 168, 634, -495, 61, -176, 84,
	31, -197, -132, 39, -199, 21, 157, 100, 90, -111,
	-93, 77, -111, -93, -93, 85, 158, -552, 106, 107,
	-555, 207, 198, -346, -109, 90, -7, -8, -9, -10,
	-47, -82, -79, -176, 234, 538, 541, -522, -520, 84,
	32, 428, 81, 17, -432, 242, 496, 379, 269, 245,
	355, -430, -413, -410, -408, -345, -406, -409, -408, -435,
	-322, 460, -133, 443, 442, 323, -373, -373, -373, -373,
	-373, 105, 116, 350, 106, 107, -368, -389, 32, 319,
	320, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, -377, -387, -463, 84, 136, 134, 138,
	135, 118, -371, -371, -369, -369, -262, -345, 154, 85,
	158, -373, -545, -544, 120, -373, -373, -373, -373, -346,
	-542, -543, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 370, 365, 371, 369, 358, 377, 372,
	373, 191, 527, 528, 521, 522, 523, 524, 525, 526,
	-379, -379, -373, -542, -379, -315, 33, 32, -381, -381,
	-381, 85, -373, -556, 348, 347, 349, -200, -346, -379,
	85, 85, 85, 100, -381, -381, -379, -369, -379, -379,
	-379, -379, -543, -315, -315, -315, -315, 145, -381, -381,
	-315, -315, -315, -315, 145, -315, -315, -315, -315, -315,
	-315, -315, -315, -315, -315, -315, 85, 85, 85, 145,
	-381, -198, -131, -503, -502, -373, 41, -132, -199, -599,
	627, 84, -322, -587, 90, 90, 649, 168, 635, 17,
	496, -346, 17, 242, -346, 100, -346, 100, 486, 487,
	167, 170, 169, -346, 116, -346, -346, 35, 84, -212,
	-393, -393, -393, -564, -346, 91, -414, -411, -408, -346,
	-346, -404, -346, -335, -236, -393, -393, -393, -393, -236,
	-271, 53, 54, 55, -408, -169, 56, 57, -560, -547,
	35, -201, -346, -304, -371, -371, -373, -408, 273, -606,
	-358, -358, -336, -335, -360, -355, -360, -360, -304, -356,
	-358, -358, -373, -360, -356, -304, -346, 460, -304, -304,
	-448, -358, -357, -346, -357, -393, -335, -336, -336, -236,
	-236, -283, -290, -284, -291, 265, 239, 363, 364, 236,
	234, 11, 235, -298, 312, -394, 504, -266, -267, 77,
	42, -269, 263, 405, 398, 275, 279, 94, 280, 438,
	281, 244, 283, 284, 285, 300, 302, 255, 286, 287,
	288, 429, 289, 162, 301, 290, 291, 292, 381, -261,
	6, 336, 546, 41, 51, 52, 452, 451, 549, 276,
	-346, -564, -562, 31, -346, 31, -414, -346, -346, 158,
	246, -189, -191, -188, -184, -185, -190, -307, -309, -187,
	84, -236, -179, -346, 158, 484, 486, 487, -592, -426,
	-592, -426, 246, 32, 428, -429, 428, 32, -404, -423,
	480, 482, -419, 90, 429, -409, -428, 81, 154, -502,
	-426, -426, -428, -428, 153, 158, -590, 485, 486, 230,
	-198, 100, -238, -236, -564, -413, -404, -346, -482, -238,
	-238, -238, -348, -348, 84, 157, 36, -346, -346, -346,
	-346, -303, 158, -302, 17, -347, -346, 35, 90, 157,
	-303, -140, -138, 122, -373, -6, 619, -373, -6, -6,
	-373, -6, -373, -480, 402, 100, 100, -325, 90, -325,
	100, 100, 100, 552, 85, 90, -417, 81, -496, -382,
	-540, 608, -205, 85, -200, -538, -539, -200, -204, -346,
	-494, -228, 126, 126, 126, -496, -205, 85, -538, -198,
	609, -132, -195, -194, -373, -346, 24, -111, -93, -550,
	157, 355, 158, -201, -432, -412, -409, -434, 145, -346,
	-420, 158, 546, 652, 88, 246, -577, -576, 420, 85,
	158, -506, 247, 503, 90, 649, 436, 225, 226, 105,
	350, 106, 107, -463, -381, -377, -371, -371, -369, -369,
	-375, 260, -375, 115, -373, 650, -372, -544, 122, -373,
	35, 158, 35, 158, 82, 157, 85, 85, 17, 17,
	85, -373, 85, 85, 85, 85, 17, 17, -373, 85,
	157, 85, 85, 85, 85, 82, 85, 158, 85, 85,
	85, 85, 158, -381, -381, -373, -381, 85, 85, 85,
	-373, -373, -373, -381, 85, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -201, -442, 455, -442, -442,
	158, 158, 158, 85, -132, 84, 100, 158, 645, -329,
	-328, 90, -346, -346, 168, 635, -346, 90, 635, -346,
	90, 168, 171, 171, 170, 90, 36, 24, 310, 24,
	-221, -223, -224, -225, -226, -227, 136, 159, 160, 84,
	-236, -236, -236, -566, 406, -578, 158, 41, -576, 496,
	-165, 323, -397, 82, -172, 17, 546, -236, -236, -236,
	-236, -250, 35, 17, -183, -237, -346, 84, 85, 158,
	-405, 82, -346, -336, -304, -304, -360, -304, -304, 158,
	23, -358, -360, -360, -228, -356, -228, 157, -228, -335,
	-469, 35, -202, 158, 21, 265, -235, -343, -232, -234,
	250, -363, -233, 253, -534, 251, 249, 110, 254, 308,
	111, 244, -343, -343, 250, -270, 246, 35, -343, -286,
	244, 353, 308, 251, 21, 265, -285, 244, 111, -346,
	250, 254, 251, 249, -342, 126, -334, 153, 246, 43,
	381, -342, 550, 265, -342, -342, -342, -342, -342, -342,
	-342, 282, 282, -342, -342, -342, -342, -342, -342, -342,
	-342, -342, -342, -342, 163, -342, -342, -342, -342, -342,
	-342, 84, 328, 277, 278, 310, -567, 406, 31, 361,
	361, 362, -578, 31, -173, 355, -289, -287, -357, 31,
	-310, -311, -312, -313, -314, 68, 72, 74, 78, 69,
	70, 71, 75, 73, 31, 158, -344, -349, 35, -346,
	90, -344, -179, -191, -189, -344, 84, -591, -593, 488,
	485, 491, -428, -428, 100, 246, 84, 126, -428, -428,
	41, -345, -588, 492, 486, -132, 158, 81, -238, -213,
	-214, -215, -216, -243, -322, 193, 196, 198, 199, 200,
	201, 203, 204, 205, 206, 207, 210, 211, 208, 209,
	259, 188, 189, 190, 191, 212, 174, 194, 544, 175,
	176, 177, 178, 179, 180, 183, 184, 185, 186, 182,
	-346, -222, -304, -182, -191, -346, 90, -346, 145, -304,
	123, -6, 121, -144, -143, -142, 124, 617, 623, 123,
	123, 123, 85, 85, 85, 158, 85, 85, 85, 158,
	85, 158, 100, -509, 465, 40, 158, 84, 85, 158,
	61, 158, 126, 85, 158, -373, -346, 90, -373, 85,
	61, -132, 90, 158, -192, 37, 38, 157, 438, -346,
	-520, 85, -434, 158, 246, 157, 157, -410, 384, -345,
	-412, 21, 546, -322, 39, -329, 126, 649, -346, 85,
	-375, -375, 115, -371, -368, 85, 123, -373, 121, -241,
	-243, 400, 401, -373, -241, -242, -248, 154, 192, 259,
	191, 190, 188, 400, 401, -260, -346, -373, -373, 85,
	-373, -373, 17, -346, -260, -369, -373, -197, -197, 85,
	85, -441, -442, -441, -441, 85, 85, 85, 85, -441,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 84, 100, 102, 100, 102, -502, -600, 63, 625,
	62, 428, 105, 313, 158, 100, 90, 650, 158, 126,
	90, -346, -346, 17, 242, -346, 17, 171, 90, -579,
	317, 355, -453, 100, 317, 355, 496, 392, 85, 158,
	-322, -213, -202, 84, -202, -569, 467, 408, 418, -342,
	-365, -364, 357, 42, -488, 429, 414, 415, -411, 273,
	-335, -575, 97, 126, 81, 340, 344, 345, 341, 342,
	343, -391, -392, -390, -394, -562, 84, 84, -176, 35,
	134, -172, 84, 84, 35, -464, 330, -243, -236, -183,
	-346, 17, 158, -561, 157, -1, -346, -404, -358, -304,
	-373, -373, -304, -358, -358, -360, -346, -228, -464, -243,
	35, -284, 239, 235, -438, 310, 311, -439, -454, 313,
	-456, 84, -240, -322, -233, -533, -534, -393, -346, 111,
	-533, 111, 84, -240, -322, -322, -287, -322, -346, -346,
	-346, -346, -294, -293, -322, -296, 32, -297, -346, -346,
	-346, -346, 111, -346, 111, -265, 41, 48, 49, 50,
	-342, -342, 195, -268, 41, 428, 430, 431, -296, 100,
	100, 100, 100, 90, 90, 90, -342, -342, 100, 90,
	-349, 90, -535, 170, 45, 46, 100, 100, 100, 100,
	41, 90, -273, 41, 293, 297, 294, 295, 296, 90,
	100, 41, 100, 41, 100, 41, -346, 84, -536, -537,
	90, 329, -453, -569, -342, 361, -425, 126, 126, -365,
	-574, 323, -175, 496, 32, -206, 239, 235, -562, -416,
	-415, -322, -188, -188, -188, -188, -188, 68, 79, 68,
	68, 68, 73, 68, 73, 68, -312, 79, -416, -190,
	-202, -349, 85, -585, -584, -583, -581, 76, 247, 77,
	-379, 485, 489, 490, -412, -361, 90, -419, -210, 24,
	-236, -236, -486, 303, 304, 85, 158, -243, -306, 19,
	157, -306, 119, -6, -140, -142, -373, -6, -373, 619,
	374, 620, 90, 100, 100, -517, 449, 444, 446, 111,
	-382, -504, -503, 61, -176, -200, -496, -539, -502, -346,
	650, 650, 650, 650, 61, -176, -496, -210, -509, -194,
	-193, 44, -346, 100, 17, -409, -404, 145, 145, -346,
	385, -420, 90, 407, 90, 242, 650, 90, -329, -368,
	-373, 85, -251, 179, 178, -251, 35, 85, 85, -471,
	-471, -470, -473, -470, -251, -251, 85, 85, 24, 85,
	85, 85, -373, 85, 85, 158, -492, 505, -493, 579,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -384, -383, 265,
	450, 632, 632, 450, 632, 632, 85, 158, -542, 158,
	-337, 318, -337, -328, 90, 246, 90, 168, -346, 90,
	635, 90, -346, 90, 310, -346, -346, 90, 90, -225,
	-243, 85, 35, -229, -230, -231, -240, -232, -234, 35,
	-570, 94, -565, 90, -346, 91, -571, 94, 409, 156,
	359, 41, 410, 411, 426, 354, 100, 100, 416, -563,
	-346, -174, 242, 355, -573, 52, 126, 90, -236, -390,
	-334, 153, 284, 333, -301, -300, -346, 90, -229, -176,
	-236, -229, -229, -176, -465, 332, 21, 100, 144, -203,
	82, 157, -191, -237, -346, 145, 85, -304, -228, -304,
	-304, -358, -465, -176, -450, 314, 84, -448, 84, -448,
	111, 341, -457, -455, 265, -292, 45, 47, -243, -531,
	-346, -529, -531, -346, -529, -529, -393, -373, -292, -240,
	246, 31, 235, -295, 338, 339, 344, -421, 309, 116,
	-421, 158, -192, 158, -346, -260, -260, 31, 90, 90,
	-238, 85, 158, 126, 100, 90, -570, -565, 126, -426,
	90, 90, -571, -575, 126, -239, 242, -335, 158, -206,
	-206, -304, 158, 126, -208, -207, 81, 82, -209, 81,
	-207, 68, 68, -304, -583, -582, 24, -534, -534, -534,
	85, 85, 15, -215, 41, -305, 20, 21, 145, -305,
	123, 121, 123, 123, -346, 85, 85, -477, 610, -513,
	-515, 444, 21, 21, 15, 247, 85, -496, -496, -517,
	45, 46, -404, -420, 429, -236, 158, 650, -241, -373,
	85, -373, 85, 90, 85, 90, -197, 21, 85, 158,
	85, 85, 85, 158, 85, 85, -373, 85, -542, -338,
	189, 90, -338, 355, -347, -346, 17, -346, 90, -453,
	310, 310, 242, 240, -176, 85, 158, -176, 90, -568,
	420, 90, 90, 100, 41, 100, 156, 412, -489, -166,
	94, -238, 32, -206, -572, 94, 126, 649, 84, -342,
	-342, -342, -346, 85, 158, -342, -342, 85, 85, 85,
	-258, 546, -466, 264, 100, 144, 100, 144, 100, -344,
	-191, -346, -304, -561, 157, -304, -466, -440, 315, 100,
	-369, 84, -369, 84, -449, 312, 84, 85, 158, -346,
	-322, -255, -254, -252, 105, 116, 41, 398, -253, 94,
	153, 298, 301, 300, 276, 299, -282, -362, 81, 404,
	338, 339, -394, 610, 534, 249, 110, 111, 386, -363,
	84, 84, 82, 318, 84, 84, -531, 85, -292, -322,
	41, -295, 41, 351, 309, -293, -346, 153, -260, 85,
	-537, 90, -542, -568, 90, -428, -573, 90, -166, -238,
	-562, -197, -415, -502, -373, 84, -373, 84, 68, 11,
	19, -366, -373, -381, 637, 639, 640, 248, -6, 620,
	374, -275, 611, 90, 21, 90, -511, 90, -416, -477,
	-135, -272, -334, 281, 85, 85, 85, -441, -441, -444,
	-443, -447, 450, 310, 458, -381, 90, 90, 85, 85,
	90, -346, 168, 90, 649, 90, -453, -453, -346, -217,
	-243, -170, 546, -258, -231, -170, 21, 546, 358, 41,
	100, 41, 413, 90, -174, 126, 106, 107, -330, -331,
	90, -399, -401, -322, 84, -260, -262, 90, -300, -366,
	-366, -256, -176, 35, -257, -298, -394, 546, -134, -133,
	-256, 546, 84, -467, 162, 100, 144, 100, 100, -304,
	-304, -467, -456, 21, 85, -435, 85, -435, 84, 126,
	-369, -455, -458, 61, -252, 105, -369, 90, -262, -263,
	41, 297, 293, 126, 126, -264, 41, 277, 278, -274,
	84, 308, 15, 195, 84, 111, 111, -236, -399, -399,
	-532, 340, 341, 342, 346, 344, 345, 343, -532, -399,
	-399, 84, -422, -421, -369, -342, -342, 153, -572, -198,
	-201, -530, -346, 249, 21, 21, -487, 546, 638, 84,
	84, -346, -346, -326, 612, 100, 90, 446, -275, -478,
	613, -507, -448, -260, 126, 85, -446, 118, 412, 416,
	-367, -370, 100, 102, 187, 156, 85, 85, -346, -333,
	-332, 90, 90, 90, 310, 545, -171, 60, 492, 90,
	91, 407, 90, 91, 358, -166, 90, 650, 158, 126,
	85, 158, -470, -373, -436, 265, -176, 158, -298, -334,
	-135, -436, -259, -299, -346, 90, -485, 170, 331, 546,
	100, 144, 100, -197, -468, 170, 331, -439, 85, 85,
	85, -435, 100, 85, -462, -459, 84, -298, 267, 136,
	90, 90, 100, 84, -497, 31, 90, -400, 84, 85,
	85, 85, 85, -399, 100, -260, -342, 85, 85, 158,
	640, 84, -381, -381, 84, 21, -326, -479, 614, 90,
	-516, 449, -510, -508, 444, 445, 446, 447, 90, -445,
	-446, 416, -367, -370, 608, 456, 456, 456, 650, 158,
	126, -453, -219, -346, 308, 429, -331, 90, -402, -401,
	-192, 85, -437, 317, 21, -298, -342, -437, 85, 158,
	-342, -342, 331, 100, 144, 100, -198, 331, -451, 316,
	85, -462, -298, -461, -460, 315, 268, 84, 85, -373,
	-385, -342, 85, -277, -276, 542, -399, -402, 82, -402,
	82, -402, 82, -402, 82, 85, -260, -346, 249, -130,
	84, 85, 85, -327, -346, -511, 90, -518, 247, -514,
	-515, 448, -508, 21, 446, 21, 21, -136, 158, 115,
	457, 457, 457, -332, 90, 90, -218, 35, 451, 385,
	-403, 255, 351, 352, 94, 546, 338, 339, -192, 21,
	-438, -260, -299, -366, -366, 100, 100, 85, 158, -346,
	264, 84, -380, -374, -373, 264, 85, -346, -281, -279,
	-280, 81, 463, 306, 307, 85, -532, -532, -532, -532,
	-282, 85, 158, -379, 85, 158, -525, 84, 100, -513,
	-512, -514, 21, -511, 21, -511, -511, 453, -445, 90,
	-342, -342, 90, 90, 337, -322, 84, -450, -460, -459,
	-380, 85, 158, -421, -280, 81, -279, 81, 16, 15,
	-402, -402, -402, -402, 84, 85, -346, -528, 31, 85,
	-524, -523, -323, -519, -346, 449, 450, 90, -511, 126,
	-603, -602, 631, 100, 100, -346, -435, -440, 85, -374,
	-278, 303, 304, 31, 170, -278, -379, -527, -526, -324,
	85, 158, 157, 90, 90, 85, -456, 105, 41, 305,
	85, 158, 126, -523, -346, -526, 41, -373, 157, -346,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 0, 309, 310, 311, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 0, 0,
	0, 0, 0, 691, 692, 0, 655, 0, 0, 0,
	0, 0, 0, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 0, 334, 330,
	253, 254, 255, 256, 257, 258, 341, 342, 515, 0,
	0, 0, 0, 774, -2, 97, 0, 0, 0, 0,
	323, 0, 314, 314, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, -2, 704, 0,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 398, 399, 400,
	394, 395, 397, 396, -2, 0, 0, 704, 0, 0,
	0, 782, 0, 0, 0, 825, 847, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1369, 1370,
	1371, 1372, 2156, 2126, -2, 1896, 1873, 2050, 2051, 1951,
	1962, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, -2, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, -2, -2, -2, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 0, 307, 305, 1843, 1873, 1896, 1951,
	1962, 1963, 1998, 2050, 2051, 2083, 2126, 2142, 2143, 2144,
	2156, 0, 0, 971, 0, 752, 0, 0, 757, 1318,
	752, 335, 693, 694, 782, 808, 653, 0, 372, 0,
	1887, 376, 2133, 0, 0, 0, 0, 650, 366, 367,
	368, 369, 370, 371, 0, 0, 944, 0, 0, 362,
	0, 329, 1953, 2155, 1373, 0, 0, 0, 0, 0,
	196, 1095, 198, 1097, 202, 210, 0, 0, 0, 215,
	216, 219, 220, 221, 222, 223, 0, 227, 0, 229,
	232, 0, 234, 235, 0, 238, 239, 240, 0, 250,
	251, 252, 1098, 1099, 1100, -2, 125, 969, 1801, 1687,
	0, 1694, 1707, 1718, 1450, 1451, 1452, 1453, 0, 0,
	0, 0, 0, 0, 1461, 1462, 0, 1490, 2195, 2236,
	2237, 0, 1470, 1471, 1472, 1473, 1474, 1475, 136, 148,
	149, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 0, 1748,
	1749, 1750, 1658, 1437, 1369, 0, 2204, 0, 2226, 2231,
	2232, 2233, 2234, 2225, 0, 0, 1643, 0, 1633, 0,
	0, -2, -2, 0, 0, 2023, -2, 2238, 2239, 2240,
	2201, 2222, 2230, 2205, 2206, 2229, 2197, 2198, 2199, 2192,
	2193, 2194, 2196, 2208, 2210, 2221, 0, 2217, 2227, 2228,
	2131, 0, 0, 0, 0, 0, 0, 2173, 150, 151,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1654, -2, -2,
	1657, -2, 1660, -2, -2, -2, -2, 1665, 1666, -2,
	1668, -2, -2, -2, -2, -2, -2, -2, 1645, 1646,
	1647, 1648, 1637, 1638, 1639, 1640, 1641, 1642, -2, -2,
	-2, 808, 894, 0, 808, 0, 783, 830, 833, 836,
	839, 786, 0, 0, 98, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 313, 315, 0,
	319, 0, 312, 1131, 1131, 1131, 0, 0, 0, 0,
	1131, 1131, 1131, 1131, 1131, 0, 1131, 0, 0, 0,
	0, 0, 1131, 0, 1004, 1102, 1103, 1104, 1129, 1130,
	1203, 0, 0, 0, 709, 705, 706, 707, 708, 796,
	0, 798, 801, 0, 630, 630, 863, 863, 576, 0,
	0, 0, 630, 0, 590, 582, 0, 0, 0, 630,
	0, 0, 803, 803, 0, 633, 640, 630, 630, -2,
	630, 630, 627, 630, 0, 0, 1143, 596, 597, 598,
	582, 582, 601, 602, 603, 613, 614, 641, 1825, 0,
	0, 515, 515, 0, 515, 515, 0, 515, 515, 515,
	0, 711, 1993, 1894, 1968, 1853, 1953, 2155, 0, 280,
	2023, 285, 0, 1895, 1914, 0, 0, 1932, 0, -2,
	0, 351, 808, 0, 0, 782, 0, 0, 0, 0,
	515, 515, 515, 515, 515, 1202, 515, 515, 515, 515,
	515, 0, 0, 0, 515, 515, 515, 515, 0, 0,
	848, 849, 844, 845, 846, 850, 851, 5, 6, 19,
	0, 0, 0, 0, 0, 0, 104, 103, 0, 1802,
	1820, 1753, 1754, 1755, 1807, 1757, 1811, 1811, 1811, 1811,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1811, 1811, 0, 0, 1800, 1777, 1809, 1809, 1809, 1807,
	1804, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1814, 1814, 1817, 1817, 1814,
	0, 412, 410, 411, 1683, 0, 0, 0, 0, 752,
	756, 1316, 0, 0, 0, 808, -2, 0, 0, 654,
	373, 1374, 0, 0, 377, 0, 378, 0, 0, 380,
	0, 0, 0, 401, 0, 404, 388, 389, 390, 391,
	384, 0, 176, 0, 364, 365, 0, 0, 331, 0,
	0, 0, 516, 0, 0, 0, 0, 0, 0, 207,
	203, 211, 214, 224, 231, 0, 243, 245, 248, 204,
	212, 217, 218, 225, 246, 205, 208, 209, 213, 247,
	249, 206, 226, 230, 244, 228, 233, 236, 237, 242,
	0, 177, 0, 0, 0, 0, 0, 1693, 0, 0,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1687, 0, 0,
	1456, 1457, 1458, 1459, 0, 1463, 0, 1491, 0, 0,
	0, 0, 0, 1747, 1751, 0, 1683, 1683, 0, 1683,
	1679, 0, 0, 0, 0, 0, 0, 1683, 1616, 0,
	0, 1618, 1634, 0, 0, 1620, 1621, 0, 1624, 1625,
	1683, 0, 1683, 1629, 1683, 1683, 1683, 1612, 1613, 0,
	1679, 1679, 1679, 1679, 0, 0, 1679, 1679, 1679, 1679,
	1679, 1679, 1679, 1679, 1679, 1679, 1679, 1679, 1679, 1679,
	1679, 0, 0, 0, 0, 803, 0, 809, 0, -2,
	0, 827, 829, 831, 832, 834, 835, 837, 838, 840,
	841, 788, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 71, 73, 0, 0, 0, 0, 0, 0, 317,
	0, 322, 0, 0, 0, 0, 0, 968, 0, 0,
	1131, 1131, 1131, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 1131, 1131, 1131, 1131, 0, 1149, 0, 0,
	0, 711, 710, 0, 797, 0, 0, 70, 863, 0,
	0, 573, 574, 0, 575, 0, 582, 630, 630, 588,
	589, 584, 583, 636, 637, 633, 0, 633, 633, 863,
	0, 607, 608, 609, 630, 630, 615, 804, 0, 616,
	617, 633, 0, 638, 639, 863, 0, 0, 863, 863,
	0, 625, 626, 628, 630, 0, 0, 1131, 0, 646,
	584, 584, 1826, 1827, 0, 0, 1140, 0, 0, 0,
	0, 649, 0, 0, 0, 428, 429, 0, 0, 712,
	259, 263, 0, 266, 0, 1993, 0, 1993, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 303, 304, 0,
	0, 0, 0, 294, 297, 1310, 1311, 1092, 1093, 298,
	299, 343, 344, 0, 803, 826, 828, 822, 823, 824,
	0, 72, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 0, 0, 687, 0, 984, 689, 0, 0, 0,
	0, 0, 871, 865, 867, 939, 136, 871, 8, 121,
	118, 0, 19, 0, 0, 19, 19, 0, 19, 308,
	0, 1823, 1821, 1822, 1756, 1808, 0, 1782, 0, 1783,
	1784, 1785, 1796, 1797, 0, 0, 1778, 0, 1779, 1780,
	1781, 1772, 0, 1773, 1774, 0, 1775, 1776, 306, 409,
	0, 0, 1684, 972, 0, 730, 744, 725, 0, 733,
	0, 0, 1318, 0, 0, 0, 713, 744, 715, 0,
	733, 803, 780, 0, 758, 0, 0, 374, 0, 385,
	379, 0, 386, 381, 382, 0, 0, 403, 405, 406,
	407, 392, 393, 651, 360, 361, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 0, 363, 146, 0,
	332, 333, 0, 0, 0, 190, 191, 192, 193, 194,
	195, 197, 181, 676, 678, 1084, 1096, 0, 1087, 0,
	200, 241, 173, 0, 0, 0, 1688, 1689, 1690, 1691,
	1692, 1697, 0, 1699, 1701, 1703, 1705, 0, 1723, -2,
	-2, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1708, 1721, 1722, 0, 0, 0, 0,
	0, 0, 1719, 1719, 1714, 0, 1476, 1312, 1313, 1454,
	0, 0, 1488, 1492, 0, 0, 0, 0, 0, 137,
	1678, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	0, 0, 1687, 0, 0, 0, 1680, 1681, 0, 0,
	0, 1571, 0, 0, 1577, 1578, 1579, 0, 739, 0,
	1644, 1617, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 893, 895, 0, 748, 750, 751, 777, 758, 784,
	0, 0, 0, 96, 101, 0, 1170, 0, 0, 0,
	0, 0, 0, 0, 74, 1144, 75, 1146, 326, 327,
	0, 0, 321, 0, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 1020, 1021, 513, 1078, 0, 0,
	0, 1094, 1119, 1127, 0, 0, 0, 0, 0, 1176,
	1006, 1011, 1012, 1013, 1007, 1008, 1014, 1015, 0, 799,
	0, 0, 908, 572, 631, 632, 864, 579, 1953, 584,
	863, 863, 591, 585, 592, 635, 593, 594, 595, 633,
	863, 863, 805, 630, 633, 618, 634, 633, 1318, 622,
	0, 629, 1318, 647, 1318, 0, 645, 599, 600, 1178,
	801, 426, 427, 432, 434, 0, 483, 483, 483, 466,
	483, 0, 0, 454, 1828, 0, 0, 0, 0, 463,
	1828, 0, 0, 1828, 1828, 1828, 1828, 1828, 1828, 1828,
	0, 0, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828,
	1828, 1828, 1828, 0, 1828, 1828, 1828, 1828, 1828, 1295,
	1828, 0, 482, 1141, 473, 474, 475, 476, 481, 0,
	0, 510, 0, 0, 1019, 0, 513, 0, 1061, 0,
	0, 876, 0, 877, 878, 879, 874, 910, 934, 934,
	0, 934, 914, 1318, 0, 0, 271, 272, 260, 0,
	261, 0, 0, 274, 275, 0, 277, 278, 279, 286,
	1894, 1968, 281, 283, 0, 0, 287, 300, 301, 302,
	0, 0, 292, 293, 0, 0, 346, 347, 349, 0,
	758, 1145, 673, 1314, 674, 675, 679, 0, 0, 682,
	683, 684, 685, 686, 986, 0, 0, 1070, 1071, 1072,
	1073, 863, 0, 872, 0, 868, 940, 0, 942, 0,
	863, 0, 119, 19, 0, 112, 109, 0, 0, 0,
	0, 0, 1803, 1752, 1824, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 102, 760, 720, 0, 724, 741,
	0, 745, 0, 0, 737, 729, 734, 0, 0, 754,
	721, 1317, 0, 0, 0, 714, 0, 0, 719, 758,
	0, 781, 810, 811, 814, 1375, 0, 387, 383, 402,
	0, 515, 0, 0, 0, 184, 1081, 0, 185, 189,
	179, 0, 0, 0, 1086, 0, 1083, 1088, 0, 199,
	0, 0, 174, 175, 1161, 1170, 0, 0, 0, 1698,
	1700, 1702, 1704, 1706, 0, 1709, 1719, 1719, 1715, 0,
	1710, 0, 1712, 0, 1688, 1460, 0, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 1561, 1562, 0, 0,
	1566, 0, 1568, 1569, 1570, 1572, 0, 0, 0, 1576,
	0, 1615, 1636, 1619, 1622, 0, 1626, 0, 1628, 1630,
	1631, 1632, 0, 808, 808, 0, 0, 1532, 1532, 1532,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1477, 0, 1478, 1479,
	0, 0, 0, 896, 778, 0, 0, 0, 0, 0,
	1168, 0, 86, 0, 0, 0, 0, 91, 0, 0,
	76, 328, 316, 318, 0, 0, 1132, 0, 0, 0,
	0, 0, 974, 975, 977, 0, 980, 981, 982, 986,
	801, 0, 801, 1031, 1828, 517, 0, 0, 1080, 0,
	1050, 0, 0, 0, -2, 0, 0, 1127, 0, 0,
	0, 1180, 0, 0, 0, 698, 702, 23, 802, 0,
	577, 0, 578, 630, 586, 587, 863, 610, 611, 0,
	0, 863, 630, 630, 621, 633, 642, 0, 643, 1318,
	1180, 0, 0, 1140, 1246, 1214, 444, 0, 1330, 1331,
	484, 0, 1337, 1346, 1131, 1407, 0, 1346, 0, 0,
	1348, 1349, 0, 0, 0, 0, 467, 468, 0, 453,
	0, 0, 0, 0, 0, 0, 452, 0, 0, 494,
	0, 0, 0, 0, 0, 1829, 1828, 1828, 0, 461,
	462, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 1303, 0, 1031, 1828, 0, 0,
	0, 0, 517, 1048, 1066, 0, 430, 431, 491, 0,
	0, 0, 0, 0, 0, 900, 0, 0, 0, 899,
	0, 0, 0, 0, 0, 0, 801, 935, 0, 937,
	938, 912, -2, 0, 876, 917, 1683, 264, 265, 0,
	0, 270, 288, 290, 262, 0, 0, 0, 289, 291,
	295, 296, 345, 348, 350, 820, 0, 0, 1204, 0,
	987, 988, 990, 991, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1878, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	985, 690, 854, 866, 873, 941, 943, 137, 869, 854,
	0, 122, 19, 121, 113, 114, 0, 19, 0, 0,
	0, 0, 1813, 1812, 1798, 0, 1799, 1810, 1815, 0,
	1818, 0, 413, 764, 0, 0, 744, 746, 0, 0,
	744, 0, 0, 753, 0, 0, 0, 0, 0, 0,
	744, 820, 760, 0, 817, 815, 816, 0, 0, 652,
	147, 408, 0, 0, 0, 0, 0, 677, 0, 1085,
	181, 0, 0, 201, 0, 0, 0, 1170, 1165, 1682,
	1711, 1713, 0, 1720, 1716, 1455, 1464, 1489, 0, 0,
	1495, 1507, 1507, 0, 0, 0, 1498, 1811, 1811, 1501,
	1807, 1809, 1807, 1507, 1507, 0, 138, 0, 0, 1567,
	0, 0, 0, 740, 0, 0, 0, 1528, 1530, 1532,
	1532, 1539, 1533, 1540, 1541, 1532, 1532, 1532, 1532, 1546,
	1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
	1532, 1526, 0, 0, 1741, 1742, 749, 0, 0, 791,
	792, 793, 794, 795, 0, 0, 61, 61, 1170, 0,
	95, 87, 0, 0, 0, 0, 0, 320, 0, 77,
	78, 0, 0, 85, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 1323, 0, 1035, 1032, 1033, 1034, 0,
	1075, 518, 519, 520, 521, 0, 0, 0, 1079, 0,
	0, 1043, 0, 0, 0, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, -2, 1135, 0, 0, 0, 1323, 1154, 0,
	0, 1159, 1323, 1323, 0, 1188, 0, 1177, 752, 0,
	-2, 0, 0, 700, 0, 0, 909, 580, 863, 604,
	806, 807, 1318, 863, 863, 630, 648, 644, 1188, 1179,
	0, 433, 483, 0, 1234, 0, 0, 1240, 0, 1247,
	437, 0, 485, 0, 1336, 1363, 1347, 1363, 1408, 1363,
	1363, 1131, 0, 485, 0, 0, 455, 0, 0, 0,
	0, 0, 451, 488, 814, 438, 440, 441, 442, 492,
	493, 495, 0, 497, 498, 457, 469, 470, 471, 472,
	0, 0, 0, 464, 477, 478, 479, 480, 439, 1263,
	1264, 1265, 1268, 1269, 1270, 1271, 0, 0, 1274, 1275,
	1276, 1277, 1278, 1360, 1361, 1362, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1304, 1305, 1306, 1307, 1308, 1309, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 0, 0, 1299,
	0, 0, 0, 1035, 0, 0, 0, 0, 0, 1075,
	1050, 0, 1068, 0, 1062, 1063, 0, 0, 722, 863,
	338, 0, 904, 897, 0, 883, 884, 901, 885, 902,
	903, 889, 0, 891, 0, 887, 888, 886, 863, 875,
	911, 936, 913, 916, 918, 919, 925, 0, 0, 0,
	0, 267, 268, 269, 276, 0, 537, 282, 776, 0,
	1315, 680, 681, 1205, 1206, 688, 0, 992, 852, 0,
	0, 852, 117, 120, 0, 115, 0, 0, 0, 0,
	107, 105, 1806, 0, 0, 766, 161, 0, 0, 0,
	742, 0, 747, 744, 728, 738, 727, 735, 736, 755,
	1319, 1320, 1321, 1322, 744, 718, 717, 779, 764, 812,
	813, 0, 1376, 375, 0, 1082, 181, 186, 187, 188,
	182, 180, 1089, 0, 1091, 0, 1163, 0, 0, 1717,
	1494, 1465, 1496, 1508, 1509, 1497, 0, 1467, 1468, 1499,
	1500, 1502, 1503, 1504, 1505, 1506, 1469, 1563, 0, 1565,
	1573, 1574, 0, 1623, 1627, 0, 0, 0, 0, 0,
	1537, 1538, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 808, 1527, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	63, 0, 63, 1169, 1171, 0, 939, 0, 0, 92,
	0, 0, 79, 80, 0, 0, 0, 967, 970, 976,
	978, 0, 0, 0, 1324, 1325, 1327, 1328, 1329, 0,
	1003, 0, 0, 1023, 1024, 1025, 1037, 0, 0, 0,
	523, 524, 0, 0, 0, 536, 532, 533, 534, 514,
	1074, 1057, 0, 0, 1046, 0, 0, 1056, 0, 1136,
	1828, 1828, 1828, 0, 0, 1248, 1828, 1828, 0, 1156,
	1158, 0, 0, 1252, 1191, 0, 0, 1182, 0, 934,
	0, 0, 863, 699, 702, 703, 800, 581, 619, 623,
	620, 863, 1191, 425, 1212, 0, 0, 0, 0, 0,
	1244, 0, 0, 1216, 0, 456, 486, 0, -2, 0,
	1364, 0, 1350, 1364, 0, 0, 1363, 0, 445, 485,
	0, 0, 0, 499, 503, 504, 0, 501, 1403, 0,
	502, 0, 490, 0, 496, 1266, 1267, 0, 1272, 1273,
	0, 1297, 0, 0, 0, 436, 505, 0, 0, 0,
	506, 507, 512, 1043, 0, 1057, 0, 1067, 0, 1064,
	1065, 808, 0, 0, 880, 905, 0, 0, 881, 0,
	882, 890, 892, 337, 920, 0, 0, 922, 923, 924,
	915, 284, 821, 989, 0, 842, 0, 0, 870, 843,
	0, 19, 0, 0, 110, 1816, 1819, 768, 0, 765,
	162, 0, 0, 0, 0, 732, 743, 726, 716, 766,
	818, 819, 183, 178, 1090, 1173, 0, 1164, 0, 0,
	1575, 0, 1532, 1529, 1532, 1531, 1523, 0, 1480, 0,
	1482, 1483, 1484, 0, 1486, 1487, 0, 787, 0, 59,
	0, 62, 60, 0, 94, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 1009, 1252, 0, 1009, 1036, 1022,
	0, 1076, 1077, 0, 525, 526, 0, 529, 535, 1038,
	0, 0, 1040, 1041, 1042, 0, 0, 1054, 0, 0,
	0, 0, 1128, 1142, 0, 0, 0, -2, 0, -2,
	1153, 0, 1197, 0, 1189, 0, 1181, 0, 1184, 863,
	863, -2, 696, 701, 0, 624, 1197, 1214, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 1215, 0, 1228,
	487, 1365, -2, 1379, 1381, 0, 1141, 1384, 1385, 0,
	0, 0, 0, 0, 0, 1429, 1393, 0, 0, 1397,
	1398, 1399, 0, 0, 1402, 0, 1735, 1736, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 1344, 446, 447,
	0, 449, 450, 1828, 1404, 489, 443, 1828, 459, 1296,
	1300, 1301, 1298, 511, 508, 509, 1046, 1049, 1060, 1069,
	723, 803, 339, 340, 906, 0, 898, 929, 926, 0,
	0, 993, 853, 861, 2178, 2180, 2177, 111, 116, 0,
	0, 770, 0, 767, 0, 761, 763, 172, 731, 768,
	132, 164, 0, 0, 1466, 1564, 1614, 1535, 1536, 0,
	1524, 0, 1518, 1519, 1520, 1525, 0, 0, 790, 785,
	64, 90, 0, 93, 68, 81, 0, 0, 0, 0,
	995, 1002, 1016, 1147, 1326, 1001, 0, 0, 522, 527,
	0, 530, 531, 1058, 1057, 0, 1044, 1045, 0, 1052,
	0, 0, 1115, 1807, 0, 1137, 1138, 1139, 1249, 1250,
	1251, 1207, 1155, 0, -2, 1260, 0, 0, 1151, 1173,
	1207, 0, 0, 1185, 0, 1192, 0, 1190, 1183, 808,
	697, 1194, 435, 1246, 1236, 0, 1238, 0, 0, 0,
	0, 1217, -2, 0, 1380, 1382, 1383, 1386, 1387, 1388,
	1434, 1435, 1436, 0, 0, 1391, 1431, 1432, 1433, 1392,
	0, 0, 0, 0, 0, 1733, 1734, 1427, 0, 0,
	1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1352, 0,
	0, 0, 1343, 1345, 448, 0, 0, 1828, 1059, 336,
	0, 0, 930, 932, 927, 928, 855, 0, 0, 0,
	0, 106, 108, 123, 0, 769, 163, 0, 770, 134,
	0, 155, 0, 1174, 0, 1534, 1521, 0, 0, 0,
	0, 0, 1737, 1738, 1739, 0, 1481, 1485, 89, 0,
	66, 0, 82, 83, 0, 0, 0, 1017, 1018, 1026,
	1027, 0, 1029, 1030, 528, 1039, 1047, 1051, 1054, 0,
	1106, 0, 814, 0, 1209, 0, 1157, 1140, 1262, 1828,
	1160, 1209, 0, 1254, 1828, 1828, 1175, 0, 1187, 0,
	1199, 0, 1193, 803, 424, 0, 1196, 1232, 1237, 1239,
	1241, 0, 1245, 1243, 1218, -2, 0, 1226, 0, 0,
	1389, 1390, 0, 0, 1633, 1828, 0, 1422, 0, 1106,
	1106, 1106, 1106, 0, 500, 458, 0, 907, 921, 0,
	862, 0, 0, 0, 0, 0, 759, 124, 0, 133,
	152, 0, 165, 166, 0, 0, 0, 0, 1166, 0,
	1510, 0, 0, 0, 1514, 1515, 1516, 1517, 65, 68,
	0, 0, 0, 994, 0, 1028, 1053, 1055, 1105, 1116,
	1117, 814, 1150, 0, 1246, 1261, 0, 1152, 1253, 0,
	0, 0, 1186, 1198, 0, 1201, 695, 1195, 1213, 0,
	1242, 1219, 1227, 0, 1222, 0, 0, 0, 1430, 0,
	1396, 0, 1401, 1410, 1423, 0, 0, 1332, 0, 1334,
	0, 1338, 0, 1340, 0, 0, 460, 931, 933, 0,
	1683, 857, 858, 0, 772, 762, 135, 139, 0, 161,
	158, 0, 167, 0, 0, 0, 0, 1162, 0, 0,
	1511, 1512, 1513, 67, 69, 84, 0, 996, 997, 1010,
	1107, 1828, 1828, 0, 0, 0, 1113, 1114, 1118, 0,
	1234, 1266, 1255, 1256, 1257, 1200, 1233, 1221, 0, -2,
	1229, 0, 0, 1685, 1695, 1696, 1394, 1400, 1409, 1411,
	1412, 0, 1424, 1425, 1426, 1428, 1106, 1106, 1106, 1106,
	1342, 856, 0, 0, 771, 0, 126, 0, 0, 156,
	157, 159, 0, 168, 0, 170, 171, 0, 1522, 998,
	0, 0, 1110, 1111, 0, 1210, 0, 1212, 1223, -2,
	0, 1231, 0, 1395, 1413, 0, 1414, 0, 0, 0,
	1333, 1335, 1339, 1341, 1683, 859, 773, 1172, 0, 140,
	0, 142, 144, 145, 1366, 153, 154, 160, 169, 0,
	983, 999, 0, 1108, 1109, 1112, 0, 1214, 1230, 1686,
	1415, 1417, 1418, 0, 0, 1416, 0, 127, 128, 0,
	141, 0, 0, 1167, 1000, 1211, 1208, 1419, 1421, 1420,
	860, 0, 0, 143, 1367, 129, 130, 131, 0, 1368,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 117, 3, 3, 3, 148, 140, 3,
	84, 85, 145, 143, 158, 144, 157, 146, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 651, 648,
	127, 126, 128, 3, 652, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 150, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 649, 139, 650, 151,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 118, 119, 120, 121, 122, 123, 124,
	125, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 141, 142, 147, 149, 152, 153, 154, 155, 156,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:835
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:842
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:848
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:856
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:862
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:866
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:881
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:885
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:891
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:896
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:900
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:933
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:947
		{
			var timestamp = yyDollar[2].str
			var isS3 = false
			var dir = yyDollar[4].str
			var parallelism = yyDollar[6].str
			var option []string
			var backuptype = yyDollar[7].str
			var backupts = yyDollar[8].str
			yyLOCAL = tree.NewBackupStart(timestamp, isS3, dir, parallelism, option, backuptype, backupts)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:958
		{
			var timestamp = yyDollar[2].str
			var isS3 = true
			var dir string
			var parallelism string
			var option = yyDollar[5].strsUnion()
			var backuptype = yyDollar[7].str
			var backupts = yyDollar[8].str
			yyLOCAL = tree.NewBackupStart(timestamp, isS3, dir, parallelism, option, backuptype, backupts)
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:970
		{
			yyVAL.str = ""
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:974
		{
			yyVAL.str = yyDollar[2].str
		}
	case 63:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:979
		{
			yyVAL.str = ""
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:983
		{
			yyVAL.str = yyDollar[2].str
		}
	case 65:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:989
		{
			yyLOCAL = &tree.CreateCDC{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				TaskName:    tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SourceUri:   yyDollar[5].str,
				SinkType:    yyDollar[6].str,
				SinkUri:     yyDollar[7].str,
				Tables:      yyDollar[8].str,
				Option:      yyDollar[10].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1003
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1007
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1011
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1015
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1022
		{
			yyLOCAL = &tree.ShowCDC{
				Option: yyDollar[3].allCDCOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1030
		{
			yyLOCAL = &tree.PauseCDC{
				Option: yyDollar[3].allCDCOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1038
		{
			yyLOCAL = tree.NewDropCDC(yyDollar[3].allCDCOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AllOrNotCDC
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1044
		{
			yyLOCAL = &tree.AllOrNotCDC{
				All:      true,
				TaskName: "",
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AllOrNotCDC
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1051
		{
			yyLOCAL = &tree.AllOrNotCDC{
				All:      false,
				TaskName: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1060
		{
			yyLOCAL = &tree.ResumeCDC{
				TaskName: tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1068
		{
			yyLOCAL = &tree.RestartCDC{
				TaskName: tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1076
		{
			yyLOCAL = &tree.CreateSnapShot{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Object:      yyDollar[6].snapshotObjectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1086
		{
			spLevel := tree.SnapshotLevelType{
				Level: tree.SNAPSHOTLEVELCLUSTER,
			}
			yyLOCAL = tree.ObjectInfo{
				SLevel:  spLevel,
				ObjName: "",
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ObjectInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1096
		{
			spLevel := tree.SnapshotLevelType{
				Level: tree.SNAPSHOTLEVELACCOUNT,
			}
			yyLOCAL = tree.ObjectInfo{
				SLevel:  spLevel,
				ObjName: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1108
		{
			yyLOCAL = &tree.CreatePitr{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Level:       tree.PITRLEVELACCOUNT,
				PitrValue:   yyDollar[6].int64ValUnion(),
				PitrUnit:    yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1118
		{
			yyLOCAL = &tree.CreatePitr{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Level:       tree.PITRLEVELCLUSTER,
				PitrValue:   yyDollar[8].int64ValUnion(),
				PitrUnit:    yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1128
		{
			yyLOCAL = &tree.CreatePitr{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Level:       tree.PITRLEVELACCOUNT,
				AccountName: tree.Identifier(yyDollar[7].cstrUnion().Compare()),
				PitrValue:   yyDollar[9].int64ValUnion(),
				PitrUnit:    yyDollar[10].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1139
		{
			yyLOCAL = &tree.CreatePitr{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Level:        tree.PITRLEVELDATABASE,
				DatabaseName: tree.Identifier(yyDollar[7].cstrUnion().Compare()),
				PitrValue:    yyDollar[9].int64ValUnion(),
				PitrUnit:     yyDollar[10].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1150
		{
			yyLOCAL = &tree.CreatePitr{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Level:        tree.PITRLEVELTABLE,
				DatabaseName: tree.Identifier(yyDollar[7].cstrUnion().Compare()),
				TableName:    tree.Identifier(yyDollar[9].cstrUnion().Compare()),
				PitrValue:    yyDollar[11].int64ValUnion(),
				PitrUnit:     yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1164
		{
			yyLOCAL = yyDollar[1].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1172
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELCLUSTER,
				SnapShotName: tree.Identifier(yyDollar[5].cstrUnion().Compare()),
			}

		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1180
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELACCOUNT,
				AccountName:  tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				SnapShotName: tree.Identifier(yyDollar[6].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1188
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELDATABASE,
				AccountName:  tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				DatabaseName: tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				SnapShotName: tree.Identifier(yyDollar[8].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1197
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELTABLE,
				AccountName:  tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				DatabaseName: tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				TableName:    tree.Identifier(yyDollar[7].cstrUnion().Compare()),
				SnapShotName: tree.Identifier(yyDollar[10].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1207
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:         tree.RESTORELEVELACCOUNT,
				AccountName:   tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				SnapShotName:  tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				ToAccountName: tree.Identifier(yyDollar[9].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1219
		{
			yyLOCAL = &tree.RestorePitr{
				Level:     tree.RESTORELEVELACCOUNT,
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TimeStamp: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1227
		{
			yyLOCAL = &tree.RestorePitr{
				Level:        tree.RESTORELEVELDATABASE,
				DatabaseName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Name:         tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				TimeStamp:    yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1236
		{
			yyLOCAL = &tree.RestorePitr{
				Level:        tree.RESTORELEVELTABLE,
				DatabaseName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				TableName:    tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				Name:         tree.Identifier(yyDollar[8].cstrUnion().Compare()),
				TimeStamp:    yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1246
		{
			yyLOCAL = &tree.RestorePitr{
				Level:          tree.RESTORELEVELACCOUNT,
				AccountName:    tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Name:           tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				TimeStamp:      yyDollar[7].str,
				SrcAccountName: tree.Identifier(yyDollar[8].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1256
		{
			yyLOCAL = &tree.RestorePitr{
				Level:     tree.RESTORELEVELCLUSTER,
				Name:      tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				TimeStamp: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1266
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1286
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1292
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1299
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1307
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1313
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1322
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1332
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1340
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1348
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1356
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1366
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1374
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1384
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1391
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1400
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1414
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1420
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1424
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1430
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1439
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1449
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1453
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1459
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1472
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1478
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1499
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
			yyLOCAL.(*tree.Load).Param.Strict = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1513
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1524
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1530
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1534
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1540
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1547
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1555
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1559
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error strict flag")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1571
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1575
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1589
		{
			yyLOCAL = tree.NewUnresolvedName(yyDollar[1].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1593
		{
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(tblNameCStr, yyDollar[3].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1598
		{
			dbNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(dbNameCStr, tblNameCStr, yyDollar[5].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1613
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1619
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1628
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1639
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1643
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1649
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1653
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1659
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1663
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1669
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				goto ret1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1693
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            goto ret1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1712
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1716
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1720
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1729
		{
			yyLOCAL = &tree.Lines{
				StartingBy: yyDollar[2].str,
				TerminatedBy: &tree.Terminated{
					Value: yyDollar[3].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1738
		{
			yyLOCAL = &tree.Lines{
				StartingBy: yyDollar[3].str,
				TerminatedBy: &tree.Terminated{
					Value: yyDollar[2].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1748
		{
			yyVAL.str = ""
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1755
		{
			yyVAL.str = yyDollar[3].str
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1760
		{
			yyVAL.str = "\n"
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1767
		{
			yyVAL.str = yyDollar[3].str
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1776
		{
			res := &tree.Fields{
				Terminated: &tree.Terminated{
					Value: "\t",
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: byte(0),
				},
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != nil {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != nil {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != nil {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1804
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1808
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1814
		{
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: yyDollar[3].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1822
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1842
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1861
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: &tree.EscapedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1886
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1890
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1894
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1909
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1922
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1933
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1946
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1950
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1960
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1973
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1986
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1992
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1998
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: tblName,
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2006
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  dbName,
				TabName: tblName,
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2016
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: tblName,
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2026
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2030
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2034
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2038
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2042
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2046
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2053
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2057
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2063
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2070
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2079
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2083
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2089
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2093
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2097
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2101
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2105
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPGRADE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2109
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2113
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2117
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2121
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2125
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2129
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2133
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2137
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2141
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2145
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2149
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2153
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2157
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2161
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2165
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2169
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2173
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2177
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2181
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2185
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2303
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2310
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2317
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2326
		{
			var connID uint32
			switch v := yyDollar[5].item.(type) {
			case uint64:
				connID = uint32(v)
			case int64:
				connID = uint32(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
			yyLOCAL = &tree.SetConnectionID{
				ConnectionID: connID,
			}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2344
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2348
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2354
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2361
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2369
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2373
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2377
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2381
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2387
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2391
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2397
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2404
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2411
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2420
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2450
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2454
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2458
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2464
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2470
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2474
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2481
		{
			yyVAL.str = yyDollar[3].str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2487
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2491
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2497
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2505
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2514
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2523
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2531
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2539
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				goto ret1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2562
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				goto ret1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2585
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2592
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2599
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumVal(yyDollar[4].str, yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2607
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2614
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2621
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2630
		{
			yyLOCAL = tree.NewNumVal(yyDollar[1].str, yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2634
		{
			yyLOCAL = tree.NewNumVal(yyDollar[1].str, yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2638
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2644
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2648
		{
			yyVAL.str = yyDollar[1].str
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2654
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2658
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2664
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2668
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2679
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2685
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2690
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2694
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2698
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2702
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2706
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2710
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2714
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2718
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2722
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2728
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2732
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2736
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2740
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2745
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2750
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2756
		{
			name := yyDollar[2].cstrUnion()
			secondaryRole := false
			var secondaryRoleType tree.SecondaryRoleType = 0
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2769
		{
			var name *tree.CStr
			secondaryRole := false
			var secondaryRoleType tree.SecondaryRoleType = 0
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2782
		{
			var name *tree.CStr
			secondaryRole := false
			var secondaryRoleType tree.SecondaryRoleType = 0
			role := yyDollar[3].roleUnion()
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2795
		{
			var name *tree.CStr
			secondaryRole := true
			secondaryRoleType := tree.SecondaryRoleTypeAll
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2808
		{
			var name *tree.CStr
			secondaryRole := true
			secondaryRoleType := tree.SecondaryRoleTypeNone
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2824
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2831
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2842
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2853
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2857
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2863
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2873
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2879
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2883
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2889
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2895
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2899
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2903
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2907
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2913
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2926
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2932
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2936
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2942
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2946
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2952
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2958
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2969
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2975
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2979
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2983
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2987
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2991
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2995
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3003
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3011
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3021
		{
			explainStmt := tree.NewExplainPhyPlan(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("phyplan", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3029
		{
			explainStmt := tree.NewExplainPhyPlan(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("phyplan", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3039
		{
			explainStmt := tree.NewExplainPhyPlan(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("phyplan", "NULL")
			optionElem2 := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3049
		{
			if tree.IsContainPhyPlan(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainPhyPlan(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3065
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3069
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3077
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3085
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3125
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3129
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3135
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3141
		{
			yyVAL.str = yyDollar[1].str
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3146
		{
			yyVAL.str = "true"
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3147
		{
			yyVAL.str = "false"
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3153
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3159
		{
			yyLOCAL = &tree.UpgradeStatement{
				Target: yyDollar[3].upgrade_targetUnion(),
				Retry:  yyDollar[4].int64ValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Target
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3168
		{
			yyLOCAL = &tree.Target{
				AccountName:  yyDollar[1].str,
				IsALLAccount: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Target
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3175
		{
			yyLOCAL = &tree.Target{
				AccountName:  "",
				IsALLAccount: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3183
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3187
		{
			res := yyDollar[3].item.(int64)
			if res <= 0 {
				yylex.Error("retry value can not less than 0")
				yyLOCAL = -1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3212
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].tableNameUnion()
			var typ = yyDollar[5].alterTypeOptionUnion()
			var incrementBy = yyDollar[6].incrementByOptionUnion()
			var minValue = yyDollar[7].minValueOptionUnion()
			var maxValue = yyDollar[8].maxValueOptionUnion()
			var startWith = yyDollar[9].startWithOptionUnion()
			var cycle = yyDollar[10].cycleOptionUnion()
			yyLOCAL = tree.NewAlterSequence(
				ifExists,
				name,
				typ,
				incrementBy,
				minValue,
				maxValue,
				startWith,
				cycle,
			)
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3235
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].tableNameUnion()
			var colNames = yyDollar[5].identifierListUnion()
			var asSource = yyDollar[7].selectUnion()
			yyLOCAL = tree.NewAlterView(ifExists, name, colNames, asSource)
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3245
		{
			var table = yyDollar[3].tableNameUnion()
			alterTable := tree.NewAlterTable(table)
			alterTable.Options = yyDollar[4].alterTableOptionsUnion()
			yyLOCAL = alterTable
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3252
		{
			var table = yyDollar[3].tableNameUnion()
			alterTable := tree.NewAlterTable(table)
			alterTable.PartitionOption = yyDollar[4].alterPartitionOptionUnion()
			yyLOCAL = alterTable
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3261
		{
			alterTables := yyDollar[3].renameTableOptionsUnion()
			renameTables := tree.NewRenameTable(alterTables)
			yyLOCAL = renameTables
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterTable
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3269
		{
			yyLOCAL = []*tree.AlterTable{yyDollar[1].renameTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterTable
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3273
		{
			yyLOCAL = append(yyDollar[1].renameTableOptionsUnion(), yyDollar[3].renameTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AlterTable
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3279
		{
			var table = yyDollar[1].tableNameUnion()
			alterTable := tree.NewAlterTable(table)
			opt := tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
			alterTable.Options = []tree.AlterTableOption{opt}
			yyLOCAL = alterTable
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3290
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3294
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3300
		{
			yyLOCAL = yyDollar[1].alterPartitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3304
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			var PartBy = yyDollar[3].partitionByUnion()
			var SubPartBy = yyDollar[5].partitionByUnion()
			var Partitions = yyDollar[6].partitionsUnion()

			partitionDef := tree.NewPartitionOption(
				PartBy,
				SubPartBy,
				Partitions,
			)

			var typ tree.AlterPartitionOptionType

			opt := tree.NewAlterPartitionRedefinePartitionClause(
				typ,
				partitionDef,
			)

			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3328
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var pitrValue = yyDollar[6].int64ValUnion()
			var pitrUnit = yyDollar[7].str
			yyLOCAL = tree.NewAlterPitr(ifExists, name, pitrValue, pitrUnit)
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3338
		{
			var typ = tree.AlterPartitionAddPartition
			var partitions = yyDollar[3].partitionsUnion()
			opt := tree.NewAlterPartitionAddPartitionClause(
				typ,
				partitions,
			)
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3348
		{
			var typ = tree.AlterPartitionDropPartition
			var partitionNames = yyDollar[3].PartitionNamesUnion()
			opt := tree.NewAlterPartitionDropPartitionClause(
				typ,
				partitionNames,
			)

			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3364
		{
			var typ = tree.AlterPartitionTruncatePartition
			var partitionNames = yyDollar[3].PartitionNamesUnion()
			opt := tree.NewAlterPartitionTruncatePartitionClause(
				typ,
				partitionNames,
			)

			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3386
		{
			yyLOCAL = yyDollar[1].PartitionNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3392
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3396
		{
			yyLOCAL = append(yyDollar[1].PartitionNamesUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3402
		{
			var def = yyDollar[2].tableDefUnion()
			opt := tree.NewAlterOptionAdd(def)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3408
		{
			var typ = tree.AlterTableModifyColumn
			var newColumn = yyDollar[3].columnTableDefUnion()
			var position = yyDollar[4].alterColPositionUnion()
			opt := tree.NewAlterTableModifyColumnClause(typ, newColumn, position)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3416
		{
			// Type OldColumnName NewColumn Position
			var typ = tree.AlterTableChangeColumn
			var oldColumnName = yyDollar[3].unresolvedNameUnion()
			var newColumn = yyDollar[4].columnTableDefUnion()
			var position = yyDollar[5].alterColPositionUnion()
			opt := tree.NewAlterTableChangeColumnClause(typ, oldColumnName, newColumn, position)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3426
		{
			var typ = tree.AlterTableRenameColumn
			var oldColumnName = yyDollar[3].unresolvedNameUnion()
			var newColumnName = yyDollar[5].unresolvedNameUnion()
			opt := tree.NewAlterTableRenameColumnClause(typ, oldColumnName, newColumnName)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3434
		{
			var typ = tree.AlterTableAlterColumn
			var columnName = yyDollar[3].unresolvedNameUnion()
			var defaultExpr = tree.NewAttributeDefault(yyDollar[6].exprUnion())
			var visibility tree.VisibleType
			var optionType = tree.AlterColumnOptionSetDefault
			opt := tree.NewAlterTableAlterColumnClause(typ, columnName, defaultExpr, visibility, optionType)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3444
		{
			var typ = tree.AlterTableAlterColumn
			var columnName = yyDollar[3].unresolvedNameUnion()
			var defaultExpr = tree.NewAttributeDefault(nil)
			var visibility = yyDollar[5].indexVisibilityUnion()
			var optionType = tree.AlterColumnOptionSetVisibility
			opt := tree.NewAlterTableAlterColumnClause(typ, columnName, defaultExpr, visibility, optionType)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3454
		{
			var typ = tree.AlterTableAlterColumn
			var columnName = yyDollar[3].unresolvedNameUnion()
			var defaultExpr = tree.NewAttributeDefault(nil)
			var visibility tree.VisibleType
			var optionType = tree.AlterColumnOptionDropDefault
			opt := tree.NewAlterTableAlterColumnClause(typ, columnName, defaultExpr, visibility, optionType)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3464
		{
			var orderByClauseType = tree.AlterTableOrderByColumn
			var orderByColumnList = yyDollar[3].alterColumnOrderByUnion()
			opt := tree.NewAlterTableOrderByColumnClause(orderByClauseType, orderByColumnList)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3471
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3475
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3479
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3483
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3487
		{
			var column = yyDollar[3].columnTableDefUnion()
			var position = yyDollar[4].alterColPositionUnion()
			opt := tree.NewAlterAddCol(column, position)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3494
		{
			var checkType = yyDollar[1].str
			var enforce bool
			yyLOCAL = tree.NewAlterOptionAlterCheck(checkType, enforce)
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3500
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3504
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3508
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3512
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3516
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3520
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3524
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3528
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3533
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3564
		{
			yyVAL.str = ""
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3568
		{
			yyVAL.str = string("COLUMN")
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3573
		{
			var typ = tree.ColumnPositionNone
			var relativeColumn *tree.UnresolvedName
			yyLOCAL = tree.NewColumnPosition(typ, relativeColumn)
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3579
		{
			var typ = tree.ColumnPositionFirst
			var relativeColumn *tree.UnresolvedName
			yyLOCAL = tree.NewColumnPosition(typ, relativeColumn)
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3585
		{
			var typ = tree.ColumnPositionAfter
			var relativeColumn = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = tree.NewColumnPosition(typ, relativeColumn)
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3593
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3597
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3603
		{
			var column = yyDollar[1].unresolvedNameUnion()
			var direction = yyDollar[2].directionUnion()
			yyLOCAL = tree.NewAlterColumnOrder(column, direction)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3611
		{
			var name = yyDollar[1].unresolvedObjectNameUnion()
			yyLOCAL = tree.NewAlterOptionTableName(name)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3618
		{
			var dropType = tree.AlterTableDropIndex
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3624
		{
			var dropType = tree.AlterTableDropKey
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3630
		{
			var dropType = tree.AlterTableDropColumn
			var name = tree.Identifier(yyDollar[1].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3636
		{
			var dropType = tree.AlterTableDropColumn
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3642
		{
			var dropType = tree.AlterTableDropForeignKey
			var name = tree.Identifier(yyDollar[3].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)

		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3649
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3656
		{
			var dropType = tree.AlterTableDropPrimaryKey
			var name = tree.Identifier("")
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3664
		{
			var indexName = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var visibility = yyDollar[3].indexVisibilityUnion()
			yyLOCAL = tree.NewAlterOptionAlterIndex(indexName, visibility)
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3670
		{
			val := int64(yyDollar[6].item.(int64))
			if val <= 0 {
				yylex.Error("LISTS should be greater than 0")
				return 1
			}
			var keyType = tree.INDEX_TYPE_IVFFLAT
			var algoParamList = val
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionAlterReIndex(name, keyType, algoParamList)
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3682
		{
			var checkType = yyDollar[1].str
			var enforce = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewAlterOptionAlterCheck(checkType, enforce)
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3688
		{
			var checkType = yyDollar[1].str
			var enforce = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewAlterOptionAlterCheck(checkType, enforce)
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3696
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3700
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3707
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].exprUnion()
			var authOption = yyDollar[5].alterAccountAuthOptionUnion()
			var statusOption = yyDollar[6].accountStatusUnion()
			var comment = yyDollar[7].accountCommentUnion()

			yyLOCAL = tree.NewAlterAccount(
				ifExists,
				name,
				authOption,
				statusOption,
				comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3725
		{
			var accountName = ""
			var dbName = yyDollar[3].str
			var isAccountLevel = false
			var updateConfig = yyDollar[7].str

			yyLOCAL = tree.NewAlterDataBaseConfig(
				accountName,
				dbName,
				isAccountLevel,
				tree.MYSQL_COMPATIBILITY_MODE,
				updateConfig,
			)
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3740
		{
			var accountName = ""
			var dbName = yyDollar[3].str
			var isAccountLevel = false
			var updateConfig = yyDollar[7].str

			yyLOCAL = tree.NewAlterDataBaseConfig(
				accountName,
				dbName,
				isAccountLevel,
				tree.UNIQUE_CHECK_ON_AUTOINCR,
				updateConfig,
			)
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3755
		{
			var accountName = yyDollar[4].str
			var dbName = ""
			var isAccountLevel = true
			var updateConfig = yyDollar[8].str

			yyLOCAL = tree.NewAlterDataBaseConfig(
				accountName,
				dbName,
				isAccountLevel,
				tree.MYSQL_COMPATIBILITY_MODE,
				updateConfig,
			)
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3770
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3783
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3789
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].exprUnion(),
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3800
		{
			// Create temporary variables with meaningful names
			ifExists := yyDollar[3].boolValUnion()
			users := yyDollar[4].usersUnion()
			role := yyDollar[5].accountRoleUnion()
			miscOpt := yyDollar[6].userMiscOptionUnion()
			commentOrAttribute := yyDollar[7].accountCommentOrAttributeUnion()

			// Use the temporary variables to call the function
			yyLOCAL = tree.NewAlterUser(ifExists, users, role, miscOpt, commentOrAttribute)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3817
		{
			var UserName = yyDollar[3].str
			yyLOCAL = tree.NewRole(
				UserName,
			)
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3829
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3838
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3854
		{
			yyLOCAL = tree.NewUserMiscOptionAccountUnlock()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3858
		{
			yyLOCAL = tree.NewUserMiscOptionAccountLock()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3862
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireNone()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3866
		{
			var Value = yyDollar[3].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireInterval(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3873
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireNever()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3877
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireDefault()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3881
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordHistoryDefault()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3885
		{
			var Value = yyDollar[3].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordHistoryCount(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3892
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordReuseIntervalDefault()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3896
		{
			var Value = yyDollar[4].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordReuseIntervalCount(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3903
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordRequireCurrentNone()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3907
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordRequireCurrentDefault()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3911
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordRequireCurrentOptional()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3915
		{
			var Value = yyDollar[2].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionFailedLoginAttempts(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3922
		{
			var Value = yyDollar[2].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordLockTimeCount(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3929
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordLockTimeUnbounded()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3935
		{
			yyVAL.item = nil
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3940
		{
			yyVAL.item = nil
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3985
		{
			yyLOCAL = &tree.ShowCollation{
				Like:  yyDollar[3].comparisionExprUnion(),
				Where: yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3994
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4002
		{
			yyLOCAL = &tree.ShowSnapShots{
				Where: yyDollar[3].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4010
		{
			yyLOCAL = &tree.ShowPitr{
				Where: yyDollar[3].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4018
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4022
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4026
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{
				{UserName: yyDollar[5].cstrUnion().Compare()},
			}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4041
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4047
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4052
		{
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4056
		{
		}
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4061
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4071
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4081
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4089
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4095
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4101
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4107
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4113
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4119
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4125
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4134
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4138
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4142
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4146
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4150
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4154
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4158
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4162
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4168
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4177
		{
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4179
		{
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4188
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4198
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4215
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4221
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4227
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4233
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4239
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4248
		{
			yyLOCAL = &tree.ShowTables{
				Open:     false,
				Full:     yyDollar[2].fullOptUnion(),
				DBName:   yyDollar[4].str,
				Like:     yyDollar[5].comparisionExprUnion(),
				Where:    yyDollar[6].whereUnion(),
				AtTsExpr: yyDollar[7].atTimeStampUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4259
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4271
		{
			yyLOCAL = &tree.ShowDatabases{
				Like:     yyDollar[3].comparisionExprUnion(),
				Where:    yyDollar[4].whereUnion(),
				AtTsExpr: yyDollar[5].atTimeStampUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4279
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4285
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4297
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4311
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4317
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4323
		{
			yyLOCAL = &tree.ShowAccountUpgrade{}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4330
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4334
		{
			yyLOCAL = &tree.ShowSubscriptions{All: true, Like: yyDollar[4].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4343
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4347
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4352
		{
			yyVAL.str = ""
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4356
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4362
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4377
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4381
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4387
		{
			yyLOCAL = &tree.ShowCreateTable{
				Name:     yyDollar[4].unresolvedObjectNameUnion(),
				AtTsExpr: yyDollar[5].atTimeStampUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4395
		{
			yyLOCAL = &tree.ShowCreateView{
				Name:     yyDollar[4].unresolvedObjectNameUnion(),
				AtTsExpr: yyDollar[5].atTimeStampUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4402
		{
			yyLOCAL = &tree.ShowCreateDatabase{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Name:        yyDollar[5].str,
				AtTsExpr:    yyDollar[6].atTimeStampUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4410
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4416
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4422
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(tblName)
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4427
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(dbName, tblName)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4435
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4441
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(tblName)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4446
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(dbName, tblName)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4452
		{
			yyLOCAL = tree.NewUnresolvedObjectName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4458
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4462
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4490
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropSequence(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4498
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].exprUnion()
			yyLOCAL = tree.NewDropAccount(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4506
		{
			var ifExists = yyDollar[3].boolValUnion()
			var users = yyDollar[4].usersUnion()
			yyLOCAL = tree.NewDropUser(ifExists, users)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4514
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4518
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4524
		{
			var Username = yyDollar[1].usernameRecordUnion().Username
			var Hostname = yyDollar[1].usernameRecordUnion().Hostname
			var AuthOption *tree.AccountIdentified
			yyLOCAL = tree.NewUser(
				Username,
				Hostname,
				AuthOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4537
		{
			var ifExists = yyDollar[3].boolValUnion()
			var roles = yyDollar[4].rolesUnion()
			yyLOCAL = tree.NewDropRole(ifExists, roles)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4545
		{
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var tableName = yyDollar[6].tableNameUnion()
			var ifExists = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewDropIndex(name, tableName, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4554
		{
			var ifExists = yyDollar[4].boolValUnion()
			var names = yyDollar[5].tableNamesUnion()
			yyLOCAL = tree.NewDropTable(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4560
		{
			var ifExists = yyDollar[3].boolValUnion()
			var names = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropTable(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4568
		{
			var ifExists = yyDollar[3].boolValUnion()
			var names = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropConnector(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4576
		{
			var ifExists = yyDollar[3].boolValUnion()
			var names = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropView(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4584
		{
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var ifExists = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewDropDatabase(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4590
		{
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var ifExists = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewDropDatabase(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4598
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4604
		{
			var name = yyDollar[3].functionNameUnion()
			var args = yyDollar[5].funcArgsUnion()
			yyLOCAL = tree.NewDropFunction(name, args)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4612
		{
			var name = yyDollar[3].procNameUnion()
			var ifExists = false
			yyLOCAL = tree.NewDropProcedure(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4618
		{
			var name = yyDollar[5].procNameUnion()
			var ifExists = true
			yyLOCAL = tree.NewDropProcedure(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4628
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4633
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4640
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4656
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].tableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4669
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].tableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4680
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4684
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4690
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, nil)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4696
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, nil)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4705
		{
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4707
		{
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4710
		{
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4719
		{
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4723
		{
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4728
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4737
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4744
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4750
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4758
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4765
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4772
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				goto ret1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4792
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4800
		{
			ins := yyDollar[5].insertUnion()
			ins.Table = yyDollar[3].tableExprUnion()
			ins.PartitionNames = yyDollar[4].identifierListUnion()
			ins.OnDuplicateUpdate = []*tree.UpdateExpr{nil}
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4810
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4814
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4820
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4827
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4833
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4841
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4848
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4855
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				goto ret1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4874
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4878
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4882
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4891
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4895
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4901
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4910
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4914
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4920
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4924
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4930
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4934
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4940
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4945
		{
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4956
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4960
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4967
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4976
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4982
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4986
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4992
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4996
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5005
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5018
		{
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: ",",
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: '"',
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5029
		{
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: yyDollar[4].str,
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: '"',
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5040
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: yyDollar[4].str,
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5062
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: ",",
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5085
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: &tree.Terminated{
					Value: "\n",
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5093
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: &tree.Terminated{
					Value: yyDollar[2].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5102
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5106
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5119
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5123
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5128
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5132
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5139
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5144
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5151
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5157
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5161
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5165
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5169
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5173
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5177
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5186
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5192
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5202
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				goto ret1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumVal(v, str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5221
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				goto ret1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumVal(v, str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5239
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5245
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5254
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5258
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5262
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5266
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5270
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5276
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5283
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5292
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5296
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5302
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5314
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5323
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5329
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5333
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5337
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5346
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5352
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5358
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5362
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5368
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5373
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5377
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5381
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5386
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5390
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5394
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5403
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5411
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5415
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5419
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5433
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5437
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5447
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5457
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5467
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5479
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5487
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5495
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5504
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5512
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5520
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5528
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5536
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5544
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5552
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5560
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5568
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5578
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5589
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5603
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5607
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5611
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5620
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5624
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5637
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.GroupByClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.GroupByClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5646
		{
			exprsList := []tree.Exprs{yyDollar[3].exprsUnion()}
			yyLOCAL = &tree.GroupByClause{
				GroupByExprsList: exprsList,
				Apart:            false,
				Cube:             false,
				Rollup:           yyDollar[4].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.GroupByClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5656
		{
			yyLOCAL = &tree.GroupByClause{
				GroupByExprsList: yyDollar[6].rowsExprsUnion(),
				Apart:            false,
				Cube:             false,
				Rollup:           false,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.GroupByClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5665
		{
			yyLOCAL = &tree.GroupByClause{
				GroupByExprsList: []tree.Exprs{yyDollar[5].exprsUnion()},
				Apart:            false,
				Cube:             true,
				Rollup:           false,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.GroupByClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5674
		{
			yyLOCAL = &tree.GroupByClause{
				GroupByExprsList: []tree.Exprs{yyDollar[5].exprsUnion()},
				Apart:            false,
				Cube:             false,
				Rollup:           true,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5685
		{
			yyLOCAL = []tree.Exprs{yyDollar[2].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5689
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[4].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5707
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5713
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5717
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5723
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5727
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5731
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.NewUnresolvedNameWithStar(yyDollar[1].cstrUnion())}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5735
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.NewUnresolvedNameWithStar(yyDollar[1].cstrUnion(), yyDollar[3].cstrUnion())}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5740
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix, nil)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5748
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5754
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].tableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5762
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else if t, ok := yyDollar[1].tableExprUnion().(*tree.ApplyTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5772
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5782
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5786
		{
			yyLOCAL = yyDollar[1].applyTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5792
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5801
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5810
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5819
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ApplyTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5829
		{
			yyLOCAL = &tree.ApplyTableExpr{
				Left:      yyDollar[1].tableExprUnion(),
				ApplyType: yyDollar[2].str,
				Right:     yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5839
		{
			yyVAL.str = tree.APPLY_TYPE_CROSS
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5843
		{
			yyVAL.str = tree.APPLY_TYPE_OUTER
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5849
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5853
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5863
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5867
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5871
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5875
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5881
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5892
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5896
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5902
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5912
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5918
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5924
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5928
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5932
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5936
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS_L2
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5946
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5952
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5956
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5962
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5966
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5972
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5976
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5986
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5999
		{
			yyLOCAL = yyDollar[2].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6005
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6011
		{
			name := tree.NewUnresolvedName(yyDollar[1].cstrUnion())
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:     tree.FuncName2ResolvableFunctionReference(name),
					FuncName: yyDollar[1].cstrUnion(),
					Exprs:    yyDollar[3].exprsUnion(),
					Type:     tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6025
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6043
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6047
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6053
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6063
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6067
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6071
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6076
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6080
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6084
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6088
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6093
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6097
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6101
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6105
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6109
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6114
		{
			yyVAL.str = ""
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6122
		{
			yyVAL.str = yyDollar[2].str
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6128
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6132
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].str)
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6137
		{
			yyLOCAL = tree.NewCStr("", 1)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6141
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6145
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6149
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6153
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6159
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 967:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6201
		{
			var Language = yyDollar[3].str
			var Name = tree.Identifier(yyDollar[5].str)
			var Filename = tree.Identifier(yyDollar[7].str)
			yyLOCAL = tree.NewCreateExtension(
				Language,
				Name,
				Filename,
			)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6214
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6220
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 970:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6226
		{
			var Name = yyDollar[3].procNameUnion()
			var Args = yyDollar[5].procArgsUnion()
			var Body = yyDollar[7].str
			yyLOCAL = tree.NewCreateProcedure(
				Name,
				Args,
				Body,
			)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6239
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6244
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6251
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6258
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6262
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6268
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6274
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6279
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6283
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6287
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6291
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6298
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				goto ret1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				goto ret1
			}

			var Replace = yyDollar[2].sourceOptionalUnion()
			var Name = yyDollar[4].functionNameUnion()
			var Args = yyDollar[6].funcArgsUnion()
			var ReturnType = yyDollar[9].funcReturnUnion()
			var Language = yyDollar[11].str
			var Import = yyDollar[12].boolValUnion()
			var Body = yyDollar[13].str
			var Handler = yyDollar[14].str

			yyLOCAL = tree.NewCreateFunction(
				Replace,
				Name,
				Args,
				ReturnType,
				Language,
				Import,
				Body,
				Handler,
			)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6331
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6336
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6343
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6350
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6354
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6360
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6366
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6370
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6374
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6380
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6386
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6402
		{
			yyVAL.str = ""
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6409
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1001:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6415
		{
			var Replace bool
			var Name = yyDollar[5].tableNameUnion()
			var ColNames = yyDollar[6].identifierListUnion()
			var AsSource = yyDollar[8].selectUnion()
			var IfNotExists = yyDollar[4].ifNotExistsUnion()
			yyLOCAL = tree.NewCreateView(
				Replace,
				Name,
				ColNames,
				AsSource,
				IfNotExists,
			)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6430
		{
			var Replace = yyDollar[2].sourceOptionalUnion()
			var Name = yyDollar[5].tableNameUnion()
			var ColNames = yyDollar[6].identifierListUnion()
			var AsSource = yyDollar[8].selectUnion()
			var IfNotExists = yyDollar[4].ifNotExistsUnion()
			yyLOCAL = tree.NewCreateView(
				Replace,
				Name,
				ColNames,
				AsSource,
				IfNotExists,
			)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6447
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = yyDollar[4].exprUnion()
			var AuthOption = yyDollar[5].accountAuthOptionUnion()
			var StatusOption = yyDollar[6].accountStatusUnion()
			var Comment = yyDollar[7].accountCommentUnion()
			yyLOCAL = tree.NewCreateAccount(
				IfNotExists,
				Name,
				AuthOption,
				StatusOption,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6468
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6474
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6478
		{
			yyVAL.str = "DEFINER = "
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6482
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6487
		{
			yyVAL.str = ""
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6491
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6505
		{
			yyVAL.str = ""
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6513
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6519
		{
			var str = yyDollar[1].cstrUnion().Compare()
			yyLOCAL = tree.NewNumVal(str, str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6524
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6530
		{
			var Equal = yyDollar[2].str
			var AdminName = yyDollar[3].exprUnion()
			var IdentifiedType = yyDollar[4].accountIdentifiedUnion()
			yyLOCAL = *tree.NewAccountAuthOption(
				Equal,
				AdminName,
				IdentifiedType,
			)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6543
		{
			var str = yyDollar[1].str
			yyLOCAL = tree.NewNumVal(str, str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6548
		{
			var str = yyDollar[1].cstrUnion().Compare()
			yyLOCAL = tree.NewNumVal(str, str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6553
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6559
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedByPassword,
				tree.NewNumVal(yyDollar[3].str, yyDollar[3].str, false, tree.P_char),
			)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6566
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedByPassword,
				tree.NewParamExpr(yylex.(*Lexer).GetParamIndex()),
			)
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6573
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedByRandomPassword,
				nil,
			)
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6580
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedWithSSL,
				tree.NewNumVal(yyDollar[3].str, yyDollar[3].str, false, tree.P_char),
			)
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6587
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedWithSSL,
				tree.NewParamExpr(yylex.(*Lexer).GetParamIndex()),
			)
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6595
		{
			as := tree.NewAccountStatus()
			as.Exist = false
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6601
		{
			as := tree.NewAccountStatus()
			as.Exist = true
			as.Option = tree.AccountStatusOpen
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6608
		{
			as := tree.NewAccountStatus()
			as.Exist = true
			as.Option = tree.AccountStatusSuspend
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6615
		{
			as := tree.NewAccountStatus()
			as.Exist = true
			as.Option = tree.AccountStatusRestricted
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6623
		{
			ac := tree.NewAccountComment()
			ac.Exist = false
			yyLOCAL = *ac
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6629
		{
			ac := tree.NewAccountComment()
			ac.Exist = true
			ac.Comment = yyDollar[2].str
			yyLOCAL = *ac
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6638
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Users = yyDollar[4].usersUnion()
			var Role = yyDollar[5].accountRoleUnion()
			var MiscOpt = yyDollar[6].userMiscOptionUnion()
			var CommentOrAttribute = yyDollar[7].accountCommentOrAttributeUnion()
			yyLOCAL = tree.NewCreateUser(
				IfNotExists,
				Users,
				Role,
				MiscOpt,
				CommentOrAttribute,
			)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6655
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Database = tree.Identifier(yyDollar[6].str)
			var AccountsSet = yyDollar[7].accountsSetOptionUnion()
			var Comment = yyDollar[8].str
			yyLOCAL = tree.NewCreatePublication(
				IfNotExists,
				Name,
				Database,
				nil,
				AccountsSet,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6671
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Database = tree.Identifier(yyDollar[6].str)
			var Table = yyDollar[8].tableNamesUnion()
			var AccountsSet = yyDollar[9].accountsSetOptionUnion()
			var Comment = yyDollar[10].str
			yyLOCAL = tree.NewCreatePublication(
				IfNotExists,
				Name,
				Database,
				Table,
				AccountsSet,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6690
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6696
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6705
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Url = yyDollar[5].str
			var Credentials = yyDollar[6].stageCredentialsUnion()
			var Status = yyDollar[7].stageStatusUnion()
			var Comment = yyDollar[8].stageCommentUnion()
			yyLOCAL = tree.NewCreateStage(
				IfNotExists,
				Name,
				Url,
				Credentials,
				Status,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6723
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6729
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6736
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6744
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6750
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6758
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6764
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6772
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6778
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6787
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6791
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6796
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6800
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6807
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6812
		{
			yyVAL.str = ""
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6816
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1059:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6822
		{
			var ifNotExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var urlOption = yyDollar[6].stageUrlUnion()
			var credentialsOption = yyDollar[7].stageCredentialsUnion()
			var statusOption = yyDollar[8].stageStatusUnion()
			var comment = yyDollar[9].stageCommentUnion()
			yyLOCAL = tree.NewAlterStage(ifNotExists, name, urlOption, credentialsOption, statusOption, comment)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6835
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var accountsSet = yyDollar[5].accountsSetOptionUnion()
			var dbName = yyDollar[6].str
			var table = yyDollar[7].tableNamesUnion()
			var comment = yyDollar[8].str
			yyLOCAL = tree.NewAlterPublication(ifExists, name, accountsSet, dbName, table, comment)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6850
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6856
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6862
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6868
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6875
		{
			yyVAL.str = ""
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6879
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableNames
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableNames
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6888
		{
			yyLOCAL = yyDollar[2].tableNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6894
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewDropPublication(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6902
		{
			var ifNotExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewDropStage(ifNotExists, name)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6910
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewDropSnapShot(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6918
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewDropPitr(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6926
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6931
		{
			var Exist = false
			var IsComment bool
			var Str string
			yyLOCAL = *tree.NewAccountCommentOrAttribute(
				Exist,
				IsComment,
				Str,
			)

		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6943
		{
			var Exist = true
			var IsComment = true
			var Str = yyDollar[2].str
			yyLOCAL = *tree.NewAccountCommentOrAttribute(
				Exist,
				IsComment,
				Str,
			)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6954
		{
			var Exist = true
			var IsComment = false
			var Str = yyDollar[2].str
			yyLOCAL = *tree.NewAccountCommentOrAttribute(
				Exist,
				IsComment,
				Str,
			)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7063
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7067
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7073
		{
			var Username = yyDollar[1].usernameRecordUnion().Username
			var Hostname = yyDollar[1].usernameRecordUnion().Hostname
			var AuthOption = yyDollar[2].userIdentifiedUnion()
			yyLOCAL = tree.NewUser(
				Username,
				Hostname,
				AuthOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7086
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7090
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7096
		{
			var Username = yyDollar[1].usernameRecordUnion().Username
			var Hostname = yyDollar[1].usernameRecordUnion().Hostname
			var AuthOption = yyDollar[2].userIdentifiedUnion()
			yyLOCAL = tree.NewUser(
				Username,
				Hostname,
				AuthOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7109
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7113
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7117
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7126
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7132
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: tree.NewNumVal(yyDollar[3].str, yyDollar[3].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7139
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7145
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: tree.NewNumVal(yyDollar[3].str, yyDollar[3].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7154
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7161
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Roles = yyDollar[4].rolesUnion()
			yyLOCAL = tree.NewCreateRole(
				IfNotExists,
				Roles,
			)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7172
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7176
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7182
		{
			var UserName = yyDollar[1].cstrUnion().Compare()
			yyLOCAL = tree.NewRole(
				UserName,
			)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7191
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7195
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7199
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7204
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7208
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7212
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7216
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7222
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = tree.NewIndexOption()
				io.IType = yyDollar[5].indexTypeUnion()
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = tree.NewIndexOption()
				io.IType = tree.INDEX_TYPE_INVALID
			}
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Table = yyDollar[7].tableNameUnion()
			var ifNotExists = false
			var IndexCat = yyDollar[2].indexCategoryUnion()
			var KeyParts = yyDollar[9].keyPartsUnion()
			var IndexOption = io
			var MiscOption []tree.MiscOption
			yyLOCAL = tree.NewCreateIndex(
				Name,
				Table,
				ifNotExists,
				IndexCat,
				KeyParts,
				IndexOption,
				MiscOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7257
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorOpType) > 0 {
					opt1.AlgoParamVectorOpType = opt2.AlgoParamVectorOpType
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7283
		{
			io := tree.NewIndexOption()
			io.KeyBlockSize = uint64(yyDollar[3].item.(int64))
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7289
		{
			val := int64(yyDollar[3].item.(int64))
			if val <= 0 {
				yylex.Error("LISTS should be greater than 0")
				return 1
			}

			io := tree.NewIndexOption()
			io.AlgoParamList = val
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7301
		{
			io := tree.NewIndexOption()
			io.AlgoParamVectorOpType = yyDollar[2].str
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7307
		{
			io := tree.NewIndexOption()
			io.Comment = yyDollar[2].str
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7313
		{
			io := tree.NewIndexOption()
			io.ParserName = yyDollar[3].cstrUnion().Compare()
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7319
		{
			io := tree.NewIndexOption()
			io.Visible = tree.VISIBLE_TYPE_VISIBLE
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7325
		{
			io := tree.NewIndexOption()
			io.Visible = tree.VISIBLE_TYPE_INVISIBLE
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7333
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7337
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7343
		{
			// Order is parsed but just ignored as MySQL dtree.
			var ColName = yyDollar[1].unresolvedNameUnion()
			var Length = int(yyDollar[2].lengthOptUnion())
			var Direction = yyDollar[3].directionUnion()
			var Expr tree.Expr
			yyLOCAL = tree.NewKeyPart(
				ColName,
				Length,
				Direction,
				Expr,
			)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7357
		{
			var ColName *tree.UnresolvedName
			var Length int
			var Expr = yyDollar[2].exprUnion()
			var Direction = yyDollar[4].directionUnion()
			yyLOCAL = tree.NewKeyPart(
				ColName,
				Length,
				Direction,
				Expr,
			)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7371
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7375
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7379
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7383
		{
			yyLOCAL = tree.INDEX_TYPE_MASTER
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7387
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7391
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7395
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7401
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].str)
			var SubscriptionOption = yyDollar[5].subscriptionOptionUnion()
			var CreateOptions = yyDollar[6].createOptionsUnion()
			yyLOCAL = tree.NewCreateDatabase(
				IfNotExists,
				Name,
				SubscriptionOption,
				CreateOptions,
			)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7420
		{
			var From = tree.Identifier(yyDollar[2].str)
			var Publication = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewSubscriptionOption(From, Publication)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7444
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7450
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7454
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7460
		{
			var IsDefault = yyDollar[1].defaultOptionalUnion()
			var Charset = yyDollar[4].str
			yyLOCAL = tree.NewCreateOptionCharset(
				IsDefault,
				Charset,
			)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7469
		{
			var IsDefault = yyDollar[1].defaultOptionalUnion()
			var Collate = yyDollar[4].str
			yyLOCAL = tree.NewCreateOptionCollate(
				IsDefault,
				Collate,
			)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7478
		{
			var Encrypt = yyDollar[4].str
			yyLOCAL = tree.NewCreateOptionEncryption(Encrypt)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7484
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7494
		{
			var TableName = yyDollar[4].tableNameUnion()
			var Options = yyDollar[7].connectorOptionsUnion()
			yyLOCAL = tree.NewCreateConnector(
				TableName,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7505
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7511
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7529
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7547
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7565
		{
			var Replace = yyDollar[2].sourceOptionalUnion()
			var IfNotExists = yyDollar[4].ifNotExistsUnion()
			var SourceName = yyDollar[5].tableNameUnion()
			var Defs = yyDollar[7].tableDefsUnion()
			var Options = yyDollar[9].tableOptionsUnion()
			yyLOCAL = tree.NewCreateSource(
				Replace,
				IfNotExists,
				SourceName,
				Defs,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7581
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7594
		{
			t := tree.NewCreateTable()
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.Options = yyDollar[9].tableOptionsUnion()
			t.PartitionOption = yyDollar[10].partitionOptionUnion()
			t.ClusterByOption = yyDollar[11].clusterByOptionUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7606
		{
			t := tree.NewCreateTable()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.Param = yyDollar[9].loadParamUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7615
		{
			t := tree.NewCreateTable()
			t.IsClusterTable = true
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.Options = yyDollar[9].tableOptionsUnion()
			t.PartitionOption = yyDollar[10].partitionOptionUnion()
			t.ClusterByOption = yyDollar[11].clusterByOptionUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7627
		{
			t := tree.NewCreateTable()
			t.IsDynamicTable = true
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.AsSource = yyDollar[7].selectUnion()
			t.DTOptions = yyDollar[8].tableOptionsUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7637
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.AsSource = yyDollar[6].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7647
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.AsSource = yyDollar[9].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7658
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.AsSource = yyDollar[7].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7668
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.AsSource = yyDollar[10].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7679
		{
			t := tree.NewCreateTable()
			t.IsAsLike = true
			t.Table = *yyDollar[5].tableNameUnion()
			t.LikeTableName = *yyDollar[7].tableNameUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7687
		{
			t := tree.NewCreateTable()
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.SubscriptionOption = yyDollar[6].subscriptionOptionUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7698
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7705
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7715
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7728
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7736
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7745
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7754
		{
			yyVAL.str = ""
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7758
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7764
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7768
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7773
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7777
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7784
		{
			yyLOCAL = &tree.TailParameter{
				Charset:      yyDollar[1].str,
				Fields:       yyDollar[2].fieldsUnion(),
				Lines:        yyDollar[3].linesUnion(),
				IgnoredLines: uint64(yyDollar[4].int64ValUnion()),
				ColumnList:   yyDollar[5].loadColumnsUnion(),
				Assignments:  yyDollar[6].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7796
		{
			yyVAL.str = ""
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7800
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7806
		{
			var Name = yyDollar[4].tableNameUnion()
			var Type = yyDollar[5].columnTypeUnion()
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var IncrementBy = yyDollar[6].incrementByOptionUnion()
			var MinValue = yyDollar[7].minValueOptionUnion()
			var MaxValue = yyDollar[8].maxValueOptionUnion()
			var StartWith = yyDollar[9].startWithOptionUnion()
			var Cycle = yyDollar[10].boolValUnion()
			yyLOCAL = tree.NewCreateSequence(
				Name,
				Type,
				IfNotExists,
				IncrementBy,
				MinValue,
				MaxValue,
				StartWith,
				Cycle,
			)
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7827
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7841
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7849
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7859
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7866
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7873
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7880
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7887
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7891
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7895
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7903
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7910
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7921
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7928
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7939
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7945
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7955
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7962
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7969
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7976
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7992
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7996
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8009
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			var PartBy = yyDollar[3].partitionByUnion()
			var SubPartBy = yyDollar[5].partitionByUnion()
			var Partitions = yyDollar[6].partitionsUnion()
			yyLOCAL = tree.NewPartitionOption(
				PartBy,
				SubPartBy,
				Partitions,
			)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8026
		{
			var ColumnList = []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewClusterByOption(
				ColumnList,
			)

		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8034
		{
			var ColumnList = yyDollar[4].unresolveNamesUnion()
			yyLOCAL = tree.NewClusterByOption(
				ColumnList,
			)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8046
		{
			var IsSubPartition = true
			var PType = yyDollar[3].partitionByUnion()
			var Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = tree.NewPartitionBy2(
				IsSubPartition,
				PType,
				Num,
			)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8062
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8068
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8072
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8078
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Values = yyDollar[3].valuesUnion()
			var Options []tree.TableOption
			var Subs = yyDollar[4].subPartitionsUnion()
			yyLOCAL = tree.NewPartition(
				Name,
				Values,
				Options,
				Subs,
			)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8091
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Values = yyDollar[3].valuesUnion()
			var Options = yyDollar[4].tableOptionsUnion()
			var Subs = yyDollar[5].subPartitionsUnion()
			yyLOCAL = tree.NewPartition(
				Name,
				Values,
				Options,
				Subs,
			)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8109
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8115
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8119
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8125
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Options []tree.TableOption
			yyLOCAL = tree.NewSubPartition(
				Name,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8134
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Options = yyDollar[3].tableOptionsUnion()
			yyLOCAL = tree.NewSubPartition(
				Name,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8145
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8149
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8158
		{
			expr := tree.NewMaxValue()
			var valueList = tree.Exprs{expr}
			yyLOCAL = tree.NewValuesLessThan(valueList)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8164
		{
			var valueList = yyDollar[5].exprsUnion()
			yyLOCAL = tree.NewValuesLessThan(valueList)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8169
		{
			var valueList = yyDollar[4].exprsUnion()
			yyLOCAL = tree.NewValuesIn(
				valueList,
			)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8177
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8181
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				goto ret1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8191
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8195
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				goto ret1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8206
		{
			rangeTyp := tree.NewRangeType()
			rangeTyp.Expr = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewPartitionBy(
				rangeTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8214
		{
			rangeTyp := tree.NewRangeType()
			rangeTyp.ColumnList = yyDollar[4].unresolveNamesUnion()
			yyLOCAL = tree.NewPartitionBy(
				rangeTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8222
		{
			listTyp := tree.NewListType()
			listTyp.Expr = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewPartitionBy(
				listTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8230
		{
			listTyp := tree.NewListType()
			listTyp.ColumnList = yyDollar[4].unresolveNamesUnion()
			yyLOCAL = tree.NewPartitionBy(
				listTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8241
		{
			keyTyp := tree.NewKeyType()
			keyTyp.Linear = yyDollar[1].boolValUnion()
			keyTyp.Algorithm = yyDollar[3].int64ValUnion()
			yyLOCAL = tree.NewPartitionBy(
				keyTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8250
		{
			keyTyp := tree.NewKeyType()
			keyTyp.Linear = yyDollar[1].boolValUnion()
			keyTyp.Algorithm = yyDollar[3].int64ValUnion()
			keyTyp.ColumnList = yyDollar[5].unresolveNamesUnion()
			yyLOCAL = tree.NewPartitionBy(
				keyTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8260
		{
			Linear := yyDollar[1].boolValUnion()
			Expr := yyDollar[4].exprUnion()
			hashTyp := tree.NewHashType(Linear, Expr)
			yyLOCAL = tree.NewPartitionBy(
				hashTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8270
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8274
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8289
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8293
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8299
		{
			var Key = tree.Identifier(yyDollar[1].cstrUnion().Compare())
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewConnectorOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8308
		{
			var Key = tree.Identifier(yyDollar[1].str)
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewConnectorOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8322
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8328
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8332
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8338
		{
			var Key = tree.Identifier(yyDollar[1].cstrUnion().Compare())
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewCreateSourceWithOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8347
		{
			var Key = tree.Identifier(yyDollar[1].str)
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewCreateSourceWithOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8361
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8367
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8371
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8375
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8381
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8385
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8389
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8393
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8397
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8401
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8405
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8410
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8414
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8418
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8422
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8426
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8430
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8434
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8438
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8442
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8446
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8450
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8454
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8458
		{
			t := tree.NewTableOptionPackKeys()
			t.Value = yyDollar[3].item.(int64)
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8464
		{
			t := tree.NewTableOptionPackKeys()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8470
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8474
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8478
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8482
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8486
		{
			t := tree.NewTableOptionStatsAutoRecalc()
			t.Value = uint64(yyDollar[3].item.(int64))
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8492
		{
			t := tree.NewTableOptionStatsAutoRecalc()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8498
		{
			t := tree.NewTableOptionStatsPersistent()
			t.Value = uint64(yyDollar[3].item.(int64))
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8504
		{
			t := tree.NewTableOptionStatsPersistent()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8510
		{
			t := tree.NewTableOptionStatsSamplePages()
			t.Value = uint64(yyDollar[3].item.(int64))
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8516
		{
			t := tree.NewTableOptionStatsSamplePages()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8522
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8526
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8530
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8534
		{
			var Preperties = yyDollar[3].propertiesUnion()
			yyLOCAL = tree.NewTableOptionProperties(Preperties)
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8539
		{
			var retentionPeriod = uint64(yyDollar[4].item.(int64))
			var retentionUnit = strings.ToLower(yyDollar[5].str)
			yyLOCAL = tree.NewRetentionOption(
				retentionPeriod,
				retentionUnit,
			)
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8550
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8554
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8560
		{
			var Key = yyDollar[1].str
			var Value = yyDollar[3].str
			yyLOCAL = *tree.NewProperty(
				Key,
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8571
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8575
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8581
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8585
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8589
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8593
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8597
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8601
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8615
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8619
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8628
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, yyDollar[2].atTimeStampUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8634
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, yyDollar[4].atTimeStampUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8646
		{
			yyLOCAL = &tree.AtTimeStamp{
				Type: tree.ATTIMESTAMPTIME,
				Expr: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8653
		{
			var str = yyDollar[4].cstrUnion().Compare()
			yyLOCAL = &tree.AtTimeStamp{
				Type:         tree.ATTIMESTAMPSNAPSHOT,
				SnapshotName: yylex.(*Lexer).GetDbOrTblName(yyDollar[4].cstrUnion().Origin()),
				Expr:         tree.NewNumVal(str, str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8662
		{
			yyLOCAL = &tree.AtTimeStamp{
				Type:         tree.ATTIMESTAMPSNAPSHOT,
				SnapshotName: yyDollar[4].str,
				Expr:         tree.NewNumVal(yyDollar[4].str, yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8670
		{
			yyLOCAL = &tree.AtTimeStamp{
				Type: tree.ATMOTIMESTAMP,
				Expr: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8678
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8685
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8689
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8695
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8699
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8703
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8709
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8713
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8719
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].str
			var Empty = true
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewFullTextIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8732
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].str
			var Empty = true
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewFullTextIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8745
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "master":
					keyTyp = tree.INDEX_TYPE_MASTER
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid the type of index")
					goto ret1
				}
			}

			var IfNotExists = yyDollar[2].ifNotExistsUnion()
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var KeyType = keyTyp
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewIndex(
				IfNotExists,
				KeyParts,
				Name,
				KeyType,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8784
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "master":
					keyTyp = tree.INDEX_TYPE_MASTER
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid type of index")
					goto ret1
				}
			}
			var IfNotExists = yyDollar[2].ifNotExistsUnion()
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var KeyType = keyTyp
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewIndex(
				IfNotExists,
				KeyParts,
				Name,
				KeyType,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8824
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8838
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8844
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewPrimaryKeyIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8857
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewPrimaryKeyIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8870
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewUniqueIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8883
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewUniqueIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8896
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var KeyParts = yyDollar[6].keyPartsUnion()
			var Name = yyDollar[4].str
			var Refer = yyDollar[8].attributeReferenceUnion()
			var Empty = true
			yyLOCAL = tree.NewForeignKey(
				IfNotExists,
				KeyParts,
				Name,
				Refer,
				Empty,
			)
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8911
		{
			var Expr = yyDollar[3].exprUnion()
			var Enforced = yyDollar[5].boolValUnion()
			yyLOCAL = tree.NewCheckIndex(
				Expr,
				Enforced,
			)
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8927
		{
			yyVAL.str = ""
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8931
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8941
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8947
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8953
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8974
		{
			yyVAL.str = ""
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8978
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8984
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8990
		{
			yyLOCAL = tree.NewUnresolvedName(yyDollar[1].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8994
		{
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(tblNameCStr, yyDollar[3].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8999
		{
			dbNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(dbNameCStr, tblNameCStr, yyDollar[5].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9007
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9011
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9015
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9019
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9025
		{
			yyLOCAL = yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9031
		{
			yyLOCAL = tree.NewUnresolvedName(yyDollar[1].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9035
		{
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(tblNameCStr, yyDollar[3].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9040
		{
			dbNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(dbNameCStr, tblNameCStr, yyDollar[5].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9051
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9057
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9061
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9067
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9071
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9075
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9079
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9083
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9087
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumVal(str, str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9092
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9096
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9108
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9112
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9116
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9120
		{
			yyLOCAL = tree.NewAttributeCheckConstraint(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9124
		{
			yyLOCAL = tree.NewAttributeCheckConstraint(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9128
		{
			name := tree.NewUnresolvedColName(yyDollar[3].str)
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[3].str, 1),
				Exprs:    es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9142
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9146
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9150
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9158
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9162
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9177
		{
			yyVAL.str = ""
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9187
		{
			yyVAL.str = ""
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9191
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1409:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9197
		{
			var TableName = yyDollar[2].tableNameUnion()
			var KeyParts = yyDollar[3].keyPartsUnion()
			var Match = yyDollar[4].matchTypeUnion()
			var OnDelete = yyDollar[5].referenceOnRecordUnion().OnDelete
			var OnUpdate = yyDollar[5].referenceOnRecordUnion().OnUpdate
			yyLOCAL = tree.NewAttributeReference(
				TableName,
				KeyParts,
				Match,
				OnDelete,
				OnUpdate,
			)
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9214
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9221
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9228
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9235
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9242
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9251
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9257
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9263
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9267
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9271
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9275
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9279
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9284
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9291
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9295
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9299
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9308
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9313
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9317
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9333
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9339
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9343
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9347
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9351
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9355
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9359
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9363
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9367
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9371
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9375
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9379
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9383
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9387
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9393
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9397
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9401
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9405
		{
			yyLOCAL = tree.NewParentExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9409
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9413
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9417
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9421
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9425
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9429
		{
			hint := strings.ToLower(yyDollar[2].cstrUnion().Compare())
			switch hint {
			case "d":
				locale := ""
				t := &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.TimestampFamily,
						FamilyString: "DATETIME",
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
				yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), t)
			case "t":
				locale := ""
				t := &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.TimeFamily,
						FamilyString: "TIME",
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_TIME),
					},
				}
				yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), t)
			case "ts":
				locale := ""
				t := &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.TimestampFamily,
						FamilyString: "TIMESTAMP",
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
				yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), t)
			default:
				yylex.Error("Invalid type")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9471
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9475
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9479
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9484
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9492
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9496
		{
			yyLOCAL = tree.NewSerialExtractExpr(yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9500
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9504
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9508
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			es := tree.NewNumVal(yyDollar[5].str, yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9518
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9522
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9526
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9530
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9534
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9548
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9557
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9566
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9577
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil, "block")
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9587
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil, yyDollar[8].str)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9597
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9606
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9616
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion(), "block")
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9626
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion(), yyDollar[8].str)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9636
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9645
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9659
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9668
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9674
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9678
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9684
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9693
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9705
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9722
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9739
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9752
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9765
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9777
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9791
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9821
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9838
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9853
		{
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9860
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9864
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9868
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9874
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9878
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9882
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9886
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9892
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9896
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9900
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9906
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9914
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9928
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9935
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9944
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9949
		{
			yyVAL.str = ","
		}
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9953
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9958
		{
			yyVAL.str = "1,vector_l2_ops,random,false"
		}
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9962
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9974
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10000
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumVal(yyDollar[6].str, yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10012
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumVal(yyDollar[6].str, yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10024
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10035
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10046
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			es := tree.NewNumVal("*", "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10057
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10067
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10077
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10088
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10099
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10110
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10121
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			es := tree.NewNumVal("*", "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10132
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10143
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10154
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10165
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10176
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10187
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10198
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10209
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10220
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10231
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10242
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			var columnList tree.Exprs
			for _, columnStr := range yyDollar[4].identifierListUnion() {
				column := tree.NewUnresolvedColName(string(columnStr))
				columnList = append(columnList, column)
			}

			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      columnList,
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10266
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10275
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10284
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10293
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10302
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumVal(str, str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10313
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10322
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[4].exprUnion()},
				Type:     yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10332
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10341
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10350
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10359
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10368
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumVal(int64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumVal("both", "both", false, tree.P_char)
			arg2 := tree.NewNumVal(" ", " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10380
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumVal(int64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumVal("both", "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10391
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumVal(int64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumVal(str, str, false, tree.P_char)
			arg2 := tree.NewNumVal(" ", " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10404
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumVal(int64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumVal(str, str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10416
		{
			column := tree.NewUnresolvedColName(yyDollar[3].str)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10475
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10488
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10501
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumVal(str, str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10513
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10522
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10530
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10538
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10551
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10560
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10571
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10582
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10591
		{
			cn := tree.NewNumVal(yyDollar[5].str, yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10603
		{
			val := tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_char)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10613
		{
			val := tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_char)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10623
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10632
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10643
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10652
		{
			val := tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_char)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10662
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10671
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10680
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10704
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				goto ret1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumVal(ival, str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10723
		{
		}
	case 1644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10725
		{
		}
	case 1678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10766
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumVal(str, str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10778
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10782
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10786
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10792
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10801
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10807
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10811
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10817
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10821
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10828
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10832
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10836
		{
			name := tree.NewUnresolvedColName("concat")
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr("concat", 1),
				Exprs:    tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10845
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10849
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10853
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10858
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10862
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10868
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10872
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10876
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10880
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10884
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10888
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10892
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10896
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10900
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10904
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10912
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10916
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10920
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10924
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10928
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10932
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10936
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10940
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10944
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10948
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10958
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10964
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10968
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10975
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10979
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10983
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10989
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10993
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10997
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11001
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11005
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11009
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11013
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11019
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11023
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11027
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11031
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11037
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumVal(v, str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumVal(v, str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11050
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumVal(fval, yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11055
		{
			yyLOCAL = tree.NewNumVal(yyDollar[1].str, yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11061
		{
			yyLOCAL = tree.NewNumVal(yyDollar[1].str, yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11065
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumVal(v, str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumVal(v, str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11078
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumVal(fval, yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11083
		{
			yyLOCAL = tree.NewNumVal(true, "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11087
		{
			yyLOCAL = tree.NewNumVal(false, "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11091
		{
			yyLOCAL = tree.NewNumVal("null", "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11095
		{
			yyLOCAL = tree.NewNumVal(yyDollar[1].str, yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11099
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11106
		{
			yyLOCAL = tree.NewNumVal(yyDollar[1].str, yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11110
		{
			yyLOCAL = tree.NewNumVal(yyDollar[1].str, yyDollar[1].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11114
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11118
		{
			yyLOCAL = tree.NewNumVal(yyDollar[2].str, yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11125
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11136
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11141
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11159
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11171
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11274
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11287
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11300
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11313
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11328
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11355
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11397
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				goto ret1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11433
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				goto ret1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11486
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11498
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				goto ret1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11518
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				goto ret1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11538
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				goto ret1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11558
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11574
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11587
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11600
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11626
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11638
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11686
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11722
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11734
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11746
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11759
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11772
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11785
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11798
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11813
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11821
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumVal("null", "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11830
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11840
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11863
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11868
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11874
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11881
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11885
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11890
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11894
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11900
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11906
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11913
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11920
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11929
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11936
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11943
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11960
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11966
		{
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11978
		{
			yyVAL.str = ""
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11982
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

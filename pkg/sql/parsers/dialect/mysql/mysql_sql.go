// Code generated by goyacc -o mysql_sql.go -c mysql mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/sql/parsers/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
)

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const DISTINCTROW = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const KEYS = 57374
const VALUES = 57375
const LAST_INSERT_ID = 57376
const NEXT = 57377
const VALUE = 57378
const SHARE = 57379
const MODE = 57380
const SQL_NO_CACHE = 57381
const SQL_CACHE = 57382
const JOIN = 57383
const STRAIGHT_JOIN = 57384
const LEFT = 57385
const RIGHT = 57386
const INNER = 57387
const OUTER = 57388
const CROSS = 57389
const NATURAL = 57390
const USE = 57391
const FORCE = 57392
const ON = 57393
const USING = 57394
const SUBQUERY_AS_EXPR = 57395
const ID = 57396
const AT_ID = 57397
const AT_AT_ID = 57398
const STRING = 57399
const VALUE_ARG = 57400
const LIST_ARG = 57401
const COMMENT = 57402
const COMMENT_KEYWORD = 57403
const INTEGRAL = 57404
const HEX = 57405
const HEXNUM = 57406
const BIT_LITERAL = 57407
const FLOAT = 57408
const NULL = 57409
const TRUE = 57410
const FALSE = 57411
const EMPTY_FROM_CLAUSE = 57412
const LOWER_THAN_CHARSET = 57413
const CHARSET = 57414
const UNIQUE = 57415
const KEY = 57416
const OR = 57417
const XOR = 57418
const AND = 57419
const NOT = 57420
const BETWEEN = 57421
const CASE = 57422
const WHEN = 57423
const THEN = 57424
const ELSE = 57425
const END = 57426
const LE = 57427
const GE = 57428
const NE = 57429
const NULL_SAFE_EQUAL = 57430
const IS = 57431
const LIKE = 57432
const REGEXP = 57433
const IN = 57434
const ASSIGNMENT = 57435
const SHIFT_LEFT = 57436
const SHIFT_RIGHT = 57437
const DIV = 57438
const MOD = 57439
const UNARY = 57440
const COLLATE = 57441
const BINARY = 57442
const UNDERSCORE_BINARY = 57443
const INTERVAL = 57444
const BEGIN = 57445
const START = 57446
const TRANSACTION = 57447
const COMMIT = 57448
const ROLLBACK = 57449
const WORK = 57450
const CONSISTENT = 57451
const SNAPSHOT = 57452
const CHAIN = 57453
const NO = 57454
const RELEASE = 57455
const BIT = 57456
const TINYINT = 57457
const SMALLINT = 57458
const MEDIUMINT = 57459
const INT = 57460
const INTEGER = 57461
const BIGINT = 57462
const INTNUM = 57463
const REAL = 57464
const DOUBLE = 57465
const FLOAT_TYPE = 57466
const DECIMAL = 57467
const NUMERIC = 57468
const TIME = 57469
const TIMESTAMP = 57470
const DATETIME = 57471
const YEAR = 57472
const CHAR = 57473
const VARCHAR = 57474
const BOOL = 57475
const CHARACTER = 57476
const VARBINARY = 57477
const NCHAR = 57478
const TEXT = 57479
const TINYTEXT = 57480
const MEDIUMTEXT = 57481
const LONGTEXT = 57482
const BLOB = 57483
const TINYBLOB = 57484
const MEDIUMBLOB = 57485
const LONGBLOB = 57486
const JSON = 57487
const ENUM = 57488
const GEOMETRY = 57489
const POINT = 57490
const LINESTRING = 57491
const POLYGON = 57492
const GEOMETRYCOLLECTION = 57493
const MULTIPOINT = 57494
const MULTILINESTRING = 57495
const MULTIPOLYGON = 57496
const CREATE = 57497
const ALTER = 57498
const DROP = 57499
const RENAME = 57500
const ANALYZE = 57501
const ADD = 57502
const SCHEMA = 57503
const TABLE = 57504
const INDEX = 57505
const VIEW = 57506
const TO = 57507
const IGNORE = 57508
const IF = 57509
const PRIMARY = 57510
const COLUMN = 57511
const CONSTRAINT = 57512
const SPATIAL = 57513
const FULLTEXT = 57514
const FOREIGN = 57515
const KEY_BLOCK_SIZE = 57516
const SHOW = 57517
const DESCRIBE = 57518
const EXPLAIN = 57519
const DATE = 57520
const ESCAPE = 57521
const REPAIR = 57522
const OPTIMIZE = 57523
const TRUNCATE = 57524
const MAXVALUE = 57525
const PARTITION = 57526
const REORGANIZE = 57527
const LESS = 57528
const THAN = 57529
const PROCEDURE = 57530
const TRIGGER = 57531
const STATUS = 57532
const VARIABLES = 57533
const ROLE = 57534
const PROXY = 57535
const AVG_ROW_LENGTH = 57536
const STORAGE = 57537
const DISK = 57538
const MEMORY = 57539
const CHECKSUM = 57540
const COMPRESSION = 57541
const DATA = 57542
const DIRECTORY = 57543
const DELAY_KEY_WRITE = 57544
const ENCRYPTION = 57545
const ENGINE = 57546
const MAX_ROWS = 57547
const MIN_ROWS = 57548
const PACK_KEYS = 57549
const ROW_FORMAT = 57550
const STATS_AUTO_RECALC = 57551
const STATS_PERSISTENT = 57552
const STATS_SAMPLE_PAGES = 57553
const DYNAMIC = 57554
const COMPRESSED = 57555
const REDUNDANT = 57556
const COMPACT = 57557
const FIXED = 57558
const COLUMN_FORMAT = 57559
const AUTO_RANDOM = 57560
const RESTRICT = 57561
const CASCADE = 57562
const ACTION = 57563
const PARTIAL = 57564
const SIMPLE = 57565
const CHECK = 57566
const ENFORCED = 57567
const RANGE = 57568
const LIST = 57569
const ALGORITHM = 57570
const LINEAR = 57571
const PARTITIONS = 57572
const SUBPARTITION = 57573
const SUBPARTITIONS = 57574
const PARSER = 57575
const VISIBLE = 57576
const INVISIBLE = 57577
const BTREE = 57578
const HASH = 57579
const RTREE = 57580
const EXPIRE = 57581
const ACCOUNT = 57582
const UNLOCK = 57583
const DAY = 57584
const NEVER = 57585
const SECOND = 57586
const ASCII = 57587
const COALESCE = 57588
const COLLATION = 57589
const HOUR = 57590
const MICROSECOND = 57591
const MINUTE = 57592
const MONTH = 57593
const QUARTER = 57594
const REPEAT = 57595
const REVERSE = 57596
const ROW_COUNT = 57597
const WEEK = 57598
const REVOKE = 57599
const FUNCTION = 57600
const PRIVILEGES = 57601
const TABLESPACE = 57602
const EXECUTE = 57603
const SUPER = 57604
const GRANT = 57605
const OPTION = 57606
const REFERENCES = 57607
const REPLICATION = 57608
const SLAVE = 57609
const CLIENT = 57610
const USAGE = 57611
const RELOAD = 57612
const FILE = 57613
const TEMPORARY = 57614
const ROUTINE = 57615
const EVENT = 57616
const SHUTDOWN = 57617
const NULLX = 57618
const AUTO_INCREMENT = 57619
const APPROXNUM = 57620
const SIGNED = 57621
const UNSIGNED = 57622
const ZEROFILL = 57623
const USER = 57624
const IDENTIFIED = 57625
const CIPHER = 57626
const ISSUER = 57627
const X509 = 57628
const SUBJECT = 57629
const SAN = 57630
const REQUIRE = 57631
const SSL = 57632
const NONE = 57633
const PASSWORD = 57634
const MAX_QUERIES_PER_HOUR = 57635
const MAX_UPDATES_PER_HOUR = 57636
const MAX_CONNECTIONS_PER_HOUR = 57637
const MAX_USER_CONNECTIONS = 57638
const FORMAT = 57639
const CONNECTION = 57640
const LOAD = 57641
const INFILE = 57642
const TERMINATED = 57643
const OPTIONALLY = 57644
const ENCLOSED = 57645
const ESCAPED = 57646
const STARTING = 57647
const LINES = 57648
const DATABASES = 57649
const TABLES = 57650
const EXTENDED = 57651
const FULL = 57652
const PROCESSLIST = 57653
const FIELDS = 57654
const COLUMNS = 57655
const OPEN = 57656
const ERRORS = 57657
const WARNINGS = 57658
const INDEXES = 57659
const NAMES = 57660
const GLOBAL = 57661
const SESSION = 57662
const ISOLATION = 57663
const LEVEL = 57664
const READ = 57665
const WRITE = 57666
const ONLY = 57667
const REPEATABLE = 57668
const COMMITTED = 57669
const UNCOMMITTED = 57670
const SERIALIZABLE = 57671
const LOCAL = 57672
const EXCEPT = 57673
const CURRENT_TIMESTAMP = 57674
const DATABASE = 57675
const CURRENT_TIME = 57676
const LOCALTIME = 57677
const LOCALTIMESTAMP = 57678
const UTC_DATE = 57679
const UTC_TIME = 57680
const UTC_TIMESTAMP = 57681
const REPLACE = 57682
const CONVERT = 57683
const SEPARATOR = 57684
const CURRENT_DATE = 57685
const CURRENT_USER = 57686
const CURRENT_ROLE = 57687
const MATCH = 57688
const AGAINST = 57689
const BOOLEAN = 57690
const LANGUAGE = 57691
const WITH = 57692
const QUERY = 57693
const EXPANSION = 57694
const ADDDATE = 57695
const BIT_AND = 57696
const BIT_OR = 57697
const BIT_XOR = 57698
const CAST = 57699
const COUNT = 57700
const APPROX_COUNT_DISTINCT = 57701
const APPROX_PERCENTILE = 57702
const CURDATE = 57703
const CURTIME = 57704
const DATE_ADD = 57705
const DATE_SUB = 57706
const EXTRACT = 57707
const GROUP_CONCAT = 57708
const MAX = 57709
const MID = 57710
const MIN = 57711
const NOW = 57712
const POSITION = 57713
const SESSION_USER = 57714
const STD = 57715
const STDDEV = 57716
const STDDEV_POP = 57717
const STDDEV_SAMP = 57718
const SUBDATE = 57719
const SUBSTR = 57720
const SUBSTRING = 57721
const SUM = 57722
const SYSDATE = 57723
const SYSTEM_USER = 57724
const TRANSLATE = 57725
const TRIM = 57726
const VARIANCE = 57727
const VAR_POP = 57728
const VAR_SAMP = 57729
const AVG = 57730
const UNUSED = 57731

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"HEXNUM",
	"BIT_LITERAL",
	"FLOAT",
	"NULL",
	"TRUE",
	"FALSE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EXCEPT",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"UNUSED",
	"';'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:5411

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	17, 300,
	-2, 291,
	-1, 54,
	180, 437,
	-2, 472,
	-1, 63,
	207, 228,
	208, 228,
	-2, 248,
	-1, 304,
	58, 1135,
	408, 1135,
	-2, 91,
	-1, 323,
	58, 570,
	408, 570,
	-2, 435,
	-1, 324,
	58, 428,
	408, 428,
	-2, 436,
	-1, 330,
	17, 301,
	-2, 293,
	-1, 546,
	54, 689,
	-2, 1172,
	-1, 547,
	54, 690,
	-2, 1173,
	-1, 548,
	54, 691,
	-2, 1174,
	-1, 555,
	54, 748,
	-2, 1140,
	-1, 556,
	54, 750,
	-2, 1151,
	-1, 692,
	1, 462,
	407, 462,
	-2, 469,
	-1, 800,
	17, 300,
	-2, 627,
	-1, 838,
	119, 863,
	-2, 861,
	-1, 840,
	119, 382,
	-2, 858,
	-1, 841,
	119, 383,
	-2, 859,
	-1, 1016,
	1, 463,
	407, 463,
	-2, 469,
	-1, 1364,
	1, 509,
	201, 509,
	407, 509,
	-2, 469,
	-1, 1366,
	241, 595,
	-2, 576,
	-1, 1449,
	1, 510,
	201, 510,
	407, 510,
	-2, 469,
	-1, 1476,
	241, 595,
	-2, 577,
	-1, 1797,
	55, 484,
	56, 484,
	-2, 469,
	-1, 1801,
	55, 484,
	56, 484,
	-2, 469,
	-1, 1813,
	55, 488,
	56, 488,
	-2, 469,
	-1, 1816,
	55, 489,
	56, 489,
	-2, 469,
}

const yyPrivate = 57344

const yyLast = 14162

var yyAct = [...]int{
	684, 1063, 1803, 1801, 1800, 1808, 1774, 559, 1746, 675,
	1658, 576, 1716, 1763, 1706, 1705, 557, 1683, 1276, 482,
	1444, 676, 1336, 79, 1006, 1585, 281, 740, 1335, 1064,
	82, 424, 1445, 291, 1574, 1359, 1477, 1424, 79, 293,
	1188, 1172, 1426, 1284, 1259, 1429, 1418, 325, 325, 1292,
	672, 1162, 1264, 1308, 535, 1009, 78, 824, 1222, 558,
	486, 829, 516, 286, 825, 584, 50, 568, 835, 1156,
	49, 838, 1097, 722, 1017, 697, 669, 1453, 79, 285,
	18, 670, 686, 644, 1062, 331, 726, 330, 528, 698,
	637, 50, 699, 1065, 507, 276, 742, 300, 300, 989,
	279, 981, 773, 373, 287, 426, 469, 661, 296, 297,
	75, 400, 412, 996, 295, 441, 1387, 73, 992, 493,
	1143, 374, 491, 1260, 1650, 1157, 1672, 1150, 350, 489,
	716, 461, 711, 712, 390, 389, 517, 386, 379, 380,
	381, 50, 385, 360, 481, 701, 494, 480, 483, 484,
	678, 342, 483, 484, 456, 18, 382, 1695, 384, 1693,
	452, 1720, 327, 1583, 388, 1642, 1645, 1709, 1710, 1586,
	1587, 1588, 1589, 1681, 682, 1265, 1266, 1267, 1268, 1131,
	723, 405, 1165, 1163, 1160, 1164, 1166, 1293, 1159, 1158,
	1165, 1163, 1296, 1164, 1166, 992, 994, 361, 1573, 443,
	447, 1442, 1375, 1497, 1496, 454, 455, 453, 442, 1349,
	1577, 662, 751, 752, 750, 1413, 1690, 1394, 1397, 1398,
	1399, 1400, 1401, 1402, 1412, 1405, 1403, 1404, 448, 1697,
	1389, 1390, 1391, 1392, 1373, 1374, 1395, 664, 1376, 1295,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1393, 1649, 1409, 344, 387, 1708, 1168, 1169, 1170, 1793,
	1809, 1727, 370, 341, 340, 1656, 1657, 1692, 1660, 1660,
	1734, 1762, 1567, 1784, 1537, 329, 79, 404, 1666, 1766,
	1536, 1388, 503, 1558, 336, 450, 1738, 1699, 1700, 1810,
	379, 380, 381, 1804, 479, 478, 445, 1775, 403, 1525,
	490, 1151, 399, 451, 1223, 391, 470, 663, 446, 449,
	492, 1652, 1653, 1410, 428, 1640, 472, 1147, 444, 1040,
	1000, 1175, 429, 1350, 474, 1309, 438, 1175, 1431, 1430,
	1186, 1269, 1036, 365, 497, 1038, 1037, 714, 715, 402,
	495, 496, 1035, 713, 362, 1562, 50, 363, 1317, 1315,
	1316, 1788, 1252, 1314, 508, 1313, 1312, 1310, 434, 1750,
	1262, 1173, 1197, 433, 345, 509, 1141, 1531, 1770, 1140,
	325, 785, 487, 1760, 335, 1130, 1126, 1030, 1767, 1004,
	357, 407, 367, 366, 514, 786, 787, 788, 789, 790,
	791, 792, 785, 531, 1177, 1112, 976, 1176, 465, 1277,
	1177, 755, 636, 1176, 1311, 639, 1698, 515, 408, 642,
	404, 79, 79, 79, 79, 401, 1042, 375, 376, 1254,
	300, 979, 530, 406, 506, 343, 508, 1651, 377, 724,
	1260, 645, 483, 484, 483, 484, 475, 509, 325, 325,
	404, 325, 369, 471, 428, 473, 1011, 1737, 428, 519,
	464, 1396, 429, 458, 689, 1411, 429, 659, 750, 325,
	325, 1569, 476, 995, 50, 440, 1174, 1568, 462, 1253,
	325, 1144, 325, 513, 692, 3, 79, 1553, 633, 1408,
	485, 1198, 488, 1560, 502, 1764, 1765, 1559, 991, 300,
	706, 677, 325, 683, 505, 691, 687, 510, 511, 512,
	332, 518, 1067, 1066, 325, 1318, 1319, 325, 704, 694,
	522, 523, 524, 525, 526, 646, 647, 648, 649, 1799,
	354, 1780, 300, 325, 325, 739, 79, 658, 355, 1563,
	1564, 753, 1783, 657, 1728, 680, 1616, 730, 990, 695,
	696, 681, 372, 730, 1724, 665, 688, 703, 674, 743,
	477, 397, 1165, 1163, 300, 1164, 1166, 744, 1679, 741,
	1702, 1638, 756, 1637, 802, 679, 1630, 1059, 708, 375,
	376, 383, 700, 1782, 300, 1204, 1627, 702, 1060, 1611,
	377, 693, 751, 752, 750, 1610, 690, 1609, 725, 1072,
	752, 750, 801, 1227, 1781, 1104, 1226, 707, 1606, 737,
	734, 430, 431, 432, 1337, 731, 732, 733, 721, 1102,
	1103, 1101, 1626, 809, 430, 431, 432, 1361, 720, 751,
	752, 750, 1751, 803, 804, 805, 806, 1003, 800, 1593,
	751, 752, 750, 385, 1341, 830, 832, 807, 738, 784,
	783, 793, 794, 786, 787, 788, 789, 790, 791, 792,
	785, 751, 752, 750, 779, 822, 751, 752, 750, 364,
	1338, 1625, 840, 1623, 1002, 751, 752, 750, 834, 1333,
	841, 1600, 352, 1362, 353, 360, 1597, 1007, 1008, 351,
	349, 348, 356, 1596, 358, 359, 1613, 751, 752, 750,
	814, 751, 752, 750, 79, 284, 11, 1624, 1517, 1622,
	386, 281, 1516, 1515, 1512, 385, 1075, 50, 1032, 788,
	789, 790, 791, 792, 785, 1077, 1355, 325, 1354, 1473,
	1353, 743, 1612, 833, 1352, 384, 1247, 1020, 368, 744,
	751, 752, 750, 640, 977, 1684, 1617, 1619, 1620, 1621,
	1618, 1722, 975, 1019, 1689, 839, 1674, 531, 1664, 79,
	986, 282, 6, 283, 5, 1056, 1057, 1663, 1024, 1614,
	1607, 730, 730, 730, 1033, 1603, 1602, 300, 1802, 1327,
	1018, 11, 1601, 1073, 1074, 1026, 530, 1028, 1455, 999,
	1053, 1054, 1055, 1575, 1555, 1021, 1022, 1023, 822, 1189,
	1363, 751, 752, 750, 700, 1025, 1027, 1029, 1274, 1070,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1052, 1061, 1273, 1106, 1107, 1115, 1043, 1044,
	1045, 1272, 1271, 796, 1001, 799, 818, 6, 1121, 5,
	1046, 1039, 1757, 817, 816, 1050, 1049, 1117, 1110, 797,
	798, 795, 641, 784, 783, 793, 794, 786, 787, 788,
	789, 790, 791, 792, 785, 1813, 334, 1105, 430, 431,
	432, 1068, 1069, 1099, 1071, 1791, 333, 1326, 1676, 1078,
	1079, 1080, 1081, 1571, 1082, 1083, 1084, 784, 783, 793,
	794, 786, 787, 788, 789, 790, 791, 792, 785, 751,
	752, 750, 1200, 1818, 1459, 1113, 1129, 1325, 1755, 1230,
	1324, 1675, 1200, 1229, 1116, 1463, 1118, 521, 1812, 1811,
	1437, 759, 760, 761, 762, 763, 764, 1119, 757, 751,
	752, 750, 751, 752, 750, 1452, 998, 1794, 1668, 1454,
	1456, 1458, 736, 1460, 1461, 1462, 1464, 1465, 1466, 1468,
	1469, 1470, 1471, 784, 783, 793, 794, 786, 787, 788,
	789, 790, 791, 792, 785, 784, 783, 793, 794, 786,
	787, 788, 789, 790, 791, 792, 785, 793, 794, 786,
	787, 788, 789, 790, 791, 792, 785, 1132, 735, 404,
	783, 793, 794, 786, 787, 788, 789, 790, 791, 792,
	785, 1472, 379, 325, 1323, 1578, 325, 1790, 1789, 404,
	645, 325, 1322, 998, 1778, 1154, 998, 1777, 1451, 1135,
	1749, 1748, 1136, 1436, 1321, 1138, 751, 752, 750, 1435,
	1146, 1307, 1434, 1467, 751, 752, 750, 1417, 1306, 1457,
	1364, 1183, 1152, 1153, 1297, 687, 751, 752, 750, 1521,
	1711, 325, 1233, 751, 752, 750, 1145, 1305, 79, 79,
	751, 752, 750, 1231, 310, 1228, 309, 313, 305, 1048,
	1701, 1108, 1134, 1133, 1209, 384, 1635, 1636, 301, 751,
	752, 750, 1206, 1205, 1142, 1199, 730, 1148, 1185, 320,
	1114, 1192, 1193, 751, 752, 750, 660, 1180, 1155, 1181,
	520, 1171, 1635, 1634, 1018, 1201, 1581, 1580, 1202, 1203,
	1521, 1520, 1217, 1184, 1769, 1182, 1344, 1343, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1179, 1190, 1187, 1200, 1328,
	1220, 1221, 1200, 1320, 638, 830, 748, 1241, 74, 1242,
	22, 37, 23, 1191, 1200, 1236, 1200, 1208, 1250, 1225,
	325, 974, 1200, 1207, 325, 325, 1128, 1127, 325, 1234,
	1124, 1123, 1579, 1245, 998, 997, 74, 74, 22, 37,
	23, 1246, 1219, 74, 437, 1200, 800, 978, 79, 1099,
	746, 385, 1120, 1365, 1218, 992, 71, 457, 435, 404,
	1196, 436, 436, 1240, 1237, 1235, 1239, 438, 1109, 50,
	632, 1048, 1278, 1279, 1255, 1257, 1248, 79, 1302, 1243,
	1286, 1275, 1244, 1238, 71, 71, 638, 1005, 438, 504,
	74, 634, 1814, 1270, 1759, 1753, 1251, 1735, 1732, 1730,
	303, 302, 306, 1678, 1258, 1633, 1631, 1629, 308, 1566,
	1304, 1419, 1425, 409, 1427, 414, 417, 418, 419, 415,
	312, 416, 420, 1289, 414, 417, 418, 419, 415, 1340,
	416, 420, 1480, 1504, 666, 1503, 1357, 325, 71, 1339,
	1301, 826, 1100, 1302, 1178, 1137, 1041, 1034, 823, 821,
	820, 1287, 1288, 819, 815, 774, 812, 1014, 1329, 1332,
	1334, 810, 808, 1331, 71, 782, 781, 1483, 780, 778,
	777, 776, 775, 1478, 772, 1342, 771, 770, 769, 1491,
	1492, 1360, 1416, 768, 1479, 1358, 767, 1345, 766, 765,
	635, 439, 982, 983, 1348, 1742, 1351, 1740, 1707, 1167,
	1047, 1356, 985, 459, 294, 988, 307, 311, 667, 1415,
	315, 668, 654, 987, 317, 318, 319, 655, 1484, 321,
	322, 1407, 651, 650, 652, 1438, 1798, 325, 325, 653,
	656, 79, 418, 419, 1125, 1428, 1713, 1420, 404, 1421,
	1422, 1423, 1281, 1280, 1019, 1432, 404, 1450, 1007, 1008,
	1346, 1473, 326, 1261, 1012, 710, 422, 1347, 1754, 1446,
	1406, 393, 395, 396, 1443, 1433, 463, 1286, 1067, 1066,
	467, 468, 1721, 1441, 1685, 1019, 1682, 1439, 1440, 414,
	417, 418, 419, 415, 1647, 416, 420, 1646, 1490, 1474,
	1494, 1644, 1594, 1414, 1300, 334, 466, 333, 1498, 1299,
	1499, 1500, 1501, 1502, 1195, 333, 638, 1744, 1743, 1743,
	1455, 1139, 275, 1744, 421, 1486, 1505, 1506, 1507, 1508,
	346, 1509, 1, 1511, 1712, 1745, 1677, 1510, 1715, 575,
	560, 1639, 1527, 1582, 1680, 1514, 1641, 1485, 1487, 1584,
	1518, 1149, 460, 1519, 596, 586, 811, 587, 631, 394,
	1528, 1529, 585, 1532, 1533, 1534, 1535, 1523, 1513, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1522, 79, 1530, 1294, 1554, 339, 392,
	347, 1572, 1495, 1076, 1111, 1493, 1807, 1360, 1797, 1773,
	1752, 1659, 1792, 1552, 1691, 1733, 1726, 1481, 1655, 1524,
	1556, 298, 404, 717, 498, 371, 1736, 1570, 378, 1595,
	643, 1263, 1161, 1010, 993, 671, 299, 1648, 1590, 1576,
	1632, 337, 1013, 1446, 338, 1016, 1459, 1592, 1015, 1598,
	1599, 1628, 758, 1098, 1591, 1604, 1605, 1463, 813, 533,
	567, 561, 1291, 428, 1290, 1489, 705, 25, 423, 749,
	836, 429, 1608, 81, 1330, 1031, 837, 1452, 1717, 574,
	573, 1454, 1456, 1458, 572, 1460, 1461, 1462, 1464, 1465,
	1466, 1468, 1469, 1470, 1471, 784, 783, 793, 794, 786,
	787, 788, 789, 790, 791, 792, 785, 571, 413, 411,
	1643, 410, 290, 289, 1194, 1298, 745, 747, 1654, 1488,
	1704, 1703, 1670, 1671, 1565, 1615, 1561, 1661, 1662, 1557,
	79, 1665, 1449, 1448, 404, 1475, 1476, 1482, 1371, 1372,
	1367, 1369, 1370, 1472, 1368, 1232, 1366, 1285, 1283, 1282,
	984, 980, 827, 831, 1673, 1446, 398, 1667, 1249, 685,
	1451, 1669, 76, 741, 1686, 1687, 288, 1051, 1688, 527,
	70, 17, 16, 15, 45, 1467, 1694, 1696, 44, 1719,
	43, 1457, 42, 14, 8, 41, 40, 39, 13, 12,
	1718, 784, 783, 793, 794, 786, 787, 788, 789, 790,
	791, 792, 785, 1723, 36, 35, 34, 33, 32, 31,
	1729, 30, 1731, 1725, 29, 28, 27, 26, 9, 53,
	1739, 1747, 1741, 52, 51, 19, 20, 21, 59, 58,
	57, 404, 56, 404, 55, 24, 10, 7, 4, 2,
	1756, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	1719, 1772, 1761, 0, 0, 0, 0, 0, 1768, 0,
	404, 1718, 1771, 0, 0, 1776, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 1747, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	1787, 0, 0, 0, 1806, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 1816, 1815, 1806,
	954, 940, 0, 902, 956, 874, 890, 964, 892, 893,
	928, 852, 911, 208, 888, 844, 877, 878, 846, 885,
	847, 875, 904, 151, 873, 943, 914, 178, 962, 180,
	0, 0, 238, 193, 0, 0, 907, 945, 909, 933,
	901, 929, 860, 922, 957, 889, 926, 958, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 925, 950, 887, 0, 0,
	861, 955, 908, 927, 0, 845, 923, 0, 850, 853,
	963, 948, 882, 883, 0, 0, 0, 0, 0, 0,
	0, 905, 910, 930, 898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 879, 0, 918, 0, 0, 0,
	855, 851, 0, 903, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 952,
	953, 145, 274, 854, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 859, 0, 880,
	931, 0, 843, 939, 946, 900, 267, 949, 897, 896,
	219, 0, 0, 242, 164, 163, 177, 944, 876, 886,
	881, 884, 228, 210, 951, 917, 215, 226, 181, 253,
	220, 258, 244, 266, 934, 221, 120, 245, 148, 192,
	132, 133, 144, 150, 152, 154, 155, 201, 202, 213,
	233, 246, 247, 248, 147, 140, 227, 141, 166, 142,
	121, 235, 143, 122, 214, 251, 131, 161, 223, 188,
	123, 187, 216, 250, 249, 0, 0, 0, 0, 0,
	0, 158, 842, 262, 0, 206, 941, 848, 858, 856,
	894, 919, 920, 921, 966, 936, 938, 937, 965, 231,
	0, 0, 0, 0, 0, 171, 212, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 239, 260, 273, 263, 895, 867, 906, 272, 870,
	868, 935, 869, 924, 967, 197, 198, 199, 200, 891,
	138, 915, 899, 968, 969, 970, 971, 972, 973, 872,
	947, 157, 165, 0, 167, 137, 211, 160, 270, 174,
	203, 170, 236, 175, 182, 224, 269, 209, 229, 136,
	259, 237, 186, 159, 866, 871, 865, 912, 913, 959,
	960, 961, 932, 857, 942, 862, 864, 863, 916, 119,
	592, 179, 268, 222, 156, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	151, 729, 0, 0, 178, 0, 180, 0, 0, 238,
	193, 0, 0, 0, 0, 608, 616, 0, 0, 0,
	0, 261, 0, 727, 0, 0, 562, 0, 0, 534,
	598, 597, 577, 0, 1224, 0, 134, 578, 0, 0,
	0, 579, 582, 580, 581, 0, 0, 600, 0, 0,
	0, 0, 0, 532, 566, 784, 783, 793, 794, 786,
	787, 788, 789, 790, 791, 792, 785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 0,
	0, 0, 0, 593, 0, 565, 0, 0, 728, 0,
	583, 0, 124, 243, 257, 135, 234, 271, 139, 241,
	130, 207, 230, 126, 255, 240, 190, 172, 173, 125,
	0, 225, 149, 162, 146, 205, 590, 591, 145, 556,
	588, 265, 128, 129, 264, 204, 252, 256, 191, 185,
	127, 254, 189, 184, 176, 153, 168, 217, 183, 218,
	169, 195, 194, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 606, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 589, 0, 228,
	210, 619, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 604, 206, 618, 599, 601, 602, 605, 609, 610,
	611, 612, 613, 615, 617, 620, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 784, 783, 793, 794,
	786, 787, 788, 789, 790, 791, 792, 785, 239, 260,
	273, 555, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 594, 197, 198, 199, 200, 607, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 626, 603, 625, 627, 628, 624, 629, 630, 614,
	570, 0, 622, 621, 623, 0, 119, 0, 179, 268,
	222, 156, 83, 536, 537, 538, 539, 540, 541, 542,
	91, 543, 93, 94, 95, 96, 544, 98, 545, 100,
	101, 102, 546, 547, 548, 549, 107, 108, 109, 550,
	551, 112, 113, 114, 115, 552, 553, 554, 261, 592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 151,
	1786, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 608, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 0, 534, 598,
	597, 577, 0, 0, 0, 134, 578, 0, 0, 0,
	579, 582, 580, 581, 0, 0, 600, 0, 0, 0,
	0, 0, 532, 566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 0, 0,
	0, 0, 593, 0, 565, 0, 0, 595, 0, 583,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 590, 591, 145, 556, 588,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 606, 219, 0, 0, 242,
	164, 163, 177, 0, 0, 0, 589, 0, 228, 210,
	619, 0, 215, 226, 181, 253, 220, 258, 244, 266,
	0, 221, 120, 245, 148, 192, 132, 133, 144, 150,
	152, 154, 155, 201, 202, 213, 233, 246, 247, 248,
	147, 140, 227, 141, 166, 142, 121, 235, 143, 122,
	214, 251, 131, 161, 223, 188, 123, 187, 216, 250,
	249, 0, 0, 0, 0, 0, 0, 158, 0, 262,
	604, 206, 618, 599, 601, 602, 605, 609, 610, 611,
	612, 613, 615, 617, 620, 231, 0, 0, 0, 0,
	0, 171, 212, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 260, 273,
	555, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	594, 197, 198, 199, 200, 607, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 165, 0,
	167, 137, 211, 160, 270, 174, 203, 170, 236, 175,
	182, 224, 269, 209, 229, 136, 259, 237, 186, 159,
	626, 603, 625, 627, 628, 624, 629, 630, 614, 570,
	0, 622, 621, 623, 0, 119, 0, 179, 268, 222,
	156, 83, 536, 537, 538, 539, 540, 541, 542, 91,
	543, 93, 94, 95, 96, 544, 98, 545, 100, 101,
	102, 546, 547, 548, 549, 107, 108, 109, 550, 551,
	112, 113, 114, 115, 552, 553, 554, 261, 74, 0,
	592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	151, 0, 0, 0, 178, 0, 180, 0, 0, 238,
	193, 0, 0, 0, 0, 608, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 534,
	598, 597, 577, 0, 0, 0, 134, 578, 0, 0,
	0, 579, 582, 580, 581, 0, 0, 600, 0, 0,
	0, 0, 0, 532, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 0,
	0, 0, 0, 593, 0, 565, 0, 0, 595, 0,
	583, 0, 124, 243, 257, 135, 234, 271, 139, 241,
	130, 207, 230, 126, 255, 240, 190, 172, 173, 125,
	0, 225, 149, 162, 146, 205, 590, 591, 145, 556,
	588, 265, 128, 129, 264, 204, 252, 256, 191, 185,
	127, 254, 189, 184, 176, 153, 168, 217, 183, 218,
	169, 195, 194, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 606, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 589, 0, 228,
	210, 619, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 604, 206, 618, 599, 601, 602, 605, 609, 610,
	611, 612, 613, 615, 617, 620, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 555, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 594, 197, 198, 199, 200, 607, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 626, 603, 625, 627, 628, 624, 629, 630, 614,
	570, 0, 622, 621, 623, 0, 119, 0, 179, 268,
	222, 156, 83, 536, 537, 538, 539, 540, 541, 542,
	91, 543, 93, 94, 95, 96, 544, 98, 545, 100,
	101, 102, 546, 547, 548, 549, 107, 108, 109, 550,
	551, 112, 113, 114, 115, 552, 553, 554, 261, 592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 608, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 1122, 534, 598,
	597, 577, 0, 0, 0, 134, 578, 0, 0, 0,
	579, 582, 580, 581, 0, 0, 600, 0, 0, 0,
	0, 0, 532, 566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 0, 0,
	0, 0, 593, 0, 565, 0, 0, 595, 0, 583,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 590, 591, 145, 556, 588,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 606, 219, 0, 0, 242,
	164, 163, 177, 0, 0, 0, 589, 0, 228, 210,
	619, 0, 215, 226, 181, 253, 220, 258, 244, 266,
	0, 221, 120, 245, 148, 192, 132, 133, 144, 150,
	152, 154, 155, 201, 202, 213, 233, 246, 247, 248,
	147, 140, 227, 141, 166, 142, 121, 235, 143, 122,
	214, 251, 131, 161, 223, 188, 123, 187, 216, 250,
	249, 0, 0, 0, 0, 0, 0, 158, 0, 262,
	604, 206, 618, 599, 601, 602, 605, 609, 610, 611,
	612, 613, 615, 617, 620, 231, 0, 0, 0, 0,
	0, 171, 212, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 260, 273,
	555, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	594, 197, 198, 199, 200, 607, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 165, 0,
	167, 137, 211, 160, 270, 174, 203, 170, 236, 175,
	182, 224, 269, 209, 229, 136, 259, 237, 186, 159,
	626, 603, 625, 627, 628, 624, 629, 630, 614, 570,
	0, 622, 621, 623, 0, 119, 0, 179, 268, 222,
	156, 83, 536, 537, 538, 539, 540, 541, 542, 91,
	543, 93, 94, 95, 96, 544, 98, 545, 100, 101,
	102, 546, 547, 548, 549, 107, 108, 109, 550, 551,
	112, 113, 114, 115, 552, 553, 554, 261, 592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 151, 0,
	0, 0, 178, 0, 180, 0, 0, 238, 193, 0,
	0, 0, 0, 608, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 0, 0, 534, 598, 597,
	577, 0, 0, 0, 134, 578, 0, 0, 0, 579,
	582, 580, 581, 0, 0, 600, 0, 0, 0, 0,
	0, 532, 566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 529, 0, 0,
	0, 593, 0, 565, 0, 0, 595, 0, 583, 0,
	124, 243, 257, 135, 234, 271, 139, 241, 130, 207,
	230, 126, 255, 240, 190, 172, 173, 125, 0, 225,
	149, 162, 146, 205, 590, 591, 145, 556, 588, 265,
	128, 129, 264, 204, 252, 256, 191, 185, 127, 254,
	189, 184, 176, 153, 168, 217, 183, 218, 169, 195,
	194, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 606, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 589, 0, 228, 210, 619,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 604,
	206, 618, 599, 601, 602, 605, 609, 610, 611, 612,
	613, 615, 617, 620, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 555,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 594,
	197, 198, 199, 200, 607, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 626,
	603, 625, 627, 628, 624, 629, 630, 614, 570, 0,
	622, 621, 623, 0, 119, 0, 179, 268, 222, 156,
	83, 536, 537, 538, 539, 540, 541, 542, 91, 543,
	93, 94, 95, 96, 544, 98, 545, 100, 101, 102,
	546, 547, 548, 549, 107, 108, 109, 550, 551, 112,
	113, 114, 115, 552, 553, 554, 261, 592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 151, 0, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 608, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 534, 598, 597, 577,
	0, 0, 0, 134, 578, 0, 0, 0, 579, 582,
	580, 581, 0, 0, 600, 0, 0, 0, 0, 0,
	532, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 0, 0, 0, 0,
	593, 0, 565, 0, 0, 595, 0, 583, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 590, 591, 145, 556, 588, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 606, 219, 0, 0, 242, 164, 163,
	177, 0, 0, 0, 589, 0, 228, 210, 619, 0,
	215, 226, 181, 253, 220, 258, 244, 266, 0, 221,
	120, 245, 148, 192, 132, 133, 144, 150, 152, 154,
	155, 201, 202, 213, 233, 246, 247, 248, 147, 140,
	227, 141, 166, 142, 121, 235, 143, 122, 214, 251,
	131, 161, 223, 188, 123, 187, 216, 250, 249, 0,
	0, 0, 0, 0, 0, 158, 0, 262, 604, 206,
	618, 599, 601, 602, 605, 609, 610, 611, 612, 613,
	615, 617, 620, 231, 0, 0, 0, 0, 0, 171,
	212, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 260, 273, 555, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 594, 197,
	198, 199, 200, 607, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 165, 0, 167, 137,
	211, 160, 270, 174, 203, 170, 236, 175, 182, 224,
	269, 209, 229, 136, 259, 237, 186, 159, 626, 603,
	625, 627, 628, 624, 629, 630, 614, 570, 0, 622,
	621, 623, 0, 119, 0, 179, 268, 222, 156, 83,
	536, 537, 538, 539, 540, 541, 542, 91, 543, 93,
	94, 95, 96, 544, 98, 545, 100, 101, 102, 546,
	547, 548, 549, 107, 108, 109, 550, 551, 112, 113,
	114, 115, 552, 553, 554, 261, 592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 151, 0, 0, 0,
	178, 0, 180, 0, 0, 238, 193, 0, 0, 0,
	0, 608, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 0, 0, 534, 598, 597, 577, 0,
	0, 0, 134, 578, 0, 0, 0, 579, 582, 580,
	581, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	566, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 0, 0, 0, 0, 593,
	0, 565, 0, 0, 595, 0, 583, 0, 124, 243,
	257, 135, 234, 271, 139, 241, 130, 207, 230, 126,
	255, 240, 190, 172, 173, 125, 0, 225, 149, 162,
	146, 205, 590, 591, 145, 556, 588, 265, 128, 129,
	264, 204, 252, 256, 191, 185, 127, 254, 189, 184,
	176, 153, 168, 217, 183, 218, 169, 195, 194, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 606, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 589, 0, 228, 210, 619, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 604, 206, 618,
	599, 601, 602, 605, 609, 610, 611, 612, 613, 615,
	617, 620, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 555, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 594, 197, 198,
	199, 200, 607, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 626, 603, 625,
	627, 628, 624, 629, 630, 614, 570, 0, 622, 621,
	623, 0, 119, 0, 179, 268, 222, 156, 83, 536,
	537, 538, 539, 540, 541, 542, 91, 543, 93, 94,
	95, 96, 544, 98, 545, 100, 101, 102, 546, 547,
	548, 549, 107, 108, 109, 550, 551, 112, 113, 114,
	115, 552, 553, 554, 261, 592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 151, 0, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	608, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 598, 597, 577, 0, 0,
	0, 134, 578, 0, 0, 0, 579, 582, 580, 581,
	0, 0, 600, 0, 0, 0, 0, 0, 532, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 0, 0, 0, 0, 593, 0,
	565, 0, 0, 595, 0, 583, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 590, 591, 145, 556, 588, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 606, 219, 0, 0, 242, 164, 163, 177, 0,
	0, 0, 589, 0, 228, 210, 619, 0, 215, 226,
	181, 253, 220, 258, 244, 266, 0, 221, 120, 245,
	148, 192, 132, 133, 144, 150, 152, 154, 155, 201,
	202, 213, 233, 246, 247, 248, 147, 140, 227, 141,
	166, 142, 121, 235, 143, 122, 214, 251, 131, 161,
	223, 188, 123, 187, 216, 250, 249, 0, 0, 0,
	0, 0, 0, 158, 0, 262, 604, 206, 618, 599,
	601, 602, 605, 609, 610, 611, 612, 613, 615, 617,
	620, 231, 0, 0, 0, 0, 0, 171, 212, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 260, 273, 555, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 594, 197, 198, 199,
	200, 607, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 165, 0, 167, 137, 211, 160,
	270, 174, 203, 170, 236, 175, 182, 224, 269, 209,
	229, 136, 259, 237, 186, 159, 626, 603, 625, 627,
	628, 624, 629, 630, 614, 570, 0, 622, 621, 623,
	0, 119, 0, 179, 268, 222, 156, 83, 536, 537,
	538, 539, 540, 541, 542, 91, 543, 93, 94, 95,
	96, 544, 98, 545, 100, 101, 102, 546, 547, 548,
	549, 107, 108, 109, 550, 551, 112, 113, 114, 115,
	552, 553, 554, 261, 310, 0, 309, 313, 305, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 320,
	178, 0, 180, 0, 0, 238, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 324, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 243,
	257, 135, 234, 271, 139, 241, 130, 207, 230, 126,
	255, 240, 190, 172, 173, 125, 0, 225, 149, 162,
	146, 205, 0, 0, 145, 274, 0, 265, 128, 129,
	264, 204, 252, 256, 191, 185, 127, 254, 189, 184,
	176, 153, 168, 217, 183, 218, 169, 195, 194, 196,
	303, 302, 306, 0, 0, 0, 0, 0, 308, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	312, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 304, 244, 266, 0, 328, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 307, 311, 314, 212,
	315, 316, 0, 0, 317, 318, 319, 0, 0, 321,
	322, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 310, 0, 309, 313, 305,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	320, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 324,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 0, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 303, 302, 306, 0, 0, 0, 0, 0, 308,
	267, 0, 0, 0, 219, 0, 0, 242, 164, 163,
	177, 312, 0, 0, 0, 0, 228, 210, 0, 0,
	215, 226, 181, 253, 220, 304, 244, 266, 0, 221,
	120, 245, 148, 192, 132, 133, 144, 150, 152, 154,
	155, 201, 202, 213, 233, 246, 247, 248, 147, 140,
	227, 141, 166, 142, 121, 235, 143, 122, 214, 251,
	131, 161, 223, 188, 123, 187, 216, 250, 249, 0,
	0, 0, 0, 0, 0, 158, 0, 262, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 307, 311, 314,
	212, 315, 316, 0, 0, 317, 318, 319, 0, 0,
	321, 322, 0, 0, 0, 239, 260, 273, 263, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 197,
	198, 199, 200, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 165, 0, 167, 137,
	211, 160, 270, 174, 203, 170, 236, 175, 182, 224,
	269, 209, 229, 136, 259, 237, 186, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 179, 268, 222, 156, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 261, 74, 0, 22, 37,
	23, 0, 0, 0, 0, 0, 0, 0, 208, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 178, 0, 180, 0, 0, 238, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 243, 257, 135, 234, 271, 139, 241, 130, 207,
	230, 126, 255, 240, 190, 172, 173, 125, 0, 225,
	149, 162, 146, 205, 0, 0, 145, 274, 0, 265,
	128, 129, 264, 204, 252, 256, 191, 185, 127, 254,
	189, 184, 176, 153, 168, 217, 183, 218, 169, 195,
	194, 196, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 263,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	197, 198, 199, 200, 278, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 179, 268, 222, 156,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 261, 208, 0, 0,
	0, 0, 754, 0, 0, 0, 0, 151, 0, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 752, 750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 0, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 219, 0, 0, 242, 164, 163,
	177, 0, 0, 0, 0, 0, 228, 210, 0, 0,
	215, 226, 181, 253, 220, 258, 244, 266, 0, 221,
	120, 245, 148, 192, 132, 133, 144, 150, 152, 154,
	155, 201, 202, 213, 233, 246, 247, 248, 147, 140,
	227, 141, 166, 142, 121, 235, 143, 122, 214, 251,
	131, 161, 223, 188, 123, 187, 216, 250, 249, 0,
	0, 0, 0, 0, 0, 158, 0, 262, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 171,
	212, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 260, 273, 263, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 197,
	198, 199, 200, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 165, 0, 167, 137,
	211, 160, 270, 174, 203, 170, 236, 175, 182, 224,
	269, 209, 229, 136, 259, 237, 186, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 179, 268, 222, 156, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 261, 208, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 151, 500, 0, 0,
	178, 0, 180, 0, 0, 238, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 324, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 243,
	257, 135, 234, 271, 139, 241, 130, 207, 230, 126,
	255, 240, 190, 172, 173, 125, 0, 225, 149, 162,
	146, 205, 0, 0, 145, 274, 0, 265, 128, 129,
	264, 204, 252, 256, 191, 185, 127, 254, 189, 184,
	176, 153, 168, 217, 183, 218, 169, 195, 194, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 501, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 828, 80, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 0, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 219, 0, 0, 242, 164, 163,
	177, 0, 0, 0, 0, 0, 228, 210, 0, 0,
	215, 226, 181, 253, 220, 258, 244, 266, 0, 221,
	120, 245, 148, 192, 132, 133, 144, 150, 152, 154,
	155, 201, 202, 213, 233, 246, 247, 248, 147, 140,
	227, 141, 166, 142, 121, 235, 143, 122, 214, 251,
	131, 161, 223, 188, 123, 187, 216, 250, 249, 0,
	0, 0, 0, 0, 0, 158, 0, 262, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 171,
	212, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 260, 273, 263, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 197,
	198, 199, 200, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 165, 0, 167, 137,
	211, 160, 270, 174, 203, 170, 236, 175, 182, 224,
	269, 209, 229, 136, 259, 237, 186, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 179, 268, 222, 156, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 261, 208, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	178, 0, 180, 0, 0, 238, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 324, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 243,
	257, 135, 234, 271, 139, 241, 130, 207, 230, 126,
	255, 240, 190, 172, 173, 125, 0, 225, 149, 162,
	146, 205, 0, 0, 145, 274, 0, 265, 128, 129,
	264, 204, 252, 256, 191, 185, 127, 254, 189, 184,
	176, 153, 168, 217, 183, 218, 169, 195, 194, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 718, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 80, 598, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 0, 0, 145, 274, 0, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 219, 0, 0, 242, 164, 163, 177, 0,
	0, 0, 0, 0, 228, 210, 0, 0, 215, 226,
	181, 253, 220, 258, 244, 266, 0, 221, 120, 245,
	148, 192, 132, 133, 144, 150, 152, 154, 155, 201,
	202, 213, 233, 246, 247, 248, 147, 140, 227, 141,
	166, 142, 121, 235, 143, 122, 214, 251, 131, 161,
	223, 188, 123, 187, 216, 250, 249, 0, 0, 0,
	0, 0, 0, 158, 0, 262, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 171, 212, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 260, 273, 263, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 197, 198, 199,
	200, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 165, 0, 167, 137, 211, 160,
	270, 174, 203, 170, 236, 175, 182, 224, 269, 209,
	229, 136, 259, 237, 186, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 179, 268, 222, 156, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 261, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 178, 0,
	180, 0, 0, 238, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 673, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 243, 257, 135,
	234, 271, 139, 241, 130, 207, 230, 126, 255, 240,
	190, 172, 173, 125, 0, 225, 149, 162, 146, 205,
	0, 0, 145, 274, 0, 265, 128, 129, 264, 204,
	252, 256, 191, 185, 127, 254, 189, 184, 176, 153,
	168, 217, 183, 218, 169, 195, 194, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 0, 0, 228, 210, 0, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 158, 0, 262, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 171, 212, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 260, 273, 263, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 1256, 197, 198, 199, 200,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 165, 0, 167, 137, 211, 160, 270,
	174, 203, 170, 236, 175, 182, 224, 269, 209, 229,
	136, 259, 237, 186, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 179, 268, 222, 156, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 261, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 598, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	219, 0, 0, 242, 164, 163, 177, 0, 0, 0,
	0, 0, 228, 210, 0, 0, 215, 226, 181, 253,
	220, 258, 244, 266, 0, 221, 120, 245, 148, 192,
	132, 133, 144, 150, 152, 154, 155, 201, 202, 213,
	233, 246, 247, 248, 147, 140, 227, 141, 166, 142,
	121, 235, 143, 122, 214, 251, 131, 161, 223, 188,
	123, 187, 216, 250, 249, 0, 0, 0, 0, 0,
	0, 158, 0, 262, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 171, 212, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 260, 273, 263, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 197, 198, 199, 200, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 165, 0, 167, 137, 211, 160, 270, 174,
	203, 170, 236, 175, 182, 224, 269, 209, 229, 136,
	259, 237, 186, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 179, 268, 222, 156, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 261, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 178, 0, 180, 0,
	0, 238, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1447, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 243, 257, 135, 234, 271,
	139, 241, 130, 207, 230, 126, 255, 240, 190, 172,
	173, 125, 0, 225, 149, 162, 146, 205, 0, 0,
	145, 274, 0, 265, 128, 129, 264, 204, 252, 256,
	191, 185, 127, 254, 189, 184, 176, 153, 168, 217,
	183, 218, 169, 195, 194, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 219,
	0, 0, 242, 164, 163, 177, 0, 0, 0, 0,
	0, 228, 210, 0, 0, 215, 226, 181, 253, 220,
	258, 244, 266, 0, 221, 120, 245, 148, 192, 132,
	133, 144, 150, 152, 154, 155, 201, 202, 213, 233,
	246, 247, 248, 147, 140, 227, 141, 166, 142, 121,
	235, 143, 122, 214, 251, 131, 161, 223, 188, 123,
	187, 216, 250, 249, 0, 0, 0, 0, 0, 0,
	158, 0, 262, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 171, 212, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 260, 273, 263, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 197, 198, 199, 200, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 165, 0, 167, 137, 211, 160, 270, 174, 203,
	170, 236, 175, 182, 224, 269, 209, 229, 136, 259,
	237, 186, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	179, 268, 222, 156, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	261, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 178, 0, 180, 0, 0,
	238, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 673, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 243, 257, 135, 234, 271, 139,
	241, 130, 207, 230, 126, 255, 240, 190, 172, 173,
	125, 0, 225, 149, 162, 146, 205, 0, 0, 145,
	274, 0, 265, 128, 129, 264, 204, 252, 256, 191,
	185, 127, 254, 189, 184, 176, 153, 168, 217, 183,
	218, 169, 195, 194, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 219, 0,
	0, 242, 164, 163, 177, 0, 0, 0, 0, 0,
	228, 210, 0, 0, 215, 226, 181, 253, 220, 258,
	244, 266, 0, 221, 120, 245, 148, 192, 132, 133,
	144, 150, 152, 154, 155, 201, 202, 213, 233, 246,
	247, 248, 147, 140, 227, 141, 166, 142, 121, 235,
	143, 122, 214, 251, 131, 161, 223, 188, 123, 187,
	216, 250, 249, 0, 0, 0, 0, 0, 0, 158,
	0, 262, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 171, 212, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	260, 273, 263, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 197, 198, 199, 200, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	165, 0, 167, 137, 211, 160, 270, 174, 203, 170,
	236, 175, 182, 224, 269, 209, 229, 136, 259, 237,
	186, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 179,
	268, 222, 156, 83, 84, 85, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 261,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 178, 0, 180, 0, 0, 238,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 243, 257, 135, 234, 271, 139, 241,
	130, 207, 230, 126, 255, 240, 190, 172, 173, 125,
	0, 225, 149, 162, 146, 205, 0, 0, 145, 274,
	0, 265, 128, 129, 264, 204, 252, 256, 191, 185,
	127, 254, 189, 184, 176, 153, 168, 217, 183, 218,
	169, 195, 194, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 219, 0, 0,
	242, 164, 163, 177, 0, 0, 0, 0, 0, 228,
	210, 0, 0, 215, 226, 181, 253, 220, 258, 244,
	266, 0, 221, 120, 245, 148, 192, 132, 133, 144,
	150, 152, 154, 155, 201, 202, 213, 233, 246, 247,
	248, 147, 140, 227, 141, 166, 142, 121, 235, 143,
	122, 214, 251, 131, 161, 223, 188, 123, 187, 216,
	250, 249, 0, 0, 0, 0, 0, 0, 158, 0,
	262, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 171, 212, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 260,
	273, 263, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 197, 198, 199, 200, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 165,
	0, 167, 137, 211, 160, 270, 174, 203, 170, 236,
	175, 182, 224, 269, 209, 229, 136, 259, 237, 186,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 179, 268,
	222, 156, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 261, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 0, 0, 145, 274, 0,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 219, 0, 0, 242,
	164, 163, 177, 0, 0, 0, 0, 0, 228, 210,
	0, 0, 215, 226, 181, 253, 220, 258, 244, 266,
	0, 221, 120, 245, 148, 192, 132, 133, 144, 150,
	152, 154, 155, 201, 202, 213, 233, 246, 247, 248,
	147, 140, 227, 141, 166, 142, 121, 235, 143, 122,
	214, 251, 131, 161, 223, 188, 123, 187, 216, 250,
	249, 0, 0, 0, 0, 0, 0, 158, 0, 262,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 171, 212, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 260, 273,
	263, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 197, 198, 199, 200, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 165, 0,
	167, 137, 211, 160, 270, 174, 203, 170, 236, 175,
	182, 224, 269, 209, 229, 136, 259, 237, 186, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 179, 268, 222,
	156, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 261, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 178, 0, 180, 0, 0, 238, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 243, 257, 135, 234, 271, 139, 241, 130, 207,
	230, 126, 255, 240, 190, 172, 173, 125, 0, 225,
	149, 162, 146, 205, 0, 0, 145, 274, 0, 265,
	128, 129, 264, 204, 252, 256, 191, 185, 127, 254,
	189, 184, 176, 153, 168, 217, 183, 218, 169, 195,
	194, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 219, 0, 0, 242, 164,
	163, 177, 0, 0, 0, 0, 0, 228, 210, 0,
	0, 215, 226, 181, 253, 220, 258, 244, 266, 0,
	221, 120, 245, 148, 192, 132, 133, 144, 150, 152,
	154, 155, 201, 202, 213, 233, 246, 247, 248, 147,
	140, 227, 141, 166, 142, 121, 235, 143, 122, 214,
	251, 131, 161, 223, 188, 123, 187, 216, 250, 249,
	0, 0, 0, 0, 0, 0, 158, 0, 262, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	171, 212, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 260, 273, 263,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	197, 198, 199, 200, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 165, 0, 167,
	137, 211, 160, 270, 174, 203, 170, 236, 175, 182,
	224, 269, 209, 229, 136, 259, 237, 186, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 179, 268, 222, 156,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 261, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 178, 0, 180, 0, 0, 238, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 324,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	243, 257, 135, 234, 271, 139, 241, 130, 207, 230,
	126, 255, 240, 190, 172, 173, 125, 0, 225, 149,
	162, 146, 205, 0, 0, 145, 274, 0, 265, 128,
	129, 264, 204, 252, 256, 191, 185, 127, 254, 189,
	184, 176, 153, 168, 217, 183, 218, 169, 195, 194,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 219, 0, 0, 242, 164, 163,
	177, 0, 0, 0, 0, 0, 228, 210, 0, 0,
	215, 226, 181, 253, 220, 258, 244, 266, 0, 221,
	120, 245, 148, 192, 132, 133, 144, 150, 152, 154,
	155, 201, 202, 213, 233, 246, 247, 248, 147, 140,
	227, 141, 166, 142, 121, 235, 143, 122, 214, 251,
	131, 161, 223, 188, 123, 187, 216, 250, 249, 0,
	0, 0, 0, 0, 0, 158, 0, 262, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 171,
	212, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 260, 273, 263, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 197,
	198, 199, 200, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 165, 0, 167, 137,
	211, 160, 270, 174, 203, 170, 236, 175, 182, 224,
	269, 209, 229, 136, 259, 237, 186, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 179, 268, 222, 156, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 261, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	178, 0, 180, 0, 0, 238, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 0, 673, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 243,
	257, 135, 234, 271, 139, 241, 130, 207, 230, 126,
	255, 240, 190, 172, 173, 125, 0, 225, 149, 162,
	146, 205, 0, 0, 145, 274, 0, 265, 128, 129,
	264, 204, 252, 256, 191, 185, 127, 254, 189, 184,
	176, 153, 168, 217, 183, 218, 169, 195, 194, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 709, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 179, 268, 222, 156, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 261, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 151, 0, 0, 0, 178,
	0, 180, 0, 0, 238, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 243, 257,
	135, 234, 271, 139, 241, 130, 207, 230, 126, 255,
	240, 190, 172, 173, 125, 0, 225, 149, 162, 146,
	205, 0, 0, 145, 274, 0, 265, 128, 129, 264,
	204, 252, 256, 191, 185, 127, 254, 189, 184, 176,
	153, 168, 217, 183, 218, 169, 195, 194, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 219, 0, 0, 242, 164, 163, 177, 0,
	0, 0, 0, 0, 228, 210, 0, 0, 215, 226,
	181, 253, 220, 258, 244, 266, 0, 221, 120, 245,
	148, 192, 132, 133, 144, 150, 152, 154, 155, 201,
	202, 213, 233, 246, 247, 248, 147, 140, 227, 141,
	166, 142, 121, 235, 143, 122, 214, 251, 131, 161,
	223, 188, 123, 187, 216, 250, 249, 0, 0, 0,
	0, 0, 0, 158, 0, 262, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 171, 212, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 260, 273, 263, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 197, 198, 199,
	200, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 165, 0, 167, 137, 211, 160,
	270, 174, 203, 170, 236, 175, 182, 224, 269, 209,
	229, 136, 259, 237, 186, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 179, 268, 222, 156, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 261, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 178, 0,
	180, 0, 0, 238, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 243, 257, 135,
	234, 271, 139, 241, 130, 207, 230, 126, 255, 240,
	190, 172, 173, 125, 0, 225, 149, 162, 146, 205,
	0, 0, 145, 274, 0, 265, 128, 129, 264, 204,
	252, 256, 191, 185, 127, 254, 189, 184, 176, 153,
	168, 217, 183, 218, 169, 195, 194, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 219, 0, 0, 242, 164, 163, 177, 0, 0,
	0, 0, 0, 228, 210, 0, 0, 215, 226, 181,
	253, 220, 258, 244, 266, 0, 221, 120, 245, 148,
	192, 132, 133, 144, 150, 152, 154, 155, 201, 202,
	213, 233, 246, 247, 248, 147, 140, 227, 141, 166,
	142, 121, 235, 143, 122, 214, 251, 131, 161, 223,
	188, 123, 187, 216, 250, 249, 0, 0, 0, 0,
	0, 0, 158, 0, 262, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 171, 212, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 260, 273, 263, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 197, 198, 199, 200,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 165, 0, 167, 137, 211, 160, 270,
	174, 203, 170, 236, 175, 182, 224, 269, 209, 229,
	136, 259, 237, 186, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 179, 268, 222, 156, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 261, 208, 0, 0, 0, 0, 425, 0,
	0, 0, 0, 151, 0, 0, 0, 178, 0, 180,
	0, 0, 238, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 432, 427, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 243, 257, 135, 234,
	271, 139, 241, 130, 207, 230, 126, 255, 240, 190,
	172, 173, 125, 0, 225, 149, 162, 146, 205, 0,
	0, 145, 274, 0, 265, 128, 129, 264, 204, 252,
	256, 191, 185, 127, 254, 189, 184, 176, 153, 168,
	217, 183, 218, 169, 195, 194, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	219, 0, 0, 242, 164, 163, 177, 0, 0, 0,
	0, 0, 228, 210, 0, 0, 215, 226, 181, 253,
	220, 258, 244, 266, 0, 221, 120, 245, 148, 192,
	132, 133, 144, 150, 152, 154, 155, 201, 202, 213,
	233, 246, 247, 248, 147, 140, 227, 141, 166, 142,
	121, 235, 143, 122, 214, 251, 131, 161, 223, 188,
	123, 187, 216, 250, 249, 0, 0, 0, 0, 0,
	0, 158, 0, 262, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 171, 212, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 260, 273, 263, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 197, 198, 199, 200, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 165, 0, 167, 137, 211, 160, 270, 174,
	203, 170, 236, 175, 182, 224, 269, 209, 229, 136,
	259, 237, 186, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 119,
	0, 179, 268, 222, 156, 0, 151, 0, 0, 0,
	178, 0, 180, 0, 0, 238, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 431, 432, 427, 0,
	0, 261, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 243,
	257, 135, 234, 271, 139, 241, 130, 207, 230, 126,
	255, 240, 190, 172, 173, 125, 0, 225, 149, 162,
	146, 205, 0, 0, 145, 274, 0, 265, 128, 129,
	264, 204, 252, 256, 191, 185, 127, 254, 189, 184,
	176, 153, 168, 217, 183, 218, 169, 195, 194, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 219, 0, 0, 242, 164, 163, 177,
	0, 0, 0, 0, 0, 228, 210, 0, 0, 215,
	226, 181, 253, 220, 258, 244, 266, 0, 221, 120,
	245, 148, 192, 132, 133, 144, 150, 152, 154, 155,
	201, 202, 213, 233, 246, 247, 248, 147, 140, 227,
	141, 166, 142, 121, 235, 143, 122, 214, 251, 131,
	161, 223, 188, 123, 187, 216, 250, 249, 0, 0,
	0, 0, 0, 0, 158, 0, 262, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 171, 212,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 260, 273, 263, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 197, 198,
	199, 200, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 165, 0, 167, 137, 211,
	160, 270, 174, 203, 170, 236, 175, 182, 224, 269,
	209, 229, 136, 259, 237, 186, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 119, 0, 179, 268, 222, 156, 0, 151,
	0, 0, 0, 178, 0, 180, 0, 0, 238, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 0, 261, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 243, 257, 135, 234, 271, 139, 241, 130,
	207, 230, 126, 255, 240, 190, 172, 173, 125, 0,
	225, 149, 162, 146, 205, 0, 0, 145, 274, 0,
	265, 128, 129, 264, 204, 252, 256, 191, 185, 127,
	254, 189, 184, 176, 153, 168, 217, 183, 218, 169,
	195, 194, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 219, 0, 0, 242,
	164, 163, 177, 0, 0, 0, 0, 0, 228, 210,
	0, 0, 215, 226, 181, 253, 220, 258, 244, 266,
	0, 221, 120, 245, 148, 192, 132, 133, 144, 150,
	152, 154, 155, 201, 202, 213, 233, 246, 247, 248,
	147, 140, 227, 141, 166, 142, 121, 235, 143, 122,
	214, 251, 131, 161, 223, 188, 123, 187, 216, 250,
	249, 0, 0, 0, 0, 0, 1473, 158, 0, 262,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	1019, 171, 212, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 260, 273,
	263, 0, 0, 0, 272, 0, 1526, 0, 0, 0,
	0, 197, 198, 199, 200, 1455, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 165, 0,
	167, 137, 211, 160, 270, 174, 203, 170, 236, 175,
	182, 224, 269, 209, 229, 136, 259, 237, 186, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 179, 268, 222,
	156, 74, 0, 22, 37, 23, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 38, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 0, 0, 0, 1454, 1456, 1458, 0,
	1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1471,
	0, 0, 0, 0, 0, 65, 66, 0, 67, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 64, 72,
	0, 0, 0, 0, 0, 1451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 63, 61, 60,
	1467, 0, 0, 0, 0, 0, 1457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	0, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48,
}

var yyPact = [...]int{
	13845, -1000, -297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12017, 1421, -1000, 6170, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10461, 12406, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 5769, 5368, 58, -1000,
	1410, -1000, -1000, -1000, 75, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 348, -102, 219, 225, 253, 253, 233,
	1410, 1204, -45, -1000, 1361, 13845, 101, 12406, -1000, 296,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10461, 12406, -134, 334, -1000,
	1150, 289, -1000, -1000, -1000, -1000, 1203, -1000, -1000, -1000,
	1353, 12795, 1204, -1000, 1127, 1153, -1000, -1000, 1257, -1000,
	57, -68, -91, 19, -1000, -1000, 76, -1000, -1000, -1000,
	-1000, -1000, -21, -1000, -74, -1000, -79, -1000, -1000, -1000,
	-171, -1000, -1000, -1000, -1000, -1000, 1126, 271, 1272, -216,
	-1000, 1369, 1204, 1400, 1370, 122, 122, 136, 122, 145,
	-1000, -1000, -1000, -1000, -1000, -1000, 451, 87, -1000, -1000,
	-181, -184, 275, -184, -50, -1000, -1000, -1000, -1000, -1000,
	-1000, 126, -1000, -221, -1000, 212, -1000, 204, -1000, 6948,
	73, 1154, 405, -1000, 337, 935, 935, 935, 265, 288,
	-1000, -1000, 1369, 1204, -1000, 1034, 851, 126, 126, 126,
	126, 126, 3770, -1000, -1000, -1000, -1000, -1000, 1157, 1256,
	-1000, 12406, 1194, -1000, 286, 668, 782, -1000, 12406, 12406,
	10461, 10461, 10461, 10461, -1000, 1302, 1301, -1000, 1303, 1291,
	1309, 13481, -1000, -1000, -1000, 13138, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1030, 1410, 32, 1048, 9683, 11239, 12406,
	9683, -1000, -1000, -1000, -1000, -1000, -175, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32, 9683, 9683,
	-143, -1000, -1000, 4169, -1000, -1000, 4169, -1000, -1000, 9683,
	373, 11239, 801, 12406, 122, 12406, -1000, -1000, 275, 275,
	-1000, 451, 451, -1000, -1000, -180, 1414, 4568, -177, 12406,
	122, 11628, 1351, -209, 217, 208, 210, -1000, -1000, -218,
	-1000, -1000, 1132, 7738, 81, 120, 9683, 2172, -1000, -1000,
	337, 337, 337, 2172, 921, 875, -1000, -1000, -1000, -1000,
	-1000, -1000, 9683, 11239, 12406, 12406, 13481, 1115, -1000, -1000,
	6559, 282, 4169, 822, 1255, -1000, 1254, 1252, 1249, 1244,
	1243, 1242, 1240, 1221, 1238, 1237, -1000, -1000, -1000, 1236,
	1235, 1221, 1234, 1232, 1231, -1000, -1000, 742, -1000, -1000,
	-1000, -1000, 2972, 4568, 4568, 4568, 4568, -1000, -1000, 1230,
	1228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4967, -1000, 1227, 1222, 1221, 1220, 774,
	773, 766, 1219, 1216, 1215, 4568, 1214, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1207, -1000, 7349, 12406, -1000, 1402, 4169, 1815,
	-1000, 1122, 277, 1112, -1000, 332, 1261, 1271, 1261, -1000,
	-1000, -1000, -1000, 1292, -1000, 1284, -1000, -1000, -1000, -1000,
	-1000, 431, -1000, -1000, -1000, -1000, -1000, -74, -79, 1120,
	-1000, -104, 55, -1000, -1000, 1099, -1000, -1000, -1000, 431,
	1120, 138, 764, 609, 260, 1152, -1000, 652, 140, 1350,
	1132, 1225, 1335, 12406, 1414, 1414, 1414, 275, 13481, 451,
	12406, 451, -1000, -1000, 451, -1000, 258, 12406, 140, 1213,
	-1000, -1000, -1000, 215, 202, 206, 11239, 137, -1000, -1000,
	1132, -1000, -1000, -1000, 1212, 327, -1000, -1000, 4568, -1000,
	587, 2172, 2172, 2172, -1000, 337, -1000, 1120, 1132, 1269,
	1136, -1000, -1000, -1000, -1000, 1414, 3770, -1000, 10461, -1000,
	4169, 4169, 4169, -1000, 12406, 10850, -1000, 497, 4568, -1000,
	-1000, -1000, -1000, -1000, -1000, 4169, 1368, 1368, 1368, 4169,
	482, 4169, 4169, -1000, 650, 1368, 1368, 1368, 1368, -1000,
	1368, 1368, 1368, 4568, 4568, 4568, 4568, 4568, 4568, 4568,
	4568, 4568, 4568, 4568, 4568, 1208, 512, 4568, 4568, 4568,
	851, 1005, 1133, -1000, -1000, -1000, -1000, -1000, 4169, 134,
	4169, -1000, 1024, -1000, -1000, 4169, -1000, -1000, -1000, 4169,
	4568, 4169, -1000, 1368, 1117, -1000, 3371, 1095, 1321, -1000,
	257, 1091, -1000, 1369, 587, -1000, 256, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -136, -1000, 12406, 1402, 12406, 4169,
	-1000, -1000, 4169, 1211, -1000, 4169, -1000, -1000, -1000, 1420,
	250, 247, 9683, -1000, 104, 9683, -1000, -1000, 12406, 135,
	9683, -56, 4169, 4169, 12406, 4169, -1000, -1000, -1000, -242,
	-1000, -119, -1000, 1268, 3, -1000, 1335, -1000, 246, -1000,
	1210, -1000, -1000, -1000, 1414, -1000, 275, -1000, 275, 451,
	12406, -1000, -1000, -242, 1022, -1000, -1000, -1000, 200, 1132,
	9683, 729, 120, -1000, -1000, -1000, 2172, 12406, 12406, 1411,
	-1000, 1125, 1358, -1000, 511, 378, -1000, 243, -1000, -1000,
	411, -1000, 1019, 1110, 587, 4169, -1000, -1000, 4169, 4169,
	552, 4169, 1016, 1087, 1081, -1000, 1008, -1000, 4169, 4169,
	4169, 4169, 4169, 4169, 4169, 864, 878, -1000, 602, 602,
	259, 259, 259, 259, 259, 280, 280, -1000, -1000, -1000,
	2972, 1208, 4568, 4568, 4568, 108, 2355, 2154, -1000, 4169,
	541, -1000, -1000, 999, -1000, 847, 997, 1590, 986, 4169,
	1207, 1079, -1000, 1151, 12406, 1207, 12406, -1000, 12406, -1000,
	1815, 661, -1000, 1369, -1000, 587, 587, 12406, 587, 9683,
	245, 362, -1000, 8516, 9683, -1000, -1000, 9683, 63, 1346,
	-1000, -1000, 587, 587, 241, -1000, -1000, -135, -1000, -1000,
	-1000, 251, -1000, 762, 761, 754, 738, 12406, -1000, -1000,
	-1000, -1000, 310, 310, 310, -1000, 1333, 1332, 12406, -1000,
	1414, 1414, 275, -1000, -70, -108, -1000, 1120, 978, -1000,
	-1000, -1000, -1000, -1000, 1405, 1398, 10461, 10072, -1000, -1000,
	4169, 991, 972, 965, 209, 1067, -1000, -1000, -1000, -1000,
	958, 946, 938, 844, 841, 811, 713, 1063, -1000, 108,
	2355, 1494, -1000, 4568, 4568, 613, 209, 544, -1000, -1000,
	544, -1000, 4568, -1000, 578, -1000, -1000, 1207, -1000, -1000,
	1117, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1051,
	-1000, 1120, -1000, -1000, -1000, -1000, 9683, 1354, 140, -1000,
	-71, 144, 12406, -135, -1000, 659, 655, 653, 651, -111,
	-1000, -1000, -1000, -1000, -1000, 1202, 544, -1000, 557, 730,
	-1000, -1000, 974, 1118, -1000, -1000, 86, -1000, -1000, 1414,
	-1000, -70, -1000, 221, 195, -41, 1397, -1000, -1000, 4169,
	4169, 1358, -1000, -1000, 587, -1000, -1000, -1000, 971, 1177,
	1177, -1000, 1177, 1177, 1177, 1178, 1180, 1178, 193, 193,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4568, -1000, -1000, -1000, 966, 963, -1000, -1000, -1000, 957,
	854, -1000, 1117, -1000, 12406, -1000, 9683, 9683, -244, -80,
	12406, -1000, -1000, -1000, -1000, -1000, -1000, 9294, -1000, -1000,
	-1000, -1000, -1000, -1000, 1366, 12406, 1223, -93, -1000, -1000,
	-1000, 1177, -1000, 1177, 1177, 1177, 1177, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1201, 1199, -1000, 1177,
	1177, 1177, 1177, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1178, 1180, 1178, -1000, -1000, -1000, -1000,
	639, -1000, -1000, -1000, 729, 587, 1110, -1000, -1000, 638,
	-1000, -1000, -1000, -1000, -1000, 637, -1000, 633, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -177, 1045, -1000, 1177, 4169, 98, 13731,
	-1000, 310, 310, 252, 310, 310, 310, 310, 62, 56,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, -1000, -1000, 1223, -1000, -1000, 407,
	4568, -1000, -1000, 724, 557, 254, 316, 1175, -1000, 31,
	390, 384, -1000, 12406, 816, -100, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 723, 723, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -49, -1000, -1000, 939, 1097, 1041, -160, -149,
	-1000, 9294, 1343, 573, -1000, 1396, 1366, -1000, 618, 611,
	310, 310, 606, 712, 706, 705, 310, 310, 533, 700,
	13138, 522, 520, 514, 657, 699, 507, 634, 632, 547,
	12406, 1173, -1000, -1000, 2355, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 501, 1172, -1000, -1000,
	1171, -1000, -1000, -1000, 1037, -1000, 1011, -1000, -1000, 498,
	-1000, 496, 132, -157, -149, -1000, 1395, -154, 1391, 1388,
	60, -1000, -1000, 1343, 22, -1000, -1000, -1000, 544, 544,
	-1000, -1000, -1000, -1000, 697, 688, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 66, 12406,
	872, 4169, -237, 9294, -1000, 686, -1000, 845, 812, 1169,
	493, -145, 1380, -1000, 675, 1378, 675, 675, -1000, 310,
	684, -34, -1000, -1000, -1000, 20, 105, 103, -1000, 152,
	-1000, -1000, -1000, -1000, -1000, -1000, 74, 1004, -1000, 504,
	1267, -1000, -72, 984, -1000, -1000, -1000, 1326, 8127, -162,
	-1000, 1376, 681, -1000, -1000, 675, -1000, -1000, 479, -1000,
	801, 13, 469, 4568, 1165, 4568, 1164, 25, 1163, -1000,
	-1000, -1000, 205, -1000, -1000, 1266, 1264, 1418, -1000, -1000,
	-1000, -1000, -1000, 12406, -1000, 955, -1000, -1000, -1000, 240,
	-1000, 562, -1000, -1000, -1000, -1000, 1161, 1362, -1000, 842,
	12406, 776, 12406, 1160, 284, 4568, -1000, -1000, 29, -1000,
	1424, -1000, 1419, 249, 249, 1049, -1000, 279, -1000, 8905,
	12406, -1000, -1000, 96, 23, -1000, 951, -1000, 948, 12406,
	456, 538, -1000, -1000, -1000, -1000, 503, 35, -1000, 12406,
	2571, -1000, 232, 942, -1000, 808, 10, -1000, -1000, 871,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 587, 12406, -1000,
	96, 1313, -1000, 454, -1000, -1000, -1000, 714, 90, -1000,
	-1000, 714, 12, -1000, 85, -1000, -1000, 853, -1000, 798,
	1158, -1000, 12, 1366, 4169, -1000, 1366, 837, -1000,
}

var yyPgo = [...]int{
	0, 475, 1739, 1738, 753, 751, 1737, 1736, 1735, 1734,
	1732, 1730, 1729, 1728, 1727, 1726, 1725, 1724, 1723, 1719,
	1718, 1717, 1716, 1715, 1714, 1711, 1709, 1708, 1707, 1706,
	1705, 1704, 695, 1689, 1688, 1687, 1686, 1685, 1684, 100,
	1683, 1682, 1680, 1678, 1674, 1673, 1672, 1671, 79, 70,
	1670, 65, 117, 1669, 88, 1667, 63, 104, 1666, 1662,
	24, 82, 1659, 87, 85, 62, 136, 61, 1658, 1656,
	1653, 1652, 101, 1651, 1650, 1649, 1648, 43, 33, 27,
	1647, 53, 1646, 1644, 1642, 1641, 1640, 1639, 1638, 45,
	36, 1637, 1636, 1635, 1633, 1632, 28, 1631, 35, 1629,
	1626, 1625, 1624, 1623, 1622, 13, 15, 14, 1621, 1620,
	1619, 2, 1617, 1616, 90, 1615, 1614, 1613, 500, 1612,
	1611, 1609, 112, 1608, 93, 1607, 1584, 1580, 1579, 21,
	1578, 34, 1576, 41, 1575, 1573, 71, 30, 18, 68,
	1570, 1569, 1568, 105, 22, 50, 0, 96, 31, 1567,
	95, 92, 1566, 60, 128, 75, 40, 1565, 49, 1564,
	1562, 1561, 54, 16, 1560, 59, 29, 58, 1559, 72,
	84, 1, 64, 1558, 102, 1553, 1552, 74, 1548, 1545,
	106, 77, 1544, 1542, 1541, 20, 1540, 32, 1538, 1537,
	114, 109, 1536, 1535, 1534, 81, 76, 55, 1533, 1532,
	51, 1531, 69, 52, 83, 1530, 659, 1528, 73, 44,
	1526, 103, 1525, 121, 94, 86, 1524, 1523, 108, 1324,
	107, 1521, 99, 9, 1519, 1518, 10, 1516, 19, 1515,
	1514, 1512, 1511, 6, 1510, 1509, 1508, 3, 5, 1506,
	4, 67, 1504, 1503, 46, 37, 42, 1502, 1501, 1500,
	122, 1499, 1498, 1496, 1478, 1472, 1469, 1468, 57, 1467,
	1466, 1465, 1464, 1462, 1461, 1460, 25, 1459, 17, 1456,
	1454, 1453, 1451, 11, 1450, 1449, 12, 1448, 1446, 7,
	8, 1445, 1444, 1442, 1440, 89, 1434,
}

//line mysql_sql.y:5411
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) intervalTypeUnion() tree.IntervalType {
	v, _ := st.union.(tree.IntervalType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 283, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	47, 282, 282, 281, 281, 280, 280, 279, 279, 279,
	278, 278, 278, 277, 277, 276, 276, 274, 274, 275,
	273, 272, 272, 271, 271, 269, 269, 270, 270, 265,
	265, 267, 267, 266, 266, 266, 266, 268, 264, 264,
	264, 263, 263, 46, 46, 46, 209, 209, 45, 45,
	222, 222, 222, 222, 222, 220, 220, 220, 220, 219,
	219, 218, 218, 223, 223, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 40, 40,
	40, 40, 43, 44, 216, 216, 216, 216, 216, 217,
	217, 217, 41, 42, 42, 208, 208, 212, 212, 211,
	211, 211, 211, 211, 211, 207, 207, 215, 215, 215,
	215, 214, 214, 213, 213, 34, 34, 34, 37, 36,
	206, 206, 206, 206, 206, 206, 206, 206, 35, 35,
	35, 35, 35, 35, 33, 33, 32, 205, 205, 204,
	39, 39, 39, 39, 38, 38, 38, 38, 38, 38,
	38, 149, 149, 149, 7, 31, 31, 250, 250, 159,
	159, 160, 160, 158, 158, 158, 158, 158, 158, 253,
	254, 156, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 30, 284, 284, 284, 28, 29, 249, 249,
	249, 27, 26, 25, 24, 24, 23, 22, 22, 153,
	153, 155, 155, 151, 285, 285, 228, 228, 154, 154,
	21, 21, 152, 152, 134, 150, 150, 150, 6, 8,
	8, 8, 8, 8, 13, 12, 11, 10, 9, 5,
	4, 257, 257, 257, 257, 257, 71, 71, 67, 67,
	258, 258, 172, 172, 69, 69, 70, 70, 59, 59,
	48, 48, 49, 49, 49, 65, 65, 66, 66, 66,
	64, 64, 63, 62, 62, 61, 60, 60, 60, 51,
	51, 50, 50, 50, 50, 50, 118, 118, 118, 52,
	251, 251, 251, 256, 256, 115, 115, 116, 116, 114,
	114, 53, 53, 54, 54, 54, 54, 113, 113, 112,
	55, 55, 56, 56, 58, 58, 58, 58, 123, 123,
	122, 122, 122, 122, 74, 74, 121, 120, 120, 120,
	73, 73, 72, 72, 68, 68, 57, 57, 119, 286,
	286, 117, 142, 142, 142, 148, 148, 141, 141, 141,
	147, 147, 143, 143, 144, 144, 144, 3, 3, 3,
	16, 16, 16, 14, 202, 202, 201, 201, 203, 203,
	203, 203, 197, 197, 198, 198, 198, 198, 199, 199,
	199, 200, 200, 200, 200, 196, 196, 195, 193, 193,
	193, 194, 194, 194, 194, 194, 194, 145, 145, 15,
	190, 190, 191, 191, 191, 192, 192, 184, 184, 184,
	184, 19, 188, 188, 189, 189, 189, 189, 189, 185,
	185, 187, 187, 183, 183, 183, 183, 18, 182, 182,
	180, 180, 178, 178, 179, 179, 177, 177, 177, 181,
	181, 17, 252, 252, 224, 224, 227, 227, 234, 234,
	235, 235, 233, 233, 240, 240, 239, 239, 238, 238,
	237, 237, 236, 236, 231, 231, 230, 230, 225, 225,
	225, 225, 225, 226, 226, 229, 229, 232, 232, 94,
	94, 95, 95, 95, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 97, 97, 97, 101, 101, 101, 101, 101,
	101, 96, 96, 96, 98, 98, 98, 79, 79, 78,
	78, 75, 75, 76, 76, 77, 80, 130, 130, 130,
	146, 146, 146, 129, 129, 129, 93, 93, 92, 92,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 210, 210, 157, 157, 157, 110, 108,
	108, 109, 109, 109, 109, 106, 107, 105, 105, 105,
	105, 105, 104, 104, 103, 103, 103, 186, 186, 102,
	102, 100, 100, 100, 99, 99, 99, 241, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 89, 89, 89, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 262,
	262, 262, 125, 127, 127, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 173, 173, 174,
	174, 259, 259, 259, 259, 259, 259, 260, 260, 261,
	261, 261, 261, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 164, 124, 124, 124, 242, 175, 170, 170, 171,
	171, 166, 166, 166, 166, 166, 168, 168, 168, 168,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 167,
	167, 169, 169, 176, 176, 176, 176, 176, 176, 91,
	91, 91, 91, 243, 161, 161, 161, 161, 161, 161,
	82, 82, 82, 82, 86, 86, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 87, 87, 87, 85, 85,
	85, 85, 85, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 84, 131,
	131, 244, 244, 245, 245, 246, 246, 246, 247, 247,
	247, 248, 248, 133, 133, 133, 138, 138, 132, 132,
	139, 139, 140, 140, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	14, 0, 2, 1, 3, 3, 3, 1, 3, 5,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 9, 4, 7, 0, 3, 7, 4,
	1, 3, 3, 3, 1, 0, 1, 1, 1, 1,
	3, 1, 4, 1, 3, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 6, 3, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	0, 4, 2, 4, 1, 5, 3, 2, 1, 2,
	2, 4, 4, 5, 2, 1, 7, 1, 3, 3,
	1, 1, 1, 1, 2, 3, 4, 7, 2, 5,
	3, 1, 1, 1, 1, 7, 9, 0, 2, 0,
	1, 1, 2, 2, 2, 1, 4, 2, 2, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 5, 1, 1, 1, 5, 5, 0, 1,
	1, 2, 2, 3, 6, 7, 4, 7, 8, 0,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 5, 1, 3, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 4, 4, 6,
	4, 2, 1, 5, 4, 4, 1, 3, 1, 3,
	1, 3, 3, 2, 0, 4, 1, 3, 2, 1,
	1, 1, 3, 2, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 7,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 3, 0,
	1, 2, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 0, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 2, 2, 2, 2, 1, 3,
	2, 2, 2, 2, 2, 1, 3, 2, 1, 3,
	2, 0, 3, 3, 5, 5, 4, 1, 1, 4,
	1, 3, 1, 3, 2, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 10, 0, 1, 0, 6, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 6, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 6, 5, 0, 3, 0, 1, 0,
	1, 1, 3, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 5, 6, 1, 2, 0, 1, 2, 5, 0,
	1, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 6, 6, 6, 1, 1, 1, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 0, 1, 1, 5, 4, 4, 5, 5, 5,
	5, 4, 5, 5, 5, 5, 5, 5, 5, 1,
	1, 1, 4, 2, 2, 4, 2, 2, 4, 6,
	2, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 2, 1, 3, 4, 3, 1,
	3, 4, 4, 5, 3, 4, 5, 6, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -283, -2, -1, -3, -4, -5, -6, -38, -20,
	-7, -32, -33, -34, -40, -45, -46, -47, -48, -16,
	-15, -14, 8, 10, -8, -149, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, 9, 49, -35,
	-36, -37, -41, -42, -43, -44, 274, 280, 316, -49,
	-51, -17, -18, -19, 172, -9, -10, -11, -12, -13,
	194, 193, 26, 192, 173, 120, 121, 123, 124, 30,
	-50, 54, 174, -52, 6, 407, -59, 27, -78, -146,
	57, -135, -137, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 364,
	211, 235, 238, 245, 120, 137, 131, 158, 150, 151,
	128, 241, 215, 216, 64, 123, 344, 330, 315, 126,
	230, 232, 234, 237, 217, 146, 142, 229, 213, 140,
	218, 28, 219, 163, 220, 221, 369, 326, 256, 348,
	332, 242, 141, 190, 189, 327, 233, 329, 164, 168,
	336, 280, 135, 136, 334, 338, 162, 191, 32, 366,
	34, 203, 339, 166, 161, 157, 347, 246, 244, 160,
	134, 156, 214, 38, 170, 169, 171, 310, 311, 312,
	313, 222, 223, 335, 153, 143, 260, 129, 18, 342,
	198, 331, 281, 224, 239, 201, 247, 165, 167, 185,
	205, 210, 368, 243, 340, 139, 202, 231, 197, 343,
	130, 274, 283, 225, 124, 236, 337, 346, 37, 296,
	133, 127, 188, 121, 207, 212, 226, 227, 228, 249,
	248, 240, 154, 204, 159, 132, 155, 122, 206, 345,
	297, 406, 258, 299, 152, 149, 208, 181, 367, 341,
	333, 125, 303, 298, 147, 11, -150, 19, 314, -39,
	176, -146, -5, -4, -32, -48, -56, -57, -58, -117,
	-119, -78, 54, -146, -219, -190, -218, -191, -221, -192,
	-145, 20, 173, 172, 206, 10, 174, 278, 180, 8,
	6, 279, 192, 9, 280, 282, 283, 286, 287, 288,
	31, 291, 292, 57, 60, -146, -219, -190, 210, 217,
	-63, -64, -118, 15, 5, 299, 209, -184, -182, -252,
	189, 188, 76, 350, 178, 289, -284, -249, 333, 332,
	-154, 331, 324, 326, 172, 180, 334, 32, 336, 337,
	327, 299, 125, 122, -206, 80, 130, 129, -206, 209,
	29, -212, 309, -211, -213, 336, 337, 347, -207, 57,
	58, 59, -64, -118, -63, -49, -51, 299, 209, 180,
	179, 350, -251, 20, -256, 21, 22, -1, -69, 201,
	-78, 119, -56, -129, -146, 315, 89, -39, 119, 30,
	-120, -121, -122, -123, 41, 45, 47, 42, 43, 44,
	48, -286, 23, -142, -148, 23, -143, 60, -144, -137,
	57, 58, 59, -49, -51, 51, 55, 11, 55, 54,
	408, 58, 276, 290, 299, 277, 289, 181, 209, 290,
	209, 324, 181, 281, 284, 285, 325, 51, 182, 51,
	-263, 347, -66, 17, -52, -51, 16, 20, 21, -180,
	184, -180, 180, -180, 179, -285, 11, 99, 208, 207,
	328, 325, -228, 329, 330, -154, -153, 97, -154, 179,
	350, -250, 184, 340, 367, 128, 129, 130, -216, 20,
	29, 308, -190, 209, 55, 89, 19, -214, 89, 100,
	-213, -213, -213, -214, 119, 119, -65, -66, -52, -51,
	56, 56, -250, -250, -250, -250, -250, -53, -54, 107,
	-166, -146, 81, -168, 57, -162, 371, 372, 373, 374,
	375, 376, 377, 379, 384, 386, 390, 391, 392, 393,
	397, 398, 403, 404, 405, 299, 147, -163, -165, -279,
	-274, -161, 54, 105, 106, 113, 82, -164, -241, 24,
	358, -125, -126, -127, -128, -275, -273, 60, 65, 69,
	71, 72, 70, 118, -51, -255, -261, -259, 148, 195,
	144, 145, 8, 111, 309, 116, -262, 59, 58, 262,
	75, 263, 264, 350, 259, 265, 184, 314, 43, 266,
	267, 268, 269, 270, 357, 271, 44, 272, 261, 199,
	273, 361, 360, 362, 354, 351, 349, 352, 353, 355,
	356, -257, 33, -48, 54, 54, -146, -114, 12, 119,
	65, 60, -146, -205, -204, -129, -57, -57, -57, -57,
	41, 41, 41, 46, 41, 46, 41, -122, -143, -148,
	56, -220, 179, 275, 205, -218, 206, 280, 283, -196,
	-195, -193, -145, 60, -191, -223, -129, -145, 325, -220,
	-196, -195, 317, -166, -146, -62, -61, -166, -196, 81,
	-190, -144, -146, -180, -78, -153, -153, -155, -285, -151,
	-285, 325, -114, -165, -228, -152, -146, -180, -196, 299,
	24, 341, 342, 126, 129, 128, 348, -217, 308, 20,
	-190, -211, -208, 60, 309, -195, -215, 51, 116, 29,
	-166, -214, -214, -214, -215, 57, 57, -196, -190, -146,
	-79, -78, -147, -144, -137, -113, 55, -112, 11, -141,
	80, 78, 79, -146, 23, 119, -166, 96, -176, 89,
	90, 91, 92, 93, 94, 54, 54, 54, 54, 54,
	54, 54, 54, -174, 54, 54, 54, 54, 54, -174,
	54, 54, 54, 102, 101, 112, 105, 106, 107, 108,
	109, 110, 111, 103, 104, 99, 81, 97, 98, 83,
	-51, -166, -171, -165, -165, -165, -165, -241, 54, -166,
	54, -260, 54, -173, -174, 54, 60, 60, 60, 54,
	54, 54, -165, 54, -258, -172, 54, -71, 56, -67,
	-146, -70, -146, -64, -166, -139, -140, -132, -136, -143,
	-144, -137, 257, 177, 20, 80, 23, 25, 262, 294,
	83, 116, 16, 84, 148, 115, 264, 358, 263, 172,
	47, 75, 360, 362, 361, 351, 349, 301, 305, 307,
	304, 350, 324, 29, 10, 26, 193, 21, 22, 109,
	174, 195, 87, 88, 196, 24, 194, 72, 19, 50,
	11, 314, 13, 14, 265, 300, 184, 183, 99, 317,
	180, 45, 8, 118, 27, 96, 302, 41, 77, 43,
	97, 17, 352, 353, 31, 316, 363, 200, 111, 266,
	267, 268, 48, 81, 308, 70, 51, 78, 15, 46,
	98, 175, 357, 44, 209, 306, 270, 272, 271, 178,
	6, 261, 359, 30, 192, 42, 179, 325, 86, 182,
	71, 199, 144, 145, 5, 76, 9, 49, 52, 354,
	355, 356, 33, 85, 12, 273, 269, 309, 318, 319,
	320, 321, 322, 323, 19, -39, 119, -114, 55, 89,
	-73, -72, 51, 52, -74, 51, -72, 41, 41, -222,
	107, 57, 55, -194, 300, 408, 58, 56, 55, -222,
	182, 60, 55, 18, 119, 55, -60, 25, 26, -197,
	-198, 306, 24, -183, 52, -178, -179, -177, -181, 29,
	-78, -114, -114, -114, -153, -147, -155, -150, -155, -151,
	119, -134, -146, -197, 54, 127, 130, 130, 129, -190,
	182, 54, 89, -215, -215, -215, -214, 51, 55, -114,
	-54, -55, -56, -166, -166, -166, -146, -146, 107, 70,
	81, -162, -170, -171, -166, -124, 21, 20, -124, -124,
	-166, -124, 107, -171, -171, 56, -243, 65, -124, -124,
	-124, -124, -124, -124, -124, -163, -163, -163, -163, -163,
	-163, -163, -163, -163, -163, -163, -163, -169, -175, -241,
	54, 99, 97, 98, 83, -165, -163, -163, 56, 55,
	-166, -242, 261, -170, 56, -171, -170, -163, -170, -124,
	55, -171, 56, 56, 55, 33, 119, 56, 55, -65,
	119, 315, -146, -64, -204, -166, -166, 54, -166, 11,
	119, 119, -195, 16, 367, -145, -129, 182, -196, -264,
	183, 357, -166, -166, -146, -61, -202, 367, 308, 307,
	303, -199, -200, 302, 304, 301, 305, 51, 253, 254,
	255, -177, -133, 115, 220, 75, 151, 148, 54, -114,
	-153, -153, -155, -146, -202, 56, 130, -196, -156, 60,
	-208, -215, -78, -78, -116, 13, 55, 119, 70, 56,
	55, -166, -166, -166, 23, -171, 56, 56, 56, 56,
	-166, -166, -166, -166, -166, -166, -166, -171, -169, -165,
	-163, -163, -167, 196, 80, -166, 55, 52, 56, 56,
	52, 56, 55, 56, -166, -172, 56, 33, -48, -67,
	-258, -146, -146, -139, -136, -144, -137, 65, -65, -68,
	-146, -196, 107, 107, 57, -145, 309, -145, -196, -209,
	367, 27, 119, -201, -203, 310, 311, 312, 313, 80,
	-200, 60, 60, 60, 60, -78, -138, 89, -138, -138,
	30, 30, -75, -76, -77, -80, -129, -114, -114, -153,
	-159, -160, -158, 257, -253, 309, 300, 56, -115, 14,
	16, -56, -146, 107, -166, 56, 56, 56, -81, 116,
	148, 195, 147, 146, 144, 140, 141, 139, 296, 297,
	56, 56, 56, 56, 56, 56, 56, 56, 56, -167,
	80, -165, -162, 56, -81, -96, -144, 60, 116, -96,
	-163, 56, -258, 56, 55, -145, 16, 23, -197, 280,
	179, -203, 65, 65, 65, 65, -200, 54, -96, -98,
	-144, 60, 116, 60, 56, 55, -82, -86, -83, -85,
	-84, -88, -87, 148, 149, 116, 152, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 30, 195, 144,
	145, 146, 147, 164, 131, 150, 365, 132, 133, 134,
	135, 136, 137, 140, 141, 139, -114, -158, 258, 31,
	118, 260, 29, 256, 16, -166, -171, 56, -244, 54,
	-244, -244, -244, -244, -245, 54, -246, 54, -245, -89,
	136, 135, -89, -162, 56, 56, 56, 56, -146, -145,
	-145, -209, 281, -78, -185, -187, -129, 54, -94, -95,
	-111, 294, 211, -181, 215, 64, 216, 315, 217, 180,
	219, 220, 221, 191, 222, 223, 224, 309, 225, 226,
	227, 228, 277, 5, -77, -93, -92, -90, 70, 81,
	29, 294, -91, 64, 115, 234, 212, 235, -110, -157,
	185, 76, 77, 282, 187, -247, 297, 296, -244, -244,
	-244, -244, -244, 54, 54, -244, -244, -244, -244, -245,
	-246, -245, 65, -254, -156, 65, 65, 65, -265, -228,
	56, 55, -244, -166, -224, 201, 55, -111, -138, -138,
	-133, 115, -138, -138, -138, -138, 218, 218, -138, -138,
	-138, -138, -138, -138, -138, -138, -138, -138, -138, -138,
	-138, -138, -90, 70, -163, 60, -98, -99, 29, 233,
	229, -100, 29, 213, 214, -102, 54, 241, 77, 77,
	-78, 57, -248, 298, -131, 60, -131, 259, 56, 55,
	56, 55, -271, 323, -267, -266, 318, 319, 320, 321,
	-188, -187, -60, 56, 16, -111, 65, 65, -138, -138,
	65, 60, 60, 60, -138, -138, 65, 60, -148, 65,
	65, 65, 65, 29, 60, -101, 29, 229, 233, 230,
	231, 232, 65, 29, 65, 29, 65, 29, -146, 54,
	65, 54, -186, 54, 56, 55, 56, 65, 65, -272,
	183, -269, 322, -266, 16, 320, 16, 16, -189, 191,
	64, 367, 251, 252, -60, -225, 243, 244, -226, -232,
	246, -96, -96, 60, 60, -97, 212, -79, 56, -166,
	-104, -103, 363, -185, 60, 56, 56, -278, 54, 65,
	-270, 318, 16, -268, 60, 16, -268, -268, -138, 60,
	250, -230, 247, 54, -228, 54, -228, 77, 254, 213,
	214, 56, 56, -108, -109, -106, -107, 51, 327, 239,
	240, 56, -282, 30, 56, -277, -276, -130, -273, -146,
	323, 16, 60, -268, 65, -144, -227, 248, 65, -163,
	54, -163, 54, -229, 245, 54, -210, 242, 81, -107,
	51, -106, 51, 10, 9, -281, -280, -279, 56, 55,
	119, 60, -234, 54, 16, 56, -223, 56, -223, 54,
	89, -163, 242, -105, 236, 237, 30, 129, -105, 55,
	89, -276, -146, -235, -233, 201, -226, 56, 56, -223,
	65, 56, 70, 29, 238, -280, 29, -166, 119, 56,
	55, 57, -231, 249, 56, -146, -233, -236, 33, 65,
	-240, -237, 54, -111, 203, -240, -111, -239, -238, 248,
	204, 56, 55, 57, 54, -238, -237, -171, 56,
}

var yyDef = [...]int{
	19, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 387,
	388, 389, 0, 0, 258, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 194, 0, 175, 155,
	156, 157, 118, 119, 120, 121, 0, 0, 0, 290,
	-2, 390, 391, 392, -2, 259, 260, 261, 262, 263,
	191, 192, 193, -2, 0, 168, 0, 160, 160, 0,
	300, 0, 0, 311, 320, 19, 284, 0, 289, 559,
	570, 571, 572, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 0, 184, 0, 0, 188,
	0, 255, 180, 181, 182, 183, 0, 342, 343, 366,
	369, 372, 0, 174, 0, 0, 79, 430, 81, 432,
	0, 85, 87, 88, -2, 92, 93, 94, 95, 96,
	97, 98, 0, 100, 1048, 102, 1109, 105, 106, 107,
	0, 116, 117, -2, -2, 427, 0, 0, 1098, 61,
	-2, 0, 0, 0, 316, 460, 460, 0, 460, 0,
	438, 439, 440, 458, 459, 473, 0, 0, 231, 232,
	0, 248, 239, 248, 0, 223, 224, 225, 229, 230,
	249, 197, 169, 170, 159, 0, 164, 0, 158, 0,
	0, 132, 0, 137, 0, 0, 0, 0, 0, 153,
	145, 146, 295, 0, 301, 0, 300, 197, 197, 197,
	197, 197, 0, 321, 322, 323, 324, 3, 0, 0,
	288, 0, 329, 185, 573, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 356, 0, 0,
	0, 0, 370, 371, 373, 0, 375, 376, 382, 383,
	384, 385, 386, 0, 300, 75, 0, 0, 0, 0,
	0, 434, 86, 115, 89, 90, 0, 110, 112, 114,
	113, 99, 111, 101, 103, 104, 109, 75, 0, 0,
	0, 62, 294, 0, 313, 315, 0, 317, 318, 0,
	0, 0, 0, 0, 460, 0, 244, 245, 239, 239,
	233, 241, 0, 246, 247, 0, 329, 0, 0, 0,
	460, 0, 0, 0, 0, 162, 0, 167, 122, 127,
	125, 126, 128, 0, 0, 0, 0, 0, 151, 152,
	0, 0, 0, 0, 0, 0, 292, 296, 312, 314,
	309, 310, 0, 0, 0, 0, 0, 337, 331, 333,
	377, 27, 0, 765, 570, 769, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1161, 1166, 1168, -2, -2, -2, 1175,
	1179, 1180, 1185, 1186, 1187, -2, -2, 778, 640, 641,
	642, 643, 0, 0, 0, 0, 0, 650, 651, 0,
	0, 656, 657, 658, 659, 37, 38, 794, 795, 796,
	797, 798, 799, 732, 627, 0, 717, 707, 0, 727,
	745, 746, 0, 0, 0, 0, 0, 39, 40, 723,
	724, 725, 726, 728, 729, 730, 731, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 747,
	749, 719, 720, 721, 722, 711, 712, 713, 714, 715,
	716, 270, 0, 272, 0, 0, 560, 300, 0, 0,
	186, 0, 256, 329, 177, 0, 360, 354, 0, 347,
	358, 359, 350, 0, 352, 0, 348, 349, 367, 374,
	368, 0, 76, 77, 78, 80, 91, 0, 0, 69,
	415, 421, 418, 428, 431, 0, 83, 433, 108, 0,
	64, 0, 0, 297, 27, 302, 303, 306, 402, 0,
	429, 453, -2, 0, 329, 329, 329, 239, 0, 241,
	0, 241, 236, 240, 0, 250, 252, 0, 402, 1140,
	198, 171, 172, 0, 0, 166, 0, 0, 129, 130,
	131, 138, 133, 135, 0, 0, 139, 147, 148, 149,
	150, 0, 0, 0, 143, 0, 154, 264, 265, 0,
	267, 557, 268, 380, 381, 329, 0, 338, 0, 334,
	0, 0, 0, 378, 0, 0, 764, 0, 0, 783,
	784, 785, 786, 787, 788, 757, 752, 752, 752, 0,
	752, 0, 0, 693, 0, 752, 752, 752, 752, 694,
	752, 752, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 759, 0, 646, 647, 648, 649, 652, 0, 0,
	757, 696, 0, 697, 708, 0, 700, 701, 702, 757,
	0, 757, 706, 752, 271, 280, 0, 0, 0, 276,
	278, 0, 286, 295, 330, 574, 0, 860, -2, 862,
	-2, -2, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 0, 189, 0, 300, 0, 0,
	344, 361, 0, 0, 345, 0, 346, 351, 353, 0,
	70, 74, 0, 417, 0, 0, 420, 82, 0, 0,
	0, 58, 0, 0, 0, 0, 305, 307, 308, 394,
	403, 0, 461, 0, 0, 457, -2, 464, 0, 470,
	0, 222, 226, 227, 329, 242, 239, 243, 239, 241,
	0, 251, 254, 394, 0, 173, 161, 163, 0, 124,
	0, 0, 0, 140, 141, 142, 0, 0, 0, 327,
	332, 339, 340, 761, 762, 763, 379, 28, 335, 766,
	0, 768, 0, 758, 759, 0, 753, 754, 0, 0,
	0, 0, 0, 0, 0, 709, 0, 793, 0, 0,
	0, 0, 0, 0, 0, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 770, 781, 782,
	0, 0, 0, 0, 0, 779, 774, 0, 644, 0,
	0, 751, 755, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 285, 0, 269,
	0, 0, 257, 295, 178, 179, 362, 0, 355, 0,
	0, 0, 416, 0, 0, 419, 84, 0, 66, 0,
	59, 60, 298, 299, 28, 304, 393, 0, 404, 405,
	406, 407, 408, 0, 0, 0, 0, 0, 454, 455,
	456, 465, 856, 856, 856, 853, 0, 0, 561, 234,
	329, 329, 239, 253, 199, 0, 165, 123, 0, 211,
	134, 144, 266, 558, 325, 0, 0, 0, 767, 692,
	0, 0, 0, 0, 0, 0, 681, 675, 676, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 779,
	775, 0, 772, 0, 0, 760, 0, 0, 695, 698,
	0, 703, 0, 705, 0, 281, 282, 0, 275, 277,
	274, 279, 287, 575, 861, 858, 859, 187, 176, 0,
	364, 68, 71, 72, 73, 422, 0, 423, 402, 65,
	0, 0, 0, 395, 396, 0, 0, 0, 0, 0,
	410, 411, 412, 413, 414, 0, 0, 857, 0, 0,
	854, 855, 0, 562, 563, 565, 0, 237, 235, 329,
	195, 200, 201, 0, 205, 0, 0, 136, 319, 0,
	0, 341, 29, 336, 760, 677, 678, 679, 0, 841,
	841, 662, 841, 841, 841, 843, 845, 843, 671, 671,
	680, 682, 683, 686, 684, 687, 688, 674, 756, 773,
	0, 780, 776, 645, 0, 0, 551, 552, 553, 0,
	0, 685, 273, 363, 0, 426, 0, 0, 66, 0,
	0, 397, 398, 399, 400, 401, 409, 0, 466, 467,
	554, 555, 556, 468, -2, 0, -2, 848, 801, 802,
	803, 841, 805, 841, 841, 841, 841, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 0, 0, 818, 841,
	841, 841, 841, 838, 806, 807, 808, 809, 810, 811,
	812, 813, 814, 843, 845, 843, 238, 202, 203, 204,
	0, 207, 208, 210, 0, 326, 328, 653, 660, 0,
	661, 663, 664, 665, 666, 0, 667, 0, 668, 669,
	672, 673, 670, 777, 654, 655, 699, 704, 365, 424,
	425, 63, 67, 49, 0, 449, 841, 0, 474, -2,
	511, 856, 856, 0, 856, 856, 856, 856, 0, 0,
	856, 856, 856, 856, 856, 856, 856, 856, 856, 856,
	856, 856, 856, 856, 564, 566, -2, 578, 580, 0,
	0, 583, 584, 0, 0, 0, 0, 619, 590, 0,
	0, 791, 792, 0, 596, 851, 849, 850, 804, 823,
	824, 825, 826, 0, 0, 819, 820, 821, 822, 815,
	816, 817, 0, 209, 196, 0, 0, 0, 43, 0,
	442, 0, 306, 0, 471, 0, 469, 513, 0, 0,
	856, 856, 0, 0, 0, 0, 856, 856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 581, 582, 585, 586, 587, 624, 625,
	626, 588, 621, 622, 623, 589, 0, 0, 789, 790,
	617, 597, 800, 852, 0, 839, 0, 206, 842, 0,
	846, 0, 41, 45, 50, 51, 0, 0, 0, 0,
	441, 450, 451, 306, 507, 512, 514, 515, 0, 0,
	518, 519, 520, 521, 0, 0, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 545, 546, 547, 548,
	549, 550, 534, 535, 536, 537, 538, 539, 542, 0,
	0, 0, 612, 0, 836, 0, 837, 0, 0, 30,
	0, 47, 0, 52, 0, 0, 0, 0, 443, 856,
	0, 0, 447, 448, 452, 496, 0, 0, 502, 0,
	508, 516, 517, 522, 523, 540, 0, 0, 620, 0,
	599, 613, 0, 0, 840, 844, 847, 21, 0, 0,
	44, 0, 0, 53, 57, 0, 55, 56, 0, 445,
	0, 476, 0, 0, 0, 0, 0, 505, 0, 543,
	544, 541, 591, 598, 600, 601, 602, 0, 614, 615,
	616, 618, 20, 0, 31, 0, 33, 35, 36, 567,
	42, 0, 46, 54, 444, 446, 478, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 592, 593, 0, 603,
	0, 604, 0, 0, 0, 22, 23, 0, 32, 0,
	0, 48, 475, 0, 507, 498, 0, 500, 0, 0,
	0, 0, 594, 605, 607, 608, 0, 0, 606, 0,
	0, 34, 568, 0, 480, 0, 494, 499, 501, 0,
	506, 504, 609, 611, 610, 24, 25, 26, 0, 479,
	0, 492, 477, 0, 503, 569, 481, -2, 0, 495,
	482, -2, 0, 490, 0, 483, 491, 0, 486, 0,
	0, 485, 0, -2, 0, 487, -2, 0, 493,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 82, 3, 3, 3, 110, 102, 3,
	54, 56, 107, 105, 55, 106, 119, 108, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 407,
	90, 89, 91, 3, 408, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 112, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 101, 3, 113,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
	86, 87, 88, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 103, 104, 109, 111, 114, 115, 116, 117,
	118, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:448
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:454
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:476
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:480
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:486
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				File:              yyDollar[5].str,
				DuplicateHandling: yyDollar[6].duplicateKeyUnion(),
				Table:             yyDollar[9].tableNameUnion(),
				Fields:            yyDollar[10].fieldsUnion(),
				Lines:             yyDollar[11].linesUnion(),
				IgnoredLines:      uint64(yyDollar[12].int64ValUnion()),
				ColumnList:        yyDollar[13].loadColumnsUnion(),
				Assignments:       yyDollar[14].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 21:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:505
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:511
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:515
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:521
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:528
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:537
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:541
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:545
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:554
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:558
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:564
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:573
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:584
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:588
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:594
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:604
		{
			v := strings.ToLower(yyDollar[1].str)
			isGlobal := false
			if strings.HasPrefix(v, "global.") {
				isGlobal = true
			}
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:619
		{
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:628
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:632
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:641
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:649
		{
			yyVAL.str = ""
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:653
		{
			yyVAL.str = yyDollar[3].str
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:658
		{
			yyVAL.str = "\n"
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:662
		{
			yyVAL.str = yyDollar[3].str
		}
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:671
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  []byte("\\")[0],
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:695
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:699
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:705
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:711
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EscapedBy:  byte(str[0]),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:723
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: byte(str[0]),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:734
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: byte(str[0]),
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:751
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:755
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:759
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:764
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = &tree.Grant{
				Privileges:  yyDollar[2].privilegesUnion(),
				ObjType:     yyDollar[4].objectTypeUnion(),
				Level:       yyDollar[5].privilegeLevelUnion(),
				Users:       yyDollar[7].usersUnion(),
				GrantOption: yyDollar[9].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:784
		{
			yyLOCAL = &tree.Grant{
				IsGrantRole:      true,
				RolesInGrantRole: yyDollar[2].rolesUnion(),
				Users:            yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:792
		{
			yyLOCAL = &tree.Grant{
				IsProxy:     true,
				ProxyUser:   yyDollar[4].userUnion(),
				Users:       yyDollar[6].usersUnion(),
				GrantOption: yyDollar[7].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:802
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:806
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = &tree.Revoke{
				Privileges: yyDollar[2].privilegesUnion(),
				ObjType:    yyDollar[4].objectTypeUnion(),
				Level:      yyDollar[5].privilegeLevelUnion(),
				Users:      yyDollar[7].usersUnion(),
				Roles:      nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:826
		{
			yyLOCAL = &tree.Revoke{
				IsRevokeRole:      true,
				RolesInRevokeRole: yyDollar[2].rolesUnion(),
				Users:             yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:836
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:842
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_GLOBAL,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:848
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:871
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:875
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:879
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:883
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:889
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:893
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:899
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:906
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:915
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:919
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:925
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:929
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:933
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:937
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:941
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:945
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:949
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:953
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:957
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:961
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:965
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:969
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:973
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:977
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:981
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:985
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:989
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:993
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:997
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1001
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1005
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1009
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1013
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1017
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1021
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1025
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1029
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1033
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1037
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1041
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1045
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1049
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1053
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1065
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1071
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1083
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1095
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1105
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1109
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1121
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1132
		{
			yyVAL.str = yyDollar[3].str
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1138
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1142
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1148
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1156
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1165
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1173
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1181
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1189
		{
			v := strings.ToLower(yyDollar[1].str)
			if v != "session" && v != "global" && v != "local" {
				yylex.Error("expecting session or global")
				return 1
			}
			var isGlobal bool
			if v == "global" {
				isGlobal = true
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   yyDollar[3].str,
				Value:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1222
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1229
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1233
		{
			yyVAL.str = yyDollar[1].str
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1240
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1251
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1296
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1300
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1304
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1308
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1313
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1318
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Use{Name: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1328
		{
			yyLOCAL = &tree.Use{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1334
		{
			yyLOCAL = &tree.Update{
				Table:   yyDollar[2].tableExprUnion(),
				Exprs:   yyDollar[4].updateExprsUnion(),
				Where:   yyDollar[5].whereUnion(),
				OrderBy: yyDollar[6].orderByUnion(),
				Limit:   yyDollar[7].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1351
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1357
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1366
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1372
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1377
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "row")
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[5].statementUnion(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "")
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1413
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: false,
				Users:      yyDollar[4].usersUnion(),
				TlsOpts:    yyDollar[5].tlsOptionsUnion(),
				ResOpts:    yyDollar[6].resourceOptionsUnion(),
				MiscOpts:   yyDollar[7].userMiscOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1424
		{
			auth := &tree.User{
				AuthString: yyDollar[9].str,
				ByAuth:     true,
			}
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: true,
				UserFunc:   auth,
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1437
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1441
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1450
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1456
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1460
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1478
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1482
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1492
		{
			yyVAL.item = nil
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1497
		{
			yyVAL.item = nil
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1551
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1555
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1559
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1583
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1623
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1645
		{
			yyVAL.str = ""
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:1649
		{
			yyVAL.str = yyDollar[2].str
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1655
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.ShowCreate{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[1].str, yyDollar[3].str})
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[1].str, yyDollar[3].str})
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[1].str, yyDollar[3].str, yyDollar[5].str})
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1734
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1743
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1753
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1765
		{
			yyLOCAL = &tree.Delete{
				Table:   yyDollar[3].tableExprUnion(),
				Where:   yyDollar[4].whereUnion(),
				OrderBy: yyDollar[5].orderByUnion(),
				Limit:   yyDollar[6].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1780
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1789
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1796
		{
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(yyDollar[1].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1802
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1810
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(yyDollar[4].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1826
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1830
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1836
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1840
		{
			yyVAL.str = yyDollar[3].str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1864
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1868
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1874
		{
			yyLOCAL = yyDollar[2].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.Exprs{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1887
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1897
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:1903
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:1907
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1920
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:1928
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:1933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:1937
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:1947
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:1956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:1960
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:1966
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:1972
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:1976
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:1987
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:1995
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2002
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2006
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2012
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2066
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2126
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2135
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2141
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2145
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2151
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2155
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2159
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2163
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2169
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier("dual"), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2177
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2183
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2191
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2195
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2243
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2247
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2257
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2261
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2265
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2269
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2285
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2291
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2295
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2299
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2309
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2325
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2329
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2335
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2356
		{
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2357
		{
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:2361
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2373
		{
			yyVAL.str = ""
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2377
		{
			yyVAL.str = yyDollar[1].str
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2381
		{
			yyVAL.str = yyDollar[2].str
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2390
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2398
		{
			yyVAL.str = yyDollar[2].str
		}
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Users:       yyDollar[4].usersUnion(),
				TlsOpts:     yyDollar[5].tlsOptionsUnion(),
				ResOpts:     yyDollar[6].resourceOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2441
		{
			yyLOCAL = yyDollar[2].resourceOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2447
		{
			yyLOCAL = []tree.ResourceOption{yyDollar[1].resourceOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2451
		{
			yyLOCAL = append(yyDollar[1].resourceOptionsUnion(), yyDollar[2].resourceOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.ResourceOptionMaxQueriesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.ResourceOptionMaxUpdatesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.ResourceOptionMaxConnectionPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2469
		{
			yyLOCAL = &tree.ResourceOptionMaxUserConnections{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2482
		{
			t := &tree.TlsOptionNone{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2487
		{
			t := &tree.TlsOptionSSL{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2492
		{
			t := &tree.TlsOptionX509{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2497
		{
			yyLOCAL = yyDollar[2].tlsOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2503
		{
			yyLOCAL = []tree.TlsOption{yyDollar[1].tlsOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2507
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[3].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2511
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[2].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2517
		{
			yyLOCAL = &tree.TlsOptionIssuer{Issuer: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.TlsOptionSubject{Subject: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2525
		{
			yyLOCAL = &tree.TlsOptionCipher{Cipher: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2529
		{
			yyLOCAL = &tree.TlsOptionSan{San: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2535
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2539
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthPlugin: yyDollar[2].authRecordUnion().AuthPlugin,
				AuthString: yyDollar[2].authRecordUnion().AuthString,
				HashString: yyDollar[2].authRecordUnion().HashString,
				ByAuth:     yyDollar[2].authRecordUnion().ByAuth,
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2562
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.AuthRecord{}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.AuthRecord{
				AuthString: yyDollar[3].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2582
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				AuthString: yyDollar[5].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				HashString: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.AuthRecord{
				HashString: yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2615
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2624
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2628
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2634
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: "%"}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2651
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2655
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2659
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2663
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2692
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:2736
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:2740
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:2746
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2756
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2788
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2792
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2801
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2807
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:2811
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2821
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:2825
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2830
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2834
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2840
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2852
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2856
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:2861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:2865
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:2875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2892
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2898
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:2902
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:2917
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:2927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:2931
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:2937
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:2941
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:2963
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:2967
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:2972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2981
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2985
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2995
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2999
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3045
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3065
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3069
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3087
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3093
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3097
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3101
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3107
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3111
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3115
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3119
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3123
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3127
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3131
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3135
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3139
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3143
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3147
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3151
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3155
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3159
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3163
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3167
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3179
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3183
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3191
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3211
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3215
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3221
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3225
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3229
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3235
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3239
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3243
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3247
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3251
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3255
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3271
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3275
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3284
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3289
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3295
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3302
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3306
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3312
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:3318
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3324
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3328
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3332
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3343
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3347
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3351
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3360
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3366
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3370
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3376
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3380
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3384
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3388
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3392
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3396
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false))
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3400
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3404
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3408
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3412
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3416
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3420
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3424
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3434
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3443
		{
			yyVAL.str = ""
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3447
		{
			yyVAL.str = ""
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3451
		{
			yyVAL.str = yyDollar[2].str
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3478
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3508
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3514
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3520
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3524
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3528
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3532
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3536
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3541
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3548
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3552
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3556
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3565
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3570
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3574
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:3590
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3596
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3600
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3604
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3608
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3612
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3616
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3620
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3628
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3632
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3640
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3644
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3650
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3654
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3658
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3662
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3666
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3670
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3674
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3678
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3682
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3686
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3690
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3694
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3699
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3703
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3707
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3716
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3720
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3724
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3728
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3734
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3747
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3760
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3772
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3786
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3801
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3816
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3831
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3846
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:3874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3889
		{
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3895
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3904
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3912
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3920
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3929
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3938
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3947
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumVal(constant.MakeString("*"), "*", false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3965
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3974
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3983
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:3992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4001
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4010
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4019
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4035
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4053
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4079
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4087
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4106
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4114
		{
			cn := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4125
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4134
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4143
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4152
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4160
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4170
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4178
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4191
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4201
		{
			yyLOCAL = yyDollar[2].numValUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4214
		{
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4216
		{
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4256
		{
			yyLOCAL = &tree.IntervalExpr{
				Expr: yyDollar[2].exprUnion(),
				Type: yyDollar[3].intervalTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4264
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4268
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4272
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IntervalType
//line mysql_sql.y:4278
		{
			yyLOCAL = tree.INTERVAL_TYPE_SECOND
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:4284
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4293
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4299
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4303
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4310
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4314
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4318
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4322
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4326
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4332
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4336
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4340
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4347
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4351
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4355
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4359
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4363
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4367
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4375
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4385
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4391
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4395
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4402
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4422
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4429
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4433
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4437
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4441
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.NumVal
//line mysql_sql.y:4447
		{
			ival, errStr := getInt64(yyDollar[1].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			if ival > 0 {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, false, ival)
			} else {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, true, ival)
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4462
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4466
		{
			ival := getUint64(yyDollar[1].item)
			yyLOCAL = tree.NewNumVal(constant.MakeUint64(ival), yylex.(*Lexer).scanner.LastToken, false)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4471
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithResFoalt(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, fval)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4476
		{
			yyLOCAL = tree.MakeDBool(true)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4480
		{
			yyLOCAL = tree.MakeDBool(false)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4484
		{
			yyLOCAL = tree.DNull
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4494
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4505
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4510
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4516
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4528
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4540
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4552
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4578
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4591
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4604
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4647
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4718
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4733
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4748
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4764
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4777
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4790
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4803
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4816
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4828
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4840
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4852
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4864
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4888
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4900
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4912
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4937
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4952
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4975
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4980
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:4986
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 0,
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 0,
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5049
		{
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5051
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5061
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5065
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

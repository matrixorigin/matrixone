// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const SOURCE = 57838
const STREAM = 57839
const HEADERS = 57840
const MATCH = 57841
const AGAINST = 57842
const BOOLEAN = 57843
const LANGUAGE = 57844
const WITH = 57845
const QUERY = 57846
const EXPANSION = 57847
const WITHOUT = 57848
const VALIDATION = 57849
const ADDDATE = 57850
const BIT_AND = 57851
const BIT_OR = 57852
const BIT_XOR = 57853
const CAST = 57854
const COUNT = 57855
const APPROX_COUNT = 57856
const APPROX_COUNT_DISTINCT = 57857
const APPROX_PERCENTILE = 57858
const CURDATE = 57859
const CURTIME = 57860
const DATE_ADD = 57861
const DATE_SUB = 57862
const EXTRACT = 57863
const GROUP_CONCAT = 57864
const MAX = 57865
const MID = 57866
const MIN = 57867
const NOW = 57868
const POSITION = 57869
const SESSION_USER = 57870
const STD = 57871
const STDDEV = 57872
const MEDIAN = 57873
const STDDEV_POP = 57874
const STDDEV_SAMP = 57875
const SUBDATE = 57876
const SUBSTR = 57877
const SUBSTRING = 57878
const SUM = 57879
const SYSDATE = 57880
const SYSTEM_USER = 57881
const TRANSLATE = 57882
const TRIM = 57883
const VARIANCE = 57884
const VAR_POP = 57885
const VAR_SAMP = 57886
const AVG = 57887
const RANK = 57888
const ROW_NUMBER = 57889
const DENSE_RANK = 57890
const NEXTVAL = 57891
const SETVAL = 57892
const CURRVAL = 57893
const LASTVAL = 57894
const ARROW = 57895
const ROW = 57896
const OUTFILE = 57897
const HEADER = 57898
const MAX_FILE_SIZE = 57899
const FORCE_QUOTE = 57900
const PARALLEL = 57901
const UNUSED = 57902
const BINDINGS = 57903
const DO = 57904
const DECLARE = 57905
const LOOP = 57906
const WHILE = 57907
const LEAVE = 57908
const ITERATE = 57909
const UNTIL = 57910
const CALL = 57911
const SPBEGIN = 57912
const BACKEND = 57913
const SERVERS = 57914
const KILL = 57915
const QUERY_RESULT = 57916

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10287

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	21, 693,
	-2, 674,
	-1, 129,
	233, 1025,
	235, 949,
	-2, 989,
	-1, 152,
	42, 514,
	235, 514,
	262, 521,
	263, 521,
	451, 514,
	-2, 547,
	-1, 188,
	593, 1730,
	-2, 430,
	-1, 518,
	314, 130,
	425, 130,
	-2, 1642,
	-1, 581,
	81, 1440,
	-2, 1784,
	-1, 582,
	81, 1458,
	-2, 1755,
	-1, 586,
	81, 1459,
	-2, 1783,
	-1, 612,
	81, 1370,
	-2, 1850,
	-1, 613,
	81, 1371,
	-2, 1849,
	-1, 614,
	81, 1372,
	-2, 1839,
	-1, 615,
	81, 1813,
	-2, 1834,
	-1, 616,
	81, 1814,
	-2, 1835,
	-1, 617,
	81, 1815,
	-2, 1841,
	-1, 618,
	81, 1816,
	-2, 1823,
	-1, 619,
	81, 1817,
	-2, 1832,
	-1, 620,
	81, 1818,
	-2, 1842,
	-1, 621,
	81, 1819,
	-2, 1843,
	-1, 622,
	81, 1820,
	-2, 1848,
	-1, 623,
	81, 1821,
	-2, 1853,
	-1, 624,
	81, 1822,
	-2, 1854,
	-1, 626,
	81, 1437,
	-2, 1631,
	-1, 630,
	81, 1442,
	-2, 1643,
	-1, 633,
	81, 1446,
	-2, 1661,
	-1, 637,
	81, 1450,
	-2, 1701,
	-1, 638,
	81, 1451,
	-2, 1779,
	-1, 646,
	81, 1461,
	-2, 1764,
	-1, 647,
	81, 1462,
	-2, 1808,
	-1, 648,
	81, 1463,
	-2, 1774,
	-1, 649,
	81, 1464,
	-2, 1798,
	-1, 660,
	81, 1348,
	-2, 1844,
	-1, 661,
	81, 1349,
	-2, 1845,
	-1, 662,
	81, 1350,
	-2, 1846,
	-1, 666,
	21, 694,
	-2, 657,
	-1, 745,
	446, 547,
	447, 547,
	-2, 515,
	-1, 789,
	122, 1631,
	133, 1631,
	153, 1631,
	-2, 1606,
	-1, 892,
	21, 694,
	-2, 657,
	-1, 992,
	21, 693,
	-2, 1246,
	-1, 1107,
	513, 990,
	514, 990,
	-2, 867,
	-1, 1360,
	81, 1508,
	-2, 1781,
	-1, 1361,
	81, 1509,
	-2, 1782,
	-1, 1497,
	82, 839,
	-2, 845,
	-1, 1875,
	82, 1592,
	154, 1592,
	-2, 1766,
	-1, 1876,
	82, 1592,
	154, 1592,
	-2, 1765,
	-1, 1877,
	82, 1570,
	154, 1570,
	-2, 1752,
	-1, 1878,
	82, 1571,
	154, 1571,
	-2, 1757,
	-1, 1879,
	82, 1572,
	154, 1572,
	-2, 1689,
	-1, 1880,
	82, 1573,
	154, 1573,
	-2, 1683,
	-1, 1881,
	82, 1574,
	154, 1574,
	-2, 1622,
	-1, 1882,
	82, 1575,
	154, 1575,
	-2, 1754,
	-1, 1883,
	82, 1576,
	154, 1576,
	-2, 1687,
	-1, 1884,
	82, 1577,
	154, 1577,
	-2, 1682,
	-1, 1885,
	82, 1578,
	154, 1578,
	-2, 1675,
	-1, 1887,
	82, 1581,
	154, 1581,
	-2, 1798,
	-1, 1888,
	82, 1561,
	154, 1561,
	-2, 1784,
	-1, 1889,
	82, 1590,
	154, 1590,
	-2, 1755,
	-1, 1890,
	82, 1590,
	154, 1590,
	-2, 1783,
	-1, 1891,
	82, 1590,
	154, 1590,
	-2, 1644,
	-1, 1892,
	82, 1588,
	154, 1588,
	-2, 1774,
	-1, 1893,
	82, 1585,
	154, 1585,
	-2, 1666,
	-1, 1894,
	81, 1542,
	82, 1542,
	154, 1542,
	383, 1542,
	384, 1542,
	385, 1542,
	-2, 1621,
	-1, 1895,
	81, 1543,
	82, 1543,
	154, 1543,
	383, 1543,
	384, 1543,
	385, 1543,
	-2, 1623,
	-1, 1896,
	81, 1546,
	82, 1546,
	154, 1546,
	383, 1546,
	384, 1546,
	385, 1546,
	-2, 1756,
	-1, 1897,
	81, 1548,
	82, 1548,
	154, 1548,
	383, 1548,
	384, 1548,
	385, 1548,
	-2, 1739,
	-1, 1898,
	81, 1550,
	82, 1550,
	154, 1550,
	383, 1550,
	384, 1550,
	385, 1550,
	-2, 1688,
	-1, 1899,
	81, 1552,
	82, 1552,
	154, 1552,
	383, 1552,
	384, 1552,
	385, 1552,
	-2, 1671,
	-1, 1900,
	81, 1553,
	82, 1553,
	154, 1553,
	383, 1553,
	384, 1553,
	385, 1553,
	-2, 1672,
	-1, 1901,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1620,
	-1, 1902,
	82, 1595,
	154, 1595,
	383, 1595,
	384, 1595,
	385, 1595,
	-2, 1649,
	-1, 1903,
	82, 1595,
	154, 1595,
	383, 1595,
	384, 1595,
	385, 1595,
	-2, 1662,
	-1, 1904,
	82, 1598,
	154, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	-2, 1645,
	-1, 1905,
	82, 1598,
	154, 1598,
	383, 1598,
	384, 1598,
	385, 1598,
	-2, 1704,
	-1, 1906,
	82, 1595,
	154, 1595,
	383, 1595,
	384, 1595,
	385, 1595,
	-2, 1724,
	-1, 1922,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	275, 984,
	-2, 977,
	-1, 2060,
	21, 693,
	-2, 787,
	-1, 2255,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	275, 984,
	-2, 978,
	-1, 2271,
	79, 603,
	154, 603,
	-2, 1133,
	-1, 2603,
	191, 984,
	299, 1214,
	-2, 1186,
	-1, 2742,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	-2, 1076,
	-1, 2744,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	-2, 1076,
	-1, 2754,
	79, 603,
	154, 603,
	-2, 1134,
	-1, 2762,
	191, 984,
	299, 1214,
	-2, 1187,
	-1, 2888,
	105, 984,
	149, 984,
	188, 984,
	191, 984,
	-2, 1077,
	-1, 3249,
	82, 1043,
	154, 1043,
	-2, 984,
	-1, 3253,
	82, 1043,
	154, 1043,
	-2, 984,
	-1, 3267,
	82, 1047,
	154, 1047,
	-2, 984,
	-1, 3272,
	82, 1048,
	154, 1048,
	-2, 984,
}

const yyPrivate = 57344

const yyLast = 37094

var yyAct = [...]int{
	548, 1279, 1577, 3252, 3253, 3232, 179, 3261, 1341, 527,
	3124, 529, 550, 3150, 3185, 3203, 3132, 2842, 3133, 2621,
	2837, 3044, 537, 1853, 2928, 3058, 2776, 3036, 1024, 2684,
	1142, 3062, 2873, 2963, 2872, 2685, 2870, 578, 667, 435,
	2997, 788, 2840, 531, 2260, 2739, 1269, 2953, 3045, 441,
	3047, 446, 446, 1337, 2274, 2887, 1531, 446, 462, 471,
	2726, 2571, 471, 2877, 1962, 1201, 2712, 1344, 2387, 2832,
	2763, 164, 1666, 1663, 2559, 2890, 2388, 2715, 2310, 2370,
	2618, 1631, 2607, 2600, 2290, 2153, 2569, 2386, 2054, 1759,
	2380, 2682, 1728, 2653, 2409, 2383, 2246, 2540, 1639, 2670,
	2538, 476, 886, 1678, 2543, 1933, 2256, 2572, 1863, 2038,
	1871, 520, 2446, 521, 482, 1194, 1260, 2606, 526, 2152,
	1873, 1729, 1965, 1737, 1479, 1736, 1755, 1117, 2102, 2429,
	1702, 1659, 721, 2055, 2485, 1754, 54, 1634, 794, 1115,
	2043, 2235, 1265, 1632, 2292, 2230, 1963, 1569, 6, 445,
	445, 1932, 36, 175, 8, 453, 435, 1150, 174, 7,
	1507, 1273, 1487, 1560, 2119, 840, 1335, 1787, 1756, 530,
	440, 2082, 1869, 1234, 1278, 1340, 1180, 1210, 113, 179,
	1913, 179, 35, 831, 832, 2574, 2573, 519, 1270, 1542,
	528, 1766, 521, 2196, 752, 1390, 2195, 792, 1326, 538,
	1543, 1374, 14, 903, 1735, 1718, 1958, 26, 1241, 1732,
	468, 15, 1151, 1063, 1131, 781, 1692, 1533, 13, 2062,
	1334, 1179, 32, 455, 458, 720, 1177, 484, 664, 1395,
	1506, 485, 1396, 23, 16, 10, 165, 1992, 1143, 1092,
	1233, 1127, 698, 161, 470, 718, 782, 1773, 1087, 158,
	827, 702, 829, 666, 1763, 2988, 2479, 2479, 2729, 2766,
	466, 740, 2155, 2677, 2108, 467, 2105, 2106, 1248, 463,
	2103, 1244, 828, 824, 823, 824, 465, 824, 163, 442,
	464, 1025, 1163, 2830, 2442, 434, 2440, 1707, 1246, 961,
	962, 963, 960, 2959, 2954, 2833, 798, 2778, 2683, 1483,
	961, 962, 963, 960, 451, 1019, 474, 3049, 1731, 665,
	2769, 2000, 822, 162, 50, 154, 130, 8, 162, 3008,
	2764, 162, 7, 162, 3115, 2786, 2787, 162, 162, 162,
	162, 2765, 675, 1416, 924, 2259, 1293, 2140, 795, 2859,
	2148, 1286, 797, 2261, 162, 50, 154, 130, 1760, 1079,
	162, 50, 154, 130, 2713, 2854, 3080, 1102, 1101, 1515,
	2508, 480, 1771, 3009, 1501, 1107, 1290, 481, 2770, 112,
	1917, 1283, 2857, 2080, 958, 2461, 2454, 112, 2068, 2415,
	770, 2067, 159, 1676, 2069, 2081, 932, 1292, 1311, 934,
	159, 1159, 1285, 1181, 1160, 1183, 159, 159, 159, 159,
	2416, 2417, 655, 1080, 654, 656, 657, 1643, 658, 659,
	1644, 1645, 1327, 159, 668, 1331, 3168, 935, 1139, 159,
	2232, 939, 1491, 1492, 940, 1148, 1149, 2120, 3166, 1146,
	2233, 1430, 676, 1145, 1148, 1149, 3136, 3137, 761, 1330,
	1556, 951, 1343, 956, 2850, 446, 791, 790, 3052, 3111,
	3051, 3110, 942, 3050, 3109, 446, 896, 3052, 3051, 2785,
	3050, 1966, 1844, 3154, 3155, 2964, 2965, 2966, 2967, 2961,
	3038, 2686, 2447, 471, 471, 3038, 446, 2231, 3041, 3114,
	1162, 2448, 2957, 2449, 2686, 1346, 2774, 2135, 1412, 897,
	891, 893, 928, 1660, 1409, 3055, 2695, 1650, 1411, 1408,
	1410, 1414, 1415, 906, 1322, 2554, 1413, 2326, 2771, 2775,
	2773, 2772, 1247, 1245, 2716, 2552, 1654, 930, 1332, 1767,
	766, 2723, 2032, 765, 1912, 2983, 129, 937, 160, 933,
	936, 2864, 944, 709, 994, 945, 1715, 2221, 906, 2788,
	895, 1329, 2544, 888, 3054, 2474, 2780, 2781, 152, 2145,
	890, 1254, 1253, 894, 834, 929, 954, 955, 2472, 953,
	3117, 3118, 1998, 947, 927, 2831, 2441, 2374, 2986, 515,
	2549, 2550, 517, 793, 915, 2849, 2035, 516, 2861, 2034,
	896, 2039, 2851, 3135, 3170, 3161, 2551, 3005, 2788, 2568,
	938, 892, 2619, 2620, 919, 2238, 1345, 2582, 798, 3068,
	2767, 2548, 2267, 473, 2975, 472, 2779, 2976, 1772, 771,
	2800, 1137, 468, 468, 1352, 1355, 1356, 2975, 2379, 1919,
	2976, 2793, 2970, 1028, 1126, 1353, 767, 1674, 1675, 3063,
	931, 3246, 479, 1171, 3262, 1161, 3194, 3126, 943, 3165,
	795, 2803, 3201, 2982, 797, 949, 950, 2919, 1419, 1420,
	1421, 1422, 1423, 1424, 1417, 1418, 1328, 1776, 1778, 1779,
	2978, 2623, 466, 466, 1029, 941, 3226, 467, 467, 798,
	2009, 463, 463, 2978, 3122, 3123, 948, 3126, 465, 465,
	2008, 2908, 464, 464, 899, 900, 1085, 441, 1088, 769,
	910, 2977, 2084, 908, 907, 2244, 2987, 2699, 2478, 1981,
	1761, 946, 1060, 1761, 2977, 1961, 1983, 2029, 2030, 916,
	3206, 795, 1190, 2546, 1761, 797, 1189, 912, 913, 917,
	721, 1141, 1140, 1124, 996, 997, 998, 999, 908, 907,
	2250, 2251, 2252, 2253, 2784, 2914, 824, 824, 1123, 1000,
	824, 3006, 824, 3007, 824, 1122, 3263, 824, 3233, 3269,
	2998, 887, 901, 3116, 1774, 2525, 469, 2746, 1147, 1961,
	2104, 1788, 469, 1982, 768, 1762, 1968, 446, 3257, 1173,
	1144, 1249, 2828, 1978, 2261, 435, 435, 924, 1093, 1968,
	1971, 1148, 1149, 480, 435, 435, 2858, 2615, 1205, 1205,
	3035, 446, 2783, 1148, 1149, 665, 1178, 2929, 2930, 2931,
	2933, 2932, 711, 2141, 712, 2072, 1996, 3171, 2555, 471,
	1088, 441, 1764, 1099, 1237, 1237, 51, 2477, 1661, 2411,
	2413, 131, 51, 1212, 1105, 179, 131, 1138, 2984, 131,
	2354, 131, 2426, 2427, 435, 131, 131, 131, 131, 2860,
	2149, 1203, 1203, 2545, 1104, 1971, 3207, 918, 2475, 2622,
	1354, 1120, 131, 1103, 1207, 1091, 1125, 1086, 131, 475,
	923, 2533, 2616, 1135, 1775, 1169, 793, 762, 2921, 1037,
	1038, 1153, 1154, 2324, 1156, 1157, 1158, 1651, 2327, 1112,
	2328, 2329, 1494, 1277, 1323, 1280, 1255, 2865, 2220, 1211,
	1288, 2487, 2486, 1777, 3256, 2237, 1653, 2619, 2620, 1857,
	1967, 1199, 1200, 2971, 2547, 1969, 1065, 2972, 1972, 1083,
	1309, 1995, 1067, 1967, 1961, 1966, 2971, 1964, 1969, 1495,
	3046, 1856, 1294, 3268, 1205, 2910, 1205, 896, 1493, 2909,
	1094, 1095, 1096, 1097, 1098, 666, 1100, 715, 716, 717,
	1090, 1106, 1859, 1858, 1128, 1132, 1132, 1132, 1133, 1134,
	764, 2241, 2242, 763, 681, 762, 1081, 1082, 1258, 1970,
	1261, 1262, 677, 2915, 2916, 1114, 2240, 1128, 1128, 1172,
	2345, 2346, 1970, 1972, 3204, 3205, 1977, 2021, 678, 2895,
	1975, 1229, 2412, 1089, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1164, 1165, 2272, 2566,
	1385, 1386, 1267, 1268, 1152, 680, 1394, 1155, 1188, 683,
	682, 1342, 815, 820, 821, 3275, 1433, 1434, 1435, 2587,
	1443, 1185, 1187, 798, 2052, 3209, 959, 798, 2650, 1449,
	1197, 1198, 1450, 961, 962, 963, 960, 1213, 764, 1284,
	3274, 763, 1275, 1291, 1452, 1459, 1460, 1223, 451, 1866,
	710, 1851, 1339, 1227, 468, 1238, 1915, 522, 1228, 2617,
	924, 1239, 1304, 1305, 1318, 2122, 1819, 1272, 2646, 1818,
	1276, 3230, 1867, 1868, 2355, 2357, 2358, 2359, 2356, 2506,
	1250, 3265, 2736, 3247, 1320, 1357, 3242, 959, 1847, 2140,
	2625, 1477, 2344, 446, 2273, 1505, 1205, 1509, 1510, 1336,
	1512, 1513, 3236, 669, 466, 1695, 1295, 446, 713, 467,
	1205, 1325, 959, 463, 721, 2053, 3235, 1532, 3213, 1317,
	465, 3187, 1205, 1314, 464, 2567, 1300, 1534, 1173, 1534,
	1313, 666, 1296, 462, 3144, 1480, 2273, 961, 962, 963,
	960, 959, 3138, 1442, 3090, 1316, 1315, 1312, 2053, 2226,
	1333, 2223, 1555, 3266, 1308, 1769, 1338, 3029, 3243, 3028,
	1561, 1561, 1307, 1173, 3024, 1173, 1173, 1798, 3023, 446,
	1914, 1505, 1505, 1559, 1769, 1205, 1628, 1629, 1641, 1383,
	1384, 3022, 1504, 1850, 1425, 1426, 1376, 1429, 1769, 3021,
	1769, 1502, 435, 3188, 1205, 1444, 961, 962, 963, 960,
	817, 818, 819, 2990, 2883, 1519, 3145, 2127, 1451, 2807,
	1453, 2634, 2406, 1511, 2991, 1129, 2991, 2084, 669, 446,
	1505, 1205, 1760, 1683, 2202, 446, 1686, 1687, 2194, 3030,
	2156, 1937, 1690, 1691, 825, 826, 2991, 1697, 1642, 830,
	2991, 1428, 1797, 1693, 179, 1579, 959, 179, 179, 924,
	179, 1540, 1541, 2991, 1324, 1956, 1852, 921, 1623, 1624,
	2138, 2991, 2131, 772, 2053, 2129, 2650, 1567, 1550, 1551,
	2124, 1508, 1454, 1669, 1670, 2991, 2884, 1823, 1751, 1484,
	1672, 2084, 1113, 2635, 2053, 1524, 1443, 1443, 1739, 1544,
	1478, 1546, 1547, 1443, 1443, 2117, 959, 1537, 1746, 1388,
	959, 1647, 959, 1649, 1552, 1655, 1191, 1680, 2115, 1535,
	1536, 3189, 2757, 1667, 1668, 1706, 2588, 1679, 1709, 1710,
	1662, 1712, 1532, 1679, 1562, 2431, 1205, 1758, 1685, 1500,
	922, 1130, 1937, 922, 2125, 1128, 1682, 2130, 1528, 1529,
	2113, 1514, 2125, 1516, 1517, 1518, 2111, 1936, 1848, 1549,
	1508, 1829, 889, 1548, 1565, 1566, 1545, 2275, 1828, 1817,
	1132, 1061, 1553, 1564, 1539, 2143, 2722, 2118, 1554, 2142,
	1808, 1557, 1558, 551, 561, 1807, 1806, 2134, 1752, 1781,
	2116, 1768, 552, 1740, 560, 553, 557, 556, 554, 555,
	1301, 1785, 1786, 2064, 1953, 1814, 1336, 1630, 1168, 1799,
	1170, 1563, 1174, 1175, 1176, 1627, 1646, 1656, 1648, 1734,
	1750, 2592, 2112, 1700, 1499, 1297, 1734, 3069, 2112, 1937,
	1847, 1005, 798, 959, 909, 889, 1677, 884, 882, 798,
	959, 959, 1218, 1219, 1220, 1221, 1222, 558, 1224, 1225,
	1226, 1681, 959, 1129, 1231, 1232, 2942, 959, 959, 1703,
	2805, 1671, 976, 1769, 468, 1701, 2469, 1824, 3222, 1826,
	3210, 3070, 1302, 2896, 795, 889, 1833, 2749, 797, 559,
	1720, 795, 1455, 1456, 1457, 797, 1193, 1461, 1462, 1463,
	1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 2103,
	1993, 1118, 2583, 812, 2747, 1119, 2989, 520, 1743, 896,
	1907, 446, 1741, 2912, 466, 1195, 1749, 2897, 1744, 467,
	1745, 2750, 2911, 463, 798, 446, 1196, 446, 446, 446,
	465, 2728, 1704, 1753, 464, 2651, 1748, 2644, 2639, 1934,
	977, 978, 979, 980, 981, 982, 983, 976, 2748, 1941,
	1173, 2636, 979, 980, 981, 982, 983, 976, 2561, 1382,
	1946, 2480, 1789, 1432, 1431, 2376, 795, 2675, 1780, 1130,
	797, 1432, 1431, 2248, 1173, 1379, 1381, 1378, 2584, 1380,
	1783, 1784, 2128, 2074, 1109, 1192, 1108, 1988, 1376, 898,
	1782, 964, 679, 1874, 1391, 1793, 961, 962, 963, 960,
	993, 2433, 2163, 2097, 963, 960, 2924, 2678, 1002, 1908,
	975, 974, 984, 985, 977, 978, 979, 980, 981, 982,
	983, 976, 2585, 1924, 1503, 1926, 1927, 1928, 3108, 1821,
	1008, 1994, 984, 985, 977, 978, 979, 980, 981, 982,
	983, 976, 807, 804, 799, 803, 805, 2057, 2057, 1641,
	2057, 1391, 1909, 1794, 1242, 960, 1704, 2923, 1945, 967,
	968, 969, 970, 971, 972, 973, 965, 2450, 435, 435,
	810, 2316, 2315, 1465, 802, 2298, 896, 2296, 1843, 1845,
	1846, 1458, 1205, 446, 2903, 961, 962, 963, 960, 1007,
	1949, 2867, 2868, 3251, 1860, 446, 2107, 2862, 3225, 896,
	441, 3239, 1006, 3195, 1237, 3190, 1641, 2720, 3128, 2092,
	1916, 2094, 684, 3099, 2366, 179, 3071, 1955, 3014, 1028,
	2364, 1950, 2187, 1447, 1951, 808, 961, 962, 963, 960,
	2061, 2070, 811, 2071, 1242, 2078, 2059, 1448, 2063, 1942,
	3010, 961, 962, 963, 960, 961, 962, 963, 960, 800,
	2676, 2075, 2076, 2863, 2165, 961, 962, 963, 960, 3224,
	1029, 2136, 2955, 2721, 1758, 1925, 1960, 1959, 1943, 1944,
	2365, 1205, 809, 1205, 1954, 1205, 2363, 2362, 1947, 1948,
	896, 1211, 1132, 1874, 1952, 798, 2098, 2091, 1973, 1974,
	2899, 1979, 2898, 1679, 961, 962, 963, 960, 2086, 961,
	962, 963, 960, 2099, 2499, 2751, 1810, 2719, 1243, 1205,
	2181, 2351, 801, 2553, 961, 962, 963, 960, 2036, 2465,
	2445, 2727, 2444, 2349, 2348, 2188, 2146, 795, 2347, 2065,
	1205, 797, 1999, 2361, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2190, 2339, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2333, 2022, 2023, 2024, 2025, 2026,
	2079, 2027, 1203, 2498, 2150, 2332, 1684, 2350, 2331, 2330,
	2088, 2087, 1809, 2192, 2180, 2172, 896, 2090, 1854, 1855,
	1723, 1236, 1236, 1203, 1722, 1721, 2381, 806, 1717, 961,
	962, 963, 960, 1716, 1298, 2189, 1078, 2247, 961, 962,
	963, 960, 2539, 881, 877, 878, 879, 880, 3160, 2177,
	2147, 2176, 2175, 2173, 1185, 1187, 2838, 3156, 3112, 2161,
	2089, 3057, 2871, 3033, 3018, 1205, 2133, 2167, 2245, 2096,
	2213, 2137, 2139, 3013, 1505, 515, 446, 2144, 517, 3129,
	3012, 2985, 2271, 516, 3264, 2956, 1336, 2905, 2277, 2880,
	961, 962, 963, 960, 3061, 2866, 3240, 2836, 2834, 3077,
	2224, 2157, 2158, 2814, 2286, 961, 962, 963, 960, 896,
	2811, 2809, 1796, 2171, 2371, 2174, 2718, 2295, 2717, 2714,
	961, 962, 963, 960, 896, 896, 896, 1561, 2704, 2160,
	896, 2698, 2306, 2307, 2308, 896, 2154, 2312, 2313, 2645,
	2314, 2641, 2632, 1262, 2631, 2227, 2562, 2530, 2257, 975,
	974, 984, 985, 977, 978, 979, 980, 981, 982, 983,
	976, 2258, 2529, 2057, 2214, 2217, 2476, 1347, 1348, 1349,
	1350, 1351, 2443, 2420, 2262, 2197, 2198, 2367, 2360, 2352,
	2269, 2203, 1579, 1267, 1268, 435, 961, 962, 963, 960,
	1505, 896, 1641, 1641, 1641, 1641, 2342, 2340, 2228, 2336,
	2335, 2268, 2334, 896, 1641, 2278, 1849, 2057, 1725, 2301,
	2302, 1392, 1393, 1719, 2305, 1490, 2289, 1275, 1427, 2311,
	2279, 611, 610, 1205, 1299, 2243, 1437, 1036, 2283, 2284,
	1802, 2300, 1032, 2270, 2276, 446, 446, 2293, 2844, 8,
	1508, 2293, 1272, 3073, 7, 1276, 1031, 885, 2178, 2179,
	179, 2968, 2886, 2744, 2288, 179, 2743, 2742, 2735, 2291,
	2285, 2703, 2690, 2297, 961, 962, 963, 960, 2681, 2680,
	1481, 2402, 2669, 2668, 1485, 2389, 1443, 1488, 1443, 2843,
	2593, 2460, 2504, 2497, 2489, 2464, 2484, 2389, 2428, 2225,
	2304, 1205, 2222, 2114, 2471, 2110, 2341, 2109, 1834, 1827,
	2234, 1822, 1820, 2797, 1816, 961, 962, 963, 960, 2281,
	1815, 1813, 1804, 2280, 1801, 1800, 1724, 2282, 1476, 1475,
	1474, 2434, 961, 962, 963, 960, 2438, 2372, 2377, 961,
	962, 963, 960, 2423, 2424, 2390, 2391, 2392, 2393, 2701,
	2405, 2403, 2401, 1446, 2404, 1445, 1480, 1436, 1217, 666,
	162, 2459, 154, 130, 1215, 2294, 2421, 3221, 2418, 3215,
	162, 3202, 3199, 3089, 2502, 961, 962, 963, 960, 2457,
	3197, 3098, 2492, 1026, 2494, 2463, 2432, 896, 3031, 3020,
	2436, 2435, 2322, 2323, 3015, 2542, 1257, 2473, 2937, 2414,
	961, 962, 963, 960, 2451, 2557, 2337, 2338, 2453, 2456,
	446, 2922, 1481, 2458, 2918, 2822, 2468, 1481, 1481, 2501,
	896, 798, 2820, 2795, 896, 896, 896, 2467, 798, 159,
	2373, 2794, 2791, 1641, 1934, 2481, 2591, 2455, 2482, 159,
	2790, 2375, 2595, 2730, 2462, 961, 962, 963, 960, 2490,
	2491, 2577, 2576, 2605, 1266, 2608, 1259, 2608, 2608, 2565,
	1705, 1116, 896, 1708, 2488, 2368, 1711, 2299, 2265, 1713,
	2264, 1874, 2500, 2495, 2496, 2263, 2627, 1271, 1274, 2493,
	1263, 2212, 2123, 1205, 1205, 2073, 2028, 2526, 2624, 3087,
	2211, 2257, 2531, 1935, 1377, 2626, 159, 2534, 961, 962,
	963, 960, 1688, 1498, 1497, 2532, 1321, 1287, 2563, 1264,
	2578, 2579, 2580, 1062, 2589, 2558, 961, 962, 963, 960,
	1059, 1058, 2564, 1057, 1056, 1055, 798, 1054, 1053, 446,
	1052, 1051, 2586, 1050, 2542, 2604, 1203, 1203, 1049, 2590,
	1048, 1047, 2537, 1046, 2613, 1505, 1505, 1045, 2628, 2629,
	2509, 2510, 2210, 1044, 1043, 1042, 2511, 2512, 2513, 2514,
	3219, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2614,
	2209, 2603, 1041, 2598, 2609, 2610, 2208, 1040, 961, 962,
	963, 960, 1039, 1035, 798, 1034, 1033, 1030, 670, 671,
	672, 673, 2181, 669, 1023, 1022, 961, 962, 963, 960,
	2599, 2679, 961, 962, 963, 960, 1791, 1020, 1019, 1795,
	1018, 1017, 1016, 975, 974, 984, 985, 977, 978, 979,
	980, 981, 982, 983, 976, 3085, 2207, 1679, 1015, 1014,
	1013, 2638, 2633, 2637, 1012, 2643, 1011, 1010, 446, 2206,
	2647, 2648, 2642, 2205, 563, 114, 2658, 1009, 1805, 2204,
	114, 2640, 961, 962, 963, 960, 1812, 2594, 1004, 1003,
	926, 2596, 2597, 2662, 1216, 961, 962, 963, 960, 961,
	962, 963, 960, 883, 1825, 961, 962, 963, 960, 1830,
	1831, 1832, 2201, 3083, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 2674, 2792, 2665, 2666, 2667, 1940, 2611, 452,
	1921, 3176, 114, 914, 2200, 2654, 2655, 2691, 961, 962,
	963, 960, 3250, 3174, 2692, 3134, 2199, 2657, 2694, 2249,
	2085, 1727, 2705, 2398, 925, 2697, 2660, 2193, 2399, 2734,
	961, 962, 963, 960, 2659, 2396, 2696, 2740, 896, 2710,
	2397, 2693, 961, 962, 963, 960, 2132, 2057, 1641, 2754,
	2395, 2394, 1938, 961, 962, 963, 960, 2400, 2126, 2049,
	2050, 2184, 1110, 896, 2824, 2649, 1526, 1527, 2159, 2560,
	2219, 2825, 2605, 1521, 1522, 1523, 896, 99, 2707, 443,
	2661, 53, 2601, 52, 2602, 1997, 896, 961, 962, 963,
	960, 1205, 975, 974, 984, 985, 977, 978, 979, 980,
	981, 982, 983, 976, 796, 2802, 2756, 1505, 114, 2725,
	1615, 896, 2527, 2528, 2709, 2045, 2048, 2049, 2050, 2046,
	2823, 2047, 2051, 114, 2741, 114, 2535, 1251, 2789, 2753,
	2151, 447, 448, 798, 2827, 2752, 449, 179, 450, 2782,
	2121, 1854, 1855, 3053, 1203, 1064, 1281, 2760, 2816, 2711,
	896, 1910, 1689, 2162, 2796, 920, 2806, 2801, 2798, 2575,
	2799, 2536, 2287, 2229, 2804, 1481, 3217, 1481, 2852, 1930,
	2311, 1530, 798, 1387, 2812, 2808, 2810, 1496, 2813, 961,
	962, 963, 960, 3147, 2818, 1481, 1481, 2817, 2737, 1432,
	1431, 896, 1205, 1205, 2815, 2389, 952, 896, 3017, 961,
	962, 963, 960, 1076, 1077, 2889, 2318, 2889, 2829, 1074,
	1075, 1236, 2630, 2319, 2320, 2321, 1072, 1073, 2839, 975,
	974, 984, 985, 977, 978, 979, 980, 981, 982, 983,
	976, 1205, 1070, 1071, 2389, 2037, 2904, 2853, 2855, 2033,
	2881, 1626, 1167, 1166, 2664, 1203, 2878, 2083, 1747, 446,
	1121, 896, 896, 2671, 1066, 896, 896, 2876, 2882, 3216,
	2893, 3120, 2040, 2731, 2732, 2733, 3105, 2755, 3103, 2756,
	2940, 2892, 3064, 2758, 3043, 2874, 2759, 2939, 2934, 3042,
	3040, 1532, 3032, 2947, 2878, 2926, 2927, 2789, 2950, 2935,
	2936, 2951, 2952, 2902, 2906, 2949, 2835, 2706, 2782, 2045,
	2048, 2049, 2050, 2046, 2688, 2047, 2051, 2944, 2687, 2672,
	1984, 1069, 2164, 2430, 1534, 2981, 3178, 3177, 3178, 2466,
	2182, 2183, 1923, 1803, 911, 3177, 2920, 2689, 2185, 2186,
	2422, 2974, 669, 1136, 2943, 2874, 2874, 2945, 61, 2874,
	2874, 2191, 166, 3, 2, 2740, 1182, 2925, 2066, 1673,
	1209, 3000, 1, 670, 671, 672, 673, 2969, 669, 2973,
	2845, 2979, 1489, 674, 2407, 1481, 2408, 2663, 2215, 2216,
	1488, 2410, 1765, 2378, 2031, 1911, 2556, 1111, 714, 1438,
	1306, 2992, 814, 905, 1303, 904, 902, 1389, 565, 2995,
	2994, 2996, 3001, 1730, 3003, 3002, 2369, 2343, 896, 3011,
	2946, 3146, 1205, 3184, 114, 114, 796, 3097, 3149, 1319,
	549, 3034, 2960, 3101, 2962, 2841, 1770, 987, 3016, 991,
	957, 2452, 736, 602, 576, 1021, 1289, 1282, 2507, 816,
	2900, 2901, 3025, 575, 2724, 988, 990, 986, 2885, 989,
	975, 974, 984, 985, 977, 978, 979, 980, 981, 982,
	983, 976, 896, 3048, 2239, 1203, 3039, 3037, 2425, 3004,
	813, 737, 3065, 1714, 2958, 1252, 1256, 3026, 2894, 2745,
	2581, 2266, 3260, 3249, 3231, 3214, 3060, 992, 3125, 3245,
	3164, 896, 2874, 3200, 3059, 3056, 2848, 2846, 1205, 2847,
	3193, 3092, 3095, 3121, 486, 3067, 1652, 433, 779, 2938,
	1726, 487, 3072, 2941, 1939, 3075, 3113, 3082, 3084, 3086,
	3088, 3019, 695, 3096, 1920, 3081, 696, 697, 2255, 2254,
	1358, 3104, 966, 3106, 3107, 3102, 3100, 1205, 1375, 2523,
	2524, 1001, 525, 1792, 2236, 2777, 2874, 3130, 2419, 60,
	59, 1203, 58, 57, 1696, 3119, 187, 567, 186, 2869,
	3094, 3151, 547, 3091, 546, 545, 544, 543, 2044, 3153,
	2042, 2041, 1636, 1635, 1694, 2874, 2309, 2303, 3139, 1980,
	3140, 3152, 3141, 1985, 3142, 1568, 3131, 3143, 3078, 3079,
	1203, 896, 2917, 2353, 1520, 1976, 3157, 1585, 2325, 1582,
	3158, 3048, 3127, 1581, 2317, 2913, 2907, 1612, 2738, 2888,
	3167, 3169, 2761, 2762, 2768, 1929, 3183, 839, 835, 3172,
	3175, 3173, 837, 1068, 838, 836, 1416, 2170, 2166, 3186,
	1957, 2437, 3191, 2439, 896, 3179, 3180, 3181, 3182, 2570,
	1865, 1864, 3192, 1862, 1861, 1084, 3196, 2980, 3198, 2708,
	3027, 1481, 1872, 1870, 2656, 2652, 1481, 1738, 1486, 3153,
	3212, 2218, 1637, 1633, 3208, 1922, 2856, 1525, 896, 688,
	896, 3152, 3211, 1918, 97, 3162, 3218, 144, 3220, 47,
	88, 87, 3223, 96, 142, 46, 171, 162, 50, 154,
	130, 3186, 896, 2483, 3227, 170, 173, 3234, 172, 169,
	3238, 3241, 2100, 2101, 3244, 155, 168, 1240, 167, 3066,
	2891, 2505, 147, 663, 37, 2503, 156, 33, 1342, 3248,
	12, 724, 3255, 11, 34, 3076, 3259, 3258, 21, 22,
	20, 1310, 19, 3267, 25, 112, 3270, 31, 30, 107,
	3255, 3273, 3272, 106, 3271, 3259, 29, 105, 1214, 104,
	100, 103, 1342, 452, 1342, 102, 159, 101, 28, 18,
	162, 50, 154, 130, 975, 974, 984, 985, 977, 978,
	979, 980, 981, 982, 983, 976, 1342, 41, 155, 114,
	40, 1412, 39, 9, 95, 147, 93, 1409, 27, 156,
	723, 1411, 1408, 1410, 1414, 1415, 94, 91, 92, 1413,
	762, 89, 72, 71, 70, 85, 84, 83, 112, 975,
	974, 984, 985, 977, 978, 979, 980, 981, 982, 983,
	976, 82, 3159, 100, 81, 80, 78, 2612, 79, 159,
	735, 69, 116, 117, 68, 118, 119, 67, 66, 65,
	90, 114, 76, 1790, 86, 114, 77, 75, 74, 73,
	64, 63, 62, 128, 126, 127, 114, 125, 124, 123,
	122, 121, 120, 42, 43, 44, 114, 975, 974, 984,
	985, 977, 978, 979, 980, 981, 982, 983, 976, 45,
	138, 137, 139, 764, 141, 143, 763, 974, 984, 985,
	977, 978, 979, 980, 981, 982, 983, 976, 140, 135,
	129, 153, 160, 133, 98, 116, 117, 136, 118, 119,
	134, 132, 55, 17, 24, 4, 0, 0, 0, 0,
	749, 0, 152, 146, 145, 0, 0, 0, 725, 56,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1419, 1420, 1421, 1422, 1423, 1424, 1417, 1418, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 961,
	962, 963, 960, 129, 153, 160, 0, 98, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 149, 150, 0, 0, 152, 146, 145, 0, 0,
	0, 0, 56, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 748, 747,
	0, 0, 0, 0, 0, 0, 0, 2700, 0, 0,
	0, 0, 0, 0, 2702, 746, 108, 0, 0, 0,
	151, 0, 109, 0, 0, 0, 722, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 757, 0,
	0, 0, 0, 148, 149, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	49, 0, 0, 151, 0, 109, 0, 754, 758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	855, 0, 1640, 0, 0, 743, 0, 741, 745, 761,
	0, 0, 0, 742, 739, 738, 0, 744, 729, 730,
	728, 731, 732, 733, 734, 0, 759, 0, 760, 51,
	0, 0, 497, 496, 503, 493, 0, 0, 1481, 755,
	756, 0, 110, 0, 500, 501, 0, 502, 506, 1481,
	0, 488, 2819, 49, 0, 2821, 0, 0, 0, 0,
	0, 511, 0, 0, 0, 131, 0, 0, 114, 2826,
	0, 114, 114, 1412, 114, 0, 751, 0, 0, 1409,
	0, 0, 0, 1411, 1408, 1410, 1414, 1415, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 515, 0, 0, 517, 0, 0,
	796, 0, 516, 0, 0, 0, 0, 796, 0, 0,
	843, 0, 0, 0, 111, 38, 114, 0, 0, 0,
	0, 48, 5, 0, 0, 115, 0, 0, 131, 0,
	863, 867, 869, 871, 873, 874, 876, 0, 881, 877,
	878, 879, 880, 750, 858, 859, 860, 861, 841, 842,
	864, 0, 844, 0, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 856, 862, 0, 0, 0, 0,
	0, 0, 0, 866, 868, 870, 872, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 38, 0,
	0, 0, 992, 0, 48, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 0, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1419, 1420, 1421, 1422, 1423, 1424, 1417,
	1418, 0, 0, 0, 0, 489, 491, 490, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 2993, 514, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 483, 0, 162, 50, 154,
	130, 0, 0, 0, 0, 0, 0, 328, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2168, 2169, 0, 461, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 251, 185, 431, 0,
	432, 0, 0, 0, 0, 0, 1008, 0, 0, 0,
	254, 0, 0, 0, 0, 494, 498, 504, 0, 505,
	507, 0, 0, 508, 509, 510, 0, 0, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 2060, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 418,
	288, 336, 302, 337, 289, 314, 313, 315, 865, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	1640, 297, 0, 0, 0, 404, 0, 348, 330, 114,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 3229, 0,
	0, 0, 400, 280, 234, 235, 439, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 428, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 408, 0, 0,
	316, 317, 318, 319, 457, 459, 256, 411, 341, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 711, 0, 712, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 693, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 228, 0, 705, 0, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 131, 340, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 0, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1640, 1640, 1640, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 701, 0, 689, 0, 0, 0, 0, 0,
	0, 704, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 694, 0, 114, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 710, 0, 0, 0, 0, 700, 0, 0, 0,
	699, 0, 0, 0, 0, 0, 685, 0, 0, 0,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 0, 0,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 539, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 574, 0, 0,
	357, 312, 0, 0, 114, 0, 634, 642, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 532, 0,
	0, 564, 611, 610, 551, 561, 0, 0, 251, 185,
	431, 0, 432, 552, 0, 560, 553, 557, 556, 554,
	555, 0, 626, 0, 0, 0, 0, 1640, 0, 523,
	536, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 0, 584, 0, 535, 706, 0, 579, 558, 562,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	559, 582, 586, 267, 648, 580, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 649, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 0, 0, 388, 0, 0, 632, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 581, 0, 348,
	330, 645, 524, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 1440, 1439, 1441, 400, 280, 234, 235, 439, 630,
	326, 0, 0, 0, 0, 644, 625, 627, 628, 631,
	635, 636, 637, 638, 639, 641, 643, 647, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 585,
	114, 0, 316, 317, 318, 319, 633, 0, 256, 411,
	341, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 655, 629, 654, 656, 657, 653, 658,
	659, 640, 542, 0, 589, 651, 650, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 114, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 618, 595, 596, 597, 541, 598, 592, 593,
	594, 619, 587, 615, 616, 566, 590, 599, 614, 600,
	617, 620, 621, 660, 661, 606, 662, 603, 622, 613,
	612, 601, 588, 623, 624, 573, 568, 604, 605, 591,
	607, 608, 609, 569, 570, 571, 572, 0, 583, 0,
	396, 397, 398, 419, 382, 0, 436, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 273, 1482, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 574, 0, 0, 357, 312,
	0, 0, 0, 0, 634, 642, 0, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 532, 0, 0, 564,
	611, 610, 551, 561, 0, 0, 251, 185, 431, 0,
	432, 552, 0, 560, 553, 557, 556, 554, 555, 0,
	626, 0, 0, 0, 0, 0, 0, 523, 536, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 0, 0, 0, 0,
	584, 0, 535, 0, 0, 1665, 558, 562, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 559, 582,
	586, 267, 648, 580, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 649,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 388, 0, 0, 632, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 581, 0, 348, 330, 645,
	524, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 630, 326, 0,
	0, 0, 0, 644, 625, 627, 628, 631, 635, 636,
	637, 638, 639, 641, 643, 647, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 585, 0, 0,
	316, 317, 318, 319, 633, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 655, 629, 654, 656, 657, 653, 658, 659, 640,
	542, 0, 589, 651, 650, 652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	618, 595, 596, 597, 541, 598, 592, 593, 594, 619,
	587, 615, 616, 566, 590, 599, 614, 600, 617, 620,
	621, 660, 661, 606, 662, 603, 622, 613, 612, 601,
	588, 623, 624, 573, 568, 604, 605, 591, 607, 608,
	609, 569, 570, 571, 572, 162, 583, 0, 396, 397,
	398, 419, 382, 0, 436, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 995, 0, 0, 357, 312, 0, 0,
	0, 0, 634, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 0, 0, 564, 611, 610,
	551, 561, 0, 0, 251, 185, 431, 0, 432, 552,
	0, 560, 553, 557, 556, 554, 555, 0, 626, 0,
	0, 0, 0, 0, 0, 523, 536, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 0, 584, 0,
	535, 0, 0, 579, 558, 562, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 559, 582, 586, 267,
	648, 580, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 649, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 0, 0, 0, 388,
	0, 0, 632, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 581, 0, 348, 330, 645, 524, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 630, 326, 0, 0, 0,
	0, 644, 625, 627, 628, 631, 635, 636, 637, 638,
	639, 641, 643, 647, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 585, 0, 0, 316, 317,
	318, 319, 633, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 655,
	629, 654, 656, 657, 653, 658, 659, 640, 542, 0,
	589, 651, 650, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 131, 340, 278, 0, 0, 618, 595,
	596, 597, 541, 598, 592, 593, 594, 619, 587, 615,
	616, 566, 590, 599, 614, 600, 617, 620, 621, 660,
	661, 606, 662, 603, 622, 613, 612, 601, 588, 623,
	624, 573, 568, 604, 605, 591, 607, 608, 609, 569,
	570, 571, 572, 0, 583, 0, 396, 397, 398, 419,
	382, 0, 436, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	273, 3228, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 574, 0, 0, 357, 312, 0, 0, 0, 0,
	634, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 0, 0, 564, 611, 610, 551, 561,
	0, 0, 251, 185, 431, 0, 432, 552, 0, 560,
	553, 557, 556, 554, 555, 0, 626, 0, 0, 0,
	0, 0, 0, 523, 536, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 0, 0, 0, 0, 584, 0, 535, 0,
	0, 579, 558, 562, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 559, 582, 586, 267, 648, 580,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 649, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 388, 0, 0,
	632, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 581, 0, 348, 330, 645, 524, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 630, 326, 0, 0, 0, 0, 644,
	625, 627, 628, 631, 635, 636, 637, 638, 639, 641,
	643, 647, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 585, 0, 0, 316, 317, 318, 319,
	633, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 655, 629, 654,
	656, 657, 653, 658, 659, 640, 542, 0, 589, 651,
	650, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 618, 595, 596, 597,
	541, 598, 592, 593, 594, 619, 587, 615, 616, 566,
	590, 599, 614, 600, 617, 620, 621, 660, 661, 606,
	662, 603, 622, 613, 612, 601, 588, 623, 624, 573,
	568, 604, 605, 591, 607, 608, 609, 569, 570, 571,
	572, 0, 583, 0, 396, 397, 398, 419, 382, 0,
	436, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 273, 1482,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 574,
	0, 0, 357, 312, 0, 0, 0, 0, 634, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 564, 611, 610, 551, 561, 0, 0,
	251, 185, 431, 0, 432, 552, 0, 560, 553, 557,
	556, 554, 555, 0, 626, 0, 0, 0, 0, 0,
	0, 523, 536, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 0, 584, 0, 535, 0, 0, 579,
	558, 562, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 559, 582, 586, 267, 648, 580, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 649, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 388, 0, 0, 632, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 581,
	0, 348, 330, 645, 524, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 630, 326, 0, 0, 0, 0, 644, 625, 627,
	628, 631, 635, 636, 637, 638, 639, 641, 643, 647,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 585, 0, 0, 316, 317, 318, 319, 633, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 655, 629, 654, 656, 657,
	653, 658, 659, 640, 542, 0, 589, 651, 650, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 618, 595, 596, 597, 541, 598,
	592, 593, 594, 619, 587, 615, 616, 566, 590, 599,
	614, 600, 617, 620, 621, 660, 661, 606, 662, 603,
	622, 613, 612, 601, 588, 623, 624, 573, 568, 604,
	605, 591, 607, 608, 609, 569, 570, 571, 572, 0,
	583, 0, 396, 397, 398, 419, 382, 0, 436, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 574, 0, 0,
	357, 312, 0, 0, 0, 0, 634, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 0,
	0, 564, 611, 610, 551, 561, 0, 0, 251, 185,
	431, 0, 432, 552, 0, 560, 553, 557, 556, 554,
	555, 0, 626, 0, 0, 0, 0, 0, 0, 523,
	536, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 1235, 0,
	0, 0, 584, 0, 535, 0, 0, 579, 558, 562,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	559, 582, 586, 267, 648, 580, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 649, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 0, 0, 388, 0, 0, 632, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 581, 0, 348,
	330, 645, 524, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 630,
	326, 0, 0, 0, 0, 644, 625, 627, 628, 631,
	635, 636, 637, 638, 639, 641, 643, 647, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 585,
	0, 0, 316, 317, 318, 319, 633, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 655, 629, 654, 656, 657, 653, 658,
	659, 640, 542, 0, 589, 651, 650, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 618, 595, 596, 597, 541, 598, 592, 593,
	594, 619, 587, 615, 616, 566, 590, 599, 614, 600,
	617, 620, 621, 660, 661, 606, 662, 603, 622, 613,
	612, 601, 588, 623, 624, 573, 568, 604, 605, 591,
	607, 608, 609, 569, 570, 571, 572, 0, 0, 0,
	396, 397, 398, 419, 382, 583, 436, 0, 1811, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 574, 0, 0, 357, 312, 0, 0, 0,
	0, 634, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 0, 0, 564, 611, 610, 551,
	561, 0, 0, 251, 185, 431, 0, 432, 552, 0,
	560, 553, 557, 556, 554, 555, 0, 626, 0, 0,
	0, 0, 0, 0, 523, 536, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 0, 584, 0, 535,
	0, 0, 579, 558, 562, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 559, 582, 586, 267, 648,
	580, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 649, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 0, 0, 0, 388, 0,
	0, 632, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 581, 0, 348, 330, 645, 524, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 630, 326, 0, 0, 0, 0,
	644, 625, 627, 628, 631, 635, 636, 637, 638, 639,
	641, 643, 647, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 585, 0, 0, 316, 317, 318,
	319, 633, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 655, 629,
	654, 656, 657, 653, 658, 659, 640, 542, 0, 589,
	651, 650, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 618, 595, 596,
	597, 541, 598, 592, 593, 594, 619, 587, 615, 616,
	566, 590, 599, 614, 600, 617, 620, 621, 660, 661,
	606, 662, 603, 622, 613, 612, 601, 588, 623, 624,
	573, 568, 604, 605, 591, 607, 608, 609, 569, 570,
	571, 572, 0, 583, 0, 396, 397, 398, 419, 382,
	0, 436, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	574, 0, 0, 357, 312, 0, 0, 0, 0, 634,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 0, 0, 564, 611, 610, 551, 561, 0,
	0, 251, 185, 431, 0, 432, 552, 0, 560, 553,
	557, 556, 554, 555, 0, 626, 0, 0, 0, 0,
	0, 0, 523, 536, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	534, 0, 0, 0, 0, 584, 0, 535, 0, 0,
	579, 558, 562, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 559, 582, 586, 267, 648, 580, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 649, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 388, 0, 0, 632,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	581, 0, 348, 330, 645, 524, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 630, 326, 0, 0, 0, 0, 644, 625,
	627, 628, 631, 635, 636, 637, 638, 639, 641, 643,
	647, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 585, 0, 0, 316, 317, 318, 319, 633,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 655, 629, 654, 656,
	657, 653, 658, 659, 640, 542, 0, 589, 651, 650,
	652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 618, 595, 596, 597, 541,
	598, 592, 593, 594, 619, 587, 615, 616, 566, 590,
	599, 614, 600, 617, 620, 621, 660, 661, 606, 662,
	603, 622, 613, 612, 601, 588, 623, 624, 573, 568,
	604, 605, 591, 607, 608, 609, 569, 570, 571, 572,
	0, 583, 0, 396, 397, 398, 419, 382, 0, 436,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 0, 0, 539, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 574, 0,
	0, 357, 312, 0, 0, 0, 0, 634, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	0, 0, 564, 611, 610, 551, 561, 0, 0, 251,
	185, 431, 0, 432, 552, 0, 560, 553, 557, 556,
	554, 555, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 0, 584, 0, 535, 0, 0, 579, 558,
	562, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 559, 582, 586, 267, 648, 580, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 649, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 0, 388, 0, 0, 632, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 581, 0,
	348, 330, 645, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 1360, 1361,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	630, 326, 0, 0, 0, 0, 644, 625, 627, 628,
	631, 635, 636, 637, 638, 639, 641, 643, 647, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	585, 0, 0, 316, 317, 318, 319, 633, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 655, 629, 654, 656, 657, 653,
	658, 659, 640, 542, 0, 589, 651, 650, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 618, 595, 596, 597, 541, 598, 592,
	593, 594, 619, 587, 615, 616, 566, 590, 599, 614,
	600, 617, 620, 621, 660, 661, 606, 662, 603, 622,
	613, 612, 601, 588, 623, 624, 573, 568, 604, 605,
	591, 607, 608, 609, 569, 570, 571, 572, 0, 583,
	0, 396, 397, 398, 419, 382, 0, 436, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 574, 0, 0, 357,
	312, 0, 0, 0, 0, 634, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 611, 610, 551, 561, 0, 0, 251, 185, 431,
	0, 432, 552, 0, 560, 553, 557, 556, 554, 555,
	0, 626, 0, 0, 0, 0, 0, 0, 523, 536,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 534, 0, 0, 0,
	0, 584, 0, 535, 0, 0, 579, 558, 562, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 559,
	582, 586, 267, 648, 580, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	649, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 0,
	0, 0, 388, 0, 0, 632, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 581, 0, 348, 330,
	645, 524, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 630, 326,
	0, 0, 0, 0, 644, 625, 627, 628, 631, 635,
	636, 637, 638, 639, 641, 643, 647, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 585, 0,
	0, 316, 317, 318, 319, 633, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 655, 629, 654, 656, 657, 653, 658, 659,
	640, 542, 0, 589, 651, 650, 652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 618, 595, 596, 597, 541, 598, 592, 593, 594,
	619, 587, 615, 616, 566, 590, 599, 614, 600, 617,
	620, 621, 660, 661, 606, 662, 603, 622, 613, 612,
	601, 588, 623, 624, 573, 568, 604, 605, 591, 607,
	608, 609, 569, 570, 571, 572, 0, 583, 0, 396,
	397, 398, 419, 382, 0, 436, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 430, 0, 0, 574, 0, 0, 357, 312, 0,
	0, 0, 0, 634, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 564, 611,
	610, 551, 561, 0, 0, 251, 185, 431, 0, 432,
	552, 0, 560, 553, 557, 556, 554, 555, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 536, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 534, 0, 0, 0, 0, 584,
	0, 535, 0, 0, 579, 558, 562, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 559, 582, 586,
	267, 648, 580, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 649, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 0, 0, 0,
	388, 0, 0, 632, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 581, 0, 348, 330, 645, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 365, 366, 367, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 0, 0, 407, 0,
	0, 0, 415, 420, 421, 422, 424, 425, 426, 427,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 439, 630, 326, 0, 0,
	0, 0, 644, 625, 627, 628, 631, 635, 636, 637,
	638, 639, 641, 643, 647, 438, 0, 0, 0, 0,
	0, 437, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	410, 413, 0, 0, 0, 0, 239, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 585, 0, 0, 316,
	317, 318, 319, 633, 0, 256, 411, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 423,
	287, 255, 331, 281, 390, 294, 0, 416, 0, 417,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	655, 629, 654, 656, 657, 653, 658, 659, 640, 542,
	0, 589, 651, 650, 652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 233,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 618,
	595, 596, 597, 541, 598, 592, 593, 594, 619, 587,
	615, 616, 566, 590, 599, 614, 600, 617, 620, 621,
	660, 661, 606, 662, 603, 622, 613, 612, 601, 588,
	623, 624, 573, 568, 604, 605, 591, 607, 608, 609,
	569, 570, 571, 572, 0, 0, 0, 396, 397, 398,
	419, 382, 0, 436, 162, 50, 154, 130, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 147,
	0, 273, 0, 156, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 112, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 159, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 129, 153, 160,
	0, 98, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 177, 0, 0, 0, 361, 0, 0, 297, 152,
	146, 145, 404, 0, 348, 330, 56, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 148, 149, 150,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 383, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 180,
	0, 0, 428, 188, 0, 0, 0, 151, 0, 189,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 131, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 0, 0, 0, 229, 230,
	231, 232, 0, 328, 0, 396, 397, 398, 419, 382,
	0, 190, 38, 178, 181, 183, 182, 0, 48, 5,
	273, 0, 115, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 184, 0, 0, 551, 561,
	0, 0, 251, 185, 431, 0, 432, 552, 0, 560,
	553, 557, 556, 554, 555, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 559, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 855, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 843, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 0,
	1906, 1902, 1903, 1904, 1905, 0, 1889, 1890, 1891, 1892,
	841, 1875, 1895, 0, 1876, 324, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1893, 336, 302,
	337, 289, 314, 313, 315, 866, 868, 870, 872, 875,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 1888, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 855, 0, 0, 0, 368, 0, 233, 0, 236,
	865, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 843, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 1968,
	1971, 863, 867, 869, 871, 873, 874, 876, 0, 881,
	877, 878, 879, 880, 0, 858, 859, 860, 861, 841,
	842, 864, 0, 844, 0, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 856, 862, 0, 0, 0,
	0, 0, 0, 0, 866, 868, 870, 872, 875, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 857, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 388,
	0, 0, 0, 1967, 0, 1966, 361, 1964, 1969, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 1970, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 865,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 0, 0, 0, 229,
	230, 231, 232, 328, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 0, 0, 1698, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 1699, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 961,
	962, 963, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 778, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 785, 786, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 773, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	764, 386, 246, 763, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 776, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 777, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 780, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 787, 774, 783, 775, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 388,
	0, 0, 0, 1991, 1989, 0, 361, 0, 1990, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 0, 0, 0, 229,
	230, 231, 232, 162, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 112, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 1742, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 131, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 0, 0, 0, 229, 230, 231,
	232, 162, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 112,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 1733, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 131,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 0, 0, 0, 229, 230, 231, 232, 162,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 112, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 131, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 785, 786, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 764, 386, 246, 763,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 787, 1657,
	783, 1658, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	2382, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 2385, 0, 0, 2384,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 328, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 273,
	1208, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 1206, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1204, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 1202, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 1206, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1204, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3148, 0, 184, 611, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	1206, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 328, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 430, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 1206, 0, 0, 0, 251, 185, 431, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2879, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 418, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 365, 366, 367, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 0, 0, 407, 0,
	0, 0, 415, 420, 421, 422, 424, 425, 426, 427,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 439, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 428, 438, 0, 0, 0, 0,
	0, 437, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	410, 413, 0, 0, 0, 0, 239, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 408, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 411, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 423,
	287, 255, 331, 281, 390, 294, 0, 416, 0, 417,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 233,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 0, 0, 0,
	229, 230, 231, 232, 328, 0, 0, 396, 397, 398,
	419, 382, 0, 436, 0, 0, 2056, 0, 0, 0,
	0, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 2058,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 2077, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	1206, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 328, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 430, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3237, 0, 184, 0,
	0, 0, 0, 0, 0, 251, 185, 431, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 418, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 365, 366, 367, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 0, 0, 407, 0,
	0, 0, 415, 420, 421, 422, 424, 425, 426, 427,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 439, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 428, 438, 0, 0, 0, 0,
	0, 437, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	410, 413, 0, 0, 0, 0, 239, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 408, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 411, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 423,
	287, 255, 331, 281, 390, 294, 0, 416, 0, 417,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 233,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 328, 0, 0,
	229, 230, 231, 232, 0, 0, 0, 396, 397, 398,
	419, 382, 0, 436, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	611, 0, 0, 0, 0, 0, 251, 185, 431, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 418,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 428, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 408, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 328, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3163, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 431,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	418, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 428, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 408, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 328,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 396,
	397, 398, 419, 382, 0, 436, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 3093, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2875,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 2948,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 328, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	2541, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 328, 0, 0, 229,
	230, 231, 232, 0, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 430, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 251, 185, 431, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 418, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 365, 366, 367, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 0, 0, 407, 0,
	0, 0, 415, 420, 421, 422, 424, 425, 426, 427,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 439, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 428, 438, 0, 0, 0, 0,
	0, 437, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	410, 413, 0, 0, 0, 0, 239, 412, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 408, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 411, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 423,
	287, 255, 331, 281, 390, 294, 0, 416, 0, 417,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 233,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 0, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 328, 0, 0,
	229, 230, 231, 232, 0, 0, 0, 396, 397, 398,
	419, 382, 0, 436, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 1206, 0, 0, 0, 251, 185, 431, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 418,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 428, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 408, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 328, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 2058, 0, 0, 0, 251, 185, 431,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	418, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 428, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 408, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 328,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 396,
	397, 398, 419, 382, 0, 436, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 2093, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 0, 1931, 0, 229, 230, 231, 232, 328,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 1625, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 1206, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 1538, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 328, 0, 0, 229, 230, 231, 232, 0,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 430, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 251, 185, 431, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 418, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 1230,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 365, 366, 367, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 0, 0, 407, 0, 0, 0, 415, 420,
	421, 422, 424, 425, 426, 427, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 439, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	428, 438, 0, 0, 0, 0, 0, 437, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 410, 413, 0, 0,
	0, 0, 239, 412, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 408, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 411, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 423, 287, 255, 331, 281,
	390, 294, 0, 416, 0, 417, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 233, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 0, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 328, 0, 0, 229, 230, 231, 232,
	0, 0, 0, 396, 397, 398, 419, 382, 0, 436,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 430, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 251, 185, 431, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 418, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 365, 366, 367, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 0, 0, 407, 0, 0, 0, 415,
	420, 421, 422, 424, 425, 426, 427, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 439, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 428, 438, 0, 0, 0, 0, 0, 437, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 410, 413, 0,
	0, 0, 0, 239, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 408, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 411, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 423, 287, 255, 331,
	281, 390, 294, 0, 416, 0, 417, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 0, 368, 0, 233, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 0,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 328, 0, 0, 229, 230, 231,
	232, 0, 0, 0, 396, 397, 398, 419, 382, 0,
	436, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 430,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 251, 185, 431, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 418, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 477, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 365, 366, 367, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 0, 0, 407, 0, 0, 0,
	415, 420, 421, 422, 424, 425, 426, 427, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 439, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 428, 438, 0, 0, 0, 0, 0, 437,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 410, 413,
	0, 0, 0, 0, 239, 412, 0, 0, 0, 0,
	0, 0, 478, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 408, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 411, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 423, 287, 255,
	331, 281, 390, 294, 0, 416, 0, 417, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 233, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	0, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 328, 0, 0, 229, 230,
	231, 232, 0, 0, 0, 396, 397, 398, 419, 382,
	0, 436, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	430, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 251, 185, 431, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 418, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 365, 366, 367, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 0, 0, 407, 0, 0,
	0, 415, 420, 421, 422, 424, 425, 426, 427, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 439, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 428, 438, 0, 0, 0, 0, 0,
	437, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 410,
	413, 0, 0, 0, 0, 239, 412, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 408, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 411, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 423, 287,
	255, 331, 281, 390, 294, 0, 416, 0, 417, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 233, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 0, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 0, 328, 0, 229,
	230, 231, 232, 0, 0, 0, 396, 397, 398, 419,
	382, 0, 436, 444, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 430, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 251, 185, 431, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 418,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 365, 366, 367, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 0, 0, 407,
	0, 0, 0, 415, 420, 421, 422, 424, 425, 426,
	427, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 439, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 428, 438, 0, 0, 0,
	0, 0, 437, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 410, 413, 0, 0, 0, 0, 239, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 408, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 411, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	423, 287, 255, 331, 281, 390, 294, 0, 416, 0,
	417, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	233, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 0, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 328, 0,
	0, 229, 230, 231, 232, 0, 0, 0, 396, 397,
	398, 419, 382, 0, 436, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 430, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 251, 185, 431,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	418, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 365, 366, 367,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 0, 0,
	407, 0, 0, 0, 415, 420, 421, 422, 424, 425,
	426, 427, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 439, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 428, 438, 0, 0,
	0, 0, 0, 437, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 410, 413, 0, 0, 0, 0, 239, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 408, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 411, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 423, 287, 255, 331, 281, 390, 294, 0, 416,
	0, 417, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 233, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 0, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 328,
	0, 0, 229, 230, 231, 232, 0, 0, 0, 396,
	397, 398, 419, 382, 0, 436, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 430, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 251, 185,
	431, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 1186, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 418, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 365, 366,
	367, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 0,
	0, 407, 0, 0, 0, 415, 420, 421, 422, 424,
	425, 426, 427, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 439, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 428, 438, 0,
	0, 0, 0, 0, 437, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 410, 413, 0, 0, 0, 0, 239,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 408,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 411,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 423, 287, 255, 331, 281, 390, 294, 0,
	416, 0, 417, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 233, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 0, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	328, 0, 0, 229, 230, 231, 232, 0, 0, 0,
	396, 397, 398, 419, 382, 0, 436, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 430, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 251,
	185, 431, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 1184, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 418, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 365,
	366, 367, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	0, 0, 407, 0, 0, 0, 415, 420, 421, 422,
	424, 425, 426, 427, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 439,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 428, 438,
	0, 0, 0, 0, 0, 437, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 410, 413, 0, 0, 0, 0,
	239, 412, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	408, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	411, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 423, 287, 255, 331, 281, 390, 294,
	0, 416, 0, 417, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 233, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 0, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 328, 0, 0, 229, 230, 231, 232, 0, 0,
	0, 396, 397, 398, 419, 382, 0, 436, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 430, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	251, 185, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 418, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 518, 272, 274, 276, 277, 320, 321, 333, 352,
	365, 366, 367, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 0, 0, 407, 0, 0, 0, 415, 420, 421,
	422, 424, 425, 426, 427, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	439, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 428,
	438, 0, 0, 0, 0, 0, 437, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 410, 413, 0, 0, 0,
	0, 239, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 408, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 411, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 423, 287, 255, 331, 281, 390,
	294, 0, 416, 0, 417, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 233, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 0, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 0, 0, 1613, 229, 230, 231, 232, 1575,
	0, 0, 396, 397, 398, 419, 382, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 843, 0, 0, 0, 833, 1615, 1584,
	0, 0, 1613, 0, 0, 0, 0, 0, 1616, 1617,
	0, 0, 0, 863, 867, 869, 871, 873, 874, 876,
	0, 881, 877, 878, 879, 880, 0, 858, 859, 860,
	861, 841, 842, 864, 1583, 844, 1615, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 856, 862, 1590,
	0, 0, 0, 0, 0, 0, 866, 868, 870, 872,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 496, 503, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 501, 1606, 502, 506, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1606, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 517, 0, 0,
	0, 0, 516, 0, 1574, 1576, 1573, 0, 1570, 0,
	0, 0, 0, 1594, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 1588, 1622, 0, 0, 1589, 1591,
	1593, 1594, 1595, 1596, 1597, 1601, 1602, 1603, 1605, 1608,
	1609, 1610, 1600, 0, 0, 1590, 0, 0, 0, 1598,
	1607, 1599, 0, 0, 0, 0, 1615, 0, 0, 0,
	0, 1578, 1588, 1622, 0, 0, 1589, 1591, 1593, 0,
	1595, 1596, 1597, 1601, 1602, 1603, 1605, 1608, 1609, 1610,
	0, 0, 0, 1614, 0, 0, 0, 1598, 1607, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 1572, 0, 1590, 2999, 0,
	0, 0, 1606, 0, 0, 489, 491, 490, 0, 0,
	0, 1614, 1611, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 0, 1587,
	0, 0, 0, 0, 514, 0, 1586, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 497, 496, 503, 493,
	1611, 865, 0, 0, 0, 0, 0, 0, 500, 501,
	1604, 502, 506, 0, 1606, 488, 0, 1587, 0, 1592,
	0, 0, 0, 0, 1586, 511, 0, 0, 0, 1594,
	0, 1619, 1618, 0, 0, 0, 0, 0, 0, 0,
	1600, 0, 0, 0, 0, 0, 0, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	1588, 1622, 0, 0, 1589, 1591, 1593, 0, 1595, 1596,
	1597, 1601, 1602, 1603, 1605, 1608, 1609, 1610, 0, 0,
	0, 0, 0, 1580, 0, 1598, 1607, 1599, 0, 0,
	0, 1594, 0, 0, 0, 494, 498, 504, 0, 505,
	507, 0, 1600, 508, 509, 510, 0, 0, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 1614,
	0, 1620, 1588, 1622, 0, 0, 1589, 1591, 1593, 0,
	1595, 1596, 1597, 1601, 1602, 1603, 1605, 1608, 1609, 1610,
	0, 0, 0, 0, 0, 0, 0, 1598, 1607, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 1614, 1586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 489,
	491, 490, 0, 0, 0, 1592, 0, 0, 0, 495,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 1587, 514, 0,
	0, 0, 0, 0, 1586, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	498, 504, 0, 505, 507, 0, 0, 508, 509, 510,
	0, 0, 512, 513,
}

var yyPact = [...]int{
	3205, -1000, -1000, -1000, -314, 10802, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34146, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34146, -312,
	33605, 33605, -1000, -1000, 2188, -1000, 33063, 3935, 34146, 290,
	288, 34146, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 626, -1000,
	32522, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 544, 3680,
	35769, 8560, -262, -1000, 2887, -89, 800, 819, 843, 843,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4318,
	715, 31981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3225, 287, 715, 13522, 6, 5, 2887, 317,
	1400, -1000, 981, 3278, 155, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8560, 8560, 10802, -321,
	10802, 8560, 34146, 34146, -1000, -1000, -1000, -1000, 544, 3680,
	8560, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 5, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 36213, -1000, 1275, -1000, -1000, -1000, -1000,
	2432, 1274, 2010, 495, 34146, -1000, 1272, 495, -1000, -1000,
	-1000, 2887, 2887, -1000, 34146, 34146, 68, 1457, -1000, 338,
	332, 309, 1271, -1000, -1000, -1000, -1000, -1000, -1000, 418,
	2848, -1000, 34146, 34146, 2464, 34146, -1000, 1841, 455, 36460,
	2660, 1179, 623, 2486, -1000, -1000, 2419, -1000, 201, 153,
	188, 299, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 205,
	-1000, 2710, -1000, -1000, 191, -1000, -1000, 185, -1000, -1000,
	-1000, 2, -1000, -1000, -1000, -1000, -1000, -1000, -99, -1000,
	-1000, 872, 1637, 8560, -1000, 1527, -1000, 2845, -1000, -1000,
	-1000, -1000, 5763, 10234, 10234, 10234, 10234, -1000, -1000, 2255,
	8560, 2418, 2417, -1000, -1000, -1000, -1000, -1000, 1268, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1592, -1000,
	-1000, -1000, 9676, -1000, 2406, 2396, 2395, 2393, 2389, 2388,
	2387, 2371, 2370, 2369, 2367, 2366, 2354, 2353, 2142, 11351,
	2346, 2009, 1995, 2345, 2344, 2342, 1990, 2142, 2142, 2341,
	2336, 2331, 2314, 2313, 2312, 2306, 2302, 2300, 2299, 2297,
	2292, 2290, 2289, 2287, 2286, 2284, 2283, 2282, 2280, 2279,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1207, -1000, 2272, 2647, 2773, 2198, 2831,
	2741, 2725, 2718, 2712, 1790, -1000, -1000, -1000, -117, -1000,
	-1000, 791, -1000, 742, -1000, 34146, 34146, 34146, 747, 539,
	539, 539, 539, 539, 539, 578, 539, -156, 620, 611,
	591, 539, -1000, -1000, -1000, -1000, -1000, -1000, -119, -1000,
	1454, 1452, 2544, 710, -1000, -1000, -1000, -1000, 1128, 34146,
	-1000, 2220, 1361, 1361, 2767, 483, 476, 461, 1361, 322,
	-1000, 1427, 1427, 1427, 1427, 1361, 376, 459, 2773, 2773,
	-12, 1427, -6, 1361, 1361, -6, 1361, 1361, 1361, 158,
	-307, -1000, -1000, -1000, 1427, 1427, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2753, 2752, 544, 34146, 122, 34146, 544,
	544, 544, 558, -71, 35228, 34687, 1841, 452, 448, 1152,
	1453, -1000, 1383, 34146, 34146, 1383, 1383, 17901, 17360, -1000,
	34146, -1000, 2773, 2198, -1000, 2122, 2422, 2116, 2198, 544,
	544, 544, 544, 544, 157, 544, 544, 544, 34146, 34146,
	31440, 544, 544, 7437, 7437, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10802, 1608, 1681, 152, -69, -317,
	192, -1000, -1000, 34146, 2627, 168, -1000, -1000, -1000, 2155,
	-1000, 2215, 2215, 2215, 2215, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2239, 2268, -1000, -1000, 2213, 2213,
	2213, 2155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2236, 2236, 2237,
	2237, 2236, 34146, 8560, 34146, 2648, 311, 2266, -1000, 34146,
	306, 2773, 2647, 2773, -1000, -1000, 1262, 1788, 1987, -1000,
	-1000, 338, 1308, -1000, 960, -1000, -1000, -1000, -1000, 34146,
	-99, 301, -1000, -1000, 1986, 2265, -1000, 473, 1176, 1095,
	-1000, 179, 36714, 27105, 1841, 27105, 34146, -1000, -1000, -1000,
	-1000, -1000, -1000, 1, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 171, -1000, 8560,
	8560, 8560, 8560, 8560, -1000, 513, 9118, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10234, 10234, 10234, 10234, 10234, 10234,
	10234, 10234, 10234, 10234, 10234, 10234, 2253, 1435, 10234, 10234,
	10234, 10234, 2422, 2631, 1145, 224, -1000, -1000, -1000, -1000,
	-1000, 1468, 1637, 8560, 8560, 34146, -1000, -1000, 3391, 8560,
	8560, 2969, 8560, 2698, 8560, 8560, 8560, 2115, 4647, 34146,
	8560, -1000, 2113, 2111, -1000, -1000, 1631, 8560, -1000, -1000,
	8560, -1000, -1000, 8560, 10234, 8560, -1000, -1000, -1000, 146,
	2698, 2698, 1530, 8560, 8560, 2698, 2698, 2698, 1522, 2698,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 2088, 2087, 2086,
	2773, -262, 6879, -1000, -273, 2647, 8560, -1000, -1000, 8560,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1978, -45,
	765, 716, 754, -1000, 2683, -1000, 2263, 2262, 1261, 539,
	-1000, -120, 34146, 1502, 34146, 27105, 34146, 34146, 1841, 34146,
	34146, 539, -155, 539, 539, 539, 34146, -1000, 2561, 27105,
	2551, 558, -1000, 34146, 1128, 2677, 34146, 2837, 10234, 10234,
	-1000, 30899, 1427, 1361, 1361, -1000, -1000, 34146, -1000, -1000,
	-1000, 1427, 34146, 1427, 1427, 2837, 1427, -1000, -1000, -1000,
	1361, 1361, -1000, -1000, -1000, -1000, 1427, 1427, -1000, -1000,
	2837, 34146, -1, 2837, 2837, -21, -1000, -1000, -1000, 34146,
	34146, 539, 34146, -1000, 34146, 34146, -1000, -1000, 34146, 36328,
	34146, 30358, 2751, -1000, 27105, 34146, 34146, 24941, -1000, 1084,
	-1000, -58, -1000, -57, -71, 1383, -71, 1383, -1000, 466,
	485, 16278, 406, 27105, 5205, -1000, -1000, 1383, 1383, 5205,
	5205, 1302, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1126,
	-1000, 161, 2647, -1000, -1000, -1000, -1000, -1000, 34146, 34146,
	27105, 1841, 34146, 544, 34146, 34146, 34146, -1000, 2261, -1000,
	2657, 34146, 34146, 1089, -1000, -1000, 12981, 1260, 1089, -1000,
	1528, -1000, 8560, 10802, -294, 8560, 10802, 10802, 8560, 10802,
	-1000, 8560, 151, -1000, -1000, -1000, -1000, 1787, -1000, 1782,
	-1000, -1000, -1000, 1976, 1976, -1000, 1779, -1000, -1000, -1000,
	-1000, 1778, -1000, -1000, 1774, -1000, -1000, -1000, 2084, 872,
	-1000, 1971, 2483, -263, -1000, 15179, 34146, 34146, -1000, -1000,
	-263, -1000, 14621, 34146, 2647, -1000, 2647, 34146, -1000, 2765,
	-1000, 338, 274, -1000, -1000, -1000, -1000, -1000, -1000, 1257,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1124,
	-1000, 34146, -1000, -1000, 179, 27105, 28187, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 194, -1000, -1000, 169, -1000, 575,
	116, 1299, -1000, -1000, 124, 160, 646, 1637, -1000, 1484,
	1484, 1534, -1000, 556, -1000, -1000, -1000, -1000, 2255, -1000,
	-1000, -1000, 1485, 3281, -1000, 1401, 1401, 1306, 1306, 1306,
	1306, 1306, 1391, 1391, -1000, -1000, -1000, 5763, 2253, 10234,
	10234, 10234, 10234, 510, 510, 3204, 3262, -1000, 8560, 1525,
	-1000, 8560, 1928, 1088, 1246, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2083, 2082, 2064, 2847, 2080,
	8560, -1000, -1000, 1294, 1293, 1288, -1000, 1780, 8002, -1000,
	-1000, -1000, 2079, 1242, 2078, -1000, -1000, -1000, 2072, 1277,
	987, 2070, 1465, 2069, 1123, 8560, 8560, 8560, 2067, 1276,
	1269, 8560, 8560, 8560, 8560, 2066, 8560, 8560, 8560, 8560,
	8560, 8560, 8560, 8560, 26, 26, 26, -1000, -1000, 1266,
	-1000, 1637, -1000, 1969, -1000, 1029, 1102, -1000, 1832, -1000,
	-1000, -1000, -1000, 757, 732, 776, 34146, 917, 11892, 34146,
	34146, -1000, 2220, 2656, 135, -1000, 1016, -1000, 116, -107,
	305, 906, 2461, 2846, 34146, 539, 34146, 34146, 34146, 2675,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29817, -1000,
	2252, 1265, -1000, -1000, 8560, -1000, -1000, 2458, 34146, 34146,
	2837, 2837, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34146,
	2837, 2837, 1361, 1427, -1000, -1000, 1427, -1000, -1000, 1427,
	-1000, 1241, -1000, 34146, -1000, -1000, -1000, 2220, 1101, -1000,
	673, 518, 518, 739, 464, 2830, 14063, -1000, 1368, 762,
	569, 2583, 198, -1000, 1368, -213, 1368, 1368, 1368, 1368,
	1368, 1368, 1368, 407, 397, 1368, 1368, 1368, 1368, 1368,
	1368, 1368, 1368, 1368, 1368, 1368, 818, 1368, 1368, 1368,
	1368, 1368, -1000, 1368, 2245, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 439, 133, 2749, 234, 231, 1016, 2745, 242,
	2772, 994, -1000, -1000, -1000, -1000, 20072, 20072, 15737, 20072,
	-1000, 1312, -71, -88, -1000, -1000, 1084, 5205, 1084, 5205,
	-1000, -1000, 568, -1000, -1000, 906, -1000, 34146, 34146, -1000,
	-1000, 2244, 1451, -1000, -1000, 11351, -1000, 5205, 5205, -1000,
	-1000, 20613, 34146, -1000, -100, -1000, -82, 2764, 1063, -1000,
	-1000, 1068, 906, 2482, 34146, 1063, -1000, -1000, 11892, 34146,
	-1000, -1000, 2837, 7437, -1000, 24941, -1000, -1000, 29269, -1000,
	28728, 2837, 1474, -1000, 10802, 1676, 150, -1000, 181, -319,
	148, 1567, 145, 1637, -1000, -1000, 2065, 2063, 1264, -1000,
	1258, 2061, 1226, 1213, -1000, -19, -1000, 2641, 911, -1000,
	2241, -1000, 1188, 2538, -1000, 1053, -1000, 1450, 1183, -1000,
	911, 1180, 2526, 1053, 2764, -1000, 1224, 66, -1000, -1000,
	34146, 1986, 1178, 28187, 935, -1000, 566, 1216, 1212, -1000,
	27105, 182, 27105, -1000, 27105, -1000, -1000, 320, -1000, 34146,
	2632, -1000, -1000, -1000, 1899, -332, -1000, -1000, -1000, -1000,
	-1000, 1148, -1000, 510, 510, 3204, 2497, -1000, 10234, -1000,
	10234, 2611, 1473, -1000, 8560, 1627, 3630, 1715, 18983, 34146,
	-1000, -1000, 8560, 8560, -1000, 2519, -1000, -1000, -1000, -1000,
	8560, 8560, 1696, -1000, 34146, -1000, -1000, -1000, -1000, 18983,
	-1000, 10234, -1000, 8560, 1092, 2485, 1146, 26, 26, 26,
	2474, 2462, 2440, 1142, 26, 2407, 2401, 2397, 2384, 2334,
	2328, 2310, 2248, -1000, 2240, -1000, -1000, 6879, -1000, -19,
	8560, 8560, 8560, 2567, -1000, -1000, -1000, -1000, -1000, 721,
	162, 2060, 997, -1000, -1000, 34146, -1000, -1000, -1000, 2057,
	995, -1000, -1000, -1000, 12371, 2215, 2215, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2239, -1000, -1000, 2213,
	2213, 2213, 2155, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2236, 2236, 2237, 2237, 2236, -1000, 2220, 2669,
	-1000, 29, 1368, 554, 27105, 431, -1000, 34146, 1793, 1441,
	2481, 401, 2610, 34146, 254, 34146, 2234, 2229, 2227, 283,
	12371, 34146, 982, -1000, 1204, 3278, -1000, 34146, 1637, -1000,
	1841, -1000, 1361, -1000, -1000, 2837, 1199, -1000, -1000, 2837,
	1361, 1361, 1427, 34146, -1000, 2668, 36328, -1000, 34146, -1000,
	-1000, -1000, 660, -1000, 738, 539, 34146, 1560, 738, 1558,
	2226, -1000, -1000, 34146, 34146, 34146, 34146, -1000, -1000, 34146,
	-1000, 34146, 34146, 34146, 34146, -1000, 34146, 34146, -1000, 34146,
	1555, 1554, 2706, -1000, 1368, 1368, 682, -1000, -1000, 467,
	-1000, 1763, 1762, 1759, 1748, 1965, 1963, 1962, 1368, 1368,
	1736, 1960, 27646, 1959, 926, 1722, 1718, 1717, 1761, 1942,
	790, -1000, 1941, 1727, 1670, 1664, 34146, 2224, 1877, -1000,
	-1000, 29, 1368, 222, 34146, 1433, 554, 304, 1785, 16819,
	34146, 24941, 24941, 24941, 24941, -1000, 2524, 2523, -1000, 2508,
	2496, 2530, 34146, 24941, 2220, -1000, 27646, -1000, -1000, -1000,
	2422, 1130, 2588, 744, 8560, -1000, -1000, -87, -70, -1000,
	-1000, -1000, 27105, 1936, 406, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2856, 34146, 34146, 538, 2056, -1000, 2835,
	-1000, 961, -1000, -1000, 1172, -1000, 2835, 1476, -315, 10802,
	1404, 1369, -1000, 8560, 10802, 8560, -295, 209, -298, -1000,
	-1000, -1000, 1935, -1000, -1000, -1000, 1716, -1000, 1714, 41,
	55, 1550, -263, 6879, 316, 34146, -263, 34146, 6879, -1000,
	34146, 315, -263, -1000, 34146, 1713, -1000, -1000, -1000, 2843,
	27105, 1841, 1315, 26564, -1000, 190, -1000, 183, 458, 1929,
	-1000, 584, 103, -1000, 1429, 1899, -1000, -1000, -1000, 10234,
	-1000, -1000, -1000, -1000, 1637, 8560, 2054, -1000, 717, 717,
	2052, -1000, 2215, 2215, -1000, 2155, 2213, 2155, 717, 717,
	2051, -1000, 1771, 2230, -1000, 2177, 2132, 8560, -1000, 2050,
	3159, 925, -126, 26, 26, -1000, -1000, -1000, -1000, 26,
	26, 26, 26, -1000, 26, 26, 26, 26, 26, 26,
	26, 26, 499, -1000, 41, 1637, 1637, -1000, -1000, 2608,
	-1000, 1925, 1910, 917, 12371, 630, 11892, 2626, 2667, 318,
	1801, -1000, -1000, -1000, 26023, 451, -1000, -1000, -1000, 561,
	177, 1707, 409, -1000, 34146, 242, 2558, 1426, 1909, 34146,
	-1000, -1000, -1000, -1000, -1000, 2610, -1000, 850, 267, 12433,
	2665, 2211, 2210, 12433, 12433, 12433, 276, 1472, -1000, 495,
	940, 1163, 24941, 34146, -1000, 24400, 2048, -1000, 906, 2837,
	-1000, 34146, -1000, 2837, 2837, 1361, -1000, 318, -1000, 2578,
	12371, -1000, 34146, -1000, 34146, -1000, 34146, 34146, 539, 8560,
	2578, 34146, 550, -1000, -1000, 832, 265, 549, 549, 936,
	-1000, 2645, -1000, -1000, -1000, 34146, -1000, -1000, -1000, -1000,
	-1000, -1000, 18983, 18983, 2722, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1907, 1905, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34146, 1129,
	-1000, 1419, 1801, 26023, 1406, 1383, 1904, 451, 1793, 1405,
	-1000, 1902, -1000, 914, 34146, 34146, -1000, 1112, -1000, 1403,
	2467, 2479, 2467, -1000, -1000, -1000, -1000, 2507, -1000, 2499,
	-1000, -1000, 1112, -1000, -1000, -1000, -1000, -1000, 744, -1000,
	2761, 738, 738, 738, 2041, -1000, -1000, -1000, 935, 2040,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2774,
	2829, 25482, 2774, -1000, -315, 1438, -1000, 1623, 144, 1478,
	34146, -1000, -1000, -1000, 2037, 2036, -275, 58, 2828, 2824,
	2853, -1000, 2030, 934, -263, -1000, -1000, 911, -1000, -1000,
	-1000, -263, -1000, 911, -1000, -1000, 1841, -1000, 180, -1000,
	-1000, -1000, -1000, -1000, -1000, 84, -1000, 34146, -1000, 1899,
	1894, 102, -1000, 1637, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8560,
	-1000, -1000, -1000, 2107, -1000, -1000, 8560, 2029, 1891, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2861, -1000, 2817, -275, -1000, -1000, -1000,
	-1000, -1000, -1000, 12371, -1000, 1286, 318, -166, -1000, 1882,
	111, -1000, -1000, -1000, 1881, 1879, 1701, -1000, -1000, 1657,
	1214, 126, -1000, -1000, -1000, -1000, -1000, -1000, 1785, 1720,
	1399, -336, -1000, 2202, -1000, 1368, 1368, 1368, 34146, 2026,
	928, -1000, -1000, -1000, -1000, 318, 34146, 12433, 2025, 2024,
	2021, 502, 1398, 1371, -1000, 1699, 20072, 24941, 24400, 1110,
	-1000, 1159, -1000, -1000, -1000, 2837, -1000, -1000, 2837, -1000,
	-1000, -1000, 34146, 219, 2199, -1000, 2191, 2454, 312, 2190,
	2182, 34146, 2071, -1000, 2578, 34146, 570, 2605, -1000, -1000,
	-1000, -1000, -1000, 341, -1000, 34146, -1000, -1000, 1301, -1000,
	18983, -1000, -1000, 1127, -1000, 1877, 1874, -1000, 111, 1873,
	5205, -1000, -1000, 2558, 1866, -1000, 34146, 914, 914, 2861,
	34146, 6879, -1000, -1000, 8560, 2181, -1000, 8560, -1000, -1000,
	-1000, -1000, -1000, 2174, 2593, -1000, -1000, -1000, -1000, -1000,
	-1000, 8560, 8560, -1000, -1000, 533, 10802, -299, 208, -1000,
	-1000, -1000, -279, 1861, -1000, -1000, 2816, 1860, 1819, 34146,
	-1000, 911, 911, 906, -1000, -1000, -21, -1000, -1000, -1000,
	2047, -1000, 2006, 26, -1000, 143, 8560, -279, -164, -1000,
	-1000, -166, -1000, 313, -1000, -1000, 319, -1000, -1000, 236,
	-1000, -1000, 1647, 491, -1000, -1000, -1000, 1858, 1579, 1825,
	23318, 18983, 19524, 1852, -1000, -177, 12433, -1000, 1122, -1000,
	1368, 2020, 36586, 171, 36586, 821, 1367, -1000, 1686, -1000,
	1684, -1000, 2837, 1110, 1159, -1000, -1000, 1270, -1000, -1000,
	-1000, -1000, 219, -1000, -1000, 1573, 10234, -1000, -1000, 1850,
	19524, 641, 1390, 1381, 695, 2173, -1000, 348, 2852, -1000,
	-1000, -1000, 677, 2170, -1000, 1540, 1489, -1000, 34146, -1000,
	23318, 23318, 468, 468, 23318, 23318, 2157, 549, -1000, -1000,
	10234, -1000, -1000, -1000, -1000, 1368, 1297, -1000, -1000, -1000,
	-1000, -1000, -1000, 1720, -1000, -1000, 2773, -1000, -1000, 1637,
	34146, 1637, 23859, -1000, 2815, 2808, 1637, 872, -1000, -315,
	34146, 34146, -281, 1656, -1000, 1848, 54, -1000, -1000, 874,
	-283, 38, 39, -1000, -1000, -1000, 2019, -1000, 508, -1000,
	-1000, -1000, 872, -281, 34146, -1000, 344, -1000, -1000, 438,
	1844, -1000, -1000, 226, -1000, -1000, -1000, -1000, -1000, 101,
	-1000, 1374, 1121, -1000, 2155, 8560, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 34146, 1286, -177, 494, 36524, -1000,
	762, -1000, -21, 494, 421, 223, -1000, 1634, -1000, -1000,
	2861, -1000, -1000, -1000, 3204, -1000, -1000, -1000, -1000, -1000,
	-1000, 1843, 1836, -1000, -1000, -1000, -1000, -1000, 1612, 2153,
	-74, 2708, 1827, -1000, -1000, 2148, 1107, 1099, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1086, 1082, 23318, -1000, -1000,
	3204, 18983, 1368, -1000, -1000, 1077, 1075, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2147, -1000, -1000, 2802, -1000, 1826,
	552, 45, 39, -1000, 2800, 50, 2799, 2794, -1000, -1000,
	521, -264, 23, 21, 20, -1000, -1000, -1000, 8560, -1000,
	2649, -1000, 176, -1000, 83, -1000, -1000, -1000, 1825, 1824,
	-1000, 23318, 2645, 1862, -1000, -1000, -1000, 321, 2792, 36586,
	-1000, 1368, -1000, 321, -1000, 279, -1000, 1321, -1000, 1610,
	-1000, 2773, -1000, -1000, 2011, 8560, 2142, 1368, 1867, -160,
	23318, 2444, 2386, 2250, 2134, 1062, -1000, 18983, -1000, -1000,
	22777, 34146, 1819, -1000, 2140, 1607, 58, 40, 2788, -1000,
	1819, 2786, 1819, 1819, 1507, -1000, 16, 13, 11, -1000,
	-1000, -1000, -1000, 1821, -1000, -1000, -1000, -1000, 233, -1000,
	-1000, 2645, -1000, 2781, 373, -1000, 18983, -1000, -1000, -1000,
	1602, -1000, -1000, -1000, 1847, -1000, 34146, -1000, 2477, -1000,
	139, 1060, 233, 468, 233, 468, 233, 468, 233, 468,
	170, -1000, -1000, -1000, 1052, -1000, -1000, 2693, 18442, 32,
	-1000, -1000, -1000, 1820, -1000, 1819, -1000, -1000, 521, -1000,
	-1000, -1000, -1000, -1000, 1368, 1811, 259, -1000, -1000, -1000,
	22236, 334, 347, 335, -1000, 477, -1000, -1000, -1000, 549,
	-1000, -1000, 2475, 2463, 2842, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 34146, -1000, 34146, -1000, 1039,
	-1000, -1000, -1000, 1158, -1000, -1000, -1000, -1000, -1000, 1599,
	-1000, 34146, -1000, 34146, 330, 1597, 10234, 2139, 10234, 2131,
	339, 2130, -1000, -1000, 2844, -1000, 2850, 680, 680, 233,
	233, 233, 233, -1000, 871, -1000, 1338, -1000, 21695, 34146,
	-1000, -1000, 1036, 2128, 2779, -1000, 2624, 34146, 2318, 34146,
	2126, 1336, 10234, -1000, -1000, -1000, 1648, 370, -1000, 34146,
	6321, -1000, 918, -1000, -1000, 492, 333, -1000, 1034, -1000,
	1020, 21154, 1595, 1864, -1000, -1000, -1000, -1000, -1000, 1637,
	34146, 1004, -1000, 34146, 324, -1000, -1000, -1000, 1001, -1000,
	-1000, -1000, -1000, 492, 2492, -1000, 1587, -1000, -1000, 36366,
	636, -1000, -1000, 36366, 328, -1000, 487, 1853, -1000, -1000,
	999, -1000, 34146, 668, 8560, -1000, 328, 36586, -1000, 8560,
	958, -1000, 36586, 933, -1000, -1000,
}

var yyPgo = [...]int{
	0, 148, 2882, 236, 158, 3445, 71, 235, 218, 211,
	234, 3444, 3443, 2623, 2621, 3442, 3441, 3440, 3437, 3433,
	3429, 3428, 3415, 3414, 3412, 3411, 3410, 3409, 3395, 3394,
	3393, 3392, 3391, 3390, 3389, 3388, 3387, 3385, 3384, 3383,
	233, 3382, 3381, 3380, 3379, 3378, 3377, 3376, 3374, 3372,
	3370, 3369, 3368, 3367, 3364, 3361, 3360, 3358, 3356, 3355,
	3354, 3351, 3337, 3336, 3335, 3334, 3333, 3332, 3331, 3328,
	3327, 3326, 207, 3318, 2617, 3316, 3314, 3313, 3312, 3310,
	3307, 3289, 224, 3288, 3287, 3285, 3281, 3279, 3277, 3276,
	3273, 3269, 3268, 3267, 222, 3264, 3262, 3261, 3260, 3259,
	3258, 202, 3254, 153, 182, 3253, 3250, 3247, 3244, 3243,
	228, 213, 67, 3240, 42, 3238, 208, 3237, 130, 3236,
	128, 3233, 3232, 3229, 3228, 3226, 3225, 3216, 3215, 3214,
	3213, 3211, 3210, 3209, 3207, 3204, 3203, 90, 3199, 251,
	3197, 66, 3196, 3195, 109, 152, 178, 249, 2484, 243,
	240, 173, 151, 81, 3193, 2619, 3192, 143, 219, 137,
	23, 3191, 162, 3188, 138, 38, 30, 238, 123, 56,
	139, 102, 3187, 209, 95, 93, 3185, 3184, 171, 248,
	172, 3183, 110, 3182, 3179, 3177, 3175, 187, 170, 3174,
	3173, 108, 3171, 3170, 86, 3169, 61, 186, 146, 185,
	3160, 98, 105, 103, 107, 3158, 3157, 120, 3155, 3154,
	3152, 3148, 165, 3147, 3145, 134, 70, 3144, 3143, 3142,
	55, 3139, 44, 3138, 65, 3137, 63, 3136, 3135, 3134,
	3133, 3129, 3128, 3127, 3125, 3124, 3123, 3122, 69, 3119,
	3118, 15, 16, 18, 3116, 26, 3115, 147, 3113, 3109,
	3107, 83, 78, 3106, 80, 2, 45, 3104, 216, 217,
	99, 129, 3103, 414, 3102, 3101, 3100, 140, 3098, 431,
	3097, 3096, 3095, 3094, 3092, 84, 3091, 205, 47, 3090,
	85, 119, 3089, 36, 41, 200, 189, 3088, 3087, 3086,
	237, 206, 88, 53, 0, 3084, 133, 3083, 3082, 3080,
	244, 3079, 223, 214, 163, 127, 261, 157, 3078, 3075,
	64, 3074, 141, 43, 50, 118, 9, 22, 190, 3073,
	1057, 167, 3072, 201, 3071, 174, 1, 121, 3070, 3069,
	28, 281, 3068, 3062, 3060, 106, 3059, 3058, 239, 75,
	3057, 3056, 3054, 3052, 34, 3051, 32, 25, 3046, 114,
	3044, 231, 3041, 175, 126, 166, 160, 135, 220, 230,
	76, 68, 3040, 1582, 131, 89, 19, 3039, 215, 3038,
	246, 115, 3037, 73, 3036, 227, 367, 198, 3034, 168,
	8, 40, 31, 3033, 10, 3030, 196, 193, 3029, 3027,
	21, 48, 3026, 17, 3023, 3020, 3019, 3018, 5, 3015,
	3014, 3013, 4, 7, 3012, 3, 199, 3011, 3010, 3009,
	3008, 46, 116, 3006, 142, 188, 161, 3005, 91, 3004,
	3003, 3001, 632, 3000, 242, 2999, 2998, 2994, 2974, 2973,
	2969, 2968, 2967, 2966, 92, 37, 2965, 2964, 2963, 2962,
	72, 124, 2961, 2960, 2956, 2955, 33, 164, 2954, 20,
	2953, 29, 27, 35, 2952, 112, 2951, 12, 169, 2950,
	2949, 13, 2948, 2947, 11, 14, 2943, 2941, 117, 2940,
	82, 24, 144, 122, 2937, 2936, 79, 204, 125, 2933,
	2928, 229, 232, 195, 2927, 136, 225, 245, 2926, 203,
	2925, 2924, 2923, 2922, 2920, 2919, 1108, 2918, 2917, 226,
	54, 87, 97, 2916, 2915, 2914, 77, 145, 100, 104,
	60, 74, 2913, 96, 191, 2912, 180, 2911, 2907, 94,
	2906, 2904, 2903, 2902, 2892, 177, 2890, 2889, 176, 221,
	2888, 2886, 2884, 2878, 241, 212, 2873,
}

//line mysql_sql.y:10287
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 524, 532, 532, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 108, 522, 522, 522, 523, 523, 105, 125,
	124, 127, 127, 126, 126, 123, 123, 119, 122, 122,
	121, 121, 120, 115, 117, 117, 116, 118, 118, 106,
	94, 107, 467, 467, 466, 466, 465, 465, 419, 419,
	464, 464, 464, 463, 463, 463, 462, 462, 461, 461,
	460, 460, 458, 458, 459, 457, 456, 456, 456, 454,
	454, 454, 450, 450, 452, 451, 451, 453, 445, 445,
	448, 448, 446, 446, 446, 446, 449, 444, 444, 444,
	443, 443, 93, 93, 93, 365, 365, 92, 92, 379,
	379, 379, 379, 379, 377, 377, 377, 377, 377, 377,
	376, 376, 375, 375, 380, 380, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 83, 83, 83, 83,
	83, 88, 88, 88, 529, 529, 528, 528, 530, 530,
	530, 530, 531, 531, 86, 86, 86, 87, 374, 374,
	374, 84, 85, 85, 364, 364, 369, 369, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 373, 373, 373, 371, 371, 370, 370, 372, 372,
	77, 77, 77, 80, 79, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 78, 78, 78, 78, 78, 78,
	73, 73, 73, 73, 73, 72, 72, 74, 74, 361,
	361, 360, 89, 89, 90, 526, 526, 525, 527, 527,
	527, 527, 91, 97, 97, 97, 97, 97, 97, 97,
	96, 96, 99, 99, 98, 100, 82, 82, 82, 82,
	82, 82, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 492, 492, 492, 494, 494, 298, 299, 533, 301,
	297, 297, 297, 488, 488, 489, 490, 491, 491, 491,
	95, 11, 11, 11, 11, 11, 11, 11, 71, 76,
	246, 246, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 234, 234, 234, 229, 229, 229,
	229, 230, 230, 231, 231, 232, 232, 232, 232, 233,
	233, 291, 291, 251, 251, 251, 253, 253, 252, 250,
	248, 248, 248, 248, 248, 248, 249, 249, 249, 254,
	254, 69, 75, 75, 75, 505, 505, 70, 516, 516,
	422, 422, 312, 312, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	427, 428, 308, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 47, 50, 46, 46, 46, 350, 350, 45,
	534, 534, 286, 286, 58, 57, 49, 59, 60, 61,
	62, 63, 64, 44, 56, 56, 56, 56, 56, 56,
	56, 56, 67, 67, 439, 439, 536, 536, 536, 65,
	66, 421, 421, 421, 55, 54, 53, 52, 51, 51,
	43, 43, 42, 42, 48, 131, 132, 305, 305, 305,
	307, 307, 303, 535, 535, 393, 393, 306, 306, 41,
	41, 41, 41, 68, 304, 304, 285, 302, 302, 302,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 358,
	358, 355, 25, 18, 17, 20, 16, 16, 19, 21,
	22, 22, 9, 9, 9, 9, 13, 13, 14, 152,
	152, 202, 202, 500, 500, 496, 496, 497, 497, 497,
	498, 498, 499, 499, 101, 433, 433, 433, 433, 433,
	433, 8, 174, 174, 432, 432, 432, 432, 432, 432,
	362, 362, 477, 477, 477, 478, 173, 173, 168, 168,
	434, 434, 327, 479, 479, 442, 442, 441, 441, 440,
	440, 171, 171, 172, 172, 155, 155, 111, 111, 447,
	447, 447, 447, 455, 455, 418, 418, 238, 238, 278,
	278, 279, 279, 145, 145, 146, 146, 146, 146, 146,
	146, 485, 485, 487, 487, 486, 170, 170, 166, 166,
	167, 167, 167, 165, 165, 164, 163, 163, 162, 160,
	160, 160, 161, 161, 161, 178, 178, 148, 148, 148,
	147, 147, 147, 147, 147, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 149, 149, 493,
	493, 493, 423, 423, 423, 430, 430, 260, 260, 261,
	261, 259, 259, 150, 150, 151, 151, 151, 151, 258,
	258, 257, 153, 153, 159, 158, 158, 154, 154, 154,
	154, 268, 268, 267, 267, 267, 267, 104, 109, 109,
	110, 177, 177, 266, 265, 265, 265, 176, 176, 175,
	175, 169, 169, 157, 157, 157, 157, 264, 156, 262,
	521, 521, 520, 520, 519, 517, 517, 517, 518, 518,
	518, 518, 469, 469, 469, 469, 469, 292, 292, 292,
	296, 296, 295, 295, 295, 295, 295, 300, 7, 7,
	7, 7, 7, 7, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 36, 186, 187, 37, 188, 188, 189,
	189, 190, 190, 191, 192, 193, 193, 193, 193, 35,
	179, 179, 180, 180, 181, 181, 182, 183, 183, 183,
	185, 184, 34, 34, 27, 138, 138, 139, 139, 139,
	139, 141, 141, 235, 235, 235, 140, 140, 142, 142,
	142, 501, 504, 502, 502, 506, 506, 506, 507, 507,
	507, 507, 508, 508, 28, 128, 133, 511, 511, 511,
	510, 510, 512, 512, 513, 513, 282, 282, 283, 283,
	136, 137, 137, 135, 130, 144, 144, 144, 144, 144,
	129, 134, 503, 509, 509, 509, 359, 359, 356, 357,
	357, 354, 353, 353, 353, 515, 515, 514, 514, 514,
	293, 293, 29, 349, 349, 351, 352, 352, 352, 343,
	343, 343, 343, 33, 347, 347, 348, 348, 348, 348,
	348, 344, 344, 346, 346, 342, 342, 342, 342, 342,
	32, 143, 143, 341, 341, 338, 338, 336, 336, 337,
	337, 335, 335, 335, 339, 339, 39, 39, 39, 340,
	340, 31, 31, 31, 113, 112, 112, 112, 281, 281,
	280, 280, 114, 38, 214, 214, 407, 407, 407, 407,
	407, 425, 425, 425, 408, 408, 408, 409, 409, 409,
	410, 410, 410, 410, 410, 424, 424, 426, 426, 426,
	381, 381, 382, 382, 382, 385, 385, 399, 399, 400,
	400, 398, 398, 405, 405, 404, 404, 403, 403, 402,
	402, 401, 401, 401, 401, 396, 396, 395, 395, 383,
	383, 383, 383, 383, 384, 384, 384, 394, 394, 397,
	397, 222, 222, 223, 223, 256, 220, 220, 221, 221,
	221, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 475, 475, 476, 225,
	225, 236, 236, 236, 236, 236, 236, 224, 224, 226,
	226, 203, 203, 201, 201, 194, 194, 195, 195, 196,
	196, 196, 200, 200, 199, 199, 199, 199, 197, 197,
	198, 198, 198, 198, 198, 198, 367, 367, 472, 472,
	473, 473, 468, 468, 468, 471, 471, 471, 471, 471,
	474, 474, 474, 470, 470, 204, 276, 276, 276, 294,
	294, 294, 294, 275, 275, 275, 219, 219, 218, 218,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 366, 366, 309, 309, 310, 310, 245, 244,
	244, 244, 244, 244, 242, 243, 241, 241, 241, 241,
	241, 240, 240, 239, 239, 239, 345, 345, 237, 237,
	228, 228, 228, 227, 227, 227, 406, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 274, 274, 274, 319, 319, 324, 324, 484, 484,
	483, 205, 205, 205, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 215, 215, 215, 390, 390, 390, 390,
	391, 391, 391, 391, 392, 392, 392, 388, 388, 389,
	389, 328, 329, 329, 431, 431, 386, 386, 387, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 438, 438,
	438, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 495, 495, 495,
	480, 480, 480, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 272, 272, 272, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	330, 330, 331, 331, 435, 435, 435, 435, 435, 435,
	436, 436, 437, 437, 437, 437, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 317, 269, 269, 269, 332,
	325, 325, 326, 326, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 321, 321, 323, 323, 334, 334, 334,
	333, 333, 333, 333, 333, 333, 333, 217, 217, 217,
	217, 314, 314, 314, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 207, 207, 207, 207,
	211, 211, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 212, 212, 212, 212,
	212, 210, 210, 210, 210, 210, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 102, 103, 103, 209, 277, 277, 411, 411,
	414, 414, 412, 412, 413, 415, 415, 415, 416, 416,
	416, 417, 417, 417, 420, 420, 284, 284, 284, 290,
	290, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 4, 5, 5, 6, 5, 5, 3,
	2, 2, 1, 3, 4, 3, 7, 5, 8, 2,
	2, 1, 3, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 2, 1, 3, 2, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 6, 4, 4, 4, 3, 6,
	3, 5, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 5, 3, 4, 6, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 0, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 7, 1, 3, 0,
	1, 1, 3, 1, 3, 0, 1, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 9, 8, 7, 1, 2, 2, 3, 3,
	3, 0, 4, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 1, 0, 2, 7, 8, 8, 0, 3, 3,
	0, 2, 0, 3, 0, 5, 1, 3, 0, 3,
	3, 0, 2, 9, 6, 0, 2, 2, 3, 3,
	4, 4, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 1, 0,
	1, 1, 1, 11, 0, 2, 3, 2, 3, 1,
	1, 1, 3, 3, 4, 0, 2, 2, 2, 2,
	6, 0, 4, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 9, 10, 8, 0,
	2, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 1, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 4, 1, 3, 3, 0, 1, 1, 3,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 5, 4, 1, 3, 3, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 1, 1, 1, 7, 9, 7, 9, 2, 1,
	7, 9, 7, 9, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 3, 3,
	2, 2, 1, 5, 6, 4, 1, 1, 1, 5,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	1, 4, 4, 4, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 2, 0, 1, 6, 8,
	6, 6, 5, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	2, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -524, -532, -2, -5, 587, -1, -4, -103, -77,
	-7, -105, -106, -8, -101, -9, -10, -12, -81, -96,
	-98, -100, -99, -40, -11, -95, -72, -73, -83, -89,
	-92, -93, -94, -107, -102, -104, -145, -108, 580, -78,
	-79, -80, -30, -29, -28, -27, -128, -133, 586, 435,
	13, 484, -13, -14, -485, -15, 254, -297, -298, -299,
	-301, -533, -41, -42, -43, -51, -52, -53, -54, -55,
	-65, -66, -67, -44, -45, -46, -49, -47, -58, -57,
	-59, -60, -61, -62, -63, -64, -48, -131, -132, -68,
	-50, -70, -69, -75, -71, -76, -130, -135, 229, -74,
	75, -84, -85, -86, -87, -88, -90, -91, 361, 367,
	424, 579, 60, -146, -148, 590, 157, 158, 160, 161,
	-31, -32, -33, -34, -35, -36, -38, -37, -39, 225,
	15, 520, -16, -19, -17, -20, -18, -25, -26, -24,
	-21, -23, -129, -22, -134, 249, 248, 37, 315, 316,
	317, 365, 247, 226, 14, 30, 41, 341, -147, 81,
	227, -149, 12, 592, -6, -3, -2, -115, -119, -123,
	-126, -127, -124, -125, -4, -103, 115, 239, 581, -294,
	357, 582, 584, 583, 84, 92, -287, -289, 361, 367,
	579, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 487, 566,
	567, 568, 569, 515, 339, 340, 517, 266, 290, 392,
	296, 303, 157, 176, 170, 198, 190, 165, 270, 308,
	271, 91, 160, 470, 105, 447, 421, 163, 285, 287,
	289, 292, 291, 293, 295, 272, 342, 186, 181, 284,
	268, 179, 273, 39, 274, 203, 275, 276, 522, 443,
	338, 449, 300, 419, 180, 444, 288, 446, 205, 209,
	461, 462, 174, 175, 451, 464, 202, 246, 42, 519,
	258, 465, 207, 201, 197, 473, 304, 302, 200, 173,
	196, 269, 64, 211, 210, 212, 415, 416, 417, 418,
	277, 278, 355, 460, 193, 182, 343, 166, 22, 468,
	253, 448, 368, 279, 297, 305, 206, 208, 260, 265,
	521, 423, 264, 301, 466, 178, 257, 286, 252, 469,
	167, 370, 280, 161, 294, 463, 472, 63, 383, 172,
	164, 243, 158, 262, 267, 281, 282, 283, 513, 307,
	306, 298, 194, 259, 199, 184, 171, 195, 159, 261,
	471, 384, 577, 341, 402, 192, 189, 263, 236, 467,
	450, 162, 406, 385, 187, 309, 573, 574, 575, 356,
	337, 310, 311, 185, 250, 441, 442, 314, 412, 330,
	386, 422, 393, 387, 218, 318, 453, 455, 204, 576,
	319, 320, 321, 445, 322, 323, 324, 325, 360, 55,
	57, 93, 95, -372, -370, -294, 579, 367, 361, 341,
	-188, -294, 591, -155, 38, -201, -294, -155, -74, -14,
	-13, -147, -148, -201, 233, -302, 23, 419, -82, 420,
	229, 81, -294, -9, -94, -8, -101, -72, -145, 424,
	-300, -294, 315, 315, -300, 233, -294, 264, 400, -422,
	239, -376, -349, 265, -375, -351, -378, -352, 31, 225,
	227, 226, 261, 15, 365, 235, 13, 12, 366, 247,
	24, 25, 27, 14, 367, 369, 28, 370, 373, 374,
	375, 41, 378, 379, 254, 84, 92, 87, 272, -187,
	-294, -326, -320, 112, 255, -322, -315, -316, -318, -464,
	-458, -313, 81, 139, 140, 147, 113, -317, -406, 35,
	115, 529, 485, -270, -271, -272, -273, -274, -294, -459,
	-457, 87, 96, 99, 102, 103, 101, 100, 151, 183,
	98, 88, 152, -148, 84, -480, 538, -288, 559, 566,
	567, 568, 569, 558, 60, -429, -437, 232, -435, 150,
	188, 250, 184, 13, 145, 412, 185, 535, 555, 487,
	539, 562, 531, 532, 533, 526, 527, 528, 530, 540,
	542, 554, -438, 550, 560, 561, 548, 563, 564, 565,
	86, 85, 553, 552, 541, 536, 537, 543, 525, 534,
	544, 545, 551, 556, 557, 349, 105, 350, 351, 477,
	342, 352, 239, 419, 69, 353, 354, 355, 356, 357,
	484, 358, 70, 359, 348, 254, 402, 360, 187, 204,
	489, 488, 490, 481, 478, 476, 479, 480, 482, 483,
	546, 547, 549, -109, -110, 571, -164, -165, -263, 11,
	6, 7, 8, 9, -522, 421, 521, 162, 159, -363,
	162, 111, 167, 166, -363, 318, 260, 362, -138, 236,
	339, 402, 322, 93, 264, -343, -341, -340, -424, 312,
	308, 234, -139, 244, 243, 106, 477, 232, 108, 376,
	303, 55, 57, -496, -497, 222, 223, 224, -487, 510,
	-486, -294, 351, 95, 26, 233, 362, 260, 455, 453,
	454, 456, 457, 458, 459, -56, -439, -421, 450, 449,
	-306, 442, 448, 440, 452, 443, 340, 324, 323, 225,
	588, 511, -284, 386, 422, 474, 475, 363, 423, 461,
	463, 444, 105, 191, 188, 236, 233, 339, 477, 402,
	93, 322, -496, 159, 461, 463, 264, 400, 40, -369,
	412, -368, -370, 462, 473, 85, 86, 460, -284, 105,
	441, 441, -165, -263, -164, -146, -148, -104, -485, 234,
	339, 402, 264, 235, 233, 236, 477, 232, 315, 362,
	260, 322, 93, -423, -493, 31, -430, 219, 220, 221,
	32, 33, -1, 119, 592, -320, -320, -6, 593, -6,
	-320, -294, -294, 154, -207, -211, -208, -210, -209, -213,
	-212, 188, 189, 150, 192, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 30, 204, 250, 184, 185,
	186, 187, 205, 170, 190, 518, 213, 171, 214, 172,
	215, 173, 216, 174, 175, 217, 176, 179, 180, 181,
	182, 178, 153, 81, 153, 87, -171, 256, -201, 153,
	-171, -165, -164, -165, -201, -275, -294, 421, 122, -82,
	-82, 420, -488, -489, -490, -492, 229, 420, 419, 153,
	272, 16, -300, -300, 79, -201, -351, 264, -376, -349,
	35, 78, 154, 237, 154, 78, 81, 363, 339, 402,
	364, 477, 233, 376, 236, 264, 377, 339, 402, 233,
	236, 477, 264, 339, 233, 236, 402, 264, 377, 440,
	441, 236, 26, 368, 371, 372, 441, -443, 473, 154,
	111, 108, 109, 110, -320, 129, -333, 122, 123, 124,
	125, 126, 127, 128, 136, 135, 146, 139, 140, 141,
	142, 143, 144, 145, 137, 138, 132, 112, 130, 134,
	131, 114, -148, -320, -326, 60, -318, -318, -318, -318,
	-406, -324, -320, 81, 81, 153, 100, 87, -320, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -436, 81, 81, -330, -331, 81, 81, -313, -275,
	81, 87, 87, 81, 81, 81, 87, -331, -331, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-165, 154, 81, -111, 38, -167, 21, -149, -148, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 96, 466,
	520, 165, 166, 167, -186, -294, -188, -179, -294, 236,
	-139, 108, -338, 239, -338, -338, -338, -338, -338, 235,
	-338, 514, 513, 233, 233, 233, -338, 484, 122, 122,
	58, -498, 169, 154, -487, -170, 81, -305, 130, 134,
	-305, 23, 262, 262, 262, -305, 302, -534, -535, 16,
	132, -303, -535, -303, -303, -305, -536, 235, 451, 42,
	263, 262, -166, -167, -166, 445, 441, -393, 446, 447,
	-307, -535, -306, -305, -305, -306, -305, -305, -305, 233,
	236, 477, 322, 589, -534, -534, 30, 30, -422, -201,
	-422, 511, -285, -294, -422, -422, -422, -499, 238, -529,
	-528, 464, -531, 466, 159, -370, 159, -370, -351, 264,
	264, 154, 122, 23, -371, 122, 133, -370, -370, -371,
	-371, -224, 40, -293, 150, -294, 87, -224, 40, -526,
	-525, -201, -166, -149, -148, 82, 82, 82, -422, -422,
	-422, -422, -422, -424, -422, -422, -422, -300, -179, -188,
	239, -422, -422, -150, -151, 141, -320, -294, -150, -3,
	-117, -116, 116, 117, 119, 582, 357, 581, 585, 579,
	-370, 40, -417, 384, 383, -411, -413, 81, -412, 81,
	-412, -412, -412, 81, 81, -414, 81, -414, -414, -411,
	-415, 81, -415, -416, 81, -416, -415, -294, -325, -326,
	-294, 38, -432, 60, -145, 81, 30, 81, -294, -433,
	60, -145, 81, 30, -166, -111, -167, 153, 96, 87,
	-82, 82, 154, -491, 102, 103, -494, 202, 194, -294,
	-97, 87, -7, -8, -9, -10, -40, -72, -145, -460,
	-458, 81, 31, 411, 78, 16, -377, 233, 477, 362,
	260, 236, 339, -375, -358, -355, -353, -293, -351, -354,
	-353, -380, -275, 441, -112, 425, 314, -320, -320, -320,
	-320, -320, 101, 112, 337, 102, 103, -315, -334, 31,
	310, 311, -316, -316, -316, -316, -316, -316, -316, -316,
	-316, -316, -316, -316, -323, -332, -406, 81, 132, 130,
	134, 131, 114, -318, -318, -316, -316, 82, 154, -484,
	-483, 116, -320, -320, -294, -481, -482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 353, 348,
	354, 352, 342, 360, 355, 356, 187, 508, 509, 502,
	503, 504, 505, 506, 507, -325, -325, -320, -481, -325,
	-269, 32, 31, -326, -326, -326, 82, -320, -495, 335,
	334, 336, -168, -294, -325, 82, 82, 82, 96, -326,
	-326, -325, -316, -325, -482, -269, -269, -269, 141, -326,
	-326, -269, -269, -269, -269, 141, -269, -269, -269, -269,
	-269, -269, -269, -269, 82, 82, 82, -166, -110, -441,
	-440, -320, 40, 572, -111, -320, -163, -162, -320, -523,
	87, 467, 468, 163, 166, 165, 34, 81, 81, 153,
	-338, 484, -201, 112, -501, -294, -359, -356, -353, -294,
	-294, -349, -294, -294, -338, 514, -338, -338, -338, -201,
	-235, 52, 53, 54, -353, -140, 55, 56, -499, -486,
	34, -169, -294, -259, 17, -318, -318, -353, 264, -534,
	-305, -305, -286, -285, -307, -302, -307, -307, -259, -535,
	-305, -305, -307, -303, -259, -294, 441, -259, -259, -393,
	-304, -294, -304, -338, -285, -286, -286, -201, -246, -247,
	230, 346, 347, 228, 226, 11, 227, -255, 303, -339,
	485, -230, -231, 76, 41, -233, 388, 381, 266, 270,
	91, 271, 421, 272, 235, 274, 275, 276, 291, 293,
	246, 277, 278, 279, 412, 280, 158, 292, 281, 282,
	283, 364, -225, 6, 325, 40, 50, 51, 434, 433,
	523, 520, 267, -501, -501, 30, 30, -359, -294, -294,
	-158, -153, -157, -154, -159, -262, -264, -156, 81, -201,
	-148, -294, 154, 465, 467, 468, -529, -371, -529, -371,
	31, 411, -374, 411, 31, -349, -368, 461, 463, -364,
	87, 412, -354, -373, 78, 150, -440, -371, -371, -373,
	-373, 149, 154, -527, 466, 467, 222, -111, -203, -201,
	-501, -358, -349, -294, -422, -203, -294, -294, 81, 35,
	-294, -294, -258, 154, -257, 16, -295, -294, 34, 87,
	153, -258, -118, -116, 118, -320, -6, 581, -320, -6,
	-6, -320, -6, -320, -420, 385, 96, 96, -277, 87,
	-277, 96, 96, 96, 82, 87, -362, 78, -434, -327,
	-479, 571, -173, 82, -168, -477, -478, -168, -172, -294,
	-434, -173, 82, -477, -111, -111, -294, 23, -82, -489,
	153, 154, -169, -377, -357, -354, -379, 141, -294, -365,
	154, 520, 596, 85, 237, -515, -514, 403, 82, 154,
	-444, 238, 484, 87, 594, 218, 101, 337, 102, 103,
	-406, -326, -323, -318, -318, -316, -316, -321, 251, -321,
	111, -320, -319, -483, 118, -320, 34, 154, 79, 153,
	82, 82, 16, 16, 82, -320, 82, 82, 82, 82,
	16, 16, -320, 82, 153, 82, 82, 82, 82, 79,
	82, 154, 82, 154, -326, -320, -326, 82, 82, 82,
	-320, -320, -320, -326, 82, -320, -320, -320, -320, -320,
	-320, -320, -320, -387, 436, -387, -387, 154, 82, 87,
	154, 22, 154, -160, 36, 37, 164, 167, 167, 166,
	-187, -189, -190, -191, -192, -193, 132, 155, 156, -180,
	-181, -182, -183, -207, -275, 189, 192, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 250, 184,
	185, 186, 187, 205, 170, 190, 171, 172, 173, 174,
	175, 176, 179, 180, 181, 182, 178, -294, -201, -170,
	35, -504, 389, -516, 154, 40, -514, 477, -136, 314,
	-342, 79, -143, 16, -201, -338, -201, -201, -201, -214,
	34, 16, -152, -202, -294, 81, 82, 154, -320, -350,
	79, -294, -286, -259, -259, -201, -294, -259, -259, -305,
	-307, -307, -303, 153, -285, -170, 154, -200, -291, -197,
	-199, 241, -310, -198, 244, -473, 242, 240, 106, 245,
	299, 107, 235, -291, -291, 241, -234, 237, 34, -291,
	-249, 235, 299, 242, 20, -248, 235, 107, -294, 241,
	245, 240, -290, 122, -284, 149, 237, 42, 364, -290,
	524, -290, -290, -290, -290, -290, -290, -290, 273, 273,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, -290,
	-290, 159, -290, -290, -290, -290, -290, -290, 81, 268,
	269, -505, 389, 30, 345, 345, -516, 30, -144, 339,
	30, -265, -266, -267, -268, 67, 71, 73, 68, 69,
	70, 74, 30, 154, -292, -296, 34, -294, 87, -292,
	-148, -153, -158, -292, 81, -528, -530, 469, 466, 472,
	-373, -373, 237, 81, 122, -373, -373, 40, -293, -525,
	473, 467, -178, 23, 154, 78, -203, -180, -188, -259,
	-151, -153, -294, 87, -294, 141, -259, 119, -6, 117,
	-122, -121, -120, 120, 579, 585, 119, 119, 119, 82,
	82, 82, 154, 82, 82, 82, 154, 82, 154, -447,
	446, 39, 154, 81, 82, 154, 60, 154, 122, 82,
	154, 82, 60, -178, 153, 421, -294, -458, 82, -379,
	154, 237, 153, 153, -355, 367, -293, -357, 20, 520,
	-275, 38, -281, -280, 87, 594, 82, -321, -321, 111,
	-318, -315, 82, 119, -320, 117, -205, -207, 383, 384,
	-206, -212, 150, 188, 250, 187, 186, 184, 383, 384,
	-224, -294, -320, -320, 82, -320, -320, 16, -294, -224,
	-316, -320, -165, 82, 82, -386, -387, -386, -386, 82,
	82, 82, 82, -386, 82, 82, 82, 82, 82, 82,
	82, 82, 81, -440, -447, -320, -320, -162, -161, 43,
	167, 375, 82, 154, -275, 82, 154, -207, -170, 34,
	-507, 448, 391, 401, -290, -312, -311, 341, 41, -427,
	412, 397, 398, -356, 264, -294, -513, 94, 122, 78,
	329, 330, 331, 332, -336, -337, -335, -339, -501, 81,
	-222, 520, -201, 81, 81, 81, -407, 319, -207, -201,
	-152, -294, 16, 154, -500, 153, -1, -294, -349, -305,
	-259, -535, -259, -305, -305, -307, -294, 34, -247, -204,
	-275, -198, -472, -473, -338, -294, 107, -472, 107, 81,
	-204, -275, -275, -250, -304, -275, -294, -294, -294, -253,
	-252, -275, -294, -294, -294, 107, 107, -229, 40, 47,
	48, 49, -290, -290, 191, -232, 40, 411, 413, 414,
	96, 96, 96, 96, 87, 87, 87, -290, -290, 96,
	87, -296, 87, -474, 166, 44, 45, 96, 96, 96,
	96, 40, 87, -236, 40, 284, 288, 285, 286, 287,
	87, 96, 40, 96, 40, 96, 40, -294, 81, -475,
	-476, 87, -507, -290, 345, -370, 122, -312, -512, 314,
	-137, 91, 31, -174, 230, 227, -501, -361, -360, -275,
	-157, -157, -157, -157, 67, 67, 67, 72, 67, 72,
	67, -267, -361, -159, -170, -296, 82, -521, -520, -519,
	-517, 75, 238, 76, -325, 466, 470, 471, -357, -308,
	87, -364, 14, -201, -201, -426, 294, 295, 82, -261,
	18, 153, -261, 115, -6, -118, -120, -320, -6, -320,
	581, 357, 582, 87, 96, 96, -455, 431, 426, 428,
	107, -327, -442, -441, 60, -145, -168, -434, -478, -440,
	-294, 60, -145, -434, -294, 96, 16, -354, -349, 141,
	141, -294, 368, -365, 87, 390, 87, 233, 595, 154,
	122, -281, -315, -320, 82, -215, 175, 174, -215, 82,
	-412, -412, -411, -414, -411, -215, -215, 82, 82, 23,
	82, 82, 82, -320, 82, 82, 154, -431, 486, -386,
	-386, -386, -386, -386, -386, -386, -386, -386, -386, -386,
	-386, -386, -386, -329, -328, 256, -455, 44, 45, 87,
	87, -191, -207, 231, -182, 40, 34, -145, -508, 91,
	-502, 87, -294, -509, 91, 392, 152, 343, 40, 393,
	394, 409, 338, 96, 96, 399, -503, -294, -144, -511,
	51, 122, 87, -201, -335, -284, 149, 275, 322, -194,
	-195, -196, -204, -197, -199, 34, 81, 81, -194, -194,
	-194, -408, 321, 20, 96, 140, -171, 79, 153, -153,
	-202, -294, 141, 82, -259, -294, -259, -259, -305, -145,
	-251, 44, 46, -207, -470, -294, -468, -470, -294, -468,
	-468, -338, -320, -251, -204, 237, 30, 227, -254, 327,
	328, -366, 300, 112, -366, 154, -160, -294, -224, -224,
	30, 87, 87, -203, 82, 154, 122, -508, -502, 122,
	-371, 87, -509, -513, 122, 87, 154, -174, -174, -259,
	154, 122, -176, -175, 78, 79, -177, 78, -175, 67,
	67, -259, -519, -518, 23, -473, -473, -473, 82, 82,
	-260, 19, 20, 141, -260, 119, 117, 119, 119, -294,
	82, 82, -418, 573, -451, -453, 426, 20, 20, 14,
	82, -434, -434, -349, -365, 412, -201, -280, 87, 595,
	-320, 82, -320, 82, 87, -165, 20, -418, -184, -207,
	-313, -145, -141, 520, 87, -506, 403, 87, 87, 96,
	40, 96, 152, 395, -428, -137, -510, 91, 122, 594,
	81, -290, -290, -290, -294, 82, 154, -145, -223, -256,
	-294, -194, 82, 82, 82, -409, 255, 96, 140, 96,
	140, 96, -292, -153, -294, -259, -500, 153, -259, -259,
	-275, -219, -218, -216, 101, 112, 40, 381, -217, 91,
	149, 289, 292, 291, 267, 290, -245, -309, 78, 387,
	327, 328, -339, 573, 515, 240, 106, 107, 369, -310,
	81, 81, 79, 309, 81, 81, -470, 82, -251, -275,
	40, -254, 40, 300, -252, 149, -224, 82, -476, 87,
	-506, 87, -373, -511, 87, -501, -165, -360, -440, -320,
	81, -320, 81, 67, 11, 18, -320, -326, 239, -6,
	582, 357, -238, 574, 87, 20, 87, -449, 87, -361,
	-114, -445, -393, 82, 82, -386, -389, -388, -392, 432,
	301, 439, -326, -238, 519, -141, -142, 59, 473, 20,
	520, 342, 40, 96, 40, 396, 87, 102, 103, -282,
	-283, 87, -344, -346, -275, 81, -224, -226, -293, 150,
	87, -222, -196, 82, 154, -290, 82, -220, -221, -255,
	-339, -113, -112, -220, -410, 158, 96, 140, 96, 96,
	-259, -259, -216, 101, -316, 87, -226, -227, 40, 288,
	284, 122, 122, -228, 40, 268, 269, -237, 81, 299,
	14, 191, 81, 107, 107, -201, -344, -344, -471, 329,
	330, 331, 333, 332, -471, -344, -344, 81, -367, -366,
	-316, -290, 149, -510, -166, -169, -469, -294, 240, 20,
	20, -294, -294, -278, 575, 96, 87, 428, -419, 576,
	-454, 431, -448, -446, 426, 427, 428, 429, 82, -391,
	114, 395, 399, -314, -317, 96, 99, 183, 152, -278,
	-185, -294, 299, 87, 390, 87, 342, 595, 154, 122,
	82, 154, -411, -320, -256, -313, -222, -381, 256, 154,
	-255, -284, -114, -381, -425, 166, 320, 520, 96, 140,
	96, -165, 87, 87, 96, 81, -435, 30, 87, -345,
	81, 82, 82, 82, 82, -344, -224, -290, 82, 82,
	154, 81, 20, 87, -456, 238, -452, -453, 430, -446,
	20, 428, 20, 20, -390, -391, 399, -314, -317, 571,
	437, 437, 437, 34, 368, 412, -283, 87, -347, -346,
	-160, 82, -382, 308, 20, -255, -290, -382, 320, 96,
	140, 96, -166, 82, -320, -330, -290, 82, -240, -239,
	516, -344, -347, 79, -347, 79, -347, 79, -347, 79,
	82, -224, -294, 240, -279, -294, -449, -463, 81, 96,
	-451, -450, -452, 20, -449, 20, -449, -449, 111, 438,
	438, 438, 87, -348, 246, 91, 520, 327, 328, -160,
	20, -383, 301, 302, -384, -397, 304, -224, 96, 82,
	-294, -244, -242, -243, 78, 444, 297, 298, 82, -471,
	-471, -471, -471, -245, 82, 154, -467, 30, 82, -462,
	-461, -276, -457, -294, 431, 432, 87, -449, -390, -290,
	87, 326, -275, 81, -395, 305, 81, -393, 81, -393,
	107, 330, -366, -243, 78, -242, 78, 15, 14, -347,
	-347, -347, -347, -294, -466, -465, -464, 82, 154, 153,
	96, -294, -380, -385, 306, 96, -316, 81, -316, 81,
	-394, 303, 81, -241, 294, 295, 30, 166, -241, 154,
	122, -461, -294, 82, -399, 81, 20, 82, -380, 82,
	-380, 81, 122, -316, 101, 40, 296, -465, 40, -320,
	153, -400, -398, 256, -384, 82, 82, 82, -380, 96,
	82, -294, 82, 154, -294, -396, 307, 82, -398, -401,
	60, 96, -405, -402, 81, -255, 258, 132, -405, -255,
	-404, -403, 306, 259, 81, 82, 154, -294, 255, 81,
	-326, -403, -402, -326, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 818, 819, 820, 821, 822, 823, 0, 0,
	0, 0, 592, 593, 0, 562, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 430, 0,
	0, 0, 0, 673, -2, 53, 274, 0, 265, 265,
	824, 825, 826, 827, 828, 829, 830, 831, 832, -2,
	605, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 340, 341, 342, 336, 337,
	339, 338, -2, 0, 605, 0, 0, 0, 693, 0,
	0, 710, 732, 23, 0, 7, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 0, 0, 19, 0,
	19, 0, 0, 0, 1179, 1180, 1181, 1182, -2, 1670,
	1648, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 0, 258, 256, 1648, 1670, 1730, 1763,
	0, 837, 0, 651, 0, 656, 1133, 651, 286, 594,
	595, 693, 693, 560, 0, 322, 0, 1661, 326, 0,
	0, 0, 557, 316, 317, 318, 319, 320, 321, 0,
	0, 817, 0, 0, 312, 0, 280, 1721, 0, 0,
	0, 0, 0, 0, 150, 943, 152, 945, 156, 163,
	0, 0, 168, 169, 172, 173, 174, 175, 176, 0,
	180, 0, 182, 185, 0, 187, 188, 0, 191, 192,
	193, 0, 203, 204, 205, 946, 947, 948, -2, 81,
	835, 1582, 1472, 0, 1479, 1480, 1491, 1502, 1259, 1260,
	1261, 1262, 0, 0, 0, 0, 0, 1269, 1270, 0,
	1286, 1827, 0, 1276, 1277, 1278, 1279, 1280, 90, 102,
	103, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 0, 1532,
	1533, 1534, 1445, 1246, 1179, 0, 1836, 0, 1856, 1861,
	1862, 1863, 1864, 1855, 0, 0, 1430, 0, 1420, 0,
	0, -2, -2, 0, 0, 1788, -2, 1833, 1852, 1860,
	1837, 1859, 1829, 1830, 1831, 1824, 1825, 1826, 1828, 1838,
	1840, 1851, 0, 1847, 1857, 1858, 0, 0, 0, 0,
	104, 105, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1436, -2, 1438, 1439, 1441,
	-2, 1443, 1444, -2, 1447, 1448, 1449, -2, -2, 1452,
	1453, 1454, 1455, 1456, 1457, 1460, -2, -2, -2, -2,
	1432, 1433, 1434, 1435, 1424, 1425, 1426, 1427, 1428, 1429,
	-2, -2, -2, 693, 768, 0, -2, 0, 0, 0,
	715, 718, 721, 724, 0, 54, 55, 275, 276, 264,
	266, 0, 270, 0, 263, 0, 0, 0, 0, 975,
	975, 975, 975, 975, 975, 0, 975, 0, 0, 0,
	0, 975, 865, 950, 951, 952, 973, 974, 0, 1026,
	0, 0, 0, 610, 606, 607, 608, 609, 681, 0,
	683, 686, 537, 537, 484, 0, 0, 0, 537, 0,
	498, 490, 0, 0, 0, 537, 0, 0, 688, 688,
	0, 540, 547, 537, 537, -2, 537, 537, 537, 0,
	0, 504, 505, 506, 490, 490, 509, 510, 511, 522,
	523, 548, 1606, 0, 0, 430, 0, 430, 0, 430,
	430, 430, 612, 1758, 1668, 1735, 1721, 0, 0, 231,
	1788, 236, 0, 1669, 1684, 0, 0, 1702, 0, -2,
	0, 302, 688, 0, 694, 0, 693, 0, 0, 430,
	430, 430, 430, 430, 1025, 430, 430, 430, 0, 0,
	0, 430, 430, 0, 0, 733, 734, 729, 730, 731,
	735, 736, 5, 6, 19, 0, 0, 0, 0, 0,
	0, 60, 59, 0, 1583, 1601, 1537, 1538, 1539, 1588,
	1541, 1592, 1592, 1592, 1592, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 0, 0, 1581, 1561, 1590, 1590,
	1590, 1588, 1585, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1595, 1595, 1598,
	1598, 1595, 0, 1470, 0, 0, 0, 0, 655, 0,
	0, 688, -2, 0, 561, 323, 1183, 0, 0, 327,
	328, 0, 0, 343, 0, 346, 331, 332, 333, 0,
	130, 0, 314, 315, 0, 0, 282, 0, 0, 0,
	431, 0, 0, 0, 0, 0, 0, 160, 157, 164,
	167, 177, 184, 0, 196, 198, 201, 158, 165, 170,
	171, 178, 199, 159, 161, 162, 166, 200, 202, 179,
	183, 197, 181, 186, 189, 190, 195, 0, 131, 0,
	0, 0, 0, 0, 1478, 0, 0, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1472, 0, 0, 1265, 1266, 1267, 1268,
	1271, 0, 1287, 0, 0, 0, 1531, 1535, 0, 1470,
	1470, 0, 1470, 1466, 0, 0, 0, 0, 0, 0,
	1470, 1406, 0, 0, 1408, 1421, 0, 0, 1410, 1411,
	0, 1414, 1415, 1470, 0, 1470, 1419, 1402, 1403, 0,
	1466, 1466, 1466, 0, 0, 1466, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 1466, 1466, 1466, 0, 0, 0,
	688, 0, 0, 676, 0, 657, 0, 712, 714, 0,
	716, 717, 719, 720, 722, 723, 725, 726, 56, 0,
	0, 268, 0, 273, 0, 834, 0, 0, 850, 975,
	866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 975, 0, 975, 975, 975, 0, -2, 0, 0,
	0, 612, 611, 0, 682, 0, 0, 741, 0, 0,
	483, 0, 490, 537, 537, 496, 497, 492, 491, 543,
	544, 540, 0, 540, 540, 741, 0, 516, 517, 518,
	537, 537, 524, 689, 525, 526, 540, 0, 545, 546,
	741, 0, 0, 741, 741, 0, 534, 535, 536, 0,
	0, 975, 0, 553, 492, 492, 1607, 1608, 0, 984,
	0, 0, 0, 556, 0, 0, 0, 0, 613, 211,
	214, 0, 217, 0, 1758, 0, 1758, 0, 224, 0,
	0, 0, 0, 0, 0, 254, 255, 0, 0, 0,
	0, 245, 248, 1127, 1128, 940, 941, 249, 250, 294,
	295, 0, 657, 711, 713, 707, 708, 709, 0, 0,
	0, 0, 0, 430, 0, 0, 0, 588, 0, 590,
	0, 0, 0, 749, 743, 745, 812, 90, 749, 8,
	77, 74, 0, 19, 0, 0, 19, 19, 0, 19,
	259, 0, 1604, 1602, 1603, 1540, 1589, 0, 1566, 0,
	1567, 1568, 1569, 0, 0, 1562, 0, 1563, 1564, 1565,
	1556, 0, 1557, 1558, 0, 1559, 1560, 257, 0, 1471,
	838, 0, 630, 643, 625, 0, 632, 0, 1134, 614,
	643, 616, 0, 632, 657, 679, 657, 0, 324, 0,
	329, 0, 0, 345, 347, 348, 349, 334, 335, 558,
	310, 311, 303, 304, 305, 306, 307, 308, 309, 313,
	100, 0, 283, 284, 0, 0, 0, 144, 145, 146,
	147, 148, 149, 151, 135, 579, 581, 932, 944, 0,
	935, 0, 154, 194, 127, 0, 0, 1473, 1474, 1475,
	1476, 1477, 1481, 0, 1483, 1485, 1487, 1489, 0, 1507,
	-2, -2, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1492, 1505, 1506, 0, 0, 0,
	0, 0, 0, 1503, 1503, 1498, 0, 1263, 0, 1284,
	1288, 0, 0, 0, 91, 1465, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 0, 0, 1472, 0, 0,
	0, 1467, 1468, 0, 0, 0, 1361, 0, 0, 1367,
	1368, 1369, 0, 638, 0, 1431, 1407, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 769, 0,
	647, 649, 650, 0, 677, 690, 695, 696, 699, 52,
	57, 277, 278, 0, 0, 272, 0, -2, 852, 0,
	0, 867, 686, 0, 0, 881, 428, 926, 0, 0,
	0, 942, 965, 971, 0, 975, 0, 0, 0, 1004,
	868, 873, 874, 875, 869, 870, 876, 877, 0, 684,
	0, 0, 781, 482, 0, 538, 539, 487, 1721, 492,
	741, 741, 499, 493, 500, 542, 501, 502, 503, 0,
	741, 741, 537, 540, 527, 541, 540, 530, 531, 0,
	549, 554, 550, 0, 552, 507, 508, 686, 359, 360,
	401, 401, 401, 384, 401, 0, 0, 372, 1609, 0,
	0, 0, 0, 381, 1609, 0, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 0, 0, 1609, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 1609, 1609, 1609, 0, 1609, 1609, 1609,
	1609, 1609, 1113, 1609, 0, 985, 391, 392, 393, 394,
	399, 400, 0, 425, 0, 0, 0, 428, 0, 915,
	754, 0, 755, 756, 752, 783, 807, 807, 0, 807,
	787, 1133, 0, 0, 222, 223, 212, 0, 213, 0,
	225, 226, 0, 228, 229, 230, 237, 1668, 1735, 232,
	234, 0, 0, 238, 251, 252, 253, 0, 0, 243,
	244, 0, 0, 297, 298, 300, 0, 705, 576, 1131,
	577, 578, 582, 0, 0, 585, 586, 587, 852, 0,
	920, 921, 741, 0, 750, 0, 746, 813, 0, 815,
	0, 741, 0, 75, 19, 0, 68, 65, 0, 0,
	0, 0, 0, 1584, 1536, 1605, 0, 0, 0, 1586,
	0, 0, 0, 0, 58, 659, 621, 0, 624, 640,
	0, 644, 0, 0, 636, 629, 633, 0, 0, 653,
	615, 0, 0, 620, 705, 680, 1184, 0, 330, 344,
	0, 0, 0, 0, 138, 929, 0, 139, 143, 133,
	0, 0, 0, 934, 0, 931, 936, 0, 153, 0,
	0, 128, 129, 995, 1000, 0, 1482, 1484, 1486, 1488,
	1490, 0, 1493, 1503, 1503, 1499, 0, 1494, 0, 1496,
	0, 1473, 0, 1289, 0, 0, 0, 0, 0, 0,
	1351, 1352, 0, 0, 1356, 0, 1358, 1359, 1360, 1362,
	0, 0, 0, 1366, 0, 1405, 1423, 1409, 1412, 0,
	1416, 0, 1418, 0, 693, 0, 0, 1326, 1326, 1326,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 1282, 1283, 0, 770, 659,
	0, 0, 0, 702, 700, 701, 279, 267, 269, 0,
	0, 0, 840, 841, 843, 0, 846, 847, 848, 0,
	853, 854, 856, 857, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1653, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 851, 686, 0,
	976, 888, 1609, 432, 0, 0, 928, 0, 904, 0,
	0, 0, -2, 0, 1071, 0, 0, 0, 0, 1006,
	0, 0, 0, 599, 603, 23, 687, 0, 742, 485,
	0, 486, 537, 494, 495, 741, 1133, 519, 520, 741,
	537, 537, 540, 0, 551, 0, 984, 362, 0, 1142,
	1143, 402, 0, 1149, 1158, 975, 1216, 0, 1158, 0,
	0, 1160, 1161, 0, 0, 0, 0, 385, 386, 0,
	371, 0, 0, 0, 0, 370, 0, 0, 412, 0,
	0, 0, 0, 1610, 1609, 1609, 0, 379, 380, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 1609, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 0, 1119,
	1120, 888, 1609, 0, 0, 0, 432, 902, 911, 0,
	0, 0, 0, 0, 0, 774, 0, 0, 773, 0,
	0, 0, 0, 0, 686, 808, 0, 810, 811, 785,
	-2, 0, 754, 790, 1470, 215, 216, 0, 0, 221,
	239, 241, 0, 0, 0, 240, 242, 246, 247, 296,
	299, 301, 675, 0, 0, 0, 1027, 0, 591, 739,
	744, 751, 814, 816, 91, 747, 739, 0, 78, 19,
	77, 69, 70, 0, 19, 0, 0, 0, 0, 1594,
	1593, 1579, 0, 1580, 1591, 1596, 0, 1599, 0, 663,
	0, 0, 643, 645, 0, 0, 643, 0, 0, 652,
	0, 0, 643, 678, 0, 0, 559, 101, 350, 0,
	0, 0, 0, 0, 580, 0, 933, 135, 0, 0,
	155, 0, 0, 998, 0, 1000, 1469, 1495, 1497, 0,
	1504, 1500, 1264, 1272, 1285, 0, 0, 1291, 1303, 1303,
	0, 1294, 1592, 1592, 1297, 1588, 1590, 1588, 1303, 1303,
	0, 92, 0, 0, 1357, 0, 0, 0, 639, 0,
	0, 0, 1324, 1326, 1326, 1332, 1327, 1333, 1334, 1326,
	1326, 1326, 1326, 1339, 1326, 1326, 1326, 1326, 1326, 1326,
	1326, 1326, 1322, 648, 663, 691, 692, 697, 698, 0,
	271, 0, 0, 845, 0, 0, 0, 858, 0, 0,
	892, 889, 890, 891, 0, 923, 433, 434, 435, 436,
	0, 0, 0, 927, 0, 915, 897, 0, 0, 0,
	966, 967, 968, 969, 970, -2, 979, 0, 0, 1135,
	0, 0, 0, 1135, 1135, 1135, 1014, 0, 1005, 651,
	0, -2, 0, 0, 601, 0, 0, 782, 488, 741,
	512, 0, 528, 741, 741, 537, 555, 0, 361, 403,
	0, 1148, 1173, 1159, 1173, 1217, 1173, 1173, 975, 0,
	403, 0, 0, 373, 409, 0, 0, 0, 0, 369,
	406, 699, 410, 411, 413, 0, 415, 375, 387, 388,
	389, 390, 0, 0, 0, 382, 395, 396, 397, 398,
	1081, 1082, 1083, 1086, 1087, 1088, 1089, 0, 0, 1092,
	1093, 1094, 1095, 1096, 1170, 1171, 1172, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1121, 1122, 1123, 1124, 1125, 1126,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 0, 0,
	1116, 0, 892, 0, 0, 0, 0, 923, 904, 0,
	914, 0, 916, 917, 0, 0, 622, 741, 289, 0,
	777, 771, 0, 760, 775, 776, 763, 0, 765, 0,
	761, 762, 741, 753, 784, 809, 786, 789, 791, 792,
	798, 0, 0, 0, 0, 218, 219, 220, 227, 0,
	452, 233, 706, 1132, 583, 584, 1028, 1029, 589, 737,
	0, 0, 737, 73, 76, 0, 71, 0, 0, 0,
	0, 63, 61, 1587, 0, 0, 665, 115, 0, 0,
	0, 641, 0, 646, 643, 628, 637, 627, 634, 635,
	654, 643, 619, 618, 1185, 325, 0, 930, 135, 140,
	141, 142, 136, 134, 937, 0, 939, 0, 996, 1000,
	0, 0, 1501, 1290, 1273, 1292, 1304, 1305, 1293, 1274,
	1295, 1296, 1298, 1299, 1300, 1301, 1302, 1275, 1353, 0,
	1355, 1363, 1364, 0, 1413, 1417, 0, 0, 0, 1330,
	1331, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 693, 1323, 0, 665, 703, 704, 833,
	836, 842, 844, 0, 855, 0, 0, 871, 864, 0,
	0, 883, 884, 894, 0, 0, 0, 438, 439, 0,
	0, 0, 451, 447, 448, 449, 429, 922, 911, 900,
	0, 0, 910, 0, 980, 1609, 1609, 1609, 0, 0,
	1136, 1137, 1139, 1140, 1141, 0, 0, 1135, 0, 0,
	0, 1017, 0, 0, 1008, 0, 807, 0, 0, 741,
	600, 603, 604, 685, 489, 741, 532, 529, 741, 358,
	374, 404, 0, -2, 0, 1174, 0, 1162, 1174, 0,
	0, 1173, 0, 363, 403, 0, 0, 0, 416, 419,
	420, 417, 1212, 0, 418, 0, 408, 414, 1084, 1085,
	0, 1090, 1091, 0, 1115, 0, 0, 421, 0, 0,
	0, 422, 427, 897, 0, 912, 0, 918, 919, 693,
	0, 0, 757, 778, 0, 0, 758, 0, 759, 764,
	766, 288, 793, 0, 0, 795, 796, 797, 788, 235,
	727, 0, 0, 748, 728, 0, 19, 0, 0, 66,
	1597, 1600, 667, 0, 664, 116, 0, 0, 0, 0,
	642, 626, 617, 137, 132, 938, 118, 999, 1001, 997,
	0, 1365, 0, 1326, 1325, 1319, 0, 667, 0, 861,
	859, 871, 863, 878, 893, 882, 0, 924, 925, 0,
	440, 441, 0, 444, 450, 895, 896, 0, 0, 908,
	0, 0, 0, 0, 972, 1071, 0, 988, 0, 1073,
	1609, 0, -2, 0, -2, 1020, 0, 1015, 0, 1007,
	0, 1010, 741, 741, -2, 597, 602, 0, 513, 533,
	405, 1175, -2, 1188, 1190, 0, 985, 1193, 1194, 0,
	0, 0, 0, 0, 0, 1238, 1202, 0, 0, 1206,
	1207, 1208, 0, 0, 1211, 0, 1519, 1520, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 1156, 364, 365,
	0, 367, 368, 1213, 407, 1609, 377, 1114, 1117, 1118,
	426, 423, 424, 900, 903, 623, 688, 290, 291, 779,
	0, 772, 802, 799, 0, 0, 738, 740, 67, 72,
	0, 0, 669, 0, 666, 0, 660, 662, 126, 631,
	88, 109, 0, 1354, 1404, 1329, 0, 1320, 0, 1314,
	1315, 1316, 1321, 669, 0, 862, 0, 879, 880, 0,
	0, 437, 442, 0, 445, 446, 901, 898, 899, 0,
	906, 0, 0, 961, 1588, 0, 981, 982, 1129, 1130,
	983, 986, 1138, 1072, 0, 0, 1071, 1030, -2, 1078,
	0, 992, 118, 1030, 1011, 0, 1018, 0, 1016, 1009,
	693, 598, 1189, 1191, 1192, 1195, 1196, 1197, 1243, 1244,
	1245, 0, 0, 1200, 1240, 1241, 1242, 1201, 0, 0,
	0, 0, 0, 1517, 1518, 1236, 0, 0, 1163, 1165,
	1166, 1167, 1168, 1169, 1164, 0, 0, 0, 1155, 1157,
	366, 0, 1609, 913, 287, 0, 0, 803, 805, 800,
	801, 62, 64, 79, 0, 668, 117, 0, 80, 0,
	106, 0, 119, 120, 0, 0, 0, 0, 1328, 1317,
	0, 0, 0, 0, 0, 1521, 1522, 1523, 0, 658,
	0, 860, 0, 885, 0, 887, 443, 905, 908, 0,
	954, 0, 699, 0, 1074, 1075, 987, 1032, 0, 984,
	1080, 1609, 994, 1032, 1003, 0, 1013, 0, 1022, 0,
	1019, 688, 1198, 1199, 0, 0, 1420, 1609, 0, 1231,
	0, 954, 954, 954, 954, 0, 376, 0, 780, 794,
	0, 0, 0, 89, 93, 0, 115, 112, 0, 121,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 1310,
	1311, 1312, 1313, 0, 872, 886, 907, 909, 953, 962,
	963, 699, 991, 0, 1069, 1079, 0, 993, 1012, 1021,
	0, 1024, 596, 1239, 0, 1205, 0, 1210, 1219, 1232,
	0, 0, 1144, 0, 1146, 0, 1150, 0, 1152, 0,
	0, 378, 804, 806, 0, 671, 661, 82, 0, 0,
	110, 111, 113, 0, 122, 0, 124, 125, 0, 1307,
	1308, 1309, 849, 955, 1609, 0, 0, 959, 960, 964,
	0, 1057, 0, 0, 1063, 0, 1070, 1084, 1023, 1203,
	1209, 1218, 1220, 1221, 0, 1233, 1234, 1235, 1237, 954,
	954, 954, 954, 1154, 670, 0, 1002, 0, 94, 0,
	96, 98, 99, 1176, 107, 108, 114, 123, 1318, 0,
	957, 0, 1033, 0, 1035, 0, 0, 0, 0, 0,
	1067, 0, 1204, 1222, 0, 1223, 0, 0, 0, 1145,
	1147, 1151, 1153, 672, 83, 84, 0, 95, 0, 0,
	956, 958, 0, 1037, 0, 1058, 0, 0, 0, 0,
	0, 0, 0, 1224, 1226, 1227, 0, 0, 1225, 0,
	0, 97, 1177, 1034, 1031, 0, 1069, 1059, 0, 1061,
	0, 0, 0, 0, 1228, 1230, 1229, 85, 86, 87,
	0, 0, 1039, 0, 1055, 1060, 1062, 1064, 0, 1068,
	1066, 1178, 1038, 0, 1051, 1036, 0, 1065, 1040, -2,
	0, 1056, 1041, -2, 0, 1049, 0, 0, 1042, 1050,
	0, 1045, 0, 0, 0, 1044, 0, -2, 1052, 0,
	0, 1046, -2, 0, 1054, 1053,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 592,
	123, 122, 124, 3, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 594, 135, 595, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:748
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:755
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:761
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:775
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:798
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:845
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:852
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:872
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:878
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:885
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:899
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:908
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:952
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:960
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:977
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:986
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1000
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1006
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1010
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1039
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1058
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1064
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1085
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1098
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1109
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1115
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1119
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1132
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1144
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1158
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1162
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1179
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1185
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1194
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1205
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1209
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1215
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1219
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1225
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1229
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1235
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1259
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1278
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1282
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1286
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1302
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1310
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1317
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1322
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1329
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1338
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1362
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1366
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1378
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1396
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1413
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1440
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1444
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1449
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1453
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1483
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1555
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1572
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1576
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1580
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1584
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1588
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1599
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1603
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1616
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1625
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1629
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1844
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1868
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1872
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1878
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1885
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1897
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1905
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1911
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1921
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1928
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1935
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1994
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2005
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2011
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2055
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2063
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2086
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2154
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2158
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2162
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2172
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2178
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2182
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2188
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2192
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2230
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2234
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2238
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2246
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2346
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2350
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2372
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2376
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2382
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2388
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2392
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2396
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2434
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2554
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2558
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2570
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2575
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2576
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2577
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2618
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2622
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2628
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2644
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2654
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2663
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2683
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2692
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2700
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2704
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2708
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2716
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2731
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2735
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2739
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2743
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2755
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2764
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2795
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2799
		{
			yyVAL.str = string("COLUMN")
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2825
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2829
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2835
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2916
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2920
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2955
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2968
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2974
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3018
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3100
		{
			yyVAL.item = nil
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3105
		{
			yyVAL.item = nil
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3180
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3191
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3195
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3252
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3264
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3277
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3285
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3324
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3326
		{
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3354
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3358
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3362
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3459
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3466
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3475
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3479
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3484
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3488
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3494
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3536
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3542
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3546
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3552
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3558
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3562
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3566
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3576
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3600
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3627
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3631
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3637
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3693
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3709
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3761
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3772
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3776
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3782
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3787
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3794
		{
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3796
		{
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3799
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3808
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3812
		{
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3817
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3826
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3833
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3839
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3847
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3854
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3861
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3881
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3891
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3895
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3901
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3908
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3914
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3922
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3936
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3955
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3959
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3968
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3972
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3987
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3991
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3997
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4001
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4007
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4011
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4017
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4022
		{
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4033
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4037
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4044
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4053
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4063
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4069
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4073
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4082
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4095
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4109
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4127
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4152
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4163
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4176
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4180
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4185
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4189
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4196
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4201
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4214
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4222
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4226
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4230
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4256
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4260
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4278
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4287
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4310
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4316
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4322
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4326
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4337
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4341
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4345
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4350
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4354
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4358
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4367
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4379
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4383
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4397
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4401
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4451
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4459
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4468
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4484
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4492
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4567
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4571
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4575
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4584
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4588
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4610
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4619
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4625
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4629
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4639
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4648
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4653
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4661
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4667
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4675
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4708
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4717
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4726
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4736
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4740
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4750
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4754
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4758
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4762
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4778
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4782
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4788
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4804
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4810
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4814
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4818
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4824
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4828
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4838
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4848
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4854
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4858
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4868
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4881
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4887
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4893
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4924
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4928
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4957
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4961
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4969
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4978
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4982
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4986
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4990
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4995
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4999
		{
			yyVAL.str = yyDollar[1].str
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5003
		{
			yyVAL.str = yyDollar[2].str
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5009
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5019
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5023
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5037
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 833:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5072
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5082
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5088
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5094
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5104
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5109
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5122
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5126
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5132
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5147
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5151
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5162
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5174
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5179
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5192
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5196
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5208
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5216
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5222
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5234
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5243
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5254
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5266
		{
			yyVAL.str = yyDollar[1].str
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5270
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5276
		{
			yyVAL.str = "OR REPLACE"
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5280
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5284
		{
			yyVAL.str = "DEFINER = "
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5288
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5293
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5297
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5311
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5319
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5335
		{
			yyVAL.str = yyDollar[1].str
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5339
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5352
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5394
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5409
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5433
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5445
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5451
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5458
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5466
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5486
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5494
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5509
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5513
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5518
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5522
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5529
		{
			yyVAL.str = yyDollar[3].str
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5534
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5538
		{
			yyVAL.str = yyDollar[2].str
		}
	case 913:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5544
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5558
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5572
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5578
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5590
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5599
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5608
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5617
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5622
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5628
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5636
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5742
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5746
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5762
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5766
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5772
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5782
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5786
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5790
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5799
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5805
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5818
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5827
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5834
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5843
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5847
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5853
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5898
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5921
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5943
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5947
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5951
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5955
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5959
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5965
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5969
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5975
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5985
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5989
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5993
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5997
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6001
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6007
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6032
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6036
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6045
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6051
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6055
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6065
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6078
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6084
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6095
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  *yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6106
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6139
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6161
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6168
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6178
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6197
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6201
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6206
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6210
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6217
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6241
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6255
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6263
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6277
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6284
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6307
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6314
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6325
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6332
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6343
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6350
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6357
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6384
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6397
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6411
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6429
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6442
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6448
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6452
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6458
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6467
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6481
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6487
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6491
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6497
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6504
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6513
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6517
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6526
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6531
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6535
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6540
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6544
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6554
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6558
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6569
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6585
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6593
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6604
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6613
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6623
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6633
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6637
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6642
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6646
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6655
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6661
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6665
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6680
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6686
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6690
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6694
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6700
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6704
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6708
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6724
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6729
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6733
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6737
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6741
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6745
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6749
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6753
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6757
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6765
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6769
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6773
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6777
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6785
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6789
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6793
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6797
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6801
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6805
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6809
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6813
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6817
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6821
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6837
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6843
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6847
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6859
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6863
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6877
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6881
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6885
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6889
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6907
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6916
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6921
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6934
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6938
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6944
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6948
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6952
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6958
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6962
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6968
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6977
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6986
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7009
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7034
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7048
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7054
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7063
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7072
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7081
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7090
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7100
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7114
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7128
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7134
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7140
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7159
		{
			yyVAL.str = ""
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7163
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7183
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7189
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7224
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7230
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7234
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7240
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7244
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7248
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7252
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7256
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7260
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7289
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7330
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7334
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7349
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7353
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7359
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7363
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7369
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7381
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7388
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7395
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7402
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7409
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7418
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7424
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7430
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7434
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7442
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7458
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7462
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7466
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7475
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7480
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7484
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7500
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7510
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7514
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7518
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7522
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7526
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7530
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7560
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7564
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7568
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7596
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7609
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7617
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7635
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7639
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7643
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7651
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7657
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7665
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7673
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7686
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7695
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7701
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7705
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7711
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7720
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7732
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7766
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7779
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7792
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7804
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7818
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7833
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7848
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7865
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7880
		{
		}
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7887
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7891
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7895
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7901
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7905
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7909
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7913
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7919
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7923
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7927
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7933
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7941
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7955
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7962
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7971
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7976
		{
			yyVAL.str = ","
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7980
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7992
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8029
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8039
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8049
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8059
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8077
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8087
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8107
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8127
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8147
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8157
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8167
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8177
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8197
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8216
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8240
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8248
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8275
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8283
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8291
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8299
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8307
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8318
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8340
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8351
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8433
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8444
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8478
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8486
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8496
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8506
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8514
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8525
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8534
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8543
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8551
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8561
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8569
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8593
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8612
		{
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8614
		{
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8655
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8666
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8670
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8674
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8680
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8689
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8695
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8699
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8706
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8710
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8714
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8722
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8726
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8730
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8734
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8740
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8744
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8748
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8752
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8756
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8760
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8764
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8768
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8772
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8776
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8784
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8788
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8792
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8796
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8800
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8804
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8808
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8812
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8816
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8820
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8830
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8836
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8840
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8855
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8869
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8881
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8885
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8903
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8909
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8922
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8927
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8933
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8937
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8950
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8955
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8959
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8963
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8967
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8971
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8982
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8996
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9000
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9007
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9018
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9023
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9041
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9078
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9091
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9104
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9130
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9210
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9237
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9279
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9315
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9368
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9380
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9400
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9420
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9440
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9456
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9482
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9495
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9508
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9520
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9532
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9544
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9568
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9592
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9604
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9616
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9642
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9657
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9665
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9674
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9707
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9712
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9718
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9725
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9729
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9734
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9738
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9744
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9750
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9757
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9764
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9773
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9780
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9787
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9810
		{
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9812
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9822
		{
			yyVAL.str = ""
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9826
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const UNLOCK = 57633
const DAY = 57634
const NEVER = 57635
const PUMP = 57636
const SECOND = 57637
const ASCII = 57638
const COALESCE = 57639
const COLLATION = 57640
const HOUR = 57641
const MICROSECOND = 57642
const MINUTE = 57643
const MONTH = 57644
const QUARTER = 57645
const REPEAT = 57646
const REVERSE = 57647
const ROW_COUNT = 57648
const WEEK = 57649
const REVOKE = 57650
const FUNCTION = 57651
const PRIVILEGES = 57652
const TABLESPACE = 57653
const EXECUTE = 57654
const SUPER = 57655
const GRANT = 57656
const OPTION = 57657
const REFERENCES = 57658
const REPLICATION = 57659
const SLAVE = 57660
const CLIENT = 57661
const USAGE = 57662
const RELOAD = 57663
const FILE = 57664
const TEMPORARY = 57665
const ROUTINE = 57666
const EVENT = 57667
const SHUTDOWN = 57668
const NULLX = 57669
const AUTO_INCREMENT = 57670
const APPROXNUM = 57671
const SIGNED = 57672
const UNSIGNED = 57673
const ZEROFILL = 57674
const ENGINES = 57675
const LOW_CARDINALITY = 57676
const ADMIN_NAME = 57677
const RANDOM = 57678
const SUSPEND = 57679
const ATTRIBUTE = 57680
const HISTORY = 57681
const REUSE = 57682
const CURRENT = 57683
const OPTIONAL = 57684
const FAILED_LOGIN_ATTEMPTS = 57685
const PASSWORD_LOCK_TIME = 57686
const UNBOUNDED = 57687
const SECONDARY = 57688
const USER = 57689
const IDENTIFIED = 57690
const CIPHER = 57691
const ISSUER = 57692
const X509 = 57693
const SUBJECT = 57694
const SAN = 57695
const REQUIRE = 57696
const SSL = 57697
const NONE = 57698
const PASSWORD = 57699
const MAX_QUERIES_PER_HOUR = 57700
const MAX_UPDATES_PER_HOUR = 57701
const MAX_CONNECTIONS_PER_HOUR = 57702
const MAX_USER_CONNECTIONS = 57703
const FORMAT = 57704
const VERBOSE = 57705
const CONNECTION = 57706
const TRIGGERS = 57707
const PROFILES = 57708
const LOAD = 57709
const INFILE = 57710
const TERMINATED = 57711
const OPTIONALLY = 57712
const ENCLOSED = 57713
const ESCAPED = 57714
const STARTING = 57715
const LINES = 57716
const ROWS = 57717
const IMPORT = 57718
const MODUMP = 57719
const OVER = 57720
const PRECEDING = 57721
const FOLLOWING = 57722
const GROUPS = 57723
const DATABASES = 57724
const TABLES = 57725
const EXTENDED = 57726
const FULL = 57727
const PROCESSLIST = 57728
const FIELDS = 57729
const COLUMNS = 57730
const OPEN = 57731
const ERRORS = 57732
const WARNINGS = 57733
const INDEXES = 57734
const SCHEMAS = 57735
const NODE = 57736
const LOCKS = 57737
const NAMES = 57738
const GLOBAL = 57739
const SESSION = 57740
const ISOLATION = 57741
const LEVEL = 57742
const READ = 57743
const WRITE = 57744
const ONLY = 57745
const REPEATABLE = 57746
const COMMITTED = 57747
const UNCOMMITTED = 57748
const SERIALIZABLE = 57749
const LOCAL = 57750
const EVENTS = 57751
const PLUGINS = 57752
const CURRENT_TIMESTAMP = 57753
const DATABASE = 57754
const CURRENT_TIME = 57755
const LOCALTIME = 57756
const LOCALTIMESTAMP = 57757
const UTC_DATE = 57758
const UTC_TIME = 57759
const UTC_TIMESTAMP = 57760
const REPLACE = 57761
const CONVERT = 57762
const SEPARATOR = 57763
const TIMESTAMPDIFF = 57764
const CURRENT_DATE = 57765
const CURRENT_USER = 57766
const CURRENT_ROLE = 57767
const SECOND_MICROSECOND = 57768
const MINUTE_MICROSECOND = 57769
const MINUTE_SECOND = 57770
const HOUR_MICROSECOND = 57771
const HOUR_SECOND = 57772
const HOUR_MINUTE = 57773
const DAY_MICROSECOND = 57774
const DAY_SECOND = 57775
const DAY_MINUTE = 57776
const DAY_HOUR = 57777
const YEAR_MONTH = 57778
const SQL_TSI_HOUR = 57779
const SQL_TSI_DAY = 57780
const SQL_TSI_WEEK = 57781
const SQL_TSI_MONTH = 57782
const SQL_TSI_QUARTER = 57783
const SQL_TSI_YEAR = 57784
const SQL_TSI_SECOND = 57785
const SQL_TSI_MINUTE = 57786
const RECURSIVE = 57787
const CONFIG = 57788
const DRAINER = 57789
const MATCH = 57790
const AGAINST = 57791
const BOOLEAN = 57792
const LANGUAGE = 57793
const WITH = 57794
const QUERY = 57795
const EXPANSION = 57796
const ADDDATE = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const CAST = 57801
const COUNT = 57802
const APPROX_COUNT_DISTINCT = 57803
const APPROX_PERCENTILE = 57804
const CURDATE = 57805
const CURTIME = 57806
const DATE_ADD = 57807
const DATE_SUB = 57808
const EXTRACT = 57809
const GROUP_CONCAT = 57810
const MAX = 57811
const MID = 57812
const MIN = 57813
const NOW = 57814
const POSITION = 57815
const SESSION_USER = 57816
const STD = 57817
const STDDEV = 57818
const MEDIAN = 57819
const STDDEV_POP = 57820
const STDDEV_SAMP = 57821
const SUBDATE = 57822
const SUBSTR = 57823
const SUBSTRING = 57824
const SUM = 57825
const SYSDATE = 57826
const SYSTEM_USER = 57827
const TRANSLATE = 57828
const TRIM = 57829
const VARIANCE = 57830
const VAR_POP = 57831
const VAR_SAMP = 57832
const AVG = 57833
const ARROW = 57834
const ROW = 57835
const OUTFILE = 57836
const HEADER = 57837
const MAX_FILE_SIZE = 57838
const FORCE_QUOTE = 57839
const UNUSED = 57840
const BINDINGS = 57841
const DO = 57842
const DECLARE = 57843
const KILL = 57844

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8236

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 87,
	21, 517,
	-2, 498,
	-1, 95,
	212, 715,
	-2, 761,
	-1, 114,
	42, 355,
	212, 355,
	239, 362,
	240, 362,
	409, 355,
	-2, 383,
	-1, 420,
	288, 88,
	385, 88,
	-2, 1496,
	-1, 479,
	67, 1127,
	-2, 1636,
	-1, 480,
	67, 1145,
	-2, 1607,
	-1, 485,
	67, 1146,
	-2, 1635,
	-1, 506,
	67, 1059,
	-2, 1684,
	-1, 507,
	67, 1060,
	-2, 1683,
	-1, 508,
	67, 1061,
	-2, 1673,
	-1, 509,
	67, 1648,
	-2, 1668,
	-1, 510,
	67, 1649,
	-2, 1669,
	-1, 511,
	67, 1650,
	-2, 1675,
	-1, 512,
	67, 1651,
	-2, 1658,
	-1, 513,
	67, 1652,
	-2, 1666,
	-1, 514,
	67, 1653,
	-2, 1676,
	-1, 515,
	67, 1654,
	-2, 1677,
	-1, 516,
	67, 1655,
	-2, 1682,
	-1, 517,
	67, 1656,
	-2, 1687,
	-1, 518,
	67, 1657,
	-2, 1688,
	-1, 520,
	67, 1124,
	-2, 1488,
	-1, 527,
	67, 1133,
	-2, 1514,
	-1, 531,
	67, 1137,
	-2, 1553,
	-1, 532,
	67, 1138,
	-2, 1631,
	-1, 540,
	67, 1148,
	-2, 1616,
	-1, 542,
	67, 1150,
	-2, 1626,
	-1, 554,
	67, 1040,
	-2, 1678,
	-1, 555,
	67, 1041,
	-2, 1679,
	-1, 556,
	67, 1042,
	-2, 1680,
	-1, 563,
	21, 518,
	-2, 481,
	-1, 613,
	404, 383,
	405, 383,
	-2, 356,
	-1, 655,
	103, 1488,
	114, 1488,
	133, 1488,
	-2, 1286,
	-1, 693,
	21, 518,
	-2, 481,
	-1, 792,
	21, 517,
	-2, 951,
	-1, 1104,
	67, 1193,
	-2, 1633,
	-1, 1105,
	67, 1194,
	-2, 1634,
	-1, 1263,
	1, 741,
	68, 741,
	520, 741,
	-2, 748,
	-1, 1381,
	133, 1296,
	-2, 1294,
	-1, 1383,
	133, 641,
	-2, 1291,
	-1, 1384,
	133, 642,
	-2, 1292,
	-1, 1673,
	68, 1272,
	134, 1272,
	-2, 1618,
	-1, 1674,
	68, 1268,
	134, 1268,
	-2, 1617,
	-1, 1675,
	68, 1250,
	134, 1250,
	-2, 1604,
	-1, 1676,
	68, 1251,
	134, 1251,
	-2, 1609,
	-1, 1677,
	68, 1252,
	134, 1252,
	-2, 1541,
	-1, 1678,
	68, 1253,
	134, 1253,
	-2, 1535,
	-1, 1679,
	68, 1254,
	134, 1254,
	-2, 1479,
	-1, 1680,
	68, 1255,
	134, 1255,
	-2, 1606,
	-1, 1681,
	68, 1256,
	134, 1256,
	-2, 1539,
	-1, 1682,
	68, 1257,
	134, 1257,
	-2, 1534,
	-1, 1683,
	68, 1258,
	134, 1258,
	-2, 1527,
	-1, 1685,
	68, 1241,
	134, 1241,
	-2, 1636,
	-1, 1686,
	68, 1270,
	134, 1270,
	-2, 1607,
	-1, 1687,
	68, 1270,
	134, 1270,
	-2, 1635,
	-1, 1688,
	68, 1270,
	134, 1270,
	-2, 1497,
	-1, 1689,
	68, 1268,
	134, 1268,
	-2, 1626,
	-1, 1690,
	68, 1265,
	134, 1265,
	-2, 1519,
	-1, 1691,
	67, 1223,
	68, 1223,
	134, 1223,
	347, 1223,
	348, 1223,
	349, 1223,
	-2, 1478,
	-1, 1692,
	67, 1224,
	68, 1224,
	134, 1224,
	347, 1224,
	348, 1224,
	349, 1224,
	-2, 1480,
	-1, 1693,
	67, 1227,
	68, 1227,
	134, 1227,
	347, 1227,
	348, 1227,
	349, 1227,
	-2, 1608,
	-1, 1694,
	67, 1229,
	68, 1229,
	134, 1229,
	347, 1229,
	348, 1229,
	349, 1229,
	-2, 1591,
	-1, 1695,
	67, 1231,
	68, 1231,
	134, 1231,
	347, 1231,
	348, 1231,
	349, 1231,
	-2, 1540,
	-1, 1696,
	67, 1233,
	68, 1233,
	134, 1233,
	347, 1233,
	348, 1233,
	349, 1233,
	-2, 1523,
	-1, 1697,
	67, 1234,
	68, 1234,
	134, 1234,
	347, 1234,
	348, 1234,
	349, 1234,
	-2, 1524,
	-1, 1698,
	67, 1236,
	68, 1236,
	134, 1236,
	347, 1236,
	348, 1236,
	349, 1236,
	-2, 1477,
	-1, 1699,
	68, 1275,
	134, 1275,
	347, 1275,
	348, 1275,
	349, 1275,
	-2, 1502,
	-1, 1700,
	68, 1275,
	134, 1275,
	347, 1275,
	348, 1275,
	349, 1275,
	-2, 1515,
	-1, 1701,
	68, 1278,
	134, 1278,
	347, 1278,
	348, 1278,
	349, 1278,
	-2, 1498,
	-1, 1702,
	68, 1275,
	134, 1275,
	347, 1275,
	348, 1275,
	349, 1275,
	-2, 1576,
	-1, 1716,
	1, 742,
	68, 742,
	520, 742,
	-2, 748,
	-1, 1770,
	21, 517,
	-2, 608,
	-1, 1941,
	65, 429,
	134, 429,
	-2, 856,
	-1, 2208,
	87, 748,
	129, 748,
	166, 748,
	169, 748,
	-2, 804,
	-1, 2210,
	273, 919,
	-2, 898,
	-1, 2240,
	65, 429,
	134, 429,
	-2, 857,
	-1, 2277,
	87, 748,
	129, 748,
	166, 748,
	169, 748,
	-2, 805,
	-1, 2305,
	273, 919,
	-2, 899,
	-1, 2716,
	68, 776,
	134, 776,
	-2, 748,
	-1, 2720,
	68, 776,
	134, 776,
	-2, 748,
	-1, 2734,
	68, 780,
	134, 780,
	-2, 748,
	-1, 2739,
	68, 781,
	134, 781,
	-2, 748,
}

const yyPrivate = 57344

const yyLast = 29885

var yyAct = [...]int{
	450, 2720, 1168, 2722, 2728, 2719, 2696, 1084, 430, 2561,
	2344, 432, 2685, 2642, 452, 2598, 2317, 1767, 2627, 2527,
	2626, 2459, 2507, 2262, 1663, 2342, 2272, 1341, 2199, 995,
	2531, 819, 949, 2515, 2360, 1307, 477, 2343, 2260, 132,
	132, 2327, 564, 1080, 1763, 132, 367, 374, 372, 31,
	374, 1222, 1917, 2233, 1268, 2098, 2306, 654, 1944, 1087,
	923, 1798, 2094, 1367, 1961, 2326, 934, 135, 1329, 1671,
	2221, 2099, 379, 1299, 131, 131, 1762, 1832, 2214, 2103,
	358, 434, 422, 1360, 385, 559, 424, 2171, 1982, 1569,
	2154, 2114, 2109, 2111, 687, 1723, 1669, 2092, 597, 2041,
	1220, 429, 1831, 1565, 1225, 936, 1361, 1378, 1381, 1368,
	1960, 1239, 658, 1996, 465, 87, 1322, 1564, 1302, 1369,
	1919, 2281, 559, 1914, 1270, 1873, 1167, 1751, 661, 42,
	1280, 132, 1247, 371, 19, 1722, 855, 370, 7, 1717,
	1259, 1597, 1078, 1566, 368, 8, 682, 433, 369, 6,
	1018, 1667, 3, 1709, 86, 1293, 1282, 357, 360, 1576,
	87, 431, 421, 1326, 681, 656, 689, 1651, 1083, 1132,
	1292, 441, 616, 1118, 42, 1069, 31, 1580, 363, 1765,
	1364, 1300, 704, 1230, 900, 1346, 646, 1255, 1077, 987,
	1772, 1288, 1258, 596, 974, 1138, 683, 964, 561, 387,
	563, 1281, 647, 16, 9, 1137, 388, 4, 122, 373,
	1017, 918, 950, 125, 594, 2034, 609, 2034, 1834, 1583,
	127, 2373, 1799, 2198, 1573, 1243, 2548, 1363, 562, 126,
	572, 425, 820, 126, 1158, 38, 116, 96, 660, 724,
	126, 126, 87, 38, 116, 96, 2589, 1819, 126, 126,
	126, 356, 38, 116, 96, 126, 42, 126, 1570, 377,
	976, 19, 2274, 2335, 1827, 7, 2579, 921, 1036, 1029,
	1581, 758, 8, 1158, 128, 2615, 6, 961, 659, 962,
	680, 757, 1310, 1311, 1033, 1026, 123, 558, 1916, 1901,
	123, 2013, 2613, 2006, 626, 955, 956, 123, 123, 946,
	751, 732, 1284, 734, 1054, 1035, 1028, 123, 2630, 2631,
	1086, 977, 123, 739, 123, 740, 1023, 756, 549, 573,
	548, 550, 551, 2369, 552, 553, 1874, 1070, 2358, 1074,
	2081, 735, 2452, 953, 2455, 382, 952, 955, 956, 2375,
	1915, 2549, 2550, 742, 2602, 2603, 762, 763, 764, 761,
	2082, 2200, 2083, 1073, 2361, 2362, 2363, 2364, 384, 1089,
	132, 697, 707, 1814, 698, 2530, 2183, 2222, 1323, 1577,
	2229, 696, 630, 1315, 2340, 1746, 374, 374, 1154, 132,
	1319, 1151, 565, 2115, 1707, 1153, 1150, 1152, 1156, 1157,
	1648, 1065, 2588, 1155, 2123, 695, 1907, 728, 2125, 692,
	694, 1214, 1213, 2436, 727, 2029, 2324, 754, 755, 737,
	2027, 753, 1922, 1824, 715, 2439, 2119, 1154, 730, 418,
	1151, 2337, 419, 1075, 1153, 1150, 1152, 1156, 1157, 631,
	733, 736, 1155, 2640, 95, 2617, 124, 707, 794, 2629,
	2368, 376, 1072, 375, 2120, 2121, 2370, 691, 2516, 2517,
	2518, 2520, 2519, 2430, 729, 114, 1088, 2469, 2713, 2122,
	1930, 1931, 1932, 1933, 2591, 2592, 738, 719, 2729, 944,
	693, 2651, 2612, 1096, 1099, 1100, 2563, 2658, 1173, 87,
	87, 660, 941, 586, 1097, 2529, 749, 750, 2423, 2559,
	2560, 1582, 2563, 42, 42, 963, 2586, 2707, 627, 2392,
	2391, 1587, 1589, 1590, 423, 657, 2619, 2620, 2117, 2414,
	2688, 666, 665, 667, 2569, 1928, 983, 982, 922, 731,
	717, 659, 968, 1161, 1162, 1163, 1164, 1165, 1166, 1159,
	1160, 741, 2492, 940, 709, 708, 948, 947, 2418, 2736,
	1936, 664, 939, 700, 701, 1071, 2730, 2697, 2380, 2194,
	792, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 1160,
	688, 1598, 2724, 924, 1571, 917, 919, 629, 383, 2450,
	628, 975, 1571, 1820, 1779, 712, 713, 716, 1574, 669,
	659, 1253, 927, 1571, 2037, 2032, 597, 724, 795, 796,
	797, 798, 2087, 897, 2187, 588, 2033, 662, 929, 709,
	708, 378, 955, 956, 799, 585, 584, 1585, 2104, 2107,
	702, 1984, 1986, 2107, 2689, 931, 670, 849, 1988, 955,
	956, 2043, 2042, 954, 1778, 1777, 579, 1313, 2590, 925,
	926, 951, 928, 1775, 2618, 1776, 828, 980, 1314, 559,
	559, 559, 2551, 2552, 999, 999, 978, 979, 765, 39,
	1312, 2116, 633, 1937, 663, 2528, 945, 793, 1584, 1324,
	374, 919, 1021, 1021, 1572, 801, 39, 723, 1024, 1921,
	905, 582, 2126, 2437, 1001, 2030, 2118, 574, 97, 1003,
	634, 1031, 97, 2341, 2723, 1098, 806, 997, 997, 97,
	97, 1800, 577, 2742, 2735, 759, 2670, 97, 97, 97,
	942, 1052, 2336, 1828, 97, 1316, 97, 958, 959, 830,
	831, 575, 1318, 1588, 999, 1037, 999, 697, 1271, 668,
	2416, 1925, 1926, 1066, 2415, 583, 1027, 1085, 2741, 657,
	1034, 718, 2108, 2419, 2420, 1924, 2108, 2101, 2686, 2687,
	2732, 2102, 2105, 2493, 2495, 2496, 2497, 2494, 760, 578,
	1061, 591, 592, 593, 1625, 627, 2714, 1624, 744, 760,
	745, 566, 1005, 563, 1942, 1985, 357, 902, 1271, 904,
	673, 678, 679, 1807, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 724, 1788, 747, 1127,
	1128, 2709, 87, 2106, 760, 1136, 87, 2386, 1802, 2209,
	933, 2700, 1047, 1048, 637, 1183, 2733, 87, 969, 1090,
	965, 2699, 965, 1657, 587, 1189, 87, 957, 2674, 1082,
	960, 42, 1579, 760, 1819, 1191, 2644, 1195, 1196, 1760,
	42, 993, 994, 1661, 629, 1060, 1761, 628, 981, 559,
	1711, 990, 991, 992, 2637, 2694, 1057, 2632, 2135, 2621,
	1056, 636, 1063, 1607, 743, 639, 638, 2710, 1761, 1101,
	356, 1004, 2607, 762, 763, 764, 761, 1579, 1038, 1015,
	1909, 1043, 1016, 1022, 2584, 1788, 898, 1579, 762, 763,
	764, 761, 1079, 1943, 1579, 2583, 2151, 1236, 748, 966,
	1051, 1067, 2645, 1020, 1020, 563, 1215, 1039, 1050, 1570,
	1221, 762, 763, 764, 761, 1059, 1058, 2062, 721, 1055,
	2441, 746, 1076, 2441, 1256, 1788, 999, 1943, 1229, 1263,
	1237, 1081, 1606, 597, 1182, 1169, 1269, 1172, 2608, 999,
	2582, 2581, 1184, 1761, 1710, 1262, 675, 676, 677, 1662,
	2441, 1126, 1190, 2571, 1192, 1660, 2447, 1218, 1629, 1120,
	2446, 2441, 1289, 1289, 1561, 1294, 972, 973, 1240, 1349,
	1294, 722, 2440, 1256, 999, 1309, 1979, 1897, 1895, 1227,
	1228, 1893, 1254, 1068, 1287, 559, 932, 999, 722, 1891,
	1264, 1879, 1091, 1092, 1093, 1094, 1095, 967, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1836, 2441, 2441, 1817, 1256,
	999, 1261, 1340, 132, 132, 1171, 1130, 690, 2228, 2572,
	1811, 1351, 2448, 984, 1291, 132, 1727, 1809, 1193, 1183,
	1183, 1371, 682, 2646, 1134, 1135, 1183, 1183, 2441, 2243,
	1170, 1343, 1761, 1898, 1896, 1177, 1275, 1892, 1342, 1342,
	2136, 1210, 1357, 1278, 1279, 1892, 1804, 760, 1383, 1998,
	1342, 1726, 1658, 1632, 1631, 1269, 1578, 1276, 1320, 999,
	1044, 760, 1945, 1774, 1727, 1822, 1821, 1232, 1813, 1235,
	1743, 1621, 683, 1285, 1286, 1335, 1805, 1244, 1347, 1308,
	1325, 1608, 777, 1810, 1260, 1339, 1560, 1238, 1354, 1272,
	1375, 2140, 724, 1040, 453, 462, 896, 1273, 1384, 454,
	804, 461, 455, 459, 458, 456, 457, 1372, 710, 1562,
	690, 2026, 1805, 1568, 1592, 1265, 1266, 1727, 1657, 760,
	760, 1241, 1579, 1595, 1596, 1245, 1045, 1274, 1248, 690,
	1295, 965, 1260, 660, 2024, 1277, 635, 589, 1366, 937,
	660, 1175, 1174, 1125, 1290, 1366, 1283, 1333, 1334, 87,
	1296, 966, 463, 2683, 988, 1298, 1297, 2671, 1123, 1124,
	1122, 1321, 2025, 42, 1567, 989, 986, 1918, 1079, 1344,
	1330, 1331, 1332, 659, 2573, 2152, 2035, 1808, 1336, 1781,
	659, 2606, 460, 699, 1842, 1133, 1337, 1603, 1338, 1133,
	1912, 764, 761, 1636, 762, 763, 764, 761, 1355, 780,
	781, 782, 783, 784, 777, 1257, 1373, 761, 2426, 1241,
	1382, 2425, 1376, 1558, 1377, 1241, 1241, 2218, 1559, 762,
	763, 764, 761, 1867, 2213, 2055, 792, 2002, 1844, 2409,
	2706, 1201, 2718, 1563, 778, 779, 780, 781, 782, 783,
	784, 777, 422, 697, 132, 132, 985, 2503, 2703, 967,
	2501, 1187, 2668, 1672, 632, 132, 1724, 640, 1586, 2652,
	2540, 1188, 2509, 2487, 1591, 1294, 659, 2486, 1734, 2485,
	2054, 2482, 1617, 2705, 367, 1594, 1664, 1665, 2476, 1703,
	1705, 1176, 1294, 2473, 1120, 2502, 1593, 2472, 2500, 682,
	1720, 1602, 762, 763, 764, 761, 2225, 1309, 762, 763,
	764, 761, 1194, 1733, 2499, 1197, 1198, 1199, 1200, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 768, 769, 770,
	771, 772, 773, 774, 766, 1616, 999, 2124, 2489, 2338,
	762, 763, 764, 761, 2624, 2226, 697, 2079, 1021, 683,
	1309, 2078, 2498, 1793, 2110, 1795, 1672, 762, 763, 764,
	761, 2020, 1600, 2000, 1656, 1604, 762, 763, 764, 761,
	1655, 2534, 1768, 1768, 1654, 1768, 2488, 2339, 1650, 1786,
	1771, 2639, 1769, 2227, 1773, 1718, 1737, 1649, 870, 1041,
	1611, 915, 1653, 762, 763, 764, 761, 684, 685, 686,
	1732, 2623, 2508, 1735, 1736, 1614, 418, 2273, 1615, 419,
	1619, 2604, 2567, 1739, 1666, 1741, 2566, 2556, 2490, 2483,
	1712, 1770, 2479, 1792, 2478, 2477, 1630, 2438, 2411, 1633,
	1634, 1635, 2435, 2374, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1740, 1646, 1742, 1731, 1738, 1744, 2734, 1851,
	2271, 1747, 2269, 2236, 762, 763, 764, 761, 2224, 2223,
	2220, 659, 2186, 1833, 1308, 762, 763, 764, 761, 2086,
	2077, 1790, 2031, 2001, 1991, 895, 892, 893, 894, 1659,
	1797, 1856, 1652, 1855, 1854, 1852, 505, 504, 858, 1283,
	828, 1356, 1250, 1042, 1782, 1783, 1784, 1789, 1791, 1605,
	829, 824, 823, 1728, 805, 2711, 878, 882, 884, 886,
	888, 889, 891, 2128, 895, 892, 893, 894, 2574, 2458,
	873, 874, 875, 876, 856, 857, 879, 2237, 859, 2208,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	871, 877, 2196, 2265, 2717, 2195, 1853, 2178, 2170, 881,
	883, 885, 887, 890, 2169, 762, 763, 764, 761, 2264,
	2141, 1815, 1241, 1241, 1241, 762, 763, 764, 761, 2060,
	2053, 999, 2045, 999, 126, 999, 2040, 116, 96, 1020,
	697, 762, 763, 764, 761, 872, 1995, 1908, 1894, 2190,
	1829, 776, 775, 785, 786, 778, 779, 780, 781, 782,
	783, 784, 777, 1890, 1889, 2058, 1637, 1628, 999, 1860,
	1627, 762, 763, 764, 761, 1626, 1825, 1838, 1623, 1622,
	1620, 1613, 1868, 1610, 1609, 1186, 999, 762, 763, 764,
	761, 123, 2155, 2156, 1185, 1006, 1870, 1859, 2731, 776,
	775, 785, 786, 778, 779, 780, 781, 782, 783, 784,
	777, 997, 2682, 126, 2676, 1869, 2659, 2656, 2654, 788,
	821, 791, 2539, 2525, 2513, 2510, 1857, 1858, 2505, 997,
	2161, 2057, 2464, 1217, 2433, 1846, 789, 790, 787, 2432,
	776, 775, 785, 786, 778, 779, 780, 781, 782, 783,
	784, 777, 1826, 762, 763, 764, 761, 2431, 2428, 2422,
	2407, 1840, 935, 2253, 2251, 1847, 1848, 1818, 2056, 1816,
	123, 999, 2231, 1823, 2219, 2064, 1226, 1219, 1938, 1913,
	1231, 1234, 1941, 1888, 1223, 1803, 1899, 1780, 1947, 1725,
	762, 763, 764, 761, 1121, 123, 1837, 1345, 1252, 1079,
	1224, 1229, 1910, 1850, 1956, 762, 763, 764, 761, 697,
	1309, 1309, 1309, 1309, 1064, 1030, 899, 1939, 1875, 1962,
	1839, 697, 1309, 1880, 567, 568, 569, 570, 847, 846,
	1911, 1962, 845, 844, 31, 843, 1935, 566, 1887, 842,
	999, 841, 840, 839, 838, 837, 836, 835, 132, 132,
	834, 833, 1227, 1228, 1886, 1904, 832, 827, 826, 1958,
	762, 763, 764, 761, 825, 822, 1183, 818, 1183, 1978,
	817, 2012, 815, 814, 813, 1948, 762, 763, 764, 761,
	999, 812, 811, 1993, 1994, 880, 1007, 810, 809, 1977,
	808, 2018, 1768, 807, 803, 1843, 802, 1949, 1718, 726,
	87, 2429, 1730, 1861, 1862, 1953, 1714, 1954, 714, 1865,
	1866, 1927, 2664, 2007, 42, 2662, 1934, 1940, 1950, 19,
	2014, 1871, 1952, 7, 1308, 1308, 1308, 1308, 1959, 1957,
	8, 1975, 1240, 1955, 6, 2628, 1308, 2011, 1946, 1260,
	1976, 2019, 2158, 563, 1232, 1929, 1235, 1974, 1787, 1241,
	2009, 1359, 1902, 1903, 1248, 725, 2015, 1989, 1992, 1971,
	2160, 1987, 1969, 2046, 1972, 2023, 2048, 1970, 2050, 2003,
	697, 1999, 1812, 1968, 697, 2005, 2028, 2010, 2113, 87,
	1672, 2016, 2017, 2022, 2097, 2008, 87, 2704, 1967, 1806,
	132, 1963, 1964, 1965, 1966, 1906, 1951, 2036, 2089, 697,
	2038, 2084, 2085, 1309, 1724, 1719, 2139, 1211, 2044, 2097,
	1801, 1835, 2143, 2047, 1664, 1665, 129, 2051, 2052, 2113,
	2049, 1973, 1830, 1757, 1758, 2129, 901, 2091, 1708, 1885,
	2680, 720, 70, 2466, 776, 775, 785, 786, 778, 779,
	780, 781, 782, 783, 784, 777, 41, 40, 2130, 2131,
	2132, 762, 763, 764, 761, 2256, 352, 2255, 2063, 1860,
	2378, 2090, 2065, 2066, 2067, 2068, 2088, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 353, 2137, 776, 775, 785,
	786, 778, 779, 780, 781, 782, 783, 784, 777, 354,
	355, 2254, 1267, 132, 2134, 1241, 2133, 1251, 132, 2138,
	1241, 1753, 1756, 1757, 1758, 1754, 2595, 1755, 1759, 971,
	2147, 2149, 2148, 1175, 1174, 752, 2159, 1308, 1884, 913,
	914, 2146, 970, 2176, 2166, 2167, 2168, 2678, 2184, 2165,
	2163, 911, 912, 2188, 2142, 1557, 2039, 938, 2144, 2145,
	762, 763, 764, 761, 2677, 2150, 1883, 2175, 909, 910,
	2179, 903, 132, 2061, 907, 908, 2557, 2180, 2544, 2059,
	2162, 2212, 2542, 2470, 2465, 2457, 2181, 2456, 762, 763,
	764, 761, 2185, 2182, 776, 775, 785, 786, 778, 779,
	780, 781, 782, 783, 784, 777, 2454, 2207, 2356, 2355,
	2270, 999, 999, 2267, 2202, 2201, 1309, 2240, 2173, 2206,
	776, 775, 785, 786, 778, 779, 780, 781, 782, 783,
	784, 777, 697, 567, 568, 569, 570, 2204, 2172, 906,
	2232, 566, 1962, 1882, 2216, 1997, 566, 2210, 1271, 2021,
	2211, 2205, 1881, 1612, 997, 2234, 2258, 711, 1183, 2666,
	2665, 2665, 2215, 2217, 2215, 762, 763, 764, 761, 2666,
	2424, 2177, 943, 2247, 762, 763, 764, 761, 2242, 49,
	1878, 1, 1768, 1249, 571, 87, 1877, 1358, 1980, 2239,
	697, 2238, 2278, 1748, 2328, 2330, 2248, 2328, 2328, 2246,
	2097, 2249, 762, 763, 764, 761, 1981, 2263, 762, 763,
	764, 761, 697, 2164, 1983, 2266, 1753, 1756, 1757, 1758,
	1754, 2259, 1755, 1759, 1575, 1745, 1706, 2127, 930, 590,
	1308, 1178, 1269, 920, 2353, 1049, 2329, 672, 706, 2268,
	1046, 705, 2241, 703, 1131, 467, 2325, 1876, 2244, 1362,
	2371, 2245, 2303, 2506, 2275, 2377, 2352, 2594, 1872, 2333,
	2350, 2382, 2331, 2332, 2641, 1864, 2538, 2189, 2597, 762,
	763, 764, 761, 1062, 2191, 451, 2449, 2347, 1863, 2242,
	762, 763, 764, 761, 1841, 2080, 2351, 762, 763, 764,
	761, 2357, 2451, 2359, 999, 1900, 2261, 2004, 2410, 605,
	762, 763, 764, 761, 499, 132, 762, 763, 764, 761,
	475, 816, 2383, 2384, 2330, 2387, 2388, 2389, 2390, 2385,
	1032, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 1129, 1025, 2234, 674, 474,
	2427, 2325, 2408, 2348, 2349, 2230, 1923, 2412, 576, 671,
	606, 1647, 2197, 1212, 1233, 2434, 1216, 762, 763, 764,
	761, 2727, 2716, 2695, 1241, 2471, 2444, 2250, 1599, 2675,
	2252, 2445, 2562, 2712, 2453, 2611, 2442, 2657, 2367, 2365,
	2366, 2650, 2558, 2468, 2257, 2379, 2504, 389, 1317, 557,
	776, 775, 785, 786, 778, 779, 780, 781, 782, 783,
	784, 777, 644, 2526, 390, 1729, 2587, 2467, 2512, 697,
	580, 1713, 697, 697, 697, 581, 1716, 1715, 2474, 2475,
	2484, 1102, 697, 767, 2480, 2481, 1119, 2192, 2309, 2536,
	2193, 2334, 800, 428, 2514, 1601, 440, 2522, 2523, 2524,
	1920, 2511, 2318, 1768, 2521, 2554, 1990, 2533, 48, 47,
	46, 45, 2319, 1350, 1379, 999, 999, 469, 2535, 2532,
	2541, 2543, 2547, 2545, 2546, 2312, 134, 1380, 2553, 2372,
	2599, 2307, 2555, 87, 449, 448, 2322, 2323, 447, 446,
	1752, 1750, 2308, 1749, 2564, 2565, 132, 1304, 1303, 1348,
	2625, 2577, 2578, 2421, 697, 2491, 2417, 2413, 997, 997,
	2568, 2277, 2276, 2304, 2305, 2311, 697, 854, 850, 852,
	853, 851, 1849, 2570, 1845, 2095, 2096, 2313, 2093, 2580,
	2601, 1342, 916, 2576, 2376, 2203, 1670, 1668, 2157, 2153,
	1370, 2585, 1246, 1905, 2600, 1305, 1301, 2346, 697, 2593,
	560, 32, 27, 5, 30, 29, 28, 14, 2609, 15,
	13, 2605, 1053, 12, 18, 26, 25, 2443, 24, 23,
	78, 77, 76, 2614, 2616, 785, 786, 778, 779, 780,
	781, 782, 783, 784, 777, 2622, 75, 22, 11, 2463,
	74, 73, 72, 21, 20, 67, 68, 2643, 59, 2648,
	58, 697, 2633, 2634, 2635, 2636, 57, 66, 2649, 65,
	64, 1085, 2653, 604, 2655, 2321, 56, 2100, 2647, 776,
	775, 785, 786, 778, 779, 780, 781, 782, 783, 784,
	777, 2638, 55, 54, 2660, 2661, 2601, 2673, 2663, 53,
	63, 62, 2315, 61, 2667, 697, 60, 697, 2669, 52,
	2600, 2672, 2679, 51, 2681, 1085, 50, 1085, 2684, 94,
	93, 92, 91, 90, 2314, 2316, 89, 33, 34, 2690,
	35, 36, 2643, 697, 2691, 104, 103, 2698, 105, 106,
	2702, 101, 2463, 1085, 99, 2708, 775, 785, 786, 778,
	779, 780, 781, 782, 783, 784, 777, 102, 100, 98,
	43, 10, 17, 2, 0, 0, 0, 2715, 0, 0,
	0, 0, 0, 0, 2726, 0, 2725, 0, 0, 0,
	0, 0, 0, 0, 2737, 0, 2739, 0, 2738, 2740,
	0, 2324, 2575, 2726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2310, 0, 0, 0, 0, 0, 2320,
	0, 0, 0, 1495, 1537, 0, 0, 1484, 301, 1442,
	1497, 1415, 1431, 1505, 1432, 1433, 1470, 1394, 1452, 263,
	1429, 0, 0, 0, 0, 0, 0, 1487, 1386, 1418,
	1419, 1388, 1425, 1389, 1416, 1444, 208, 1414, 1455, 233,
	1467, 1428, 1449, 1503, 0, 0, 293, 247, 0, 0,
	1447, 1489, 1450, 1475, 1441, 1471, 1402, 1463, 1498, 1430,
	0, 1468, 1499, 0, 0, 0, 0, 684, 685, 686,
	0, 0, 0, 0, 189, 0, 0, 0, 2463, 0,
	1466, 1493, 1427, 0, 192, 1496, 1448, 1469, 0, 0,
	1387, 1464, 0, 1392, 1395, 1504, 1491, 1422, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 1451, 1472,
	1438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 0, 1460, 0, 0, 0, 1397, 1393, 0, 1443,
	0, 0, 180, 298, 314, 190, 289, 327, 195, 296,
	185, 262, 285, 2693, 1536, 182, 312, 295, 244, 227,
	228, 181, 0, 280, 206, 219, 202, 260, 0, 311,
	339, 201, 330, 1396, 322, 184, 1531, 321, 259, 308,
	313, 245, 239, 183, 310, 243, 238, 231, 210, 0,
	223, 271, 237, 272, 224, 249, 248, 250, 1515, 1516,
	1517, 1518, 1519, 350, 1527, 1528, 0, 1532, 1533, 1534,
	1401, 0, 1421, 1473, 0, 1385, 1556, 1482, 1490, 1440,
	324, 1492, 1437, 1436, 1522, 0, 1521, 297, 1523, 1524,
	232, 1488, 1417, 1426, 340, 1424, 283, 265, 1494, 1459,
	1535, 281, 235, 309, 273, 315, 299, 323, 277, 274,
	175, 300, 204, 246, 186, 188, 200, 207, 209, 211,
	212, 255, 256, 268, 288, 302, 303, 304, 203, 196,
	282, 197, 221, 198, 176, 290, 199, 178, 269, 307,
	1520, 217, 278, 242, 179, 241, 270, 306, 305, 187,
	331, 337, 338, 342, 0, 343, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 1529,
	0, 1530, 336, 215, 173, 319, 0, 261, 0, 1485,
	1390, 1400, 1398, 1434, 1461, 1462, 257, 335, 1477, 1481,
	1478, 1506, 286, 0, 0, 0, 0, 0, 226, 267,
	1479, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 294, 317, 329, 346, 349, 1538,
	1539, 1540, 177, 348, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 320, 1435, 1408, 1446, 328, 1411, 1409, 1476, 1410,
	1465, 344, 251, 252, 253, 254, 218, 0, 194, 347,
	276, 1456, 1439, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1457, 1549, 1550, 1551, 1552, 1553, 1413, 341, 214, 220,
	0, 222, 193, 266, 216, 326, 229, 1483, 1554, 1555,
	258, 225, 291, 230, 236, 279, 325, 264, 284, 191,
	316, 292, 240, 0, 0, 1407, 1412, 1406, 1453, 1454,
	1500, 1501, 1502, 1474, 1399, 1486, 0, 1403, 1405, 1404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1480,
	301, 481, 1458, 174, 0, 234, 1507, 275, 213, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 0, 0, 0, 208, 0,
	0, 233, 0, 0, 0, 473, 0, 0, 293, 247,
	0, 0, 0, 0, 528, 536, 0, 1525, 1526, 332,
	333, 334, 318, 0, 205, 1548, 435, 0, 0, 466,
	505, 504, 453, 462, 0, 0, 189, 454, 0, 461,
	455, 459, 458, 456, 457, 0, 520, 0, 0, 0,
	0, 0, 0, 426, 439, 2460, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 436, 437,
	0, 0, 0, 0, 482, 0, 438, 0, 0, 484,
	463, 464, 0, 0, 180, 298, 314, 190, 289, 327,
	195, 296, 185, 262, 285, 0, 0, 182, 312, 295,
	244, 227, 228, 181, 0, 280, 206, 219, 202, 260,
	460, 480, 485, 201, 542, 478, 322, 184, 0, 321,
	259, 308, 313, 245, 239, 183, 310, 243, 238, 231,
	210, 543, 223, 271, 237, 272, 224, 249, 248, 250,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 324, 0, 0, 526, 0, 0, 0, 297,
	0, 0, 232, 0, 0, 0, 479, 0, 283, 265,
	539, 427, 0, 281, 235, 309, 273, 315, 299, 323,
	277, 274, 175, 300, 204, 246, 186, 188, 200, 207,
	209, 211, 212, 255, 256, 268, 288, 302, 303, 304,
	203, 196, 282, 197, 221, 198, 176, 290, 199, 178,
	269, 307, 0, 217, 278, 242, 179, 241, 270, 306,
	305, 187, 331, 337, 338, 342, 0, 343, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 336, 215, 173, 319, 524, 261,
	0, 538, 519, 521, 522, 525, 529, 530, 531, 532,
	533, 535, 537, 541, 286, 0, 0, 0, 0, 0,
	226, 267, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 317, 329, 346,
	349, 0, 0, 0, 177, 348, 0, 2461, 0, 0,
	0, 2462, 0, 540, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 483, 251, 252, 253, 254, 527, 0,
	194, 347, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	214, 220, 0, 222, 193, 266, 216, 326, 229, 0,
	0, 0, 258, 225, 291, 230, 236, 279, 325, 264,
	284, 191, 316, 292, 240, 0, 0, 549, 523, 548,
	550, 551, 547, 552, 553, 534, 445, 0, 488, 545,
	544, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 234, 0, 275,
	213, 512, 492, 493, 494, 444, 495, 490, 491, 513,
	486, 509, 510, 468, 471, 496, 508, 497, 511, 514,
	515, 554, 555, 503, 556, 500, 516, 507, 506, 498,
	487, 517, 518, 472, 470, 501, 502, 489, 301, 481,
	0, 332, 333, 334, 318, 0, 205, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 0, 208, 0, 0, 233,
	0, 0, 0, 473, 0, 0, 293, 247, 0, 0,
	0, 0, 528, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 466, 505, 504,
	453, 462, 0, 0, 189, 454, 0, 461, 455, 459,
	458, 456, 457, 0, 520, 0, 0, 0, 0, 0,
	0, 426, 439, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 437, 0, 0,
	0, 0, 482, 0, 438, 0, 0, 484, 463, 464,
	0, 0, 180, 298, 314, 190, 289, 327, 195, 296,
	185, 262, 285, 0, 0, 182, 312, 295, 244, 227,
	228, 181, 0, 280, 206, 219, 202, 260, 460, 480,
	485, 201, 542, 478, 322, 184, 0, 321, 259, 308,
	313, 245, 239, 183, 310, 243, 238, 231, 210, 543,
	223, 271, 237, 272, 224, 249, 248, 250, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	324, 0, 0, 526, 0, 0, 0, 297, 0, 0,
	232, 0, 0, 0, 479, 0, 283, 265, 539, 427,
	0, 281, 235, 309, 273, 315, 299, 323, 277, 274,
	175, 300, 204, 246, 186, 188, 200, 207, 209, 211,
	212, 255, 256, 268, 288, 302, 303, 304, 203, 196,
	282, 197, 221, 198, 176, 290, 199, 178, 269, 307,
	0, 217, 278, 242, 179, 241, 270, 306, 305, 187,
	331, 337, 338, 342, 0, 343, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 1180,
	1179, 1181, 336, 215, 173, 319, 524, 261, 0, 538,
	519, 521, 522, 525, 529, 530, 531, 532, 533, 535,
	537, 541, 286, 0, 0, 0, 0, 0, 226, 267,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 317, 329, 346, 349, 0,
	0, 0, 177, 348, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 483, 251, 252, 253, 254, 527, 0, 194, 347,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 214, 220,
	0, 222, 193, 266, 216, 326, 229, 0, 0, 0,
	258, 225, 291, 230, 236, 279, 325, 264, 284, 191,
	316, 292, 240, 0, 0, 549, 523, 548, 550, 551,
	547, 552, 553, 534, 445, 0, 488, 545, 544, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 234, 0, 275, 213, 512,
	492, 493, 494, 444, 495, 490, 491, 513, 486, 509,
	510, 468, 471, 496, 508, 497, 511, 514, 515, 554,
	555, 503, 556, 500, 516, 507, 506, 498, 487, 517,
	518, 472, 470, 501, 502, 489, 301, 481, 0, 332,
	333, 334, 318, 0, 205, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 0, 0, 0, 208, 0, 0, 233, 0, 0,
	0, 473, 0, 0, 293, 247, 0, 0, 0, 0,
	528, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 466, 505, 504, 453, 462,
	0, 0, 189, 454, 0, 461, 455, 459, 458, 456,
	457, 0, 520, 0, 0, 0, 0, 0, 0, 426,
	439, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 436, 437, 0, 0, 0, 0,
	482, 0, 438, 0, 0, 484, 463, 464, 0, 0,
	180, 298, 314, 190, 289, 327, 195, 296, 185, 262,
	285, 0, 0, 182, 312, 295, 244, 227, 228, 181,
	0, 280, 206, 219, 202, 260, 460, 480, 485, 201,
	542, 478, 322, 184, 0, 321, 259, 308, 313, 245,
	239, 183, 310, 243, 238, 231, 210, 543, 223, 271,
	237, 272, 224, 249, 248, 250, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 324, 0,
	0, 526, 0, 0, 0, 297, 0, 0, 232, 0,
	0, 0, 479, 0, 283, 265, 539, 427, 0, 281,
	235, 309, 273, 315, 299, 323, 277, 274, 175, 300,
	204, 246, 186, 188, 200, 207, 209, 211, 212, 255,
	256, 268, 288, 302, 303, 304, 203, 196, 282, 197,
	221, 198, 176, 290, 199, 178, 269, 307, 0, 217,
	278, 242, 179, 241, 270, 306, 305, 187, 331, 337,
	338, 342, 0, 343, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	336, 215, 173, 319, 524, 261, 0, 538, 519, 521,
	522, 525, 529, 530, 531, 532, 533, 535, 537, 541,
	286, 0, 0, 0, 0, 0, 226, 267, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 317, 329, 346, 349, 0, 0, 0,
	177, 348, 0, 2461, 0, 0, 0, 2462, 0, 540,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 483,
	251, 252, 253, 254, 527, 0, 194, 347, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 214, 220, 0, 222,
	193, 266, 216, 326, 229, 0, 0, 0, 258, 225,
	291, 230, 236, 279, 325, 264, 284, 191, 316, 292,
	240, 0, 0, 549, 523, 548, 550, 551, 547, 552,
	553, 534, 445, 0, 488, 545, 544, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 234, 0, 275, 213, 512, 492, 493,
	494, 444, 495, 490, 491, 513, 486, 509, 510, 468,
	471, 496, 508, 497, 511, 514, 515, 554, 555, 503,
	556, 500, 516, 507, 506, 498, 487, 517, 518, 472,
	470, 501, 502, 489, 301, 481, 0, 332, 333, 334,
	318, 0, 205, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 0, 208, 1242, 0, 233, 0, 0, 0, 473,
	0, 0, 293, 247, 0, 0, 0, 0, 528, 536,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	435, 0, 0, 466, 505, 504, 453, 462, 0, 0,
	189, 454, 0, 461, 455, 459, 458, 456, 457, 0,
	520, 0, 0, 0, 0, 0, 0, 426, 439, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 437, 0, 0, 0, 0, 482, 0,
	438, 0, 0, 1328, 463, 464, 0, 0, 180, 298,
	314, 190, 289, 327, 195, 296, 185, 262, 285, 0,
	0, 182, 312, 295, 244, 227, 228, 181, 0, 280,
	206, 219, 202, 260, 460, 480, 485, 201, 542, 478,
	322, 184, 0, 321, 259, 308, 313, 245, 239, 183,
	310, 243, 238, 231, 210, 543, 223, 271, 237, 272,
	224, 249, 248, 250, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 324, 0, 0, 526,
	0, 0, 0, 297, 0, 0, 232, 0, 0, 0,
	479, 0, 283, 265, 539, 427, 0, 281, 235, 309,
	273, 315, 299, 323, 277, 274, 175, 300, 204, 246,
	186, 188, 200, 207, 209, 211, 212, 255, 256, 268,
	288, 302, 303, 304, 203, 196, 282, 197, 221, 198,
	176, 290, 199, 178, 269, 307, 0, 217, 278, 242,
	179, 241, 270, 306, 305, 187, 331, 337, 338, 342,
	0, 343, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 336, 215,
	173, 319, 524, 261, 0, 538, 519, 521, 522, 525,
	529, 530, 531, 532, 533, 535, 537, 541, 286, 0,
	0, 0, 0, 0, 226, 267, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 317, 329, 346, 349, 0, 0, 0, 177, 348,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 483, 251, 252,
	253, 254, 527, 0, 194, 347, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 214, 220, 0, 222, 193, 266,
	216, 326, 229, 0, 0, 0, 258, 225, 291, 230,
	236, 279, 325, 264, 284, 191, 316, 292, 240, 0,
	0, 549, 523, 548, 550, 551, 547, 552, 553, 534,
	445, 0, 488, 545, 544, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 234, 0, 275, 213, 512, 492, 493, 494, 444,
	495, 490, 491, 513, 486, 509, 510, 468, 471, 496,
	508, 497, 511, 514, 515, 554, 555, 503, 556, 500,
	516, 507, 506, 498, 487, 517, 518, 472, 470, 501,
	502, 489, 126, 301, 481, 332, 333, 334, 318, 0,
	205, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 0, 0,
	0, 208, 0, 0, 233, 0, 0, 0, 473, 0,
	0, 293, 247, 0, 0, 0, 0, 528, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 0, 466, 505, 504, 453, 462, 0, 0, 189,
	454, 0, 461, 455, 459, 458, 456, 457, 0, 520,
	0, 0, 0, 0, 0, 0, 426, 439, 0, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 436, 437, 0, 0, 0, 0, 482, 0, 438,
	0, 0, 484, 463, 464, 0, 0, 180, 298, 314,
	190, 289, 327, 195, 296, 185, 262, 285, 0, 0,
	182, 312, 295, 244, 227, 228, 181, 0, 280, 206,
	219, 202, 260, 460, 480, 485, 201, 542, 478, 322,
	184, 0, 321, 259, 308, 313, 245, 239, 183, 310,
	243, 238, 231, 210, 543, 223, 271, 237, 272, 224,
	249, 248, 250, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 476, 0, 0, 324, 0, 0, 526, 0,
	0, 0, 297, 0, 0, 232, 0, 0, 0, 479,
	0, 283, 265, 539, 427, 0, 281, 235, 309, 273,
	315, 299, 323, 277, 274, 175, 300, 204, 246, 186,
	188, 200, 207, 209, 211, 212, 255, 256, 268, 288,
	302, 303, 304, 203, 196, 282, 197, 221, 198, 176,
	290, 199, 178, 269, 307, 0, 217, 278, 242, 179,
	241, 270, 306, 305, 187, 331, 337, 338, 342, 0,
	343, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 336, 215, 173,
	319, 524, 261, 0, 538, 519, 521, 522, 525, 529,
	530, 531, 532, 533, 535, 537, 541, 286, 0, 0,
	0, 0, 0, 226, 267, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	317, 329, 346, 349, 0, 0, 0, 177, 348, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 483, 251, 252, 253,
	254, 527, 0, 194, 347, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 214, 220, 0, 222, 193, 266, 216,
	326, 229, 0, 0, 0, 258, 225, 291, 230, 236,
	279, 325, 264, 284, 191, 316, 292, 240, 0, 0,
	549, 523, 548, 550, 551, 547, 552, 553, 534, 445,
	0, 488, 545, 544, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	234, 97, 275, 213, 512, 492, 493, 494, 444, 495,
	490, 491, 513, 486, 509, 510, 468, 471, 496, 508,
	497, 511, 514, 515, 554, 555, 503, 556, 500, 516,
	507, 506, 498, 487, 517, 518, 472, 470, 501, 502,
	489, 301, 481, 0, 332, 333, 334, 318, 0, 205,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 0, 208,
	2692, 0, 233, 0, 0, 0, 473, 0, 0, 293,
	247, 0, 0, 0, 0, 528, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 0,
	466, 505, 504, 453, 462, 0, 0, 189, 454, 0,
	461, 455, 459, 458, 456, 457, 0, 520, 0, 0,
	0, 0, 0, 0, 426, 439, 0, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	437, 0, 0, 0, 0, 482, 0, 438, 0, 0,
	484, 463, 464, 0, 0, 180, 298, 314, 190, 289,
	327, 195, 296, 185, 262, 285, 0, 0, 182, 312,
	295, 244, 227, 228, 181, 0, 280, 206, 219, 202,
	260, 460, 480, 485, 201, 542, 478, 322, 184, 0,
	321, 259, 308, 313, 245, 239, 183, 310, 243, 238,
	231, 210, 543, 223, 271, 237, 272, 224, 249, 248,
	250, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 324, 0, 0, 526, 0, 0, 0,
	297, 0, 0, 232, 0, 0, 0, 479, 0, 283,
	265, 539, 427, 0, 281, 235, 309, 273, 315, 299,
	323, 277, 274, 175, 300, 204, 246, 186, 188, 200,
	207, 209, 211, 212, 255, 256, 268, 288, 302, 303,
	304, 203, 196, 282, 197, 221, 198, 176, 290, 199,
	178, 269, 307, 0, 217, 278, 242, 179, 241, 270,
	306, 305, 187, 331, 337, 338, 342, 0, 343, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 336, 215, 173, 319, 524,
	261, 0, 538, 519, 521, 522, 525, 529, 530, 531,
	532, 533, 535, 537, 541, 286, 0, 0, 0, 0,
	0, 226, 267, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 317, 329,
	346, 349, 0, 0, 0, 177, 348, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 483, 251, 252, 253, 254, 527,
	0, 194, 347, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 214, 220, 0, 222, 193, 266, 216, 326, 229,
	0, 0, 0, 258, 225, 291, 230, 236, 279, 325,
	264, 284, 191, 316, 292, 240, 0, 0, 549, 523,
	548, 550, 551, 547, 552, 553, 534, 445, 0, 488,
	545, 544, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 234, 0,
	275, 213, 512, 492, 493, 494, 444, 495, 490, 491,
	513, 486, 509, 510, 468, 471, 496, 508, 497, 511,
	514, 515, 554, 555, 503, 556, 500, 516, 507, 506,
	498, 487, 517, 518, 472, 470, 501, 502, 489, 301,
	481, 0, 332, 333, 334, 318, 0, 205, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 0, 0, 0, 208, 1242, 0,
	233, 0, 0, 0, 473, 0, 0, 293, 247, 0,
	0, 0, 0, 528, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 0, 0, 466, 505,
	504, 453, 462, 0, 0, 189, 454, 0, 461, 455,
	459, 458, 456, 457, 0, 520, 0, 0, 0, 0,
	0, 0, 426, 439, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 436, 437, 0,
	0, 0, 0, 482, 0, 438, 0, 0, 484, 463,
	464, 0, 0, 180, 298, 314, 190, 289, 327, 195,
	296, 185, 262, 285, 0, 0, 182, 312, 295, 244,
	227, 228, 181, 0, 280, 206, 219, 202, 260, 460,
	480, 485, 201, 542, 478, 322, 184, 0, 321, 259,
	308, 313, 245, 239, 183, 310, 243, 238, 231, 210,
	543, 223, 271, 237, 272, 224, 249, 248, 250, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 0,
	0, 324, 0, 0, 526, 0, 0, 0, 297, 0,
	0, 232, 0, 0, 0, 479, 0, 283, 265, 539,
	427, 0, 281, 235, 309, 273, 315, 299, 323, 277,
	274, 175, 300, 204, 246, 186, 188, 200, 207, 209,
	211, 212, 255, 256, 268, 288, 302, 303, 304, 203,
	196, 282, 197, 221, 198, 176, 290, 199, 178, 269,
	307, 0, 217, 278, 242, 179, 241, 270, 306, 305,
	187, 331, 337, 338, 342, 0, 343, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 336, 215, 173, 319, 524, 261, 0,
	538, 519, 521, 522, 525, 529, 530, 531, 532, 533,
	535, 537, 541, 286, 0, 0, 0, 0, 0, 226,
	267, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 317, 329, 346, 349,
	0, 0, 0, 177, 348, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 483, 251, 252, 253, 254, 527, 0, 194,
	347, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 214,
	220, 0, 222, 193, 266, 216, 326, 229, 0, 0,
	0, 258, 225, 291, 230, 236, 279, 325, 264, 284,
	191, 316, 292, 240, 0, 0, 549, 523, 548, 550,
	551, 547, 552, 553, 534, 445, 0, 488, 545, 544,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 234, 0, 275, 213,
	512, 492, 493, 494, 444, 495, 490, 491, 513, 486,
	509, 510, 468, 471, 496, 508, 497, 511, 514, 515,
	554, 555, 503, 556, 500, 516, 507, 506, 498, 487,
	517, 518, 472, 470, 501, 502, 489, 301, 481, 0,
	332, 333, 334, 318, 0, 205, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 0, 208, 0, 0, 233, 0,
	0, 0, 473, 0, 0, 293, 247, 0, 0, 0,
	0, 528, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 0, 0, 466, 505, 504, 453,
	462, 0, 0, 189, 454, 0, 461, 455, 459, 458,
	456, 457, 0, 520, 0, 0, 0, 0, 0, 0,
	426, 439, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 437, 1019, 0, 0,
	0, 482, 0, 438, 0, 0, 484, 463, 464, 0,
	0, 180, 298, 314, 190, 289, 327, 195, 296, 185,
	262, 285, 0, 0, 182, 312, 295, 244, 227, 228,
	181, 0, 280, 206, 219, 202, 260, 460, 480, 485,
	201, 542, 478, 322, 184, 0, 321, 259, 308, 313,
	245, 239, 183, 310, 243, 238, 231, 210, 543, 223,
	271, 237, 272, 224, 249, 248, 250, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 476, 0, 0, 324,
	0, 0, 526, 0, 0, 0, 297, 0, 0, 232,
	0, 0, 0, 479, 0, 283, 265, 539, 427, 0,
	281, 235, 309, 273, 315, 299, 323, 277, 274, 175,
	300, 204, 246, 186, 188, 200, 207, 209, 211, 212,
	255, 256, 268, 288, 302, 303, 304, 203, 196, 282,
	197, 221, 198, 176, 290, 199, 178, 269, 307, 0,
	217, 278, 242, 179, 241, 270, 306, 305, 187, 331,
	337, 338, 342, 0, 343, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 336, 215, 173, 319, 524, 261, 0, 538, 519,
	521, 522, 525, 529, 530, 531, 532, 533, 535, 537,
	541, 286, 0, 0, 0, 0, 0, 226, 267, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 317, 329, 346, 349, 0, 0,
	0, 177, 348, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	483, 251, 252, 253, 254, 527, 0, 194, 347, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 214, 220, 0,
	222, 193, 266, 216, 326, 229, 0, 0, 0, 258,
	225, 291, 230, 236, 279, 325, 264, 284, 191, 316,
	292, 240, 0, 0, 549, 523, 548, 550, 551, 547,
	552, 553, 534, 445, 0, 488, 545, 544, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 234, 0, 275, 213, 512, 492,
	493, 494, 444, 495, 490, 491, 513, 486, 509, 510,
	468, 471, 496, 508, 497, 511, 514, 515, 554, 555,
	503, 556, 500, 516, 507, 506, 498, 487, 517, 518,
	472, 470, 501, 502, 489, 0, 0, 0, 332, 333,
	334, 318, 0, 205, 301, 481, 0, 0, 1618, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 0, 208, 0, 0, 233, 0, 0, 0, 473,
	0, 0, 293, 247, 0, 0, 0, 0, 528, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 466, 505, 504, 453, 462, 0, 0,
	189, 454, 0, 461, 455, 459, 458, 456, 457, 0,
	520, 0, 0, 0, 0, 0, 0, 426, 439, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 437, 0, 0, 0, 0, 482, 0,
	438, 0, 0, 484, 463, 464, 0, 0, 180, 298,
	314, 190, 289, 327, 195, 296, 185, 262, 285, 0,
	0, 182, 312, 295, 244, 227, 228, 181, 0, 280,
	206, 219, 202, 260, 460, 480, 485, 201, 542, 478,
	322, 184, 0, 321, 259, 308, 313, 245, 239, 183,
	310, 243, 238, 231, 210, 543, 223, 271, 237, 272,
	224, 249, 248, 250, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 324, 0, 0, 526,
	0, 0, 0, 297, 0, 0, 232, 0, 0, 0,
	479, 0, 283, 265, 539, 427, 0, 281, 235, 309,
	273, 315, 299, 323, 277, 274, 175, 300, 204, 246,
	186, 188, 200, 207, 209, 211, 212, 255, 256, 268,
	288, 302, 303, 304, 203, 196, 282, 197, 221, 198,
	176, 290, 199, 178, 269, 307, 0, 217, 278, 242,
	179, 241, 270, 306, 305, 187, 331, 337, 338, 342,
	0, 343, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 336, 215,
	173, 319, 524, 261, 0, 538, 519, 521, 522, 525,
	529, 530, 531, 532, 533, 535, 537, 541, 286, 0,
	0, 0, 0, 0, 226, 267, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 317, 329, 346, 349, 0, 0, 0, 177, 348,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 483, 251, 252,
	253, 254, 527, 0, 194, 347, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 214, 220, 0, 222, 193, 266,
	216, 326, 229, 0, 0, 0, 258, 225, 291, 230,
	236, 279, 325, 264, 284, 191, 316, 292, 240, 0,
	0, 549, 523, 548, 550, 551, 547, 552, 553, 534,
	445, 0, 488, 545, 544, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 234, 0, 275, 213, 512, 492, 493, 494, 444,
	495, 490, 491, 513, 486, 509, 510, 468, 471, 496,
	508, 497, 511, 514, 515, 554, 555, 503, 556, 500,
	516, 507, 506, 498, 487, 517, 518, 472, 470, 501,
	502, 489, 301, 481, 0, 332, 333, 334, 318, 0,
	205, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 0, 0, 0,
	208, 0, 0, 233, 0, 0, 0, 473, 0, 0,
	293, 247, 0, 0, 0, 0, 528, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 466, 505, 504, 453, 462, 0, 0, 189, 454,
	0, 461, 455, 459, 458, 456, 457, 0, 520, 0,
	0, 0, 0, 0, 0, 426, 439, 0, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	436, 437, 0, 0, 0, 0, 482, 0, 438, 0,
	0, 484, 463, 464, 0, 0, 180, 298, 314, 190,
	289, 327, 195, 296, 185, 262, 285, 0, 0, 182,
	312, 295, 244, 227, 228, 181, 0, 280, 206, 219,
	202, 260, 460, 480, 485, 201, 542, 478, 322, 184,
	0, 321, 259, 308, 313, 245, 239, 183, 310, 243,
	238, 231, 210, 543, 223, 271, 237, 272, 224, 249,
	248, 250, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 324, 0, 0, 526, 0, 0,
	0, 297, 0, 0, 232, 0, 0, 0, 479, 0,
	283, 265, 539, 427, 0, 281, 235, 309, 273, 315,
	299, 323, 277, 274, 175, 300, 204, 246, 186, 188,
	200, 207, 209, 211, 212, 255, 256, 268, 288, 302,
	303, 304, 203, 196, 282, 197, 221, 198, 176, 290,
	199, 178, 269, 307, 0, 217, 278, 242, 179, 241,
	270, 306, 305, 187, 331, 337, 338, 342, 0, 343,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 336, 215, 173, 319,
	524, 261, 0, 538, 519, 521, 522, 525, 529, 530,
	531, 532, 533, 535, 537, 541, 286, 0, 0, 0,
	0, 0, 226, 267, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 317,
	329, 346, 349, 0, 0, 0, 177, 348, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 483, 251, 252, 253, 254,
	527, 0, 194, 347, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 214, 220, 0, 222, 193, 266, 216, 326,
	229, 0, 0, 0, 258, 225, 291, 230, 236, 279,
	325, 264, 284, 191, 316, 292, 240, 0, 0, 549,
	523, 548, 550, 551, 547, 552, 553, 534, 445, 0,
	488, 545, 544, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 234,
	0, 275, 213, 512, 492, 493, 494, 444, 495, 490,
	491, 513, 486, 509, 510, 468, 471, 496, 508, 497,
	511, 514, 515, 554, 555, 503, 556, 500, 516, 507,
	506, 498, 487, 517, 518, 472, 470, 501, 502, 489,
	301, 481, 0, 332, 333, 334, 318, 0, 205, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 0, 0, 442, 0, 0, 0, 208, 0,
	0, 233, 0, 0, 0, 473, 0, 0, 293, 247,
	0, 0, 0, 0, 528, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 466,
	505, 504, 453, 462, 0, 0, 189, 454, 0, 461,
	455, 459, 458, 456, 457, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 439, 0, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 436, 437,
	0, 0, 0, 0, 482, 0, 438, 0, 0, 484,
	463, 464, 0, 0, 180, 298, 314, 190, 289, 327,
	195, 296, 185, 262, 285, 0, 0, 182, 312, 295,
	244, 227, 228, 181, 0, 280, 206, 219, 202, 260,
	460, 480, 485, 201, 542, 478, 322, 184, 0, 321,
	259, 308, 313, 245, 239, 183, 310, 243, 238, 231,
	210, 543, 223, 271, 237, 272, 224, 249, 248, 250,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 324, 0, 0, 526, 0, 0, 0, 297,
	0, 0, 232, 0, 0, 0, 479, 0, 283, 265,
	539, 0, 0, 281, 235, 309, 273, 315, 299, 323,
	277, 274, 175, 300, 204, 246, 186, 188, 200, 207,
	209, 211, 212, 255, 256, 268, 288, 302, 303, 304,
	203, 196, 282, 197, 221, 198, 176, 290, 199, 178,
	269, 307, 0, 217, 278, 242, 179, 241, 270, 306,
	305, 187, 331, 1104, 1105, 342, 0, 343, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 336, 215, 173, 319, 524, 261,
	0, 538, 519, 521, 522, 525, 529, 530, 531, 532,
	533, 535, 537, 541, 286, 0, 0, 0, 0, 0,
	226, 267, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 317, 329, 346,
	349, 0, 0, 0, 177, 348, 0, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 483, 251, 252, 253, 254, 527, 0,
	194, 347, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	214, 220, 0, 222, 193, 266, 216, 326, 229, 0,
	0, 0, 258, 225, 291, 230, 236, 279, 325, 264,
	284, 191, 316, 292, 240, 0, 0, 549, 523, 548,
	550, 551, 547, 552, 553, 534, 445, 0, 488, 545,
	544, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 234, 0, 275,
	213, 512, 492, 493, 494, 444, 495, 490, 491, 513,
	486, 509, 510, 468, 471, 496, 508, 497, 511, 514,
	515, 554, 555, 503, 556, 500, 516, 507, 506, 498,
	487, 517, 518, 472, 470, 501, 502, 489, 301, 481,
	0, 332, 333, 334, 318, 0, 205, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 0, 208, 0, 0, 233,
	0, 0, 0, 473, 0, 0, 293, 247, 0, 0,
	0, 0, 528, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 505, 504,
	453, 462, 0, 0, 189, 454, 0, 461, 455, 459,
	458, 456, 457, 0, 520, 0, 0, 0, 0, 0,
	0, 426, 439, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 437, 0, 0,
	0, 0, 482, 0, 438, 0, 0, 484, 463, 464,
	0, 0, 180, 298, 314, 190, 289, 327, 195, 296,
	185, 262, 285, 0, 0, 182, 312, 295, 244, 227,
	228, 181, 0, 280, 206, 219, 202, 260, 460, 480,
	485, 201, 542, 478, 322, 184, 0, 321, 259, 308,
	313, 245, 239, 183, 310, 243, 238, 231, 210, 543,
	223, 271, 237, 272, 224, 249, 248, 250, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	324, 0, 0, 526, 0, 0, 0, 297, 0, 0,
	232, 0, 0, 0, 479, 0, 283, 265, 539, 427,
	0, 281, 235, 309, 273, 315, 299, 323, 277, 274,
	175, 300, 204, 246, 186, 188, 200, 207, 209, 211,
	212, 255, 256, 268, 288, 302, 303, 304, 203, 196,
	282, 197, 221, 198, 176, 290, 199, 178, 269, 307,
	0, 217, 278, 242, 179, 241, 270, 306, 305, 187,
	331, 337, 338, 342, 0, 343, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 336, 215, 173, 319, 524, 261, 0, 538,
	519, 521, 522, 525, 529, 530, 531, 532, 533, 535,
	537, 541, 286, 0, 0, 0, 0, 0, 226, 267,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 317, 329, 346, 349, 0,
	0, 0, 177, 348, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 483, 251, 252, 253, 254, 527, 0, 194, 347,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 214, 220,
	0, 222, 193, 266, 216, 326, 229, 0, 0, 0,
	258, 225, 291, 230, 236, 279, 325, 264, 284, 191,
	316, 292, 240, 0, 0, 549, 523, 548, 550, 551,
	547, 552, 553, 534, 445, 0, 488, 545, 544, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 234, 0, 275, 213, 512,
	492, 493, 494, 444, 495, 490, 491, 513, 486, 509,
	510, 468, 471, 496, 508, 497, 511, 514, 515, 554,
	555, 503, 556, 500, 516, 507, 506, 498, 487, 517,
	518, 472, 470, 501, 502, 489, 301, 481, 0, 332,
	333, 334, 318, 0, 205, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 0, 0, 0, 208, 0, 0, 233, 0, 0,
	0, 473, 0, 0, 293, 247, 0, 0, 0, 0,
	528, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 466, 505, 504, 453, 462,
	0, 0, 189, 454, 0, 461, 455, 459, 458, 456,
	457, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	439, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 436, 437, 0, 0, 0, 0,
	482, 0, 438, 0, 0, 484, 463, 464, 0, 0,
	180, 298, 314, 190, 289, 327, 195, 296, 185, 262,
	285, 0, 0, 182, 312, 295, 244, 227, 228, 181,
	0, 280, 206, 219, 202, 260, 460, 480, 485, 201,
	542, 478, 322, 184, 0, 321, 259, 308, 313, 245,
	239, 183, 310, 243, 238, 231, 210, 543, 223, 271,
	237, 272, 224, 249, 248, 250, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 324, 0,
	0, 526, 0, 0, 0, 297, 0, 0, 232, 0,
	0, 0, 479, 0, 283, 265, 539, 0, 0, 281,
	235, 309, 273, 315, 299, 323, 277, 274, 175, 300,
	204, 246, 186, 188, 200, 207, 209, 211, 212, 255,
	256, 268, 288, 302, 303, 304, 203, 196, 282, 197,
	221, 198, 176, 290, 199, 178, 269, 307, 0, 217,
	278, 242, 179, 241, 270, 306, 305, 187, 331, 337,
	338, 342, 0, 343, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	336, 215, 173, 319, 524, 261, 0, 538, 519, 521,
	522, 525, 529, 530, 531, 532, 533, 535, 537, 541,
	286, 0, 0, 0, 0, 0, 226, 267, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 317, 329, 346, 349, 0, 0, 0,
	177, 348, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 483,
	251, 252, 253, 254, 527, 0, 194, 347, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 214, 220, 0, 222,
	193, 266, 216, 326, 229, 0, 0, 0, 258, 225,
	291, 230, 236, 279, 325, 264, 284, 191, 316, 292,
	240, 0, 0, 549, 523, 548, 550, 551, 547, 552,
	553, 534, 445, 0, 488, 545, 544, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 234, 0, 275, 213, 512, 492, 493,
	494, 444, 495, 490, 491, 513, 486, 509, 510, 468,
	471, 496, 508, 497, 511, 514, 515, 554, 555, 503,
	556, 500, 516, 507, 506, 498, 487, 517, 518, 472,
	470, 501, 502, 489, 301, 0, 0, 332, 333, 334,
	318, 0, 205, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 293, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 0, 0, 180, 298,
	314, 190, 289, 327, 195, 296, 185, 262, 285, 0,
	0, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 0, 1702,
	1699, 1700, 1701, 260, 0, 1686, 1687, 1688, 1689, 856,
	1673, 1692, 0, 1674, 259, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 871, 1690, 271, 237, 272,
	224, 249, 248, 250, 881, 883, 885, 887, 890, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 232, 0, 0, 0,
	1685, 0, 283, 265, 0, 0, 0, 281, 235, 309,
	273, 315, 299, 323, 277, 274, 175, 300, 204, 246,
	186, 188, 200, 207, 209, 211, 212, 255, 256, 268,
	288, 302, 303, 304, 203, 196, 282, 197, 221, 198,
	176, 290, 199, 178, 269, 307, 0, 217, 278, 242,
	179, 241, 270, 306, 305, 187, 331, 337, 338, 342,
	0, 343, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 336, 215,
	173, 319, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 335, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 226, 267, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 317, 329, 346, 349, 0, 0, 0, 177, 348,
	0, 0, 0, 0, 0, 0, 0, 320, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 344, 251, 252,
	253, 254, 218, 0, 194, 347, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 214, 220, 0, 222, 193, 266,
	216, 326, 229, 0, 0, 0, 258, 225, 291, 230,
	236, 279, 325, 264, 284, 191, 316, 292, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	880, 234, 0, 275, 213, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 0, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 0, 0, 0, 332, 333, 334, 318, 0,
	205, 126, 301, 38, 116, 96, 0, 0, 0, 0,
	0, 0, 0, 263, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	293, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 298, 314, 190,
	289, 327, 195, 296, 185, 262, 285, 0, 0, 182,
	312, 295, 244, 227, 228, 181, 0, 280, 206, 219,
	202, 260, 0, 311, 339, 201, 330, 0, 322, 184,
	0, 321, 259, 308, 313, 245, 239, 183, 310, 243,
	238, 231, 210, 0, 223, 271, 237, 272, 224, 249,
	248, 250, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 232, 0, 0, 0, 340, 0,
	283, 265, 0, 0, 0, 281, 235, 309, 273, 315,
	299, 323, 277, 274, 175, 300, 204, 246, 186, 188,
	200, 207, 209, 211, 212, 255, 256, 268, 288, 302,
	303, 304, 203, 196, 282, 197, 221, 198, 176, 290,
	199, 178, 269, 307, 0, 217, 278, 242, 179, 241,
	270, 306, 305, 187, 331, 337, 338, 342, 0, 343,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 336, 215, 173, 319,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 335, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 226, 267, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 317,
	329, 346, 349, 0, 0, 0, 177, 348, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 344, 251, 252, 253, 254,
	362, 364, 194, 347, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 214, 220, 0, 222, 193, 266, 216, 326,
	229, 0, 0, 0, 258, 225, 291, 230, 236, 279,
	325, 264, 284, 191, 316, 292, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 234,
	97, 275, 213, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 0, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	301, 0, 0, 332, 333, 334, 318, 0, 205, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 293, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 2104, 2107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 298, 314, 190, 289, 327,
	195, 296, 185, 262, 285, 0, 0, 182, 312, 295,
	244, 227, 228, 181, 0, 280, 206, 219, 202, 260,
	0, 311, 339, 201, 330, 0, 322, 184, 0, 321,
	259, 308, 313, 245, 239, 183, 310, 243, 238, 231,
	210, 0, 223, 271, 237, 272, 224, 249, 248, 250,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2108, 324, 0, 0, 0, 2101, 0, 2100, 297,
	2102, 2105, 232, 0, 0, 0, 340, 0, 283, 265,
	0, 0, 0, 281, 235, 309, 273, 315, 299, 323,
	277, 274, 175, 300, 204, 246, 186, 188, 200, 207,
	209, 211, 212, 255, 256, 268, 288, 302, 303, 304,
	203, 196, 282, 197, 221, 198, 176, 290, 199, 178,
	269, 307, 2106, 217, 278, 242, 179, 241, 270, 306,
	305, 187, 331, 337, 338, 342, 0, 343, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 336, 215, 173, 319, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 335,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	226, 267, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 317, 329, 346,
	349, 0, 0, 0, 177, 348, 0, 0, 0, 0,
	0, 0, 0, 320, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 344, 251, 252, 253, 254, 218, 0,
	194, 347, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	214, 220, 0, 222, 193, 266, 216, 326, 229, 0,
	0, 0, 258, 225, 291, 230, 236, 279, 325, 264,
	284, 191, 316, 292, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 234, 0, 275,
	213, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 0, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 301, 0,
	0, 332, 333, 334, 318, 0, 205, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 208, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 293, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	1353, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 762, 763, 764,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 298, 314, 190, 289, 327, 195, 296,
	185, 262, 285, 0, 0, 182, 312, 295, 244, 227,
	228, 181, 0, 280, 206, 219, 202, 260, 0, 311,
	339, 201, 330, 0, 322, 184, 0, 321, 259, 308,
	313, 245, 239, 183, 310, 243, 238, 231, 210, 0,
	223, 271, 237, 272, 224, 249, 248, 250, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	232, 0, 0, 0, 340, 0, 283, 265, 0, 0,
	0, 281, 235, 309, 273, 315, 299, 323, 277, 274,
	175, 300, 204, 246, 186, 188, 200, 207, 209, 211,
	212, 255, 256, 268, 288, 302, 303, 304, 203, 196,
	282, 197, 221, 198, 176, 290, 199, 178, 269, 307,
	0, 217, 278, 242, 179, 241, 270, 306, 305, 187,
	331, 337, 338, 342, 0, 343, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 336, 215, 173, 319, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 335, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 226, 267,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 317, 329, 346, 349, 0,
	0, 0, 177, 348, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 344, 251, 252, 253, 254, 218, 0, 194, 347,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 214, 220,
	0, 222, 193, 266, 216, 326, 229, 0, 0, 0,
	258, 225, 291, 230, 236, 279, 325, 264, 284, 191,
	316, 292, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 234, 0, 275, 213, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 301, 0, 0, 332,
	333, 334, 318, 0, 205, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 643, 0, 233, 0, 0,
	0, 0, 0, 0, 293, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 651, 652, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 298, 314, 190, 289, 327, 195, 296, 185, 262,
	285, 0, 0, 182, 312, 295, 244, 227, 228, 181,
	0, 280, 206, 219, 202, 260, 0, 311, 339, 201,
	330, 629, 322, 184, 628, 321, 259, 308, 313, 245,
	239, 183, 310, 243, 238, 231, 210, 0, 223, 271,
	237, 272, 224, 249, 248, 250, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 232, 0,
	0, 0, 340, 0, 283, 265, 0, 0, 0, 281,
	235, 309, 273, 315, 299, 323, 641, 274, 175, 300,
	204, 246, 186, 188, 200, 207, 209, 211, 212, 255,
	256, 268, 288, 302, 303, 304, 203, 196, 282, 197,
	221, 198, 176, 290, 199, 178, 269, 307, 0, 217,
	278, 242, 179, 241, 270, 306, 305, 187, 331, 337,
	338, 342, 0, 343, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	336, 215, 173, 319, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 335, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 226, 267, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 317, 329, 346, 349, 0, 0, 0,
	177, 348, 0, 0, 0, 0, 0, 0, 642, 320,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 645,
	251, 252, 253, 254, 218, 0, 194, 347, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 214, 220, 0, 222,
	193, 266, 216, 326, 229, 0, 0, 0, 653, 648,
	649, 230, 236, 279, 325, 264, 284, 191, 316, 292,
	650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 234, 0, 275, 213, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 0,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 126, 301, 0, 332, 333, 334,
	318, 0, 205, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 293, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 1374, 0, 133, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	298, 314, 190, 289, 327, 195, 296, 185, 262, 285,
	0, 0, 182, 312, 295, 244, 227, 228, 181, 0,
	280, 206, 219, 202, 260, 0, 311, 339, 201, 330,
	0, 322, 184, 0, 321, 259, 308, 313, 245, 239,
	183, 310, 243, 238, 231, 210, 0, 223, 271, 237,
	272, 224, 249, 248, 250, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 232, 0, 0,
	0, 340, 0, 283, 265, 0, 0, 0, 281, 235,
	309, 273, 315, 299, 323, 277, 274, 175, 300, 204,
	246, 186, 188, 200, 207, 209, 211, 212, 255, 256,
	268, 288, 302, 303, 304, 203, 196, 282, 197, 221,
	198, 176, 290, 199, 178, 269, 307, 0, 217, 278,
	242, 179, 241, 270, 306, 305, 187, 331, 337, 338,
	342, 0, 343, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 336,
	215, 173, 319, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 335, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 226, 267, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 317, 329, 346, 349, 0, 0, 0, 177,
	348, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 344, 251,
	252, 253, 254, 218, 0, 194, 347, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 214, 220, 0, 222, 193,
	266, 216, 326, 229, 0, 0, 0, 258, 225, 291,
	230, 236, 279, 325, 264, 284, 191, 316, 292, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 234, 97, 275, 213, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 0, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 126, 301, 0, 332, 333, 334, 318,
	0, 205, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 293, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 1365, 0, 133, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 298,
	314, 190, 289, 327, 195, 296, 185, 262, 285, 0,
	0, 182, 312, 295, 244, 227, 228, 181, 0, 280,
	206, 219, 202, 260, 0, 311, 339, 201, 330, 0,
	322, 184, 0, 321, 259, 308, 313, 245, 239, 183,
	310, 243, 238, 231, 210, 0, 223, 271, 237, 272,
	224, 249, 248, 250, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 232, 0, 0, 0,
	340, 0, 283, 265, 0, 0, 0, 281, 235, 309,
	273, 315, 299, 323, 277, 274, 175, 300, 204, 246,
	186, 188, 200, 207, 209, 211, 212, 255, 256, 268,
	288, 302, 303, 304, 203, 196, 282, 197, 221, 198,
	176, 290, 199, 178, 269, 307, 0, 217, 278, 242,
	179, 241, 270, 306, 305, 187, 331, 337, 338, 342,
	0, 343, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 336, 215,
	173, 319, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 335, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 226, 267, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 317, 329, 346, 349, 0, 0, 0, 177, 348,
	0, 0, 0, 0, 0, 0, 0, 320, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 344, 251, 252,
	253, 254, 218, 0, 194, 347, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 214, 220, 0, 222, 193, 266,
	216, 326, 229, 0, 0, 0, 258, 225, 291, 230,
	236, 279, 325, 264, 284, 191, 316, 292, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 234, 97, 275, 213, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 0, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 301, 0, 0, 332, 333, 334, 318, 0,
	205, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	293, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 651, 652, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 298, 314, 190,
	289, 327, 195, 296, 185, 262, 285, 0, 0, 182,
	312, 295, 244, 227, 228, 181, 0, 280, 206, 219,
	202, 260, 0, 311, 339, 201, 330, 629, 322, 184,
	628, 321, 259, 308, 313, 245, 239, 183, 310, 243,
	238, 231, 210, 0, 223, 271, 237, 272, 224, 249,
	248, 250, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 232, 0, 0, 0, 340, 0,
	283, 265, 0, 0, 0, 281, 235, 309, 273, 315,
	299, 323, 277, 274, 175, 300, 204, 246, 186, 188,
	200, 207, 209, 211, 212, 255, 256, 268, 288, 302,
	303, 304, 203, 196, 282, 197, 221, 198, 176, 290,
	199, 178, 269, 307, 0, 217, 278, 242, 179, 241,
	270, 306, 305, 187, 331, 337, 338, 342, 0, 343,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 336, 215, 173, 319,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 335, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 226, 267, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 317,
	329, 346, 349, 0, 0, 0, 177, 348, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 344, 251, 252, 253, 254,
	218, 0, 194, 347, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 214, 220, 0, 222, 193, 266, 216, 326,
	229, 0, 0, 0, 653, 648, 649, 230, 236, 279,
	325, 264, 284, 191, 316, 292, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 234,
	0, 275, 213, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 0, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	126, 301, 0, 332, 333, 334, 318, 0, 205, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 293,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 298, 314, 190, 289,
	327, 195, 296, 185, 262, 285, 0, 0, 182, 312,
	295, 244, 227, 228, 181, 0, 280, 206, 219, 202,
	260, 0, 311, 339, 201, 330, 0, 322, 184, 0,
	321, 259, 308, 313, 245, 239, 183, 310, 243, 238,
	231, 210, 0, 223, 271, 237, 272, 224, 249, 248,
	250, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 232, 0, 0, 0, 340, 0, 283,
	265, 0, 0, 0, 281, 235, 309, 273, 315, 299,
	323, 277, 274, 175, 300, 204, 246, 186, 188, 200,
	207, 209, 211, 212, 255, 256, 268, 288, 302, 303,
	304, 203, 196, 282, 197, 221, 198, 176, 290, 199,
	178, 269, 307, 0, 217, 278, 242, 179, 241, 270,
	306, 305, 187, 331, 337, 338, 342, 0, 343, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 336, 215, 173, 319, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	335, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 226, 267, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 317, 329,
	346, 349, 0, 0, 0, 177, 348, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 344, 251, 252, 253, 254, 218,
	0, 194, 347, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 214, 220, 0, 222, 193, 266, 216, 326, 229,
	0, 0, 0, 258, 225, 291, 230, 236, 279, 325,
	264, 284, 191, 316, 292, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 234, 97,
	275, 213, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 301,
	0, 0, 332, 333, 334, 318, 0, 205, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 1002, 0,
	233, 0, 0, 0, 0, 0, 0, 293, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 1000, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 998, 0,
	0, 0, 0, 180, 298, 314, 190, 289, 327, 195,
	296, 185, 262, 285, 0, 0, 182, 312, 295, 244,
	227, 228, 181, 0, 280, 206, 219, 202, 260, 0,
	311, 339, 201, 330, 0, 322, 184, 0, 321, 259,
	308, 313, 245, 239, 183, 310, 243, 238, 231, 210,
	0, 223, 271, 237, 272, 224, 249, 248, 250, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 232, 0, 0, 0, 340, 0, 283, 265, 0,
	0, 0, 281, 235, 309, 273, 315, 299, 323, 277,
	274, 175, 300, 204, 246, 186, 188, 200, 207, 209,
	211, 212, 255, 256, 268, 288, 302, 303, 304, 203,
	196, 282, 197, 221, 198, 176, 290, 199, 178, 269,
	307, 0, 217, 278, 242, 179, 241, 270, 306, 305,
	187, 331, 337, 338, 342, 0, 343, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 336, 215, 173, 319, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 335, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 226,
	267, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 317, 329, 346, 349,
	0, 0, 0, 177, 348, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 344, 251, 252, 253, 254, 218, 0, 194,
	347, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 214,
	220, 0, 222, 193, 266, 216, 326, 229, 0, 0,
	0, 258, 225, 291, 230, 236, 279, 325, 264, 284,
	191, 316, 292, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 234, 0, 275, 213,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 301, 0, 0,
	332, 333, 334, 318, 0, 205, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 996, 0, 233, 0,
	0, 0, 0, 0, 0, 293, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 1000,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 998, 0, 0, 0,
	0, 180, 298, 314, 190, 289, 327, 195, 296, 185,
	262, 285, 0, 0, 182, 312, 295, 244, 227, 228,
	181, 0, 280, 206, 219, 202, 260, 0, 311, 339,
	201, 330, 0, 322, 184, 0, 321, 259, 308, 313,
	245, 239, 183, 310, 243, 238, 231, 210, 0, 223,
	271, 237, 272, 224, 249, 248, 250, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 232,
	0, 0, 0, 340, 0, 283, 265, 0, 0, 0,
	281, 235, 309, 273, 315, 299, 323, 277, 274, 175,
	300, 204, 246, 186, 188, 200, 207, 209, 211, 212,
	255, 256, 268, 288, 302, 303, 304, 203, 196, 282,
	197, 221, 198, 176, 290, 199, 178, 269, 307, 0,
	217, 278, 242, 179, 241, 270, 306, 305, 187, 331,
	337, 338, 342, 0, 343, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 336, 215, 173, 319, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 335, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 226, 267, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 317, 329, 346, 349, 0, 0,
	0, 177, 348, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	344, 251, 252, 253, 254, 218, 0, 194, 347, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 214, 220, 0,
	222, 193, 266, 216, 326, 229, 0, 0, 0, 258,
	225, 291, 230, 236, 279, 325, 264, 284, 191, 316,
	292, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 234, 0, 275, 213, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	0, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 301, 0, 0, 332, 333,
	334, 318, 0, 205, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 293, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2596, 0, 133, 505, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	298, 314, 190, 289, 327, 195, 296, 185, 262, 285,
	0, 0, 182, 312, 295, 244, 227, 228, 181, 0,
	280, 206, 219, 202, 260, 0, 311, 339, 201, 330,
	0, 322, 184, 0, 321, 259, 308, 313, 245, 239,
	183, 310, 243, 238, 231, 210, 0, 223, 271, 237,
	272, 224, 249, 248, 250, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 232, 0, 0,
	0, 340, 0, 283, 265, 0, 0, 0, 281, 235,
	309, 273, 315, 299, 323, 277, 274, 175, 300, 204,
	246, 186, 188, 200, 207, 209, 211, 212, 255, 256,
	268, 288, 302, 303, 304, 203, 196, 282, 197, 221,
	198, 176, 290, 199, 178, 269, 307, 0, 217, 278,
	242, 179, 241, 270, 306, 305, 187, 331, 337, 338,
	342, 0, 343, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 336,
	215, 173, 319, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 335, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 226, 267, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 317, 329, 346, 349, 0, 0, 0, 177,
	348, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 344, 251,
	252, 253, 254, 218, 0, 194, 347, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 214, 220, 0, 222, 193,
	266, 216, 326, 229, 0, 0, 0, 258, 225, 291,
	230, 236, 279, 325, 264, 284, 191, 316, 292, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 234, 0, 275, 213, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 0, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 301, 0, 0, 332, 333, 334, 318,
	0, 205, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 293, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 1000, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 998, 0, 0, 0, 0, 180, 298, 314,
	190, 289, 327, 195, 296, 185, 262, 285, 0, 0,
	182, 312, 295, 244, 227, 228, 181, 0, 280, 206,
	219, 202, 260, 0, 311, 339, 201, 330, 0, 322,
	184, 0, 321, 259, 308, 313, 245, 239, 183, 310,
	243, 238, 231, 210, 0, 223, 271, 237, 272, 224,
	249, 248, 250, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 232, 0, 0, 0, 340,
	0, 283, 265, 0, 0, 0, 281, 235, 309, 273,
	315, 299, 323, 277, 274, 175, 300, 204, 246, 186,
	188, 200, 207, 209, 211, 212, 255, 256, 268, 288,
	302, 303, 304, 203, 196, 282, 197, 221, 198, 176,
	290, 199, 178, 269, 307, 0, 217, 278, 242, 179,
	241, 270, 306, 305, 187, 331, 337, 338, 342, 0,
	343, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 336, 215, 173,
	319, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 335, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 226, 267, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	317, 329, 346, 349, 0, 0, 0, 177, 348, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 344, 251, 252, 253,
	254, 218, 0, 194, 347, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 214, 220, 0, 222, 193, 266, 216,
	326, 229, 0, 0, 0, 258, 225, 291, 230, 236,
	279, 325, 264, 284, 191, 316, 292, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	234, 0, 275, 213, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 0, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 301, 0, 0, 332, 333, 334, 318, 0, 205,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 293,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 1000, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2235, 0, 0, 0, 0, 180, 298, 314, 190, 289,
	327, 195, 296, 185, 262, 285, 0, 0, 182, 312,
	295, 244, 227, 228, 181, 0, 280, 206, 219, 202,
	260, 0, 311, 339, 201, 330, 0, 322, 184, 0,
	321, 259, 308, 313, 245, 239, 183, 310, 243, 238,
	231, 210, 0, 223, 271, 237, 272, 224, 249, 248,
	250, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 232, 0, 0, 0, 340, 0, 283,
	265, 0, 0, 0, 281, 235, 309, 273, 315, 299,
	323, 277, 274, 175, 300, 204, 246, 186, 188, 200,
	207, 209, 211, 212, 255, 256, 268, 288, 302, 303,
	304, 203, 196, 282, 197, 221, 198, 176, 290, 199,
	178, 269, 307, 0, 217, 278, 242, 179, 241, 270,
	306, 305, 187, 331, 337, 338, 342, 0, 343, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 336, 215, 173, 319, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	335, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 226, 267, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 317, 329,
	346, 349, 0, 0, 0, 177, 348, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 344, 251, 252, 253, 254, 218,
	0, 194, 347, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 214, 220, 0, 222, 193, 266, 216, 326, 229,
	0, 0, 0, 258, 225, 291, 230, 236, 279, 325,
	264, 284, 191, 316, 292, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 234, 0,
	275, 213, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 301,
	0, 0, 332, 333, 334, 318, 0, 205, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 1785, 0,
	233, 0, 0, 0, 0, 0, 0, 293, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 1000, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 298, 314, 190, 289, 327, 195,
	296, 185, 262, 285, 0, 0, 182, 312, 295, 244,
	227, 228, 181, 0, 280, 206, 219, 202, 260, 0,
	311, 339, 201, 330, 0, 322, 184, 0, 321, 259,
	308, 313, 245, 239, 183, 310, 243, 238, 231, 210,
	0, 223, 271, 237, 272, 224, 249, 248, 250, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 232, 0, 0, 0, 340, 0, 283, 265, 0,
	0, 0, 281, 235, 309, 273, 315, 299, 323, 277,
	274, 175, 300, 204, 246, 186, 188, 200, 207, 209,
	211, 212, 255, 256, 268, 288, 302, 303, 304, 203,
	196, 282, 197, 221, 198, 176, 290, 199, 178, 269,
	307, 0, 217, 278, 242, 179, 241, 270, 306, 305,
	187, 331, 337, 338, 342, 0, 343, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 336, 215, 173, 319, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 335, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 226,
	267, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 317, 329, 346, 349,
	0, 0, 0, 177, 348, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 344, 251, 252, 253, 254, 218, 0, 194,
	347, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 214,
	220, 0, 222, 193, 266, 216, 326, 229, 0, 0,
	0, 258, 225, 291, 230, 236, 279, 325, 264, 284,
	191, 316, 292, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 234, 0, 275, 213,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 301, 0, 0,
	332, 333, 334, 318, 0, 205, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 293, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2701, 0, 133, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 298, 314, 190, 289, 327, 195, 296, 185,
	262, 285, 0, 0, 182, 312, 295, 244, 227, 228,
	181, 0, 280, 206, 219, 202, 260, 0, 311, 339,
	201, 330, 0, 322, 184, 0, 321, 259, 308, 313,
	245, 239, 183, 310, 243, 238, 231, 210, 0, 223,
	271, 237, 272, 224, 249, 248, 250, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 232,
	0, 0, 0, 340, 0, 283, 265, 0, 0, 0,
	281, 235, 309, 273, 315, 299, 323, 277, 274, 175,
	300, 204, 246, 186, 188, 200, 207, 209, 211, 212,
	255, 256, 268, 288, 302, 303, 304, 203, 196, 282,
	197, 221, 198, 176, 290, 199, 178, 269, 307, 0,
	217, 278, 242, 179, 241, 270, 306, 305, 187, 331,
	337, 338, 342, 0, 343, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 336, 215, 173, 319, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 335, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 226, 267, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 317, 329, 346, 349, 0, 0,
	0, 177, 348, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	344, 251, 252, 253, 254, 218, 0, 194, 347, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 214, 220, 0,
	222, 193, 266, 216, 326, 229, 0, 0, 0, 258,
	225, 291, 230, 236, 279, 325, 264, 284, 191, 316,
	292, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 234, 0, 275, 213, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	0, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 301, 0, 0, 332, 333,
	334, 318, 0, 205, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 293, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 505, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	298, 314, 190, 289, 327, 195, 296, 185, 262, 285,
	0, 0, 182, 312, 295, 244, 227, 228, 181, 0,
	280, 206, 219, 202, 260, 0, 311, 339, 201, 330,
	0, 322, 184, 0, 321, 259, 308, 313, 245, 239,
	183, 310, 243, 238, 231, 210, 0, 223, 271, 237,
	272, 224, 249, 248, 250, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 232, 0, 0,
	0, 340, 0, 283, 265, 0, 0, 0, 281, 235,
	309, 273, 315, 299, 323, 277, 274, 175, 300, 204,
	246, 186, 188, 200, 207, 209, 211, 212, 255, 256,
	268, 288, 302, 303, 304, 203, 196, 282, 197, 221,
	198, 176, 290, 199, 178, 269, 307, 0, 217, 278,
	242, 179, 241, 270, 306, 305, 187, 331, 337, 338,
	342, 0, 343, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 336,
	215, 173, 319, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 335, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 226, 267, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 317, 329, 346, 349, 0, 0, 0, 177,
	348, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 344, 251,
	252, 253, 254, 218, 0, 194, 347, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 214, 220, 0, 222, 193,
	266, 216, 326, 229, 0, 0, 0, 258, 225, 291,
	230, 236, 279, 325, 264, 284, 191, 316, 292, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 234, 0, 275, 213, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 0, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 301, 0, 0, 332, 333, 334, 318,
	0, 205, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 293, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2610,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 298, 314,
	190, 289, 327, 195, 296, 185, 262, 285, 0, 0,
	182, 312, 295, 244, 227, 228, 181, 0, 280, 206,
	219, 202, 260, 0, 311, 339, 201, 330, 0, 322,
	184, 0, 321, 259, 308, 313, 245, 239, 183, 310,
	243, 238, 231, 210, 0, 223, 271, 237, 272, 224,
	249, 248, 250, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 232, 0, 0, 0, 340,
	0, 283, 265, 0, 0, 0, 281, 235, 309, 273,
	315, 299, 323, 277, 274, 175, 300, 204, 246, 186,
	188, 200, 207, 209, 211, 212, 255, 256, 268, 288,
	302, 303, 304, 203, 196, 282, 197, 221, 198, 176,
	290, 199, 178, 269, 307, 0, 217, 278, 242, 179,
	241, 270, 306, 305, 187, 331, 337, 338, 342, 0,
	343, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 336, 215, 173,
	319, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 335, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 226, 267, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	317, 329, 346, 349, 0, 0, 0, 177, 348, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 344, 251, 252, 253,
	254, 218, 0, 194, 347, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 214, 220, 0, 222, 193, 266, 216,
	326, 229, 0, 0, 0, 258, 225, 291, 230, 236,
	279, 325, 264, 284, 191, 316, 292, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	234, 0, 275, 213, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 0, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 301, 0, 0, 332, 333, 334, 318, 0, 205,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 293,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2345, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 298, 314, 190, 289,
	327, 195, 296, 185, 262, 285, 0, 0, 182, 312,
	295, 244, 227, 228, 181, 0, 280, 206, 219, 202,
	260, 0, 311, 339, 201, 330, 0, 322, 184, 0,
	321, 259, 308, 313, 245, 239, 183, 310, 243, 238,
	231, 210, 0, 223, 271, 237, 272, 224, 249, 248,
	250, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 232, 0, 0, 0, 340, 0, 283,
	265, 0, 0, 0, 281, 235, 309, 273, 315, 299,
	323, 277, 274, 175, 300, 204, 246, 186, 188, 200,
	207, 209, 211, 212, 255, 256, 268, 288, 302, 303,
	304, 203, 196, 282, 197, 221, 198, 176, 290, 199,
	178, 269, 307, 0, 217, 278, 242, 179, 241, 270,
	306, 305, 187, 331, 337, 338, 342, 0, 343, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 336, 215, 173, 319, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	335, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 226, 267, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 317, 329,
	346, 349, 0, 0, 0, 177, 348, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 344, 251, 252, 253, 254, 218,
	0, 194, 347, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 214, 220, 0, 222, 193, 266, 216, 326, 229,
	0, 0, 0, 258, 225, 291, 230, 236, 279, 325,
	264, 284, 191, 316, 292, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 234, 0,
	275, 213, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 301,
	0, 0, 332, 333, 334, 318, 0, 205, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 293, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 298, 314, 190, 289, 327, 195,
	296, 185, 262, 285, 0, 0, 182, 312, 295, 244,
	227, 228, 181, 0, 280, 206, 219, 202, 260, 0,
	311, 339, 201, 330, 0, 322, 184, 0, 321, 259,
	308, 313, 245, 239, 183, 310, 243, 238, 231, 210,
	0, 223, 271, 237, 272, 224, 249, 248, 250, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 2537, 0, 0, 297, 0,
	0, 232, 0, 0, 0, 340, 0, 283, 265, 0,
	0, 0, 281, 235, 309, 273, 315, 299, 323, 277,
	274, 175, 300, 204, 246, 186, 188, 200, 207, 209,
	211, 212, 255, 256, 268, 288, 302, 303, 304, 203,
	196, 282, 197, 221, 198, 176, 290, 199, 178, 269,
	307, 0, 217, 278, 242, 179, 241, 270, 306, 305,
	187, 331, 337, 338, 342, 0, 343, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 336, 215, 173, 319, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 335, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 226,
	267, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 317, 329, 346, 349,
	0, 0, 0, 177, 348, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 344, 251, 252, 253, 254, 218, 0, 194,
	347, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 214,
	220, 0, 222, 193, 266, 216, 326, 229, 0, 0,
	0, 258, 225, 291, 230, 236, 279, 325, 264, 284,
	191, 316, 292, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 234, 0, 275, 213,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 301, 0, 0,
	332, 333, 334, 318, 0, 205, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 293, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 298, 314, 190, 289, 327, 195, 296, 185,
	262, 285, 0, 0, 182, 312, 295, 244, 227, 228,
	181, 0, 280, 206, 219, 202, 260, 0, 311, 339,
	201, 330, 0, 322, 184, 0, 321, 259, 308, 313,
	245, 239, 183, 310, 243, 238, 231, 210, 0, 223,
	271, 237, 272, 224, 249, 248, 250, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 2354, 0, 0, 297, 0, 0, 232,
	0, 0, 0, 340, 0, 283, 265, 0, 0, 0,
	281, 235, 309, 273, 315, 299, 323, 277, 274, 175,
	300, 204, 246, 186, 188, 200, 207, 209, 211, 212,
	255, 256, 268, 288, 302, 303, 304, 203, 196, 282,
	197, 221, 198, 176, 290, 199, 178, 269, 307, 0,
	217, 278, 242, 179, 241, 270, 306, 305, 187, 331,
	337, 338, 342, 0, 343, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 336, 215, 173, 319, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 335, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 226, 267, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 317, 329, 346, 349, 0, 0,
	0, 177, 348, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	344, 251, 252, 253, 254, 218, 0, 194, 347, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 214, 220, 0,
	222, 193, 266, 216, 326, 229, 0, 0, 0, 258,
	225, 291, 230, 236, 279, 325, 264, 284, 191, 316,
	292, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 234, 0, 275, 213, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	0, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 301, 0, 0, 332, 333,
	334, 318, 0, 205, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 293, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	298, 314, 190, 289, 327, 195, 296, 185, 262, 285,
	0, 0, 182, 312, 295, 244, 227, 228, 181, 0,
	280, 206, 219, 202, 260, 0, 311, 339, 201, 330,
	0, 322, 184, 0, 321, 259, 308, 313, 245, 239,
	183, 310, 243, 238, 231, 210, 0, 223, 271, 237,
	272, 224, 249, 248, 250, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 232, 0, 0,
	0, 340, 0, 283, 265, 0, 0, 0, 281, 235,
	309, 273, 315, 299, 323, 277, 274, 175, 300, 204,
	246, 186, 188, 200, 207, 209, 211, 212, 255, 256,
	268, 288, 302, 303, 304, 203, 196, 282, 197, 221,
	198, 176, 290, 199, 178, 269, 307, 0, 217, 278,
	242, 179, 241, 270, 306, 305, 187, 331, 337, 338,
	342, 0, 343, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 336,
	215, 173, 319, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 335, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 226, 267, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 317, 329, 346, 349, 0, 0, 0, 177,
	348, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 344, 251,
	252, 253, 254, 218, 0, 194, 347, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 214, 220, 0, 222, 193,
	266, 216, 326, 229, 0, 0, 0, 258, 225, 291,
	230, 236, 279, 325, 264, 284, 191, 316, 292, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 234, 0, 275, 213, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 0, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 301, 0, 0, 332, 333, 334, 318,
	0, 205, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 293, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 298, 314,
	190, 289, 327, 195, 296, 185, 262, 285, 0, 0,
	182, 312, 295, 244, 227, 228, 181, 0, 280, 206,
	219, 202, 260, 0, 311, 339, 201, 330, 0, 322,
	184, 0, 321, 259, 308, 313, 245, 239, 183, 310,
	243, 238, 231, 210, 0, 223, 271, 237, 272, 224,
	249, 248, 250, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 232, 0, 0, 0, 340,
	0, 283, 265, 0, 0, 0, 281, 235, 309, 273,
	315, 299, 323, 277, 274, 175, 300, 204, 246, 186,
	188, 200, 207, 209, 211, 212, 255, 256, 268, 288,
	302, 303, 304, 203, 196, 282, 197, 221, 198, 176,
	290, 199, 178, 269, 307, 0, 217, 278, 242, 179,
	241, 270, 306, 305, 187, 331, 337, 338, 342, 0,
	343, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 336, 215, 173,
	319, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 335, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 226, 267, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	317, 329, 346, 349, 0, 0, 0, 177, 348, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 344, 251, 252, 253,
	254, 218, 0, 194, 347, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 214, 220, 0, 222, 193, 266, 216,
	326, 229, 0, 0, 0, 258, 225, 291, 230, 236,
	279, 325, 264, 284, 191, 316, 292, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	234, 0, 275, 213, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 0, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 301, 0, 0, 332, 333, 334, 318, 0, 205,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 293,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 298, 314, 190, 289,
	327, 195, 296, 185, 262, 285, 0, 0, 182, 312,
	295, 244, 227, 228, 181, 0, 280, 206, 219, 202,
	260, 0, 311, 339, 201, 330, 0, 322, 184, 0,
	321, 259, 308, 313, 245, 239, 183, 310, 243, 238,
	231, 210, 0, 223, 271, 237, 272, 224, 249, 248,
	250, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 232, 0, 0, 0, 340, 0, 283,
	265, 0, 0, 0, 281, 235, 309, 273, 315, 299,
	323, 277, 274, 175, 300, 204, 246, 186, 188, 200,
	207, 209, 211, 212, 255, 256, 268, 288, 302, 303,
	304, 203, 196, 282, 197, 221, 198, 176, 290, 199,
	178, 269, 307, 0, 217, 278, 242, 179, 241, 270,
	306, 305, 187, 331, 337, 338, 342, 0, 343, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 336, 215, 173, 319, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	335, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 226, 267, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 317, 329,
	346, 349, 0, 0, 0, 177, 348, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 344, 251, 252, 253, 254, 218,
	0, 194, 347, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 214, 220, 0, 222, 193, 266, 216, 326, 229,
	0, 0, 0, 258, 225, 291, 230, 236, 279, 325,
	264, 284, 191, 316, 292, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 234, 0,
	275, 213, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 0, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 301,
	0, 0, 332, 333, 334, 318, 0, 205, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 293, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 2112, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 298, 314, 190, 289, 327, 195,
	296, 185, 262, 285, 0, 0, 182, 312, 295, 244,
	227, 228, 181, 0, 280, 206, 219, 202, 260, 0,
	311, 339, 201, 330, 0, 322, 184, 0, 321, 259,
	308, 313, 245, 239, 183, 310, 243, 238, 231, 210,
	0, 223, 271, 237, 272, 224, 249, 248, 250, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 232, 0, 0, 0, 340, 0, 283, 265, 0,
	0, 0, 281, 235, 309, 273, 315, 299, 323, 277,
	274, 175, 300, 204, 246, 186, 188, 200, 207, 209,
	211, 212, 255, 256, 268, 288, 302, 303, 304, 203,
	196, 282, 197, 221, 198, 176, 290, 199, 178, 269,
	307, 0, 217, 278, 242, 179, 241, 270, 306, 305,
	187, 331, 337, 338, 342, 0, 343, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 336, 215, 173, 319, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 335, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 226,
	267, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 317, 329, 346, 349,
	0, 0, 0, 177, 348, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 344, 251, 252, 253, 254, 218, 0, 194,
	347, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 214,
	220, 0, 222, 193, 266, 216, 326, 229, 0, 0,
	0, 258, 225, 291, 230, 236, 279, 325, 264, 284,
	191, 316, 292, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 234, 0, 275, 213,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 0, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 301, 0, 0,
	332, 333, 334, 318, 0, 205, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 293, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 1000,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 298, 314, 190, 289, 327, 195, 296, 185,
	262, 285, 0, 0, 182, 312, 295, 244, 227, 228,
	181, 0, 280, 206, 219, 202, 260, 0, 311, 339,
	201, 330, 0, 322, 184, 0, 321, 259, 308, 313,
	245, 239, 183, 310, 243, 238, 231, 210, 0, 223,
	271, 237, 272, 224, 249, 248, 250, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 232,
	0, 0, 0, 340, 0, 283, 265, 0, 0, 0,
	281, 235, 309, 273, 315, 299, 323, 277, 274, 175,
	300, 204, 246, 186, 188, 200, 207, 209, 211, 212,
	255, 256, 268, 288, 302, 303, 304, 203, 196, 282,
	197, 221, 198, 176, 290, 199, 178, 269, 307, 0,
	217, 278, 242, 179, 241, 270, 306, 305, 187, 331,
	337, 338, 342, 0, 343, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 336, 215, 173, 319, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 335, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 226, 267, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 317, 329, 346, 349, 0, 0,
	0, 177, 348, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	344, 251, 252, 253, 254, 218, 0, 194, 347, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 214, 220, 0,
	222, 193, 266, 216, 326, 229, 0, 0, 0, 258,
	225, 291, 230, 236, 279, 325, 264, 284, 191, 316,
	292, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 234, 0, 275, 213, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	0, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 301, 0, 0, 332, 333,
	334, 318, 0, 205, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 293, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	298, 314, 190, 289, 327, 195, 296, 185, 262, 285,
	0, 0, 182, 312, 295, 244, 227, 228, 181, 0,
	280, 206, 219, 202, 260, 0, 311, 339, 201, 330,
	0, 322, 184, 0, 321, 259, 308, 313, 245, 239,
	183, 310, 243, 238, 231, 210, 0, 223, 271, 237,
	272, 224, 249, 248, 250, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 232, 0, 0,
	0, 340, 0, 283, 265, 0, 0, 0, 281, 235,
	309, 273, 315, 299, 323, 277, 274, 175, 300, 204,
	246, 186, 188, 200, 207, 209, 211, 212, 255, 256,
	268, 288, 302, 303, 304, 203, 196, 282, 197, 221,
	198, 176, 290, 199, 178, 269, 307, 0, 217, 278,
	242, 179, 241, 270, 306, 305, 187, 331, 337, 338,
	342, 0, 343, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 336,
	215, 173, 319, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 335, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 226, 267, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 317, 329, 346, 349, 0, 0, 0, 177,
	348, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 344, 251,
	252, 253, 254, 218, 0, 194, 347, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 214, 220, 0, 222, 193,
	266, 216, 326, 229, 0, 0, 0, 258, 225, 291,
	230, 236, 279, 325, 264, 284, 191, 316, 292, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 234, 0, 275, 213, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 0, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 301, 0, 0, 332, 333, 334, 318,
	0, 205, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 293, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 1794, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 298, 314,
	190, 289, 327, 195, 296, 185, 262, 285, 0, 0,
	182, 312, 295, 244, 227, 228, 181, 0, 280, 206,
	219, 202, 260, 0, 311, 339, 201, 330, 0, 322,
	184, 0, 321, 259, 308, 313, 245, 239, 183, 310,
	243, 238, 231, 210, 0, 223, 271, 237, 272, 224,
	249, 248, 250, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 232, 0, 0, 0, 340,
	0, 283, 265, 0, 0, 0, 281, 235, 309, 273,
	315, 299, 323, 277, 274, 175, 300, 204, 246, 186,
	188, 200, 207, 209, 211, 212, 255, 256, 268, 288,
	302, 303, 304, 203, 196, 282, 197, 221, 198, 176,
	290, 199, 178, 269, 307, 0, 217, 278, 242, 179,
	241, 270, 306, 305, 187, 331, 337, 338, 342, 0,
	343, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 336, 215, 173,
	319, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 335, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 226, 267, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	317, 329, 346, 349, 0, 0, 0, 177, 348, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 344, 251, 252, 253,
	254, 218, 0, 194, 347, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 214, 220, 0, 222, 193, 266, 216,
	326, 229, 0, 0, 0, 258, 225, 291, 230, 236,
	279, 325, 264, 284, 191, 316, 292, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	234, 0, 275, 213, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 0, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 0, 0, 0, 332, 333, 334, 318, 301, 205,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 293, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 298, 314, 190, 289, 327, 195, 296,
	185, 262, 285, 0, 0, 182, 312, 295, 244, 227,
	228, 181, 0, 280, 206, 219, 202, 260, 0, 311,
	339, 201, 330, 0, 322, 184, 0, 321, 259, 308,
	313, 245, 239, 183, 310, 243, 238, 231, 210, 0,
	223, 271, 237, 272, 224, 249, 248, 250, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	232, 0, 0, 0, 340, 0, 283, 265, 0, 0,
	0, 281, 235, 309, 273, 315, 299, 323, 277, 274,
	175, 300, 204, 246, 186, 188, 200, 207, 209, 211,
	212, 255, 256, 268, 288, 302, 303, 304, 203, 196,
	282, 197, 221, 198, 176, 290, 199, 178, 269, 307,
	0, 217, 278, 242, 179, 241, 270, 306, 305, 187,
	331, 337, 338, 342, 0, 343, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 336, 215, 173, 319, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 335, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 226, 267,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 317, 329, 346, 349, 0,
	0, 0, 177, 348, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 344, 251, 252, 253, 254, 218, 0, 194, 347,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 214, 220,
	0, 222, 193, 266, 216, 326, 229, 0, 0, 0,
	258, 225, 291, 230, 236, 279, 325, 264, 284, 191,
	316, 292, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 234, 0, 275, 213, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 301, 0, 0, 332,
	333, 334, 318, 0, 205, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 293, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 298, 314, 190, 289, 327, 195, 296, 185, 262,
	285, 0, 0, 182, 312, 295, 244, 227, 228, 181,
	0, 280, 206, 219, 202, 260, 0, 311, 339, 201,
	330, 0, 322, 184, 0, 321, 259, 308, 313, 245,
	239, 183, 310, 243, 238, 231, 210, 0, 223, 271,
	237, 272, 224, 249, 248, 250, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 1704, 0, 0, 0, 297, 0, 0, 232, 0,
	0, 0, 340, 0, 283, 265, 0, 0, 0, 281,
	235, 309, 273, 315, 299, 323, 277, 274, 175, 300,
	204, 246, 186, 188, 200, 207, 209, 211, 212, 255,
	256, 268, 288, 302, 303, 304, 203, 196, 282, 197,
	221, 198, 176, 290, 199, 178, 269, 307, 0, 217,
	278, 242, 179, 241, 270, 306, 305, 187, 331, 337,
	338, 342, 0, 343, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	336, 215, 173, 319, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 335, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 226, 267, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 317, 329, 346, 349, 0, 0, 0,
	177, 348, 0, 0, 0, 0, 0, 0, 0, 320,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 344,
	251, 252, 253, 254, 218, 0, 194, 347, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 214, 220, 0, 222,
	193, 266, 216, 326, 229, 0, 0, 0, 258, 225,
	291, 230, 236, 279, 325, 264, 284, 191, 316, 292,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 234, 0, 275, 213, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 0,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 301, 0, 0, 332, 333, 334,
	318, 0, 205, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 293, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 298,
	314, 190, 289, 327, 195, 296, 185, 262, 285, 0,
	0, 182, 312, 295, 244, 227, 228, 181, 0, 280,
	206, 219, 202, 260, 0, 311, 339, 201, 330, 0,
	322, 184, 0, 321, 259, 308, 313, 245, 239, 183,
	310, 243, 238, 231, 210, 0, 223, 271, 237, 272,
	224, 249, 248, 250, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 232, 0, 0, 0,
	340, 0, 283, 265, 0, 0, 0, 281, 235, 309,
	273, 315, 299, 323, 277, 274, 175, 300, 204, 246,
	186, 188, 200, 207, 209, 211, 212, 255, 256, 268,
	288, 302, 303, 304, 203, 196, 282, 197, 221, 198,
	176, 290, 199, 178, 269, 307, 0, 217, 278, 242,
	179, 241, 270, 306, 305, 187, 331, 337, 338, 342,
	0, 343, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 336, 215,
	173, 319, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 335, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 226, 267, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 317, 329, 346, 349, 0, 0, 0, 177, 348,
	0, 0, 0, 0, 0, 0, 0, 320, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 344, 251, 252,
	253, 254, 218, 0, 194, 347, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 214, 220, 0, 222, 193, 266,
	216, 326, 229, 0, 0, 0, 258, 225, 291, 230,
	236, 279, 325, 264, 284, 191, 316, 292, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 0, 0, 0, 174,
	0, 234, 0, 275, 213, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 0, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 301, 0, 0, 332, 333, 334, 318, 0,
	205, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	293, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 298, 314, 190,
	289, 327, 195, 296, 185, 262, 285, 0, 0, 182,
	312, 295, 244, 227, 228, 181, 0, 280, 206, 219,
	202, 260, 0, 311, 339, 201, 330, 0, 322, 184,
	0, 321, 259, 308, 313, 245, 239, 183, 310, 243,
	238, 231, 210, 0, 223, 271, 237, 272, 224, 249,
	248, 250, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 232, 0, 0, 0, 340, 0,
	283, 265, 0, 0, 0, 281, 235, 309, 273, 315,
	299, 323, 380, 274, 175, 300, 204, 246, 186, 188,
	200, 207, 209, 211, 212, 255, 256, 268, 288, 302,
	303, 304, 203, 196, 282, 197, 221, 198, 176, 290,
	199, 178, 269, 307, 0, 217, 278, 242, 179, 241,
	270, 306, 305, 187, 331, 337, 338, 342, 0, 343,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 336, 215, 173, 319,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 335, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 226, 267, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 317,
	329, 346, 349, 0, 0, 0, 177, 348, 0, 0,
	0, 0, 0, 0, 381, 320, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 344, 251, 252, 253, 254,
	218, 0, 194, 347, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 214, 220, 0, 222, 193, 266, 216, 326,
	229, 0, 0, 0, 258, 225, 291, 230, 236, 279,
	325, 264, 284, 191, 316, 292, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 234,
	0, 275, 213, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 0, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	301, 0, 0, 332, 333, 334, 318, 0, 205, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 293, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 298, 314, 190, 289, 327,
	195, 296, 185, 262, 285, 0, 0, 182, 312, 295,
	244, 227, 228, 181, 0, 280, 206, 219, 202, 260,
	0, 311, 339, 201, 330, 0, 322, 184, 0, 321,
	259, 308, 313, 245, 239, 183, 310, 243, 238, 231,
	210, 0, 223, 271, 237, 272, 224, 249, 248, 250,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 324, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 232, 0, 0, 0, 340, 0, 283, 265,
	0, 0, 0, 281, 235, 309, 273, 315, 299, 323,
	277, 274, 175, 300, 204, 246, 186, 188, 200, 207,
	209, 211, 212, 255, 256, 268, 288, 302, 303, 304,
	203, 196, 282, 197, 221, 198, 176, 290, 199, 178,
	269, 307, 0, 217, 278, 242, 179, 241, 270, 306,
	305, 187, 331, 337, 338, 342, 0, 343, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 336, 215, 173, 319, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 335,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	226, 267, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 317, 329, 346,
	349, 0, 0, 0, 177, 348, 0, 0, 0, 0,
	0, 0, 0, 320, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 344, 251, 252, 253, 254, 218, 0,
	194, 347, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	214, 220, 0, 222, 193, 266, 216, 326, 229, 0,
	0, 0, 258, 225, 291, 230, 236, 279, 325, 264,
	284, 191, 316, 292, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 234, 0, 275,
	213, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 0, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 301, 0,
	0, 332, 333, 334, 318, 0, 205, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 208, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 293, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 298, 314, 190, 289, 327, 195, 296,
	185, 262, 285, 0, 0, 182, 312, 295, 244, 227,
	228, 181, 0, 280, 206, 219, 202, 260, 0, 311,
	339, 201, 330, 0, 322, 184, 0, 321, 259, 308,
	313, 245, 239, 183, 310, 243, 238, 231, 210, 0,
	223, 271, 237, 272, 224, 249, 248, 250, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	232, 0, 0, 0, 340, 0, 283, 265, 0, 0,
	0, 281, 235, 309, 273, 315, 299, 323, 277, 274,
	175, 300, 204, 246, 186, 188, 200, 207, 209, 211,
	212, 255, 256, 268, 288, 302, 303, 304, 203, 196,
	282, 197, 221, 198, 176, 290, 199, 178, 269, 307,
	0, 217, 278, 242, 179, 241, 270, 306, 305, 187,
	331, 337, 338, 342, 0, 343, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 336, 215, 173, 319, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 335, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 226, 267,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 317, 329, 346, 349, 0,
	0, 0, 177, 348, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 344, 251, 252, 253, 254, 218, 0, 194, 347,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 214, 220,
	0, 222, 193, 266, 216, 326, 229, 0, 0, 0,
	258, 225, 291, 230, 236, 279, 325, 264, 284, 191,
	316, 292, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 234, 0, 275, 213, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 0, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 301, 0, 0, 332,
	333, 334, 318, 0, 205, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 293, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 298, 314, 190, 289, 327, 195, 296, 185, 262,
	285, 0, 0, 182, 312, 295, 244, 227, 228, 181,
	0, 280, 206, 219, 202, 260, 0, 311, 339, 201,
	330, 0, 322, 184, 0, 321, 259, 308, 313, 245,
	239, 183, 310, 243, 238, 231, 210, 0, 223, 271,
	237, 272, 224, 249, 248, 250, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 232, 0,
	0, 0, 340, 0, 283, 265, 0, 0, 0, 281,
	235, 309, 273, 315, 299, 323, 277, 274, 175, 300,
	204, 246, 186, 188, 200, 207, 209, 211, 212, 255,
	256, 268, 288, 302, 303, 304, 203, 196, 282, 197,
	221, 198, 176, 290, 199, 178, 269, 307, 0, 217,
	278, 242, 179, 241, 270, 306, 305, 187, 331, 337,
	338, 342, 0, 343, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	336, 215, 173, 319, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 335, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 226, 267, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 317, 329, 346, 349, 0, 0, 0,
	177, 348, 0, 0, 0, 0, 0, 0, 0, 320,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 344,
	251, 252, 253, 254, 218, 0, 194, 347, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 214, 220, 0, 222,
	193, 266, 216, 326, 229, 0, 0, 0, 258, 225,
	291, 230, 236, 279, 325, 264, 284, 191, 316, 292,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 234, 0, 275, 213, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 0,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 301, 0, 0, 332, 333, 334,
	318, 0, 205, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 293, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 298,
	314, 190, 289, 327, 195, 296, 185, 262, 285, 0,
	0, 182, 312, 295, 244, 227, 228, 181, 0, 280,
	206, 219, 202, 260, 0, 311, 339, 201, 330, 0,
	322, 184, 0, 321, 259, 308, 313, 245, 239, 183,
	310, 243, 238, 231, 210, 0, 223, 271, 237, 272,
	224, 249, 248, 250, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 232, 0, 0, 0,
	340, 0, 283, 265, 0, 0, 0, 281, 235, 309,
	273, 315, 299, 323, 277, 274, 175, 300, 204, 246,
	186, 188, 420, 207, 209, 211, 212, 255, 256, 268,
	288, 302, 303, 304, 203, 196, 282, 197, 221, 198,
	176, 290, 199, 178, 269, 307, 0, 217, 278, 242,
	179, 241, 270, 306, 305, 187, 331, 337, 338, 342,
	0, 343, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 336, 215,
	173, 319, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 335, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 226, 267, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 317, 329, 346, 349, 0, 0, 0, 177, 348,
	0, 0, 0, 0, 0, 0, 0, 320, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 344, 251, 252,
	253, 254, 218, 0, 194, 347, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 214, 220, 0, 222, 193, 266,
	216, 326, 229, 0, 0, 0, 258, 225, 291, 230,
	236, 279, 325, 264, 284, 191, 316, 292, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 234, 0, 275, 213, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 0, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 301, 0, 0, 332, 333, 334, 318, 0,
	205, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	208, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	293, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 684, 685, 686, 1766, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 298, 314, 190,
	289, 327, 195, 296, 185, 262, 285, 0, 0, 182,
	312, 295, 244, 227, 228, 181, 0, 280, 206, 219,
	202, 260, 0, 311, 339, 201, 330, 0, 322, 184,
	0, 321, 259, 308, 313, 245, 239, 183, 310, 243,
	238, 231, 210, 0, 223, 271, 237, 272, 224, 249,
	248, 250, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 232, 0, 0, 0, 340, 0,
	283, 265, 0, 0, 0, 281, 235, 309, 273, 315,
	299, 323, 277, 274, 175, 300, 204, 246, 186, 188,
	200, 207, 209, 211, 212, 255, 256, 268, 288, 302,
	303, 304, 203, 196, 282, 197, 221, 198, 176, 290,
	199, 178, 269, 307, 0, 217, 278, 242, 179, 241,
	270, 306, 305, 187, 331, 337, 338, 342, 0, 343,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 336, 215, 173, 319,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 335, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 226, 267, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 317,
	329, 346, 349, 0, 0, 0, 177, 348, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 344, 251, 252, 253, 254,
	218, 0, 194, 347, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 341, 214, 220, 0, 222, 193, 266, 216, 326,
	229, 263, 0, 0, 258, 225, 291, 230, 236, 279,
	325, 264, 284, 191, 316, 292, 240, 0, 208, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 293, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 684,
	685, 686, 1766, 0, 0, 0, 189, 174, 0, 234,
	0, 275, 213, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 318, 0, 205, 0,
	0, 0, 0, 0, 180, 298, 314, 190, 289, 327,
	195, 296, 185, 262, 285, 0, 0, 182, 312, 295,
	244, 227, 228, 181, 0, 280, 206, 219, 202, 260,
	0, 311, 339, 201, 330, 0, 322, 184, 0, 321,
	259, 308, 313, 245, 239, 183, 310, 243, 238, 231,
	210, 0, 223, 271, 237, 272, 224, 249, 248, 250,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 232, 0, 0, 0, 340, 0, 283, 265,
	0, 0, 0, 281, 235, 309, 273, 315, 299, 323,
	277, 274, 175, 300, 204, 246, 186, 188, 200, 207,
	209, 211, 212, 255, 256, 268, 288, 302, 303, 304,
	203, 196, 282, 197, 221, 198, 176, 290, 199, 178,
	269, 307, 0, 217, 278, 242, 179, 241, 270, 306,
	305, 187, 331, 337, 338, 342, 0, 343, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 336, 215, 173, 319, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 335,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	226, 267, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 317, 329, 346,
	349, 0, 0, 0, 177, 348, 0, 0, 0, 0,
	0, 0, 0, 320, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 344, 251, 252, 253, 254, 218, 0,
	194, 347, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 341,
	214, 220, 0, 222, 193, 266, 216, 326, 229, 263,
	0, 0, 258, 225, 291, 230, 236, 279, 325, 264,
	284, 191, 316, 292, 240, 0, 208, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 293, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 684, 685, 686,
	0, 0, 0, 0, 189, 174, 0, 234, 0, 275,
	213, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 318, 0, 205, 0, 0, 0,
	0, 0, 180, 298, 314, 190, 289, 327, 195, 296,
	185, 262, 285, 0, 0, 182, 312, 295, 244, 227,
	228, 181, 0, 280, 206, 219, 202, 260, 0, 311,
	339, 201, 330, 0, 322, 184, 0, 321, 259, 308,
	313, 245, 239, 183, 310, 243, 238, 231, 210, 0,
	223, 271, 237, 272, 224, 249, 248, 250, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	232, 0, 0, 0, 340, 0, 283, 265, 0, 0,
	0, 281, 235, 309, 273, 315, 299, 323, 277, 274,
	175, 300, 204, 246, 186, 188, 200, 207, 209, 211,
	212, 255, 256, 268, 288, 302, 303, 304, 203, 196,
	282, 197, 221, 198, 176, 290, 199, 178, 269, 307,
	0, 217, 278, 242, 179, 241, 270, 306, 305, 187,
	331, 337, 338, 342, 0, 343, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 336, 215, 173, 319, 126, 261, 38, 116,
	96, 0, 0, 0, 0, 0, 257, 335, 0, 0,
	0, 0, 286, 0, 0, 0, 121, 0, 226, 267,
	0, 287, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 294, 317, 329, 346, 349, 0,
	0, 0, 177, 348, 0, 0, 0, 71, 0, 0,
	0, 320, 0, 123, 0, 328, 0, 0, 0, 0,
	0, 344, 251, 252, 253, 254, 218, 0, 194, 347,
	276, 762, 763, 764, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 214, 220,
	0, 222, 193, 266, 216, 326, 229, 0, 0, 0,
	258, 225, 291, 230, 236, 279, 325, 264, 284, 191,
	316, 292, 240, 0, 0, 0, 0, 0, 0, 870,
	0, 117, 118, 0, 119, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 174, 0, 234, 0, 275, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	115, 124, 0, 69, 0, 0, 0, 0, 0, 332,
	333, 334, 318, 870, 205, 0, 0, 0, 0, 0,
	114, 108, 107, 0, 0, 0, 0, 44, 0, 858,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 878, 882, 884,
	886, 888, 889, 891, 0, 895, 892, 893, 894, 0,
	0, 873, 874, 875, 876, 856, 857, 879, 0, 859,
	0, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 871, 877, 0, 0, 110, 111, 112, 0, 0,
	881, 883, 885, 887, 890, 0, 0, 0, 0, 0,
	1154, 0, 0, 1151, 627, 0, 0, 1153, 1150, 1152,
	1156, 1157, 0, 858, 0, 1155, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 113, 872, 80, 0, 0,
	0, 878, 882, 884, 886, 888, 889, 891, 0, 895,
	892, 893, 894, 0, 0, 873, 874, 875, 876, 856,
	857, 879, 0, 859, 0, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 871, 877, 0, 0, 0,
	0, 0, 0, 0, 881, 883, 885, 887, 890, 0,
	81, 0, 0, 629, 0, 0, 628, 0, 0, 82,
	37, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 2301, 0, 0, 0, 600, 0,
	0, 0, 39, 0, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1161, 1162, 1163, 1164, 1165,
	1166, 1159, 1160, 0, 619, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2283, 0, 0, 0, 0,
	0, 0, 2301, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 83, 84, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 601, 622, 0, 2283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 880, 617, 0, 0,
	0, 0, 0, 2283, 400, 0, 399, 406, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 404,
	0, 405, 409, 0, 0, 391, 0, 0, 0, 618,
	623, 0, 0, 2381, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 0, 613, 626,
	0, 0, 0, 610, 608, 607, 0, 612, 602, 603,
	2287, 624, 625, 0, 418, 0, 0, 419, 0, 0,
	0, 2291, 0, 620, 621, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2280, 0, 0, 0, 2282, 2284, 2286, 0, 2288,
	2289, 2290, 2292, 2293, 2294, 2296, 2297, 2298, 2299, 0,
	615, 2287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2287, 0,
	0, 2302, 2280, 0, 0, 0, 2282, 2284, 2286, 2291,
	2288, 2289, 2290, 2292, 2293, 2294, 2296, 2297, 2298, 2299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2280,
	0, 0, 0, 2282, 2284, 2286, 2300, 2288, 2289, 2290,
	2292, 2293, 2294, 2296, 2297, 2298, 2299, 0, 0, 0,
	0, 0, 2302, 2279, 0, 0, 0, 392, 394, 393,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 2302,
	0, 0, 2295, 0, 0, 417, 0, 2300, 0, 2285,
	0, 400, 395, 399, 406, 396, 386, 0, 0, 0,
	0, 0, 0, 0, 2279, 403, 404, 0, 405, 409,
	0, 0, 391, 0, 2300, 0, 0, 0, 0, 0,
	0, 400, 414, 399, 406, 396, 0, 0, 0, 0,
	0, 2279, 0, 2295, 0, 403, 404, 0, 405, 409,
	2285, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 414, 0, 419, 0, 0, 0, 0, 0,
	2295, 0, 0, 0, 0, 0, 0, 2285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 401, 407, 0, 408, 410, 0,
	0, 411, 412, 413, 0, 0, 415, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 394, 393, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 417, 0, 392, 394, 393, 0, 0, 395,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 401, 407, 0, 408, 410, 0, 0, 411, 412,
	413, 0, 0, 415, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 401, 407, 0, 408, 410, 0, 0, 411, 412,
	413, 0, 0, 415, 416,
}

var yyPact = [...]int{
	28716, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -155, 26147, 26147,
	-1000, -1000, 1564, -1000, 25649, 10201, 26645, 154, 152, 26645,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 400,
	-1000, 25151, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 362,
	29284, 27143, 255, 7701, 26645, -282, -1000, 2147, -151, -1000,
	-1000, -1000, -1000, -1000, -1000, 395, 561, 24653, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 28937, 65, 561, 522, 553, 721,
	721, 11695, 2147, 219, 300, -1000, 749, 28716, 28417, 337,
	26645, -1000, 987, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 337, -1000, -1000, -1000, 2147, 2147, -1000, 26645,
	26645, -17, 1090, -1000, 223, 240, 230, 985, -1000, -1000,
	-1000, -1000, -1000, 2162, -1000, 26645, 26645, 1783, 26645, -1000,
	1336, 279, 29511, 1936, 854, 463, 1831, -1000, -1000, 1772,
	-1000, 77, 90, 102, 557, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 87, -1000, 2029, -1000, -1000, 79, -1000, -1000,
	72, -1000, -1000, -1000, -83, -1000, -1000, -1000, -1000, -1000,
	-154, -1000, -1000, -154, 624, 1114, 7701, -1000, 1224, -1000,
	1565, -1000, -1000, -1000, -1000, 5202, 9195, 9195, 9195, 9195,
	-1000, -1000, 1668, 7701, 1769, 1767, -1000, -1000, -1000, -1000,
	977, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1431, 8697, -1000, 1766, 1763, 1761, 1760,
	1755, 1754, 1747, 1746, 1745, 1743, 1740, 1593, 1738, 1429,
	1428, 1737, 1731, 1730, 9195, 1427, 1593, 1593, 1729, 1724,
	1723, 1720, 1719, 1718, 1717, 1716, 1715, 1714, 1712, 1708,
	1706, 1705, 1702, 1701, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 28819, -1000, 973,
	752, -1000, 1689, 1928, 2070, 1643, 2139, 2063, 2057, 2040,
	2028, 1313, -1000, -1000, 26645, 26645, 56, 357, 357, 357,
	380, 357, 397, -1000, -1000, -1000, -1000, -1000, -1000, 478,
	-1000, -1000, -1000, -1000, 852, 26645, -1000, 1635, 1038, 2054,
	303, 294, 206, -1000, 1038, 257, 297, 2070, 2070, -67,
	-108, 1038, 1038, -108, 66, -1000, -1000, -1000, 1146, 283,
	1146, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2032, 2019,
	362, 362, 366, -1000, -158, -1000, -1000, 513, -1000, 502,
	-1000, 1336, 276, 275, 889, 1153, -1000, 1061, 26645, 26645,
	26645, 1061, 1061, 14686, 14188, -1000, 2070, 1643, -1000, 1567,
	1758, 1643, 362, 362, 362, 362, 362, 362, 362, 26645,
	26645, 6696, 6696, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 278, -1000, -1000, -1000, -1000, -1000, 239, 1688, -1000,
	26645, 238, 2070, 1928, 2070, -1000, -1000, 970, 1311, 1420,
	-1000, -1000, 223, 1002, -1000, 728, -1000, -1000, -1000, -1000,
	26645, 231, -1000, -1000, 1415, 1687, -1000, 360, 837, 968,
	-1000, 116, 29541, 22156, 1336, 22156, 26645, -1000, -1000, -1000,
	-1000, -1000, -1000, -90, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 71, -1000, 71,
	7701, 7701, 7701, 7701, 7701, -1000, 390, 8199, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9195, 9195, 9195, 9195, 9195,
	9195, 9195, 9195, 9195, 9195, 9195, 9195, 1667, 1057, 9195,
	9195, 9195, 1758, 2287, 882, -1000, -1000, -1000, -1000, -1000,
	1101, 1114, 7701, 7701, 26645, -1000, 28711, 7701, 7701, 108,
	7701, 2022, 2022, 3707, 26645, 7701, -1000, 1566, 1557, -1000,
	-1000, 1193, 7701, -1000, -1000, 7701, 9195, 7701, -1000, -1000,
	-1000, -1000, 69, 2022, 7701, 7701, 2022, 2022, 2022, 1120,
	2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 26645, 1907,
	54, -1000, -1000, -1000, 1606, -1000, 1650, 1650, 1606, 1606,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1657,
	1673, -1000, -1000, 1649, 1649, 1649, 1606, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1653, 1653, 1654, 1653, 26645, 2070, -282, 6198,
	-1000, -286, 1928, 7701, -1000, -1000, 7701, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1419, 2003, -1000, 1671, -1000,
	378, 357, -1000, 26645, 1121, 22156, 1336, 1327, 26645, 357,
	366, -1000, 26645, 852, 1998, 26645, 2152, 9195, 22156, 1146,
	1038, -1000, 2152, 1146, -1000, -1000, -1000, 1038, 1038, -1000,
	-1000, -1000, -1000, 1146, 1146, -1000, -1000, -98, 2152, 2152,
	-109, 26645, 26645, 357, 26645, -1000, -1000, -1000, -1000, 26645,
	-1000, -1000, 26645, 22156, 20662, -1000, -137, 519, 493, 505,
	-1000, -1000, 342, 349, 13191, 295, 22156, 4703, -1000, -1000,
	1061, 1061, 1061, 4703, 4703, 956, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1928, -1000, -1000, -1000, -1000, 26645, 22156,
	1336, 26645, 26645, 26645, 28417, -1000, 1670, 954, -1000, -1000,
	11197, 965, 954, 1418, 26645, 1827, -283, -1000, 12693, 26645,
	26645, -1000, -1000, -283, -1000, 12194, 26645, 1928, -1000, 1928,
	2757, -1000, 2052, -1000, 223, 155, -1000, -1000, -1000, -1000,
	-1000, -1000, 963, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 830, -1000, 26645, -1000, -1000, 116, 22156, 1053,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 124, -1000, -1000,
	153, -1000, 374, 4, 998, -1000, -1000, 55, 146, 421,
	55, 1114, -1000, 1109, 1109, 1124, -1000, 418, -1000, -1000,
	-1000, -1000, 1668, -1000, -1000, -1000, 2468, 2580, -1000, 1088,
	1088, 966, 966, 966, 966, 966, 1125, 1125, -1000, -1000,
	-1000, 5202, 1667, 9195, 9195, 9195, 343, 2514, 2295, -1000,
	7701, 1097, -1000, 7701, 1465, 798, 958, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1556, 624, 1555,
	1375, 2158, 1553, 7701, -1000, -1000, 7701, 1267, 7203, -1000,
	-1000, -1000, 1552, 948, 1551, -1000, -1000, -1000, 1550, 699,
	1547, 1476, 1539, 824, 7701, 996, 995, 7701, 7701, 7701,
	7701, 1538, 7701, 7701, 7701, 7701, 7701, 7701, 7701, 7701,
	-1000, 7701, 41, -1000, -1000, -1000, -1000, 1309, -1000, 1300,
	-1000, -1000, -1000, 1409, 1409, -1000, 1296, -1000, -1000, -1000,
	-1000, 1292, -1000, -1000, 1286, -1000, -1000, -1000, -1000, 994,
	-1000, 1114, -1000, 1406, -1000, 821, 815, -1000, 1250, -1000,
	-1000, 26645, 9693, 24155, 26645, 32, -1000, 1933, 810, -1000,
	4, 662, 1781, 1905, 26645, 23657, -1000, 1662, 993, -1000,
	-1000, 7701, -1000, 1777, 26645, 2152, -1000, 26645, 2152, 2152,
	1038, 28417, 1146, 26645, 1146, -1000, -1000, 1146, -1000, 947,
	-1000, 26645, -1000, -1000, -1000, -1000, 23, 810, 2183, 809,
	-1000, -1000, -1000, -1000, 27641, 27641, 13690, 27641, -1000, 1006,
	-1000, -1000, 501, 500, 490, -1000, -1000, 370, -1000, -1000,
	662, -1000, -1000, -1000, 1660, 1086, -1000, -1000, 9195, -1000,
	4703, 4703, 4703, -1000, -1000, 16678, -1000, -1000, 775, 662,
	1824, 751, -1000, 751, -1000, 9693, 2152, 6696, -1000, 20662,
	-1000, -1000, 23152, -1000, 22654, 2152, -291, 663, -1000, 1911,
	674, -1000, 1658, -1000, 988, 1883, -1000, 649, -1000, 1084,
	959, -1000, 674, 952, 1866, 649, -1000, -1000, -1000, 945,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -18, -1000, -1000,
	26645, 1415, 940, 1053, 700, -1000, 369, 943, 942, -1000,
	22156, 82, 22156, -1000, 22156, -1000, -1000, 244, -1000, 26645,
	1924, -1000, -1000, -1000, 1390, -304, 1913, -1000, -1000, -1000,
	-1000, -1000, 937, -1000, 343, 2514, 1524, -1000, 9195, 9195,
	2236, 1093, -1000, 7701, 1139, 1358, 1319, 15682, 26645, -1000,
	-1000, 7701, 7701, -1000, 2230, 2217, -1000, 7701, 7701, 1218,
	-1000, 26645, -1000, -1000, -1000, 15682, -1000, 9195, -1000, 7701,
	2210, -69, -69, 2199, 2138, 2132, 923, -69, 2104, 2095,
	2018, 1990, 1901, 1726, 1710, 1655, 1114, -1000, -1000, 1536,
	1535, 921, -1000, 913, 1520, 910, 909, 6198, -1000, -115,
	7701, 7701, 7701, 1892, -1000, -1000, 57, 1519, 746, -1000,
	-1000, -1000, 28903, 1650, 1606, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1657, -1000, 1649, 1649, 1649, 1606,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1653,
	1653, 1654, 1653, 1635, 1106, 1652, -66, 1074, -1000, 371,
	22156, 274, -1000, 1821, 163, -1000, 1905, -1000, 411, -1000,
	1651, 26645, 759, -1000, 939, 28716, -1000, 26645, 1114, -1000,
	1336, 1038, -1000, 2152, 884, -1000, -1000, 2152, -1000, 1038,
	-1000, 1038, 1146, 26645, -1000, -66, 1074, 371, 26645, 20662,
	20662, 20662, 20662, -1000, 1875, 1860, -1000, 1849, 1846, 1908,
	26645, 20662, 1635, -1000, 28029, -1000, -1000, -1000, -1000, -1000,
	1758, 908, 1988, 560, 7701, -1000, -1000, -1000, 483, 22156,
	1401, 295, -1000, -1000, -1000, -1000, -1000, 26645, 26645, 1518,
	2148, -1000, 734, -1000, -1000, 926, -1000, 2148, -1000, 1285,
	1400, 1148, -283, 6198, 247, 26645, -283, 26645, 6198, -1000,
	26645, 245, -283, 2757, 1283, -1000, -1000, -1000, 2154, 22156,
	1336, 1023, 1051, -1000, 78, -1000, 113, 332, 1399, -1000,
	384, 83, -1000, 1083, 1390, 383, -1000, -1000, 9195, -1000,
	-1000, -1000, -1000, 1114, 7701, 1508, -1000, 479, 479, 1504,
	-1000, 1606, 1650, -1000, 1606, 1649, 1606, 479, 479, 1502,
	-1000, 1212, 1640, -1000, -1000, 1603, 1537, 7701, -1000, 1501,
	2025, 783, -69, -1000, 1648, -1000, -69, -69, -69, -69,
	-1000, -69, -69, -69, -69, -69, -69, -69, -69, -1000,
	-1000, -1000, 1397, -1000, -1000, -1000, 1273, -1000, 1269, -1000,
	-61, -36, 1114, 1114, -1000, -1000, 1897, 1396, 393, 9693,
	1898, 1967, 1932, 10699, 1277, -1000, -1000, 21658, -1000, 306,
	-1000, -1000, -1000, 376, 88, 1259, 320, -1000, 1443, 26645,
	-1000, -1000, -1000, -1000, -1000, 1074, 1074, 1074, 10699, 337,
	793, 917, 20662, 26645, -1000, 20164, 1492, -1000, 662, 2152,
	-1000, 26645, -1000, 2152, 2152, 1038, -1000, 1277, 21658, 306,
	762, -1000, 1082, 1568, 1818, 1568, -1000, -1000, -1000, -1000,
	1847, -1000, 1617, -1000, -1000, 762, -1000, -1000, -1000, -1000,
	-1000, 560, -1000, 2046, 534, 534, 534, 1486, -1000, 700,
	1480, -1000, -1000, -1000, -1000, -1000, 2140, 2118, 21160, 2140,
	-1000, -291, 2178, -1000, 1479, 689, -283, -1000, -1000, 674,
	-1000, -1000, -1000, -283, -1000, 674, -1000, -1000, -1000, -1000,
	-1000, 1336, -1000, 105, -1000, -1000, -1000, -1000, -1000, -1000,
	-8, -1000, 26645, -1000, 1390, 1389, 81, 26645, -1000, 1114,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7701, -1000, -1000, -1000, 1521,
	-1000, -1000, 7701, -1000, 316, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1477, 1474,
	-289, -35, 2115, 2114, -1000, -1000, -1000, 28903, -1000, 1031,
	219, 26645, 1461, 675, -1000, -1000, -1000, 28903, 530, -1000,
	26645, 1145, 534, 357, 534, 1138, 1647, -1000, -1000, -1000,
	1387, 2, -1000, -1000, -1000, 1386, 1385, 1228, -1000, -1000,
	1305, 886, 12, -1000, -1000, -1000, -1000, -1000, -1000, 1645,
	15682, 16180, 1380, 1459, 27641, 20662, 20164, 712, -1000, 906,
	-1000, -1000, -1000, 2152, -1000, -1000, 2152, -1000, 2, -1000,
	2142, 26645, 6198, -1000, -1000, 7701, 1637, -1000, 7701, -1000,
	-1000, -1000, -1000, -1000, 1636, 1978, -1000, -1000, -1000, -1000,
	-1000, -1000, 7701, 7701, -1000, -1000, -1000, 26645, -1000, 674,
	674, 662, -1000, -1000, -109, -1000, -1000, -1000, -109, 1491,
	-1000, 1475, 2142, -1000, 2113, -1000, -1000, -291, 1379, -1000,
	2110, 1377, 1334, -206, -1000, -1000, -1000, 1635, 29216, 10699,
	2408, -1000, -1000, 26645, 26645, -1000, 26645, 26645, 357, 7701,
	-1000, -1000, 243, -1000, -1000, 112, -1000, -1000, 1299, 334,
	-1000, 18670, -1000, -1000, -1000, -1000, -1000, 71, 2152, 712,
	906, -1000, -1000, 980, -1000, -1000, -1000, 2070, -1000, -1000,
	1114, 26645, 1114, 19666, -1000, 2109, 2108, 1114, 624, 649,
	-1000, -63, -32, -1000, -1000, -1000, 48, 7701, -293, -1000,
	1360, -49, -1000, -1000, 26645, 1966, 315, 29189, -1000, 1074,
	1074, 678, 1074, 1074, 1074, 1074, 250, 249, 1074, 1074,
	1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
	1074, 1074, 1633, -1000, -1000, 2408, -1000, -1000, 1156, 9195,
	-1000, -1000, 1355, 16180, 469, 498, 1632, -1000, 215, 2177,
	-1000, 1132, 1129, -1000, 26645, -1000, 1631, 1776, 170, 1630,
	-1000, 1612, 1607, 26645, 1364, 330, 1354, -1000, -1000, 106,
	-1000, -1000, 904, -1000, 1606, 7701, -1000, -109, 2142, -1000,
	-1000, 892, 888, -1000, -1000, -1000, -1000, 364, -58, -32,
	-1000, 2106, -54, 2087, 2085, 1451, -1000, 3209, -1000, -1000,
	-1000, 624, -1000, 1605, -1000, 2084, 1939, -1000, 219, 175,
	2083, 29216, -1000, 1219, 1215, 1074, 1074, 1210, 1352, 1351,
	1349, 1074, 1074, 1203, 1346, 28029, 1201, 1199, 1195, 1298,
	1345, 492, 1274, 1220, 1217, 26645, 1601, 1329, -1000, -1000,
	2514, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1194, 1598, -110, -1000, -1000, 1597, 18670, 151,
	151, 18670, 18670, 18670, 1596, 391, -1000, -9, -1000, -1000,
	-1000, 18670, 1918, 1303, -1000, 2070, -1000, -1000, 19168, 1595,
	1192, -35, 2082, -1000, 1334, 2078, 1334, 1334, -1000, -1000,
	4205, -284, -55, 256, 26645, 1334, 1344, -1000, -1000, 2076,
	214, -1000, -1000, -1000, 15682, 15682, -1000, -1000, -1000, -1000,
	1343, 1339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 270, 26645, 885, -1000, 1081, 1450,
	7701, 1593, -199, 18670, 873, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 872, 827, 816, 18670, -1000, -1000, -1000, 222,
	-1000, 169, -1000, -1000, 1918, -1000, -1000, -1000, 2016, 15184,
	-47, -1000, 1338, -1000, 1334, -1000, -1000, 1098, -1000, -1000,
	-1000, -1000, -1000, 804, -1000, -1000, -1000, 18172, 193, 225,
	208, -1000, 346, -1000, -1000, -1000, -1000, -1000, -1000, 261,
	791, -1000, 1329, 1328, -1000, 1276, -1000, 1811, -1000, 37,
	789, -1000, -1000, -1000, -1000, 786, -1000, -1000, 1074, 1308,
	139, -1000, -1000, -1000, -1000, 26645, -1000, 768, -1000, -1000,
	-1000, 900, -1000, -1000, -1000, -1000, 4205, -1000, 26645, -1000,
	26645, 191, 1191, 9195, 1591, 9195, 1590, 200, 1589, -1000,
	-1000, -1000, -1000, -1000, 391, -1000, 1791, 1788, 2166, -1000,
	-1000, -1000, -1000, 169, 169, 169, 169, 73, 1184, -1000,
	1327, 572, -1000, 1064, -1000, 17674, 26645, -1000, -1000, 760,
	1587, 2064, -1000, 1999, 26645, 1902, 26645, 1585, 1060, 9195,
	-1000, -1000, 2176, -1000, 2167, 480, 480, -1000, -1000, -1000,
	26645, 5700, -1000, 722, -1000, -1000, 314, 198, -1000, 753,
	-1000, 743, 17176, 1180, 1859, -1000, -1000, -1000, 1200, 227,
	-1000, -1000, -1000, 1114, 26645, 733, -1000, 1435, 177, -1000,
	-1000, -1000, 698, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	314, 1498, -1000, 1164, -1000, -1000, 29138, 459, -1000, -1000,
	29138, 188, -1000, 310, 1571, -1000, -1000, 682, -1000, 1378,
	472, 7701, -1000, 188, 29216, -1000, 7701, 670, -1000, 29216,
	635, -1000, -1000,
}

var yyPgo = [...]int{
	0, 152, 2713, 207, 148, 144, 204, 2712, 2711, 1987,
	1986, 2710, 2709, 2708, 2707, 2694, 2691, 2689, 2688, 2686,
	2685, 2681, 2680, 2678, 2677, 2676, 2673, 2672, 2671, 2670,
	2669, 203, 2666, 2663, 2659, 2656, 2653, 2651, 2650, 2649,
	2643, 2642, 2626, 2623, 2620, 2619, 2617, 2616, 2610, 2608,
	2606, 2605, 133, 2604, 1972, 2603, 2602, 2601, 2600, 2598,
	178, 2597, 2596, 2582, 2581, 2580, 2579, 2578, 2576, 2575,
	2574, 2573, 2572, 2570, 2569, 2567, 137, 2566, 2565, 2564,
	2563, 2562, 2561, 2560, 198, 184, 59, 2557, 38, 48,
	154, 208, 114, 213, 210, 150, 135, 73, 2556, 1956,
	2555, 181, 190, 118, 24, 2553, 132, 2552, 112, 42,
	32, 212, 119, 54, 66, 94, 2550, 180, 90, 2549,
	2548, 211, 151, 2547, 96, 2546, 2545, 2544, 2542, 162,
	97, 2538, 62, 2536, 71, 35, 95, 27, 2535, 2534,
	2532, 69, 2531, 2530, 2529, 2528, 136, 2527, 99, 56,
	2525, 2524, 2523, 2522, 2521, 29, 2520, 53, 2517, 2516,
	2515, 2513, 61, 2512, 2511, 12, 20, 18, 2510, 16,
	3, 2509, 185, 124, 87, 113, 2508, 382, 2507, 2503,
	2501, 127, 2500, 478, 2499, 2498, 2495, 2494, 10, 2490,
	167, 2489, 2488, 77, 102, 2487, 57, 155, 170, 2486,
	2477, 108, 67, 52, 107, 2474, 2473, 76, 179, 17,
	43, 0, 164, 44, 2471, 2470, 2469, 209, 2468, 158,
	156, 191, 105, 216, 130, 2466, 2462, 55, 2460, 120,
	81, 101, 8, 2456, 161, 2455, 231, 141, 2453, 173,
	2452, 126, 2, 106, 2450, 2447, 31, 232, 2446, 2443,
	2441, 139, 2437, 2436, 60, 121, 2435, 2431, 2430, 25,
	2428, 37, 30, 2426, 84, 2425, 206, 2424, 168, 103,
	142, 140, 117, 188, 192, 64, 110, 1146, 116, 89,
	19, 2423, 186, 2422, 202, 189, 2409, 163, 2408, 199,
	358, 175, 2407, 143, 7, 2405, 2403, 2402, 9, 2401,
	125, 2400, 2399, 21, 2398, 23, 2397, 2395, 2393, 2392,
	6, 2389, 2383, 2382, 1, 4, 2381, 5, 171, 51,
	100, 2376, 104, 183, 2374, 2373, 2372, 2371, 2370, 335,
	2369, 2368, 2366, 2365, 2359, 2358, 2356, 2340, 83, 36,
	2331, 2330, 2324, 2319, 68, 111, 2317, 281, 177, 2316,
	34, 2315, 2313, 26, 2312, 28, 2311, 2305, 2296, 14,
	147, 2295, 2293, 15, 2288, 2286, 11, 13, 2284, 2277,
	65, 2276, 41, 33, 78, 79, 2273, 22, 63, 109,
	2269, 2265, 205, 195, 169, 2264, 128, 193, 214, 2263,
	182, 2261, 2260, 2258, 2257, 2255, 2253, 2251, 1147, 2249,
	2248, 194, 58, 187, 93, 2247, 2246, 2245, 70, 123,
	92, 91, 159, 2244, 153, 2234, 2233, 88, 2226, 2208,
	2207, 2204, 2203, 2201, 2199, 197, 201, 2192,
}

//line mysql_sql.y:8236
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 423, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 82, 421, 421, 421, 422, 422,
	80, 80, 69, 68, 81, 369, 369, 368, 368, 367,
	367, 366, 366, 366, 365, 365, 365, 364, 364, 363,
	363, 362, 362, 360, 360, 361, 359, 358, 358, 358,
	356, 356, 354, 354, 355, 355, 349, 349, 352, 352,
	350, 350, 350, 350, 353, 348, 348, 348, 347, 347,
	67, 67, 67, 279, 279, 66, 66, 293, 293, 293,
	293, 293, 291, 291, 291, 291, 291, 291, 290, 290,
	289, 289, 294, 294, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 61, 61, 61, 61, 64, 64,
	64, 65, 288, 288, 288, 62, 63, 63, 278, 278,
	283, 283, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 287, 287, 287, 285, 285, 284,
	284, 286, 286, 55, 55, 55, 58, 57, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 56, 56, 56,
	56, 56, 56, 53, 53, 53, 53, 53, 52, 52,
	54, 54, 276, 276, 275, 72, 72, 72, 72, 72,
	72, 72, 71, 71, 74, 74, 73, 75, 60, 60,
	60, 60, 60, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 393, 393, 393, 395, 395, 215, 216, 424,
	218, 214, 214, 214, 389, 389, 390, 391, 392, 392,
	392, 70, 7, 7, 50, 407, 407, 51, 414, 414,
	329, 329, 229, 229, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	332, 333, 225, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	38, 37, 37, 265, 265, 36, 425, 425, 198, 198,
	44, 45, 46, 35, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 49, 49, 343, 343, 427, 427, 427,
	47, 48, 328, 328, 328, 42, 41, 40, 39, 39,
	34, 34, 33, 33, 222, 222, 224, 224, 220, 426,
	426, 305, 305, 223, 223, 32, 32, 32, 221, 221,
	197, 219, 219, 219, 8, 8, 6, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 18, 20, 273, 273,
	270, 19, 14, 13, 16, 12, 15, 17, 5, 5,
	5, 5, 9, 9, 10, 96, 96, 136, 136, 402,
	402, 398, 398, 399, 399, 399, 400, 400, 401, 401,
	76, 337, 337, 337, 337, 337, 337, 4, 336, 336,
	336, 336, 336, 336, 420, 420, 378, 378, 378, 379,
	117, 117, 112, 112, 338, 338, 243, 380, 380, 346,
	346, 345, 345, 344, 344, 115, 115, 116, 116, 99,
	99, 85, 85, 351, 351, 351, 351, 357, 357, 326,
	326, 162, 162, 191, 191, 192, 192, 89, 89, 90,
	90, 90, 90, 90, 90, 386, 386, 388, 388, 387,
	114, 114, 110, 110, 111, 111, 111, 109, 109, 108,
	107, 107, 106, 104, 104, 104, 105, 105, 105, 92,
	92, 91, 91, 91, 91, 91, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 93, 93,
	394, 394, 394, 330, 330, 330, 335, 335, 174, 174,
	175, 175, 173, 173, 94, 94, 95, 95, 95, 95,
	172, 172, 171, 97, 97, 103, 102, 102, 98, 98,
	98, 98, 182, 182, 181, 181, 181, 181, 79, 83,
	83, 84, 120, 120, 180, 179, 179, 179, 119, 119,
	118, 118, 113, 113, 101, 101, 101, 101, 178, 100,
	176, 419, 419, 418, 418, 417, 415, 415, 415, 416,
	416, 416, 416, 371, 371, 371, 371, 371, 207, 207,
	207, 213, 213, 206, 206, 206, 206, 206, 217, 212,
	212, 208, 208, 209, 209, 209, 3, 3, 3, 3,
	24, 24, 24, 24, 24, 24, 30, 128, 129, 29,
	121, 122, 122, 123, 123, 124, 125, 125, 125, 127,
	126, 28, 28, 396, 396, 21, 403, 406, 404, 404,
	408, 408, 408, 409, 409, 409, 410, 410, 22, 405,
	411, 411, 411, 274, 274, 271, 272, 272, 269, 268,
	268, 268, 413, 413, 412, 412, 412, 210, 210, 23,
	264, 264, 266, 267, 267, 258, 258, 258, 258, 27,
	262, 262, 263, 263, 263, 263, 263, 259, 259, 261,
	261, 257, 257, 257, 257, 257, 26, 256, 256, 254,
	254, 252, 252, 253, 253, 251, 251, 251, 255, 255,
	25, 25, 87, 86, 86, 86, 194, 194, 193, 193,
	88, 331, 331, 295, 295, 296, 296, 296, 299, 299,
	311, 311, 312, 312, 310, 310, 317, 317, 316, 316,
	315, 315, 314, 314, 313, 313, 313, 313, 308, 308,
	307, 307, 297, 297, 297, 297, 297, 298, 298, 298,
	306, 306, 309, 309, 153, 153, 154, 154, 154, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 376, 376,
	377, 156, 156, 156, 160, 160, 160, 160, 160, 160,
	155, 155, 157, 157, 137, 137, 135, 135, 130, 130,
	131, 131, 132, 132, 133, 133, 134, 134, 134, 134,
	134, 134, 281, 281, 374, 374, 375, 375, 370, 370,
	370, 373, 373, 373, 373, 373, 372, 372, 138, 189,
	189, 189, 211, 211, 211, 188, 188, 188, 152, 152,
	151, 151, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 280, 280, 226,
	226, 227, 227, 169, 168, 168, 168, 168, 168, 166,
	167, 165, 165, 165, 165, 165, 164, 164, 163, 163,
	163, 260, 260, 161, 161, 159, 159, 159, 158, 158,
	158, 318, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 235, 235, 240, 240, 385,
	385, 384, 139, 139, 139, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 148, 148, 148, 303, 303, 303,
	303, 303, 304, 304, 304, 301, 301, 302, 302, 244,
	245, 245, 300, 300, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	342, 342, 342, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 397, 397, 397, 381,
	381, 381, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 186, 186, 186, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 246, 246, 247,
	247, 339, 339, 339, 339, 339, 339, 340, 340, 341,
	341, 341, 341, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 233, 183, 183, 183, 248, 241, 241, 242,
	242, 236, 236, 236, 236, 236, 236, 236, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 237, 237,
	239, 239, 250, 250, 250, 249, 249, 249, 249, 249,
	249, 249, 150, 150, 150, 150, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 141, 141, 141,
	141, 145, 145, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 146, 146, 146,
	146, 144, 144, 144, 144, 144, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 77, 78, 78, 143, 190, 190, 319, 319,
	322, 322, 320, 320, 321, 323, 323, 323, 324, 324,
	324, 325, 325, 325, 327, 327, 196, 196, 196, 203,
	203, 195, 195, 204, 204, 205, 205, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 9, 9, 2, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 3, 1, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 1, 1, 1,
	1, 6, 1, 1, 7, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 3, 2, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 6, 7,
	4, 4, 7, 8, 0, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 3,
	1, 4, 6, 4, 4, 4, 3, 6, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 3, 2, 3, 1, 4,
	3, 0, 1, 1, 2, 5, 2, 2, 2, 0,
	2, 3, 3, 0, 1, 3, 1, 3, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 12,
	1, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 8, 11, 0, 1, 7, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 5, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	11, 9, 2, 2, 4, 5, 1, 3, 0, 3,
	5, 0, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 1, 7, 7, 7, 7,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 5, 6, 4, 1, 1, 2, 0,
	1, 1, 2, 5, 0, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 6,
	6, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 6, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	5, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 6,
	2, 2, 4, 6, 4, 2, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -423, -2, -1, -3, -80, -4, -76, -5, -6,
	-8, -59, -71, -73, -75, -74, -31, -7, -70, -52,
	-53, -55, -61, -66, -67, -68, -69, -81, -77, -78,
	-79, -89, -82, -24, -23, -22, -21, 394, 12, 436,
	-9, -10, -386, -11, 231, -214, -215, -216, -218, -424,
	-32, -33, -34, -39, -40, -41, -42, -47, -48, -49,
	-35, -36, -37, -38, -44, -45, -46, -51, -50, 207,
	-54, 61, -56, -57, -58, -62, -63, -64, -65, 325,
	331, 384, 393, 517, 518, 46, -90, -92, 519, -25,
	-26, -27, -28, -29, -30, 203, 14, 469, -12, -15,
	-13, -16, -14, -19, -20, -18, -17, 226, 225, 37,
	289, 290, 291, 329, 224, 204, 13, 135, 136, 138,
	139, 30, -91, 67, 205, -93, 10, 520, 429, -99,
	38, -135, -211, 70, -199, -202, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 439, 307, 466, 243, 267, 355, 270, 277,
	135, 154, 148, 176, 168, 143, 247, 282, 248, 77,
	138, 422, 87, 405, 381, 141, 262, 264, 266, 269,
	249, 164, 159, 261, 245, 517, 157, 250, 39, 251,
	181, 252, 253, 471, 401, 306, 407, 274, 379, 158,
	402, 265, 404, 183, 187, 414, 331, 152, 153, 409,
	416, 180, 223, 42, 468, 235, 417, 185, 179, 175,
	425, 278, 276, 178, 151, 174, 246, 50, 189, 188,
	190, 375, 376, 377, 378, 254, 255, 319, 413, 171,
	160, 310, 144, 22, 420, 230, 406, 332, 256, 271,
	279, 184, 186, 237, 242, 470, 383, 241, 275, 418,
	156, 234, 263, 229, 421, 145, 325, 334, 257, 139,
	268, 415, 424, 49, 347, 150, 142, 220, 136, 239,
	244, 11, 258, 259, 260, 281, 280, 272, 172, 236,
	177, 162, 149, 173, 137, 238, 423, 348, 515, 308,
	364, 170, 167, 240, 213, 419, 408, 140, 368, 349,
	165, 283, 512, 513, 514, 320, 305, 284, 285, 163,
	227, 400, 286, 288, 374, 298, 350, 382, 356, 351,
	196, 292, -99, -54, -10, -9, -91, -92, -135, 211,
	-219, 23, 379, -60, 380, 207, 67, -211, -5, -4,
	-76, -52, -89, -217, -211, 289, 289, -217, 211, -211,
	241, 363, -329, 216, -290, -264, 242, -289, -266, -292,
	-267, 31, 203, 205, 204, 238, 14, 329, 212, 12,
	10, 330, 224, 24, 25, 27, 13, 331, 333, 28,
	334, 337, 338, 339, 41, 342, 343, 231, 70, 73,
	249, -129, -211, 249, -242, -236, 94, 232, -238, -231,
	-232, -234, -366, -360, -230, 67, 119, 120, 127, 95,
	-233, -318, 35, 97, 476, 437, -184, -185, -186, -187,
	-211, -361, -359, 73, 78, 81, 84, 85, 83, 82,
	161, 80, 74, 131, 132, -92, 70, -381, 484, -200,
	505, 485, 504, 46, -334, -341, 210, -339, 166, 227,
	162, 12, 125, 374, 130, 163, 481, 501, 439, 508,
	478, 479, 473, 474, 475, 477, 486, 488, 500, -342,
	496, 506, 507, 494, 72, 71, 499, 498, 487, 482,
	483, 489, 472, 480, 490, 491, 497, 502, 503, 313,
	87, 314, 315, 429, 309, 316, 216, 379, 55, 317,
	318, 319, 320, 321, 436, 322, 56, 323, 312, 231,
	364, 324, 165, 182, 441, 440, 442, 433, 430, 428,
	431, 432, 434, 435, 492, 493, 495, -286, -284, -211,
	-83, -84, 510, -108, -109, -177, 19, 6, 7, 8,
	9, -421, 381, 470, 292, 326, -331, 307, 364, 241,
	-258, -256, 286, 340, 221, 220, 88, 429, 210, -398,
	-399, 200, 201, 202, -388, 462, -387, -211, 315, 26,
	211, 326, 411, 412, -43, -343, -328, 408, 407, -223,
	406, 399, 410, 401, 203, 463, -196, 350, 382, 237,
	426, 427, 327, 383, 414, 415, 402, 87, 169, 166,
	307, 364, -398, 140, 137, -277, 140, 93, 145, 144,
	-277, 241, 363, 40, -283, 374, -282, -284, 414, 415,
	425, 71, 72, 413, -196, 87, -109, -177, -108, -90,
	-92, -386, 307, 364, 241, 212, 211, 213, 429, 289,
	326, -330, -394, 31, -335, 197, 198, 199, 32, 33,
	-1, -212, -209, -202, 70, 71, 72, -115, 233, -135,
	133, -115, -109, -108, -109, -135, -188, -211, 381, 103,
	-60, -60, 380, -389, -390, -391, -393, 207, 380, 379,
	133, 15, -217, -217, 65, -135, -266, 241, -290, -264,
	35, 64, 134, 214, 134, 64, 67, 327, 307, 364,
	328, 429, 211, 340, 213, 241, 341, 307, 364, 211,
	213, 429, 241, 307, 211, 213, 364, 241, 341, 399,
	400, 213, 26, 332, 335, 336, 400, -347, 425, -347,
	134, 93, 90, 91, 92, -236, 110, -249, 103, 104,
	105, 106, 107, 108, 109, 116, 115, 126, 119, 120,
	121, 122, 123, 124, 125, 117, 118, 113, 94, 111,
	112, 96, -92, -236, -242, -234, -234, -234, -234, -318,
	-240, -236, 67, 67, 133, 73, -236, 67, 67, 67,
	67, 67, 67, 67, 67, 67, -340, 67, 67, -246,
	-247, 67, 67, 73, 73, 67, 67, 67, -234, 73,
	-247, -247, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 134, -141,
	-145, -142, -144, -143, -147, -146, 166, 167, 130, 170,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	30, 182, 227, 162, 163, 164, 165, 183, 148, 168,
	467, 191, 149, 192, 150, 193, 151, 194, 152, 153,
	195, 154, 157, 158, 159, 156, 133, -109, 134, 67,
	-85, 38, -111, 21, -93, -92, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 78, -128, -211, -121, -211,
	-396, 211, 462, -254, 216, -254, -254, 212, -254, 211,
	-400, 147, 134, -388, -114, 67, -222, 111, 23, 239,
	239, 276, -222, -427, 212, 409, 42, 240, 239, -110,
	-111, -110, 403, 400, -305, 404, 405, -223, -222, -222,
	-223, 211, 213, 429, -425, -426, 15, 113, 239, -425,
	30, 30, -329, -329, -401, 215, 418, 469, 143, 144,
	145, -266, 241, 241, 134, 103, 23, -285, 103, 114,
	-284, -284, -284, -285, -285, -155, 40, -210, 130, -211,
	73, -155, 40, -110, -93, -92, 68, 68, -329, -329,
	-329, -329, -329, -329, -329, -217, -121, -94, -95, 121,
	-236, -211, -94, 38, 400, -336, 46, -89, 67, 30,
	67, -211, -337, 46, -89, 67, 30, -110, -85, -111,
	133, 78, 73, -60, 68, 134, -392, 84, 85, -395,
	180, 172, -211, -72, 73, -3, -4, -5, -6, -31,
	-52, -89, -362, -360, 67, 31, 373, 64, 15, -291,
	211, 429, 326, 237, 213, 307, -289, -273, -270, -268,
	-210, -266, -269, -268, -294, -188, 400, -86, 385, 288,
	-86, -236, -236, -236, -236, -236, 83, 94, 305, 84,
	85, -231, -250, 31, 284, 285, -232, -232, -232, -232,
	-232, -232, -232, -232, -232, -232, -232, -232, -239, -248,
	-318, 67, 113, 111, 112, 96, -234, -232, -232, 68,
	134, -385, -384, 98, -236, -236, -211, -382, -383, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	317, 312, 318, 316, 309, 324, 319, 320, 165, 460,
	461, 454, 455, 456, 457, 458, 459, -241, -242, -241,
	-236, -382, -241, -183, 32, 31, -183, -236, -397, 303,
	302, 304, -112, -211, -241, 68, 68, 68, 78, -242,
	-241, -232, -241, -383, -183, -242, -242, -183, -183, -183,
	-183, 121, -183, -183, -183, -183, -183, -183, -183, -183,
	-284, 40, -325, 348, 347, -319, -321, 67, -320, 67,
	-320, -319, -319, 67, 67, -322, 67, -322, -322, -319,
	-323, 67, -323, -324, 67, -323, -211, -110, -84, -345,
	-344, -236, 40, 511, -85, -236, -107, -106, -236, -422,
	73, 34, 67, 213, -254, -403, -211, 94, -274, -271,
	-268, -264, -209, -211, -254, -401, -387, 34, -113, -211,
	-173, 16, -234, -268, -425, -222, -173, -426, -222, -222,
	-224, -426, -220, -426, 400, -173, -173, -305, -221, -211,
	-221, -254, -198, -197, -211, -198, -403, -274, -102, -97,
	-101, -98, -103, -176, -178, -100, 67, -135, -92, -211,
	419, 420, 141, 144, 143, 31, 373, -288, 373, 31,
	-264, -282, -278, 73, 374, -269, -287, 64, 130, -344,
	-285, -285, -285, -287, -287, 129, -85, -403, -273, -264,
	-211, -137, -135, -137, -212, 67, -172, 134, -171, 15,
	-206, -211, 34, 73, 133, -172, 73, -137, -420, 64,
	-338, -243, -380, 510, -117, 68, -112, -378, -379, -112,
	-116, -211, -338, -117, 68, -378, -85, -85, -204, -205,
	-195, -201, -208, -209, -202, 208, 31, 93, 34, 36,
	313, 345, 96, 130, 20, 97, 166, 129, 315, 437,
	314, 203, 59, 440, 442, 441, 430, 428, 366, 370,
	372, 369, 429, 399, 40, 14, 37, 225, 32, 33,
	123, 205, 100, 101, 228, 35, 226, 85, 44, 23,
	62, 15, 17, 18, 316, 365, 216, 215, 113, 385,
	212, 57, 12, 132, 38, 110, 367, 53, 89, 45,
	55, 111, 21, 431, 432, 41, 384, 393, 465, 232,
	125, 317, 318, 60, 94, 373, 83, 43, 64, 90,
	19, 58, 112, 206, 436, 56, 371, 321, 323, 333,
	462, 322, 210, 410, 10, 312, 438, 30, 224, 54,
	211, 99, 214, 84, 231, 6, 88, 13, 61, 65,
	433, 434, 435, 46, 98, 16, 324, 469, 386, 387,
	388, 389, 390, 391, 392, 191, 192, 193, 194, 195,
	273, 219, 217, 221, 222, 510, 511, 197, 198, 302,
	304, 169, 200, 201, 202, 233, 147, 7, 352, 353,
	354, 357, 358, 359, 360, 361, 362, 363, 518, 394,
	395, 396, 397, 398, 411, 412, 209, 23, -60, -390,
	133, 134, -113, -291, -272, -269, -293, 121, 70, -279,
	134, 469, 521, 71, 214, -413, -412, 365, 68, 134,
	-348, 215, 436, 73, 522, 196, -348, 83, 305, 84,
	85, -318, -242, -239, -234, -232, -232, -237, 228, 93,
	-236, -235, -384, 100, -236, 34, 134, 65, 133, 68,
	68, 15, 15, 68, -236, -236, 68, 15, 15, -236,
	68, 133, 68, 68, 68, 65, 68, 134, 68, 134,
	-236, 68, 68, -236, -236, -236, -242, 68, -236, -236,
	-236, -236, -236, -236, -236, -236, -236, -327, 349, 78,
	78, -190, 73, -190, 78, 78, 78, 134, 68, 73,
	134, 22, 134, -104, 36, 37, -129, -122, -123, -124,
	-125, -141, -188, 167, 170, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 227, 162, 163, 164, 165,
	183, 148, 168, 149, 150, 151, 152, 153, 154, 157,
	158, 159, 156, -135, 216, -135, -406, 352, 35, -414,
	134, 40, -412, -257, 65, -252, -253, -251, -255, 40,
	-135, 15, -96, -136, -211, 67, 68, 134, -236, -265,
	65, -198, -173, -135, -211, -173, -173, -222, -212, -224,
	-219, -224, -220, 133, -197, -407, 352, -414, 30, -179,
	-180, -181, -182, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -207, -213, 34, -208, 73, -209, -202, -207,
	-92, -97, -102, -207, 67, 142, 145, 145, 144, 214,
	67, 103, -287, -287, -287, 40, -210, 64, 134, -122,
	-173, -95, -97, -211, 73, -211, 121, -173, -162, 513,
	38, 39, 134, 67, 68, 134, 46, 134, 103, 68,
	134, 68, 46, 133, 381, -211, -360, 68, -293, 134,
	214, 133, 133, -270, 331, -210, -272, 20, 469, -188,
	38, -194, -193, 73, 522, 38, 68, -237, 93, -234,
	-231, 68, 101, -236, 99, -139, -141, 347, 348, -140,
	-146, 130, 166, 227, 165, 164, 162, 347, 348, -155,
	-211, -236, -236, 68, 68, -236, -236, 15, -211, -155,
	-232, -236, 68, -300, 395, -300, 68, 68, 68, 68,
	-300, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 134, 68, 68, 68, 134, 68, 134, -344,
	-351, 404, -236, -236, -106, -105, 43, 339, 68, 134,
	-141, -114, 94, 67, -409, 406, 354, -203, 103, -229,
	-228, 308, 41, -332, 374, 360, 361, -271, 241, 64,
	297, 298, 299, 300, -251, -196, 129, 252, 67, -135,
	-96, -211, 15, 134, -402, 133, -1, -211, -264, -222,
	-173, -426, -173, -222, -222, -224, -211, -409, -203, -229,
	-276, -275, -188, -101, -101, -101, -101, 53, 53, 53,
	58, 53, 58, 53, -181, -276, -103, -114, -213, 68,
	-419, -418, -417, -415, 61, 215, 62, -241, 145, -272,
	-225, 73, -278, -135, -135, 68, -175, 17, 133, -175,
	78, 73, 89, -243, -346, -345, 46, -89, -112, -338,
	-379, -344, -211, 46, -89, -338, -204, -201, -209, -202,
	78, 15, -269, -264, 121, 121, 70, 332, -279, 73,
	353, 73, 211, 523, 134, 103, -194, 211, -231, -236,
	68, -148, 153, 152, -148, 68, -319, -320, -319, -322,
	-319, -148, -148, 68, 68, 23, 68, 68, 68, -236,
	68, 68, 134, -300, 67, -300, -300, -300, -300, -300,
	-300, -300, -300, -300, -300, -300, -300, 73, 78, 78,
	-357, 391, 386, 388, 44, 45, 73, 209, -124, 40,
	34, 35, -130, -131, -132, -138, -133, -188, -227, -134,
	219, 217, 221, -375, 88, 222, 273, 89, 212, -410,
	77, -404, 73, -211, -411, 77, 355, 132, 310, 40,
	356, 357, 371, 306, 78, 78, 362, -405, 70, -135,
	-203, -203, -203, -130, -115, 65, 133, -97, -136, -211,
	121, 68, -173, -211, -173, -173, -222, -410, -404, -411,
	-173, 134, 103, -119, -118, 64, 65, -120, 64, -118,
	53, 53, -173, -417, -416, 23, -375, -375, -375, 68,
	68, -174, 18, 20, 121, -174, -162, 13, 68, -338,
	-338, -264, -279, 374, -135, -193, 73, 523, -135, -236,
	68, -236, -245, -244, 233, 68, 68, -326, 512, -355,
	386, 20, 20, -126, -141, -230, -89, -135, 68, 134,
	-141, -134, -211, 89, -374, -375, -254, -374, 89, 67,
	73, -408, 365, 73, 73, 78, 40, 78, 132, 358,
	-333, 67, -155, -157, -210, 130, 73, 68, -207, -97,
	-211, -173, -402, 133, -173, -173, -408, -109, -275, -344,
	-236, 67, -236, 67, 53, 19, 17, -236, -242, -378,
	-88, -349, -305, -88, 68, 68, -109, 20, -162, 73,
	20, 73, -353, 73, 468, -114, -153, -154, -170, 345,
	243, -255, 247, 77, 248, 381, 249, 212, 251, 252,
	253, 223, 254, 255, 256, 374, 257, 258, 259, 260,
	328, 6, 293, -132, -152, -151, -149, 83, 94, 40,
	345, -150, 77, 129, 266, 244, 267, -169, -226, 64,
	351, 217, 88, 89, 333, -227, -370, -372, -211, -372,
	-211, -370, -370, -254, -236, 20, 469, 309, 40, 78,
	40, 359, -259, -261, -188, 67, -87, -86, -173, -173,
	-110, -113, -371, -211, 217, 20, 20, -356, 391, -352,
	-350, 386, 387, 388, 389, -302, -301, -304, 392, 275,
	398, -242, -191, 514, 73, 388, -127, -211, 34, -295,
	233, 134, -170, -203, -203, -196, 129, -203, -203, -203,
	-203, 250, 250, -203, -203, -203, -203, -203, -203, -203,
	-203, -203, -203, -203, -203, -203, -203, 67, -149, 83,
	-232, 73, -157, -158, 40, 265, 261, -159, 40, 245,
	246, -161, 67, 273, 13, 89, 89, -135, 67, 65,
	283, 67, 67, 67, -372, 68, 73, 353, 73, 309,
	68, 134, -319, -236, -88, -109, 68, 68, 134, -358,
	215, -354, 390, -350, 20, 388, 20, 20, 68, -303,
	96, 358, 362, -236, 67, 20, 34, -89, -296, 282,
	20, -170, 78, 78, -203, -203, 78, 73, 73, 73,
	-203, -203, 78, 73, -213, 78, 78, 78, 78, 40,
	73, -160, 40, 261, 265, 262, 263, 264, 78, 40,
	78, 40, 78, 40, -211, 67, -376, -377, 73, 78,
	67, -339, -260, 67, -259, -373, 297, 298, 299, 301,
	300, -373, -259, -259, -259, 67, -281, -280, 274, 94,
	374, -262, -261, -104, 68, -110, -211, 217, -365, 67,
	78, -355, 20, -353, 20, -353, -353, -303, 510, 396,
	397, 396, 397, -192, -211, -353, 73, 20, -297, 275,
	276, -298, -309, 278, -155, -155, 73, 73, -156, 244,
	-137, 68, 134, 103, 68, -236, -246, -164, -163, 465,
	-259, 68, 68, 68, 68, -259, 274, -263, 223, 77,
	469, 295, 296, -104, -369, 30, 68, -364, -363, -189,
	-359, -211, 391, 392, 73, -353, 93, 68, 134, -188,
	67, -307, 279, 67, -305, 67, -305, 89, 298, 245,
	246, 68, -377, 73, 68, -168, -166, -167, 64, 402,
	271, 272, 68, -262, -262, -262, -262, 68, -203, 73,
	294, -368, -367, -366, 68, 134, 133, -303, -211, -294,
	-299, 280, 78, -232, 67, -232, 67, -306, 277, 67,
	-280, -167, 64, -166, 64, 14, 13, -169, 78, -209,
	134, 103, -363, -211, 68, -311, 67, 20, 68, -294,
	68, -294, 67, 103, -232, -165, 268, 269, 30, 144,
	-165, -367, 40, -236, 133, -312, -310, 233, -298, 68,
	68, 68, -294, 78, 68, 83, 40, 270, -211, 68,
	134, 70, -308, 281, 68, -310, -313, 46, 78, -317,
	-314, 67, -170, 235, 113, -317, -170, -316, -315, 280,
	236, 67, 68, 134, 70, 232, 67, -242, -315, -314,
	-242, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 646, 647, 648, 649, 0, 0, 0,
	418, 419, 0, 396, 0, 0, 0, 0, 0, 0,
	313, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	323, 324, 325, 326, 327, 328, 329, 282, 283, 0,
	228, 224, 203, 204, 205, 164, 165, 166, 167, 290,
	0, 0, 0, 0, 0, 0, 497, -2, 35, 650,
	651, 652, 653, 654, 655, -2, 431, 0, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 271, 272, 273,
	267, 268, 270, 269, -2, 0, 431, 217, 0, 208,
	208, 0, 517, 0, 0, 531, 553, 33, 0, 475,
	0, 480, 856, 892, 893, 894, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 475, 229, 420, 421, 517, 517, 394, 0,
	253, 0, 1514, 257, 0, 0, 0, 391, 248, 249,
	250, 251, 252, 0, 638, 0, 0, 244, 0, 223,
	1573, 0, 0, 0, 0, 0, 0, 108, 710, 110,
	712, 114, 121, 0, 0, 126, 127, 130, 131, 132,
	133, 134, 0, 138, 0, 140, 143, 0, 145, 146,
	0, 149, 150, 151, 0, 161, 162, 163, 713, 714,
	-2, 44, 658, 88, 1262, 1159, 0, 1166, 1167, 1178,
	1187, 964, 965, 966, 967, 0, 0, 0, 0, 0,
	974, 975, 0, 987, 1662, 0, 981, 982, 983, 984,
	51, 63, 64, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 0, 1132, 951, 892, 0, 1670, 0,
	1690, 1671, 1689, 0, 0, 1117, 0, 1107, 0, -2,
	-2, 0, 0, 1640, 0, -2, 1667, 1686, 1694, 1693,
	1664, 1665, 1659, 1660, 1661, 1663, 1672, 1674, 1685, 0,
	1681, 1691, 1692, 0, 65, 66, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1123,
	-2, 1125, 1126, 1128, 1129, 1130, 1131, -2, 1134, 1135,
	1136, -2, -2, 1139, 1140, 1141, 1142, 1143, 1144, 1147,
	-2, 1149, -2, 1151, 1119, 1120, 1121, 1122, 1111, 1112,
	1113, 1114, 1115, 1116, -2, -2, -2, 0, 201, 199,
	517, 589, 0, -2, 0, 0, 0, 536, 539, 542,
	545, 0, 36, 37, 0, 0, 673, 739, 739, 739,
	0, 739, 0, 762, 716, 717, 718, 737, 738, 436,
	432, 433, 434, 435, 505, 0, 507, 510, 374, 331,
	0, 0, 0, 342, 374, 0, 0, 512, 512, 0,
	383, 374, 374, -2, 0, 344, 345, 346, 336, 0,
	336, 350, 351, 352, 363, 364, 384, 1286, 0, 0,
	290, 290, 438, 218, 219, 207, 209, 0, 213, 0,
	206, 1573, 0, 0, 175, 1640, 180, 0, 1521, 1587,
	1536, 0, 0, 1554, 0, -2, 512, 0, 518, 0,
	517, 0, 290, 290, 290, 290, 290, 290, 290, 0,
	0, 0, 0, 554, 555, 550, 551, 552, 556, 557,
	3, 0, 639, 640, 643, 644, 645, 0, 0, 479,
	0, 0, 512, -2, 0, 395, 254, 895, 0, 0,
	258, 259, 0, 0, 274, 0, 277, 262, 263, 264,
	0, 0, 246, 247, 0, 0, 225, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 118, 115, 122,
	125, 135, 142, 0, 154, 156, 159, 116, 123, 128,
	129, 136, 157, 117, 119, 120, 124, 158, 160, 137,
	141, 155, 139, 144, 147, 148, 153, 0, 89, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1159, 0, 970, 971, 972, 973, 976,
	0, 988, 0, 0, 0, 1216, 0, 1157, 1157, 0,
	1157, 1153, 1153, 0, 0, 1157, 1095, 0, 0, 1097,
	1108, 0, 0, 1100, 1101, 1157, 0, 1157, 1105, 1106,
	1091, 1092, 0, 1153, 0, 0, 1153, 1153, 1153, 1153,
	1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 0, 1263,
	1281, 1218, 1219, 1220, 1268, 1222, 1272, 1272, 1268, 1268,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 0,
	0, 1261, 1241, 1270, 1270, 1270, 1268, 1265, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1275, 1275, 1278, 1275, 0, 512, 0, 0,
	500, 0, 481, 0, 533, 535, 0, 537, 538, 540,
	541, 543, 544, 546, 547, 38, 0, 657, 0, 660,
	0, 739, 674, 0, 0, 0, 0, 0, 0, 739,
	438, 437, 0, 506, 0, 0, 562, 0, 0, 336,
	374, 341, 562, 0, 357, 358, 359, 374, 374, 365,
	513, 366, 367, 376, 0, 381, 382, 0, 562, 562,
	0, 0, 0, 739, 338, 337, 379, 380, 348, 338,
	1287, 1288, 0, 0, 0, 439, 0, 0, 211, 0,
	216, 168, 0, 0, 0, 0, 0, 0, 197, 198,
	0, 0, 0, 0, 0, 188, 191, 850, 851, 707,
	708, 192, 193, 481, 532, 534, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 570, 564, 566,
	633, 51, 570, 0, 0, 454, 467, 449, 0, 456,
	0, 857, 440, 467, 442, 0, 456, 481, 503, 481,
	0, 255, 0, 260, 0, 0, 276, 278, 279, 280,
	265, 266, 392, 242, 243, 235, 236, 237, 238, 239,
	240, 241, 245, 61, 0, 226, 227, 0, 0, 0,
	102, 103, 104, 105, 106, 107, 109, 93, 408, 410,
	699, 711, 0, 702, 0, 112, 152, 85, 0, 0,
	85, 1160, 1161, 1162, 1163, 1164, 1168, 0, 1170, 1172,
	1174, 1176, 0, 1192, -2, -2, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 1179, 1190,
	1191, 0, 0, 0, 0, 0, 1188, 1183, 0, 968,
	0, 985, 989, 0, 0, 0, 52, 1152, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 0, 1158, 0,
	1159, 0, 0, 0, 1154, 1155, 0, 0, 0, 1056,
	1057, 1058, 0, 462, 0, 1118, 1096, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 1284, 1282, 1283, 1221, 1269, 0, 1246, 0,
	1247, 1248, 1249, 0, 0, 1242, 0, 1243, 1244, 1245,
	1237, 0, 1238, 1239, 0, 1240, 200, 588, 590, 0,
	471, 473, 474, 0, 501, 514, 519, 520, 523, 34,
	39, 0, 661, 0, 0, 0, 676, 0, 288, 693,
	0, 709, 731, -2, 0, 0, 508, 0, 0, 602,
	330, 0, 375, 333, 338, 562, 343, 0, 562, 562,
	374, 0, 376, 0, 376, 370, 371, 0, 385, 388,
	386, 0, 347, 339, 390, 349, 285, 288, 575, 0,
	576, 577, 573, 604, 628, 628, 0, 628, 608, 856,
	220, 221, 0, 0, 215, 169, 170, 0, 172, 173,
	174, 181, 176, 178, 0, 0, 182, 194, 195, 196,
	0, 0, 0, 186, 187, 0, 499, 406, 407, 411,
	0, 413, 854, 414, 415, 661, 562, 0, 571, 0,
	567, 634, 0, 636, 0, 562, 491, 0, 447, 0,
	448, 464, 0, 468, 0, 0, 460, 453, 457, 0,
	0, 477, 441, 0, 0, 446, 502, 504, 896, 0,
	1293, -2, 1295, -2, -2, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 0, 261, 275,
	0, 0, 0, 0, 96, 696, 0, 97, 101, 91,
	0, 0, 0, 701, 0, 698, 703, 0, 111, 0,
	0, 86, 87, 753, 758, 0, 0, 1169, 1171, 1173,
	1175, 1177, 0, 1180, 1188, 1184, 0, 1181, 0, 0,
	1160, 0, 990, 0, 0, 0, 0, 0, 0, 1043,
	1044, 0, 0, 1048, 0, 0, 1051, 0, 0, 0,
	1055, 0, 1094, 1110, 1098, 0, 1102, 0, 1104, 0,
	0, 1022, 1022, 0, 0, 0, 0, 1022, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 1217, 1285, 0,
	0, 0, 1266, 0, 0, 0, 0, 0, 591, 483,
	0, 0, 0, 526, 524, 525, 0, 0, 662, 663,
	665, 666, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1506, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 510, 0, 0, 683, 1289, 740, 292,
	0, 0, 695, 0, 0, 736, -2, 743, 0, 749,
	0, 0, 0, 425, 429, 33, 511, 0, 563, 332,
	0, 374, 340, 562, 856, 360, 361, 562, 377, 374,
	378, 374, 376, 0, 387, 683, 1289, 292, 0, 0,
	0, 0, 0, 595, 0, 0, 594, 0, 0, 0,
	0, 0, 510, 629, 0, 631, 632, 641, 642, 606,
	-2, 0, 575, 611, 1157, 222, 210, 212, 0, 0,
	0, 0, 183, 184, 185, 189, 190, 0, 0, 0,
	560, 565, 572, 635, 637, 52, 568, 560, 40, 0,
	0, 0, 467, 469, 0, 0, 467, 0, 0, 476,
	0, 0, 467, 0, 0, 393, 62, 281, 0, 0,
	0, 0, 0, 409, 0, 700, 93, 0, 0, 113,
	0, 0, 756, 0, 758, 0, 1156, 1182, 0, 1189,
	1185, 969, 977, 986, 0, 0, 992, 1004, 1004, 0,
	995, 1268, 1272, 998, 1268, 1270, 1268, 1004, 1004, 0,
	53, 0, 0, 1049, 1050, 0, 0, 0, 463, 0,
	0, 0, 1022, 1025, 0, 1026, 1022, 1022, 1022, 1022,
	1031, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1274,
	1273, 1259, 0, 1260, 1271, 1276, 0, 1279, 0, 472,
	487, 0, 515, 516, 521, 522, 0, 0, 0, 0,
	667, 0, 0, 858, 686, 684, 685, 0, 1290, 690,
	293, 294, 295, 296, 0, 0, 0, 694, 0, 0,
	732, 733, 734, 735, 744, 1289, 1289, 1289, 858, 475,
	0, -2, 0, 0, 427, 0, 0, 603, 334, 562,
	353, 0, 368, 562, 562, 374, 389, 686, 0, 690,
	562, 232, 0, 598, 592, 0, 581, 596, 597, 584,
	0, 586, 0, 582, 583, 562, 574, 605, 630, 607,
	610, 612, 613, 619, 0, 0, 0, 0, 214, 171,
	0, 312, 177, 412, 855, 417, 558, 0, 0, 558,
	492, 491, 0, 465, 0, 470, 467, 452, 461, 451,
	458, 459, 478, 467, 445, 444, 897, 1294, 1291, 1292,
	256, 0, 697, 93, 98, 99, 100, 94, 92, 704,
	0, 706, 0, 754, 758, 0, 0, 0, 1186, 991,
	978, 993, 1005, 1006, 994, 979, 996, 997, 999, 1000,
	1001, 1002, 1003, 980, 1045, 0, 1047, 1052, 1053, 0,
	1099, 1103, 0, 1024, 1020, 1027, 1028, 1029, 1030, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1267, 0, 0,
	489, 74, 0, 0, 527, 528, 656, 0, 664, 0,
	0, 0, 0, 859, 860, 862, 863, 0, 0, 865,
	921, 0, 874, 739, 874, 0, 0, 876, 877, 675,
	0, 0, 678, 679, 688, 0, 0, 0, 298, 299,
	0, 0, 0, 311, 307, 308, 309, 289, 689, 0,
	0, 0, 0, 0, 628, 0, 0, 562, 426, 429,
	430, 509, 335, 562, 372, 369, 562, 284, 0, 287,
	517, 0, 0, 578, 599, 0, 0, 579, 0, 580,
	585, 587, 231, 614, 0, 0, 616, 617, 618, 609,
	179, 548, 0, 0, 569, 549, 41, 456, 466, 450,
	443, 95, 90, 705, 76, 757, 759, 755, 76, 0,
	1054, 0, 517, 1021, 0, 1277, 1280, 491, 0, 488,
	0, 0, 0, 0, 670, 668, 671, 510, -2, 0,
	-2, 864, 922, 886, 886, 875, 886, 886, 739, 0,
	687, 677, 0, 691, 692, 0, 300, 301, 0, 304,
	310, 0, 745, 746, 852, 853, 747, 0, 562, 562,
	-2, 423, 428, 0, 354, 373, 286, 512, 233, 234,
	600, 0, 593, 623, 620, 0, 0, 559, 561, 455,
	43, 70, 0, 42, 1046, 1093, 1017, 0, 493, 490,
	0, 484, 486, 84, 0, 0, 763, -2, 806, 1289,
	1289, 0, 1289, 1289, 1289, 1289, 0, 0, 1289, 1289,
	1289, 1289, 1289, 1289, 1289, 1289, 1289, 1289, 1289, 1289,
	1289, 1289, 0, 861, 888, -2, 900, 902, 0, 0,
	905, 906, 0, 0, 0, 0, 943, 912, 0, 0,
	916, 0, 1204, 1205, 0, 920, 0, 878, 887, 0,
	887, 0, 0, 886, 0, 0, 0, 297, 302, 0,
	305, 306, 0, 727, 1268, 0, 751, 76, 517, 424,
	230, 0, 0, 624, 626, 621, 622, 67, 72, 77,
	78, 0, 0, 0, 0, 0, 1018, 0, 1012, 1013,
	1014, 1019, 482, 0, 75, 0, 0, 669, 0, 765,
	0, 748, 808, 0, 0, 1289, 1289, 0, 0, 0,
	0, 1289, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 901, 903,
	904, 907, 908, 909, 948, 949, 950, 910, 945, 946,
	947, 911, 0, 0, 0, 1202, 1203, 941, 0, 0,
	0, 0, 0, 0, 0, 872, 680, 0, 682, 303,
	720, 0, 523, 0, 752, 512, 601, 615, 0, 54,
	0, 74, 0, 79, 0, 0, 0, 0, 1023, 1015,
	0, 0, 0, 0, 0, 0, 0, 672, 750, 0,
	802, 807, 809, 810, 0, 0, 813, 814, 815, 816,
	0, 0, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 844, 845, 846, 847, 848, 849, 829, 830,
	831, 832, 833, 834, 841, 0, 0, 838, 0, 0,
	0, 1107, 936, 0, 0, 879, 881, 882, 883, 884,
	885, 880, 0, 0, 0, 0, 871, 873, 917, 0,
	681, 719, 728, 729, 523, 422, 625, 627, 45, 0,
	0, 71, 0, 80, 0, 82, 83, 0, 1007, 1008,
	1010, 1009, 1011, 0, 495, 485, 659, 0, 790, 0,
	0, 796, 0, 803, 811, 812, 817, 818, 835, 0,
	0, 837, 0, 0, 944, 0, 915, 924, 937, 0,
	0, 720, 720, 720, 720, 0, 918, 721, 1289, 0,
	0, 725, 726, 730, 760, 0, 55, 0, 57, 59,
	60, 889, 68, 69, 73, 81, 0, 494, 0, 766,
	0, 768, 0, 0, 0, 0, 0, 800, 0, 842,
	843, 836, 839, 840, 913, 923, 925, 926, 0, 938,
	939, 940, 942, 866, 867, 868, 869, 0, 0, 723,
	0, 46, 47, 0, 56, 0, 0, 1016, 496, 0,
	770, 0, 791, 0, 0, 0, 0, 0, 0, 0,
	914, 927, 0, 928, 0, 0, 0, 870, 722, 724,
	0, 0, 58, 890, 767, 764, 0, 802, 792, 0,
	794, 0, 0, 0, 0, 929, 931, 932, 0, 0,
	930, 48, 49, 50, 0, 0, 772, 0, 788, 793,
	795, 797, 0, 801, 799, 933, 935, 934, 891, 771,
	0, 784, 769, 0, 798, 773, -2, 0, 789, 774,
	-2, 0, 782, 0, 0, 775, 783, 0, 778, 0,
	0, 0, 777, 0, -2, 785, 0, 0, 779, -2,
	0, 787, 786,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 520,
	104, 103, 105, 3, 521, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 522, 115, 523, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:618
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:624
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:659
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:664
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:670
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:690
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:696
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:703
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:711
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:717
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:726
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:734
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:747
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:759
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:771
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:782
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:788
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:792
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:798
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:805
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:814
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:818
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:822
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:835
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:841
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:850
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:861
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:865
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:871
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:875
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:881
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:885
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:891
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:915
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:934
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:938
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:942
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:951
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:959
		{
			yyVAL.str = ""
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:963
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:968
		{
			yyVAL.str = "\n"
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:972
		{
			yyVAL.str = yyDollar[3].str
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:981
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1005
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1009
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1021
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1039
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1056
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1083
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1092
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1096
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1126
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1153
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1166
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1179
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1185
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1198
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1206
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1223
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1227
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1231
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1235
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1242
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1246
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1252
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1268
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1272
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1310
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1322
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1326
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1493
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1509
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1543
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1559
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1570
		{
			yyVAL.str = yyDollar[3].str
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1576
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1580
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1594
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1619
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1642
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1672
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1679
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1687
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1694
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1701
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1710
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1714
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1718
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1724
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1728
		{
			yyVAL.str = yyDollar[1].str
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1735
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1741
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1745
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1756
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1762
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1805
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1813
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1822
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1840
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1860
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1877
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1899
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1903
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1909
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1921
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1937
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1941
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1947
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1953
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1963
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1985
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1997
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2005
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2056
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2060
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2066
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2072
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2077
		{
			yyVAL.str = "true"
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2078
		{
			yyVAL.str = "false"
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2079
		{
			yyVAL.str = yyDollar[1].str
		}
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2084
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2106
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2112
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2143
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2147
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2156
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2188
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2192
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2212
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2216
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2238
		{
			yyVAL.item = nil
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2243
		{
			yyVAL.item = nil
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2280
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2289
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2300
		{
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2304
		{
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2394
		{
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2396
		{
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2424
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2428
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2438
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2517
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2522
		{
			yyVAL.str = ""
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2526
		{
			yyVAL.str = yyDollar[2].str
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2532
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2545
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2549
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2555
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2560
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2570
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2574
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2583
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2591
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2601
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2639
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2643
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2683
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2695
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2701
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2712
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2717
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2724
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2740
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2753
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2768
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2774
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2779
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2786
		{
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2788
		{
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2791
		{
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2800
		{
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2804
		{
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2809
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2818
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2825
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2831
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2839
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2853
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2873
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2883
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2896
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2904
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2918
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2941
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2964
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2968
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2983
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2987
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2993
		{
			yyVAL.str = yyDollar[1].str
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2997
		{
			yyVAL.str = yyDollar[3].str
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3003
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3007
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3013
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3018
		{
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3029
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3033
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3049
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3055
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3059
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3065
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3069
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3105
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3123
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3159
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3172
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3176
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3181
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3185
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3192
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3197
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3226
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3236
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3243
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3252
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3256
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3274
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3283
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3306
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3312
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3318
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3322
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3333
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3337
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3341
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3346
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3350
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3354
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3370
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3384
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3394
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3441
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3473
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3515
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3548
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3552
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3574
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3583
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3589
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3593
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3599
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3603
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3607
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3611
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3616
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3624
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3638
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3656
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3662
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3680
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3689
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3699
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3703
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3713
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3717
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3721
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3725
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3731
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3741
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3745
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3751
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3767
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3773
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3777
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3781
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3791
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3801
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3807
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3811
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3817
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3821
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3831
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3844
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3850
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3856
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3869
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3887
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3891
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3897
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3907
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3911
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3915
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3920
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3924
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3928
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3932
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3941
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3945
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3949
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3953
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3958
		{
			yyVAL.str = ""
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3962
		{
			yyVAL.str = yyDollar[1].str
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3966
		{
			yyVAL.str = yyDollar[2].str
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3975
		{
			yyVAL.str = ""
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3979
		{
			yyVAL.str = yyDollar[1].str
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3983
		{
			yyVAL.str = yyDollar[2].str
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3987
		{
			yyVAL.str = yyDollar[1].str
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3991
		{
			yyVAL.str = yyDollar[2].str
		}
	case 656:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4027
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4037
		{
			yyVAL.str = yyDollar[1].str
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4043
		{
			yyVAL.str = yyDollar[1].str
		}
	case 659:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4050
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4062
		{
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4067
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4074
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4078
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4084
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4090
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4094
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4098
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4104
		{
			yyVAL.str = yyDollar[1].str
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4110
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4116
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4126
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4137
		{
		}
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4154
		{
			yyVAL.str = yyDollar[1].str
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4160
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4170
		{
			yyVAL.str = yyDollar[1].str
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4174
		{
			yyVAL.str = yyDollar[1].str
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4180
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4187
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4193
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4201
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4207
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4214
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4222
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4228
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4249
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4254
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4260
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4268
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4374
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4378
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4384
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4394
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4398
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4404
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4431
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4444
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4463
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4472
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4476
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4499
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4503
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4507
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4511
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4517
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4540
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4562
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4566
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4570
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4578
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4584
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4588
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4594
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4599
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4604
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4608
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4612
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4616
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4620
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4626
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4640
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4653
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4659
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4663
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4669
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4673
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4677
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4682
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4692
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4715
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4745
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4749
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4754
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4758
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4776
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4780
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4789
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4803
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4810
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4821
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4834
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4840
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4844
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4850
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4859
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4873
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4879
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4883
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4896
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4905
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4909
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4918
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4923
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4927
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4932
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4936
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4946
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4950
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4961
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4969
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4996
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5005
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5015
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5025
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5029
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5047
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5053
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5057
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5061
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5067
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5071
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5075
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5079
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5083
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5087
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5091
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5095
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5099
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5103
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5107
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5111
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5123
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5127
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5135
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5139
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5147
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5151
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5155
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5159
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5163
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5171
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5175
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5179
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5186
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5190
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5201
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5205
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5209
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5215
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5219
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5227
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5231
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5253
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5262
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5267
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5273
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5280
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5284
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5294
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5300
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5310
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5316
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5325
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5334
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5357
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5366
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5376
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5390
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5404
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5410
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5416
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5430
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5437
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5443
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5451
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5462
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5466
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5470
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5479
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5485
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5489
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5495
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5503
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5507
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5511
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5515
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5519
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5523
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5531
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5535
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5547
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5575
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5579
		{
			yyVAL.str = yyDollar[1].str
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5585
		{
			yyVAL.str = ""
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5589
		{
			yyVAL.str = yyDollar[2].str
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5595
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5607
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5614
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5621
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5635
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5644
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5650
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5656
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5660
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5664
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5668
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5672
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5692
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5701
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5706
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5710
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5726
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5732
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5736
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5740
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5744
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5748
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5752
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5756
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5760
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5764
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5768
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5772
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5776
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5780
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5786
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5790
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5794
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5798
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5802
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5806
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5818
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5822
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5826
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5830
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5835
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5843
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5847
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5851
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5860
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5864
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5868
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5872
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5881
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5890
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5896
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5900
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5906
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5916
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5933
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5963
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5976
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5988
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6002
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6017
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6032
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6049
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6064
		{
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6070
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6074
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6078
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6084
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6088
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6104
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6110
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6117
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6130
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6137
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6146
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6155
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6165
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6175
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6184
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6193
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6203
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6213
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6223
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6233
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6243
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6253
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6263
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6273
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6283
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6313
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6330
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6354
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6362
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6371
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6388
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6405
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6413
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6431
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6501
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6513
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6523
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6531
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6538
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6545
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6557
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6565
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6576
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6585
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6594
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6602
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6612
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6620
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6628
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6642
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6652
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6671
		{
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6673
		{
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6714
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6728
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6747
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6753
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6757
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6772
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6780
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6788
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6822
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6842
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6846
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6854
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6858
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6866
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6870
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6886
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6890
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6897
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6905
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6911
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6919
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6923
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6931
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6945
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6949
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6953
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6959
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6963
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6976
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6981
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6985
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6989
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6993
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6997
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7001
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7015
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7019
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7026
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7037
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7042
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7048
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7060
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7097
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7136
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7149
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7175
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7229
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7252
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7286
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7334
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7363
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7383
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7403
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7423
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7439
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7452
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7478
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7515
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7527
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7575
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7587
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7612
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7640
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7648
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7657
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7690
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7695
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7701
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7708
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7712
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7717
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7721
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7727
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7733
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7740
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7747
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7756
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7763
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7770
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7779
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7787
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7793
		{
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7795
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7805
		{
			yyVAL.str = ""
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7809
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const CONSTRAINT = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const FOREIGN = 57549
const KEY_BLOCK_SIZE = 57550
const SHOW = 57551
const DESCRIBE = 57552
const EXPLAIN = 57553
const DATE = 57554
const ESCAPE = 57555
const REPAIR = 57556
const OPTIMIZE = 57557
const TRUNCATE = 57558
const MAXVALUE = 57559
const PARTITION = 57560
const REORGANIZE = 57561
const LESS = 57562
const THAN = 57563
const PROCEDURE = 57564
const TRIGGER = 57565
const STATUS = 57566
const VARIABLES = 57567
const ROLE = 57568
const PROXY = 57569
const AVG_ROW_LENGTH = 57570
const STORAGE = 57571
const DISK = 57572
const MEMORY = 57573
const CHECKSUM = 57574
const COMPRESSION = 57575
const DATA = 57576
const DIRECTORY = 57577
const DELAY_KEY_WRITE = 57578
const ENCRYPTION = 57579
const ENGINE = 57580
const MAX_ROWS = 57581
const MIN_ROWS = 57582
const PACK_KEYS = 57583
const ROW_FORMAT = 57584
const STATS_AUTO_RECALC = 57585
const STATS_PERSISTENT = 57586
const STATS_SAMPLE_PAGES = 57587
const DYNAMIC = 57588
const COMPRESSED = 57589
const REDUNDANT = 57590
const COMPACT = 57591
const FIXED = 57592
const COLUMN_FORMAT = 57593
const AUTO_RANDOM = 57594
const RESTRICT = 57595
const CASCADE = 57596
const ACTION = 57597
const PARTIAL = 57598
const SIMPLE = 57599
const CHECK = 57600
const ENFORCED = 57601
const RANGE = 57602
const LIST = 57603
const ALGORITHM = 57604
const LINEAR = 57605
const PARTITIONS = 57606
const SUBPARTITION = 57607
const SUBPARTITIONS = 57608
const CLUSTER = 57609
const TYPE = 57610
const ANY = 57611
const SOME = 57612
const EXTERNAL = 57613
const LOCALFILE = 57614
const URL = 57615
const PREPARE = 57616
const DEALLOCATE = 57617
const RESET = 57618
const EXTENSION = 57619
const PUBLICATION = 57620
const SUBSCRIPTIONS = 57621
const PUBLICATIONS = 57622
const PROPERTIES = 57623
const PARSER = 57624
const VISIBLE = 57625
const INVISIBLE = 57626
const BTREE = 57627
const HASH = 57628
const RTREE = 57629
const BSI = 57630
const ZONEMAP = 57631
const LEADING = 57632
const BOTH = 57633
const TRAILING = 57634
const UNKNOWN = 57635
const EXPIRE = 57636
const ACCOUNT = 57637
const ACCOUNTS = 57638
const UNLOCK = 57639
const DAY = 57640
const NEVER = 57641
const PUMP = 57642
const MYSQL_COMPATBILITY_MODE = 57643
const SECOND = 57644
const ASCII = 57645
const COALESCE = 57646
const COLLATION = 57647
const HOUR = 57648
const MICROSECOND = 57649
const MINUTE = 57650
const MONTH = 57651
const QUARTER = 57652
const REPEAT = 57653
const REVERSE = 57654
const ROW_COUNT = 57655
const WEEK = 57656
const REVOKE = 57657
const FUNCTION = 57658
const PRIVILEGES = 57659
const TABLESPACE = 57660
const EXECUTE = 57661
const SUPER = 57662
const GRANT = 57663
const OPTION = 57664
const REFERENCES = 57665
const REPLICATION = 57666
const SLAVE = 57667
const CLIENT = 57668
const USAGE = 57669
const RELOAD = 57670
const FILE = 57671
const TEMPORARY = 57672
const ROUTINE = 57673
const EVENT = 57674
const SHUTDOWN = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const ENGINES = 57682
const LOW_CARDINALITY = 57683
const ADMIN_NAME = 57684
const RANDOM = 57685
const SUSPEND = 57686
const ATTRIBUTE = 57687
const HISTORY = 57688
const REUSE = 57689
const CURRENT = 57690
const OPTIONAL = 57691
const FAILED_LOGIN_ATTEMPTS = 57692
const PASSWORD_LOCK_TIME = 57693
const UNBOUNDED = 57694
const SECONDARY = 57695
const USER = 57696
const IDENTIFIED = 57697
const CIPHER = 57698
const ISSUER = 57699
const X509 = 57700
const SUBJECT = 57701
const SAN = 57702
const REQUIRE = 57703
const SSL = 57704
const NONE = 57705
const PASSWORD = 57706
const MAX_QUERIES_PER_HOUR = 57707
const MAX_UPDATES_PER_HOUR = 57708
const MAX_CONNECTIONS_PER_HOUR = 57709
const MAX_USER_CONNECTIONS = 57710
const FORMAT = 57711
const VERBOSE = 57712
const CONNECTION = 57713
const TRIGGERS = 57714
const PROFILES = 57715
const LOAD = 57716
const INFILE = 57717
const TERMINATED = 57718
const OPTIONALLY = 57719
const ENCLOSED = 57720
const ESCAPED = 57721
const STARTING = 57722
const LINES = 57723
const ROWS = 57724
const IMPORT = 57725
const MODUMP = 57726
const OVER = 57727
const PRECEDING = 57728
const FOLLOWING = 57729
const GROUPS = 57730
const DATABASES = 57731
const TABLES = 57732
const EXTENDED = 57733
const FULL = 57734
const PROCESSLIST = 57735
const FIELDS = 57736
const COLUMNS = 57737
const OPEN = 57738
const ERRORS = 57739
const WARNINGS = 57740
const INDEXES = 57741
const SCHEMAS = 57742
const NODE = 57743
const LOCKS = 57744
const TABLE_NUMBER = 57745
const COLUMN_NUMBER = 57746
const TABLE_VALUES = 57747
const NAMES = 57748
const GLOBAL = 57749
const SESSION = 57750
const ISOLATION = 57751
const LEVEL = 57752
const READ = 57753
const WRITE = 57754
const ONLY = 57755
const REPEATABLE = 57756
const COMMITTED = 57757
const UNCOMMITTED = 57758
const SERIALIZABLE = 57759
const LOCAL = 57760
const EVENTS = 57761
const PLUGINS = 57762
const CURRENT_TIMESTAMP = 57763
const DATABASE = 57764
const CURRENT_TIME = 57765
const LOCALTIME = 57766
const LOCALTIMESTAMP = 57767
const UTC_DATE = 57768
const UTC_TIME = 57769
const UTC_TIMESTAMP = 57770
const REPLACE = 57771
const CONVERT = 57772
const SEPARATOR = 57773
const TIMESTAMPDIFF = 57774
const CURRENT_DATE = 57775
const CURRENT_USER = 57776
const CURRENT_ROLE = 57777
const SECOND_MICROSECOND = 57778
const MINUTE_MICROSECOND = 57779
const MINUTE_SECOND = 57780
const HOUR_MICROSECOND = 57781
const HOUR_SECOND = 57782
const HOUR_MINUTE = 57783
const DAY_MICROSECOND = 57784
const DAY_SECOND = 57785
const DAY_MINUTE = 57786
const DAY_HOUR = 57787
const YEAR_MONTH = 57788
const SQL_TSI_HOUR = 57789
const SQL_TSI_DAY = 57790
const SQL_TSI_WEEK = 57791
const SQL_TSI_MONTH = 57792
const SQL_TSI_QUARTER = 57793
const SQL_TSI_YEAR = 57794
const SQL_TSI_SECOND = 57795
const SQL_TSI_MINUTE = 57796
const RECURSIVE = 57797
const CONFIG = 57798
const DRAINER = 57799
const MATCH = 57800
const AGAINST = 57801
const BOOLEAN = 57802
const LANGUAGE = 57803
const WITH = 57804
const QUERY = 57805
const EXPANSION = 57806
const ADDDATE = 57807
const BIT_AND = 57808
const BIT_OR = 57809
const BIT_XOR = 57810
const CAST = 57811
const COUNT = 57812
const APPROX_COUNT_DISTINCT = 57813
const APPROX_PERCENTILE = 57814
const CURDATE = 57815
const CURTIME = 57816
const DATE_ADD = 57817
const DATE_SUB = 57818
const EXTRACT = 57819
const GROUP_CONCAT = 57820
const MAX = 57821
const MID = 57822
const MIN = 57823
const NOW = 57824
const POSITION = 57825
const SESSION_USER = 57826
const STD = 57827
const STDDEV = 57828
const MEDIAN = 57829
const STDDEV_POP = 57830
const STDDEV_SAMP = 57831
const SUBDATE = 57832
const SUBSTR = 57833
const SUBSTRING = 57834
const SUM = 57835
const SYSDATE = 57836
const SYSTEM_USER = 57837
const TRANSLATE = 57838
const TRIM = 57839
const VARIANCE = 57840
const VAR_POP = 57841
const VAR_SAMP = 57842
const AVG = 57843
const ARROW = 57844
const ROW = 57845
const OUTFILE = 57846
const HEADER = 57847
const MAX_FILE_SIZE = 57848
const FORCE_QUOTE = 57849
const PARALLEL = 57850
const UNUSED = 57851
const BINDINGS = 57852
const DO = 57853
const DECLARE = 57854
const KILL = 57855
const QUERY_RESULT = 57856

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8730

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 99,
	21, 569,
	-2, 550,
	-1, 107,
	214, 771,
	-2, 820,
	-1, 127,
	42, 397,
	214, 397,
	241, 404,
	242, 404,
	416, 397,
	-2, 429,
	-1, 446,
	290, 93,
	392, 93,
	-2, 1383,
	-1, 504,
	67, 1189,
	-2, 1523,
	-1, 505,
	67, 1207,
	-2, 1494,
	-1, 509,
	67, 1208,
	-2, 1522,
	-1, 531,
	67, 1121,
	-2, 1578,
	-1, 532,
	67, 1122,
	-2, 1577,
	-1, 533,
	67, 1123,
	-2, 1567,
	-1, 534,
	67, 1542,
	-2, 1562,
	-1, 535,
	67, 1543,
	-2, 1563,
	-1, 536,
	67, 1544,
	-2, 1569,
	-1, 537,
	67, 1545,
	-2, 1552,
	-1, 538,
	67, 1546,
	-2, 1560,
	-1, 539,
	67, 1547,
	-2, 1570,
	-1, 540,
	67, 1548,
	-2, 1571,
	-1, 541,
	67, 1549,
	-2, 1576,
	-1, 542,
	67, 1550,
	-2, 1581,
	-1, 543,
	67, 1551,
	-2, 1582,
	-1, 545,
	67, 1186,
	-2, 1375,
	-1, 552,
	67, 1195,
	-2, 1401,
	-1, 556,
	67, 1199,
	-2, 1440,
	-1, 557,
	67, 1200,
	-2, 1518,
	-1, 565,
	67, 1210,
	-2, 1503,
	-1, 567,
	67, 1212,
	-2, 1513,
	-1, 568,
	67, 1213,
	-2, 1536,
	-1, 579,
	67, 1103,
	-2, 1572,
	-1, 580,
	67, 1104,
	-2, 1573,
	-1, 581,
	67, 1105,
	-2, 1574,
	-1, 588,
	21, 570,
	-2, 533,
	-1, 644,
	411, 429,
	412, 429,
	-2, 398,
	-1, 693,
	104, 1375,
	115, 1375,
	135, 1375,
	-2, 1350,
	-1, 731,
	21, 570,
	-2, 533,
	-1, 830,
	21, 569,
	-2, 1011,
	-1, 1164,
	67, 1257,
	-2, 1520,
	-1, 1165,
	67, 1258,
	-2, 1521,
	-1, 1371,
	1, 308,
	68, 308,
	532, 308,
	-2, 806,
	-1, 1609,
	68, 1336,
	136, 1336,
	-2, 1505,
	-1, 1610,
	68, 1336,
	136, 1336,
	-2, 1504,
	-1, 1611,
	68, 1314,
	136, 1314,
	-2, 1491,
	-1, 1612,
	68, 1315,
	136, 1315,
	-2, 1496,
	-1, 1613,
	68, 1316,
	136, 1316,
	-2, 1428,
	-1, 1614,
	68, 1317,
	136, 1317,
	-2, 1422,
	-1, 1615,
	68, 1318,
	136, 1318,
	-2, 1366,
	-1, 1616,
	68, 1319,
	136, 1319,
	-2, 1493,
	-1, 1617,
	68, 1320,
	136, 1320,
	-2, 1426,
	-1, 1618,
	68, 1321,
	136, 1321,
	-2, 1421,
	-1, 1619,
	68, 1322,
	136, 1322,
	-2, 1414,
	-1, 1621,
	68, 1325,
	136, 1325,
	-2, 1536,
	-1, 1622,
	68, 1305,
	136, 1305,
	-2, 1523,
	-1, 1623,
	68, 1334,
	136, 1334,
	-2, 1494,
	-1, 1624,
	68, 1334,
	136, 1334,
	-2, 1522,
	-1, 1625,
	68, 1334,
	136, 1334,
	-2, 1384,
	-1, 1626,
	68, 1332,
	136, 1332,
	-2, 1513,
	-1, 1627,
	68, 1329,
	136, 1329,
	-2, 1406,
	-1, 1628,
	67, 1287,
	68, 1287,
	136, 1287,
	354, 1287,
	355, 1287,
	356, 1287,
	-2, 1365,
	-1, 1629,
	67, 1288,
	68, 1288,
	136, 1288,
	354, 1288,
	355, 1288,
	356, 1288,
	-2, 1367,
	-1, 1630,
	67, 1291,
	68, 1291,
	136, 1291,
	354, 1291,
	355, 1291,
	356, 1291,
	-2, 1495,
	-1, 1631,
	67, 1293,
	68, 1293,
	136, 1293,
	354, 1293,
	355, 1293,
	356, 1293,
	-2, 1478,
	-1, 1632,
	67, 1295,
	68, 1295,
	136, 1295,
	354, 1295,
	355, 1295,
	356, 1295,
	-2, 1427,
	-1, 1633,
	67, 1297,
	68, 1297,
	136, 1297,
	354, 1297,
	355, 1297,
	356, 1297,
	-2, 1410,
	-1, 1634,
	67, 1298,
	68, 1298,
	136, 1298,
	354, 1298,
	355, 1298,
	356, 1298,
	-2, 1411,
	-1, 1635,
	67, 1300,
	68, 1300,
	136, 1300,
	354, 1300,
	355, 1300,
	356, 1300,
	-2, 1364,
	-1, 1636,
	68, 1339,
	136, 1339,
	354, 1339,
	355, 1339,
	356, 1339,
	-2, 1389,
	-1, 1637,
	68, 1339,
	136, 1339,
	354, 1339,
	355, 1339,
	356, 1339,
	-2, 1402,
	-1, 1638,
	68, 1342,
	136, 1342,
	354, 1342,
	355, 1342,
	356, 1342,
	-2, 1385,
	-1, 1639,
	68, 1339,
	136, 1339,
	354, 1339,
	355, 1339,
	356, 1339,
	-2, 1463,
	-1, 1652,
	1, 799,
	68, 799,
	532, 799,
	-2, 806,
	-1, 1758,
	21, 569,
	-2, 661,
	-1, 1925,
	1, 800,
	68, 800,
	532, 800,
	-2, 806,
	-1, 1934,
	65, 477,
	136, 477,
	-2, 915,
	-1, 1951,
	275, 979,
	-2, 958,
	-1, 2194,
	275, 979,
	-2, 959,
	-1, 2321,
	88, 806,
	131, 806,
	168, 806,
	171, 806,
	-2, 863,
	-1, 2324,
	88, 806,
	131, 806,
	168, 806,
	171, 806,
	-2, 863,
	-1, 2327,
	65, 477,
	136, 477,
	-2, 916,
	-1, 2415,
	88, 806,
	131, 806,
	168, 806,
	171, 806,
	-2, 864,
	-1, 2687,
	68, 835,
	136, 835,
	-2, 806,
	-1, 2691,
	68, 835,
	136, 835,
	-2, 806,
	-1, 2705,
	68, 839,
	136, 839,
	-2, 806,
	-1, 2710,
	68, 840,
	136, 840,
	-2, 806,
}

const yyPrivate = 57344

const yyLast = 31392

var yyAct = [...]int{
	475, 1372, 2691, 1230, 2699, 2690, 2670, 2581, 1145, 2628,
	455, 2409, 2620, 457, 477, 2598, 2387, 2517, 2206, 2535,
	1599, 2536, 2524, 2508, 2440, 2273, 2392, 2528, 2408, 2459,
	2407, 2274, 589, 857, 2482, 997, 2390, 1292, 2450, 1334,
	148, 148, 501, 1148, 2428, 1336, 148, 392, 399, 2414,
	1141, 399, 2176, 1937, 2337, 1434, 2304, 1789, 2016, 2015,
	2017, 2002, 2216, 2195, 1686, 1050, 1404, 2012, 1752, 2009,
	459, 2271, 1503, 1825, 1412, 1607, 1472, 2265, 1691, 2038,
	2248, 2146, 2151, 404, 1451, 2215, 2148, 1659, 1605, 725,
	1473, 1375, 2058, 410, 959, 448, 2174, 584, 692, 449,
	1824, 1302, 1866, 1926, 1427, 1480, 454, 2052, 698, 974,
	625, 2097, 1481, 1407, 147, 147, 1499, 1904, 1741, 1908,
	383, 1955, 1498, 1753, 1658, 1687, 1346, 1322, 1310, 702,
	43, 1229, 3, 396, 19, 584, 894, 1347, 701, 30,
	1288, 393, 8, 1293, 723, 1531, 1139, 148, 1500, 1792,
	1078, 1603, 1283, 394, 6, 1059, 397, 31, 98, 458,
	1645, 395, 7, 1431, 987, 1344, 1510, 1345, 1194, 447,
	696, 1178, 1587, 1130, 466, 388, 43, 742, 939, 1476,
	1479, 1405, 456, 1457, 1138, 684, 1760, 1321, 2415, 1360,
	385, 624, 1144, 983, 1200, 1029, 586, 1199, 412, 1042,
	16, 9, 4, 1077, 998, 685, 398, 413, 588, 957,
	137, 976, 622, 2091, 1827, 2091, 140, 1517, 640, 1507,
	143, 727, 142, 2455, 2451, 1790, 650, 2272, 1306, 852,
	2564, 1475, 587, 858, 762, 141, 141, 39, 129, 108,
	597, 1812, 2400, 1504, 141, 2399, 39, 129, 108, 141,
	2572, 39, 129, 108, 381, 134, 408, 402, 141, 141,
	1820, 2492, 122, 1031, 141, 2120, 135, 141, 1515, 141,
	1649, 97, 43, 1776, 796, 722, 19, 141, 1097, 1090,
	777, 30, 778, 1131, 8, 1135, 82, 141, 1445, 39,
	129, 108, 138, 138, 1094, 1087, 6, 699, 1777, 31,
	2073, 138, 583, 2066, 7, 97, 138, 1115, 1906, 1134,
	780, 2616, 144, 97, 1032, 1096, 1089, 707, 706, 708,
	1793, 138, 660, 665, 138, 664, 138, 770, 1012, 772,
	1013, 789, 598, 994, 138, 574, 1220, 573, 575, 576,
	409, 577, 578, 2468, 138, 1415, 1416, 705, 1003, 1004,
	1001, 1083, 450, 1000, 1003, 1004, 1356, 773, 1147, 794,
	1905, 695, 130, 131, 2614, 132, 133, 2539, 2540, 694,
	1867, 799, 800, 801, 798, 2565, 2566, 2602, 2603, 775,
	2275, 2457, 1136, 2059, 2510, 148, 735, 2460, 2461, 2462,
	2463, 2060, 2510, 2061, 2513, 710, 2453, 734, 2571, 712,
	2275, 399, 399, 1133, 148, 669, 1807, 736, 1150, 590,
	1015, 745, 2523, 1428, 730, 732, 703, 2284, 1420, 1126,
	2305, 1511, 666, 2312, 2405, 2213, 766, 1235, 1732, 1584,
	107, 128, 139, 1911, 80, 2162, 1899, 711, 776, 107,
	1424, 139, 1705, 1644, 2474, 2152, 2160, 2086, 2084, 768,
	791, 127, 121, 120, 1277, 1276, 765, 1817, 45, 733,
	127, 771, 774, 2006, 832, 2467, 2477, 729, 792, 793,
	1734, 2469, 2402, 2574, 2575, 704, 745, 2167, 753, 443,
	1737, 668, 445, 2618, 1216, 767, 2609, 444, 1213, 2173,
	401, 731, 1215, 1212, 1214, 1218, 1219, 1516, 2157, 2158,
	1217, 757, 400, 2538, 2357, 992, 779, 2529, 2613, 1132,
	1149, 1024, 2684, 2159, 1443, 1444, 123, 124, 125, 43,
	43, 2156, 787, 788, 2700, 1156, 1159, 1160, 782, 2638,
	783, 1520, 1522, 1523, 982, 2583, 1157, 2579, 2580, 136,
	2583, 2645, 2499, 709, 2350, 2442, 2649, 697, 1715, 667,
	699, 1714, 2230, 769, 1014, 2363, 2364, 92, 785, 1917,
	1038, 126, 1037, 93, 755, 738, 739, 2429, 2430, 2431,
	2433, 2432, 1920, 1921, 1922, 1923, 1017, 1505, 2623, 996,
	995, 2701, 981, 980, 1505, 2341, 1505, 2671, 747, 746,
	2483, 960, 2296, 2695, 2707, 2345, 726, 1532, 408, 2507,
	956, 958, 1030, 1519, 2089, 1813, 1767, 750, 751, 969,
	762, 1508, 2288, 754, 2090, 2154, 94, 965, 936, 699,
	968, 2040, 2042, 1695, 625, 967, 38, 781, 403, 2142,
	619, 620, 621, 1223, 1224, 1225, 1226, 1227, 1228, 1221,
	1222, 971, 838, 2044, 834, 835, 836, 837, 1987, 2099,
	2098, 1764, 2573, 747, 746, 1003, 1004, 1035, 888, 1766,
	1765, 1033, 1034, 786, 740, 1418, 148, 1002, 1026, 1419,
	1763, 40, 1417, 671, 672, 999, 1692, 1695, 1518, 591,
	2650, 1506, 587, 2567, 2568, 40, 784, 584, 584, 584,
	761, 1128, 1054, 1054, 2624, 148, 2619, 961, 962, 963,
	964, 2401, 966, 2180, 109, 109, 1910, 993, 1003, 1004,
	407, 399, 958, 109, 1081, 1081, 2694, 2713, 109, 1821,
	1084, 1429, 1935, 40, 1791, 2163, 2441, 109, 109, 1092,
	2153, 2475, 1061, 109, 2087, 797, 109, 2712, 109, 1750,
	1022, 2245, 1052, 1052, 868, 869, 109, 1696, 756, 1113,
	2406, 1158, 1844, 95, 96, 100, 109, 1521, 1056, 1914,
	1915, 2706, 1054, 760, 1054, 735, 1098, 1421, 1127, 1060,
	984, 988, 988, 1913, 1936, 1699, 1146, 2041, 934, 931,
	932, 933, 2703, 2685, 1849, 797, 1848, 1847, 1845, 1423,
	984, 697, 984, 2680, 941, 1560, 797, 2155, 1559, 989,
	2674, 1696, 2346, 2347, 802, 797, 1689, 943, 2343, 588,
	1690, 1693, 2342, 831, 2241, 762, 2673, 2654, 2621, 2622,
	1337, 840, 1779, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1025, 973, 1108, 1109, 1189,
	1190, 1337, 845, 1936, 1198, 1751, 1016, 990, 1018, 1846,
	2704, 1513, 661, 1244, 1006, 1007, 2630, 1009, 1010, 1011,
	1005, 2681, 1694, 1008, 1250, 1251, 797, 675, 1513, 591,
	43, 1988, 1990, 1991, 1992, 1989, 1253, 1258, 1259, 43,
	1143, 2592, 1088, 1121, 1513, 1513, 1095, 1036, 584, 1048,
	1049, 1118, 1045, 1046, 1047, 2171, 1795, 2322, 1593, 1698,
	2668, 2546, 1460, 1117, 1702, 1700, 1122, 1647, 1812, 1701,
	1099, 1161, 1124, 381, 1062, 674, 1104, 1074, 1082, 677,
	676, 1075, 1129, 2541, 2631, 661, 1112, 2501, 1751, 1542,
	1901, 1278, 663, 2500, 1111, 662, 1299, 1100, 2497, 588,
	1751, 1800, 715, 720, 721, 799, 800, 801, 798, 2593,
	1120, 1119, 1116, 1779, 1140, 799, 800, 801, 798, 1137,
	148, 2245, 1320, 1054, 1324, 1243, 1326, 1327, 1709, 2479,
	1142, 2496, 1300, 625, 1850, 1851, 1335, 2495, 1504, 1231,
	1054, 1234, 1598, 985, 1026, 1245, 937, 759, 2494, 392,
	2118, 2479, 2478, 2365, 1303, 2502, 1252, 1564, 1254, 1180,
	1541, 1663, 2232, 1646, 1495, 663, 2479, 2035, 662, 1187,
	1188, 1890, 1888, 1361, 1361, 1441, 1026, 1026, 2172, 1026,
	1886, 1319, 148, 1458, 1320, 1320, 1884, 1872, 1054, 1402,
	1414, 1828, 1810, 1804, 1317, 1359, 1350, 1802, 1797, 2479,
	584, 972, 1054, 762, 1192, 2479, 1233, 1662, 1281, 1594,
	1284, 1285, 1357, 1358, 1290, 1291, 2479, 1568, 1325, 760,
	2479, 1779, 1328, 1329, 1330, 1255, 1080, 1080, 1320, 1054,
	2233, 1450, 148, 148, 1454, 1751, 1295, 1456, 1298, 1891,
	1889, 1462, 986, 1398, 1399, 148, 1039, 2311, 1885, 2632,
	1244, 1244, 1483, 1273, 1885, 797, 1367, 1244, 1244, 797,
	1663, 1798, 1490, 728, 673, 1803, 1798, 1567, 1558, 1363,
	717, 718, 719, 1512, 1440, 1663, 1349, 1593, 984, 2330,
	1307, 1105, 2181, 1762, 617, 797, 1335, 1447, 1354, 1351,
	1054, 1502, 1425, 2054, 1301, 1938, 1815, 1814, 1806, 1679,
	988, 1555, 1543, 490, 99, 1494, 1452, 1452, 1465, 1316,
	1151, 1152, 1153, 1154, 1155, 1323, 1101, 1453, 1430, 1452,
	1338, 1339, 935, 1449, 1332, 1496, 1331, 1355, 843, 1468,
	748, 1484, 1340, 728, 1342, 797, 797, 814, 2185, 1348,
	1597, 1513, 1365, 1364, 1366, 1525, 2081, 382, 977, 1106,
	99, 728, 978, 1343, 1196, 1197, 1529, 1530, 1237, 1236,
	1232, 2663, 1478, 1362, 1238, 2651, 1043, 1352, 1353, 1478,
	1706, 1371, 1438, 1439, 2246, 1401, 1403, 1044, 2237, 2234,
	1323, 2092, 2007, 1801, 1769, 1426, 815, 816, 817, 818,
	819, 820, 821, 814, 985, 43, 737, 1835, 678, 1195,
	1446, 1538, 1195, 801, 798, 1435, 1436, 1437, 699, 799,
	800, 801, 798, 1448, 670, 699, 1318, 1041, 2606, 798,
	1565, 1140, 799, 800, 801, 798, 1466, 1572, 817, 818,
	819, 820, 821, 814, 2353, 2352, 1485, 1488, 1487, 1489,
	2062, 1492, 700, 1965, 1493, 1964, 99, 1959, 1954, 2334,
	1264, 1304, 2648, 2010, 1596, 1308, 2403, 2689, 1311, 1256,
	1257, 2677, 1497, 1260, 1261, 1262, 1263, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 448, 735, 1640, 805, 806,
	807, 808, 809, 810, 811, 803, 2309, 1608, 2639, 148,
	148, 148, 1660, 986, 1533, 2404, 2647, 1524, 1040, 1998,
	699, 2634, 1667, 1026, 1186, 2554, 2422, 443, 1670, 1996,
	445, 1994, 1672, 1984, 1526, 444, 2147, 1180, 1248, 1183,
	1185, 1182, 1537, 1184, 1026, 2310, 1527, 1528, 2308, 1249,
	735, 2161, 2137, 1704, 2136, 1021, 2077, 1023, 1997, 1027,
	1028, 1685, 799, 800, 801, 798, 2056, 1982, 1995, 1669,
	1993, 1837, 1983, 1551, 1981, 1304, 1980, 1977, 1673, 1674,
	1971, 1304, 1304, 1654, 1655, 1656, 1968, 1967, 1592, 1859,
	1755, 1755, 1414, 1755, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1591, 1682, 1076, 1590, 1586, 1671, 1641, 812, 822,
	823, 815, 816, 817, 818, 819, 820, 821, 814, 478,
	487, 1054, 148, 1585, 1102, 479, 1550, 486, 480, 484,
	483, 481, 482, 954, 2608, 2388, 735, 2604, 2569, 1081,
	1589, 1414, 1600, 1601, 1784, 2505, 1786, 1608, 2111, 799,
	800, 801, 798, 2476, 1708, 2452, 2413, 1681, 1759, 1757,
	2386, 1761, 1676, 1677, 1602, 799, 800, 801, 798, 2384,
	1648, 1774, 2369, 2367, 2003, 1808, 2336, 988, 1502, 488,
	2307, 2306, 2303, 1781, 2293, 1054, 2287, 1054, 1668, 1054,
	1826, 2240, 1788, 2110, 735, 2238, 1060, 799, 800, 801,
	798, 2228, 2227, 2141, 1678, 1822, 2135, 1783, 2533, 485,
	2088, 1680, 2057, 99, 99, 700, 799, 800, 801, 798,
	2047, 1985, 1978, 1054, 1853, 1535, 1974, 1973, 1539, 1972,
	1595, 799, 800, 801, 798, 1588, 1860, 1818, 530, 529,
	2702, 1054, 1735, 1469, 1467, 1313, 1675, 1103, 867, 863,
	699, 862, 844, 1862, 724, 813, 812, 822, 823, 815,
	816, 817, 818, 819, 820, 821, 814, 141, 1549, 2516,
	129, 108, 1553, 1052, 1562, 2487, 2324, 1775, 1864, 1770,
	1771, 1772, 2323, 2321, 830, 2298, 2297, 1780, 1852, 1782,
	1566, 1052, 2527, 1569, 1570, 1571, 1839, 2292, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1861, 1582, 2279, 2264,
	2263, 1819, 2186, 2116, 2109, 799, 800, 801, 798, 2101,
	2096, 1833, 2394, 2051, 138, 141, 1811, 1054, 1900, 1892,
	1918, 1816, 1887, 1883, 1320, 1809, 1882, 1573, 1934, 1563,
	1561, 1557, 2393, 1556, 1940, 799, 800, 801, 798, 2362,
	1554, 1868, 1548, 1829, 1830, 1545, 1873, 1544, 1843, 1247,
	1949, 1246, 1066, 2290, 1902, 799, 800, 801, 798, 1953,
	1664, 1064, 799, 800, 801, 798, 2662, 1140, 2656, 1961,
	1962, 1963, 138, 2646, 2643, 1966, 799, 800, 801, 798,
	2641, 2553, 2503, 1928, 859, 1832, 1280, 1943, 1540, 1755,
	2438, 1945, 2688, 2114, 2426, 2423, 2377, 1896, 2375, 1999,
	2360, 2359, 1932, 2113, 944, 2358, 2355, 2349, 1320, 735,
	1414, 1414, 1414, 1414, 1927, 1893, 799, 800, 801, 798,
	2018, 735, 1414, 2316, 2122, 1755, 799, 800, 801, 798,
	1941, 1951, 2018, 1285, 1289, 1290, 1291, 1282, 1054, 1956,
	975, 1956, 2000, 1960, 1916, 799, 800, 801, 798, 148,
	148, 1295, 1933, 1298, 1931, 1930, 1957, 1929, 1304, 1304,
	1304, 43, 1294, 1297, 1939, 19, 1286, 1796, 860, 1244,
	30, 1244, 1768, 8, 2072, 1948, 1730, 2076, 1661, 2031,
	1944, 1080, 1952, 1054, 1958, 6, 2083, 1707, 31, 1710,
	1711, 1712, 1713, 7, 1181, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1323,
	138, 1063, 1979, 1455, 1315, 1287, 382, 1125, 1091, 2004,
	938, 886, 1303, 2049, 2050, 2008, 885, 2071, 884, 883,
	882, 881, 2033, 880, 879, 2032, 878, 588, 2030, 99,
	877, 876, 875, 99, 2048, 874, 2069, 873, 2034, 872,
	1942, 871, 2075, 870, 99, 2104, 2063, 2106, 1946, 1947,
	2045, 1836, 2085, 99, 2043, 866, 2055, 2356, 2065, 1854,
	1855, 865, 735, 864, 1857, 1858, 2070, 2080, 2150, 861,
	856, 2068, 855, 1608, 853, 852, 851, 1863, 2165, 613,
	148, 2019, 2020, 2021, 2022, 850, 849, 848, 2093, 2079,
	735, 735, 735, 847, 846, 842, 1414, 1660, 2094, 2184,
	841, 1685, 1685, 1685, 764, 2188, 1304, 2249, 2250, 1894,
	1895, 1311, 1666, 2100, 2067, 2217, 2219, 1651, 2217, 2217,
	752, 2074, 2107, 2108, 2588, 2224, 2586, 2537, 2121, 2252,
	1054, 1054, 2123, 2124, 2125, 2126, 1919, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2112, 2138, 1778, 2187, 2105,
	2143, 1471, 2189, 2190, 2168, 763, 2255, 2102, 2103, 2027,
	2025, 148, 2182, 2254, 2028, 2026, 2150, 1881, 799, 800,
	801, 798, 2024, 2023, 1320, 1320, 2214, 1927, 2218, 1805,
	1052, 1052, 2179, 1880, 2183, 1799, 2170, 2177, 2178, 2169,
	799, 800, 801, 798, 1898, 2225, 2226, 2029, 1397, 1747,
	1748, 2144, 615, 2220, 2221, 601, 799, 800, 801, 798,
	1546, 81, 612, 611, 2222, 1853, 1274, 2380, 1794, 2379,
	2145, 1823, 2244, 822, 823, 815, 816, 817, 818, 819,
	820, 821, 814, 605, 1879, 1452, 940, 2256, 2139, 2140,
	1878, 2242, 2243, 1600, 1601, 2231, 2235, 1907, 42, 145,
	148, 2239, 2236, 2378, 41, 378, 1085, 799, 800, 801,
	798, 1642, 2253, 799, 800, 801, 798, 2192, 758, 2522,
	1950, 1877, 1903, 1333, 610, 2270, 1314, 2257, 609, 2260,
	2261, 2262, 1876, 790, 599, 604, 799, 800, 801, 798,
	377, 942, 379, 2269, 799, 800, 801, 798, 380, 1237,
	1236, 2595, 602, 2280, 1733, 799, 800, 801, 798, 1304,
	2281, 1969, 1970, 2283, 1304, 952, 953, 1975, 1976, 1400,
	2191, 1875, 1020, 600, 2285, 2286, 950, 951, 1320, 1874,
	948, 949, 2282, 1413, 2320, 2005, 1019, 616, 946, 947,
	1755, 1414, 2327, 2259, 799, 800, 801, 798, 1491, 979,
	2095, 591, 799, 800, 801, 798, 1871, 2657, 2577, 2560,
	2558, 603, 1337, 1054, 2530, 2515, 1870, 2514, 2512, 2335,
	2299, 2504, 2115, 2449, 148, 2302, 2448, 2397, 2301, 799,
	800, 801, 798, 2219, 2385, 2277, 2276, 2267, 2328, 799,
	800, 801, 798, 700, 2331, 2315, 2314, 2332, 2329, 1869,
	700, 945, 1320, 2266, 2078, 2053, 735, 2326, 2325, 99,
	1865, 2590, 2589, 2338, 1653, 1547, 749, 2018, 2333, 2214,
	2589, 2590, 799, 800, 801, 798, 2351, 2278, 991, 614,
	50, 2382, 1442, 799, 800, 801, 798, 2371, 1058, 735,
	1, 1312, 596, 2036, 1856, 2361, 2037, 2258, 2354, 2039,
	2018, 1509, 1731, 2368, 1643, 2366, 2164, 970, 618, 1239,
	1110, 2370, 2373, 714, 744, 1107, 2372, 799, 800, 801,
	798, 743, 741, 2223, 1193, 492, 1474, 735, 1054, 1054,
	2001, 2445, 825, 735, 829, 830, 2594, 2396, 2627, 2383,
	2552, 2597, 1123, 476, 1685, 2506, 2456, 2389, 2556, 826,
	828, 824, 2458, 827, 813, 812, 822, 823, 815, 816,
	817, 818, 819, 820, 821, 814, 735, 2398, 2391, 735,
	735, 735, 1514, 795, 2064, 636, 524, 2418, 1052, 2338,
	499, 2420, 2421, 2412, 2419, 2416, 1335, 854, 2446, 1093,
	1834, 2329, 1086, 2411, 2119, 1191, 2427, 716, 498, 2435,
	2436, 2437, 2313, 1912, 2424, 2395, 608, 713, 637, 1583,
	2473, 2470, 2434, 799, 800, 801, 798, 2443, 799, 800,
	801, 798, 2454, 1275, 1296, 2444, 1279, 1704, 2698, 592,
	593, 594, 595, 2687, 2669, 2655, 2582, 735, 592, 593,
	594, 595, 591, 2683, 2612, 2644, 1738, 2471, 2466, 735,
	2464, 591, 1743, 1746, 1747, 1748, 1744, 2480, 1745, 1749,
	2198, 2465, 2637, 2486, 2485, 2484, 2578, 2493, 2489, 1743,
	1746, 1747, 1748, 1744, 2289, 1745, 1749, 414, 1422, 2498,
	582, 2291, 682, 2439, 2208, 1470, 415, 1665, 2570, 2425,
	735, 1065, 606, 1650, 607, 1925, 1924, 2201, 2511, 2509,
	1162, 804, 1179, 2294, 2196, 2295, 839, 453, 1536, 2211,
	2212, 2526, 465, 2547, 2550, 2197, 1909, 2207, 2525, 2046,
	49, 48, 47, 2531, 46, 1461, 152, 2542, 2543, 2544,
	2545, 2551, 2532, 494, 151, 2549, 2599, 474, 473, 2559,
	472, 2561, 2562, 2557, 2555, 471, 2563, 1742, 1740, 1739,
	1409, 2202, 1408, 1459, 1697, 1368, 2534, 2490, 2576, 2491,
	2348, 1986, 2344, 2340, 2601, 1758, 2587, 2585, 2584, 2229,
	2193, 2194, 2200, 893, 889, 2591, 891, 892, 2600, 890,
	1842, 1838, 1683, 1684, 2175, 955, 2472, 2605, 735, 2300,
	1606, 1604, 2251, 2247, 2166, 1482, 1309, 1897, 1410, 2610,
	1406, 1736, 1652, 909, 2626, 73, 72, 79, 119, 1304,
	37, 2417, 2374, 2625, 1413, 2376, 2615, 2617, 585, 2629,
	2635, 32, 735, 2317, 2318, 2319, 27, 5, 29, 2381,
	2636, 28, 14, 1146, 2633, 2640, 15, 2642, 13, 2210,
	1114, 1688, 2601, 2653, 12, 18, 26, 25, 24, 91,
	90, 23, 735, 89, 735, 88, 2600, 2652, 87, 909,
	2659, 86, 2661, 1146, 22, 1146, 2204, 2664, 11, 85,
	2665, 84, 83, 735, 2629, 2672, 21, 78, 76, 2679,
	20, 2676, 2682, 77, 1146, 1220, 74, 75, 2203, 2205,
	60, 59, 58, 70, 69, 68, 67, 66, 2686, 2693,
	65, 635, 57, 2697, 56, 897, 55, 2696, 54, 71,
	64, 2705, 63, 62, 61, 53, 2708, 2693, 2710, 2709,
	52, 2711, 2697, 917, 921, 923, 925, 927, 928, 930,
	51, 934, 931, 932, 933, 106, 105, 912, 913, 914,
	915, 895, 896, 918, 104, 898, 103, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 910, 916, 102,
	2213, 897, 101, 33, 34, 887, 920, 922, 924, 926,
	929, 35, 2199, 2481, 36, 116, 115, 117, 2209, 917,
	921, 923, 925, 927, 928, 930, 2488, 934, 931, 932,
	933, 118, 113, 912, 913, 914, 915, 895, 896, 918,
	111, 898, 911, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 910, 916, 99, 2678, 114, 112, 110,
	44, 10, 920, 922, 924, 926, 929, 17, 2, 2521,
	0, 0, 0, 1216, 0, 0, 0, 1213, 0, 0,
	0, 1215, 1212, 1214, 1218, 1219, 0, 0, 0, 1217,
	0, 0, 0, 0, 0, 0, 0, 2660, 911, 0,
	0, 0, 0, 0, 0, 813, 812, 822, 823, 815,
	816, 817, 818, 819, 820, 821, 814, 0, 0, 0,
	2658, 2521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 1413, 1413, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 813, 812, 822, 823,
	815, 816, 817, 818, 819, 820, 821, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 813,
	812, 822, 823, 815, 816, 817, 818, 819, 820, 821,
	814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2521,
	0, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1223, 1224, 1225, 1226, 1227, 1228, 1221, 1222,
	0, 0, 319, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2667, 0, 467, 0, 0, 0,
	226, 0, 0, 251, 2607, 0, 0, 497, 0, 0,
	311, 265, 0, 0, 0, 0, 553, 561, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 460, 0,
	919, 491, 530, 529, 478, 487, 0, 99, 207, 150,
	479, 0, 486, 480, 484, 483, 481, 482, 0, 545,
	0, 0, 0, 0, 0, 0, 451, 464, 2518, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	813, 812, 822, 823, 815, 816, 817, 818, 819, 820,
	821, 814, 461, 462, 99, 0, 919, 0, 507, 0,
	463, 0, 0, 502, 488, 489, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 485, 505, 509, 219, 567, 503,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 568, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	813, 812, 822, 823, 815, 816, 817, 818, 819, 820,
	821, 814, 0, 500, 0, 0, 342, 0, 0, 551,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	504, 0, 301, 283, 564, 452, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 549, 279, 0, 0,
	563, 544, 546, 547, 550, 554, 555, 556, 557, 558,
	560, 562, 566, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 2519, 0, 0, 1831,
	2520, 0, 565, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 508, 269, 270, 271, 272, 552, 0, 212,
	365, 294, 813, 812, 822, 823, 815, 816, 817, 818,
	819, 820, 821, 814, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 1534, 0, 574,
	548, 573, 575, 576, 572, 577, 578, 559, 470, 0,
	512, 570, 569, 571, 0, 0, 0, 0, 0, 0,
	813, 812, 822, 823, 815, 816, 817, 818, 819, 820,
	821, 814, 0, 0, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 537, 517, 518, 519, 469, 520, 515,
	516, 538, 510, 534, 535, 493, 513, 521, 533, 522,
	536, 539, 540, 579, 580, 528, 581, 525, 541, 532,
	531, 523, 511, 542, 543, 496, 495, 526, 527, 514,
	319, 506, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 0, 0, 0, 226, 0,
	0, 251, 0, 0, 0, 497, 0, 0, 311, 265,
	0, 0, 0, 0, 553, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 0, 0, 491,
	530, 529, 478, 487, 0, 0, 207, 150, 479, 0,
	486, 480, 484, 483, 481, 482, 0, 545, 0, 0,
	0, 0, 0, 0, 451, 464, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 462, 0, 0, 0, 0, 507, 0, 463, 0,
	0, 502, 488, 489, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 485, 505, 509, 219, 567, 503, 340, 202,
	0, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 568, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 342, 0, 0, 551, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 504, 0,
	301, 283, 564, 452, 0, 299, 253, 327, 291, 333,
	317, 341, 295, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 1241, 1240, 1242, 354,
	233, 190, 191, 337, 549, 279, 0, 0, 563, 544,
	546, 547, 550, 554, 555, 556, 557, 558, 560, 562,
	566, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	508, 269, 270, 271, 272, 552, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 276, 243, 309, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 258, 0, 0, 574, 548, 573,
	575, 576, 572, 577, 578, 559, 470, 0, 512, 570,
	569, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 537, 517, 518, 519, 469, 520, 515, 516, 538,
	510, 534, 535, 493, 513, 521, 533, 522, 536, 539,
	540, 579, 580, 528, 581, 525, 541, 532, 531, 523,
	511, 542, 543, 496, 495, 526, 527, 514, 319, 506,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 0, 0, 0, 226, 0, 0, 251,
	0, 0, 0, 497, 0, 0, 311, 265, 0, 0,
	0, 0, 553, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 0, 0, 491, 530, 529,
	478, 487, 0, 0, 207, 150, 479, 0, 486, 480,
	484, 483, 481, 482, 0, 545, 0, 0, 0, 0,
	0, 0, 451, 464, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 462,
	0, 0, 0, 0, 507, 0, 463, 0, 0, 502,
	488, 489, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	485, 505, 509, 219, 567, 503, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 568, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 342, 0, 0, 551, 0, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 504, 0, 301, 283,
	564, 452, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 549, 279, 0, 0, 563, 544, 546, 547,
	550, 554, 555, 556, 557, 558, 560, 562, 566, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 2519, 0, 0, 0, 2520, 0, 565, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 508, 269,
	270, 271, 272, 552, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 574, 548, 573, 575, 576,
	572, 577, 578, 559, 470, 0, 512, 570, 569, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 0, 293, 231, 537,
	517, 518, 519, 469, 520, 515, 516, 538, 510, 534,
	535, 493, 513, 521, 533, 522, 536, 539, 540, 579,
	580, 528, 581, 525, 541, 532, 531, 523, 511, 542,
	543, 496, 495, 526, 527, 514, 319, 506, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 0, 0, 0, 226, 1305, 0, 251, 0, 0,
	0, 497, 0, 0, 311, 265, 0, 0, 0, 0,
	553, 561, 0, 0, 0, 0, 0, 0, 0, 1432,
	0, 0, 460, 0, 0, 491, 530, 529, 478, 487,
	0, 0, 207, 150, 479, 0, 486, 480, 484, 483,
	481, 482, 0, 545, 0, 0, 0, 0, 0, 0,
	451, 464, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 462, 0, 0,
	0, 0, 507, 0, 463, 0, 0, 1433, 488, 489,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 200, 330, 313, 262, 245,
	246, 199, 0, 298, 224, 237, 220, 278, 485, 505,
	509, 219, 567, 503, 340, 202, 0, 339, 277, 326,
	331, 263, 257, 201, 328, 261, 256, 249, 228, 568,
	241, 289, 255, 290, 242, 267, 266, 268, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	342, 0, 0, 551, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 504, 0, 301, 283, 564, 452,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	549, 279, 0, 0, 563, 544, 546, 547, 550, 554,
	555, 556, 557, 558, 560, 562, 566, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 565, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 508, 269, 270, 271,
	272, 552, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 574, 548, 573, 575, 576, 572, 577,
	578, 559, 470, 0, 512, 570, 569, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 252, 0, 293, 231, 537, 517, 518,
	519, 469, 520, 515, 516, 538, 510, 534, 535, 493,
	513, 521, 533, 522, 536, 539, 540, 579, 580, 528,
	581, 525, 541, 532, 531, 523, 511, 542, 543, 496,
	495, 526, 527, 514, 141, 319, 506, 350, 351, 352,
	372, 336, 0, 223, 0, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	833, 0, 0, 311, 265, 0, 0, 0, 0, 553,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 0, 0, 491, 530, 529, 478, 487, 0,
	0, 207, 150, 479, 0, 486, 480, 484, 483, 481,
	482, 0, 545, 0, 0, 0, 0, 0, 0, 451,
	464, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 0, 0, 0,
	0, 507, 0, 463, 0, 0, 502, 488, 489, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 485, 505, 509,
	219, 567, 503, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 568, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 342,
	0, 0, 551, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 504, 0, 301, 283, 564, 452, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 549,
	279, 0, 0, 563, 544, 546, 547, 550, 554, 555,
	556, 557, 558, 560, 562, 566, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 565, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 508, 269, 270, 271, 272,
	552, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 574, 548, 573, 575, 576, 572, 577, 578,
	559, 470, 0, 512, 570, 569, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 109, 293, 231, 537, 517, 518, 519,
	469, 520, 515, 516, 538, 510, 534, 535, 493, 513,
	521, 533, 522, 536, 539, 540, 579, 580, 528, 581,
	525, 541, 532, 531, 523, 511, 542, 543, 496, 495,
	526, 527, 514, 319, 506, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 226, 2666, 0, 251, 0, 0, 0, 497, 0,
	0, 311, 265, 0, 0, 0, 0, 553, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 491, 530, 529, 478, 487, 0, 0, 207,
	150, 479, 0, 486, 480, 484, 483, 481, 482, 0,
	545, 0, 0, 0, 0, 0, 0, 451, 464, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 0, 0, 0, 0, 507,
	0, 463, 0, 0, 502, 488, 489, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 485, 505, 509, 219, 567,
	503, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 568, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 342, 0, 0,
	551, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 504, 0, 301, 283, 564, 452, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 549, 279, 0,
	0, 563, 544, 546, 547, 550, 554, 555, 556, 557,
	558, 560, 562, 566, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 508, 269, 270, 271, 272, 552, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	574, 548, 573, 575, 576, 572, 577, 578, 559, 470,
	0, 512, 570, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 537, 517, 518, 519, 469, 520,
	515, 516, 538, 510, 534, 535, 493, 513, 521, 533,
	522, 536, 539, 540, 579, 580, 528, 581, 525, 541,
	532, 531, 523, 511, 542, 543, 496, 495, 526, 527,
	514, 319, 506, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 226,
	1305, 0, 251, 0, 0, 0, 497, 0, 0, 311,
	265, 0, 0, 0, 0, 553, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 0, 0,
	491, 530, 529, 478, 487, 0, 0, 207, 150, 479,
	0, 486, 480, 484, 483, 481, 482, 0, 545, 0,
	0, 0, 0, 0, 0, 451, 464, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 462, 0, 0, 0, 0, 507, 0, 463,
	0, 0, 502, 488, 489, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 485, 505, 509, 219, 567, 503, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 568, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 342, 0, 0, 551, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 504,
	0, 301, 283, 564, 452, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 549, 279, 0, 0, 563,
	544, 546, 547, 550, 554, 555, 556, 557, 558, 560,
	562, 566, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 565, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 508, 269, 270, 271, 272, 552, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 574, 548,
	573, 575, 576, 572, 577, 578, 559, 470, 0, 512,
	570, 569, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 537, 517, 518, 519, 469, 520, 515, 516,
	538, 510, 534, 535, 493, 513, 521, 533, 522, 536,
	539, 540, 579, 580, 528, 581, 525, 541, 532, 531,
	523, 511, 542, 543, 496, 495, 526, 527, 514, 319,
	506, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 497, 0, 0, 311, 265, 0,
	0, 0, 0, 553, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 491, 530,
	529, 478, 487, 0, 0, 207, 150, 479, 0, 486,
	480, 484, 483, 481, 482, 0, 545, 0, 0, 0,
	0, 0, 0, 451, 464, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 1079, 0, 0, 0, 507, 0, 463, 0, 0,
	502, 488, 489, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 485, 505, 509, 219, 567, 503, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 568, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 342, 0, 0, 551, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 504, 0, 301,
	283, 564, 452, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 549, 279, 0, 0, 563, 544, 546,
	547, 550, 554, 555, 556, 557, 558, 560, 562, 566,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 508,
	269, 270, 271, 272, 552, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 574, 548, 573, 575,
	576, 572, 577, 578, 559, 470, 0, 512, 570, 569,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	537, 517, 518, 519, 469, 520, 515, 516, 538, 510,
	534, 535, 493, 513, 521, 533, 522, 536, 539, 540,
	579, 580, 528, 581, 525, 541, 532, 531, 523, 511,
	542, 543, 496, 495, 526, 527, 514, 0, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 319, 506, 0,
	0, 1552, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 497, 0, 0, 311, 265, 0, 0, 0,
	0, 553, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 0, 0, 491, 530, 529, 478,
	487, 0, 0, 207, 150, 479, 0, 486, 480, 484,
	483, 481, 482, 0, 545, 0, 0, 0, 0, 0,
	0, 451, 464, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 462, 0,
	0, 0, 0, 507, 0, 463, 0, 0, 502, 488,
	489, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 485,
	505, 509, 219, 567, 503, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	568, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 342, 0, 0, 551, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 504, 0, 301, 283, 564,
	452, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 549, 279, 0, 0, 563, 544, 546, 547, 550,
	554, 555, 556, 557, 558, 560, 562, 566, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 565, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 508, 269, 270,
	271, 272, 552, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 574, 548, 573, 575, 576, 572,
	577, 578, 559, 470, 0, 512, 570, 569, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 537, 517,
	518, 519, 469, 520, 515, 516, 538, 510, 534, 535,
	493, 513, 521, 533, 522, 536, 539, 540, 579, 580,
	528, 581, 525, 541, 532, 531, 523, 511, 542, 543,
	496, 495, 526, 527, 514, 319, 506, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	497, 0, 0, 311, 265, 0, 0, 0, 0, 553,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 0, 0, 491, 530, 529, 478, 487, 0,
	0, 207, 150, 479, 0, 486, 480, 484, 483, 481,
	482, 0, 545, 0, 0, 0, 0, 0, 0, 451,
	464, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 0, 0, 0,
	0, 507, 0, 463, 0, 0, 502, 488, 489, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 485, 505, 509,
	219, 567, 503, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 568, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 342,
	0, 0, 551, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 504, 0, 301, 283, 564, 452, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 549,
	279, 0, 0, 563, 544, 546, 547, 550, 554, 555,
	556, 557, 558, 560, 562, 566, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 565, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 508, 269, 270, 271, 272,
	552, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 574, 548, 573, 575, 576, 572, 577, 578,
	559, 470, 0, 512, 570, 569, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 537, 517, 518, 519,
	469, 520, 515, 516, 538, 510, 534, 535, 493, 513,
	521, 533, 522, 536, 539, 540, 579, 580, 528, 581,
	525, 541, 532, 531, 523, 511, 542, 543, 496, 495,
	526, 527, 514, 319, 506, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 467, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 497, 0,
	0, 311, 265, 0, 0, 0, 0, 553, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 491, 530, 529, 478, 487, 0, 0, 207,
	150, 479, 0, 486, 480, 484, 483, 481, 482, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 0, 0, 0, 0, 507,
	0, 463, 0, 0, 502, 488, 489, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 485, 505, 509, 219, 567,
	503, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 568, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 342, 0, 0,
	551, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 504, 0, 301, 283, 564, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 1164, 1165,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 549, 279, 0,
	0, 563, 544, 546, 547, 550, 554, 555, 556, 557,
	558, 560, 562, 566, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 508, 269, 270, 271, 272, 552, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	574, 548, 573, 575, 576, 572, 577, 578, 559, 470,
	0, 512, 570, 569, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 537, 517, 518, 519, 469, 520,
	515, 516, 538, 510, 534, 535, 493, 513, 521, 533,
	522, 536, 539, 540, 579, 580, 528, 581, 525, 541,
	532, 531, 523, 511, 542, 543, 496, 495, 526, 527,
	514, 319, 506, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 497, 0, 0, 311,
	265, 0, 0, 0, 0, 553, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 530, 529, 478, 487, 0, 0, 207, 150, 479,
	0, 486, 480, 484, 483, 481, 482, 0, 545, 0,
	0, 0, 0, 0, 0, 451, 464, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 462, 0, 0, 0, 0, 507, 0, 463,
	0, 0, 502, 488, 489, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 485, 505, 509, 219, 567, 503, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 568, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 342, 0, 0, 551, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 504,
	0, 301, 283, 564, 452, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 549, 279, 0, 0, 563,
	544, 546, 547, 550, 554, 555, 556, 557, 558, 560,
	562, 566, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 565, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 508, 269, 270, 271, 272, 552, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 574, 548,
	573, 575, 576, 572, 577, 578, 559, 470, 0, 512,
	570, 569, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 537, 517, 518, 519, 469, 520, 515, 516,
	538, 510, 534, 535, 493, 513, 521, 533, 522, 536,
	539, 540, 579, 580, 528, 581, 525, 541, 532, 531,
	523, 511, 542, 543, 496, 495, 526, 527, 514, 319,
	506, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 497, 0, 0, 311, 265, 0,
	0, 0, 0, 553, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 491, 530,
	529, 478, 487, 0, 0, 207, 150, 479, 0, 486,
	480, 484, 483, 481, 482, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 464, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 0, 0, 0, 0, 507, 0, 463, 0, 0,
	502, 488, 489, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 485, 505, 509, 219, 567, 503, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 568, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 342, 0, 0, 551, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 504, 0, 301,
	283, 564, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 549, 279, 0, 0, 563, 544, 546,
	547, 550, 554, 555, 556, 557, 558, 560, 562, 566,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 508,
	269, 270, 271, 272, 552, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 574, 548, 573, 575,
	576, 572, 577, 578, 559, 470, 0, 512, 570, 569,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	537, 517, 518, 519, 469, 520, 515, 516, 538, 510,
	534, 535, 493, 513, 521, 533, 522, 536, 539, 540,
	579, 580, 528, 581, 525, 541, 532, 531, 523, 511,
	542, 543, 496, 495, 526, 527, 514, 0, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 141, 319, 39,
	129, 108, 0, 0, 0, 0, 0, 0, 0, 281,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 311, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 207, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	0, 329, 357, 219, 348, 0, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 371, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 358, 0, 301, 283,
	0, 0, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 353, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 362, 269,
	270, 271, 272, 387, 389, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 40, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 109, 293, 231, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 0, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 319, 0, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 909, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 311, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 207, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 897, 0, 0,
	0, 0, 198, 316, 332, 208, 307, 345, 213, 314,
	203, 280, 303, 0, 0, 1628, 1630, 1631, 1632, 1633,
	1634, 1635, 0, 1639, 1636, 1637, 1638, 278, 0, 1623,
	1624, 1625, 1626, 895, 1609, 1629, 0, 1610, 277, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1627, 289, 255, 290, 242, 267, 266, 268, 920, 922,
	924, 926, 929, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	250, 0, 0, 0, 1622, 0, 301, 283, 0, 0,
	0, 299, 253, 327, 291, 333, 317, 341, 295, 292,
	193, 318, 222, 264, 204, 206, 218, 225, 227, 229,
	230, 273, 274, 286, 306, 320, 321, 322, 221, 214,
	300, 215, 239, 216, 194, 308, 217, 196, 287, 325,
	0, 235, 296, 260, 197, 259, 288, 324, 323, 205,
	349, 355, 356, 360, 0, 361, 0, 0, 0, 369,
	374, 375, 376, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 354, 233, 190, 191, 337,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 353, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 244, 285, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	335, 347, 364, 367, 0, 0, 0, 195, 366, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 362, 269, 270, 271,
	272, 236, 0, 212, 365, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 232, 238, 373, 240, 211, 284, 234,
	344, 247, 0, 370, 0, 0, 0, 0, 276, 243,
	309, 248, 254, 297, 343, 282, 302, 209, 334, 310,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 919, 252, 0, 293, 231, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 0,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 319, 0, 0, 350, 351, 352,
	372, 336, 0, 223, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 311, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	207, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 1692, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 316, 332, 208, 307, 345, 213, 314, 203, 280,
	303, 0, 0, 200, 330, 313, 262, 245, 246, 199,
	0, 298, 224, 237, 220, 278, 0, 329, 357, 219,
	348, 0, 340, 202, 0, 339, 277, 326, 331, 263,
	257, 201, 328, 261, 256, 249, 228, 371, 241, 289,
	255, 290, 242, 267, 266, 268, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 342, 0,
	0, 0, 1689, 0, 1688, 315, 1690, 1693, 250, 0,
	0, 0, 358, 0, 301, 283, 0, 0, 0, 299,
	253, 327, 291, 333, 317, 341, 295, 292, 193, 318,
	222, 264, 204, 206, 218, 225, 227, 229, 230, 273,
	274, 286, 306, 320, 321, 322, 221, 214, 300, 215,
	239, 216, 194, 308, 217, 196, 287, 325, 1694, 235,
	296, 260, 197, 259, 288, 324, 323, 205, 349, 355,
	356, 360, 0, 361, 0, 0, 0, 369, 374, 375,
	376, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 354, 233, 190, 191, 337, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	353, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 244, 285, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 335, 347,
	364, 367, 0, 0, 0, 195, 366, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 362, 269, 270, 271, 272, 236,
	0, 212, 365, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 232, 238, 373, 240, 211, 284, 234, 344, 247,
	0, 370, 0, 0, 0, 0, 276, 243, 309, 248,
	254, 297, 343, 282, 302, 209, 334, 310, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 252, 0, 293, 231, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 0, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 319, 0, 0, 350, 351, 352, 372, 336,
	0, 223, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1463, 0, 0, 0, 0,
	226, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	311, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 1464, 0, 0, 0, 207, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 799, 800, 801, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 316,
	332, 208, 307, 345, 213, 314, 203, 280, 303, 0,
	0, 200, 330, 313, 262, 245, 246, 199, 0, 298,
	224, 237, 220, 278, 0, 329, 357, 219, 348, 0,
	340, 202, 0, 339, 277, 326, 331, 263, 257, 201,
	328, 261, 256, 249, 228, 371, 241, 289, 255, 290,
	242, 267, 266, 268, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 250, 0, 0, 0,
	358, 0, 301, 283, 0, 0, 0, 299, 253, 327,
	291, 333, 317, 341, 295, 292, 193, 318, 222, 264,
	204, 206, 218, 225, 227, 229, 230, 273, 274, 286,
	306, 320, 321, 322, 221, 214, 300, 215, 239, 216,
	194, 308, 217, 196, 287, 325, 0, 235, 296, 260,
	197, 259, 288, 324, 323, 205, 349, 355, 356, 360,
	0, 361, 0, 0, 0, 369, 374, 375, 376, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 354, 233, 190, 191, 337, 0, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 353, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 244,
	285, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 335, 347, 364, 367,
	0, 0, 0, 195, 366, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 362, 269, 270, 271, 272, 236, 0, 212,
	365, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 232,
	238, 373, 240, 211, 284, 234, 344, 247, 0, 370,
	0, 0, 0, 0, 276, 243, 309, 248, 254, 297,
	343, 282, 302, 209, 334, 310, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 252,
	0, 293, 231, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 0, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	319, 0, 0, 350, 351, 352, 372, 336, 0, 223,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 681,
	0, 251, 0, 0, 0, 0, 0, 0, 311, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	689, 690, 0, 0, 0, 0, 207, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 316, 332, 208,
	307, 345, 213, 314, 203, 280, 303, 0, 0, 200,
	330, 313, 262, 245, 246, 199, 0, 298, 224, 237,
	220, 278, 0, 329, 357, 219, 348, 663, 340, 202,
	662, 339, 277, 326, 331, 263, 257, 201, 328, 261,
	256, 249, 228, 371, 241, 289, 255, 290, 242, 267,
	266, 268, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 250, 0, 0, 0, 358, 0,
	301, 283, 0, 0, 0, 299, 253, 327, 291, 333,
	317, 341, 679, 292, 193, 318, 222, 264, 204, 206,
	218, 225, 227, 229, 230, 273, 274, 286, 306, 320,
	321, 322, 221, 214, 300, 215, 239, 216, 194, 308,
	217, 196, 287, 325, 0, 235, 296, 260, 197, 259,
	288, 324, 323, 205, 349, 355, 356, 360, 0, 361,
	0, 0, 0, 369, 374, 375, 376, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 354,
	233, 190, 191, 337, 0, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 353, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 244, 285, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 335, 347, 364, 367, 0, 0,
	0, 195, 366, 0, 0, 0, 0, 0, 0, 680,
	338, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	683, 269, 270, 271, 272, 236, 0, 212, 365, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 232, 238, 373,
	240, 211, 284, 234, 344, 247, 0, 370, 0, 0,
	0, 0, 691, 686, 687, 248, 254, 297, 343, 282,
	302, 209, 334, 310, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 252, 0, 293,
	231, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 0, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 141, 319,
	0, 350, 351, 352, 372, 336, 0, 223, 0, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 97, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 1486, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 109, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 141, 319, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 251,
	0, 0, 0, 97, 0, 0, 311, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 1477, 0, 149, 0, 0,
	0, 0, 0, 0, 207, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 316, 332, 208, 307, 345,
	213, 314, 203, 280, 303, 0, 0, 200, 330, 313,
	262, 245, 246, 199, 0, 298, 224, 237, 220, 278,
	0, 329, 357, 219, 348, 0, 340, 202, 0, 339,
	277, 326, 331, 263, 257, 201, 328, 261, 256, 249,
	228, 371, 241, 289, 255, 290, 242, 267, 266, 268,
	0, 0, 0, 0, 0, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 250, 0, 0, 0, 358, 0, 301, 283,
	0, 0, 0, 299, 253, 327, 291, 333, 317, 341,
	295, 292, 193, 318, 222, 264, 204, 206, 218, 225,
	227, 229, 230, 273, 274, 286, 306, 320, 321, 322,
	221, 214, 300, 215, 239, 216, 194, 308, 217, 196,
	287, 325, 0, 235, 296, 260, 197, 259, 288, 324,
	323, 205, 349, 355, 356, 360, 0, 361, 0, 0,
	0, 369, 374, 375, 376, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 354, 233, 190,
	191, 337, 0, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 353, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 244, 285, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 335, 347, 364, 367, 0, 0, 0, 195,
	366, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 362, 269,
	270, 271, 272, 236, 0, 212, 365, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 232, 238, 373, 240, 211,
	284, 234, 344, 247, 0, 370, 0, 0, 0, 0,
	276, 243, 309, 248, 254, 297, 343, 282, 302, 209,
	334, 310, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 252, 109, 293, 231, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 0, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 141, 319, 0, 350,
	351, 352, 372, 336, 0, 223, 0, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 97, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 109, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 689, 690, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 663, 340, 202, 662, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 691, 686, 687,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 2013, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	1057, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 1055, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 1051, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 1055, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2596, 0, 149, 530, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 1055, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2339, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 1055, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 1756, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 1773, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 1055, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2675, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 530, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2611,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 2548,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2410, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 2447, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 2149, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 1055, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 1756, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 1785,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 295,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 0, 0, 0, 350, 351,
	352, 372, 336, 319, 223, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 1055, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 1341, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 218,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 0, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 319, 0, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 311, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 207, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 316, 332, 208, 307, 345, 213,
	314, 203, 280, 303, 0, 0, 200, 330, 313, 262,
	245, 246, 199, 0, 298, 224, 237, 220, 278, 0,
	329, 357, 219, 348, 0, 340, 202, 0, 339, 277,
	326, 331, 263, 257, 201, 328, 261, 256, 249, 228,
	371, 241, 289, 255, 290, 242, 267, 266, 268, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 250, 0, 0, 0, 358, 0, 301, 283, 0,
	0, 0, 299, 253, 327, 291, 333, 317, 341, 405,
	292, 193, 318, 222, 264, 204, 206, 218, 225, 227,
	229, 230, 273, 274, 286, 306, 320, 321, 322, 221,
	214, 300, 215, 239, 216, 194, 308, 217, 196, 287,
	325, 0, 235, 296, 260, 197, 259, 288, 324, 323,
	205, 349, 355, 356, 360, 0, 361, 0, 0, 0,
	369, 374, 375, 376, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 354, 233, 190, 191,
	337, 0, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 353, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 244, 285, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 335, 347, 364, 367, 0, 0, 0, 195, 366,
	0, 0, 0, 0, 0, 0, 406, 338, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 362, 269, 270,
	271, 272, 236, 0, 212, 365, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 232, 238, 373, 240, 211, 284,
	234, 344, 247, 0, 370, 0, 0, 0, 0, 276,
	243, 309, 248, 254, 297, 343, 282, 302, 209, 334,
	310, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 252, 0, 293, 231, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	0, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 319, 0, 0, 350, 351,
	352, 372, 336, 0, 223, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 311, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 207, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 316, 332, 208, 307, 345, 213, 314, 203,
	280, 303, 0, 0, 200, 330, 313, 262, 245, 246,
	199, 0, 298, 224, 237, 220, 278, 0, 329, 357,
	219, 348, 0, 340, 202, 0, 339, 277, 326, 331,
	263, 257, 201, 328, 261, 256, 249, 228, 371, 241,
	289, 255, 290, 242, 267, 266, 268, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 342,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 250,
	0, 0, 0, 358, 0, 301, 283, 0, 0, 0,
	299, 253, 327, 291, 333, 317, 341, 295, 292, 193,
	318, 222, 264, 204, 206, 218, 225, 227, 229, 230,
	273, 274, 286, 306, 320, 321, 322, 221, 214, 300,
	215, 239, 216, 194, 308, 217, 196, 287, 325, 0,
	235, 296, 260, 197, 259, 288, 324, 323, 205, 349,
	355, 356, 360, 0, 361, 0, 0, 0, 369, 374,
	375, 376, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 354, 233, 190, 191, 337, 0,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 353, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 244, 285, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 335,
	347, 364, 367, 0, 0, 0, 195, 366, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 362, 269, 270, 271, 272,
	236, 0, 212, 365, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 232, 238, 373, 240, 211, 284, 234, 344,
	247, 0, 370, 0, 0, 0, 0, 276, 243, 309,
	248, 254, 297, 343, 282, 302, 209, 334, 310, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 252, 0, 293, 231, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 0, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 319, 0, 0, 350, 351, 352, 372,
	336, 0, 223, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 226, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 311, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 207,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	316, 332, 208, 307, 345, 213, 314, 203, 280, 303,
	0, 0, 200, 330, 313, 262, 245, 246, 199, 0,
	298, 224, 237, 220, 278, 0, 329, 357, 219, 348,
	0, 340, 202, 0, 339, 277, 326, 331, 263, 257,
	201, 328, 261, 256, 249, 228, 371, 241, 289, 255,
	290, 242, 267, 266, 268, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 250, 0, 0,
	0, 358, 0, 301, 283, 0, 0, 0, 299, 253,
	327, 291, 333, 317, 341, 295, 292, 193, 318, 222,
	264, 204, 206, 218, 225, 227, 229, 230, 273, 274,
	286, 306, 320, 321, 322, 221, 214, 300, 215, 239,
	216, 194, 308, 217, 196, 287, 325, 0, 235, 296,
	260, 197, 259, 288, 324, 323, 205, 349, 355, 356,
	360, 0, 361, 0, 0, 0, 369, 374, 375, 376,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 354, 233, 190, 191, 337, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 353,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	244, 285, 0, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 335, 347, 364,
	367, 0, 0, 0, 195, 366, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 362, 269, 270, 271, 272, 236, 0,
	212, 365, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	232, 238, 373, 240, 211, 284, 234, 344, 247, 0,
	370, 0, 0, 0, 0, 276, 243, 309, 248, 254,
	297, 343, 282, 302, 209, 334, 310, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	252, 0, 293, 231, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 0, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 319, 0, 0, 350, 351, 352, 372, 336, 0,
	223, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 311,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 207, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 316, 332,
	208, 307, 345, 213, 314, 203, 280, 303, 0, 0,
	200, 330, 313, 262, 245, 246, 199, 0, 298, 224,
	237, 220, 278, 0, 329, 357, 219, 348, 0, 340,
	202, 0, 339, 277, 326, 331, 263, 257, 201, 328,
	261, 256, 249, 228, 371, 241, 289, 255, 290, 242,
	267, 266, 268, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 250, 0, 0, 0, 358,
	0, 301, 283, 0, 0, 0, 299, 253, 327, 291,
	333, 317, 341, 295, 292, 193, 318, 222, 264, 204,
	206, 218, 225, 227, 229, 230, 273, 274, 286, 306,
	320, 321, 322, 221, 214, 300, 215, 239, 216, 194,
	308, 217, 196, 287, 325, 0, 235, 296, 260, 197,
	259, 288, 324, 323, 205, 349, 355, 356, 360, 0,
	361, 0, 0, 0, 369, 374, 375, 376, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	354, 233, 190, 191, 337, 0, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 353, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 244, 285,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 335, 347, 364, 367, 0,
	0, 0, 195, 366, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 362, 269, 270, 271, 272, 236, 0, 212, 365,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 232, 238,
	373, 240, 211, 284, 234, 344, 247, 0, 370, 0,
	0, 0, 0, 276, 243, 309, 248, 254, 297, 343,
	282, 302, 209, 334, 310, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 252, 0,
	293, 231, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 0, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 319,
	0, 0, 350, 351, 352, 372, 336, 0, 223, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 311, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 207, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 316, 332, 208, 307,
	345, 213, 314, 203, 280, 303, 0, 0, 200, 330,
	313, 262, 245, 246, 199, 0, 298, 224, 237, 220,
	278, 0, 329, 357, 219, 348, 0, 340, 202, 0,
	339, 277, 326, 331, 263, 257, 201, 328, 261, 256,
	249, 228, 371, 241, 289, 255, 290, 242, 267, 266,
	268, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 250, 0, 0, 0, 358, 0, 301,
	283, 0, 0, 0, 299, 253, 327, 291, 333, 317,
	341, 295, 292, 193, 318, 222, 264, 204, 206, 446,
	225, 227, 229, 230, 273, 274, 286, 306, 320, 321,
	322, 221, 214, 300, 215, 239, 216, 194, 308, 217,
	196, 287, 325, 0, 235, 296, 260, 197, 259, 288,
	324, 323, 205, 349, 355, 356, 360, 0, 361, 0,
	0, 0, 369, 374, 375, 376, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 354, 233,
	190, 191, 337, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 353, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 244, 285, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 335, 347, 364, 367, 0, 0, 0,
	195, 366, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 362,
	269, 270, 271, 272, 236, 0, 212, 365, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1395, 0, 0, 0, 359, 232, 238, 373, 240,
	211, 284, 234, 344, 247, 909, 370, 0, 0, 0,
	0, 276, 243, 309, 248, 254, 297, 343, 282, 302,
	209, 334, 310, 258, 0, 1397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1377, 0, 192, 0, 252, 0, 293, 231,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 0, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 897, 661, 0,
	350, 351, 352, 372, 336, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 917, 921, 923, 925, 927,
	928, 930, 0, 934, 931, 932, 933, 0, 0, 912,
	913, 914, 915, 895, 896, 918, 0, 898, 0, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 910,
	916, 799, 800, 801, 798, 0, 0, 0, 920, 922,
	924, 926, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 663, 0,
	0, 662, 1370, 0, 0, 1369, 0, 0, 0, 1381,
	0, 0, 0, 0, 911, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 648, 0, 0, 0, 0,
	1374, 0, 0, 628, 1376, 1378, 1380, 1220, 1382, 1383,
	1384, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1397, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 0, 2692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 646, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 1395, 0, 1373, 0, 0,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 1397,
	0, 0, 0, 1379, 0, 0, 0, 651, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 1213,
	1395, 0, 0, 1215, 1212, 1214, 1218, 1219, 0, 0,
	0, 1217, 0, 0, 0, 0, 1377, 0, 0, 652,
	657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1397, 0, 642, 0, 644, 660,
	0, 0, 1381, 641, 639, 638, 0, 643, 630, 631,
	632, 633, 634, 1385, 658, 659, 0, 0, 0, 0,
	0, 0, 919, 0, 0, 0, 654, 655, 0, 0,
	0, 1377, 0, 1374, 0, 1703, 0, 1376, 1378, 1380,
	0, 1382, 1383, 1384, 1386, 1387, 1388, 1390, 1391, 1392,
	1393, 0, 425, 0, 424, 431, 421, 0, 0, 0,
	0, 0, 0, 649, 0, 0, 428, 429, 0, 430,
	434, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 439, 0, 0, 1396, 0, 0, 0,
	0, 0, 0, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1223, 1224, 1225, 1226, 1227, 1228,
	1221, 1222, 443, 1381, 425, 445, 424, 431, 421, 0,
	444, 0, 0, 1394, 1385, 0, 0, 0, 428, 429,
	0, 430, 434, 0, 0, 416, 0, 0, 0, 0,
	1373, 0, 0, 0, 1374, 439, 0, 0, 1376, 1378,
	1380, 0, 1382, 1383, 1384, 1386, 1387, 1388, 1390, 1391,
	1392, 1393, 0, 0, 0, 0, 0, 0, 1381, 1389,
	0, 0, 0, 0, 443, 0, 1379, 445, 0, 1385,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1396, 0, 1374,
	0, 0, 0, 1376, 1378, 1380, 0, 1382, 1383, 1384,
	1386, 1387, 1388, 1390, 1391, 1392, 1393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 419, 418,
	0, 1373, 1396, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	1389, 425, 420, 424, 431, 421, 411, 1379, 0, 1394,
	0, 0, 0, 0, 0, 428, 429, 0, 430, 434,
	0, 0, 416, 0, 0, 0, 1373, 0, 0, 417,
	419, 418, 439, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 0, 0, 0, 1389, 0, 442, 0, 0,
	0, 0, 1379, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 422, 426,
	432, 0, 433, 435, 0, 0, 436, 437, 438, 0,
	0, 440, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	422, 426, 432, 0, 433, 435, 0, 0, 436, 437,
	438, 0, 0, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 419, 418, 0,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 422, 426, 432,
	0, 433, 435, 0, 0, 436, 437, 438, 0, 0,
	440, 441,
}

var yyPact = [...]int{
	225, -1000, -310, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -219, 28912,
	28912, -1000, -1000, 1577, -1000, 28404, 9597, 29420, 211, 199,
	29420, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	415, -1000, 27896, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 380, 30812, 29928, 7554, 29420, -288, -1000, 2422,
	-148, -1000, -1000, -1000, -1000, -1000, -1000, 1830, 428, 27388,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 30360, 110, 428,
	531, 535, 773, 773, 11629, -38, -46, 2422, 259, 104,
	-1000, 911, 225, 29420, 1501, 361, 29420, -1000, 1038, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 361, -1000, -1000,
	-1000, 2422, 2422, -1000, 29420, 29420, 19, 1132, -1000, 239,
	277, 267, 1035, -1000, -1000, -1000, -1000, -1000, 2241, -1000,
	29420, 29420, 1895, 29420, -1000, 1277, 321, 30874, 2073, 923,
	474, 1931, -1000, -1000, 1877, -1000, 122, 114, 67, 315,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 116, -1000, 2097,
	-1000, -1000, 111, -1000, -1000, 126, -1000, -1000, -1000, -48,
	-1000, -1000, -1000, -1000, -1000, -1000, -161, -1000, -1000, 599,
	1171, 7554, -1000, 1214, -1000, 2227, -1000, -1000, -1000, -1000,
	5004, 9078, 9078, 9078, 9078, -1000, -1000, 1773, 7554, 1873,
	1868, -1000, -1000, -1000, -1000, 1033, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1499, 8570,
	-1000, 1867, 1866, 1860, 1859, 1858, 1849, 1848, 1847, 1845,
	1843, 1647, 1731, 1842, 1498, 1496, 1836, 1834, 1828, 1495,
	1647, 1647, 1816, 1814, 1812, 1810, 1808, 1805, 1804, 1803,
	1799, 1797, 1796, 1794, 1793, 1792, 1791, 1789, 1784, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2619, -1000, 1027, 850, -1000, 1783, 2038, 2110,
	1635, 2221, 2147, 2139, 2135, 2124, 1374, -1000, -1000, 29420,
	29420, 373, 373, 373, 373, 373, 403, 373, 412, 407,
	396, -1000, -1000, -1000, -1000, -1000, -1000, 492, -1000, -1000,
	-1000, -1000, 905, 29420, -1000, 1703, 1076, 2166, 342, 341,
	256, -1000, 1219, 1219, 1219, 1076, 291, 338, 2110, 2110,
	-57, -87, 1076, 1076, -87, 1076, 1076, 1076, 115, -1000,
	-1000, -1000, 1219, 335, 1219, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2146, 2132, 380, 29420, 38, 29420, 380, 380,
	385, -1000, -165, -1000, -1000, 516, -1000, 510, -1000, 1277,
	319, 317, 950, 1234, -1000, 1102, 29420, 29420, 29420, 1102,
	1102, 15188, 14680, -1000, 29420, -1000, 2110, 1635, -1000, 1623,
	2413, 1614, 1635, 380, 380, 380, 380, 380, 380, 380,
	29420, 29420, 380, 6528, 6528, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 313, 2058, 249, 1781, -1000, 29420, 248,
	2110, 2038, 2110, -1000, -1000, 1021, 1365, 1494, -1000, -1000,
	239, 1053, -1000, 752, -1000, -1000, -1000, -1000, 29420, 234,
	-1000, -1000, 1487, 1780, -1000, 388, 627, 907, -1000, 70,
	31041, 23824, 1277, 23824, 29420, -1000, -1000, -1000, -1000, -1000,
	-1000, -49, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 118, -1000, 7554, 7554, 7554,
	7554, 7554, -1000, 441, 8062, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9078, 9078, 9078, 9078, 9078, 9078, 9078, 9078,
	9078, 9078, 9078, 9078, 1757, 1247, 9078, 9078, 9078, 9078,
	2413, 2317, 908, 162, -1000, -1000, -1000, -1000, -1000, 1143,
	1171, 7554, 7554, 29420, -1000, 30410, 7554, 7554, 2508, 7554,
	2108, 3479, 29420, 7554, -1000, 1613, 1611, -1000, -1000, 1290,
	7554, 7554, -1000, -1000, 7554, 9078, 7554, -1000, -1000, -1000,
	169, 2108, 2108, 7554, 7554, 2108, 2108, 2108, 1167, 2108,
	2108, 2108, 2108, 2108, 2108, 2108, 2108, 29420, 2016, 100,
	-1000, -1000, -1000, 1649, -1000, 1700, 1700, 1700, 1700, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1729, 1778,
	-1000, -1000, 1697, 1697, 1697, 1649, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1725, 1725, 1726, 1725, 29420, 2110, -288, 6020, -1000,
	-293, 2038, 7554, -1000, -1000, 7554, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1492, 2082, -1000, 1777, 1014, 29420,
	1161, 29420, 23824, 29420, 1277, 29420, 29420, 373, 373, 373,
	385, -1000, 29420, 905, 2079, 29420, 2186, 9078, 9078, 26880,
	1219, 1076, -1000, 29420, -1000, -1000, -1000, 1219, 29420, 1219,
	2186, 1219, -1000, -1000, -1000, 1076, 1076, -1000, -1000, -1000,
	-1000, 1219, 1219, -1000, -1000, -51, 2186, 2186, -63, -1000,
	-1000, -1000, 29420, 29420, 373, 29420, 29420, -1000, 29420, -1000,
	-1000, 29420, 30325, 29420, 29420, 2129, -1000, 23824, 29420, 21792,
	-1000, -84, 529, 519, 524, -1000, -1000, 387, 409, 13664,
	340, 23824, 4495, -1000, -1000, 1102, 1102, 1102, 4495, 4495,
	983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 879, -1000,
	86, 2038, -1000, -1000, -1000, -1000, -1000, 29420, 23824, 1277,
	29420, 29420, 29420, 29420, -1000, 1776, 29420, 887, -1000, -1000,
	11121, 1013, 887, 1491, 29420, 1490, 1927, -289, -1000, 12647,
	29420, 29420, -1000, -1000, -289, -1000, 12138, 29420, 2038, -1000,
	2038, 29420, -1000, 2165, -1000, 239, 202, -1000, -1000, -1000,
	-1000, -1000, -1000, 1010, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 868, -1000, 29420, -1000, -1000, 70, 23824,
	24840, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 107, -1000,
	-1000, 148, -1000, 395, 49, 1045, -1000, -1000, 51, 144,
	405, 1171, -1000, 1150, 1150, 1165, -1000, 447, -1000, -1000,
	-1000, -1000, 1773, -1000, -1000, -1000, 1944, 1310, -1000, 1145,
	1145, 1049, 1049, 1049, 1049, 1049, 1105, 1105, -1000, -1000,
	-1000, 5004, 1757, 9078, 9078, 9078, 9078, 367, 367, 3053,
	3313, -1000, 7554, 1140, -1000, 7554, 1684, 864, 1007, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1609,
	599, 1607, 2035, 2240, 1604, 7554, -1000, -1000, 1378, 7046,
	-1000, -1000, -1000, 1602, 1006, 1595, -1000, -1000, -1000, 1593,
	1040, 730, 1592, 1458, 1591, 861, 7554, 7554, 1039, 989,
	7554, 7554, 7554, 7554, 1589, 7554, 7554, 7554, 7554, 7554,
	7554, 7554, 7554, -1000, 7554, 73, -1000, -1000, -1000, -1000,
	1364, -1000, 1346, -1000, -1000, -1000, 1482, 1482, -1000, 1345,
	-1000, -1000, -1000, -1000, 1342, -1000, -1000, 1329, -1000, -1000,
	-1000, -1000, 981, -1000, 1171, -1000, 1477, -1000, 1158, 846,
	-1000, 1426, -1000, -1000, 29420, 10105, 29420, 1703, 2066, 84,
	-1000, 867, -1000, 49, -169, 679, 1892, 2239, 29420, 29420,
	29420, 26372, -1000, 1741, 979, -1000, -1000, 7554, -1000, -1000,
	1887, 29420, 29420, 2186, -1000, -1000, -1000, 29420, -1000, -1000,
	-1000, 29420, 2186, 2186, 1076, 1219, 1219, -1000, -1000, 1219,
	-1000, 1004, -1000, 29420, -1000, -1000, -1000, 1703, -1000, 10613,
	685, 30669, -1000, 1106, 1106, 837, 1106, 1106, 1106, 1106,
	299, 296, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 1106, 1106, 1106, 1739, -1000, 69, 2114,
	152, 867, 168, 2406, 709, -1000, -1000, -1000, -1000, 17220,
	17220, 13156, 17220, -1000, 1056, -1000, -1000, 526, 504, 513,
	-1000, -1000, 390, -1000, -1000, 679, -1000, -1000, -1000, 1735,
	1120, -1000, -1000, 1731, -1000, 4495, 4495, 4495, -1000, -1000,
	17728, 29420, -1000, -162, -1000, -131, -1000, -1000, 842, 679,
	1923, 817, -1000, 817, -1000, 10105, -1000, 2186, 6528, -1000,
	21792, -1000, -1000, 25856, -1000, 25348, 2186, -298, 686, -91,
	-1000, 2019, 760, -1000, 1730, -1000, 970, 1979, -1000, 805,
	-1000, 1119, 969, -1000, 760, 965, 1973, 805, -1000, -1000,
	1003, 18, -1000, -1000, 29420, 1487, 964, 24840, 772, -1000,
	389, 1002, 1001, -1000, 23824, 119, 23824, -1000, 23824, -1000,
	-1000, 240, -1000, 29420, 2023, -1000, -1000, -1000, 1437, -320,
	-1000, -1000, -1000, -1000, -1000, 963, -1000, 367, 367, 3053,
	3245, -1000, 9078, -1000, 9078, 2312, 1135, -1000, 7554, 1291,
	2563, 620, 16712, 29420, -1000, -1000, 7554, 7554, -1000, 2216,
	-1000, 7554, 7554, 1394, -1000, 29420, -1000, -1000, -1000, -1000,
	16712, -1000, 9078, -1000, 7554, 660, 2182, -32, -32, 2171,
	2138, 2128, 959, -32, 2101, 2093, 2054, 2043, 2012, 2006,
	1955, 1939, 1171, -1000, -1000, 1588, 1585, 958, -1000, 952,
	1584, 944, 943, 6020, -1000, -91, 7554, 7554, 7554, 1991,
	-1000, -1000, 90, 1580, 794, -1000, -1000, -1000, 30315, 1700,
	1700, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1729, -1000, -1000, 1697, 1697, 1697, 1649, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1725, 1725, 1726, 1725,
	-1000, 2078, -1000, -53, 1106, 392, 23824, 316, -1000, 29420,
	1912, 270, 1998, 29420, 1720, 1718, 1717, 29420, 707, -1000,
	1000, 225, -1000, 29420, 1171, -1000, 1277, -1000, 1076, -1000,
	-1000, 2186, 968, -1000, -1000, 2186, 1076, 1076, 1219, 29420,
	-1000, 2076, -1000, -1000, -1000, 30315, 587, -1000, 29420, 1198,
	533, 373, 533, 1197, 1706, -1000, -1000, -1000, 29420, 29420,
	29420, 1195, 1193, 30724, -1000, 1328, -1000, 1327, 1106, 1106,
	1321, 1476, 1474, 1473, 1106, 1106, 1318, 1469, 24332, 1317,
	1315, 1308, 1313, 1468, 608, 1311, 1309, 1299, 29420, 1705,
	1421, -53, 1106, 145, 1118, 392, 1216, 14172, 29420, 21792,
	21792, 21792, 21792, -1000, 1960, 1959, -1000, 1947, 1946, 1984,
	29420, 21792, 1703, -1000, 24332, -1000, -1000, -1000, 2413, 939,
	2389, 560, 7554, -1000, -1000, -1000, 496, 23824, 1467, 340,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29420, 29420,
	1575, 2228, -1000, 792, -1000, -1000, 998, -1000, 2228, -1000,
	1307, 1459, -15, -2, 1190, -289, 6020, 257, 29420, -289,
	29420, 6020, -1000, 29420, 254, -289, 29420, 1297, -1000, -1000,
	-1000, 2229, 23824, 1277, 1063, 23316, -1000, 109, -1000, 105,
	374, 1457, -1000, 391, 79, -1000, 1117, 1437, -1000, -1000,
	-1000, 9078, -1000, -1000, -1000, -1000, 1171, 7554, 1572, -1000,
	495, 495, 1571, -1000, 1700, 1700, -1000, 1649, 1697, 1649,
	495, 495, 1566, -1000, 1445, 1917, -1000, 1665, 1655, 7554,
	-1000, 1565, 2963, 854, -183, -32, -1000, 1687, -1000, -32,
	-32, -32, -32, -1000, -32, -32, -32, -32, -32, -32,
	-32, -32, -1000, -1000, -1000, 1453, -1000, -1000, -1000, 1295,
	-1000, 1293, -1000, -15, 1171, 1171, -1000, -1000, 2034, 1450,
	418, 10105, 2001, 226, 1279, -1000, -1000, 22808, 368, -1000,
	-1000, -1000, 481, 135, 1292, 356, -1000, 29420, 165, 29420,
	-1000, -1000, -1000, -1000, -1000, 1998, -1000, 764, 194, 10613,
	10613, 10613, 361, 638, 987, 21792, 29420, -1000, 21284, 1564,
	-1000, 679, 2186, -1000, 29420, -1000, 2186, 2186, 1076, -1000,
	226, 2410, -1000, -1000, 29420, 29420, -1000, 29420, 29420, 373,
	7554, -1000, -1000, -1000, 29420, -1000, -1000, -1000, -1000, 16712,
	16712, -1000, -1000, -1000, -1000, 1449, 1448, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 306,
	29420, 934, -1000, 1115, 1279, 22808, 1114, 1442, 368, -1000,
	1438, -1000, 678, 29420, 29420, -1000, 825, -1000, 1110, 1883,
	1905, 1883, -1000, -1000, -1000, -1000, 1950, -1000, 1943, -1000,
	-1000, 825, -1000, -1000, -1000, -1000, -1000, 560, -1000, 2160,
	533, 533, 533, 1562, -1000, 772, 1561, -1000, -1000, -1000,
	-1000, -1000, 2225, 2207, 22300, 2225, -1000, -298, -295, 7,
	2206, 2205, 2254, -1000, 1560, 762, -289, -1000, -1000, 760,
	-1000, -1000, -1000, -289, -1000, 760, -1000, -1000, 1277, -1000,
	98, -1000, -1000, -1000, -1000, -1000, -1000, 36, -1000, 29420,
	-1000, 1437, 1433, 77, -1000, 1171, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7554, -1000, -1000, -1000, 1615, -1000, -1000, 7554, 1549,
	1431, -1000, 357, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1538, 1537, -295, -1000,
	-1000, -1000, 30315, -1000, 1366, -1000, -1000, 1429, 48, -1000,
	-1000, -1000, 1428, 1427, 1289, -1000, -1000, 1286, 953, 58,
	-1000, -1000, -1000, -1000, -1000, -1000, 1216, 29420, 1686, -1000,
	1106, 1106, 1106, 29420, 1535, 761, -1000, 1534, 1528, 17220,
	21792, 21284, 804, -1000, 984, -1000, -1000, -1000, 2186, -1000,
	-1000, 2186, -1000, -1000, 2410, -1000, -1000, 1205, 9078, -1000,
	-1000, 1423, 16204, 545, 555, 1670, -1000, 269, 2253, -1000,
	1185, 1184, -1000, 29420, -1000, 1669, 1832, 219, 1668, -1000,
	1664, 1663, 29420, 1601, -1000, -1000, -1000, -1000, -1000, -1000,
	308, 925, -1000, 1421, 1420, -1000, 48, 1419, -1000, -1000,
	-1000, 29420, 678, 678, 2172, 29420, 6020, -1000, -1000, 7554,
	1661, -1000, 7554, -1000, -1000, -1000, -1000, -1000, 1659, 2040,
	-1000, -1000, -1000, -1000, -1000, -1000, 7554, 7554, -1000, -1000,
	-1000, -298, 1416, -1000, -1000, 2204, 1407, 1382, 29420, -1000,
	760, 760, 679, -1000, -1000, -63, -1000, -1000, -1000, 1594,
	-1000, 1574, -32, -1000, 2172, -1000, 2197, -1000, -1000, -298,
	-233, -1000, -1000, -1000, -1000, 222, -1000, -1000, 157, -1000,
	-1000, 1256, 384, -1000, -1000, 678, 20268, 16712, 16204, 1403,
	-1000, 30724, 10613, 118, 30724, 2186, 804, 984, -1000, -1000,
	1055, -1000, -1000, -1000, -1000, 3053, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1267,
	1658, -103, -1000, -1000, 1657, 20268, 265, 265, 20268, 20268,
	20268, 1653, 450, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2110, -1000, -1000, 1171, 29420, 1171, 20776, -1000, 2196,
	2193, 1171, 599, -300, -1000, 1402, 1, -1000, -1000, 605,
	-302, -17, -6, -1000, -1000, -1000, 66, 7554, -300, 29420,
	371, 1400, -1000, -1000, 151, -1000, -1000, 924, -1000, 1649,
	7554, -1000, -1000, -1000, 355, 30669, -1000, -1000, -63, 355,
	2172, -1000, 1527, 7554, 1647, -214, 20268, 920, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 909, 903, 870, 20268, -1000,
	-1000, -1000, 266, -1000, 865, 859, -1000, -1000, -1000, -1000,
	-1000, 1645, -1000, 2191, -1000, 1392, 382, -13, -6, -1000,
	2188, -1, 2187, 2185, 1521, -1000, 2971, -1000, -1000, -1000,
	599, -1000, 2075, -1000, -1000, 31, -1000, -1000, -1000, 20268,
	2047, 1544, 223, 2184, -1000, 223, 2110, -1000, 1460, -1000,
	1903, -1000, 94, 855, -1000, -1000, -1000, -1000, 833, -1000,
	-1000, -1000, 19760, 29420, 1382, -1000, 1644, 1266, 7, -5,
	2180, -1000, 1382, 2179, 1382, 1382, -1000, -1000, 3987, -290,
	-28, 280, 1385, -1000, 173, -1000, -1000, 2047, -1000, 2178,
	260, -1000, -1000, 450, -1000, 1902, 1900, 2238, -1000, -1000,
	-1000, -1000, 173, 173, 173, 173, 85, -1000, -1000, 813,
	-1000, -1000, 2111, 15696, -21, -1000, -1000, -1000, 1384, -1000,
	1382, -1000, -1000, 1164, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1106, 1381, 187, -1000, -1000, -1000, 19252, 227, 297,
	244, -1000, 393, -1000, -1000, -1000, 2248, -1000, 2246, 548,
	548, -1000, -1000, 29420, -1000, 29420, -1000, 788, -1000, -1000,
	-1000, 954, -1000, -1000, -1000, -1000, 3987, 1262, -1000, 29420,
	-1000, 29420, 247, 1249, 9078, 1643, 9078, 1637, 262, 1636,
	-1000, -1000, -1000, 1252, 274, -1000, -1000, 544, -1000, 1101,
	-1000, 18744, 29420, -1000, -1000, -1000, 749, 1631, 2177, -1000,
	2802, 29420, 2779, 29420, 1629, 1097, 9078, -1000, -1000, -1000,
	29420, 5512, -1000, 765, -1000, -1000, 352, 255, -1000, 748,
	-1000, 732, 18236, 1222, 2738, -1000, -1000, 1171, 29420, 725,
	-1000, 29420, 229, -1000, -1000, -1000, 715, -1000, -1000, -1000,
	-1000, 352, 1676, -1000, 1218, -1000, -1000, 30558, 479, -1000,
	-1000, 30558, 242, -1000, 343, 1493, -1000, -1000, 714, -1000,
	29420, 527, 7554, -1000, 242, 30724, -1000, 7554, 669, -1000,
	30724, 649, -1000, -1000,
}

var yyPgo = [...]int{
	0, 132, 2818, 202, 153, 141, 201, 2817, 2811, 2094,
	2088, 2810, 2809, 2808, 2807, 2790, 2782, 2781, 2767, 2766,
	2765, 2764, 2761, 2754, 2753, 2752, 2749, 2736, 2734, 2726,
	2725, 200, 2720, 2710, 2705, 2704, 2703, 2702, 2700, 2699,
	2698, 2696, 2694, 2692, 2691, 2690, 2687, 2686, 2685, 2684,
	2683, 2682, 2681, 2680, 2677, 2676, 2673, 133, 2670, 2051,
	2668, 2667, 2666, 2662, 2661, 2659, 2658, 175, 2654, 2651,
	2648, 2645, 2643, 2641, 2640, 2639, 2638, 2637, 2636, 2635,
	2634, 2630, 2628, 2626, 2622, 161, 2621, 2618, 138, 2617,
	2616, 2611, 2608, 196, 178, 43, 2601, 36, 2600, 2598,
	2597, 2596, 2595, 69, 2592, 2591, 156, 158, 210, 1143,
	216, 203, 150, 124, 66, 2590, 2089, 2588, 181, 186,
	113, 20, 2587, 128, 2586, 108, 32, 35, 204, 112,
	39, 109, 89, 2585, 179, 67, 2584, 80, 2583, 2582,
	209, 151, 2581, 88, 2580, 2579, 2576, 2575, 169, 96,
	2574, 52, 2573, 125, 74, 87, 84, 2572, 2571, 2570,
	75, 2569, 2567, 2566, 2564, 136, 2563, 111, 63, 2562,
	2561, 2560, 49, 188, 65, 2559, 54, 2553, 2552, 2551,
	2550, 57, 2549, 2547, 12, 19, 21, 2546, 18, 2545,
	2544, 1, 2543, 183, 45, 77, 107, 2542, 409, 2540,
	2539, 2538, 118, 2537, 427, 2535, 2530, 2528, 2527, 11,
	2526, 172, 38, 2525, 73, 100, 98, 167, 165, 2524,
	2523, 2516, 442, 68, 50, 0, 2515, 123, 2514, 2512,
	2511, 206, 2510, 190, 164, 189, 211, 218, 126, 2509,
	2507, 64, 2506, 119, 70, 106, 10, 2502, 182, 2498,
	352, 145, 2497, 171, 2496, 131, 3, 90, 2495, 2493,
	33, 233, 2492, 2491, 2490, 103, 2486, 2485, 94, 91,
	2484, 2483, 2482, 30, 2479, 28, 22, 2478, 93, 2477,
	207, 2476, 192, 116, 146, 127, 122, 184, 187, 60,
	58, 2475, 1104, 104, 72, 24, 2473, 185, 2472, 205,
	199, 2470, 163, 2468, 198, 340, 173, 2467, 148, 8,
	34, 27, 2456, 7, 2452, 102, 2451, 2440, 17, 2438,
	26, 2435, 2434, 2433, 2426, 6, 2425, 2424, 2423, 2,
	4, 2418, 5, 174, 37, 152, 2416, 140, 143, 2414,
	2413, 71, 2412, 2399, 2398, 710, 2397, 2396, 2393, 2392,
	2388, 2387, 2384, 2382, 2379, 76, 42, 2377, 2370, 2366,
	2365, 55, 101, 2364, 2363, 2362, 2358, 29, 149, 2342,
	16, 2338, 25, 23, 31, 2336, 92, 2335, 14, 159,
	2333, 2332, 15, 2331, 2330, 13, 9, 2328, 2326, 85,
	2321, 62, 44, 121, 78, 2320, 61, 180, 105, 2316,
	2315, 197, 194, 168, 2314, 129, 191, 212, 2312, 177,
	2311, 2305, 2304, 2303, 2300, 2299, 1124, 2298, 2297, 195,
	53, 59, 86, 2296, 2294, 2292, 56, 117, 81, 82,
	166, 2291, 160, 2289, 2287, 79, 2286, 2283, 2282, 2281,
	2280, 155, 2278, 2272, 2270, 193, 137, 2268,
}

//line mysql_sql.y:8730
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 440, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 91, 438, 438, 438, 439, 439,
	89, 89, 89, 78, 90, 388, 388, 387, 387, 386,
	386, 342, 342, 385, 385, 385, 384, 384, 384, 383,
	383, 382, 382, 381, 381, 379, 379, 380, 378, 377,
	377, 377, 375, 375, 375, 371, 371, 373, 372, 372,
	374, 366, 366, 369, 369, 367, 367, 367, 367, 370,
	365, 365, 365, 364, 364, 77, 77, 77, 294, 294,
	76, 76, 308, 308, 308, 308, 308, 306, 306, 306,
	306, 306, 306, 305, 305, 304, 304, 309, 309, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 68,
	68, 68, 68, 71, 71, 71, 72, 303, 303, 303,
	69, 70, 70, 293, 293, 298, 298, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 302,
	302, 302, 300, 300, 299, 299, 301, 301, 62, 62,
	62, 65, 64, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 63, 63, 63, 63, 63, 63, 58, 58,
	58, 58, 58, 57, 57, 59, 59, 290, 290, 289,
	73, 73, 74, 442, 442, 441, 443, 443, 443, 443,
	75, 81, 81, 81, 81, 81, 81, 81, 80, 80,
	83, 83, 82, 84, 67, 67, 67, 67, 67, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 412, 412,
	412, 414, 414, 229, 230, 444, 232, 228, 228, 228,
	408, 408, 409, 410, 411, 411, 411, 79, 7, 7,
	7, 7, 7, 7, 56, 61, 189, 189, 189, 190,
	190, 190, 190, 190, 54, 60, 60, 425, 425, 55,
	432, 432, 345, 345, 243, 243, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 348, 349, 239, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 38, 37,
	37, 37, 279, 279, 36, 445, 445, 218, 218, 45,
	46, 47, 48, 49, 50, 35, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 53, 53, 360, 360, 447,
	447, 447, 51, 52, 344, 344, 344, 43, 42, 41,
	40, 40, 34, 34, 33, 33, 39, 101, 102, 236,
	236, 236, 238, 238, 234, 446, 446, 320, 320, 237,
	237, 32, 32, 32, 32, 235, 235, 217, 233, 233,
	233, 8, 8, 6, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 18, 20, 287, 287, 284, 19,
	14, 13, 16, 12, 15, 17, 5, 5, 5, 5,
	9, 9, 10, 113, 113, 155, 155, 420, 420, 416,
	416, 417, 417, 417, 418, 418, 419, 419, 85, 354,
	354, 354, 354, 354, 354, 4, 136, 136, 135, 135,
	353, 353, 353, 353, 353, 353, 291, 291, 397, 397,
	397, 398, 134, 134, 129, 129, 355, 355, 257, 399,
	399, 363, 363, 362, 362, 361, 361, 132, 132, 133,
	133, 116, 116, 94, 94, 368, 368, 368, 368, 376,
	376, 341, 341, 181, 181, 212, 212, 213, 213, 106,
	106, 107, 107, 107, 107, 107, 107, 405, 405, 407,
	407, 406, 131, 131, 127, 127, 128, 128, 128, 126,
	126, 125, 124, 124, 123, 121, 121, 121, 122, 122,
	122, 109, 109, 109, 108, 108, 108, 108, 108, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 110, 110, 413, 413, 413, 346, 346, 346, 351,
	351, 195, 195, 196, 196, 194, 194, 111, 111, 112,
	112, 112, 112, 193, 193, 192, 114, 114, 120, 119,
	119, 115, 115, 115, 115, 203, 203, 202, 202, 202,
	202, 88, 92, 92, 93, 139, 139, 201, 200, 200,
	200, 138, 138, 137, 137, 130, 130, 118, 118, 118,
	118, 199, 117, 197, 437, 437, 436, 436, 435, 433,
	433, 433, 434, 434, 434, 434, 390, 390, 390, 390,
	390, 223, 223, 223, 227, 227, 226, 226, 226, 226,
	226, 231, 3, 3, 3, 3, 3, 24, 24, 24,
	24, 24, 24, 30, 147, 148, 29, 140, 140, 141,
	141, 142, 142, 143, 144, 144, 144, 146, 145, 28,
	21, 421, 424, 422, 422, 426, 426, 426, 427, 427,
	427, 428, 428, 22, 98, 103, 103, 100, 105, 105,
	105, 105, 105, 99, 423, 429, 429, 429, 288, 288,
	285, 286, 286, 283, 282, 282, 282, 431, 431, 430,
	430, 430, 224, 224, 23, 278, 278, 280, 281, 281,
	281, 272, 272, 272, 272, 27, 276, 276, 277, 277,
	277, 277, 277, 273, 273, 275, 275, 271, 271, 271,
	271, 271, 26, 104, 104, 270, 270, 268, 268, 266,
	266, 267, 267, 265, 265, 265, 269, 269, 25, 25,
	25, 96, 95, 95, 95, 215, 215, 214, 214, 97,
	347, 347, 310, 310, 311, 311, 311, 314, 314, 326,
	326, 327, 327, 325, 325, 332, 332, 331, 331, 330,
	330, 329, 329, 328, 328, 328, 328, 323, 323, 322,
	322, 312, 312, 312, 312, 312, 313, 313, 313, 321,
	321, 324, 324, 172, 172, 173, 173, 173, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 395, 395, 396,
	175, 175, 175, 179, 179, 179, 179, 179, 179, 174,
	174, 176, 176, 156, 156, 154, 154, 149, 149, 150,
	150, 151, 151, 152, 152, 153, 153, 153, 153, 153,
	153, 296, 296, 393, 393, 394, 394, 389, 389, 389,
	392, 392, 392, 392, 392, 391, 391, 157, 210, 210,
	210, 225, 225, 225, 225, 209, 209, 209, 171, 171,
	170, 170, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 295, 295, 240,
	240, 241, 241, 188, 187, 187, 187, 187, 187, 185,
	186, 184, 184, 184, 184, 184, 183, 183, 182, 182,
	182, 274, 274, 180, 180, 178, 178, 178, 177, 177,
	177, 333, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 249, 249, 254, 254, 404,
	404, 403, 158, 158, 158, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 167, 167, 167, 318, 318, 318,
	318, 318, 319, 319, 319, 316, 316, 317, 317, 258,
	259, 259, 352, 352, 315, 315, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 359, 359, 359, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 415, 415,
	415, 400, 400, 400, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 207, 207, 207, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 260,
	260, 261, 261, 356, 356, 356, 356, 356, 356, 357,
	357, 358, 358, 358, 358, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 247, 204, 204, 204, 262, 255,
	255, 256, 256, 250, 250, 250, 250, 250, 250, 250,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 251, 251, 253, 253, 264, 264, 264, 263,
	263, 263, 263, 263, 263, 263, 169, 169, 169, 169,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 160, 160, 160, 160, 164, 164, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 165, 165, 165, 165, 163, 163, 163, 163, 163,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 86, 87, 87, 162,
	211, 211, 334, 334, 337, 337, 335, 335, 336, 338,
	338, 338, 339, 339, 339, 340, 340, 340, 343, 343,
	216, 216, 216, 222, 222, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 7, 4, 2, 2, 1, 2,
	2, 2, 3, 2, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	3, 2, 4, 4, 4, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 3, 3, 3, 0,
	2, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 4, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 0, 2, 1, 3,
	2, 1, 5, 4, 4, 2, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 4, 3, 4, 5, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 7,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 8, 0, 2, 6, 0, 2,
	2, 3, 3, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 6, 0, 4, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 11, 9,
	11, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	0, 1, 0, 6, 0, 3, 5, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 4, 6, 5, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 5, 6, 5, 0,
	3, 0, 1, 0, 1, 1, 3, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 4, 1, 3, 3,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 1, 7, 7, 7, 7, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 5, 6, 4, 1, 1, 2, 0,
	1, 1, 2, 5, 0, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 6,
	6, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 6, 8, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 6, 6, 7, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 8, 4, 2, 3, 2,
	4, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 2, 3, 5, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -440, -2, -1, -3, -89, -4, -85, -5, -6,
	-8, -66, -80, -82, -84, -83, -31, -7, -79, -57,
	-58, -62, -68, -73, -76, -77, -78, -90, -86, -87,
	-88, -106, -91, -24, -23, -22, -21, -98, 401, 12,
	446, -9, -10, -405, -11, 233, -228, -229, -230, -232,
	-444, -32, -33, -34, -40, -41, -42, -43, -51, -52,
	-53, -35, -36, -37, -38, -45, -46, -47, -48, -49,
	-50, -39, -101, -102, -55, -54, -60, -56, -61, -100,
	209, -59, 61, -63, -64, -65, -69, -70, -71, -72,
	-74, -75, 332, 338, 391, 528, 529, 46, -107, -109,
	530, -25, -26, -27, -28, -29, -30, 205, 14, 479,
	-12, -15, -13, -16, -14, -19, -20, -18, -17, -99,
	228, 227, 37, 291, 292, 293, 336, 226, 206, 13,
	137, 138, 140, 141, 30, 41, 314, -108, 67, 207,
	-110, 10, 532, 439, 531, -116, 38, -154, -225, 70,
	78, -219, -221, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 449,
	312, 313, 476, 245, 269, 362, 272, 279, 137, 156,
	150, 178, 170, 145, 249, 284, 250, 77, 140, 432,
	88, 412, 388, 143, 264, 266, 268, 271, 251, 166,
	161, 263, 247, 528, 159, 252, 39, 253, 183, 254,
	255, 481, 408, 311, 414, 276, 386, 160, 409, 267,
	411, 185, 189, 424, 338, 154, 155, 416, 426, 182,
	225, 42, 478, 237, 427, 187, 181, 177, 435, 280,
	278, 180, 153, 176, 248, 50, 191, 190, 192, 382,
	383, 384, 385, 256, 257, 326, 423, 173, 162, 316,
	146, 22, 430, 232, 413, 339, 258, 273, 281, 186,
	188, 239, 244, 480, 390, 243, 277, 428, 158, 236,
	265, 231, 431, 147, 332, 341, 259, 141, 270, 425,
	434, 49, 354, 152, 144, 222, 138, 241, 246, 11,
	260, 261, 262, 283, 282, 274, 174, 238, 179, 164,
	151, 175, 139, 240, 433, 355, 526, 314, 371, 172,
	169, 242, 215, 429, 415, 142, 375, 356, 167, 285,
	522, 523, 524, 327, 310, 286, 287, 165, 229, 407,
	288, 290, 381, 303, 357, 389, 363, 358, 198, 294,
	418, 184, 525, 410, 295, 296, 297, -116, -59, -10,
	-9, -108, -109, -154, 213, -233, 23, 386, -67, 387,
	209, 67, -225, -5, -4, -85, -57, -106, -231, -225,
	291, 291, -231, 213, -225, 243, 370, -345, 218, -305,
	-278, 244, -304, -280, -307, -281, 31, 205, 207, 206,
	240, 14, 336, 214, 12, 10, 337, 226, 24, 25,
	27, 13, 338, 340, 28, 341, 344, 345, 346, 41,
	349, 350, 233, 70, 78, 73, 251, -148, -225, -256,
	-250, 95, 234, -252, -245, -246, -248, -385, -379, -244,
	67, 121, 122, 129, 96, -247, -333, 35, 98, 486,
	447, -205, -206, -207, -208, -225, -380, -378, 73, 79,
	82, 85, 86, 84, 83, 163, 81, 74, 133, 134,
	-109, 70, -400, 494, -220, 515, 514, 46, -350, -358,
	212, -356, 132, 168, 229, 164, 12, 127, 381, 165,
	491, 511, 449, 495, 518, 488, 489, 483, 484, 485,
	487, 496, 498, 510, -359, 506, 516, 517, 504, 72,
	71, 509, 508, 497, 492, 493, 499, 482, 490, 500,
	501, 507, 512, 513, 320, 88, 321, 322, 439, 315,
	323, 218, 386, 55, 324, 325, 326, 327, 328, 446,
	329, 56, 330, 319, 233, 371, 331, 167, 184, 451,
	450, 452, 443, 440, 438, 441, 442, 444, 445, 502,
	503, 505, -301, -299, -225, -92, -93, 520, -125, -126,
	-198, 19, 6, 7, 8, 9, -438, 388, 480, 294,
	333, 215, 312, 371, 295, 243, -272, -270, -347, 288,
	284, 223, 222, 89, 439, 212, 347, -416, -417, 202,
	203, 204, -407, 472, -406, -225, 322, 26, 213, 333,
	418, 419, 420, 421, 422, -44, -360, -344, 415, 414,
	-237, 413, 406, 417, 408, 313, 297, 296, 205, 473,
	-216, 357, 389, 239, 436, 437, 334, 390, 424, 425,
	409, 88, 171, 168, 215, 213, 312, 439, 371, 295,
	-416, 142, 139, -292, 142, 94, 147, 146, -292, 243,
	370, 40, -298, 381, -297, -299, 424, 425, 435, 71,
	72, 423, -216, 88, 407, 407, -126, -198, -125, -107,
	-109, -88, -405, 312, 371, 243, 214, 213, 215, 439,
	291, 333, 295, -346, -413, 31, -351, 199, 200, 201,
	32, 33, -1, -225, 73, -132, 235, -154, 135, -132,
	-126, -125, -126, -154, -209, -225, 388, 104, -67, -67,
	387, -408, -409, -410, -412, 209, 387, 386, 135, 15,
	-231, -231, 65, -154, -280, 243, -305, -278, 35, 64,
	136, 216, 136, 64, 67, 334, 312, 371, 335, 439,
	213, 347, 215, 243, 348, 312, 371, 213, 215, 439,
	243, 312, 213, 215, 371, 243, 348, 406, 407, 215,
	26, 339, 342, 343, 407, -364, 435, 136, 94, 91,
	92, 93, -250, 111, -263, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-109, -250, -256, 46, -248, -248, -248, -248, -333, -254,
	-250, 67, 67, 135, 73, -250, 67, 67, 67, 67,
	67, 67, 67, 67, -357, 67, 67, -260, -261, 67,
	67, 67, 73, 73, 67, 67, 67, 73, -261, -261,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 136, -160, -164,
	-161, -163, -162, -166, -165, 168, 169, 132, 172, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 30,
	184, 229, 164, 165, 166, 167, 185, 150, 170, 477,
	193, 151, 194, 152, 195, 153, 196, 154, 155, 197,
	156, 159, 160, 161, 158, 135, -126, 136, 67, -94,
	38, -128, 21, -110, -109, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 79, -147, -225, -140, -225, -268,
	218, -268, -268, -268, -268, 214, -268, 213, 213, 213,
	-418, 149, 136, -407, -131, 67, -236, 112, 116, 23,
	241, 241, 278, -445, -446, 15, 114, -234, -446, -234,
	-236, -447, 214, 416, 42, 242, 241, -127, -128, -127,
	410, 407, -320, 411, 412, -237, -236, -236, -237, -236,
	-236, -236, 213, 215, 439, 295, -445, 241, -445, 30,
	30, -345, -154, -345, 473, -217, -225, -345, -345, -419,
	217, 428, 479, 145, 146, 147, -280, 243, 243, 136,
	104, 23, -300, 104, 115, -299, -299, -299, -300, -300,
	-174, 40, -224, 132, -225, 73, -174, 40, -442, -441,
	-154, -127, -110, -109, 68, 68, 68, -345, -345, -345,
	-345, -345, -345, -345, -231, -140, -345, -111, -112, 123,
	-250, -225, -111, 38, 407, 38, -353, 46, -106, 67,
	30, 67, -225, -354, 46, -106, 67, 30, -127, -94,
	-128, 135, 79, 73, -67, 68, 136, -411, 85, 86,
	-414, 182, 174, -225, -81, 73, -3, -4, -5, -6,
	-31, -57, -106, -381, -379, 67, 31, 380, 64, 15,
	-306, 213, 439, 333, 239, 215, 312, -304, -287, -284,
	-282, -224, -280, -283, -282, -309, -209, 407, -95, 392,
	290, -250, -250, -250, -250, -250, 84, 95, 310, 85,
	86, -245, -264, 31, 286, 287, -246, -246, -246, -246,
	-246, -246, -246, -246, -246, -246, -246, -246, -253, -262,
	-333, 67, 114, 112, 116, 113, 97, -248, -248, -246,
	-246, 68, 136, -404, -403, 99, -250, -250, -225, -401,
	-402, 453, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 324, 319, 325, 323, 315, 331, 326, 327,
	167, 470, 471, 464, 465, 466, 467, 468, 469, -255,
	-256, -255, -250, -401, -255, -204, 32, 31, -250, -415,
	308, 307, 309, -129, -225, -255, 68, 68, 68, 79,
	-256, -256, -255, -246, -255, -402, -204, -204, -256, -256,
	-204, -204, -204, -204, 123, -204, -204, -204, -204, -204,
	-204, -204, -204, -299, 40, -340, 355, 354, -334, -336,
	67, -335, 67, -335, -335, -335, 67, 67, -337, 67,
	-337, -337, -334, -338, 67, -338, -339, 67, -338, -225,
	-127, -93, -362, -361, -250, 40, 521, -94, -250, -124,
	-123, -250, -439, 73, 34, 67, 135, -154, 95, -421,
	-225, -288, -285, -282, -225, -278, -225, -225, -268, -268,
	-268, -419, -406, 34, -130, -225, -194, 16, -248, -248,
	-282, 243, -445, -236, -218, -217, -238, -446, -233, -238,
	-194, -446, -236, -236, -238, -234, 407, -194, -194, -320,
	-235, -225, -235, -268, -217, -218, -218, -154, -189, 210,
	207, -173, -191, 352, 245, -269, 249, 77, 250, 388,
	251, 214, 253, 254, 255, 225, 256, 257, 258, 381,
	259, 260, 261, 262, 335, 6, 298, 40, -421, -421,
	30, -288, -225, -119, -114, -118, -115, -120, -197, -199,
	-117, 67, -154, -109, -225, 429, 430, 143, 146, 145,
	31, 380, -303, 380, 31, -278, -297, -293, 73, 381,
	-283, -302, 64, 132, -361, -300, -300, -300, -302, -302,
	131, 136, -443, 428, 429, 202, -94, -421, -287, -278,
	-225, -156, -154, -156, -225, 67, -225, -193, 136, -192,
	15, -226, -225, 34, 73, 135, -193, 73, -156, 73,
	-291, 64, -355, -257, -399, 520, -134, 68, -129, -397,
	-398, -129, -133, -225, -355, -134, 68, -397, -94, -94,
	-225, 23, -67, -409, 135, 136, -130, -306, -286, -283,
	-308, 123, -225, -294, 136, 479, 533, 71, 216, -431,
	-430, 372, 68, 136, -365, 217, 446, 73, 534, 198,
	84, 310, 85, 86, -333, -256, -253, -248, -248, -246,
	-246, -251, 230, -251, 94, -250, -249, -403, 101, -250,
	34, 136, 65, 135, 68, 68, 15, 15, 68, -250,
	68, 15, 15, -250, 68, 135, 68, 68, 68, 68,
	65, 68, 136, 68, 136, -256, -250, 68, 68, -250,
	-250, -250, -256, 68, -250, -250, -250, -250, -250, -250,
	-250, -250, -250, -343, 356, 79, 79, -211, 73, -211,
	79, 79, 79, 136, 68, 73, 136, 22, 136, -121,
	36, 37, -148, -141, -142, -143, -144, -160, -209, 169,
	172, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 229, 164, 165, 166, 167, 185, 150, 170,
	151, 152, 153, 154, 155, 156, 159, 160, 161, 158,
	-225, -131, 35, -424, 359, -432, 136, 40, -430, 439,
	-271, 65, -104, 15, -154, -154, -154, 15, -113, -155,
	-225, 67, 68, 136, -250, -279, 65, -225, -218, -194,
	-225, -154, -225, -194, -194, -236, -238, -238, -234, 135,
	-217, -131, -151, -157, -152, -209, -241, -153, 221, 219,
	223, -394, 89, 224, 275, 90, 214, -190, 214, 90,
	220, 224, 219, 136, -191, -222, 104, -222, -216, 131,
	-222, -222, -222, -222, 252, 252, -222, -222, -222, -222,
	-222, -222, -222, -222, -222, -222, -222, -222, -222, -222,
	67, -425, 359, 30, 318, -432, -105, 312, 30, -200,
	-201, -202, -203, 53, 57, 59, 54, 55, 56, 60,
	30, 136, -223, -227, 34, -225, 73, -223, -109, -114,
	-119, -223, 67, 144, 147, 147, 146, 216, 67, 104,
	-302, -302, -302, 40, -224, -441, 435, 429, 64, 136,
	-141, -194, -112, -114, -225, 73, -225, 123, -194, -181,
	523, 38, -368, 411, 39, 136, 67, 68, 136, 46,
	136, 104, 68, 136, 68, 46, 135, 388, -225, -379,
	68, -308, 136, 216, 135, 135, -284, 338, -224, -286,
	20, 479, -209, 38, -215, -214, 73, 534, 68, -251,
	-251, 94, -248, -245, 68, 102, -250, 100, -158, -160,
	354, 355, -159, -165, 132, 168, 229, 167, 166, 164,
	354, 355, -174, -225, -250, -250, 68, -250, -250, 15,
	-225, -174, -246, -250, -126, 68, -315, 402, -315, 68,
	68, 68, 68, -315, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 136, 68, 68, 68, 136,
	68, 136, -361, -368, -250, -250, -123, -122, 43, 346,
	68, 136, -160, 34, -427, 413, 361, -222, -243, -242,
	314, 41, -348, 381, 367, 368, -285, 243, -225, 64,
	302, 303, 304, 305, -266, -267, -265, -269, -421, 67,
	67, 67, -154, -113, -225, 15, 136, -420, 135, -1,
	-225, -278, -236, -194, -446, -194, -236, -236, -238, -225,
	34, -160, -153, -225, 90, -393, -394, -268, -393, 90,
	67, -225, -225, -225, 90, 90, -191, 79, 79, -222,
	-222, 79, 73, 73, 73, -222, -222, 79, 73, -227,
	79, 79, 79, 79, 40, 73, -179, 40, 263, 267,
	264, 265, 266, 79, 40, 79, 40, 79, 40, -225,
	67, -395, -396, 73, -427, -222, 318, 104, -243, -103,
	77, 31, -135, 210, 207, -421, -290, -289, -209, -118,
	-118, -118, -118, 53, 53, 53, 58, 53, 58, 53,
	-202, -290, -120, -131, -227, 68, -437, -436, -435, -433,
	61, 217, 62, -255, 147, -286, -239, 73, -293, -154,
	-154, 68, -196, 17, 135, -196, 79, 73, -376, 398,
	393, 395, 90, -257, -363, -362, 46, -106, -129, -355,
	-398, -361, -225, 46, -106, -355, -225, 79, 15, -283,
	-278, 123, 123, -225, 339, -294, 73, 360, 73, 213,
	535, 136, 104, -215, -245, -250, 68, -167, 155, 154,
	-167, 68, -335, -335, -334, -337, -334, -167, -167, 68,
	68, 23, 68, 68, 68, -250, 68, 68, 136, -352,
	448, -315, 67, -315, -315, -315, -315, -315, -315, -315,
	-315, -315, -315, -315, -315, 73, 79, 79, -376, 44,
	45, 73, 211, -143, 40, -106, -428, 77, -422, 73,
	-225, -429, 77, 362, 134, 316, 40, 363, 364, 378,
	311, 79, 79, 369, -423, -225, -136, 312, -154, -265,
	-216, 131, 254, 295, -149, -150, -151, -149, -149, -132,
	65, 135, -114, -155, -225, 123, 68, -194, -225, -194,
	-194, -236, -106, -171, -170, -168, 84, 95, 40, 352,
	-169, 77, 131, 268, 246, 269, -188, -240, 64, 358,
	219, 89, 90, 340, -241, -389, -391, -225, -391, -225,
	-389, -389, -268, -250, -225, -174, -174, 73, 73, -175,
	246, -156, 68, 136, 104, -428, -422, 104, 73, -429,
	73, 136, -135, -135, -194, 136, 104, -138, -137, 64,
	65, -139, 64, -137, 53, 53, -194, -435, -434, 23,
	-394, -394, -394, 68, 68, -195, 18, 20, 123, -195,
	-181, -341, 522, -372, -374, 393, 20, 20, 13, 68,
	-355, -355, -278, -294, 381, -154, -214, 73, 535, -250,
	68, -250, 68, 73, -259, -258, 235, 68, 68, -341,
	-145, -160, -244, 73, -426, 372, 73, 73, 79, 40,
	79, 134, 365, -349, -103, -135, 67, -222, -222, -222,
	-225, 68, 136, 68, 68, -223, -114, -225, -194, -420,
	135, -194, -194, -168, 84, -246, 73, -176, -224, 132,
	-177, 40, 267, 263, -178, 40, 247, 248, -180, 67,
	275, 13, 90, 90, -154, 67, 65, 285, 67, 67,
	67, -391, 68, 247, 248, 68, -396, 73, -426, 73,
	-421, -126, -289, -361, -250, 67, -250, 67, 53, 19,
	17, -250, -256, -181, 73, 20, 73, -370, 73, -290,
	-97, -366, -320, 68, 68, -315, -126, 20, -181, 478,
	20, 479, 315, 40, 79, 40, 366, -273, -275, -209,
	67, -174, -176, 73, -172, -173, -151, -96, -95, -172,
	-194, -194, 79, 67, -356, -274, 67, -273, -392, 302,
	303, 304, 306, 305, -392, -273, -273, -273, 67, -296,
	-295, 276, 95, -127, -130, -390, -225, 219, 20, 20,
	-212, 524, 73, 395, -342, 525, -375, 398, -369, -367,
	393, 394, 395, 396, -317, -316, -319, 399, 277, 405,
	-256, -212, -146, -225, 73, 360, 73, 315, 68, 136,
	-334, -250, -310, 235, -97, -310, -126, 68, -250, -260,
	-183, -182, 475, -273, 68, 68, 68, 68, -273, 276,
	68, 68, 136, 67, 20, 73, -377, 217, -373, -374,
	397, -367, 20, 395, 20, 20, 68, -318, 97, 365,
	369, -250, 34, 381, -276, -275, -121, 68, -311, 284,
	20, -311, -127, 68, -187, -185, -186, 64, 409, 273,
	274, 68, -276, -276, -276, -276, 68, -225, 219, -213,
	-225, -370, -384, 67, 79, -372, -371, -373, 20, -370,
	20, -370, -370, -318, 520, 403, 404, 403, 404, 73,
	-277, 225, 77, 479, 300, 301, -121, 20, -312, 277,
	278, -313, -324, 280, -295, -186, 64, -185, 64, 14,
	13, -188, 68, 136, -388, 30, 68, -383, -382, -210,
	-378, -225, 398, 399, 73, -370, 94, -222, 73, 299,
	-209, 67, -322, 281, 67, -320, 67, -320, 90, 303,
	-184, 270, 271, 30, 146, -184, -225, -387, -386, -385,
	68, 136, 135, -318, 79, -225, -309, -314, 282, 79,
	-246, 67, -246, 67, -321, 279, 67, 84, 40, 272,
	136, 104, -382, -225, 68, -326, 67, 20, 68, -309,
	68, -309, 67, 104, -246, -386, 40, -250, 135, -327,
	-325, 235, -313, 68, 68, 68, -309, 79, 68, -225,
	68, 136, -225, -323, 283, 68, -325, -328, 46, 79,
	-332, -329, 67, -191, 237, 114, -332, -191, -331, -330,
	282, 238, 67, 68, 136, -225, 234, 67, -256, -330,
	-329, -256, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 692, 693, 694, 695, 696, 0, 0,
	0, 466, 467, 0, 443, 0, 0, 0, 0, 0,
	0, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 298, 299, 300, 301, 302, 303,
	0, 233, 229, 208, 209, 210, 169, 170, 171, 172,
	240, 241, 322, 0, 0, 0, 0, 0, 549, -2,
	35, 697, 698, 699, 700, 701, 702, -2, 479, 0,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	287, 288, 289, 283, 284, 286, 285, -2, 0, 479,
	222, 0, 213, 213, 0, 0, 0, 569, 0, 0,
	584, 606, 33, 0, 0, 527, 0, 532, 915, 951,
	952, 953, 954, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 527, 234, 468,
	469, 569, 569, 441, 0, 269, 0, 1401, 273, 0,
	0, 0, 438, 264, 265, 266, 267, 268, 0, 691,
	0, 0, 260, 0, 228, 1460, 0, 0, 0, 0,
	0, 0, 113, 765, 115, 767, 119, 126, 0, 0,
	131, 132, 135, 136, 137, 138, 139, 0, 143, 0,
	145, 148, 0, 150, 151, 0, 154, 155, 156, 0,
	166, 167, 168, 768, 769, 770, -2, 44, 705, 1326,
	1221, 0, 1228, 1229, 1240, 1251, 1024, 1025, 1026, 1027,
	0, 0, 0, 0, 0, 1034, 1035, 0, 1047, 1556,
	0, 1041, 1042, 1043, 1044, 53, 65, 66, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 0, 1194,
	1011, 951, 0, 1564, 0, 1584, 1583, 0, 0, 1179,
	0, 1169, 0, 0, -2, -2, 0, 0, 1527, -2,
	1561, 1580, 1588, 1565, 1587, 1558, 1559, 1553, 1554, 1555,
	1557, 1566, 1568, 1579, 0, 1575, 1585, 1586, 0, 67,
	68, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1185, -2, 1187, 1188, 1190, 1191,
	1192, 1193, -2, 1196, 1197, 1198, -2, -2, 1201, 1202,
	1203, 1204, 1205, 1206, 1209, -2, 1211, -2, -2, 1181,
	1182, 1183, 1184, 1173, 1174, 1175, 1176, 1177, 1178, -2,
	-2, -2, 0, 206, 204, 569, 642, 0, -2, 0,
	0, 0, 589, 592, 595, 598, 0, 36, 37, 0,
	0, 797, 797, 797, 797, 797, 0, 797, 0, 0,
	0, 772, 773, 774, 795, 796, 821, 484, 480, 481,
	482, 483, 557, 0, 559, 562, 419, 369, 0, 0,
	0, 381, 375, 0, 0, 419, 0, 0, 564, 564,
	0, 429, 419, 419, -2, 419, 419, 419, 0, 386,
	387, 388, 375, 0, 375, 392, 393, 394, 405, 406,
	430, 1350, 0, 0, 322, 0, 322, 0, 322, 322,
	486, 223, 224, 212, 214, 0, 218, 0, 211, 1460,
	0, 0, 180, 1527, 185, 0, 1408, 1474, 1423, 0,
	0, 1441, 0, -2, 0, 250, 564, 0, 570, 0,
	569, 0, 0, 322, 322, 322, 322, 322, 322, 322,
	0, 0, 322, 0, 0, 607, 608, 603, 604, 605,
	609, 610, 3, 0, 0, 0, 0, 531, 0, 0,
	564, -2, 0, 442, 270, 955, 0, 0, 274, 275,
	0, 0, 290, 0, 293, 278, 279, 280, 0, 0,
	262, 263, 0, 0, 230, 0, 0, 0, 323, 0,
	0, 0, 0, 0, 0, 123, 120, 127, 130, 140,
	147, 0, 159, 161, 164, 121, 128, 133, 134, 141,
	162, 122, 124, 125, 129, 163, 165, 142, 146, 160,
	144, 149, 152, 153, 158, 0, 94, 0, 0, 0,
	0, 0, 1227, 0, 0, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1221, 0, 0, 1030, 1031, 1032, 1033, 1036, 0,
	1048, 0, 0, 0, 1280, 0, 1219, 1219, 0, 1219,
	1215, 0, 0, 1219, 1157, 0, 0, 1159, 1170, 0,
	0, 0, 1163, 1164, 1219, 0, 1219, 1168, 1153, 1154,
	0, 1215, 1215, 0, 0, 1215, 1215, 1215, 1215, 1215,
	1215, 1215, 1215, 1215, 1215, 1215, 1215, 0, 1327, 1345,
	1282, 1283, 1284, 1332, 1286, 1336, 1336, 1336, 1336, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 0, 0,
	1325, 1305, 1334, 1334, 1334, 1332, 1329, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1339, 1339, 1342, 1339, 0, 564, 0, 0, 552,
	0, 533, 0, 586, 588, 0, 590, 591, 593, 594,
	596, 597, 599, 600, 38, 0, 704, 0, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 797, 797, 797,
	486, 485, 0, 558, 0, 0, 615, 0, 0, 0,
	375, 419, 380, 377, 376, 425, 426, 422, 0, 422,
	615, 0, 399, 400, 401, 419, 419, 407, 565, 408,
	409, 422, 0, 427, 428, 0, 615, 615, 0, 416,
	417, 418, 0, 0, 797, 0, 377, 390, 377, 1351,
	1352, 0, 806, 0, 0, 0, 437, 0, 0, 0,
	487, 0, 0, 216, 0, 221, 173, 0, 0, 0,
	0, 0, 0, 202, 203, 0, 0, 0, 0, 0,
	193, 196, 909, 910, 762, 763, 197, 198, 242, 243,
	0, 533, 585, 587, 581, 582, 583, 0, 0, 0,
	0, 0, 0, 0, 464, 0, 0, 623, 617, 619,
	686, 53, 623, 0, 0, 0, 506, 519, 501, 0,
	508, 0, 916, 488, 519, 490, 0, 508, 533, 555,
	533, 0, 271, 0, 276, 0, 0, 292, 294, 295,
	296, 281, 282, 439, 258, 259, 251, 252, 253, 254,
	255, 256, 257, 261, 63, 0, 231, 232, 0, 0,
	0, 107, 108, 109, 110, 111, 112, 114, 98, 456,
	458, 754, 766, 0, 757, 0, 117, 157, 90, 0,
	0, 1222, 1223, 1224, 1225, 1226, 1230, 0, 1232, 1234,
	1236, 1238, 0, 1256, -2, -2, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1241, 1254,
	1255, 0, 0, 0, 0, 0, 0, 1252, 1252, 1247,
	0, 1028, 0, 1045, 1049, 0, 0, 0, 54, 1214,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 0,
	1220, 0, 1221, 0, 0, 0, 1216, 1217, 0, 0,
	1118, 1119, 1120, 0, 514, 0, 1180, 1158, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 1348, 1346, 1347, 1285, 1333,
	0, 1310, 0, 1311, 1312, 1313, 0, 0, 1306, 0,
	1307, 1308, 1309, 1301, 0, 1302, 1303, 0, 1304, 205,
	641, 643, 0, 523, 525, 526, 0, 553, 566, 571,
	572, 575, 34, 39, 0, 709, 0, 562, 0, 0,
	721, 320, 748, 0, 0, 764, 787, 793, 0, 0,
	0, 0, 560, 0, 0, 655, 368, 0, 420, 421,
	372, 1460, 377, 615, 382, 378, 383, 0, 424, 384,
	385, 0, 615, 615, 419, 422, 422, 412, 413, 0,
	431, 435, 432, 0, 434, 389, 391, 562, 305, 0,
	0, -2, 865, 1353, 1353, 0, 1353, 1353, 1353, 1353,
	0, 0, 1353, 1353, 1353, 1353, 1353, 1353, 1353, 1353,
	1353, 1353, 1353, 1353, 1353, 1353, 0, 807, 317, 0,
	0, 320, 738, 628, 0, 629, 630, 626, 657, 681,
	681, 0, 681, 661, 915, 225, 226, 0, 0, 220,
	174, 175, 0, 177, 178, 179, 186, 181, 183, 0,
	0, 187, 199, 200, 201, 0, 0, 0, 191, 192,
	0, 0, 245, 246, 248, 0, 551, 454, 455, 459,
	0, 461, 913, 462, 463, 709, 743, 615, 0, 624,
	0, 620, 687, 0, 689, 0, 615, 543, 0, 535,
	495, 0, 500, 516, 0, 520, 0, 0, 512, 505,
	509, 0, 0, 529, 489, 0, 0, 494, 554, 556,
	956, 0, 277, 291, 0, 0, 0, 0, 101, 751,
	0, 102, 106, 96, 0, 0, 0, 756, 0, 753,
	758, 0, 116, 0, 0, 91, 92, 812, 817, 0,
	1231, 1233, 1235, 1237, 1239, 0, 1242, 1252, 1252, 1248,
	0, 1243, 0, 1245, 0, 1222, 0, 1050, 0, 0,
	0, 0, 0, 0, 1106, 1107, 0, 0, 1111, 0,
	1113, 0, 0, 0, 1117, 0, 1156, 1172, 1160, 1161,
	0, 1165, 0, 1167, 0, 569, 0, 1084, 1084, 0,
	0, 0, 0, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 1281, 1349, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 644, 535, 0, 0, 0, 578,
	576, 577, 0, 0, 710, 711, 713, 714, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1393, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	708, 0, 798, 728, 1353, 324, 0, 0, 750, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 473,
	477, 33, 563, 0, 616, 370, 0, 371, 419, 379,
	423, 615, 915, 402, 403, 615, 419, 419, 422, 0,
	433, 0, 306, 921, 922, 0, 0, 924, 981, 0,
	933, 797, 933, 0, 0, 935, 936, 307, 0, 0,
	0, 0, 0, 806, 867, 0, 1354, 0, 1353, 1353,
	0, 0, 0, 0, 1353, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 1353, 0, 0, 324, 735, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 647, 0, 0, 0,
	0, 0, 562, 682, 0, 684, 685, 659, -2, 0,
	628, 664, 1219, 227, 215, 217, 0, 0, 0, 0,
	188, 189, 190, 194, 195, 244, 247, 249, 0, 0,
	0, 613, 618, 625, 688, 690, 54, 621, 613, 40,
	0, 0, 539, 0, 0, 519, 521, 0, 0, 519,
	0, 0, 528, 0, 0, 519, 0, 0, 440, 64,
	297, 0, 0, 0, 0, 0, 457, 0, 755, 98,
	0, 0, 118, 0, 0, 815, 0, 817, 1218, 1244,
	1246, 0, 1253, 1249, 1029, 1037, 1046, 0, 0, 1052,
	1064, 1064, 0, 1055, 1336, 1336, 1058, 1332, 1334, 1332,
	1064, 1064, 0, 55, 0, 0, 1112, 0, 0, 0,
	515, 0, 0, 0, 1082, 1084, 1088, 0, 1089, 1084,
	1084, 1084, 1084, 1094, 1084, 1084, 1084, 1084, 1084, 1084,
	1084, 1084, 1338, 1337, 1323, 0, 1324, 1335, 1340, 0,
	1343, 0, 524, 539, 567, 568, 573, 574, 0, 0,
	0, 0, 715, 0, 731, 729, 730, 0, 745, 325,
	326, 327, 328, 0, 0, 0, 749, 0, 496, 0,
	788, 789, 790, 791, 792, -2, 801, 0, 0, 917,
	917, 917, 527, 0, -2, 0, 0, 475, 0, 0,
	656, 373, 615, 395, 0, 410, 615, 615, 419, 436,
	0, -2, 923, 982, 945, 945, 934, 945, 945, 797,
	0, 309, 310, 311, 0, 313, 866, 868, 869, 0,
	0, 872, 873, 874, 875, 0, 0, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 903, 904, 905,
	906, 907, 908, 888, 889, 890, 891, 892, 893, 900,
	0, 0, 897, 0, 731, 0, 0, 0, 745, 737,
	0, 739, 740, 0, 0, 498, 615, 237, 0, 651,
	645, 0, 634, 649, 650, 637, 0, 639, 0, 635,
	636, 615, 627, 658, 683, 660, 663, 665, 666, 672,
	0, 0, 0, 0, 219, 176, 0, 344, 182, 460,
	914, 465, 611, 0, 0, 611, 544, 543, 541, 78,
	0, 0, 0, 517, 0, 522, 519, 504, 513, 503,
	510, 511, 530, 519, 493, 492, 957, 272, 0, 752,
	98, 103, 104, 105, 99, 97, 759, 0, 761, 0,
	813, 817, 0, 0, 1250, 1051, 1038, 1053, 1065, 1066,
	1054, 1039, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1040,
	1108, 0, 1110, 1114, 1115, 0, 1162, 1166, 0, 0,
	0, 1087, 1080, 1090, 1091, 1092, 1093, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1331, 0, 0, 541, 579,
	580, 703, 0, 712, 0, 719, 720, 0, 0, 723,
	724, 733, 0, 0, 0, 330, 331, 0, 0, 0,
	343, 339, 340, 341, 321, 744, 735, 0, 0, 802,
	1353, 1353, 1353, 0, 0, 918, 919, 0, 0, 681,
	0, 0, 615, 474, 477, 478, 561, 374, 615, 414,
	411, 615, 304, 947, -2, 960, 962, 0, 0, 965,
	966, 0, 0, 0, 0, 1003, 972, 0, 0, 976,
	0, 1268, 1269, 0, 980, 0, 937, 946, 0, 946,
	0, 0, 945, 0, 312, 870, 871, 876, 877, 894,
	0, 0, 896, 0, 0, 314, 0, 0, 315, 319,
	736, 0, 741, 742, 569, 0, 0, 631, 652, 0,
	0, 632, 0, 633, 638, 640, 236, 667, 0, 0,
	669, 670, 671, 662, 184, 601, 0, 0, 622, 602,
	41, 543, 0, 540, 79, 0, 0, 0, 0, 518,
	502, 491, 100, 95, 760, 81, 816, 818, 814, 0,
	1116, 0, 1084, 1083, 569, 1081, 0, 1341, 1344, 543,
	0, 718, 716, 732, 722, 0, 746, 747, 0, 332,
	333, 0, 336, 342, 734, 497, 0, 0, 0, 0,
	794, -2, 0, 0, -2, 615, 615, -2, 471, 476,
	0, 396, 415, 961, 963, 964, 967, 968, 911, 912,
	969, 1008, 1009, 1010, 970, 1005, 1006, 1007, 971, 0,
	0, 0, 1266, 1267, 1001, 0, 0, 0, 0, 0,
	0, 0, 931, 901, 902, 895, 898, 899, 318, 316,
	499, 564, 238, 239, 653, 0, 646, 676, 673, 0,
	0, 612, 614, 545, 542, 0, 536, 538, 89, 507,
	51, 72, 0, 1109, 1155, 1086, 1077, 0, 545, 0,
	0, 0, 329, 334, 0, 337, 338, 0, 783, 1332,
	0, 803, 804, 805, 822, -2, 920, 809, 81, 822,
	569, 472, 0, 0, 1169, 996, 0, 0, 938, 940,
	941, 942, 943, 944, 939, 0, 0, 0, 0, 930,
	932, 977, 0, 235, 0, 0, 677, 679, 674, 675,
	42, 0, 80, 0, 43, 0, 69, 0, 82, 83,
	0, 0, 0, 0, 0, 1078, 0, 1072, 1073, 1074,
	1079, 534, 0, 717, 725, 0, 727, 335, 776, 0,
	575, 0, 824, 0, 811, 824, 564, 1004, 0, 975,
	984, 997, 0, 0, 776, 776, 776, 776, 0, 978,
	654, 668, 0, 0, 0, 52, 56, 0, 78, 75,
	0, 84, 0, 0, 0, 0, 1085, 1075, 0, 0,
	0, 0, 0, 726, 775, 784, 785, 575, 808, 0,
	861, 810, 470, 973, 983, 985, 986, 0, 998, 999,
	1000, 1002, 925, 926, 927, 928, 0, 678, 680, 0,
	547, 537, 45, 0, 0, 73, 74, 76, 0, 85,
	0, 87, 88, 0, 1067, 1068, 1070, 1069, 1071, 706,
	777, 1353, 0, 0, 781, 782, 786, 0, 849, 0,
	0, 855, 0, 862, 974, 987, 0, 988, 0, 0,
	0, 929, 546, 0, 819, 0, 57, 0, 59, 61,
	62, 948, 70, 71, 77, 86, 0, 0, 779, 0,
	825, 0, 827, 0, 0, 0, 0, 0, 859, 0,
	989, 991, 992, 0, 0, 990, 548, 46, 47, 0,
	58, 0, 0, 1076, 778, 780, 0, 829, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 993, 995, 994,
	0, 0, 60, 949, 826, 823, 0, 861, 851, 0,
	853, 0, 0, 0, 0, 48, 49, 50, 0, 0,
	831, 0, 847, 852, 854, 856, 0, 860, 858, 950,
	830, 0, 843, 828, 0, 857, 832, -2, 0, 848,
	833, -2, 0, 841, 0, 0, 834, 842, 0, 837,
	0, 0, 0, 836, 0, -2, 844, 0, 0, 838,
	-2, 0, 846, 845,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 532,
	105, 104, 106, 3, 533, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 534, 117, 535, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:646
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:652
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:687
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:692
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:698
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:718
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:724
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:731
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:739
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:745
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:754
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:795
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:819
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:825
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:829
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:835
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:842
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:850
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:854
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:868
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:872
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:876
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:889
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:895
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:904
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:915
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:919
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:925
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:929
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:935
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:939
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:945
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:969
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:988
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:992
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:996
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1005
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1012
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1020
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1027
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1032
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1039
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1048
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1072
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1076
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1088
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1106
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1123
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1150
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1169
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1193
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1220
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1233
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1252
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1265
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1273
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1309
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1313
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1326
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1335
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1339
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1481
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1485
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1489
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1493
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1497
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1501
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1505
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1509
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1513
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1517
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1521
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1525
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1529
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1533
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1537
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1541
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1567
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1626
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1637
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1643
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1653
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1686
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1709
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1746
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1754
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1761
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1768
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1791
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1801
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1805
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1811
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1815
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1826
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1947
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1969
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1973
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1995
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1999
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2005
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2011
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2015
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2019
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2023
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2057
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2067
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2101
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2109
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2117
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2125
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2135
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2180
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2186
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2197
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2198
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2204
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2239
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2246
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2250
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2326
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2332
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2358
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2363
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2376
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2458
		{
			yyVAL.item = nil
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2463
		{
			yyVAL.item = nil
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2502
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2506
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2523
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2534
		{
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2538
		{
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2570
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2615
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2646
		{
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2648
		{
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2657
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2690
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2708
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2734
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2740
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2772
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2779
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2792
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2797
		{
			yyVAL.str = ""
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2801
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2807
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2820
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2824
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2830
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2835
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2839
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2843
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2849
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2853
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2859
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2865
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2869
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2873
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2879
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2883
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2904
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2913
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2922
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2926
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2978
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2984
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2995
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3000
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3023
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3036
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3047
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3051
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3057
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3062
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3069
		{
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3071
		{
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3074
		{
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3083
		{
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3087
		{
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3092
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3101
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3114
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3122
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3136
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3156
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3169
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3175
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3179
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3185
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3198
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3206
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3213
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3220
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3239
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3243
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3252
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3256
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3271
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3275
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3281
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3285
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3291
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3295
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3301
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3306
		{
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3317
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3321
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3337
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3343
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3347
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3353
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3357
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3393
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3411
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3447
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3460
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3464
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3469
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3473
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3480
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3485
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3498
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3506
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3510
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3540
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3544
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3550
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3562
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3571
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3594
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3600
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3610
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3616
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3625
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3629
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3634
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3638
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3642
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3648
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3652
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3656
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3670
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3757
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3773
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3781
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3789
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3805
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3815
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3826
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3840
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3844
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3848
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3853
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3857
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3861
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3874
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3883
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3898
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3902
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3908
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3912
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3917
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3921
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3926
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3934
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3948
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3956
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3966
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3972
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3981
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3990
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3999
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4009
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4013
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4023
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4027
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4031
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4035
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4041
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4051
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4055
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4061
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4071
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4077
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4083
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4087
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4091
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4101
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4111
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4117
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4121
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4127
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4141
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4154
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4160
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4166
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4179
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4197
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4201
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4207
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4217
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4221
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4225
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4230
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4234
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4251
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4255
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4259
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4263
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4268
		{
			yyVAL.str = ""
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4276
		{
			yyVAL.str = yyDollar[2].str
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4282
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4288
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4292
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4296
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4300
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4310
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4351
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4357
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 706:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4364
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4376
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4381
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4387
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4398
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4424
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4430
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4436
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4459
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4465
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4479
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4492
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4498
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4512
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4554
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4565
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4569
		{
			yyVAL.str = yyDollar[2].str
		}
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4589
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4595
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4607
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4616
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4625
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4630
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4750
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4754
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4760
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4770
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4774
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4780
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4794
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4807
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4813
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4820
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4835
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4842
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4851
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4855
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4861
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4875
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4879
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4888
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4892
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4900
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4906
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4929
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4951
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4955
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4959
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4963
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4967
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4973
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4977
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4983
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4988
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4993
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5001
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5005
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5015
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5030
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5040
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5044
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5053
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5059
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5063
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5073
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5077
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5092
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5104
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5113
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5126
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5133
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5143
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5151
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5162
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5166
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5171
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5175
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5182
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5206
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5220
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5238
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5251
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5257
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5261
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5267
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5276
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5286
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5290
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5296
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5300
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5306
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5313
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5322
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5326
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5335
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5340
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5344
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5349
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5353
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5363
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5367
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5378
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5386
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5394
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5402
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5413
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5422
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5432
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5442
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5446
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5451
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5464
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5470
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5474
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5478
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5496
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5504
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5509
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5517
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5525
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5529
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5537
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5545
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5549
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5553
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5557
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5565
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5569
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5573
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5581
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5585
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5593
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5597
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5604
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5608
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5614
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5619
		{
			yyVAL.str = ""
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5623
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5627
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5645
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5671
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5680
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5685
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5691
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5698
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5702
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5712
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5718
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5730
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5736
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5745
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5754
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5777
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5786
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5796
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5810
		{
			yyVAL.str = ""
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5814
		{
			yyVAL.str = yyDollar[1].str
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5824
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5830
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5836
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5850
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5854
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5860
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5866
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5870
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5874
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5902
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5906
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5911
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5915
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5921
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5925
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5931
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5935
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5939
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5943
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5947
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5951
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5972
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5976
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5980
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5984
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5997
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6007
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6012
		{
			yyVAL.str = ""
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6016
		{
			yyVAL.str = yyDollar[1].str
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6022
		{
			yyVAL.str = ""
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6026
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6032
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6044
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6051
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6058
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6065
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6072
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6081
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6087
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6093
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6097
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6101
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6105
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6109
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6121
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6125
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6129
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6138
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6143
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6147
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6163
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6169
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6173
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6177
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6181
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6185
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6189
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6193
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6197
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6201
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6205
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6209
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6213
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6217
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6223
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6227
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6231
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6235
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6239
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6243
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6247
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6255
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6259
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6263
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6267
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6272
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6285
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6289
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6298
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6302
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6306
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6310
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6319
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6328
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6334
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6338
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6344
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6354
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6371
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6388
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6401
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6414
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6426
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6440
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6455
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6470
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6487
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6502
		{
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6508
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6512
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6516
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6522
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6526
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6534
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6538
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6542
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6548
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6555
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6568
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6575
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6584
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6589
		{
			yyVAL.str = ","
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6593
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6602
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6612
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6623
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6633
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6642
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6651
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6661
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6671
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6681
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6691
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6701
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6711
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6721
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6731
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6741
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6751
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6761
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6771
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6788
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6796
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6804
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6812
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6830
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6838
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6847
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6858
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6880
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6891
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6913
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6949
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6961
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6973
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6984
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6999
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7006
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7018
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7026
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7034
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7045
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7054
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7063
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7071
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7081
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7089
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7103
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7113
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7132
		{
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7134
		{
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7175
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7186
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7190
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7194
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7209
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7219
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7226
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7230
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7234
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7242
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7246
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7250
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7254
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7260
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7264
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7268
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7272
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7276
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7292
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7296
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7304
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7308
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7312
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7316
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7320
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7324
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7328
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7332
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7336
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7340
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7350
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7356
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7360
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7367
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7371
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7375
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7381
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7385
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7389
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7393
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7397
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7405
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7411
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7415
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7419
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7423
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7429
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7433
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7446
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7451
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7455
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7459
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7463
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7467
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7471
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7485
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7489
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7496
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7507
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7512
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7518
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7542
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7554
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7567
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7580
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7619
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7699
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7726
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7768
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7816
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7833
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7845
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7865
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7885
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7921
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7934
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7947
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7973
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7985
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7997
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8009
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8021
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8045
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8057
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8069
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8081
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8107
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8122
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8130
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8139
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8149
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8172
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8177
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8183
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8190
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8194
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8199
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8203
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8209
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8215
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8222
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8229
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8238
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default scale for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8245
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8252
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8261
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8265
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8275
		{
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8277
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8287
		{
			yyVAL.str = ""
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const ZONEMAP = 57661
const LEADING = 57662
const BOTH = 57663
const TRAILING = 57664
const UNKNOWN = 57665
const EXPIRE = 57666
const ACCOUNT = 57667
const ACCOUNTS = 57668
const UNLOCK = 57669
const DAY = 57670
const NEVER = 57671
const PUMP = 57672
const MYSQL_COMPATIBILITY_MODE = 57673
const MODIFY = 57674
const CHANGE = 57675
const SECOND = 57676
const ASCII = 57677
const COALESCE = 57678
const COLLATION = 57679
const HOUR = 57680
const MICROSECOND = 57681
const MINUTE = 57682
const MONTH = 57683
const QUARTER = 57684
const REPEAT = 57685
const REVERSE = 57686
const ROW_COUNT = 57687
const WEEK = 57688
const REVOKE = 57689
const FUNCTION = 57690
const PRIVILEGES = 57691
const TABLESPACE = 57692
const EXECUTE = 57693
const SUPER = 57694
const GRANT = 57695
const OPTION = 57696
const REFERENCES = 57697
const REPLICATION = 57698
const SLAVE = 57699
const CLIENT = 57700
const USAGE = 57701
const RELOAD = 57702
const FILE = 57703
const TEMPORARY = 57704
const ROUTINE = 57705
const EVENT = 57706
const SHUTDOWN = 57707
const NULLX = 57708
const AUTO_INCREMENT = 57709
const APPROXNUM = 57710
const SIGNED = 57711
const UNSIGNED = 57712
const ZEROFILL = 57713
const ENGINES = 57714
const LOW_CARDINALITY = 57715
const AUTOEXTEND_SIZE = 57716
const ADMIN_NAME = 57717
const RANDOM = 57718
const SUSPEND = 57719
const ATTRIBUTE = 57720
const HISTORY = 57721
const REUSE = 57722
const CURRENT = 57723
const OPTIONAL = 57724
const FAILED_LOGIN_ATTEMPTS = 57725
const PASSWORD_LOCK_TIME = 57726
const UNBOUNDED = 57727
const SECONDARY = 57728
const RESTRICTED = 57729
const USER = 57730
const IDENTIFIED = 57731
const CIPHER = 57732
const ISSUER = 57733
const X509 = 57734
const SUBJECT = 57735
const SAN = 57736
const REQUIRE = 57737
const SSL = 57738
const NONE = 57739
const PASSWORD = 57740
const SHARED = 57741
const EXCLUSIVE = 57742
const MAX_QUERIES_PER_HOUR = 57743
const MAX_UPDATES_PER_HOUR = 57744
const MAX_CONNECTIONS_PER_HOUR = 57745
const MAX_USER_CONNECTIONS = 57746
const FORMAT = 57747
const VERBOSE = 57748
const CONNECTION = 57749
const TRIGGERS = 57750
const PROFILES = 57751
const LOAD = 57752
const INLINE = 57753
const INFILE = 57754
const TERMINATED = 57755
const OPTIONALLY = 57756
const ENCLOSED = 57757
const ESCAPED = 57758
const STARTING = 57759
const LINES = 57760
const ROWS = 57761
const IMPORT = 57762
const DISCARD = 57763
const MODUMP = 57764
const OVER = 57765
const PRECEDING = 57766
const FOLLOWING = 57767
const GROUPS = 57768
const DATABASES = 57769
const TABLES = 57770
const SEQUENCES = 57771
const EXTENDED = 57772
const FULL = 57773
const PROCESSLIST = 57774
const FIELDS = 57775
const COLUMNS = 57776
const OPEN = 57777
const ERRORS = 57778
const WARNINGS = 57779
const INDEXES = 57780
const SCHEMAS = 57781
const NODE = 57782
const LOCKS = 57783
const ROLES = 57784
const TABLE_NUMBER = 57785
const COLUMN_NUMBER = 57786
const TABLE_VALUES = 57787
const TABLE_SIZE = 57788
const NAMES = 57789
const GLOBAL = 57790
const PERSIST = 57791
const SESSION = 57792
const ISOLATION = 57793
const LEVEL = 57794
const READ = 57795
const WRITE = 57796
const ONLY = 57797
const REPEATABLE = 57798
const COMMITTED = 57799
const UNCOMMITTED = 57800
const SERIALIZABLE = 57801
const LOCAL = 57802
const EVENTS = 57803
const PLUGINS = 57804
const CURRENT_TIMESTAMP = 57805
const DATABASE = 57806
const CURRENT_TIME = 57807
const LOCALTIME = 57808
const LOCALTIMESTAMP = 57809
const UTC_DATE = 57810
const UTC_TIME = 57811
const UTC_TIMESTAMP = 57812
const REPLACE = 57813
const CONVERT = 57814
const SEPARATOR = 57815
const TIMESTAMPDIFF = 57816
const CURRENT_DATE = 57817
const CURRENT_USER = 57818
const CURRENT_ROLE = 57819
const SECOND_MICROSECOND = 57820
const MINUTE_MICROSECOND = 57821
const MINUTE_SECOND = 57822
const HOUR_MICROSECOND = 57823
const HOUR_SECOND = 57824
const HOUR_MINUTE = 57825
const DAY_MICROSECOND = 57826
const DAY_SECOND = 57827
const DAY_MINUTE = 57828
const DAY_HOUR = 57829
const YEAR_MONTH = 57830
const SQL_TSI_HOUR = 57831
const SQL_TSI_DAY = 57832
const SQL_TSI_WEEK = 57833
const SQL_TSI_MONTH = 57834
const SQL_TSI_QUARTER = 57835
const SQL_TSI_YEAR = 57836
const SQL_TSI_SECOND = 57837
const SQL_TSI_MINUTE = 57838
const RECURSIVE = 57839
const CONFIG = 57840
const DRAINER = 57841
const SOURCE = 57842
const STREAM = 57843
const HEADERS = 57844
const CONNECTOR = 57845
const CONNECTORS = 57846
const DAEMON = 57847
const PAUSE = 57848
const CANCEL = 57849
const TASK = 57850
const RESUME = 57851
const MATCH = 57852
const AGAINST = 57853
const BOOLEAN = 57854
const LANGUAGE = 57855
const WITH = 57856
const QUERY = 57857
const EXPANSION = 57858
const WITHOUT = 57859
const VALIDATION = 57860
const ADDDATE = 57861
const BIT_AND = 57862
const BIT_OR = 57863
const BIT_XOR = 57864
const CAST = 57865
const COUNT = 57866
const APPROX_COUNT = 57867
const APPROX_COUNT_DISTINCT = 57868
const APPROX_PERCENTILE = 57869
const CURDATE = 57870
const CURTIME = 57871
const DATE_ADD = 57872
const DATE_SUB = 57873
const EXTRACT = 57874
const GROUP_CONCAT = 57875
const MAX = 57876
const MID = 57877
const MIN = 57878
const NOW = 57879
const POSITION = 57880
const SESSION_USER = 57881
const STD = 57882
const STDDEV = 57883
const MEDIAN = 57884
const STDDEV_POP = 57885
const STDDEV_SAMP = 57886
const SUBDATE = 57887
const SUBSTR = 57888
const SUBSTRING = 57889
const SUM = 57890
const SYSDATE = 57891
const SYSTEM_USER = 57892
const TRANSLATE = 57893
const TRIM = 57894
const VARIANCE = 57895
const VAR_POP = 57896
const VAR_SAMP = 57897
const AVG = 57898
const RANK = 57899
const ROW_NUMBER = 57900
const DENSE_RANK = 57901
const BIT_CAST = 57902
const NEXTVAL = 57903
const SETVAL = 57904
const CURRVAL = 57905
const LASTVAL = 57906
const ARROW = 57907
const ROW = 57908
const OUTFILE = 57909
const HEADER = 57910
const MAX_FILE_SIZE = 57911
const FORCE_QUOTE = 57912
const PARALLEL = 57913
const UNUSED = 57914
const BINDINGS = 57915
const DO = 57916
const DECLARE = 57917
const LOOP = 57918
const WHILE = 57919
const LEAVE = 57920
const ITERATE = 57921
const UNTIL = 57922
const CALL = 57923
const PREV = 57924
const SLIDING = 57925
const FILL = 57926
const SPBEGIN = 57927
const BACKEND = 57928
const SERVERS = 57929
const HANDLER = 57930
const KILL = 57931
const BACKUP = 57932
const FILESYSTEM = 57933
const QUERY_RESULT = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10688

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 690,
	21, 690,
	-2, 683,
	-1, 137,
	236, 1068,
	238, 980,
	-2, 1025,
	-1, 161,
	42, 519,
	238, 519,
	265, 526,
	266, 526,
	455, 519,
	-2, 552,
	-1, 200,
	613, 1789,
	-2, 435,
	-1, 548,
	317, 133,
	428, 133,
	429, 133,
	-2, 1697,
	-1, 612,
	81, 1489,
	-2, 1844,
	-1, 613,
	81, 1507,
	-2, 1815,
	-1, 617,
	81, 1508,
	-2, 1843,
	-1, 643,
	81, 1419,
	-2, 1914,
	-1, 644,
	81, 1420,
	-2, 1913,
	-1, 645,
	81, 1421,
	-2, 1903,
	-1, 646,
	81, 1877,
	-2, 1898,
	-1, 647,
	81, 1878,
	-2, 1899,
	-1, 648,
	81, 1879,
	-2, 1905,
	-1, 649,
	81, 1880,
	-2, 1887,
	-1, 650,
	81, 1881,
	-2, 1896,
	-1, 651,
	81, 1882,
	-2, 1906,
	-1, 652,
	81, 1883,
	-2, 1907,
	-1, 653,
	81, 1884,
	-2, 1912,
	-1, 654,
	81, 1885,
	-2, 1917,
	-1, 655,
	81, 1886,
	-2, 1918,
	-1, 657,
	81, 1486,
	-2, 1683,
	-1, 661,
	81, 1491,
	-2, 1698,
	-1, 664,
	81, 1495,
	-2, 1716,
	-1, 668,
	81, 1499,
	-2, 1758,
	-1, 669,
	81, 1500,
	-2, 1839,
	-1, 677,
	81, 1510,
	-2, 1824,
	-1, 678,
	81, 1511,
	-2, 1869,
	-1, 679,
	81, 1512,
	-2, 1834,
	-1, 680,
	81, 1513,
	-2, 1859,
	-1, 691,
	81, 1397,
	-2, 1908,
	-1, 692,
	81, 1398,
	-2, 1909,
	-1, 693,
	81, 1399,
	-2, 1910,
	-1, 777,
	450, 552,
	451, 552,
	-2, 520,
	-1, 823,
	122, 1683,
	133, 1683,
	153, 1683,
	-2, 1657,
	-1, 932,
	21, 717,
	-2, 666,
	-1, 1033,
	11, 690,
	21, 690,
	-2, 1294,
	-1, 1106,
	21, 717,
	-2, 666,
	-1, 1417,
	81, 1557,
	-2, 1841,
	-1, 1418,
	81, 1558,
	-2, 1842,
	-1, 1557,
	82, 866,
	-2, 872,
	-1, 1960,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	278, 1015,
	-2, 1008,
	-1, 2100,
	11, 690,
	21, 690,
	-2, 810,
	-1, 2132,
	82, 1643,
	154, 1643,
	-2, 1826,
	-1, 2133,
	82, 1643,
	154, 1643,
	-2, 1825,
	-1, 2134,
	82, 1619,
	154, 1619,
	-2, 1812,
	-1, 2135,
	82, 1620,
	154, 1620,
	-2, 1817,
	-1, 2136,
	82, 1621,
	154, 1621,
	-2, 1746,
	-1, 2137,
	82, 1622,
	154, 1622,
	-2, 1740,
	-1, 2138,
	82, 1623,
	154, 1623,
	-2, 1673,
	-1, 2139,
	82, 1624,
	154, 1624,
	-2, 1814,
	-1, 2140,
	82, 1625,
	154, 1625,
	-2, 1744,
	-1, 2141,
	82, 1626,
	154, 1626,
	-2, 1739,
	-1, 2142,
	82, 1627,
	154, 1627,
	-2, 1730,
	-1, 2143,
	82, 1643,
	154, 1643,
	-2, 1731,
	-1, 2144,
	82, 1643,
	154, 1643,
	-2, 1732,
	-1, 2146,
	82, 1632,
	154, 1632,
	-2, 1859,
	-1, 2147,
	82, 1610,
	154, 1610,
	-2, 1844,
	-1, 2148,
	82, 1641,
	154, 1641,
	-2, 1815,
	-1, 2149,
	82, 1641,
	154, 1641,
	-2, 1843,
	-1, 2150,
	82, 1641,
	154, 1641,
	-2, 1699,
	-1, 2151,
	82, 1639,
	154, 1639,
	-2, 1834,
	-1, 2152,
	82, 1636,
	154, 1636,
	-2, 1721,
	-1, 2153,
	81, 1591,
	82, 1591,
	154, 1591,
	386, 1591,
	387, 1591,
	388, 1591,
	-2, 1672,
	-1, 2154,
	81, 1592,
	82, 1592,
	154, 1592,
	386, 1592,
	387, 1592,
	388, 1592,
	-2, 1674,
	-1, 2155,
	81, 1595,
	82, 1595,
	154, 1595,
	386, 1595,
	387, 1595,
	388, 1595,
	-2, 1816,
	-1, 2156,
	81, 1597,
	82, 1597,
	154, 1597,
	386, 1597,
	387, 1597,
	388, 1597,
	-2, 1798,
	-1, 2157,
	81, 1599,
	82, 1599,
	154, 1599,
	386, 1599,
	387, 1599,
	388, 1599,
	-2, 1745,
	-1, 2158,
	81, 1601,
	82, 1601,
	154, 1601,
	386, 1601,
	387, 1601,
	388, 1601,
	-2, 1726,
	-1, 2159,
	81, 1602,
	82, 1602,
	154, 1602,
	386, 1602,
	387, 1602,
	388, 1602,
	-2, 1727,
	-1, 2160,
	81, 1604,
	82, 1604,
	154, 1604,
	386, 1604,
	387, 1604,
	388, 1604,
	-2, 1671,
	-1, 2161,
	82, 1646,
	154, 1646,
	386, 1646,
	387, 1646,
	388, 1646,
	-2, 1704,
	-1, 2162,
	82, 1646,
	154, 1646,
	386, 1646,
	387, 1646,
	388, 1646,
	-2, 1717,
	-1, 2163,
	82, 1649,
	154, 1649,
	386, 1649,
	387, 1649,
	388, 1649,
	-2, 1700,
	-1, 2164,
	82, 1649,
	154, 1649,
	386, 1649,
	387, 1649,
	388, 1649,
	-2, 1761,
	-1, 2165,
	82, 1646,
	154, 1646,
	386, 1646,
	387, 1646,
	388, 1646,
	-2, 1782,
	-1, 2348,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	278, 1015,
	-2, 1009,
	-1, 2361,
	79, 611,
	154, 611,
	-2, 1181,
	-1, 2709,
	191, 1015,
	302, 1262,
	-2, 1234,
	-1, 2858,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	-2, 1124,
	-1, 2860,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	-2, 1124,
	-1, 2870,
	79, 611,
	154, 611,
	-2, 1182,
	-1, 2878,
	191, 1015,
	302, 1262,
	-2, 1235,
	-1, 3012,
	105, 1015,
	149, 1015,
	188, 1015,
	191, 1015,
	-2, 1125,
	-1, 3393,
	82, 1086,
	154, 1086,
	-2, 1015,
	-1, 3397,
	82, 1086,
	154, 1086,
	-2, 1015,
	-1, 3411,
	82, 1090,
	154, 1090,
	-2, 1015,
	-1, 3416,
	82, 1091,
	154, 1091,
	-2, 1015,
}

const yyPrivate = 57344

const yyLast = 39335

var yyAct = [...]int{
	579, 1638, 3397, 3396, 3405, 3376, 191, 557, 1397, 3263,
	559, 3325, 3346, 581, 552, 3289, 3271, 567, 3272, 3193,
	3178, 2954, 2727, 2892, 2215, 3053, 2793, 1186, 1247, 3169,
	1066, 2960, 1393, 3197, 3000, 2997, 1333, 3089, 3078, 2794,
	461, 609, 3126, 1323, 933, 2319, 2999, 822, 2958, 2828,
	471, 3179, 476, 476, 3181, 2949, 561, 1590, 476, 492,
	501, 2845, 2879, 501, 3004, 3011, 2002, 3018, 1400, 2364,
	2976, 2681, 2641, 2791, 2480, 176, 1727, 2479, 2670, 2481,
	2834, 2463, 3014, 2724, 2403, 2861, 2706, 2713, 2473, 2542,
	1453, 1692, 1830, 2128, 2779, 512, 2639, 2502, 2759, 2476,
	2339, 2651, 2005, 1795, 506, 2654, 1970, 1592, 2649, 2687,
	1724, 2094, 926, 1742, 550, 2349, 2642, 1240, 2078, 1937,
	1928, 1319, 2712, 556, 1815, 36, 1927, 2515, 2585, 1804,
	2198, 1796, 1826, 2181, 1537, 2525, 2032, 1327, 1803, 2095,
	753, 1720, 2130, 1769, 1324, 1825, 2083, 1695, 1693, 2323,
	2385, 551, 1620, 2003, 2356, 1630, 6, 2328, 1969, 1567,
	1195, 2126, 187, 8, 878, 461, 186, 7, 1827, 2250,
	1391, 560, 1349, 1332, 1860, 1256, 1700, 1286, 1837, 1951,
	116, 1226, 2644, 35, 498, 2643, 1159, 1447, 470, 1602,
	1431, 191, 1382, 191, 1998, 869, 870, 1312, 1785, 944,
	1802, 549, 1799, 863, 864, 2280, 568, 2281, 868, 785,
	14, 1759, 26, 1175, 1293, 1390, 815, 1601, 2102, 1566,
	1279, 514, 1225, 485, 2383, 15, 752, 13, 475, 475,
	1223, 32, 55, 695, 483, 1187, 488, 1454, 177, 551,
	23, 16, 10, 515, 730, 1285, 173, 1171, 750, 167,
	735, 1104, 1834, 500, 1067, 3120, 2309, 866, 1844, 2848,
	2238, 1138, 2786, 772, 2187, 2309, 865, 2309, 867, 496,
	2185, 497, 2184, 2182, 558, 1550, 1300, 1296, 861, 862,
	175, 1123, 472, 3332, 493, 862, 495, 1208, 1544, 862,
	494, 2302, 2300, 1119, 1298, 1002, 1003, 1004, 1001, 2947,
	1002, 1003, 1004, 1001, 2538, 481, 2536, 1774, 3085, 3079,
	2950, 2792, 1812, 1061, 3183, 1798, 504, 696, 174, 51,
	163, 138, 2040, 3137, 174, 174, 174, 51, 163, 138,
	3254, 2304, 860, 707, 965, 2986, 1161, 2318, 8, 2232,
	2320, 2882, 7, 1396, 2977, 174, 51, 163, 138, 828,
	174, 2224, 830, 1831, 1124, 1962, 174, 174, 174, 174,
	3106, 3216, 1266, 1265, 1264, 834, 832, 3138, 1347, 833,
	1133, 1561, 2557, 115, 1340, 511, 2609, 510, 686, 2894,
	685, 687, 688, 1842, 689, 690, 804, 168, 1151, 1955,
	3108, 2120, 2885, 168, 168, 168, 1383, 697, 1344, 1387,
	1204, 831, 2880, 1205, 1337, 2550, 115, 2902, 2903, 973,
	999, 698, 975, 2881, 168, 1125, 2509, 2510, 980, 1346,
	1367, 981, 2121, 1386, 2508, 1339, 168, 168, 168, 2108,
	1704, 1737, 2107, 1705, 1706, 2109, 1551, 1552, 1193, 1194,
	976, 708, 1227, 2325, 1229, 2199, 794, 1183, 1616, 983,
	2886, 1191, 992, 2326, 1399, 1190, 1193, 1194, 3308, 2969,
	997, 3306, 3275, 3276, 825, 824, 3186, 3247, 3185, 3246,
	3184, 3245, 3186, 3185, 3184, 476, 1918, 3249, 1196, 3293,
	3294, 3090, 3091, 3092, 3093, 476, 937, 2795, 3253, 1207,
	3087, 3171, 1403, 2543, 3171, 2544, 1132, 2545, 3174, 3082,
	2795, 2324, 1388, 501, 501, 947, 476, 816, 2219, 938,
	1846, 1715, 3190, 2419, 1721, 969, 1711, 1378, 2808, 2842,
	2835, 1838, 2072, 2331, 978, 1385, 2663, 1299, 1297, 800,
	798, 1949, 799, 2991, 1782, 1306, 1305, 2305, 2904, 2312,
	971, 3251, 741, 2573, 2901, 947, 2006, 460, 995, 996,
	994, 2229, 974, 977, 2655, 2665, 3114, 2038, 2948, 2575,
	968, 137, 2537, 172, 545, 826, 2467, 547, 1005, 3256,
	3257, 2890, 546, 2075, 2074, 2659, 3117, 1034, 970, 827,
	2988, 2660, 2661, 161, 2079, 1043, 3310, 979, 2725, 2726,
	930, 2968, 3301, 2887, 2891, 2889, 2888, 2662, 2970, 1035,
	2679, 2688, 872, 1402, 1401, 960, 985, 3142, 1050, 986,
	3274, 937, 3208, 3203, 2916, 498, 498, 2357, 805, 2472,
	3134, 503, 3102, 502, 1957, 3103, 2343, 2344, 2345, 2346,
	1843, 2896, 2897, 2909, 3198, 801, 3390, 988, 3406, 3337,
	3097, 1384, 3305, 1181, 2303, 1206, 3265, 3344, 1135, 1134,
	1217, 928, 3261, 3262, 972, 3265, 1170, 990, 991, 2919,
	3189, 935, 3044, 982, 1849, 1851, 1852, 1070, 3370, 1122,
	2123, 2049, 828, 2904, 2048, 830, 1735, 1736, 3105, 1409,
	1412, 1413, 956, 2961, 743, 2883, 744, 2657, 951, 2337,
	1410, 2895, 2447, 2729, 1168, 949, 948, 1236, 803, 1235,
	496, 496, 497, 497, 3102, 3033, 958, 3103, 3407, 3104,
	936, 1832, 984, 3119, 2811, 493, 493, 495, 495, 1130,
	471, 494, 494, 2579, 831, 2308, 940, 941, 1832, 942,
	1832, 3039, 1167, 499, 932, 949, 948, 2069, 2070, 1102,
	1166, 499, 1107, 828, 1861, 3413, 830, 3377, 1185, 1184,
	989, 957, 753, 862, 2008, 862, 953, 954, 3136, 3401,
	3105, 862, 3127, 862, 3143, 927, 2626, 2862, 862, 862,
	3255, 2001, 2018, 2945, 802, 987, 1041, 3135, 2183, 3349,
	2798, 1833, 1845, 1301, 1139, 510, 3168, 2320, 1224, 2721,
	2225, 3104, 2112, 2036, 52, 831, 1835, 1144, 2578, 1189,
	2011, 476, 52, 1219, 1192, 2504, 2506, 1149, 3109, 461,
	461, 1148, 3311, 2520, 2521, 696, 2008, 2011, 461, 461,
	2900, 965, 1251, 1251, 1147, 476, 2330, 1193, 1194, 2301,
	1193, 1194, 505, 2822, 3046, 1071, 2417, 139, 1037, 1038,
	1039, 1040, 1722, 139, 139, 139, 2987, 501, 1280, 471,
	2233, 1253, 1289, 1289, 1249, 1249, 169, 170, 2656, 171,
	1182, 2666, 3115, 191, 139, 2576, 1288, 1288, 1136, 139,
	2722, 1258, 461, 1079, 1080, 139, 139, 139, 139, 931,
	3250, 2658, 2334, 2335, 2728, 959, 2899, 2420, 3400, 2421,
	2422, 2007, 2992, 827, 1714, 2021, 2009, 2333, 1156, 1712,
	1379, 2001, 2023, 1850, 2725, 2726, 2311, 964, 1131, 3054,
	3055, 3056, 3058, 3057, 1931, 3350, 795, 1128, 1411, 1847,
	1848, 1307, 3412, 1331, 3098, 1334, 2587, 2586, 3099, 1554,
	1342, 2012, 747, 748, 749, 742, 1555, 1245, 1246, 2448,
	2450, 2451, 2452, 2449, 745, 1108, 1933, 1932, 2012, 1106,
	2010, 1365, 3035, 2007, 2001, 2006, 3034, 2004, 2009, 2022,
	2677, 1930, 3040, 3041, 1553, 1251, 2061, 1251, 937, 1126,
	1127, 2505, 1137, 1360, 1361, 710, 1348, 1215, 2017, 1177,
	1178, 711, 2015, 2438, 2439, 1140, 1141, 1142, 1143, 3019,
	1145, 934, 1218, 3352, 714, 1150, 853, 858, 859, 797,
	1158, 1257, 796, 1000, 3419, 2756, 3098, 2799, 1893, 965,
	3180, 1892, 2010, 1593, 2362, 1404, 1405, 1406, 1407, 1408,
	1940, 1321, 1322, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1209, 1210, 1281, 1197, 1442,
	1443, 1200, 795, 1941, 1942, 713, 3347, 3348, 1452, 716,
	715, 2693, 1338, 1953, 1234, 2201, 1345, 3418, 1329, 1449,
	1450, 1451, 1501, 1326, 1762, 1364, 1330, 1485, 498, 1381,
	2723, 2752, 2825, 1363, 1259, 1495, 1000, 1310, 1374, 1313,
	1314, 481, 2810, 1000, 1510, 1272, 2035, 934, 3409, 2678,
	1315, 1316, 1164, 1491, 1492, 1493, 1593, 1169, 1290, 1395,
	1278, 1291, 1921, 3391, 1179, 2437, 1507, 2092, 806, 1508,
	2224, 3386, 1198, 1199, 3380, 1201, 1202, 1203, 3379, 3374,
	1539, 937, 1517, 1518, 3357, 797, 2363, 1376, 796, 1000,
	1535, 1414, 3327, 1280, 1000, 1002, 1003, 1004, 1001, 1564,
	3283, 1251, 1569, 1570, 1486, 1572, 1573, 476, 3277, 2731,
	2093, 476, 2363, 496, 1251, 497, 2630, 3226, 753, 831,
	3410, 1591, 2628, 831, 2093, 1373, 1251, 1952, 493, 1351,
	495, 1380, 1219, 2523, 494, 1840, 3161, 492, 1370, 1356,
	1369, 2607, 1538, 3387, 3160, 1389, 1840, 855, 856, 857,
	1840, 1500, 1398, 1372, 1371, 1368, 1840, 1615, 700, 701,
	702, 703, 1760, 1611, 3328, 1621, 1621, 965, 1219, 1394,
	1219, 1219, 3284, 2314, 476, 476, 1563, 1564, 1564, 3156,
	3123, 1251, 1689, 1690, 1702, 1483, 1484, 2306, 1487, 3123,
	1103, 2093, 1619, 2756, 1433, 962, 1502, 2214, 461, 1571,
	1251, 3155, 1172, 1176, 1176, 1176, 2206, 963, 3162, 1509,
	3154, 1511, 3153, 2123, 1831, 1539, 1974, 3122, 2980, 2923,
	1539, 1539, 2854, 2740, 1703, 1996, 1172, 1172, 476, 1564,
	1251, 1926, 1747, 1897, 476, 476, 476, 1752, 1753, 1541,
	1822, 1733, 1157, 2499, 1757, 1758, 1738, 1607, 2287, 1764,
	1445, 3123, 2279, 2240, 1684, 1685, 191, 2222, 1640, 191,
	191, 2210, 191, 1614, 1440, 1441, 1617, 1618, 1392, 1772,
	1237, 963, 1775, 3123, 3329, 1778, 1231, 1233, 1780, 1512,
	2208, 2841, 3123, 1574, 3123, 1243, 1244, 1578, 3067, 3123,
	2981, 2123, 1716, 2203, 2855, 2741, 1603, 1536, 1605, 1606,
	1501, 1501, 1806, 1542, 705, 1546, 1744, 1501, 1501, 1708,
	2873, 1710, 1612, 1558, 1817, 2093, 1730, 1731, 1622, 2196,
	1000, 1728, 1729, 2921, 1000, 1000, 1746, 1816, 1017, 1974,
	2694, 1773, 1723, 2204, 1776, 1777, 1811, 1779, 1591, 1302,
	2527, 2365, 1251, 1829, 1588, 2194, 1587, 1749, 1750, 1751,
	1627, 1628, 2209, 1986, 1608, 1559, 1560, 1624, 1562, 2227,
	1604, 700, 701, 702, 703, 2204, 1613, 2226, 2218, 1575,
	1576, 1577, 1991, 1888, 1598, 1016, 1015, 1025, 1026, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1017, 1625, 1626, 2192,
	1732, 2197, 1873, 2182, 1895, 1823, 2190, 1594, 1595, 1821,
	1688, 1973, 1691, 1872, 1743, 1767, 1858, 1859, 1807, 1755,
	1743, 1743, 1743, 1707, 1717, 1709, 1488, 2195, 1353, 1922,
	1864, 1903, 1047, 1868, 950, 1902, 1891, 929, 1623, 1801,
	924, 1854, 1002, 1003, 1004, 1001, 1801, 1262, 922, 1002,
	1003, 1004, 1001, 498, 1568, 1745, 1015, 1025, 1026, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1017, 1583, 2698, 1882,
	3366, 2191, 1768, 1879, 1599, 1600, 2570, 1770, 2191, 1596,
	1881, 1886, 1880, 1974, 1839, 1357, 2689, 1787, 1871, 2104,
	828, 1609, 1610, 830, 1813, 1985, 3353, 828, 1162, 1899,
	830, 1921, 1163, 1000, 1904, 1905, 1906, 1000, 1000, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 705, 1810, 1808,
	1898, 3204, 1900, 1490, 1489, 1239, 1173, 550, 1820, 1907,
	476, 476, 712, 476, 1568, 2033, 3020, 2865, 496, 1241,
	497, 1000, 831, 1824, 1490, 1489, 476, 476, 476, 831,
	1242, 2863, 1000, 493, 1000, 495, 1840, 1358, 1971, 494,
	3121, 929, 2690, 1448, 1819, 3205, 3094, 3037, 1978, 1219,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 1975, 3036,
	3021, 2866, 2993, 1392, 2847, 828, 1862, 2757, 830, 2257,
	2750, 2745, 1853, 1439, 1219, 2864, 1855, 1020, 1021, 1022,
	1023, 1024, 1017, 2742, 1866, 2672, 2691, 2469, 2028, 1436,
	1438, 1435, 1433, 1437, 2784, 1172, 2341, 921, 917, 918,
	919, 920, 2310, 2262, 1238, 2261, 2260, 2258, 2237, 1176,
	2207, 2114, 1565, 1523, 582, 592, 1153, 831, 1152, 939,
	2247, 1176, 1174, 583, 2176, 591, 584, 588, 587, 585,
	586, 1448, 1771, 1867, 1516, 1294, 717, 1771, 2034, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1006, 2529, 2097, 2097,
	1702, 2097, 1002, 1003, 1004, 1001, 3244, 1980, 1981, 1004,
	1001, 1856, 1857, 2787, 1001, 1923, 3049, 1983, 1984, 461,
	461, 3048, 2259, 1539, 2546, 1539, 2409, 937, 589, 1002,
	1003, 1004, 1001, 1251, 476, 2408, 1944, 1945, 2785, 1947,
	1917, 1919, 1920, 1539, 1539, 2391, 2389, 1954, 3028, 476,
	2994, 2995, 1963, 1964, 1965, 937, 2166, 471, 1934, 3369,
	590, 1289, 1505, 1702, 3395, 2118, 2171, 3383, 2173, 1982,
	2989, 3338, 191, 2839, 1988, 1288, 1506, 1989, 1002, 1003,
	1004, 1001, 2039, 1070, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2101, 2459, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 3333, 2062, 2063, 2064, 2065, 2066,
	2099, 2067, 2103, 1992, 2000, 1995, 1979, 1999, 1049, 2110,
	3368, 2111, 2220, 1946, 3267, 1829, 2990, 2013, 2014, 2840,
	2019, 1048, 1251, 1990, 1251, 3235, 1251, 2457, 3206, 2115,
	2116, 937, 1002, 1003, 1004, 1001, 3146, 2177, 2458, 2239,
	2455, 2444, 3139, 2186, 2170, 2263, 2264, 1002, 1003, 1004,
	1001, 3080, 2125, 3023, 3022, 1294, 2230, 2168, 2076, 1002,
	1003, 1004, 1001, 1251, 2266, 2867, 2175, 2838, 2249, 2664,
	828, 2566, 2248, 830, 2541, 2105, 2216, 2217, 2540, 2273,
	2442, 2267, 2268, 2456, 1251, 1002, 1003, 1004, 1001, 2270,
	2271, 2265, 3268, 2275, 2178, 1249, 2454, 2443, 2441, 2119,
	1257, 2122, 2276, 2440, 1002, 1003, 1004, 1001, 2600, 2432,
	2426, 2425, 2274, 1295, 2424, 1743, 1249, 2423, 1002, 1003,
	1004, 1001, 831, 2307, 1925, 1790, 1539, 3196, 2169, 1789,
	937, 1788, 1784, 2277, 937, 2167, 3213, 476, 1783, 1987,
	1741, 1071, 1884, 1251, 1740, 1739, 2338, 2272, 1002, 1003,
	1004, 1001, 1564, 1002, 1003, 1004, 1001, 1354, 1121, 2361,
	545, 2340, 2236, 547, 2846, 2367, 2474, 2599, 546, 2131,
	2650, 2231, 2972, 3356, 2212, 3300, 3298, 2245, 2955, 3295,
	3192, 2998, 2377, 2223, 2221, 3177, 3166, 3150, 2298, 937,
	2371, 2372, 2228, 1002, 1003, 1004, 1001, 2388, 1002, 1003,
	1004, 1001, 2251, 2251, 937, 937, 937, 1621, 1883, 3145,
	937, 3144, 2399, 2400, 2401, 937, 3118, 2405, 2406, 3116,
	2407, 2241, 2242, 3081, 3030, 3007, 2256, 2953, 2951, 2351,
	2254, 2930, 2963, 2350, 1002, 1003, 1004, 1001, 1876, 1002,
	1003, 1004, 1001, 2097, 1025, 1026, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1017, 2927, 2234, 2925, 2460, 1002, 1003,
	1004, 1001, 2464, 2368, 2962, 461, 2837, 2836, 2833, 1640,
	1564, 937, 1702, 1702, 1702, 1702, 2327, 2816, 2751, 2747,
	2370, 2913, 2738, 937, 1702, 2373, 3209, 2097, 1176, 2737,
	1002, 1003, 1004, 1001, 2673, 2316, 2634, 2386, 2282, 2283,
	2358, 2386, 2336, 1251, 2288, 2382, 2633, 1002, 1003, 1004,
	1001, 2632, 1929, 2321, 476, 476, 2580, 2360, 2577, 2366,
	2393, 2317, 2539, 2513, 2322, 8, 2244, 2379, 1870, 7,
	1002, 1003, 1004, 1001, 2453, 2359, 2445, 2435, 2378, 2433,
	2429, 2376, 2381, 2428, 2813, 2427, 2384, 2213, 1792, 2390,
	1786, 2603, 642, 641, 2315, 1549, 3095, 2495, 2131, 2397,
	1548, 2415, 2416, 1355, 2602, 1392, 1078, 1074, 1073, 191,
	1002, 1003, 1004, 1001, 191, 2430, 2431, 1002, 1003, 1004,
	1001, 2984, 2434, 925, 709, 2973, 2860, 2533, 2859, 2535,
	1002, 1003, 1004, 1001, 2858, 1501, 2824, 1501, 2820, 2466,
	2556, 2815, 1002, 1003, 1004, 1001, 2800, 1539, 2790, 2565,
	2789, 2465, 1539, 2775, 2601, 1251, 1231, 1233, 2572, 1816,
	2483, 2484, 2485, 2486, 2470, 2774, 2498, 2699, 2494, 2394,
	2395, 2496, 2637, 174, 2398, 163, 138, 2627, 2605, 2404,
	1002, 1003, 1004, 1001, 2530, 2598, 2514, 2590, 2511, 2534,
	2589, 2584, 2296, 2522, 2583, 2313, 2295, 2387, 2193, 2189,
	2188, 1321, 1322, 1908, 2524, 1901, 1896, 1894, 2507, 1538,
	1890, 2497, 1889, 1887, 2555, 1878, 1875, 2604, 1002, 1003,
	1004, 1001, 1002, 1003, 1004, 1001, 1568, 1874, 1791, 1534,
	2517, 2518, 1329, 1533, 2593, 2482, 2595, 1326, 1532, 2553,
	1330, 2528, 168, 3408, 2532, 2559, 2369, 2482, 1504, 937,
	1503, 2569, 2294, 2531, 2574, 2374, 2375, 1869, 2653, 2551,
	1494, 1314, 2293, 2547, 2552, 1263, 2558, 2549, 2668, 2562,
	2560, 1315, 1316, 476, 2561, 2554, 2243, 1261, 1002, 1003,
	1004, 1001, 3365, 2682, 937, 937, 937, 2568, 1002, 1003,
	1004, 1001, 3359, 1702, 1971, 2581, 2697, 2582, 174, 3345,
	1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1017, 2588, 2594, 2292, 3342, 2711, 3340, 2714, 3234,
	2714, 2714, 2596, 2597, 2291, 937, 1068, 2629, 2676, 2290,
	3163, 1002, 1003, 1004, 1001, 3152, 3147, 2718, 1309, 2733,
	1002, 1003, 1004, 1001, 3062, 3047, 1251, 1251, 3043, 2938,
	1002, 1003, 1004, 1001, 2730, 1002, 1003, 1004, 1001, 2732,
	2631, 2350, 2936, 2911, 2635, 2910, 831, 168, 2907, 2906,
	2849, 2647, 2646, 831, 2734, 2735, 1320, 1311, 1249, 1249,
	2684, 2685, 2686, 1325, 2695, 2591, 2592, 2669, 2636, 1328,
	1317, 1160, 476, 2461, 2675, 2392, 2355, 2653, 2354, 2353,
	2696, 2352, 2692, 2710, 2297, 2202, 2113, 2700, 1564, 1564,
	2719, 2068, 2701, 2702, 2610, 2611, 1972, 1943, 2704, 2289,
	2612, 2613, 2614, 2615, 2286, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2285, 1924, 1434, 2705, 2284, 594, 117,
	168, 2720, 2715, 2716, 117, 1002, 1003, 1004, 1001, 2674,
	1002, 1003, 1004, 1001, 937, 1754, 2709, 1557, 2266, 1002,
	1003, 1004, 1001, 1002, 1003, 1004, 1001, 2788, 1545, 1513,
	1514, 1515, 1377, 1341, 1519, 1520, 1521, 1522, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1318, 1120, 1105, 1101,
	1100, 1099, 3225, 2278, 482, 1098, 1097, 117, 2744, 2269,
	3223, 3384, 2749, 1096, 2743, 2739, 2748, 2753, 2754, 476,
	1095, 1094, 2468, 509, 2764, 1093, 2746, 1092, 2755, 1002,
	1003, 1004, 1001, 1091, 1090, 1002, 1003, 1004, 1001, 2768,
	1089, 1088, 1087, 2767, 1086, 1085, 1084, 2771, 2772, 2773,
	1083, 1082, 1081, 831, 1077, 2812, 1076, 2777, 1075, 1072,
	1065, 1064, 2814, 2783, 1016, 1015, 1025, 1026, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1017, 1062, 1061, 1743, 2246,
	1060, 1059, 1058, 2819, 1444, 1057, 1056, 2829, 937, 1055,
	1054, 2803, 1053, 2717, 2801, 1052, 1051, 1046, 1045, 1044,
	967, 2802, 2807, 2806, 923, 1002, 1003, 1004, 1001, 2817,
	1002, 1003, 1004, 1001, 2760, 2761, 3221, 829, 3219, 2908,
	2853, 1977, 1959, 955, 117, 3316, 2080, 3314, 3273, 2763,
	2342, 2124, 1794, 2097, 1702, 2870, 966, 2491, 850, 117,
	2766, 117, 2492, 2765, 2085, 2088, 2089, 2090, 2086, 937,
	2087, 2091, 2489, 2703, 2488, 2487, 1154, 2490, 2711, 3394,
	2211, 2821, 937, 2085, 2088, 2089, 2090, 2086, 2940, 2087,
	2091, 2493, 937, 2089, 2090, 2941, 2205, 1251, 1585, 1586,
	1580, 1581, 1582, 473, 2831, 102, 54, 2671, 2131, 2707,
	2564, 2708, 53, 1564, 2037, 2809, 2918, 937, 2844, 2804,
	2805, 1539, 2778, 1676, 2823, 2922, 1303, 2872, 2200, 1249,
	2235, 2826, 1539, 2411, 2832, 2935, 2905, 1350, 2937, 1335,
	2412, 2413, 2414, 1950, 2939, 2869, 191, 2216, 2217, 1756,
	2875, 961, 2898, 2648, 2645, 2943, 477, 2638, 2380, 937,
	2932, 478, 479, 2871, 2868, 2912, 2917, 2914, 480, 1994,
	1967, 2874, 1589, 2850, 2851, 2852, 2920, 1556, 2944, 2856,
	2857, 1490, 1489, 2924, 3286, 2926, 937, 3149, 2929, 2736,
	2931, 1116, 1117, 2077, 2934, 2942, 2933, 1114, 1115, 2073,
	845, 840, 835, 839, 843, 1112, 1113, 1110, 1111, 1687,
	937, 1251, 1251, 1212, 1211, 2971, 2682, 2928, 993, 2770,
	3013, 2946, 3013, 2516, 1818, 1165, 1146, 1188, 848, 3360,
	2978, 831, 838, 2956, 3259, 3241, 3239, 2957, 831, 3003,
	3199, 831, 3176, 1249, 3005, 3175, 3173, 1251, 3164, 3075,
	3029, 3074, 2952, 2818, 2797, 2796, 2781, 2024, 2979, 1352,
	2780, 2526, 1593, 2985, 2567, 476, 1961, 937, 937, 3318,
	3317, 937, 937, 3009, 3010, 1877, 952, 3317, 3318, 3005,
	3045, 2776, 1180, 846, 3065, 934, 3017, 3008, 3016, 62,
	849, 178, 3, 2876, 2, 3059, 3064, 1591, 3330, 3072,
	2872, 3027, 3331, 3026, 1, 2905, 2915, 836, 3076, 3077,
	2299, 3031, 1543, 3051, 3052, 1118, 2404, 3060, 3061, 704,
	3069, 2898, 699, 1228, 2106, 2975, 2982, 2983, 1734, 1255,
	847, 1547, 706, 2500, 2501, 2769, 3024, 3025, 2503, 1836,
	2471, 2482, 2829, 2071, 1948, 3101, 2667, 700, 701, 702,
	703, 3068, 934, 3363, 3070, 1155, 746, 1496, 117, 117,
	829, 1362, 852, 946, 1359, 945, 943, 1446, 596, 1797,
	837, 2462, 2436, 3083, 3129, 3071, 3285, 3125, 3324, 3096,
	3233, 2964, 3100, 2482, 3288, 1375, 580, 3167, 3086, 3237,
	3113, 3110, 3088, 2959, 1841, 998, 2548, 768, 633, 3111,
	3112, 607, 1063, 1343, 1336, 3124, 1016, 1015, 1025, 1026,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 3066, 2608,
	3132, 854, 3130, 937, 606, 3131, 2843, 1251, 2332, 3140,
	2519, 1033, 3133, 851, 3001, 769, 1781, 3084, 1304, 1308,
	1993, 3050, 3141, 3404, 3361, 3393, 844, 3148, 3375, 3358,
	3264, 3389, 3304, 3343, 2967, 3158, 2965, 2966, 3336, 1249,
	3260, 516, 1713, 459, 813, 3063, 1793, 3188, 517, 3157,
	1976, 3252, 3151, 727, 1958, 3182, 728, 720, 2348, 2347,
	1050, 1415, 3165, 841, 937, 842, 3172, 3170, 1007, 1432,
	3200, 3001, 3001, 2624, 2625, 3001, 3001, 1016, 1015, 1025,
	1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 3195,
	1042, 555, 1865, 937, 2329, 2893, 3191, 2512, 3194, 61,
	1251, 60, 3210, 3228, 3231, 59, 3202, 58, 3207, 1763,
	199, 598, 198, 3218, 3220, 3222, 3224, 2996, 3230, 3211,
	3290, 578, 577, 576, 575, 574, 3232, 2084, 3227, 2082,
	2081, 1697, 1249, 1696, 1761, 3240, 3236, 3242, 3243, 3217,
	3238, 2680, 1251, 2402, 3159, 2396, 2020, 1109, 2025, 1629,
	3270, 3214, 3215, 3269, 3042, 2606, 1002, 1003, 1004, 1001,
	2446, 3258, 1579, 2016, 1646, 2418, 1643, 1642, 2410, 3038,
	3266, 3032, 1673, 2827, 1249, 3292, 3012, 2877, 756, 2878,
	2884, 1966, 877, 873, 875, 3278, 876, 3279, 3291, 3280,
	3282, 3281, 874, 2255, 1997, 2640, 1939, 1938, 1936, 1935,
	937, 1129, 3182, 3296, 3187, 3297, 3248, 3201, 1016, 1015,
	1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017,
	2974, 2129, 2127, 2762, 2758, 3323, 3212, 3001, 1805, 3315,
	3313, 3312, 1814, 3307, 3309, 1474, 2563, 3326, 3319, 3320,
	3321, 3322, 3334, 1698, 937, 1694, 1960, 755, 3107, 1584,
	721, 1956, 3335, 99, 3339, 152, 3341, 795, 48, 89,
	88, 98, 150, 47, 183, 182, 185, 184, 181, 3292,
	3355, 3351, 2179, 2180, 180, 1292, 1260, 895, 179, 3015,
	482, 937, 3291, 937, 3354, 694, 38, 37, 3001, 3362,
	33, 3364, 12, 3367, 11, 34, 21, 22, 20, 1366,
	19, 25, 31, 3326, 3371, 30, 937, 110, 3373, 109,
	3378, 117, 29, 108, 3382, 3385, 1474, 3001, 3388, 107,
	106, 105, 1213, 1214, 104, 1216, 28, 1220, 1221, 1222,
	3299, 18, 42, 3392, 41, 3399, 40, 9, 97, 3403,
	797, 3402, 95, 796, 27, 96, 93, 3411, 94, 92,
	90, 73, 72, 3399, 3416, 3415, 71, 86, 3403, 1267,
	1268, 1269, 1270, 1271, 85, 1273, 1274, 1275, 1276, 1277,
	84, 83, 82, 1283, 1284, 117, 81, 79, 80, 117,
	781, 767, 70, 69, 68, 3414, 67, 66, 757, 91,
	3417, 117, 77, 1470, 87, 78, 76, 881, 75, 1467,
	74, 117, 65, 1469, 1466, 1468, 1472, 1473, 64, 63,
	136, 1471, 135, 134, 133, 759, 132, 903, 907, 909,
	911, 913, 914, 916, 3302, 921, 917, 918, 919, 920,
	130, 898, 899, 900, 901, 879, 880, 904, 131, 882,
	129, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	894, 896, 892, 893, 902, 128, 127, 126, 125, 124,
	43, 44, 906, 908, 910, 912, 915, 45, 1398, 46,
	146, 145, 147, 149, 1470, 151, 148, 153, 780, 779,
	1467, 143, 141, 144, 1469, 1466, 1468, 1472, 1473, 142,
	140, 56, 1471, 100, 17, 778, 24, 4, 0, 0,
	897, 0, 0, 0, 0, 1398, 754, 1398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 758, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1398, 0, 0, 0, 0, 0, 895, 0, 1863, 0,
	0, 786, 0, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1477, 1478, 1479, 1480, 1481, 1482,
	1475, 1476, 1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1017, 0, 0, 0, 787, 791, 1016,
	1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1017, 0, 0, 0, 0, 0, 775, 0, 773, 777,
	794, 0, 0, 0, 774, 771, 770, 0, 776, 761,
	762, 760, 763, 764, 765, 766, 0, 792, 0, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	788, 789, 0, 2252, 2253, 1477, 1478, 1479, 1480, 1481,
	1482, 1475, 1476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 0,
	871, 0, 0, 0, 0, 0, 0, 784, 0, 0,
	0, 0, 1701, 783, 0, 0, 903, 907, 909, 911,
	913, 914, 916, 0, 921, 917, 918, 919, 920, 0,
	898, 899, 900, 901, 879, 880, 904, 0, 882, 0,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 894,
	896, 892, 893, 902, 0, 0, 0, 0, 0, 0,
	0, 906, 908, 910, 912, 915, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	1032, 0, 0, 0, 117, 0, 0, 117, 117, 0,
	117, 0, 0, 0, 0, 782, 1029, 1031, 1027, 897,
	1030, 1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1017, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 829, 614,
	0, 0, 0, 0, 0, 829, 1748, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 569, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 0, 454, 0, 0, 605, 0, 458, 379,
	332, 0, 0, 0, 0, 665, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 0, 0,
	595, 642, 641, 582, 592, 0, 0, 266, 197, 455,
	0, 456, 583, 0, 591, 584, 588, 587, 585, 586,
	0, 657, 0, 1033, 0, 0, 0, 0, 553, 566,
	0, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 0, 0, 0,
	0, 615, 0, 565, 0, 0, 610, 589, 593, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 590,
	613, 617, 285, 679, 611, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	680, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 0, 0, 411, 0, 0, 663, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 612,
	0, 369, 350, 676, 554, 905, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 1498, 1497, 1499, 423, 298, 248, 249,
	468, 661, 346, 0, 0, 0, 0, 675, 656, 658,
	659, 662, 666, 667, 668, 669, 670, 672, 674, 678,
	467, 0, 0, 0, 0, 0, 464, 352, 2100, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 616, 0, 0, 336, 337, 338, 339, 664, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 686, 660, 685, 687,
	688, 684, 689, 690, 671, 573, 0, 620, 682, 681,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 649, 626, 627, 628, 571, 629, 623, 624,
	625, 650, 618, 646, 647, 597, 621, 630, 645, 631,
	648, 651, 652, 691, 692, 637, 693, 634, 653, 644,
	643, 632, 619, 654, 655, 604, 599, 635, 636, 622,
	638, 639, 640, 572, 600, 601, 602, 603, 0, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 117, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 291,
	1540, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 454, 0, 0,
	605, 0, 458, 379, 332, 0, 0, 0, 0, 665,
	673, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 562, 0, 0, 595, 642, 641, 582, 592, 0,
	0, 266, 197, 455, 0, 456, 583, 0, 591, 584,
	588, 587, 585, 586, 0, 657, 0, 0, 0, 0,
	0, 0, 553, 566, 0, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 1701, 1701, 1701, 0, 0, 0, 0, 0, 563,
	564, 0, 1701, 0, 0, 615, 0, 565, 0, 0,
	1726, 589, 593, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 590, 613, 617, 285, 679, 611, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 680, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 117, 0, 0, 608, 0, 0, 0, 411,
	0, 0, 663, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 117, 612, 0, 369, 350, 676, 554, 117,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 661, 346, 0, 0, 0,
	0, 675, 656, 658, 659, 662, 666, 667, 668, 669,
	670, 672, 674, 678, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 415,
	0, 1701, 0, 0, 0, 616, 0, 0, 336, 337,
	338, 339, 664, 0, 271, 434, 362, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	686, 660, 685, 687, 688, 684, 689, 690, 671, 573,
	0, 620, 682, 681, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 649, 626, 627, 628,
	571, 629, 623, 624, 625, 650, 618, 646, 647, 597,
	621, 630, 645, 631, 648, 651, 652, 691, 692, 637,
	693, 634, 653, 644, 643, 632, 619, 654, 655, 604,
	599, 635, 636, 622, 638, 639, 640, 572, 600, 601,
	602, 603, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 454, 0, 0, 1036, 0, 458, 379, 332,
	0, 0, 0, 0, 665, 673, 0, 117, 0, 0,
	0, 0, 0, 0, 117, 0, 562, 117, 0, 595,
	642, 641, 582, 592, 0, 0, 266, 197, 455, 0,
	456, 583, 0, 591, 584, 588, 587, 585, 586, 0,
	657, 0, 0, 0, 0, 0, 0, 553, 566, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 0, 0, 0, 0,
	615, 0, 565, 0, 0, 610, 589, 593, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 590, 613,
	617, 285, 679, 611, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 680,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 117, 437, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 0, 0, 0, 411, 0, 0, 663, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 612, 0,
	369, 350, 676, 554, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 439, 444, 445, 446,
	448, 449, 450, 451, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 468,
	661, 346, 0, 0, 0, 0, 675, 656, 658, 659,
	662, 666, 667, 668, 669, 670, 672, 674, 678, 467,
	0, 0, 0, 0, 0, 464, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	616, 0, 0, 336, 337, 338, 339, 664, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 447, 305, 270, 351, 299, 413,
	312, 0, 440, 0, 441, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 686, 660, 685, 687, 688,
	684, 689, 690, 671, 573, 0, 620, 682, 681, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 465, 462,
	394, 466, 0, 250, 0, 319, 139, 360, 296, 0,
	0, 649, 626, 627, 628, 571, 629, 623, 624, 625,
	650, 618, 646, 647, 597, 621, 630, 645, 631, 648,
	651, 652, 691, 692, 637, 693, 634, 653, 644, 643,
	632, 619, 654, 655, 604, 599, 635, 636, 622, 638,
	639, 640, 572, 600, 601, 602, 603, 0, 614, 0,
	419, 420, 421, 443, 405, 0, 463, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 0, 469, 457, 291, 3372, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 454, 0, 0, 605, 0, 458, 379, 332,
	0, 0, 0, 0, 665, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 595,
	642, 641, 582, 592, 0, 0, 266, 197, 455, 0,
	456, 583, 0, 591, 584, 588, 587, 585, 586, 0,
	657, 0, 0, 0, 0, 0, 0, 553, 566, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 0, 0, 0, 0,
	615, 0, 565, 0, 0, 610, 589, 593, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 590, 613,
	617, 285, 679, 611, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 680,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 0, 0, 0, 411, 0, 0, 663, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 612, 0,
	369, 350, 676, 554, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 439, 444, 445, 446,
	448, 449, 450, 451, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 468,
	661, 346, 0, 0, 0, 0, 675, 656, 658, 659,
	662, 666, 667, 668, 669, 670, 672, 674, 678, 467,
	0, 0, 0, 0, 0, 464, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	616, 0, 0, 336, 337, 338, 339, 664, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 447, 305, 270, 351, 299, 413,
	312, 0, 440, 0, 441, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 686, 660, 685, 687, 688,
	684, 689, 690, 671, 573, 0, 620, 682, 681, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 465, 462,
	394, 466, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 649, 626, 627, 628, 571, 629, 623, 624, 625,
	650, 618, 646, 647, 597, 621, 630, 645, 631, 648,
	651, 652, 691, 692, 637, 693, 634, 653, 644, 643,
	632, 619, 654, 655, 604, 599, 635, 636, 622, 638,
	639, 640, 572, 600, 601, 602, 603, 0, 614, 0,
	419, 420, 421, 443, 405, 0, 463, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 0, 469, 457, 291, 1540, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 454, 0, 0, 605, 0, 458, 379, 332,
	0, 0, 0, 0, 665, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 595,
	642, 641, 582, 592, 0, 0, 266, 197, 455, 0,
	456, 583, 0, 591, 584, 588, 587, 585, 586, 0,
	657, 0, 0, 0, 0, 0, 0, 553, 566, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 0, 0, 0, 0,
	615, 0, 565, 0, 0, 610, 589, 593, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 590, 613,
	617, 285, 679, 611, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 680,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 0, 0, 0, 411, 0, 0, 663, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 612, 0,
	369, 350, 676, 554, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 439, 444, 445, 446,
	448, 449, 450, 451, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 468,
	661, 346, 0, 0, 0, 0, 675, 656, 658, 659,
	662, 666, 667, 668, 669, 670, 672, 674, 678, 467,
	0, 0, 0, 0, 0, 464, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	616, 0, 0, 336, 337, 338, 339, 664, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 447, 305, 270, 351, 299, 413,
	312, 0, 440, 0, 441, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 686, 660, 685, 687, 688,
	684, 689, 690, 671, 573, 0, 620, 682, 681, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 465, 462,
	394, 466, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 649, 626, 627, 628, 571, 629, 623, 624, 625,
	650, 618, 646, 647, 597, 621, 630, 645, 631, 648,
	651, 652, 691, 692, 637, 693, 634, 653, 644, 643,
	632, 619, 654, 655, 604, 599, 635, 636, 622, 638,
	639, 640, 572, 600, 601, 602, 603, 0, 614, 0,
	419, 420, 421, 443, 405, 0, 463, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 0, 469, 457, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 454, 0, 0, 605, 0, 458, 379, 332,
	0, 0, 0, 0, 665, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 595,
	642, 641, 582, 592, 0, 0, 266, 197, 455, 0,
	456, 583, 0, 591, 584, 588, 587, 585, 586, 0,
	657, 0, 0, 0, 0, 0, 0, 553, 566, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 1287, 0, 0, 0,
	615, 0, 565, 0, 0, 610, 589, 593, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 590, 613,
	617, 285, 679, 611, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 680,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 0, 0, 0, 411, 0, 0, 663, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 612, 0,
	369, 350, 676, 554, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 439, 444, 445, 446,
	448, 449, 450, 451, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 468,
	661, 346, 0, 0, 0, 0, 675, 656, 658, 659,
	662, 666, 667, 668, 669, 670, 672, 674, 678, 467,
	0, 0, 0, 0, 0, 464, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	616, 0, 0, 336, 337, 338, 339, 664, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 447, 305, 270, 351, 299, 413,
	312, 0, 440, 0, 441, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 686, 660, 685, 687, 688,
	684, 689, 690, 671, 573, 0, 620, 682, 681, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 465, 462,
	394, 466, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 649, 626, 627, 628, 571, 629, 623, 624, 625,
	650, 618, 646, 647, 597, 621, 630, 645, 631, 648,
	651, 652, 691, 692, 637, 693, 634, 653, 644, 643,
	632, 619, 654, 655, 604, 599, 635, 636, 622, 638,
	639, 640, 572, 600, 601, 602, 603, 0, 0, 0,
	419, 420, 421, 443, 405, 614, 463, 0, 1885, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 469, 457, 0, 0, 0, 569, 0, 0,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 454,
	0, 0, 605, 0, 458, 379, 332, 0, 0, 0,
	0, 665, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 595, 642, 641, 582,
	592, 0, 0, 266, 197, 455, 0, 456, 583, 0,
	591, 584, 588, 587, 585, 586, 0, 657, 0, 0,
	0, 0, 0, 0, 553, 566, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 0, 0, 0, 0, 615, 0, 565,
	0, 0, 610, 589, 593, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 590, 613, 617, 285, 679,
	611, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 680, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 411, 0, 0, 663, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 612, 0, 369, 350, 676,
	554, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 661, 346, 0,
	0, 0, 0, 675, 656, 658, 659, 662, 666, 667,
	668, 669, 670, 672, 674, 678, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 616, 0, 0,
	336, 337, 338, 339, 664, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 686, 660, 685, 687, 688, 684, 689, 690,
	671, 573, 0, 620, 682, 681, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 649, 626,
	627, 628, 571, 629, 623, 624, 625, 650, 618, 646,
	647, 597, 621, 630, 645, 631, 648, 651, 652, 691,
	692, 637, 693, 634, 653, 644, 643, 632, 619, 654,
	655, 604, 599, 635, 636, 622, 638, 639, 640, 572,
	600, 601, 602, 603, 0, 614, 0, 419, 420, 421,
	443, 405, 0, 463, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 469,
	457, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 454,
	0, 0, 605, 0, 458, 379, 332, 0, 0, 0,
	0, 665, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 595, 642, 641, 582,
	592, 0, 0, 266, 197, 455, 0, 456, 583, 0,
	591, 584, 588, 587, 585, 586, 0, 657, 0, 0,
	0, 0, 0, 0, 553, 566, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 0, 0, 0, 0, 615, 0, 565,
	0, 0, 610, 589, 593, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 590, 613, 617, 285, 679,
	611, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 680, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 411, 0, 0, 663, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 612, 0, 369, 350, 676,
	554, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 661, 346, 0,
	0, 0, 0, 675, 656, 658, 659, 662, 666, 667,
	668, 669, 670, 672, 674, 678, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 616, 0, 0,
	336, 337, 338, 339, 664, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 686, 660, 685, 687, 688, 684, 689, 690,
	671, 573, 0, 620, 682, 681, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 649, 626,
	627, 628, 571, 629, 623, 624, 625, 650, 618, 646,
	647, 597, 621, 630, 645, 631, 648, 651, 652, 691,
	692, 637, 693, 634, 653, 644, 643, 632, 619, 654,
	655, 604, 599, 635, 636, 622, 638, 639, 640, 572,
	600, 601, 602, 603, 0, 614, 0, 419, 420, 421,
	443, 405, 0, 463, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 569, 0, 469,
	457, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 454,
	0, 0, 605, 0, 458, 379, 332, 0, 0, 0,
	0, 665, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 595, 642, 641, 582,
	592, 0, 0, 266, 197, 455, 0, 456, 583, 0,
	591, 584, 588, 587, 585, 586, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 566, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 0, 0, 0, 0, 615, 0, 565,
	0, 0, 610, 589, 593, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 590, 613, 617, 285, 679,
	611, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 680, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 411, 0, 0, 663, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 612, 0, 369, 350, 676,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 1417, 1418, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 661, 346, 0,
	0, 0, 0, 675, 656, 658, 659, 662, 666, 667,
	668, 669, 670, 672, 674, 678, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 616, 0, 0,
	336, 337, 338, 339, 664, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 686, 660, 685, 687, 688, 684, 689, 690,
	671, 573, 0, 620, 682, 681, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 649, 626,
	627, 628, 571, 629, 623, 624, 625, 650, 618, 646,
	647, 597, 621, 630, 645, 631, 648, 651, 652, 691,
	692, 637, 693, 634, 653, 644, 643, 632, 619, 654,
	655, 604, 599, 635, 636, 622, 638, 639, 640, 572,
	600, 601, 602, 603, 0, 614, 0, 419, 420, 421,
	443, 405, 0, 463, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 469,
	457, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 454,
	0, 0, 605, 0, 458, 379, 332, 0, 0, 0,
	0, 665, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 642, 641, 582,
	592, 0, 0, 266, 197, 455, 0, 456, 583, 0,
	591, 584, 588, 587, 585, 586, 0, 657, 0, 0,
	0, 0, 0, 0, 553, 566, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 0, 0, 0, 0, 615, 0, 565,
	0, 0, 610, 589, 593, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 590, 613, 617, 285, 679,
	611, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 680, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 411, 0, 0, 663, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 612, 0, 369, 350, 676,
	554, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 661, 346, 0,
	0, 0, 0, 675, 656, 658, 659, 662, 666, 667,
	668, 669, 670, 672, 674, 678, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 616, 0, 0,
	336, 337, 338, 339, 664, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 686, 660, 685, 687, 688, 684, 689, 690,
	671, 573, 0, 620, 682, 681, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 649, 626,
	627, 628, 571, 629, 623, 624, 625, 650, 618, 646,
	647, 597, 621, 630, 645, 631, 648, 651, 652, 691,
	692, 637, 693, 634, 653, 644, 643, 632, 619, 654,
	655, 604, 599, 635, 636, 622, 638, 639, 640, 572,
	600, 601, 602, 603, 0, 614, 0, 419, 420, 421,
	443, 405, 0, 463, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 469,
	457, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 454,
	0, 0, 605, 0, 458, 379, 332, 0, 0, 0,
	0, 665, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 595, 642, 641, 582,
	592, 0, 0, 266, 197, 455, 0, 456, 583, 0,
	591, 584, 588, 587, 585, 586, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 566, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 0, 0, 0, 0, 615, 0, 565,
	0, 0, 610, 589, 593, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 590, 613, 617, 285, 679,
	611, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 680, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 411, 0, 0, 663, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 612, 0, 369, 350, 676,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 661, 346, 0,
	0, 0, 0, 675, 656, 658, 659, 662, 666, 667,
	668, 669, 670, 672, 674, 678, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 616, 0, 0,
	336, 337, 338, 339, 664, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 686, 660, 685, 687, 688, 684, 689, 690,
	671, 573, 0, 620, 682, 681, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 649, 626,
	627, 628, 571, 629, 623, 624, 625, 650, 618, 646,
	647, 597, 621, 630, 645, 631, 648, 651, 652, 691,
	692, 637, 693, 634, 653, 644, 643, 632, 619, 654,
	655, 604, 599, 635, 636, 622, 638, 639, 640, 572,
	600, 601, 602, 603, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 174, 51, 163, 138, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 469,
	457, 0, 164, 0, 0, 0, 0, 0, 0, 156,
	0, 291, 0, 165, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 454,
	0, 0, 115, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 168, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	137, 162, 172, 0, 101, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 189, 0, 0, 0, 383, 0,
	0, 317, 161, 155, 154, 427, 0, 369, 350, 57,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	157, 158, 159, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 406, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 192, 0, 0, 452, 200, 0, 0, 0,
	160, 0, 201, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 361, 261, 394, 372, 0,
	250, 0, 319, 139, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 0, 247,
	242, 243, 244, 245, 0, 348, 0, 419, 420, 421,
	443, 405, 0, 202, 39, 190, 193, 195, 194, 0,
	49, 0, 291, 0, 5, 318, 0, 0, 118, 203,
	457, 0, 0, 0, 0, 0, 0, 0, 453, 0,
	454, 0, 0, 0, 0, 458, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1069, 0, 0, 196, 0, 0,
	582, 592, 0, 0, 266, 197, 455, 0, 456, 583,
	0, 591, 584, 588, 587, 585, 586, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 590, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 442, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 439, 444, 445, 446, 448, 449,
	450, 451, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 468, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 452, 467, 0, 0,
	0, 0, 0, 464, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 447, 305, 270, 351, 299, 413, 312, 0,
	440, 0, 441, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 465, 462, 394, 466,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 443, 405, 0, 463, 174, 51, 163, 138, 0,
	0, 0, 0, 0, 0, 348, 486, 0, 0, 0,
	469, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 453, 0,
	454, 0, 0, 0, 0, 458, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 455, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 442, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 439, 444, 445, 446, 448, 449,
	450, 451, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 468, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 452, 467, 0, 0,
	0, 0, 0, 464, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 487, 489, 271, 434, 362,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 447, 305, 270, 351, 299, 413, 312, 0,
	440, 0, 441, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 465, 462, 394, 466,
	0, 250, 0, 319, 139, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 348,
	247, 242, 243, 244, 245, 0, 0, 895, 419, 420,
	421, 443, 405, 0, 463, 0, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 457, 453, 0, 454, 0, 0, 0, 0, 458,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	455, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 2153, 2155, 2156,
	2157, 2158, 2159, 2160, 0, 2165, 2161, 2162, 2163, 2164,
	0, 2148, 2149, 2150, 2151, 879, 2132, 2154, 0, 2133,
	344, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2145, 2146, 2143, 2144, 2152, 356, 322, 357, 307, 334,
	333, 335, 906, 908, 910, 912, 915, 437, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	2147, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 439, 444,
	445, 446, 448, 449, 450, 451, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 468, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	452, 467, 0, 0, 0, 0, 0, 464, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 447, 305, 270, 351,
	299, 413, 312, 0, 440, 0, 441, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	465, 462, 394, 466, 0, 250, 905, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 0, 348, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 443, 405, 0, 463, 0,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 457, 453, 0, 454, 0,
	0, 0, 0, 458, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 455, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 2008, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 442, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	411, 0, 0, 0, 2007, 0, 2006, 383, 2004, 2009,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 2010, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 439, 444, 445, 446, 448, 449, 450, 451,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 468, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 452, 467, 0, 0, 0, 0,
	0, 464, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	447, 305, 270, 351, 299, 413, 312, 0, 440, 0,
	441, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 465, 462, 394, 466, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 348, 0, 0, 419, 420, 421, 443,
	405, 0, 463, 0, 0, 1765, 0, 0, 0, 0,
	291, 0, 0, 318, 0, 0, 0, 0, 469, 457,
	0, 0, 0, 0, 0, 0, 453, 0, 454, 0,
	0, 0, 0, 458, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1766, 0,
	0, 0, 266, 197, 455, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 1002,
	1003, 1004, 1001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 442, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 439, 444, 445, 446, 448, 449, 450, 451,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 468, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 452, 467, 0, 0, 0, 0,
	0, 464, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	447, 305, 270, 351, 299, 413, 312, 0, 440, 0,
	441, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 465, 462, 394, 466, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 348, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 443,
	405, 0, 463, 0, 291, 812, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 457,
	453, 0, 454, 0, 0, 0, 0, 458, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	819, 820, 0, 0, 0, 0, 266, 197, 455, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 807, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 797, 409, 260, 796, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 442,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 810, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 439, 444, 445, 446,
	448, 449, 450, 451, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 468,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 452, 467,
	0, 0, 0, 0, 0, 464, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 811, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	814, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 447, 305, 270, 351, 299, 413,
	312, 0, 440, 0, 441, 0, 0, 0, 0, 821,
	808, 817, 809, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 465, 462,
	394, 466, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 348, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 443, 405, 0, 463, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 457, 453, 0, 454, 0, 0, 0,
	0, 458, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 455, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 442, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 411, 0,
	0, 0, 2031, 2029, 0, 383, 0, 2030, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	439, 444, 445, 446, 448, 449, 450, 451, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 468, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 452, 467, 0, 0, 0, 0, 0, 464,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 447, 305,
	270, 351, 299, 413, 312, 0, 440, 0, 441, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 465, 462, 394, 466, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 174, 0, 0, 247, 242, 243, 244,
	245, 0, 0, 348, 419, 420, 421, 443, 405, 0,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 318, 0, 0, 469, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 454, 0,
	0, 115, 0, 458, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 1809, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 455, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 442, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 439, 444, 445, 446, 448, 449, 450, 451,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 468, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 452, 467, 0, 0, 0, 0,
	0, 464, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	447, 305, 270, 351, 299, 413, 312, 0, 440, 0,
	441, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 465, 462, 394, 466, 0, 250,
	0, 319, 139, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 174, 0, 0, 247, 242,
	243, 244, 245, 0, 0, 348, 419, 420, 421, 443,
	405, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 469, 457,
	0, 0, 0, 0, 0, 0, 0, 0, 453, 0,
	454, 0, 0, 115, 0, 458, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 1800, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 455, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 442, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 439, 444, 445, 446, 448, 449,
	450, 451, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 468, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 452, 467, 0, 0,
	0, 0, 0, 464, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 447, 305, 270, 351, 299, 413, 312, 0,
	440, 0, 441, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 465, 462, 394, 466,
	0, 250, 0, 319, 139, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 174, 0, 0,
	247, 242, 243, 244, 245, 0, 0, 348, 419, 420,
	421, 443, 405, 0, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 318, 0, 0,
	469, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 454, 0, 0, 115, 0, 458, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 455, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 442,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 439, 444, 445, 446,
	448, 449, 450, 451, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 468,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 452, 467,
	0, 0, 0, 0, 0, 464, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 447, 305, 270, 351, 299, 413,
	312, 0, 440, 0, 441, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 465, 462,
	394, 466, 0, 250, 0, 319, 139, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 348, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 443, 405, 0, 463, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 457, 453, 0, 454, 0, 0, 0,
	0, 458, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 819, 820, 0, 0, 0, 0,
	266, 197, 455, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 797, 409, 260,
	796, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 442, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	439, 444, 445, 446, 448, 449, 450, 451, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 468, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 452, 467, 0, 0, 0, 0, 0, 464,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 447, 305,
	270, 351, 299, 413, 312, 0, 440, 0, 441, 0,
	0, 0, 0, 821, 1718, 817, 1719, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 465, 462, 394, 466, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 0, 247, 242, 243, 244,
	245, 0, 348, 0, 419, 420, 421, 443, 405, 0,
	463, 2475, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 318, 0, 0, 0, 469, 457, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	2478, 0, 0, 2477, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 348, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 291, 1254, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 453,
	0, 454, 0, 0, 0, 0, 458, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1252, 0, 0, 0, 266, 197, 455, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 442, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 439, 444, 445, 446, 448,
	449, 450, 451, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 468, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 452, 467, 0,
	0, 0, 0, 0, 464, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 447, 305, 270, 351, 299, 413, 312,
	0, 440, 0, 441, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 465, 462, 394,
	466, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	348, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 443, 405, 0, 463, 0, 291, 1248, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 457, 453, 0, 454, 0, 0, 0, 0,
	458, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1252, 0, 0, 0, 266,
	197, 455, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 442, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 439,
	444, 445, 446, 448, 449, 450, 451, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 468, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 452, 467, 0, 0, 0, 0, 0, 464, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 447, 305, 270,
	351, 299, 413, 312, 0, 440, 0, 441, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 465, 462, 394, 466, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 348, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 443, 405, 0, 463,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 457, 453, 0, 454,
	0, 0, 0, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3287, 0, 196, 642, 0, 0,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 452, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	457, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1252, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 348, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1252, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3006, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 0, 247, 242, 243,
	244, 245, 348, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 0, 2096, 0, 0, 0, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 469, 457, 0,
	0, 0, 0, 0, 0, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 2098, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 348, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 291, 2117, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 453,
	0, 454, 0, 0, 0, 0, 458, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1252, 0, 0, 0, 266, 197, 455, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 442, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 439, 444, 445, 446, 448,
	449, 450, 451, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 468, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 452, 467, 0,
	0, 0, 0, 0, 464, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 447, 305, 270, 351, 299, 413, 312,
	0, 440, 0, 441, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 465, 462, 394,
	466, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	348, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 443, 405, 0, 463, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 457, 453, 0, 454, 0, 0, 0, 0,
	458, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3381, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 455, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 442, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 439,
	444, 445, 446, 448, 449, 450, 451, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 468, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 452, 467, 0, 0, 0, 0, 0, 464, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 447, 305, 270,
	351, 299, 413, 312, 0, 440, 0, 441, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 465, 462, 394, 466, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 348, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 443, 405, 0, 463,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 457, 453, 0, 454,
	0, 0, 0, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 642, 0, 0,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 452, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	457, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3303, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 348, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 3229, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 348, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 453,
	0, 454, 0, 0, 0, 0, 458, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3002, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 455, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 442, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 439, 444, 445, 446, 448,
	449, 450, 451, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 468, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 452, 467, 0,
	0, 0, 0, 0, 464, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 447, 305, 270, 351, 299, 413, 312,
	0, 440, 0, 441, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 465, 462, 394,
	466, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	348, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 443, 405, 0, 463, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 457, 453, 0, 454, 0, 0, 0, 0,
	458, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2830, 0, 0, 0, 266,
	197, 455, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 442, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 439,
	444, 445, 446, 448, 449, 450, 451, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 468, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 452, 467, 0, 0, 0, 0, 0, 464, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 447, 305, 270,
	351, 299, 413, 312, 0, 440, 0, 441, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 465, 462, 394, 466, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 348, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 443, 405, 0, 463,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 457, 453, 0, 454,
	0, 0, 0, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 3073, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 452, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	457, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2683, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 348, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 348, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 453,
	0, 454, 0, 0, 0, 0, 458, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 455, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 442, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 439, 444, 445, 446, 448,
	449, 450, 451, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 468, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 452, 467, 0,
	0, 0, 0, 0, 464, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 447, 305, 270, 351, 299, 413, 312,
	0, 440, 0, 441, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 465, 462, 394,
	466, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	348, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 443, 405, 0, 463, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 457, 453, 0, 454, 0, 0, 0, 0,
	458, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 455, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 442, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 439,
	444, 445, 446, 448, 449, 450, 451, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 468, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 452, 467, 0, 0, 0, 0, 0, 464, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 447, 305, 270,
	351, 299, 413, 312, 0, 440, 0, 441, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 465, 462, 394, 466, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 348, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 443, 405, 0, 463,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 457, 453, 0, 454,
	0, 0, 0, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2652,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 452, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	457, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 348, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1252, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 348, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 453,
	0, 454, 0, 0, 0, 0, 458, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 2098, 0, 0, 0, 266, 197, 455, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 442, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 439, 444, 445, 446, 448,
	449, 450, 451, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 468, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 452, 467, 0,
	0, 0, 0, 0, 464, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 447, 305, 270, 351, 299, 413, 312,
	0, 440, 0, 441, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 465, 462, 394,
	466, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	348, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 443, 405, 0, 463, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 457, 453, 0, 454, 0, 0, 0, 0,
	458, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 455, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 442, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 439,
	444, 445, 446, 448, 449, 450, 451, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 468, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 452, 467, 0, 0, 0, 0, 0, 464, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 447, 305, 270,
	351, 299, 413, 312, 0, 440, 0, 441, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 465, 462, 394, 466, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 348, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 443, 405, 0, 463,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 457, 453, 0, 454,
	0, 0, 0, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 452, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	457, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2172, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 1968, 247, 242, 243, 244, 245, 348, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 469, 457, 0, 0, 0, 0, 0,
	0, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 348, 247, 242, 243, 244, 245, 0, 0,
	1686, 419, 420, 421, 443, 405, 0, 463, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 348, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 0, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 453,
	0, 454, 0, 0, 0, 0, 458, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1252, 0, 0, 0, 266, 197, 455, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 442, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 1597, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 439, 444, 445, 446, 448,
	449, 450, 451, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 468, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 452, 467, 0,
	0, 0, 0, 0, 464, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 447, 305, 270, 351, 299, 413, 312,
	0, 440, 0, 441, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 465, 462, 394,
	466, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	348, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 443, 405, 0, 463, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 457, 453, 0, 454, 0, 0, 0, 0,
	458, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 455, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 442, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	1282, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 439,
	444, 445, 446, 448, 449, 450, 451, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 468, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 452, 467, 0, 0, 0, 0, 0, 464, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 447, 305, 270,
	351, 299, 413, 312, 0, 440, 0, 441, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 465, 462, 394, 466, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 348, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 443, 405, 0, 463,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 457, 453, 0, 454,
	0, 0, 0, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 452, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 751, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	457, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 507, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 508,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 348, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 348, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 443, 405,
	0, 463, 474, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 453,
	0, 454, 0, 0, 0, 0, 458, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 455, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 442, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 439, 444, 445, 446, 448,
	449, 450, 451, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 468, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 452, 467, 0,
	0, 0, 0, 0, 464, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 447, 305, 270, 351, 299, 413, 312,
	0, 440, 0, 441, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 465, 462, 394,
	466, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	348, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 443, 405, 0, 463, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 457, 453, 0, 454, 0, 0, 0, 0,
	458, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 455, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 442, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 439,
	444, 445, 446, 448, 449, 450, 451, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 468, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 452, 467, 0, 0, 0, 0, 0, 464, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 447, 305, 270,
	351, 299, 413, 312, 0, 440, 0, 441, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 465, 462, 394, 466, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 348, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 443, 405, 0, 463,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 457, 453, 0, 454,
	0, 0, 0, 0, 458, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 455, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 1232, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 442, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 439, 444, 445, 446, 448, 449, 450,
	451, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 468, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 452, 467, 0, 0, 0,
	0, 0, 464, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 447, 305, 270, 351, 299, 413, 312, 0, 440,
	0, 441, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 465, 462, 394, 466, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	443, 405, 0, 463, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	457, 453, 0, 454, 0, 0, 0, 0, 458, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 455,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 1230, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	442, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 439, 444, 445,
	446, 448, 449, 450, 451, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	468, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 452,
	467, 0, 0, 0, 0, 0, 464, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 447, 305, 270, 351, 299,
	413, 312, 0, 440, 0, 441, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 465,
	462, 394, 466, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 0, 348, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 443, 405, 0, 463, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 457, 453, 0, 454, 0, 0,
	0, 0, 458, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 455, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 442, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 548, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 439, 444, 445, 446, 448, 449, 450, 451, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 468, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 452, 467, 0, 0, 0, 0, 0,
	464, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 447,
	305, 270, 351, 299, 413, 312, 0, 440, 0, 441,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 465, 462, 394, 466, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 0, 247, 242, 243,
	244, 245, 743, 0, 744, 419, 420, 421, 443, 405,
	0, 463, 174, 51, 163, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 457, 0,
	164, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	725, 165, 0, 174, 51, 163, 138, 0, 0, 0,
	0, 0, 0, 738, 0, 734, 0, 0, 0, 0,
	115, 164, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 165, 0, 0, 103, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 0, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 121, 0,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 1645, 0, 0,
	0, 0, 740, 0, 733, 0, 1677, 1678, 120, 121,
	0, 122, 123, 737, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 1644, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 137, 162,
	172, 0, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 155, 154, 742, 0, 0, 0, 57, 732, 137,
	162, 172, 731, 101, 0, 0, 0, 0, 718, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 155, 154, 0, 0, 0, 0, 57, 722,
	0, 0, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 158,
	159, 0, 0, 0, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 157,
	158, 159, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 1635, 1637, 1634, 160, 1631,
	112, 0, 0, 0, 1655, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 160,
	0, 112, 0, 0, 0, 1649, 1683, 0, 0, 1650,
	1652, 1654, 0, 1656, 1657, 1658, 1662, 1663, 1664, 1666,
	1669, 1670, 1671, 0, 0, 1474, 0, 113, 739, 0,
	1659, 1668, 1660, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 1675, 0, 0, 729, 0, 0,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 1633, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	1648, 0, 0, 169, 170, 0, 171, 1647, 0, 0,
	0, 139, 895, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1665, 0, 0, 169, 170, 0, 171, 0, 0,
	1653, 0, 139, 0, 0, 0, 0, 1676, 0, 0,
	0, 0, 0, 1680, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 0, 0, 0, 0, 0, 1467,
	0, 114, 39, 1469, 1466, 1468, 1472, 1473, 49, 0,
	0, 1471, 5, 0, 0, 0, 118, 119, 3398, 0,
	1674, 0, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 114, 39, 0, 1641, 0, 0, 0, 49,
	0, 0, 0, 0, 0, 0, 0, 118, 119, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	1681, 0, 903, 907, 909, 911, 913, 914, 916, 0,
	921, 917, 918, 919, 920, 1667, 898, 899, 900, 901,
	879, 880, 904, 0, 882, 1651, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 894, 896, 892, 893, 902,
	0, 0, 0, 0, 0, 0, 0, 906, 908, 910,
	912, 915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1477, 1478, 1479, 1480, 1481, 1482,
	1475, 1476, 0, 0, 0, 897, 0, 0, 3128, 0,
	0, 0, 1667, 0, 0, 1655, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 1683, 0, 0,
	1650, 1652, 1654, 1676, 1656, 1657, 1658, 1662, 1663, 1664,
	1666, 1669, 1670, 1671, 0, 0, 0, 0, 0, 0,
	0, 1659, 1668, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 0, 0, 0, 527, 526, 533,
	523, 0, 0, 1661, 1651, 1675, 0, 0, 0, 530,
	531, 0, 532, 536, 0, 0, 518, 0, 0, 0,
	0, 0, 0, 1649, 1683, 0, 541, 1650, 1652, 1654,
	0, 1656, 1657, 1658, 1662, 1663, 1664, 1666, 1669, 1670,
	1671, 0, 0, 0, 1672, 0, 0, 0, 1659, 1668,
	1660, 527, 526, 533, 523, 0, 0, 0, 0, 0,
	0, 1648, 0, 530, 531, 0, 532, 536, 1647, 545,
	518, 1667, 547, 0, 0, 0, 0, 546, 0, 0,
	541, 0, 1675, 0, 527, 526, 533, 523, 0, 0,
	0, 0, 1665, 0, 0, 0, 530, 531, 0, 532,
	536, 1653, 0, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 545, 0, 0, 547, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 1653, 0,
	0, 905, 1649, 1683, 0, 0, 1650, 1652, 1654, 0,
	1656, 1657, 1658, 1662, 1663, 1664, 1666, 1669, 1670, 1671,
	0, 0, 0, 0, 0, 0, 0, 1659, 1668, 1660,
	0, 0, 0, 519, 521, 520, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 1675, 544, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 521, 520,
	0, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	1672, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 0, 0, 544, 1648, 0, 0,
	519, 521, 520, 522, 1647, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 0, 1665, 544,
	0, 0, 0, 0, 0, 0, 522, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 528, 534, 0, 535, 537, 0,
	0, 538, 539, 540, 0, 0, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 528, 534,
	0, 535, 537, 0, 0, 538, 539, 540, 0, 0,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 528, 534, 0, 535, 537, 0, 0, 538, 539,
	540, 0, 0, 542, 543,
}

var yyPact = [...]int{
	38030, -1000, -1000, -1000, -330, 10222, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35788,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35788,
	-327, 35234, 35234, -1000, -1000, 2231, -1000, 34680, 11363, 35788,
	305, 303, 35788, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 596, -1000, 34126, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 543, 38865, 37450, 7932, -266, -1000, 1192, -91, 2107,
	813, 822, 883, 883, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 37977, 707, 33572,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3212, 293, 707, 13585, 20, 19, 1192, 346, -156,
	-153, -157, 2605, -1000, 965, 38061, 159, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7932, 7932,
	10222, -356, 10222, 7932, 35788, 35788, -1000, -1000, -1000, -1000,
	543, 38865, 7932, 2107, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -156, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -157, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3566,
	-1000, 1325, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2583, 1317, 2106, 506, 35788, -1000, 1314, 506, -1000, -1000,
	-1000, 1192, 2981, -1000, 35788, 35788, 85, 1547, -1000, 314,
	306, 313, 1311, -1000, -1000, -1000, -1000, -1000, -1000, 413,
	2900, -1000, 35788, 35788, 2604, 35788, -1000, 1886, 439, 38919,
	2756, 1157, 667, 2618, -1000, -1000, 2579, -1000, 194, 173,
	182, 370, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 213,
	-1000, 2832, -1000, -1000, 179, -1000, -1000, 174, -1000, -1000,
	-1000, 15, -1000, -1000, -1000, -1000, -1000, -1000, -67, -1000,
	-1000, 849, 1670, 7932, -1000, 1567, -1000, 3686, -1000, -1000,
	-1000, -1000, 5075, 9642, 9642, 9642, 9642, -1000, -1000, 2429,
	7932, 2578, 2577, 2576, -1000, -1000, -1000, -1000, -1000, 1309,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1731,
	-1000, -1000, -1000, 9072, -1000, 2575, 2574, 2571, 2569, 2568,
	2565, 2564, 2561, 2560, 2559, 2556, 2555, 2540, 2539, 2315,
	10783, 2538, 2091, 2090, 2537, 2535, 2533, 2089, 2315, 2315,
	2531, 2530, 2529, 2525, 2524, 2523, 2521, 2520, 2519, 2513,
	2512, 2506, 2504, 2500, 2499, 2492, 2485, 2484, 2480, 2479,
	2478, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1076, -1000, 2477, 2914, 2356, -1000,
	2816, 2814, 2806, 2800, -307, 2476, 1872, -1000, -1000, 61,
	-1000, -116, -1000, -1000, 804, -1000, 750, -1000, 35788, 35788,
	131, 629, 542, 542, 542, 542, 542, 559, 542, 2843,
	588, 575, 571, 542, -100, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1546, 1544, 2658, 729, -1000, -1000, -1000, -1000,
	1128, 35788, -1000, 2380, 1398, 1398, 2842, 475, 467, 429,
	1398, 351, -1000, 1540, 1540, 1540, 1540, 1398, 405, 483,
	2846, 2846, 6, 1540, -2, 1398, 1398, -2, 1398, 1398,
	1398, 164, -317, -1000, -1000, -1000, -1000, 1540, 1540, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2824, 2823, 543, 543,
	35788, 135, 35788, 543, 543, 543, 547, -26, 36896, 36342,
	1886, 432, 430, 1156, 1532, -1000, 1447, 35788, 35788, 1447,
	1447, 18048, 17494, -1000, 35788, -1000, 2914, 2356, 2265, 1395,
	2253, 2356, -161, -162, -163, 543, 543, 543, 543, 543,
	163, 543, 543, 543, 543, 543, 35788, 35788, 33018, 543,
	543, 6785, 6785, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10222, 1749, 1806, 158, -66, -321, 192, -1000,
	-1000, 35788, 2726, 149, -1000, -1000, -1000, 2327, -1000, 2366,
	2366, 2366, 2366, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2366, 2366, 2379, 2475, -1000, -1000, 2365, 2365,
	2365, 2327, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2372, 2372, 2378,
	2378, 2372, 35788, 7932, 35788, 2741, 344, 2462, -1000, 35788,
	338, 2914, 2739, 2846, 2879, -1000, -1000, 1305, 1871, 2086,
	-1000, -1000, 314, 1433, -1000, 871, -1000, -1000, -1000, -1000,
	35788, -67, 333, -1000, -1000, 2077, 2461, -1000, 486, 1093,
	1053, -1000, 160, 38952, 28580, 1886, 28580, 35788, -1000, -1000,
	-1000, -1000, -1000, -1000, 9, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 175, -1000,
	7932, 7932, 7932, 7932, 7932, -1000, 578, 8502, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9642, 9642, 9642, 9642, 9642,
	9642, 9642, 9642, 9642, 9642, 9642, 9642, 2424, 1509, 9642,
	9642, 9642, 9642, 1395, 2562, 1136, 232, -1000, -1000, -1000,
	-1000, -1000, 1477, 1670, 7932, 7932, 7932, 35788, -1000, -1000,
	3108, 7932, 7932, 38268, 7932, 2790, 7932, 7932, 7932, 2248,
	3836, 35788, 7932, -1000, 2238, 2236, -1000, -1000, 1680, 7932,
	-1000, -1000, 7932, -1000, -1000, 7932, 9642, 7932, -1000, -1000,
	-1000, 3189, 2790, 2790, 1543, 7932, 7932, 2790, 2790, 2790,
	1522, 2790, 2790, 2790, 2790, 2790, 2790, 2790, 2790, 2226,
	2221, 2217, 2846, -266, -1000, 6215, 2739, 2846, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -313, 2457,
	35788, 2083, 2078, -336, -35, 801, 763, 771, -1000, 2783,
	-1000, 2446, 35788, 542, 542, -147, 542, -1000, 35788, 1550,
	28580, 35788, 35788, 1886, 35788, 35788, 35788, 542, 542, 542,
	35788, -1000, 2688, 28580, 2683, 547, -1000, 35788, 1128, 2778,
	35788, 2885, 9642, 9642, -1000, 32464, 1540, 1398, 1398, -1000,
	-1000, 35788, -1000, -1000, -1000, 1540, 35788, 1540, 1540, 2885,
	1540, -1000, -1000, -1000, 1398, 1398, -1000, -1000, 7932, -1000,
	-1000, 1540, 1540, -1000, -1000, 2885, 35788, 3, 2885, 2885,
	-12, -1000, -1000, -1000, 35788, 35788, 542, 35788, -1000, 35788,
	35788, -1000, -1000, 35788, 35788, 38166, 35788, 31910, 2819, -1000,
	28580, 35788, 35788, 26364, -1000, 1110, -1000, -39, -1000, -38,
	-26, 1447, -26, 1447, -1000, 485, 480, 16379, 427, 28580,
	4460, -1000, -1000, 1447, 1447, 4460, 4460, 1281, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1127, -1000, 206, 2846, -1000,
	-1000, -1000, -1000, -1000, 1859, 1858, 1854, 35788, 35788, 28580,
	1886, 35788, 543, 35788, 35788, 35788, 35788, 35788, -1000, 2444,
	1296, -1000, 2754, 35788, 35788, 1048, -1000, -1000, 13031, 1292,
	1048, -1000, 1569, -1000, 7932, 10222, -286, 7932, 10222, 10222,
	7932, 10222, -1000, 7932, 146, -1000, -1000, -1000, -1000, 1852,
	-1000, 1846, -1000, -1000, -1000, -1000, -1000, 2073, 2073, -1000,
	1845, -1000, -1000, -1000, -1000, 1843, -1000, -1000, 1839, -1000,
	-1000, -1000, 2216, 849, -1000, 2071, 2614, -268, -1000, 15263,
	35788, 35788, -1000, -1000, -268, -1000, 14701, 35788, 2846, -1000,
	-272, 2739, 7932, 35788, -1000, 2841, -1000, 314, 273, -1000,
	-1000, -1000, -1000, -1000, -1000, 1286, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1126, -1000, 35788, -1000, -1000,
	160, 28580, 29688, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	199, -1000, -1000, 167, -1000, 556, 115, 1432, -1000, -1000,
	142, 171, 88, 699, 1670, -1000, 1599, 1599, 1603, -1000,
	563, -1000, -1000, -1000, -1000, 2429, -1000, -1000, -1000, 1917,
	1350, -1000, 1486, 1486, 1222, 1222, 1222, 1222, 1222, 1461,
	1461, -1000, -1000, -1000, 5075, 2424, 9642, 9642, 9642, 9642,
	490, 490, 3504, 3487, -1000, 7932, 1565, -1000, 7932, 2293,
	2104, 1364, 1279, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2215, 2204, 2032, 2899, 2203, 7932, -1000,
	-1000, 1430, 1428, 1417, -1000, 1936, 7362, -1000, -1000, -1000,
	2201, 1260, 2200, -1000, -1000, -1000, 2198, 1384, 929, 2195,
	1280, 2194, 1119, 7932, 7932, 7932, 2193, 1383, 1379, 7932,
	7932, 7932, 7932, 2191, 7932, 7932, 7932, 7932, 7932, 7932,
	7932, 7932, 36, 36, 36, -1000, -1000, 1377, -1000, 1670,
	-1000, -1000, 2739, -1000, 2423, 1838, 1117, -1000, -1000, -1000,
	2035, -1000, -1000, 797, 747, 780, 35788, 888, 2406, 35788,
	35788, 542, 35788, 139, -1000, 2748, 1013, -1000, 115, -92,
	307, 855, 2603, 2890, -176, 35788, 35788, 35788, 2776, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 31356, -1000, 2405,
	1359, -1000, -1000, 7932, -1000, -1000, 2602, 35788, 35788, 2885,
	2885, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1540, 2885,
	2885, 1371, 1398, 1540, -1000, -1000, 1540, -1000, -1000, 1540,
	-1000, 1259, -1000, 35788, -1000, -1000, -1000, 2775, 2380, 1111,
	-1000, 710, 527, 527, 738, 657, 2877, 14139, -1000, 1443,
	937, 553, 2712, 190, -1000, 1443, -213, 1443, 1443, 1443,
	1443, 1443, 1443, 1443, 398, 395, 1443, 1443, 1443, 1443,
	1443, 1443, 1443, 1443, 1443, 1443, 1443, 807, 1443, 1443,
	1443, 1443, 1443, -1000, 1443, 2400, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 466, 130, 2809, 226, 225, 1013, 2803,
	242, 2656, 1077, -1000, -1000, -1000, -1000, 20270, 20270, 15825,
	20270, -1000, 1438, -26, -41, -1000, -1000, 1110, 4460, 1110,
	4460, -1000, -1000, 552, -1000, -1000, 855, -1000, 35788, 35788,
	-1000, -1000, 2395, 1539, -1000, -1000, 10783, -1000, 4460, 4460,
	-1000, -1000, 20824, 35788, -1000, -86, -1000, -49, 2739, -1000,
	-1000, -1000, 1099, -1000, -1000, 1100, 855, 2613, 35788, 1099,
	1099, 1099, -1000, -1000, 11917, 35788, 35788, -1000, -1000, 2885,
	6785, -1000, 26364, -1000, -1000, 30796, -1000, 30242, 2885, 1555,
	-1000, 10222, 1787, 153, -1000, 187, -325, 151, 1734, 145,
	1670, -1000, -1000, 2188, 2187, 1354, -1000, 1347, 2186, 1303,
	1277, -1000, -5, -1000, 2729, 901, -1000, 2394, -1000, 1251,
	2676, -1000, 1092, -1000, 1538, 1238, -1000, 901, 1219, 2660,
	1092, 2739, 2070, -1000, 1083, -1000, 1850, 1255, 84, -1000,
	-1000, 35788, 2077, 1215, 29688, 956, -1000, 550, 1254, 1246,
	-1000, 28580, 181, 28580, -1000, 28580, -1000, -1000, 319, -1000,
	35788, 2732, -1000, -1000, -1000, 2035, 1536, -351, 35788, -1000,
	-1000, -1000, -1000, -1000, 1211, -1000, 490, 490, 3504, 2235,
	-1000, 9642, -1000, 9642, 2557, 1551, -1000, 7932, 1761, 3307,
	3307, 1469, 19156, 35788, -1000, -1000, 7932, 7932, -1000, 2487,
	-1000, -1000, -1000, -1000, 7932, 7932, 1941, -1000, 35788, -1000,
	-1000, -1000, -1000, 19156, -1000, 9642, -1000, 7932, 980, 2481,
	1210, 36, 36, 36, 2425, 2421, 2412, 1206, 36, 2407,
	2317, 2312, 2302, 2250, 2240, 2184, 2180, -1000, 2393, -1000,
	-1000, 6215, -1000, -1000, 230, 1073, 1837, 113, -1000, 1530,
	-1000, -1000, -1000, 739, 161, 2183, 1059, -1000, -1000, 35788,
	-1000, -1000, -1000, 11917, 2380, 256, 35788, 2380, 49, 1443,
	-1000, 482, 28580, 422, -1000, 35788, 1877, 1524, 2612, 294,
	2723, 35788, 2390, 2388, 2387, 2385, 295, 38532, 35788, 998,
	-1000, 1228, 38061, -1000, 35788, 1670, -1000, 1886, -1000, 1398,
	-1000, -1000, 2885, -1000, -1000, 7932, 7932, 2885, 1398, 1398,
	1540, 35788, -1000, 295, 38532, 2764, 38166, -1000, 35788, -1000,
	-1000, -1000, 648, -1000, 693, 542, 35788, 1639, 693, 1638,
	2384, -1000, -1000, 35788, 35788, 35788, 35788, -1000, -1000, 35788,
	-1000, 35788, 35788, 35788, 35788, -1000, 35788, 35788, -1000, 35788,
	1628, 1619, 2733, -1000, 1443, 1443, 645, -1000, -1000, 473,
	-1000, 1831, 1828, 1825, 1824, 2068, 2066, 2063, 1443, 1443,
	1823, 2062, 29134, 2060, 939, 1817, 1812, 1794, 1811, 2059,
	652, -1000, 2057, 1810, 1797, 1752, 35788, 2382, 1985, -1000,
	-1000, 49, 1443, 218, 35788, 1515, 482, 302, 1885, 16940,
	35788, 26364, 26364, 26364, 26364, -1000, 2648, 2647, -1000, 2645,
	2630, 2664, 35788, 26364, 2380, -1000, 29134, -1000, -1000, -1000,
	1395, 1201, 2637, 730, 7932, -1000, -1000, -46, -58, -1000,
	-1000, -1000, 28580, 2046, 427, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2840, 35788, 35788, 516, 2181, 1019, -1000, -1000,
	-1000, 38532, 2366, 2366, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2366, 2366, 2379, -1000, -1000, 2365, 2365,
	2365, 2327, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2372, 2372, 2378, 2378, 2372, -1000, -1000, 2883, -1000,
	1010, -1000, -1000, 1227, -1000, 2883, 1582, -331, 10222, 1564,
	1313, -1000, 7932, 10222, 7932, -287, 202, -290, -1000, -1000,
	-1000, 2045, -1000, -1000, -1000, 1792, -1000, 1788, 58, 65,
	1617, -268, 6215, 345, 35788, -268, 35788, 6215, -1000, 35788,
	312, -268, 2840, -5, 7932, 2707, -1000, -1000, 35788, 1785,
	-1000, -1000, -1000, 2888, 28580, 1886, 1365, 28026, -1000, 172,
	-1000, 197, 472, 2041, -1000, 562, 111, 2039, 2035, -1000,
	-1000, -1000, -1000, 9642, -1000, -1000, -1000, -1000, 1670, 7932,
	2179, -1000, 752, 752, 2178, 2175, -1000, 2366, 2366, -1000,
	2327, 2365, 2327, 752, 752, 2173, -1000, 1895, 2142, -1000,
	2092, 2079, 7932, -1000, 2166, 3133, 1027, -114, 36, 36,
	-1000, -1000, -1000, -1000, 36, 36, 36, 36, -1000, 36,
	36, 36, 36, 36, 36, 36, 36, 507, -1000, 2165,
	1008, -1000, -1000, -1000, -1000, -1000, 38268, 1002, -1000, 2035,
	2034, -1000, 2029, 2019, 888, 38532, 2160, 2763, 12471, 2760,
	2361, 2360, 2759, 1889, -1000, -1000, -1000, 27472, 463, -1000,
	-1000, -1000, 535, 185, 1783, 459, -1000, 35788, 242, 2696,
	1513, 2017, 35788, -1000, -1000, -1000, -1000, -1000, 2723, -1000,
	811, 275, 25256, 12471, 12471, 12471, 277, 1496, -1000, 506,
	972, 1217, 26364, 35788, -1000, 25810, 2155, -1000, 855, 2885,
	-1000, 1670, 1670, -1000, 2885, 2885, 1398, -1000, 277, -1000,
	347, -1000, 2705, 38532, -1000, 35788, -1000, 35788, -1000, 35788,
	35788, 542, 7932, 2705, 35788, 549, -1000, -1000, 840, 258,
	581, 581, 995, -1000, 2751, -1000, -1000, -1000, 35788, -1000,
	-1000, -1000, -1000, -1000, -1000, 19156, 19156, 2799, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2012, 2005, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 35788, 1181, -1000, 1511, 1889, 27472, 1499, 1447, 2002,
	463, 1877, 1498, -1000, 2001, -1000, 917, 35788, 35788, -1000,
	1079, -1000, 1495, 2596, 2611, 2596, -1000, -1000, -1000, -1000,
	2636, -1000, 2633, -1000, -1000, 1079, -1000, -1000, -1000, -1000,
	-1000, 730, -1000, 2836, 693, 693, 693, 2153, -1000, -1000,
	-1000, 956, 2141, -1000, -1000, -1000, 2907, -1000, -1000, -1000,
	-1000, -1000, -1000, 11917, 2722, 2881, 2876, 26918, 2881, -1000,
	-331, 1525, -1000, 1621, 143, 1594, 35788, -1000, -1000, -1000,
	2138, 2136, -274, 70, 2875, 2874, 766, -1000, 2134, 948,
	-268, -1000, -1000, 901, -1000, -1000, -1000, -268, -1000, 901,
	-1000, 58, -1000, -1000, 2715, -1000, -1000, 1886, -1000, 180,
	-1000, -1000, -1000, -1000, -1000, -1000, 103, -1000, 35788, -1000,
	928, 102, -1000, 1670, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7932, -1000, -1000, -1000, 2072, -1000, -1000, 7932, 2129, 2000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2914, -1000, 2873, -1000, 7932, 2126,
	38268, -1000, -1000, -1000, -1000, -1000, -1000, 599, 347, 2124,
	918, -1000, -1000, -1000, -1000, 347, 24148, 12471, 347, -1000,
	1991, 114, -1000, -1000, -1000, 1990, 1989, 1781, -1000, -1000,
	1733, 1169, 121, -1000, -1000, -1000, -1000, -1000, -1000, 1885,
	1883, 1492, -352, -1000, 2359, -1000, 1443, 1443, 1443, 35788,
	1180, -1000, 1443, 1443, 2122, 2116, 2114, 509, 1485, 1471,
	-1000, 1779, 20270, 26364, 25810, 996, -1000, 1197, -1000, -1000,
	-1000, -1000, -1000, 2885, 509, -1000, -1000, -1000, 35788, 301,
	2358, -1000, 2357, 2600, 321, 2354, 2352, 35788, 2009, -1000,
	2705, 35788, 574, 2716, -1000, -1000, -1000, -1000, -1000, 356,
	-1000, 35788, -1000, -1000, 1214, -1000, 19156, -1000, -1000, 1177,
	-1000, 1985, 1979, -1000, 114, 1977, 4460, -1000, -1000, 2696,
	1954, -1000, 35788, 917, 917, 2914, 35788, 6215, -1000, -1000,
	7932, 2351, -1000, 7932, -1000, -1000, -1000, -1000, -1000, 2338,
	2717, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1577, -1000,
	7932, 7932, -1000, -1000, 531, 10222, -295, 198, -1000, -1000,
	-1000, -276, 1951, -1000, -1000, 2872, 1950, 1901, 35788, -1000,
	-1000, 901, 901, -274, -1000, -1000, 855, -1000, -1000, -12,
	408, -1000, 1992, -1000, 1960, 36, -1000, 155, 7932, 1900,
	-1000, 2113, 38532, -187, -191, 12471, -1000, 1176, -1000, 1443,
	1443, 2109, -187, -1000, -1000, 315, -1000, -1000, 235, -1000,
	-1000, 1730, 493, -1000, -1000, -1000, 1490, 1648, 1904, 23594,
	19156, 19710, 1948, -1000, -1000, 25256, 1577, 1577, 38793, 175,
	38793, 831, 1470, -1000, 1768, -1000, 1767, -1000, 2885, 996,
	1197, -1000, -1000, 1357, -1000, 831, -1000, -1000, 301, -1000,
	-1000, 1647, 9642, -1000, -1000, 1947, 19710, 665, 1487, 1475,
	691, 2337, -1000, 360, 2906, -1000, -1000, -1000, 643, 2334,
	-1000, 1614, 1609, -1000, 35788, -1000, 23594, 23594, 577, 577,
	23594, 23594, 2333, 581, -1000, -1000, 9642, -1000, -1000, -1000,
	-1000, 1443, 1179, -1000, -1000, -1000, -1000, -1000, -1000, 1883,
	-1000, -1000, 2846, -1000, -1000, 1670, 35788, 1670, 24702, -1000,
	2871, 2869, -1000, 1670, 849, -1000, -331, 35788, 35788, -278,
	1765, -1000, 1946, 67, -1000, -1000, 851, -276, -280, 55,
	51, 1474, -1000, -1000, -1000, 2084, -1000, 526, -1000, -1000,
	-1000, 849, -1000, -1000, -170, -1000, -1000, 331, -1000, -1000,
	-1000, 24148, 1577, 1577, -191, -1000, 469, 1942, -1000, -1000,
	231, -1000, -1000, 1939, -1000, -1000, 101, -1000, 1468, 1175,
	-1000, 2327, 7932, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 503, 38634, -1000, 937, -1000, -12, 503, 454, 227,
	-1000, 1756, -1000, -1000, 2914, -1000, 441, -1000, -1000, 3504,
	-1000, -1000, -1000, -1000, -1000, -1000, 1934, 1932, -1000, -1000,
	-1000, -1000, -1000, 1750, 2325, -102, 2797, 1910, -1000, -1000,
	2324, 1170, 1168, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1159, 1137, 23594, -1000, -1000, 3504, 19156, 1443, -1000, -1000,
	1102, 1094, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2319,
	-1000, -1000, 2868, -278, -1000, 1909, 545, 57, 51, -1000,
	2866, 66, 2865, 2862, 1908, -1000, -1000, 608, -269, 33,
	32, 31, -1000, -1000, -1000, 7932, 35788, 358, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 97, -1000, -1000, -1000, -1000,
	1904, 1903, -1000, 23594, 2751, 1855, 323, 2860, 38793, -1000,
	1443, -1000, 323, -1000, 290, -1000, 1455, -1000, 1742, -1000,
	2846, -1000, 289, -1000, -1000, -1000, 2014, 7932, 2315, 1443,
	1864, -166, 23594, 2599, 2597, 2491, 2483, 1075, -1000, 19156,
	-1000, -1000, 23040, 35788, 1901, -1000, -1000, 2308, 1739, 70,
	60, 2856, -1000, 1901, 2855, 1901, 1901, -1000, 1595, -1000,
	29, 27, 25, -1000, -1000, -1000, -1000, 443, -1000, 170,
	-1000, -1000, -1000, 239, -1000, -1000, 2751, -1000, 2854, 348,
	-1000, 19156, -1000, -1000, -1000, 1728, -1000, -1000, -1000, -1000,
	1820, -1000, 35788, -1000, 2610, -1000, 162, 1066, 239, 577,
	239, 577, 239, 577, 239, 577, 166, -1000, -1000, -1000,
	1058, -1000, -1000, 2794, 18602, 44, -1000, -1000, -1000, 1902,
	-1000, 1901, -1000, -1000, 608, -1000, -1000, -1000, 1899, -1000,
	-1000, -1000, -1000, 1443, 1898, 263, -1000, -1000, -1000, 22486,
	334, 380, 377, -1000, 479, -1000, -1000, -1000, 581, -1000,
	-1000, 2609, 2607, 2895, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35788, -1000, 35788, -1000, 1050, -1000,
	-1000, -1000, 1161, -1000, -1000, -1000, -1000, -1000, -322, 1708,
	-1000, 35788, -1000, 35788, 330, 1675, 9642, 2306, 9642, 2304,
	341, 2288, -1000, -1000, 2904, -1000, 2902, 749, 749, 239,
	239, 239, 239, -1000, 839, -1000, 1404, -1000, 21932, 35788,
	-1000, -1000, 1896, -1000, -1000, 1042, 2281, 2849, -1000, 3002,
	35788, 2911, 35788, 2271, 1378, 9642, -1000, -1000, -1000, 1719,
	369, -1000, 35788, 5645, -1000, 966, -1000, -1000, -1000, 488,
	339, -1000, 1036, -1000, 1032, 21378, 1671, 2489, -1000, -1000,
	-1000, -1000, -1000, 1670, 35788, 1029, -1000, 35788, 326, -1000,
	-1000, -1000, 1021, -1000, -1000, -1000, -1000, 488, 2659, -1000,
	1668, -1000, -1000, 38557, 627, -1000, -1000, 38557, 329, -1000,
	446, 2232, -1000, -1000, 1006, -1000, 35788, 664, 7932, -1000,
	329, 38793, -1000, 7932, 975, -1000, 38793, 922, -1000, -1000,
}

var yyPgo = [...]int{
	0, 156, 2931, 238, 166, 3557, 75, 242, 227, 225,
	241, 3556, 3554, 3553, 2752, 2746, 3551, 3550, 3549, 3543,
	3542, 3541, 3537, 3536, 3535, 3533, 3532, 3531, 3530, 3529,
	3527, 3521, 3520, 3519, 3518, 3517, 3516, 3515, 3500, 3498,
	3490, 3476, 3474, 3473, 3472, 3470, 240, 3469, 3468, 3462,
	3460, 3458, 3456, 3455, 3454, 3452, 3449, 3447, 3446, 3444,
	3443, 3442, 3441, 3438, 3437, 3436, 3432, 3431, 3430, 3424,
	3417, 3416, 3412, 3411, 3410, 3409, 3408, 3406, 3405, 212,
	3404, 2745, 3402, 3398, 3397, 3396, 3394, 3392, 3391, 236,
	3386, 3384, 3381, 3380, 3379, 3373, 3372, 3369, 3367, 3365,
	3362, 231, 3361, 3360, 3359, 3358, 3357, 3356, 210, 3355,
	162, 183, 3354, 3352, 3350, 3347, 3346, 3345, 233, 172,
	68, 3339, 48, 3338, 214, 3335, 143, 3334, 133, 3333,
	3332, 3328, 3327, 3326, 3325, 3324, 3323, 3322, 3321, 3320,
	3319, 3318, 3315, 3313, 3311, 88, 3310, 250, 3309, 70,
	3308, 3306, 118, 125, 180, 249, 2508, 246, 245, 177,
	158, 91, 3305, 2743, 3303, 148, 218, 147, 24, 3296,
	124, 3292, 251, 44, 27, 235, 129, 57, 186, 112,
	3288, 202, 99, 98, 3284, 3283, 127, 220, 161, 3282,
	93, 3281, 3280, 3266, 3264, 3261, 201, 188, 3259, 3258,
	119, 3257, 3256, 96, 3255, 72, 185, 153, 182, 3254,
	176, 106, 113, 116, 169, 3253, 142, 3252, 3246, 3244,
	3243, 164, 3242, 3241, 128, 62, 3240, 3239, 3237, 65,
	3236, 45, 3233, 28, 3232, 64, 3231, 3229, 3228, 3227,
	3226, 3225, 3224, 3223, 3222, 3220, 3214, 55, 3212, 3211,
	12, 16, 18, 3210, 23, 3209, 155, 3208, 3206, 3205,
	86, 84, 3203, 83, 1, 49, 71, 3201, 3194, 211,
	107, 94, 135, 3193, 411, 3191, 3190, 3189, 146, 3187,
	1456, 3185, 3184, 3183, 3182, 3181, 224, 3180, 198, 38,
	3178, 120, 126, 3177, 35, 47, 189, 217, 3172, 3171,
	3170, 136, 194, 111, 32, 0, 3169, 139, 3167, 3165,
	3161, 253, 3159, 223, 213, 152, 336, 263, 160, 3157,
	3155, 66, 3154, 157, 56, 54, 123, 7, 17, 274,
	3152, 14, 174, 3151, 190, 3150, 173, 36, 131, 3134,
	3133, 30, 254, 3129, 3128, 3121, 115, 3119, 3118, 261,
	82, 3117, 3116, 3114, 3113, 46, 3112, 34, 19, 3111,
	95, 3110, 243, 3108, 343, 132, 170, 159, 145, 215,
	219, 79, 74, 3106, 1562, 141, 92, 22, 3105, 216,
	3104, 507, 117, 3103, 110, 3102, 221, 375, 192, 3101,
	168, 8, 42, 33, 3100, 9, 3098, 205, 207, 3097,
	3096, 20, 51, 3094, 31, 3093, 3092, 3091, 3090, 5,
	3089, 3088, 3085, 2, 4, 3083, 3, 206, 154, 109,
	85, 67, 3082, 3080, 43, 197, 3079, 121, 144, 137,
	3078, 73, 3077, 3076, 3075, 2583, 3073, 244, 3072, 3070,
	3068, 3066, 3064, 3061, 3059, 3044, 3043, 103, 41, 3042,
	3041, 3038, 3037, 76, 134, 3036, 3035, 3034, 3033, 37,
	130, 3032, 21, 3029, 26, 29, 39, 3028, 89, 3027,
	13, 171, 3026, 3025, 15, 3024, 3020, 10, 11, 3018,
	3016, 122, 3015, 87, 25, 150, 102, 3012, 3011, 81,
	200, 138, 3009, 3008, 90, 237, 187, 3007, 232, 226,
	248, 3006, 199, 3005, 3004, 3003, 3002, 3001, 2997, 944,
	2996, 2995, 230, 69, 77, 101, 2986, 2984, 2983, 80,
	149, 108, 105, 61, 78, 2980, 100, 178, 2979, 179,
	2978, 2975, 97, 2974, 2973, 2972, 2971, 175, 2969, 2968,
	181, 222, 2964, 2963, 397, 2962, 2959, 2955, 2952, 2950,
	2944, 2942, 2938, 2934, 2929, 247, 478, 2922,
}

//line mysql_sql.y:10688
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 550, 553, 553, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 535, 535, 535, 536,
	536, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 480, 480, 479, 479, 478,
	478, 432, 432, 477, 477, 477, 476, 476, 476, 475,
	475, 474, 474, 473, 473, 471, 471, 472, 470, 469,
	469, 469, 467, 467, 467, 463, 463, 465, 464, 464,
	466, 458, 458, 461, 461, 459, 459, 459, 459, 462,
	457, 457, 457, 456, 456, 100, 100, 100, 376, 376,
	99, 99, 390, 390, 390, 390, 390, 388, 388, 388,
	388, 388, 388, 387, 387, 386, 386, 391, 391, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 90,
	90, 90, 90, 90, 95, 95, 95, 541, 541, 540,
	540, 542, 542, 542, 542, 543, 543, 93, 93, 93,
	94, 385, 385, 385, 91, 92, 92, 375, 375, 380,
	380, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 384, 384, 384, 382, 382, 381,
	381, 383, 383, 84, 84, 84, 87, 86, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 372, 372, 371, 96, 96, 97, 538, 538,
	537, 539, 539, 539, 539, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 505, 505, 505, 507, 507, 309,
	310, 554, 312, 308, 308, 308, 501, 501, 502, 503,
	504, 504, 504, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 243, 238, 238, 238, 238, 239, 239, 240, 240,
	241, 241, 241, 241, 242, 242, 302, 302, 260, 260,
	260, 262, 262, 261, 259, 257, 257, 257, 257, 257,
	257, 258, 258, 258, 263, 263, 76, 82, 82, 82,
	518, 518, 77, 529, 529, 435, 435, 323, 323, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 440, 441, 319, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 361, 361, 51, 555, 555, 297, 297,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 452,
	452, 557, 557, 557, 71, 72, 434, 434, 434, 61,
	60, 59, 58, 57, 57, 49, 49, 48, 48, 54,
	139, 140, 316, 316, 316, 318, 318, 314, 556, 556,
	404, 404, 317, 317, 47, 47, 47, 47, 74, 315,
	315, 296, 313, 313, 313, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 369, 369, 366, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 160, 160, 211,
	211, 513, 513, 509, 509, 510, 510, 510, 511, 511,
	512, 512, 108, 446, 446, 446, 446, 446, 446, 8,
	182, 182, 445, 445, 445, 445, 445, 445, 373, 373,
	373, 490, 490, 490, 491, 181, 181, 176, 176, 447,
	447, 338, 492, 492, 455, 455, 454, 454, 453, 453,
	179, 179, 180, 180, 163, 163, 119, 119, 460, 460,
	460, 460, 468, 468, 431, 431, 247, 247, 289, 289,
	290, 290, 153, 153, 154, 154, 154, 154, 154, 154,
	544, 544, 545, 546, 547, 547, 548, 548, 548, 549,
	549, 549, 549, 549, 498, 498, 500, 500, 499, 178,
	178, 174, 174, 175, 175, 175, 173, 173, 172, 171,
	171, 170, 168, 168, 168, 169, 169, 169, 186, 186,
	156, 156, 156, 155, 155, 155, 155, 155, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	157, 157, 506, 506, 506, 436, 436, 436, 443, 443,
	271, 271, 272, 272, 270, 270, 158, 158, 159, 159,
	159, 159, 269, 269, 268, 161, 161, 167, 166, 166,
	162, 162, 162, 162, 279, 279, 278, 278, 278, 278,
	111, 117, 117, 118, 185, 185, 277, 276, 276, 276,
	184, 184, 183, 183, 177, 177, 165, 165, 165, 165,
	275, 164, 273, 534, 534, 533, 533, 532, 530, 530,
	530, 531, 531, 531, 531, 482, 482, 482, 482, 482,
	303, 303, 303, 307, 307, 306, 306, 306, 306, 306,
	311, 7, 7, 7, 7, 7, 7, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	38, 195, 196, 39, 197, 197, 198, 198, 199, 199,
	200, 201, 202, 202, 202, 202, 37, 187, 187, 188,
	188, 189, 189, 190, 191, 191, 191, 194, 192, 193,
	193, 552, 552, 551, 36, 36, 29, 146, 146, 147,
	147, 147, 149, 149, 244, 244, 244, 148, 148, 150,
	150, 150, 514, 517, 515, 515, 519, 519, 519, 520,
	520, 520, 520, 521, 521, 30, 136, 141, 524, 524,
	524, 523, 523, 525, 525, 526, 526, 293, 293, 294,
	294, 144, 145, 145, 143, 138, 152, 152, 152, 152,
	152, 137, 142, 516, 522, 522, 522, 370, 370, 367,
	368, 368, 365, 364, 364, 364, 528, 528, 527, 527,
	527, 304, 304, 31, 360, 360, 362, 363, 363, 363,
	354, 354, 354, 354, 35, 358, 358, 359, 359, 359,
	359, 359, 355, 355, 357, 357, 353, 353, 353, 353,
	353, 34, 151, 151, 352, 352, 349, 349, 347, 347,
	348, 348, 346, 346, 346, 350, 350, 42, 75, 43,
	44, 45, 41, 41, 41, 351, 351, 33, 33, 33,
	121, 120, 120, 120, 120, 120, 292, 292, 291, 291,
	122, 40, 223, 223, 423, 423, 418, 418, 418, 418,
	418, 438, 438, 438, 419, 419, 419, 420, 420, 420,
	422, 422, 422, 421, 421, 421, 421, 421, 437, 437,
	439, 439, 439, 392, 392, 393, 393, 393, 396, 396,
	410, 410, 411, 411, 409, 409, 416, 416, 415, 415,
	414, 414, 413, 413, 412, 412, 412, 412, 407, 407,
	406, 406, 394, 394, 394, 394, 394, 395, 395, 395,
	405, 405, 408, 408, 267, 267, 266, 266, 231, 231,
	232, 232, 265, 265, 229, 229, 230, 230, 230, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 488, 488, 489, 234, 234, 245,
	245, 245, 245, 245, 245, 233, 233, 235, 235, 212,
	212, 210, 210, 203, 203, 204, 204, 205, 205, 205,
	209, 209, 208, 208, 208, 208, 206, 206, 207, 207,
	207, 207, 207, 207, 378, 378, 485, 485, 486, 486,
	481, 481, 481, 484, 484, 484, 484, 484, 487, 487,
	487, 483, 483, 213, 287, 287, 287, 305, 305, 305,
	305, 286, 286, 286, 228, 228, 227, 227, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	377, 377, 320, 320, 321, 321, 254, 253, 253, 253,
	253, 253, 251, 252, 250, 250, 250, 250, 250, 249,
	249, 248, 248, 248, 356, 356, 246, 246, 237, 237,
	237, 236, 236, 236, 417, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	285, 285, 285, 330, 330, 335, 335, 497, 497, 496,
	214, 214, 214, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 224, 224, 224, 401, 401, 401, 401, 402,
	402, 402, 402, 403, 403, 403, 399, 399, 400, 400,
	339, 340, 340, 444, 444, 397, 397, 398, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 451, 451, 451,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 508, 508, 508, 493,
	493, 493, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 283, 283, 283, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 341,
	341, 342, 342, 448, 448, 448, 448, 448, 448, 449,
	449, 450, 450, 450, 450, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 328, 280, 280, 280, 343, 336,
	336, 337, 337, 331, 331, 331, 331, 331, 331, 331,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 332, 332, 334, 334, 345, 345, 345, 344,
	344, 344, 344, 344, 344, 344, 226, 226, 226, 226,
	325, 325, 325, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 216, 216, 216, 216, 220,
	220, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 221, 221, 221, 221, 221,
	219, 219, 219, 219, 219, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 109, 110, 110, 218, 288, 288, 424,
	424, 427, 427, 425, 425, 426, 428, 428, 428, 429,
	429, 429, 430, 430, 430, 433, 433, 295, 295, 295,
	301, 301, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	4, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 6, 4, 5, 7, 4, 5,
	0, 1, 3, 8, 0, 6, 0, 4, 6, 1,
	1, 1, 1, 1, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 14, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 1,
	1, 0, 1, 2, 9, 9, 7, 1, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 8, 2, 4,
	4, 4, 9, 10, 8, 0, 2, 11, 9, 11,
	2, 2, 8, 4, 5, 3, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 2, 1, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 1, 3, 3, 3, 0, 4,
	1, 3, 3, 3, 0, 1, 1, 3, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 4, 1, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 1,
	1, 1, 7, 9, 7, 9, 2, 1, 7, 9,
	7, 9, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 3, 3, 2, 2,
	1, 5, 6, 4, 1, 1, 1, 5, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	6, 5, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 4, 4,
	3, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 2,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -550, -553, -2, -5, 602, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 592,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 598,
	439, 13, 488, -14, -15, -498, -16, 257, -308, -309,
	-310, -312, -554, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 364, 370, 427, 591, 60, -154, -156, 606, 607,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 531,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 252, 251, 37, 318, 319, 320,
	368, 250, 229, 14, 30, 41, 344, -155, 81, 523,
	524, 526, 230, -157, 12, 610, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 242,
	593, -305, 360, 594, 596, 595, 84, 92, -298, -300,
	364, 370, 591, 607, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 491, 578, 579, 580, 581, 519, 577, 342, 343,
	528, 269, 293, 395, 299, 306, 157, 176, 170, 198,
	190, 524, 165, 273, 311, 274, 91, 160, 474, 105,
	451, 424, 163, 288, 290, 292, 520, 521, 295, 294,
	296, 298, 522, 275, 345, 186, 181, 287, 271, 179,
	276, 39, 277, 203, 278, 279, 533, 447, 341, 453,
	303, 422, 180, 448, 291, 450, 207, 211, 465, 466,
	174, 175, 455, 468, 202, 205, 206, 249, 42, 530,
	261, 469, 209, 201, 197, 477, 307, 305, 200, 173,
	196, 272, 64, 213, 212, 214, 418, 419, 420, 421,
	280, 281, 358, 464, 193, 182, 346, 166, 22, 472,
	256, 452, 371, 282, 300, 308, 208, 210, 263, 268,
	532, 523, 426, 267, 304, 470, 178, 260, 289, 255,
	473, 167, 526, 373, 283, 161, 297, 467, 476, 63,
	386, 172, 164, 246, 158, 265, 270, 284, 285, 286,
	517, 310, 309, 301, 525, 194, 262, 199, 184, 171,
	195, 159, 264, 475, 387, 589, 344, 405, 192, 189,
	266, 239, 471, 454, 162, 409, 388, 187, 312, 585,
	586, 587, 359, 340, 313, 314, 185, 253, 445, 446,
	317, 415, 333, 389, 425, 396, 390, 220, 221, 321,
	457, 459, 204, 588, 322, 323, 324, 449, 325, 326,
	327, 328, 363, 55, 57, 93, 95, 608, 62, -383,
	-381, -305, 524, 591, 370, 523, 526, 364, 344, 607,
	-197, -305, 609, -163, 38, -210, -305, -163, -81, -15,
	-14, -155, -156, -210, 236, -313, 23, 422, -89, 423,
	232, 81, -305, -9, -101, -8, -108, -79, -153, 427,
	-311, -305, 318, 318, -311, 236, -305, 267, 403, -435,
	242, -387, -360, 268, -386, -362, -389, -363, 31, 228,
	230, 229, 264, 15, 368, 238, 13, 12, 369, 250,
	24, 25, 27, 14, 370, 372, 28, 373, 376, 377,
	378, 41, 381, 382, 257, 84, 92, 87, 275, -196,
	-305, -337, -331, 112, 258, -333, -326, -327, -329, -477,
	-471, -324, 81, 139, 140, 147, 113, -328, -417, 35,
	115, 540, 577, 489, -281, -282, -283, -284, -285, -305,
	-472, -470, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -156, 84, -493, 549, -299, 570,
	578, 579, 580, 581, 569, 60, -442, -450, 235, -448,
	150, 188, 253, 184, 13, 145, 415, 185, 546, 566,
	491, 550, 573, 542, 543, 544, 537, 538, 539, 541,
	551, 553, 565, -451, 561, 571, 572, 559, 574, 575,
	576, 86, 85, 564, 563, 552, 547, 548, 554, 536,
	545, 555, 556, 562, 567, 568, 352, 105, 353, 354,
	481, 345, 355, 242, 422, 69, 356, 357, 358, 359,
	360, 488, 361, 70, 362, 351, 257, 405, 363, 187,
	204, 493, 492, 494, 485, 482, 480, 483, 484, 486,
	487, 557, 558, 560, -117, -118, 583, -544, -274, -545,
	6, 7, 8, 9, -546, 152, -535, 424, 532, 87,
	162, 159, -374, 162, 111, 167, 166, -374, 321, 263,
	-351, -146, 342, 405, 325, 93, 267, -354, -352, 520,
	-437, 315, 311, 237, 108, -147, 247, 246, 106, 481,
	235, 379, 306, 55, 57, -509, -510, 225, 226, 227,
	-500, 514, -499, -305, 354, 95, 26, 236, 365, 263,
	459, 457, 458, 460, 461, 462, 463, -62, -452, -434,
	454, 453, -317, 446, 452, 444, 456, 447, 343, 327,
	326, 228, 603, 521, 515, -295, 389, 425, 478, 479,
	366, 426, 465, 467, 448, 105, 191, 188, 237, 239,
	236, 342, 481, 405, 93, 325, -509, 159, 465, 467,
	267, 403, 40, -380, 415, -379, -381, 466, 477, 85,
	86, 464, -295, 105, 445, 445, -544, -274, -154, -156,
	-111, -498, 522, 522, 522, 237, 342, 405, 267, 238,
	236, 518, 520, 239, 481, 235, 318, 365, 263, 325,
	93, -436, -506, 31, -443, 222, 223, 224, 32, 33,
	-1, 119, 610, -331, -331, -6, 613, -6, -331, -305,
	-305, 154, -216, -220, -217, -219, -218, -222, -221, 188,
	189, 150, 192, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 205, 206, 203, 30, 204, 253, 184, 185,
	186, 187, 207, 170, 190, 529, 215, 171, 216, 172,
	217, 173, 218, 174, 175, 219, 176, 179, 180, 181,
	182, 178, 153, 81, 153, 87, -179, 259, -210, 153,
	-179, -544, -172, -173, 11, -210, -286, -305, 424, 122,
	-89, -89, 423, -501, -502, -503, -505, 232, 423, 422,
	153, 275, 16, -311, -311, 79, -210, -362, 267, -387,
	-360, 35, 78, 154, 240, 154, 78, 81, 366, 342,
	405, 367, 481, 236, 379, 239, 267, 380, 342, 405,
	236, 239, 481, 267, 342, 236, 239, 405, 267, 380,
	444, 445, 239, 26, 371, 374, 375, 445, -456, 477,
	154, 111, 108, 109, 110, -331, 129, -344, 122, 123,
	124, 125, 126, 127, 128, 136, 135, 146, 139, 140,
	141, 142, 143, 144, 145, 137, 138, 132, 112, 130,
	134, 131, 114, -156, -331, -337, 60, -329, -329, -329,
	-329, -417, -335, -331, 81, 81, 81, 153, 100, 87,
	-331, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -449, 81, 81, -341, -342, 81, 81,
	-324, -286, 81, 87, 87, 81, 81, 81, 87, -342,
	-342, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, -173, 154, -172, 81, -172, -173, -157, -156,
	31, 32, 31, 32, 31, 32, 31, 32, -547, 600,
	81, 96, 608, 220, 470, 531, 165, 166, 167, -195,
	-305, -197, 365, 239, 518, 517, 239, -147, -349, 242,
	-349, -349, -349, -349, 238, -349, 23, 236, 236, 236,
	-349, 488, 122, 122, 58, -511, 169, 154, -500, -178,
	81, -316, 130, 134, -316, 23, 265, 265, 265, -316,
	305, -555, -556, 16, 132, -314, -556, -314, -314, -316,
	-557, 238, 455, 42, 266, 265, -174, -175, 21, -174,
	449, 445, -404, 450, 451, -318, -556, -317, -316, -316,
	-317, -316, -316, -316, 236, 239, 481, 325, 604, -555,
	-555, 30, 30, -435, -435, -210, -435, 515, -296, -305,
	-435, -435, -435, -512, 241, -541, -540, 468, -543, 470,
	159, -381, 159, -381, -362, 267, 267, 154, 122, 23,
	-382, 122, 133, -381, -381, -382, -382, -233, 40, -304,
	150, -305, 87, -233, 40, -538, -537, -210, -173, -157,
	-156, 82, 82, 82, 525, 525, 525, -435, -435, -435,
	-435, -435, -437, -435, -435, -435, -435, -435, -311, -187,
	-305, -197, 242, -435, -435, -158, -159, 141, -331, -305,
	-158, -3, -125, -124, 116, 117, 119, 594, 360, 593,
	597, 591, -381, 40, -430, 387, 386, -424, -426, 81,
	-425, 81, -425, -425, -425, -425, -425, 81, 81, -427,
	81, -427, -427, -424, -428, 81, -428, -429, 81, -429,
	-428, -305, -336, -337, -305, 38, -445, 60, -153, 81,
	30, 81, -305, -446, 60, -153, 81, 30, -173, -119,
	38, -175, 20, 153, 96, 87, -89, 82, 154, -504,
	102, 103, -507, 202, 194, -305, -104, 87, -7, -8,
	-9, -10, -46, -79, -153, -473, -471, 81, 31, 414,
	78, 16, -388, 236, 481, 365, 263, 239, 342, -386,
	-369, -366, -364, -304, -362, -365, -364, -391, -286, 445,
	-120, 429, 428, 317, -331, -331, -331, -331, -331, 101,
	112, 340, 102, 103, -326, -345, 31, 313, 314, -327,
	-327, -327, -327, -327, -327, -327, -327, -327, -327, -327,
	-327, -334, -343, -417, 81, 132, 130, 134, 131, 114,
	-329, -329, -327, -327, 82, 154, -497, -496, 116, -331,
	-331, -331, -305, -494, -495, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 356, 351, 357, 355,
	345, 363, 358, 359, 187, 512, 513, 506, 507, 508,
	509, 510, 511, -336, -336, -331, -494, -336, -280, 32,
	31, -337, -337, -337, 82, -331, -508, 338, 337, 339,
	-176, -305, -336, 82, 82, 82, 96, -337, -337, -336,
	-327, -336, -495, -280, -280, -280, 141, -337, -337, -280,
	-280, -280, -280, 141, -280, -280, -280, -280, -280, -280,
	-280, -280, 82, 82, 82, -174, -118, -454, -453, -331,
	40, -119, -175, -548, 601, 81, -286, -536, 87, 87,
	611, 471, 472, 163, 166, 165, 34, 81, -187, -349,
	-349, 518, -349, -514, -305, 112, -370, -367, -364, -305,
	-305, -360, -305, -305, -210, -349, -349, -349, -210, -244,
	52, 53, 54, -364, -148, 55, 56, -512, -499, 34,
	-177, -305, -270, 17, -329, -329, -364, 267, -555, -316,
	-316, -297, -296, -318, -313, -318, -318, -270, -314, -316,
	-316, -331, -318, -314, -270, -305, 445, -270, -270, -404,
	-315, -305, -315, -349, -296, -297, -297, -210, -210, -255,
	-256, 233, 349, 350, 231, 229, 11, 230, -264, 306,
	-350, 489, -239, -240, 76, 41, -242, 391, 384, 269,
	273, 91, 274, 424, 275, 238, 277, 278, 279, 294,
	296, 249, 280, 281, 282, 415, 283, 158, 295, 284,
	285, 286, 367, -234, 6, 328, 40, 50, 51, 438,
	437, 534, 531, 270, -514, -514, 30, 30, -370, -305,
	-305, -166, -161, -165, -162, -167, -273, -275, -164, 81,
	-210, -156, -305, 154, 469, 471, 472, -541, -382, -541,
	-382, 31, 414, -385, 414, 31, -360, -379, 465, 467,
	-375, 87, 415, -365, -384, 78, 150, -453, -382, -382,
	-384, -384, 149, 154, -539, 470, 471, 225, -174, 96,
	96, 96, -212, -210, -514, -369, -360, -305, -435, -212,
	-212, -212, -305, -305, 81, 153, 35, -305, -305, -269,
	154, -268, 16, -306, -305, 34, 87, 153, -269, -126,
	-124, 118, -331, -6, 593, -331, -6, -6, -331, -6,
	-331, -433, 388, 96, 96, -288, 87, -288, 96, 96,
	96, 82, 87, -373, 78, -447, -338, -492, 583, -181,
	82, -176, -490, -491, -176, -180, -305, -447, -181, 82,
	-490, -174, 584, -119, -171, -170, -331, -305, 23, -89,
	-502, 153, 154, -177, -388, -368, -365, -390, 141, -305,
	-376, 154, 531, 614, 85, 240, -528, -527, 406, 82,
	154, -457, 241, 488, 87, 611, 422, 220, 221, 101,
	340, 102, 103, -417, -337, -334, -329, -329, -327, -327,
	-332, 254, -332, 111, -331, -330, -496, 118, -331, 34,
	34, 154, 79, 153, 82, 82, 16, 16, 82, -331,
	82, 82, 82, 82, 16, 16, -331, 82, 153, 82,
	82, 82, 82, 79, 82, 154, 82, 154, -337, -331,
	-337, 82, 82, 82, -331, -331, -331, -337, 82, -331,
	-331, -331, -331, -331, -331, -331, -331, -398, 440, -398,
	-398, 154, 82, -119, 81, 96, 154, -292, -291, 87,
	164, 167, 167, 166, -196, -198, -199, -200, -201, -202,
	132, 155, 156, 81, -210, -210, -349, -210, -517, 392,
	35, -529, 154, 40, -527, 481, -144, 317, -353, 79,
	-151, 16, 531, -210, -210, -210, -223, 34, 16, -160,
	-211, -305, 81, 82, 154, -331, -361, 79, -305, -297,
	-270, -270, -318, -270, -270, 154, 22, -316, -318, -318,
	-314, 153, -296, -423, 34, -178, 154, -209, -302, -206,
	-208, 244, -321, -207, 247, -486, 245, 243, 106, 248,
	302, 107, 238, -302, -302, 244, -243, 240, 34, -302,
	-258, 238, 302, 245, 20, -257, 238, 107, -305, 244,
	248, 243, -301, 122, -295, 149, 240, 42, 367, -301,
	535, -301, -301, -301, -301, -301, -301, -301, 276, 276,
	-301, -301, -301, -301, -301, -301, -301, -301, -301, -301,
	-301, 159, -301, -301, -301, -301, -301, -301, 81, 271,
	272, -518, 392, 30, 348, 348, -529, 30, -152, 342,
	30, -276, -277, -278, -279, 67, 71, 73, 68, 69,
	70, 74, 30, 154, -303, -307, 34, -305, 87, -303,
	-156, -161, -166, -303, 81, -540, -542, 473, 470, 476,
	-384, -384, 240, 81, 122, -384, -384, 40, -304, -537,
	477, 471, -119, 154, 78, -212, -188, -189, -190, -191,
	-216, -286, 189, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 205, 206, 203, 204, 253, 184, 185,
	186, 187, 207, 170, 190, 171, 172, 173, 174, 175,
	176, 179, 180, 181, 182, 178, -305, -197, -270, -159,
	-161, -305, 87, -305, 141, -270, 119, -6, 117, -130,
	-129, -128, 120, 591, 597, 119, 119, 119, 82, 82,
	82, 154, 82, 82, 82, 154, 82, 154, -460, 450,
	39, 154, 81, 82, 154, 60, 154, 122, 82, 154,
	82, 60, -119, 87, 154, -168, 36, 37, 153, 424,
	-305, -471, 82, -390, 154, 240, 153, 153, -366, 370,
	-304, -368, 20, 531, -286, 38, -292, 122, 611, -305,
	82, -332, -332, 111, -329, -326, 82, 119, -331, 117,
	-214, -216, 386, 387, -214, -215, -221, 150, 188, 253,
	187, 186, 184, 386, 387, -233, -305, -331, -331, 82,
	-331, -331, 16, -305, -233, -327, -331, -173, 82, 82,
	-397, -398, -397, -397, 82, 82, 82, 82, -397, 82,
	82, 82, 82, 82, 82, 82, 82, 81, -453, -549,
	62, 599, 61, 414, 101, 307, 154, 96, 612, 154,
	122, 167, 378, 82, 154, -286, -188, -178, 81, -231,
	531, -210, -178, -520, 452, 394, 404, -301, -323, -322,
	344, 41, -440, 415, 400, 401, -367, 267, -305, -526,
	94, 122, 78, 332, 333, 334, 335, -347, -348, -346,
	-350, -514, 81, 81, 81, 81, -418, 322, -216, -210,
	-160, -305, 16, 154, -513, 153, -1, -305, -360, -316,
	-270, -331, -331, -270, -316, -316, -318, -305, -418, -216,
	34, -256, -213, -286, -207, -485, -486, -349, -305, 107,
	-485, 107, 81, -213, -286, -286, -259, -315, -286, -305,
	-305, -305, -262, -261, -286, -305, -305, -305, 107, 107,
	-238, 40, 47, 48, 49, -301, -301, 191, -241, 40,
	414, 416, 417, 96, 96, 96, 96, 87, 87, 87,
	-301, -301, 96, 87, -307, 87, -487, 166, 44, 45,
	96, 96, 96, 96, 40, 87, -245, 40, 287, 291,
	288, 289, 290, 87, 96, 40, 96, 40, 96, 40,
	-305, 81, -488, -489, 87, -520, -301, 348, -381, 122,
	-323, -525, 317, -145, 91, 31, -182, 233, 230, -514,
	-372, -371, -286, -165, -165, -165, -165, 67, 67, 67,
	72, 67, 72, 67, -278, -372, -167, -178, -307, 82,
	-534, -533, -532, -530, 75, 241, 76, -336, 470, 474,
	475, -368, -319, 87, -375, -186, 23, -210, -210, -439,
	297, 298, 82, 154, -216, -272, 18, 153, -272, 115,
	-6, -126, -128, -331, -6, -331, 593, 360, 594, 87,
	96, 96, -468, 435, 430, 432, 107, -338, -455, -454,
	60, -153, -176, -447, -491, -453, -305, 60, -153, -447,
	-186, -460, -170, -169, 43, -305, 96, 16, -365, -360,
	141, 141, -305, 371, -376, 87, 393, 87, 236, 612,
	87, -292, -326, -331, 82, -224, 175, 174, -224, 82,
	82, -425, -425, -424, -427, -424, -224, -224, 82, 82,
	23, 82, 82, 82, -331, 82, 82, 154, -444, 490,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -340, -339, 259, 82, 154, -494,
	154, -291, 87, 87, 87, -200, -216, 82, 34, -203,
	-204, -205, -213, -206, -208, 34, 81, 81, 34, -521,
	91, -515, 87, -305, -522, 91, 395, 152, 346, 40,
	396, 397, 412, 341, 96, 96, 402, -516, -305, -152,
	-524, 51, 122, 87, -210, -346, -295, 149, 278, 325,
	-267, -266, -305, 87, -203, -203, -203, -419, 324, 20,
	96, 140, -179, 79, 153, -161, -211, -305, 141, 82,
	-270, -270, -270, -316, -419, -153, -260, 44, 46, -216,
	-483, -305, -481, -483, -305, -481, -481, -349, -331, -260,
	-213, 240, 30, 230, -263, 330, 331, -377, 303, 112,
	-377, 154, -168, -305, -233, -233, 30, 87, 87, -212,
	82, 154, 122, -521, -515, 122, -382, 87, -522, -526,
	122, 87, 154, -182, -182, -270, 154, 122, -184, -183,
	78, 79, -185, 78, -183, 67, 67, -270, -532, -531,
	23, -486, -486, -486, 82, 82, 14, -190, 40, -271,
	19, 20, 141, -271, 119, 117, 119, 119, -305, 82,
	82, -431, 585, -464, -466, 430, 20, 20, 14, 241,
	82, -447, -447, -468, 44, 45, -360, -376, 415, -210,
	154, 612, -331, 82, -331, 82, 87, -173, 20, -331,
	82, -494, 234, -153, 82, 154, -153, -232, -265, -305,
	87, -203, -153, 87, -519, 406, 87, 87, 96, 40,
	96, 152, 398, -441, -145, -523, 91, 122, 611, 81,
	-301, -301, -301, -305, 82, 154, -301, -301, 82, 82,
	82, -420, 258, 96, 140, 96, 140, 96, -303, -161,
	-305, -270, -513, 153, -270, -420, -286, -228, -227, -225,
	101, 112, 40, 384, -226, 91, 149, 292, 295, 294,
	270, 293, -254, -320, 78, 390, 330, 331, -350, 585,
	519, 243, 106, 107, 372, -321, 81, 81, 79, 312,
	81, 81, -483, 82, -260, -286, 40, -263, 40, 303,
	-261, 149, -233, 82, -489, 87, -519, 87, -384, -524,
	87, -514, -173, -371, -453, -331, 81, -331, 81, 67,
	11, 18, -324, -331, -337, 242, -6, 594, 360, -247,
	586, 87, 20, 87, -462, 87, -372, -431, -122, -458,
	-404, 275, 82, 82, -397, -400, -399, -403, 436, 304,
	443, -337, 82, 82, -192, -216, -149, 531, -231, -205,
	82, 154, -301, -301, 82, -149, 20, 531, 345, 40,
	96, 40, 399, 122, 102, 103, -293, -294, 87, -355,
	-357, -286, 81, -233, -235, -304, 150, 87, -266, -324,
	-324, -229, -230, -264, -350, -121, -120, -229, -421, 158,
	96, 140, 96, 96, -270, -270, -421, -225, 101, -327,
	87, -235, -236, 40, 291, 287, 122, 122, -237, 40,
	271, 272, -246, 81, 302, 14, 191, 81, 107, 107,
	-210, -355, -355, -484, 332, 333, 334, 336, 335, -484,
	-355, -355, 81, -378, -377, -327, -301, 149, -523, -174,
	-177, -482, -305, 243, 20, 20, -305, -305, -289, 587,
	96, 87, 432, -247, -432, 588, -467, 435, -461, -459,
	430, 431, 432, 433, 122, 82, -402, 114, 398, 402,
	-325, -328, 96, 99, 183, 152, 530, -150, 59, 477,
	-265, -324, -324, -231, 87, 393, 87, 345, 87, 612,
	154, 122, 82, 154, -424, -331, -392, 259, 154, -264,
	-295, -122, -392, -438, 166, 323, 531, 96, 140, 96,
	-173, -422, 166, 323, 87, 87, 96, 81, -448, 30,
	87, -356, 81, 82, 82, 82, 82, -355, -233, -301,
	82, 82, 154, 81, 20, -289, 87, -469, 241, -465,
	-466, 434, -459, 20, 432, 20, 20, 87, -401, -402,
	402, -325, -328, 583, 441, 441, 441, -194, -305, 302,
	415, -294, 87, -358, -357, -168, 82, -393, 311, 20,
	-264, -301, -393, 323, 96, 140, 96, -174, 323, 82,
	-331, -341, -301, 82, -249, -248, 527, -355, -358, 79,
	-358, 79, -358, 79, -358, 79, 82, -233, -305, 243,
	-290, -305, -462, -476, 81, 96, -464, -463, -465, 20,
	-462, 20, -462, -462, 111, 442, 442, 442, -193, 34,
	437, 371, -359, 249, 91, 531, 330, 331, -168, 20,
	-394, 304, 305, -395, -408, 307, -233, 96, 82, -305,
	-253, -251, -252, 78, 448, 300, 301, 82, -484, -484,
	-484, -484, -254, 82, 154, -480, 30, 82, -475, -474,
	-287, -470, -305, 435, 436, 87, -462, -401, 87, -301,
	87, 329, -286, 81, -406, 308, 81, -404, 81, -404,
	107, 333, -377, -252, 78, -251, 78, 15, 14, -358,
	-358, -358, -358, -305, -479, -478, -477, 82, 154, 153,
	-552, -551, 605, 96, -305, -391, -396, 309, 96, -327,
	81, -327, 81, -405, 306, 81, -250, 297, 298, 30,
	166, -250, 154, 122, -474, -305, 87, 82, -410, 81,
	20, 82, -391, 82, -391, 81, 122, -327, 101, 40,
	299, -478, 40, -331, 153, -411, -409, 259, -395, 82,
	82, 82, -391, 96, 82, -305, 82, 154, -305, -407,
	310, 82, -409, -412, 60, 96, -416, -413, 81, -264,
	261, 132, -416, -264, -415, -414, 309, 262, 81, 82,
	154, -305, 258, 81, -337, -414, -413, -337, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 841, 842, 843, 844, 845, 846, 0,
	0, 0, 0, 600, 601, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, -2, 613, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 613, 0, 0, 0, 690, 0, 0,
	0, 0, 0, 733, 755, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1227, 1228, 1229, 1230,
	-2, 1725, 1703, 1874, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 0,
	261, 259, 1675, 1703, 1725, 1777, 1788, 1789, 1823, 1874,
	0, 864, 0, 660, 0, 665, 1181, 660, 289, 602,
	603, 690, 716, 565, 0, 325, 0, 1716, 329, 0,
	0, 0, 562, 319, 320, 321, 322, 323, 324, 0,
	0, 840, 0, 0, 315, 0, 283, 1779, 0, 0,
	0, 0, 0, 0, 153, 974, 155, 976, 159, 166,
	0, 0, 171, 172, 175, 176, 177, 178, 179, 0,
	183, 0, 185, 188, 0, 190, 191, 0, 194, 195,
	196, 0, 206, 207, 208, 977, 978, 979, -2, 84,
	862, 1633, 1521, 0, 1528, 1529, 1540, 1551, 1307, 1308,
	1309, 1310, 0, 0, 0, 0, 0, 1317, 1318, 0,
	1335, 1891, 1930, 0, 1325, 1326, 1327, 1328, 1329, 93,
	105, 106, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 0,
	1581, 1582, 1583, 1494, 1294, 1227, 0, 1900, 0, 1920,
	1925, 1926, 1927, 1928, 1919, 0, 0, 1479, 0, 1469,
	0, 0, -2, -2, 0, 0, 1848, -2, 1897, 1916,
	1924, 1901, 1923, 1893, 1894, 1895, 1888, 1889, 1890, 1892,
	1902, 1904, 1915, 0, 1911, 1921, 1922, 0, 0, 0,
	0, 107, 108, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1485, -2, 1487, 1488,
	1490, -2, 1492, 1493, -2, 1496, 1497, 1498, -2, -2,
	1501, 1502, 1503, 1504, 1505, 1506, 1509, -2, -2, -2,
	-2, 1481, 1482, 1483, 1484, 1473, 1474, 1475, 1476, 1477,
	1478, -2, -2, -2, 716, 791, 0, 716, 0, 691,
	738, 741, 744, 747, 694, 0, 0, 57, 58, 0,
	278, 279, 267, 269, 0, 273, 0, 266, 0, 0,
	0, 0, 1006, 1006, 1006, 1006, 1006, 0, 1006, 0,
	0, 0, 0, 1006, 0, 897, 981, 982, 983, 1004,
	1005, 1069, 0, 0, 0, 618, 614, 615, 616, 617,
	704, 0, 706, 709, 542, 542, 490, 0, 0, 0,
	542, 0, 504, 496, 0, 0, 0, 542, 0, 0,
	711, 711, 0, 545, 552, 542, 542, -2, 542, 542,
	542, 0, 0, 1018, 510, 511, 512, 496, 496, 515,
	516, 517, 527, 528, 553, 1657, 0, 0, 435, 435,
	0, 435, 0, 435, 435, 435, 620, 1818, 1723, 1794,
	1779, 0, 0, 234, 1848, 239, 0, 1724, 1741, 0,
	0, 1759, 0, -2, 0, 305, 716, 0, 0, 690,
	0, 0, 0, 0, 0, 435, 435, 435, 435, 435,
	1068, 435, 435, 435, 435, 435, 0, 0, 0, 435,
	435, 0, 0, 756, 757, 752, 753, 754, 758, 759,
	5, 6, 19, 0, 0, 0, 0, 0, 0, 63,
	62, 0, 1634, 1652, 1586, 1587, 1588, 1639, 1590, 1643,
	1643, 1643, 1643, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1643, 1643, 0, 0, 1632, 1610, 1641, 1641,
	1641, 1639, 1636, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1646, 1646, 1649,
	1649, 1646, 0, 1519, 0, 0, 0, 0, 664, 0,
	0, 716, -2, 0, 0, 566, 326, 1231, 0, 0,
	330, 331, 0, 0, 346, 0, 349, 334, 335, 336,
	0, 133, 0, 317, 318, 0, 0, 285, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 163, 160,
	167, 170, 180, 187, 0, 199, 201, 204, 161, 168,
	173, 174, 181, 202, 162, 164, 165, 169, 203, 205,
	182, 186, 200, 184, 189, 192, 193, 198, 0, 134,
	0, 0, 0, 0, 0, 1527, 0, 0, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1521, 0, 0, 1313, 1314, 1315,
	1316, 1319, 0, 1336, 0, 0, 0, 0, 1580, 1584,
	0, 1519, 1519, 0, 1519, 1515, 0, 0, 0, 0,
	0, 0, 1519, 1455, 0, 0, 1457, 1470, 0, 0,
	1459, 1460, 0, 1463, 1464, 1519, 0, 1519, 1468, 1451,
	1452, 0, 1515, 1515, 1515, 0, 0, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 0,
	0, 0, 711, 0, 717, 0, -2, 0, 735, 737,
	739, 740, 742, 743, 745, 746, 748, 749, 696, 0,
	0, 59, 0, 0, 0, 0, 271, 0, 276, 0,
	861, 0, 0, 1006, 1006, 0, 1006, 898, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1006, 1006, 1006,
	0, 1026, 0, 0, 0, 620, 619, 0, 705, 0,
	0, 764, 0, 0, 489, 0, 496, 542, 542, 502,
	503, 498, 497, 548, 549, 545, 0, 545, 545, 764,
	0, 521, 522, 523, 542, 542, 529, 712, 0, 530,
	531, 545, 0, 550, 551, 764, 0, 0, 764, 764,
	0, 539, 540, 541, 0, 0, 1006, 0, 558, 498,
	498, 1658, 1659, 0, 0, 1015, 0, 0, 0, 561,
	0, 0, 0, 0, 621, 214, 217, 0, 220, 0,
	1818, 0, 1818, 0, 227, 0, 0, 0, 0, 0,
	0, 257, 258, 0, 0, 0, 0, 248, 251, 1175,
	1176, 971, 972, 252, 253, 297, 298, 0, 711, 734,
	736, 730, 731, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 596, 0,
	877, 598, 0, 0, 0, 772, 766, 768, 835, 93,
	772, 8, 80, 77, 0, 19, 0, 0, 19, 19,
	0, 19, 262, 0, 1655, 1653, 1654, 1589, 1640, 0,
	1615, 0, 1616, 1617, 1618, 1628, 1629, 0, 0, 1611,
	0, 1612, 1613, 1614, 1605, 0, 1606, 1607, 0, 1608,
	1609, 260, 0, 1520, 865, 0, 638, 652, 633, 0,
	641, 0, 1182, 622, 652, 624, 0, 641, 711, 688,
	0, 666, 0, 0, 327, 0, 332, 0, 0, 348,
	350, 351, 352, 337, 338, 563, 313, 314, 306, 307,
	308, 309, 310, 311, 312, 316, 103, 0, 286, 287,
	0, 0, 0, 147, 148, 149, 150, 151, 152, 154,
	138, 585, 587, 963, 975, 0, 966, 0, 157, 197,
	130, 0, 0, 0, 1522, 1523, 1524, 1525, 1526, 1530,
	0, 1532, 1534, 1536, 1538, 0, 1556, -2, -2, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1541, 1554, 1555, 0, 0, 0, 0, 0, 0,
	1552, 1552, 1547, 0, 1311, 0, 1333, 1337, 0, 0,
	0, 0, 94, 1514, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 0, 0, 1521, 0, 0, 0, 1516,
	1517, 0, 0, 0, 1410, 0, 0, 1416, 1417, 1418,
	0, 647, 0, 1480, 1456, 1471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 790, 792, 0, 656, 658,
	659, 685, 666, 692, 0, 0, 0, 55, 60, 53,
	1038, 280, 281, 0, 0, 275, 0, -2, 0, 0,
	0, 1006, 0, 0, 912, 0, 433, 957, 0, 0,
	0, 973, 996, 1002, 0, 0, 0, 0, 1042, 899,
	904, 905, 906, 900, 901, 907, 908, 0, 707, 0,
	0, 804, 488, 0, 543, 544, 493, 1779, 498, 764,
	764, 505, 499, 506, 547, 507, 508, 509, 545, 764,
	764, 713, 542, 545, 532, 546, 545, 535, 536, 0,
	554, 559, 555, 0, 557, 513, 514, 1044, 709, 364,
	365, 406, 406, 406, 389, 406, 0, 0, 377, 1660,
	0, 0, 0, 0, 386, 1660, 0, 1660, 1660, 1660,
	1660, 1660, 1660, 1660, 0, 0, 1660, 1660, 1660, 1660,
	1660, 1660, 1660, 1660, 1660, 1660, 1660, 0, 1660, 1660,
	1660, 1660, 1660, 1161, 1660, 0, 1016, 396, 397, 398,
	399, 404, 405, 0, 430, 0, 0, 0, 433, 0,
	946, 777, 0, 778, 779, 775, 806, 830, 830, 0,
	830, 810, 1181, 0, 0, 225, 226, 215, 0, 216,
	0, 228, 229, 0, 231, 232, 233, 240, 1723, 1794,
	235, 237, 0, 0, 241, 254, 255, 256, 0, 0,
	246, 247, 0, 0, 300, 301, 303, 0, 666, 1019,
	1020, 1021, 582, 1179, 583, 584, 588, 0, 0, 591,
	592, 593, 594, 595, 879, 0, 0, 951, 952, 764,
	0, 773, 0, 769, 836, 0, 838, 0, 764, 0,
	78, 19, 0, 71, 68, 0, 0, 0, 0, 0,
	1635, 1585, 1656, 0, 0, 0, 1637, 0, 0, 0,
	0, 61, 668, 629, 0, 632, 649, 0, 653, 0,
	0, 645, 637, 642, 0, 0, 662, 623, 0, 0,
	628, 666, 0, 689, 718, 719, 722, 1232, 0, 333,
	347, 0, 0, 0, 0, 141, 960, 0, 142, 146,
	136, 0, 0, 0, 965, 0, 962, 967, 0, 156,
	0, 0, 131, 132, 1031, 1038, 0, 0, 0, 1531,
	1533, 1535, 1537, 1539, 0, 1542, 1552, 1552, 1548, 0,
	1543, 0, 1545, 0, 1522, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 1400, 1401, 0, 0, 1405, 0,
	1407, 1408, 1409, 1411, 0, 0, 0, 1415, 0, 1454,
	1472, 1458, 1461, 0, 1465, 0, 1467, 0, 716, 0,
	0, 1375, 1375, 1375, 0, 0, 0, 0, 1375, 0,
	0, 0, 0, 0, 0, 0, 0, 1330, 0, 1331,
	1332, 0, 793, 686, 0, 0, 0, 0, 1036, 0,
	282, 270, 272, 0, 0, 0, 867, 868, 870, 0,
	873, 874, 875, 879, 709, 1118, 0, 709, 919, 1660,
	1007, 437, 0, 0, 959, 0, 935, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	607, 611, 23, 710, 0, 765, 491, 0, 492, 542,
	500, 501, 764, 524, 525, 0, 0, 764, 542, 542,
	545, 0, 556, 1046, 0, 0, 1015, 367, 0, 1190,
	1191, 407, 0, 1197, 1206, 1006, 1264, 0, 1206, 0,
	0, 1208, 1209, 0, 0, 0, 0, 390, 391, 0,
	376, 0, 0, 0, 0, 375, 0, 0, 417, 0,
	0, 0, 0, 1661, 1660, 1660, 0, 384, 385, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 1660, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 0, 0, 0, 0, 0, 0, 1167,
	1168, 919, 1660, 0, 0, 0, 437, 933, 942, 0,
	0, 0, 0, 0, 0, 797, 0, 0, 796, 0,
	0, 0, 0, 0, 709, 831, 0, 833, 834, 808,
	-2, 0, 777, 813, 1519, 218, 219, 0, 0, 224,
	242, 244, 0, 0, 0, 243, 245, 249, 250, 299,
	302, 304, 728, 0, 0, 1070, 0, 880, 881, 883,
	884, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1708, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 878, 599, 762, 767,
	774, 837, 839, 94, 770, 762, 0, 81, 19, 80,
	72, 73, 0, 19, 0, 0, 0, 0, 1645, 1644,
	1630, 0, 1631, 1642, 1647, 0, 1650, 0, 672, 0,
	0, 652, 654, 0, 0, 652, 0, 0, 661, 0,
	0, 652, 728, 668, 0, 725, 723, 724, 0, 0,
	564, 104, 353, 0, 0, 0, 0, 0, 586, 0,
	964, 138, 0, 0, 158, 0, 0, 0, 1038, 1035,
	1518, 1544, 1546, 0, 1553, 1549, 1312, 1320, 1334, 0,
	0, 1340, 1352, 1352, 0, 0, 1343, 1643, 1643, 1346,
	1639, 1641, 1639, 1352, 1352, 0, 95, 0, 0, 1406,
	0, 0, 0, 648, 0, 0, 0, 1373, 1375, 1375,
	1381, 1376, 1382, 1383, 1375, 1375, 1375, 1375, 1388, 1375,
	1375, 1375, 1375, 1375, 1375, 1375, 1375, 1371, 657, 0,
	0, 699, 700, 701, 702, 703, 0, 0, 54, 1038,
	0, 274, 0, 0, 872, 0, 0, 0, 1183, 0,
	0, 0, 0, 923, 920, 921, 922, 0, 954, 438,
	439, 440, 441, 0, 0, 0, 958, 0, 946, 928,
	0, 0, 0, 997, 998, 999, 1000, 1001, -2, 1010,
	0, 0, 0, 1183, 1183, 1183, 1054, 0, 1043, 660,
	0, -2, 0, 0, 609, 0, 0, 805, 494, 764,
	518, 714, 715, 533, 764, 764, 542, 560, 1054, 1045,
	0, 366, 408, 0, 1196, 1221, 1207, 1221, 1265, 1221,
	1221, 1006, 0, 408, 0, 0, 378, 414, 0, 0,
	0, 0, 374, 411, 722, 415, 416, 418, 0, 420,
	380, 392, 393, 394, 395, 0, 0, 0, 387, 400,
	401, 402, 403, 1129, 1130, 1131, 1134, 1135, 1136, 1137,
	0, 0, 1140, 1141, 1142, 1143, 1144, 1218, 1219, 1220,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1169, 1170, 1171,
	1172, 1173, 1174, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 0, 0, 1164, 0, 923, 0, 0, 0, 0,
	954, 935, 0, 945, 0, 947, 948, 0, 0, 630,
	764, 292, 0, 800, 794, 0, 783, 798, 799, 786,
	0, 788, 0, 784, 785, 764, 776, 807, 832, 809,
	812, 814, 815, 821, 0, 0, 0, 0, 221, 222,
	223, 230, 0, 457, 236, 684, 0, 1180, 589, 590,
	1071, 1072, 597, 0, 885, 760, 0, 0, 760, 76,
	79, 0, 74, 0, 0, 0, 0, 66, 64, 1638,
	0, 0, 674, 118, 0, 0, 0, 650, 0, 655,
	652, 636, 646, 635, 643, 644, 663, 652, 627, 626,
	687, 672, 720, 721, 0, 1233, 328, 0, 961, 138,
	143, 144, 145, 139, 137, 968, 0, 970, 0, 1033,
	0, 0, 1550, 1339, 1321, 1341, 1353, 1354, 1342, 1322,
	1323, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1324, 1402,
	0, 1404, 1412, 1413, 0, 1462, 1466, 0, 0, 0,
	1379, 1380, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 716, 1372, 0, 697, 0, 0,
	0, 1037, 1039, 860, 863, 869, 871, 0, 0, 0,
	1184, 1185, 1187, 1188, 1189, 0, 0, 1183, 0, 896,
	0, 0, 914, 915, 925, 0, 0, 0, 443, 444,
	0, 0, 0, 456, 452, 453, 454, 434, 953, 942,
	931, 0, 0, 941, 0, 1011, 1660, 1660, 1660, 0,
	0, 1114, 1660, 1660, 0, 0, 0, 1057, 0, 0,
	1048, 0, 830, 0, 0, 764, 608, 611, 612, 708,
	495, 537, 534, 764, 1057, 363, 379, 409, 0, -2,
	0, 1222, 0, 1210, 1222, 0, 0, 1221, 0, 368,
	408, 0, 0, 0, 421, 424, 425, 422, 1260, 0,
	423, 0, 413, 419, 1132, 1133, 0, 1138, 1139, 0,
	1163, 0, 0, 426, 0, 0, 0, 427, 432, 928,
	0, 943, 0, 949, 950, 716, 0, 0, 780, 801,
	0, 0, 781, 0, 782, 787, 789, 291, 816, 0,
	0, 818, 819, 820, 811, 238, 729, 882, 0, 750,
	0, 0, 771, 751, 0, 19, 0, 0, 69, 1648,
	1651, 676, 0, 673, 119, 0, 0, 0, 0, 640,
	651, 634, 625, 674, 726, 727, 140, 135, 969, 121,
	0, 1034, 0, 1414, 0, 1375, 1374, 1368, 0, 0,
	695, 0, 0, 902, 1118, 0, 1024, 0, 1120, 1660,
	1660, 0, 902, 924, 913, 0, 955, 956, 0, 445,
	446, 0, 449, 455, 926, 927, 0, 0, 939, 0,
	0, 0, 0, 1003, 1017, 0, 0, 0, -2, 0,
	-2, 1063, 0, 1055, 0, 1047, 0, 1050, 764, 764,
	-2, 605, 610, 0, 538, 1063, 410, 1223, -2, 1236,
	1238, 0, 1016, 1241, 1242, 0, 0, 0, 0, 0,
	0, 1286, 1250, 0, 0, 1254, 1255, 1256, 0, 0,
	1259, 0, 1568, 1569, 0, 1263, 0, 0, 0, 0,
	0, 0, 0, 1204, 369, 370, 0, 372, 373, 1261,
	412, 1660, 382, 1162, 1165, 1166, 431, 428, 429, 931,
	934, 631, 711, 293, 294, 802, 0, 795, 825, 822,
	0, 0, 886, 761, 763, 70, 75, 0, 0, 678,
	0, 675, 0, 669, 671, 129, 639, 676, 91, 112,
	0, 0, 1403, 1453, 1378, 0, 1369, 0, 1363, 1364,
	1365, 1370, 698, 693, 0, 888, 895, 909, 1022, 1186,
	1119, 0, 0, 0, 1118, 894, 0, 0, 442, 447,
	0, 450, 451, 0, 929, 930, 0, 937, 0, 0,
	992, 1639, 0, 1012, 1013, 1177, 1178, 1014, 1115, 1116,
	1117, 1073, -2, 1126, 0, 1028, 121, 1073, 1051, 0,
	1058, 0, 1056, 1049, 716, 606, 1060, 1237, 1239, 1240,
	1243, 1244, 1245, 1291, 1292, 1293, 0, 0, 1248, 1288,
	1289, 1290, 1249, 0, 0, 0, 0, 0, 1566, 1567,
	1284, 0, 0, 1211, 1213, 1214, 1215, 1216, 1217, 1212,
	0, 0, 0, 1203, 1205, 371, 0, 1660, 944, 290,
	0, 0, 826, 828, 823, 824, 65, 67, 82, 0,
	677, 120, 0, 678, 83, 0, 109, 0, 122, 123,
	0, 0, 0, 0, 0, 1377, 1366, 0, 0, 0,
	0, 0, 1570, 1571, 1572, 0, 0, 0, 910, 911,
	1121, 1122, 1123, 1023, 916, 0, 918, 448, 932, 936,
	939, 0, 985, 0, 722, 0, 1075, 0, 1015, 1128,
	1660, 1030, 1075, 1041, 0, 1053, 0, 1065, 0, 1059,
	711, 362, 0, 1062, 1246, 1247, 0, 0, 1469, 1660,
	0, 1279, 0, 985, 985, 985, 985, 0, 381, 0,
	803, 817, 0, 0, 0, 667, 92, 96, 0, 118,
	115, 0, 124, 0, 0, 0, 0, 1032, 0, 1355,
	0, 0, 0, 1359, 1360, 1361, 1362, 0, 887, 0,
	917, 938, 940, 984, 993, 994, 722, 1027, 0, 1112,
	1127, 0, 1029, 1052, 1064, 0, 1067, 604, 1061, 1287,
	0, 1253, 0, 1258, 1267, 1280, 0, 0, 1192, 0,
	1194, 0, 1198, 0, 1200, 0, 0, 383, 827, 829,
	0, 680, 670, 85, 0, 0, 113, 114, 116, 0,
	125, 0, 127, 128, 0, 1356, 1357, 1358, 0, 889,
	890, 903, 986, 1660, 0, 0, 990, 991, 995, 0,
	1100, 0, 0, 1106, 0, 1113, 1132, 1066, 1251, 1257,
	1266, 1268, 1269, 0, 1281, 1282, 1283, 1285, 985, 985,
	985, 985, 1202, 679, 0, 1040, 0, 97, 0, 99,
	101, 102, 1224, 110, 111, 117, 126, 1367, 891, 0,
	988, 0, 1076, 0, 1078, 0, 0, 0, 0, 0,
	1110, 0, 1252, 1270, 0, 1271, 0, 0, 0, 1193,
	1195, 1199, 1201, 681, 86, 87, 0, 98, 0, 0,
	876, 892, 0, 987, 989, 0, 1080, 0, 1101, 0,
	0, 0, 0, 0, 0, 0, 1272, 1274, 1275, 0,
	0, 1273, 0, 0, 100, 1225, 893, 1077, 1074, 0,
	1112, 1102, 0, 1104, 0, 0, 0, 0, 1276, 1278,
	1277, 88, 89, 90, 0, 0, 1082, 0, 1098, 1103,
	1105, 1107, 0, 1111, 1109, 1226, 1081, 0, 1094, 1079,
	0, 1108, 1083, -2, 0, 1099, 1084, -2, 0, 1092,
	0, 0, 1085, 1093, 0, 1088, 0, 0, 0, 1087,
	0, -2, 1095, 0, 0, 1089, -2, 0, 1097, 1096,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 613, 610,
	123, 122, 124, 3, 614, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 611, 135, 612, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:782
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:789
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:795
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:828
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:832
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:838
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:843
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:847
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:879
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:887
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:905
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:925
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:931
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:938
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:946
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:952
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:961
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:979
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:995
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1005
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1013
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1023
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1039
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1053
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1059
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1063
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1088
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1092
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1098
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1111
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1117
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1138
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1162
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1172
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1178
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1185
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1197
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1232
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1238
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1247
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1262
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1268
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1272
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1278
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1282
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1288
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1312
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1331
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1335
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1339
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1355
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1363
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1370
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1375
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1382
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1391
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1415
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1419
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1425
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1431
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1449
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1466
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1493
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1608
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1616
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1633
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1637
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1641
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1645
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1652
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1656
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1678
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1682
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1864
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1868
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1872
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1876
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1880
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1884
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1921
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1925
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1931
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1946
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1958
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1964
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1968
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1997
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2035
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2058
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2064
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2091
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2198
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2207
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2211
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2215
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2221
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2225
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2231
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2235
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2241
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2245
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2262
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2279
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2283
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2287
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2291
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2295
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2299
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2399
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2403
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2425
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2429
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2435
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2441
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2514
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2536
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2548
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2556
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2607
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2611
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2617
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2623
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2628
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2629
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2630
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2652
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2679
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2688
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2692
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2698
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2724
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2743
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2753
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2762
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2770
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2774
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2778
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2782
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2786
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2795
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2801
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2805
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2809
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2813
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2817
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2821
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2825
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2829
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2834
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2865
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2869
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2895
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2899
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2934
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2970
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2986
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2990
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2997
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3009
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3017
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3025
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3038
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3044
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3075
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3079
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3144
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3152
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3164
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3170
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3175
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3216
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3238
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3251
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3262
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3266
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3305
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3317
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3378
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3387
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3389
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3398
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3408
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3417
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3421
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3490
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3529
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3538
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3542
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3547
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3551
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3557
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3574
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3580
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3589
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3593
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3609
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3615
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3625
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3629
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3635
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3639
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3664
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3682
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3691
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3695
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3710
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3733
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3739
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3755
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3761
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3767
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3776
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3783
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3794
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3799
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3806
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3822
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3835
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3846
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3850
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3856
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3861
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3868
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3870
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3873
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3882
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3886
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3891
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3900
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3913
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3921
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3928
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3935
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3955
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3965
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3969
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3975
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3982
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3988
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3996
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4003
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4010
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4029
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4033
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4037
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4046
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4050
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4056
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4069
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4075
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4079
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4085
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4089
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4095
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4100
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4111
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4115
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4122
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4131
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4137
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4141
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4147
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4151
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4160
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4180
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4187
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4205
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4230
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4237
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4241
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4254
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4258
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4263
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4267
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4274
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4279
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4286
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4292
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4300
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4304
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4308
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4321
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4337
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4356
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4380
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4389
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4427
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4431
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4449
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4458
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4468
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4472
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4481
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4487
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4497
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4503
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4508
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4512
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4516
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4521
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4525
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4529
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4546
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4550
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4554
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4568
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4572
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4592
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4622
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4639
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4647
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4655
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4663
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4671
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4679
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4687
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4695
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4703
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4713
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4738
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4742
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4746
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4755
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4759
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4772
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4781
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4796
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4800
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4810
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4819
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4824
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4832
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4838
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4846
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4854
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4864
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4879
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4888
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4907
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4911
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4921
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4925
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4929
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4933
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4939
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4949
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4953
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4959
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4969
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4975
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4981
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4985
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4989
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4999
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5005
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5009
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5019
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5025
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5029
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5039
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5052
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5058
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5064
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5077
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5095
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5099
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5115
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5123
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5128
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5132
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5149
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5153
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5157
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5161
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5166
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5170
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5174
		{
			yyVAL.str = yyDollar[2].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5180
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5186
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5190
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5194
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5208
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5247
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5257
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5263
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5269
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5279
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5284
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5297
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5301
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5307
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5337
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5361
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5366
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5383
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5403
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5409
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5431
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5438
		{
			yyVAL.str = yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5444
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5465
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5481
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5487
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5491
		{
			yyVAL.str = "DEFINER = "
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5495
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5500
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5504
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5518
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5526
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5542
		{
			yyVAL.str = yyDollar[1].str
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5546
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5552
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5565
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5579
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5586
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5593
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5607
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5616
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5640
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5652
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5658
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5665
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5679
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5687
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5693
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5701
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5707
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5716
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5720
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5725
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5729
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5736
		{
			yyVAL.str = yyDollar[3].str
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5741
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5745
		{
			yyVAL.str = yyDollar[2].str
		}
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5751
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5765
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5779
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5785
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5791
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5797
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5806
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5815
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5824
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5829
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5835
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5843
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5949
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5953
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5959
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5969
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5973
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5979
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5989
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5993
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5997
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6006
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6012
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6019
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6025
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6034
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6041
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6050
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6054
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6060
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6074
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6078
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6082
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6087
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6091
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6095
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6099
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6105
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6130
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6152
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6156
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6160
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6164
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6168
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6174
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6178
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6184
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6189
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6194
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6198
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6202
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6206
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6216
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6231
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6241
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6254
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6260
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6264
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6274
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6278
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6283
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6287
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6293
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6302
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6308
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6326
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6344
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6362
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6373
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6384
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6395
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6405
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6417
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6426
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6439
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6446
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6456
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6466
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6474
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6483
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6493
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6497
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6502
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6506
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6513
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6524
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6537
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6551
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6559
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6569
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6576
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6590
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6597
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6601
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6605
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6613
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6620
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6627
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6631
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6638
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6649
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6655
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6665
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6672
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6679
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6686
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6702
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6706
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6719
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6733
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6740
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6751
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6764
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6770
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6774
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6780
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6789
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6803
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6809
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6813
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6819
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6826
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6835
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6839
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6848
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6853
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6857
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6862
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6866
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6876
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6880
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6891
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6899
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6907
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6915
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6926
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6935
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6945
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6955
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6959
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6964
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6974
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6978
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6984
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6988
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6997
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7003
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7007
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7013
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7017
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7026
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7032
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7036
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7040
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7046
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7050
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7054
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7058
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7062
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7066
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7070
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7075
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7079
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7083
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7087
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7091
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7095
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7099
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7103
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7107
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7123
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7127
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7131
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7135
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7143
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7147
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7151
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7155
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7159
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7163
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7167
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7171
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7183
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7189
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7193
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7199
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7205
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7209
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7227
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7231
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7235
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7253
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7262
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7267
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7284
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7290
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7294
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7298
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7304
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7308
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7314
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7323
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7332
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7361
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7392
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7406
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7412
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7421
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7430
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7439
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7448
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7458
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7466
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7472
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7476
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7486
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7492
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7498
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7517
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7521
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7527
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7533
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7537
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7541
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7551
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7555
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7565
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7569
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7573
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7582
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7588
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7592
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7598
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7614
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7618
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7623
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7627
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7631
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7639
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7643
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7647
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7651
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7655
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7659
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7672
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7676
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7680
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7692
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7702
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7707
		{
			yyVAL.str = ""
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7711
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7717
		{
			yyVAL.str = ""
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7721
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7727
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7739
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7746
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7753
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7760
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7767
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7776
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7782
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7788
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7792
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7796
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7800
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7804
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7809
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7816
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7820
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7824
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7833
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7838
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7842
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7858
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7864
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7868
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7872
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7876
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7880
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7884
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7888
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7892
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7896
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7900
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7904
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7908
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7912
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7918
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7922
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7926
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7930
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7934
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7938
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7942
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7946
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7950
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7954
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7958
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7962
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7967
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7975
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7979
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7983
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7987
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7996
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8000
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8004
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8008
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8012
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8026
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8034
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8047
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8056
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8062
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8066
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8072
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8081
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8093
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8127
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8140
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8153
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8179
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8194
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8209
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8226
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8241
		{
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8248
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8252
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8256
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8262
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8266
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8270
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8274
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8280
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8284
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8288
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8294
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8302
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8316
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8323
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8332
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8337
		{
			yyVAL.str = ","
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8341
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8353
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8390
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8400
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8410
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8420
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8429
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8438
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8448
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8458
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8468
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8478
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8488
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8498
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8508
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8528
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8538
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8548
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8558
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8577
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8585
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8593
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8601
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8609
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8619
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8627
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8636
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8644
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8652
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8660
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8679
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8701
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8712
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8734
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8770
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8782
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8794
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8805
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8813
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8839
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8847
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8857
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8867
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8875
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8886
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8895
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8904
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8912
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8922
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8930
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8954
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8973
		{
		}
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8975
		{
		}
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9016
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9027
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9031
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9035
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9041
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9050
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9056
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9060
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9067
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9071
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9075
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9083
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9087
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9091
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9095
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9101
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9105
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9109
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9113
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9117
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9121
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9125
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9129
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9133
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9137
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9145
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9149
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9153
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9157
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9161
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9165
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9169
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9173
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9177
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9181
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9191
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9197
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9201
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9208
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9212
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9216
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9222
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9226
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9230
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9234
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9238
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9242
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9246
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9252
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9256
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9260
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9264
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9270
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9283
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9288
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9294
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9298
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9311
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9316
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9320
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9324
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9328
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9332
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9339
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9343
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9357
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9361
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9368
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9379
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9384
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9390
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9402
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9414
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9426
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9439
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9452
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9478
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9504
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9571
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9598
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9640
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9676
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9712
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9741
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9761
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9781
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9801
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9817
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9830
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9843
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9856
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9869
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9893
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9917
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9929
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9953
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9977
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10003
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10016
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10044
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10052
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10061
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10071
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10094
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10099
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10105
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10112
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10116
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10121
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10125
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10131
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10137
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10144
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10151
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10160
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10167
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10174
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10183
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10187
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10197
		{
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10209
		{
			yyVAL.str = ""
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10213
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

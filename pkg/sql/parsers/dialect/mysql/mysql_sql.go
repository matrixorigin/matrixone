// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const FLOAT = 57438
const HEXNUM = 57439
const BIT_LITERAL = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const IVFFLAT = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const LISTS = 57667
const SIMILARITY_FUNCTION = 57668
const EXPIRE = 57669
const ACCOUNT = 57670
const ACCOUNTS = 57671
const UNLOCK = 57672
const DAY = 57673
const NEVER = 57674
const PUMP = 57675
const MYSQL_COMPATIBILITY_MODE = 57676
const MODIFY = 57677
const CHANGE = 57678
const SECOND = 57679
const ASCII = 57680
const COALESCE = 57681
const COLLATION = 57682
const HOUR = 57683
const MICROSECOND = 57684
const MINUTE = 57685
const MONTH = 57686
const QUARTER = 57687
const REPEAT = 57688
const REVERSE = 57689
const ROW_COUNT = 57690
const WEEK = 57691
const REVOKE = 57692
const FUNCTION = 57693
const PRIVILEGES = 57694
const TABLESPACE = 57695
const EXECUTE = 57696
const SUPER = 57697
const GRANT = 57698
const OPTION = 57699
const REFERENCES = 57700
const REPLICATION = 57701
const SLAVE = 57702
const CLIENT = 57703
const USAGE = 57704
const RELOAD = 57705
const FILE = 57706
const TEMPORARY = 57707
const ROUTINE = 57708
const EVENT = 57709
const SHUTDOWN = 57710
const NULLX = 57711
const AUTO_INCREMENT = 57712
const APPROXNUM = 57713
const SIGNED = 57714
const UNSIGNED = 57715
const ZEROFILL = 57716
const ENGINES = 57717
const LOW_CARDINALITY = 57718
const AUTOEXTEND_SIZE = 57719
const ADMIN_NAME = 57720
const RANDOM = 57721
const SUSPEND = 57722
const ATTRIBUTE = 57723
const HISTORY = 57724
const REUSE = 57725
const CURRENT = 57726
const OPTIONAL = 57727
const FAILED_LOGIN_ATTEMPTS = 57728
const PASSWORD_LOCK_TIME = 57729
const UNBOUNDED = 57730
const SECONDARY = 57731
const RESTRICTED = 57732
const USER = 57733
const IDENTIFIED = 57734
const CIPHER = 57735
const ISSUER = 57736
const X509 = 57737
const SUBJECT = 57738
const SAN = 57739
const REQUIRE = 57740
const SSL = 57741
const NONE = 57742
const PASSWORD = 57743
const SHARED = 57744
const EXCLUSIVE = 57745
const MAX_QUERIES_PER_HOUR = 57746
const MAX_UPDATES_PER_HOUR = 57747
const MAX_CONNECTIONS_PER_HOUR = 57748
const MAX_USER_CONNECTIONS = 57749
const FORMAT = 57750
const VERBOSE = 57751
const CONNECTION = 57752
const TRIGGERS = 57753
const PROFILES = 57754
const LOAD = 57755
const INLINE = 57756
const INFILE = 57757
const TERMINATED = 57758
const OPTIONALLY = 57759
const ENCLOSED = 57760
const ESCAPED = 57761
const STARTING = 57762
const LINES = 57763
const ROWS = 57764
const IMPORT = 57765
const DISCARD = 57766
const JSONTYPE = 57767
const MODUMP = 57768
const OVER = 57769
const PRECEDING = 57770
const FOLLOWING = 57771
const GROUPS = 57772
const DATABASES = 57773
const TABLES = 57774
const SEQUENCES = 57775
const EXTENDED = 57776
const FULL = 57777
const PROCESSLIST = 57778
const FIELDS = 57779
const COLUMNS = 57780
const OPEN = 57781
const ERRORS = 57782
const WARNINGS = 57783
const INDEXES = 57784
const SCHEMAS = 57785
const NODE = 57786
const LOCKS = 57787
const ROLES = 57788
const TABLE_NUMBER = 57789
const COLUMN_NUMBER = 57790
const TABLE_VALUES = 57791
const TABLE_SIZE = 57792
const NAMES = 57793
const GLOBAL = 57794
const PERSIST = 57795
const SESSION = 57796
const ISOLATION = 57797
const LEVEL = 57798
const READ = 57799
const WRITE = 57800
const ONLY = 57801
const REPEATABLE = 57802
const COMMITTED = 57803
const UNCOMMITTED = 57804
const SERIALIZABLE = 57805
const LOCAL = 57806
const EVENTS = 57807
const PLUGINS = 57808
const CURRENT_TIMESTAMP = 57809
const DATABASE = 57810
const CURRENT_TIME = 57811
const LOCALTIME = 57812
const LOCALTIMESTAMP = 57813
const UTC_DATE = 57814
const UTC_TIME = 57815
const UTC_TIMESTAMP = 57816
const REPLACE = 57817
const CONVERT = 57818
const SEPARATOR = 57819
const TIMESTAMPDIFF = 57820
const CURRENT_DATE = 57821
const CURRENT_USER = 57822
const CURRENT_ROLE = 57823
const SECOND_MICROSECOND = 57824
const MINUTE_MICROSECOND = 57825
const MINUTE_SECOND = 57826
const HOUR_MICROSECOND = 57827
const HOUR_SECOND = 57828
const HOUR_MINUTE = 57829
const DAY_MICROSECOND = 57830
const DAY_SECOND = 57831
const DAY_MINUTE = 57832
const DAY_HOUR = 57833
const YEAR_MONTH = 57834
const SQL_TSI_HOUR = 57835
const SQL_TSI_DAY = 57836
const SQL_TSI_WEEK = 57837
const SQL_TSI_MONTH = 57838
const SQL_TSI_QUARTER = 57839
const SQL_TSI_YEAR = 57840
const SQL_TSI_SECOND = 57841
const SQL_TSI_MINUTE = 57842
const RECURSIVE = 57843
const CONFIG = 57844
const DRAINER = 57845
const SOURCE = 57846
const STREAM = 57847
const HEADERS = 57848
const CONNECTOR = 57849
const CONNECTORS = 57850
const DAEMON = 57851
const PAUSE = 57852
const CANCEL = 57853
const TASK = 57854
const RESUME = 57855
const MATCH = 57856
const AGAINST = 57857
const BOOLEAN = 57858
const LANGUAGE = 57859
const WITH = 57860
const QUERY = 57861
const EXPANSION = 57862
const WITHOUT = 57863
const VALIDATION = 57864
const ADDDATE = 57865
const BIT_AND = 57866
const BIT_OR = 57867
const BIT_XOR = 57868
const CAST = 57869
const COUNT = 57870
const APPROX_COUNT = 57871
const APPROX_COUNT_DISTINCT = 57872
const APPROX_PERCENTILE = 57873
const CURDATE = 57874
const CURTIME = 57875
const DATE_ADD = 57876
const DATE_SUB = 57877
const EXTRACT = 57878
const GROUP_CONCAT = 57879
const MAX = 57880
const MID = 57881
const MIN = 57882
const NOW = 57883
const POSITION = 57884
const SESSION_USER = 57885
const STD = 57886
const STDDEV = 57887
const MEDIAN = 57888
const CLUSTER_CENTERS = 57889
const SPHERICAL_KMEANS = 57890
const STDDEV_POP = 57891
const STDDEV_SAMP = 57892
const SUBDATE = 57893
const SUBSTR = 57894
const SUBSTRING = 57895
const SUM = 57896
const SYSDATE = 57897
const SYSTEM_USER = 57898
const TRANSLATE = 57899
const TRIM = 57900
const VARIANCE = 57901
const VAR_POP = 57902
const VAR_SAMP = 57903
const AVG = 57904
const RANK = 57905
const ROW_NUMBER = 57906
const DENSE_RANK = 57907
const BIT_CAST = 57908
const NEXTVAL = 57909
const SETVAL = 57910
const CURRVAL = 57911
const LASTVAL = 57912
const ARROW = 57913
const ROW = 57914
const OUTFILE = 57915
const HEADER = 57916
const MAX_FILE_SIZE = 57917
const FORCE_QUOTE = 57918
const PARALLEL = 57919
const UNUSED = 57920
const BINDINGS = 57921
const DO = 57922
const DECLARE = 57923
const LOOP = 57924
const WHILE = 57925
const LEAVE = 57926
const ITERATE = 57927
const UNTIL = 57928
const CALL = 57929
const PREV = 57930
const SLIDING = 57931
const FILL = 57932
const SPBEGIN = 57933
const BACKEND = 57934
const SERVERS = 57935
const HANDLER = 57936
const PERCENT = 57937
const SAMPLE = 57938
const KILL = 57939
const BACKUP = 57940
const FILESYSTEM = 57941
const PARALLELISM = 57942
const QUERY_RESULT = 57943

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"FLOAT",
	"HEXNUM",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"SIMILARITY_FUNCTION",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"PARALLELISM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10963

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 691,
	21, 691,
	-2, 684,
	-1, 137,
	236, 1076,
	238, 981,
	-2, 1029,
	-1, 161,
	42, 520,
	238, 520,
	265, 527,
	266, 527,
	459, 520,
	-2, 553,
	-1, 202,
	622, 1816,
	-2, 436,
	-1, 496,
	622, 1932,
	-2, 341,
	-1, 554,
	622, 1991,
	-2, 339,
	-1, 555,
	622, 1992,
	-2, 340,
	-1, 556,
	622, 1993,
	-2, 342,
	-1, 681,
	317, 133,
	431, 133,
	432, 133,
	-2, 1721,
	-1, 745,
	81, 1508,
	-2, 1871,
	-1, 746,
	81, 1526,
	-2, 1842,
	-1, 750,
	81, 1527,
	-2, 1870,
	-1, 778,
	81, 1438,
	-2, 2064,
	-1, 779,
	81, 1439,
	-2, 2063,
	-1, 780,
	81, 1440,
	-2, 2053,
	-1, 781,
	81, 2024,
	-2, 2046,
	-1, 782,
	81, 2025,
	-2, 2047,
	-1, 783,
	81, 2026,
	-2, 2055,
	-1, 784,
	81, 2027,
	-2, 2035,
	-1, 785,
	81, 2028,
	-2, 2044,
	-1, 786,
	81, 2029,
	-2, 2056,
	-1, 787,
	81, 2030,
	-2, 2057,
	-1, 788,
	81, 2031,
	-2, 2062,
	-1, 789,
	81, 2032,
	-2, 2067,
	-1, 790,
	81, 2033,
	-2, 2068,
	-1, 791,
	81, 2034,
	-2, 2023,
	-1, 792,
	81, 1504,
	-2, 1907,
	-1, 793,
	81, 1505,
	-2, 1705,
	-1, 794,
	81, 1506,
	-2, 1915,
	-1, 795,
	81, 1507,
	-2, 1714,
	-1, 797,
	81, 1510,
	-2, 1722,
	-1, 798,
	81, 1511,
	-2, 1939,
	-1, 800,
	81, 1514,
	-2, 1741,
	-1, 802,
	81, 1516,
	-2, 1950,
	-1, 803,
	81, 1517,
	-2, 1949,
	-1, 804,
	81, 1518,
	-2, 1785,
	-1, 805,
	81, 1519,
	-2, 1866,
	-1, 808,
	81, 1522,
	-2, 1962,
	-1, 810,
	81, 1524,
	-2, 1965,
	-1, 811,
	81, 1525,
	-2, 1967,
	-1, 812,
	81, 1528,
	-2, 1975,
	-1, 813,
	81, 1529,
	-2, 1851,
	-1, 814,
	81, 1530,
	-2, 1896,
	-1, 815,
	81, 1531,
	-2, 1861,
	-1, 816,
	81, 1532,
	-2, 1886,
	-1, 827,
	81, 1416,
	-2, 2058,
	-1, 828,
	81, 1417,
	-2, 2059,
	-1, 829,
	81, 1418,
	-2, 2060,
	-1, 913,
	454, 553,
	455, 553,
	-2, 521,
	-1, 959,
	122, 1705,
	133, 1705,
	153, 1705,
	-2, 1679,
	-1, 1068,
	21, 718,
	-2, 667,
	-1, 1169,
	11, 691,
	21, 691,
	-2, 1303,
	-1, 1244,
	21, 718,
	-2, 667,
	-1, 1555,
	81, 1579,
	-2, 1868,
	-1, 1556,
	81, 1580,
	-2, 1869,
	-1, 1698,
	82, 867,
	-2, 873,
	-1, 2105,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1012,
	-1, 2246,
	11, 691,
	21, 691,
	-2, 811,
	-1, 2278,
	82, 1665,
	154, 1665,
	-2, 1853,
	-1, 2279,
	82, 1665,
	154, 1665,
	-2, 1852,
	-1, 2280,
	82, 1641,
	154, 1641,
	-2, 1839,
	-1, 2281,
	82, 1642,
	154, 1642,
	-2, 1844,
	-1, 2282,
	82, 1643,
	154, 1643,
	-2, 1773,
	-1, 2283,
	82, 1644,
	154, 1644,
	-2, 1767,
	-1, 2284,
	82, 1645,
	154, 1645,
	-2, 1695,
	-1, 2285,
	82, 1646,
	154, 1646,
	-2, 1841,
	-1, 2286,
	82, 1647,
	154, 1647,
	-2, 1771,
	-1, 2287,
	82, 1648,
	154, 1648,
	-2, 1766,
	-1, 2288,
	82, 1649,
	154, 1649,
	-2, 1755,
	-1, 2289,
	82, 1665,
	154, 1665,
	-2, 1756,
	-1, 2290,
	82, 1665,
	154, 1665,
	-2, 1757,
	-1, 2292,
	82, 1654,
	154, 1654,
	-2, 1886,
	-1, 2293,
	82, 1632,
	154, 1632,
	-2, 1871,
	-1, 2294,
	82, 1663,
	154, 1663,
	-2, 1842,
	-1, 2295,
	82, 1663,
	154, 1663,
	-2, 1870,
	-1, 2296,
	82, 1663,
	154, 1663,
	-2, 1723,
	-1, 2297,
	82, 1661,
	154, 1661,
	-2, 1861,
	-1, 2298,
	82, 1658,
	154, 1658,
	-2, 1746,
	-1, 2299,
	81, 1613,
	82, 1613,
	154, 1613,
	389, 1613,
	390, 1613,
	391, 1613,
	-2, 1694,
	-1, 2300,
	81, 1614,
	82, 1614,
	154, 1614,
	389, 1614,
	390, 1614,
	391, 1614,
	-2, 1696,
	-1, 2301,
	81, 1615,
	82, 1615,
	154, 1615,
	389, 1615,
	390, 1615,
	391, 1615,
	-2, 1912,
	-1, 2302,
	81, 1617,
	82, 1617,
	154, 1617,
	389, 1617,
	390, 1617,
	391, 1617,
	-2, 1843,
	-1, 2303,
	81, 1619,
	82, 1619,
	154, 1619,
	389, 1619,
	390, 1619,
	391, 1619,
	-2, 1825,
	-1, 2304,
	81, 1621,
	82, 1621,
	154, 1621,
	389, 1621,
	390, 1621,
	391, 1621,
	-2, 1772,
	-1, 2305,
	81, 1623,
	82, 1623,
	154, 1623,
	389, 1623,
	390, 1623,
	391, 1623,
	-2, 1751,
	-1, 2306,
	81, 1624,
	82, 1624,
	154, 1624,
	389, 1624,
	390, 1624,
	391, 1624,
	-2, 1752,
	-1, 2307,
	81, 1626,
	82, 1626,
	154, 1626,
	389, 1626,
	390, 1626,
	391, 1626,
	-2, 1693,
	-1, 2308,
	82, 1668,
	154, 1668,
	389, 1668,
	390, 1668,
	391, 1668,
	-2, 1728,
	-1, 2309,
	82, 1668,
	154, 1668,
	389, 1668,
	390, 1668,
	391, 1668,
	-2, 1742,
	-1, 2310,
	82, 1671,
	154, 1671,
	389, 1671,
	390, 1671,
	391, 1671,
	-2, 1724,
	-1, 2311,
	82, 1671,
	154, 1671,
	389, 1671,
	390, 1671,
	391, 1671,
	-2, 1788,
	-1, 2312,
	82, 1668,
	154, 1668,
	389, 1668,
	390, 1668,
	391, 1668,
	-2, 1809,
	-1, 2502,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	278, 1019,
	-2, 1013,
	-1, 2515,
	79, 612,
	154, 612,
	-2, 1189,
	-1, 2872,
	191, 1019,
	302, 1271,
	-2, 1243,
	-1, 3029,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1132,
	-1, 3031,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1132,
	-1, 3041,
	79, 612,
	154, 612,
	-2, 1190,
	-1, 3049,
	191, 1019,
	302, 1271,
	-2, 1244,
	-1, 3184,
	105, 1019,
	149, 1019,
	188, 1019,
	191, 1019,
	-2, 1133,
	-1, 3579,
	82, 1094,
	154, 1094,
	-2, 1019,
	-1, 3583,
	82, 1094,
	154, 1094,
	-2, 1019,
	-1, 3597,
	82, 1098,
	154, 1098,
	-2, 1019,
	-1, 3605,
	82, 1099,
	154, 1099,
	-2, 1019,
}

const yyPrivate = 57344

const yyLast = 43638

var yyAct = [...]int{
	712, 1779, 3601, 3600, 3583, 3582, 191, 3591, 691, 3558,
	3532, 1535, 3432, 714, 685, 3499, 3525, 689, 3125, 2537,
	3440, 2890, 3441, 699, 3344, 3401, 1330, 2362, 2956, 3338,
	3225, 3172, 3063, 1385, 3359, 2957, 3363, 1531, 1202, 3251,
	588, 742, 1069, 3171, 3169, 958, 3129, 3294, 1461, 2472,
	604, 2999, 609, 609, 1324, 3345, 693, 3347, 609, 625,
	634, 3120, 1731, 634, 3050, 3016, 3176, 2147, 3190, 1538,
	2518, 3183, 2844, 3148, 2954, 2804, 2636, 3186, 2833, 3005,
	2618, 1868, 1865, 2557, 2887, 2635, 2876, 2634, 2428, 2869,
	2628, 3032, 1591, 2657, 1833, 176, 2240, 1971, 2697, 2942,
	2274, 1936, 645, 2150, 639, 2922, 2802, 2631, 2492, 2814,
	2276, 2817, 2812, 2875, 683, 1062, 2850, 2805, 2115, 2082,
	2503, 1733, 2073, 688, 2740, 1378, 1883, 2224, 1457, 2345,
	1956, 1967, 1945, 2670, 1944, 1678, 2328, 1937, 1910, 2680,
	889, 1861, 1966, 2241, 1297, 1465, 2229, 1836, 2072, 2476,
	2539, 2481, 2510, 1771, 1761, 2148, 187, 8, 2114, 6,
	952, 1462, 1834, 186, 7, 588, 1708, 2272, 1014, 1529,
	2397, 1424, 1968, 603, 1394, 1841, 692, 116, 1470, 1364,
	2096, 2143, 682, 1585, 2807, 35, 2806, 2001, 1450, 1978,
	700, 191, 1569, 191, 1520, 1005, 1006, 36, 1080, 1742,
	587, 1943, 609, 999, 1000, 1743, 1313, 921, 1004, 2429,
	1926, 26, 1940, 1431, 15, 1528, 1900, 951, 621, 618,
	2248, 690, 1417, 888, 1707, 1423, 14, 608, 608, 1333,
	13, 1363, 1361, 616, 32, 23, 1592, 1487, 1534, 831,
	648, 167, 16, 10, 1325, 647, 177, 886, 633, 866,
	1242, 173, 908, 871, 1203, 644, 631, 1309, 1975, 1002,
	3288, 2462, 2462, 2462, 1985, 3019, 2385, 2331, 1691, 998,
	630, 1438, 2949, 626, 2334, 175, 2332, 1276, 1471, 2329,
	1434, 997, 2071, 998, 55, 629, 1001, 998, 1003, 628,
	605, 1261, 833, 627, 2787, 834, 2784, 614, 2789, 2786,
	3510, 2454, 2452, 1346, 1685, 1257, 1436, 3118, 1299, 3053,
	2693, 637, 1138, 1139, 1140, 1137, 1138, 1139, 1140, 1137,
	2691, 1915, 3258, 3252, 3121, 2955, 1953, 3349, 1939, 832,
	892, 1197, 8, 2766, 2186, 996, 174, 3158, 1334, 7,
	3423, 2456, 843, 1101, 174, 1262, 964, 3065, 174, 2379,
	3305, 2473, 174, 2371, 966, 174, 174, 2471, 3149, 1972,
	3056, 2107, 3274, 3382, 1404, 1403, 1485, 1402, 970, 968,
	3051, 174, 51, 163, 138, 3073, 3074, 616, 969, 174,
	1702, 3052, 1271, 643, 115, 174, 51, 163, 138, 174,
	51, 163, 138, 684, 3306, 2764, 1482, 1478, 1289, 891,
	2712, 1983, 2100, 2705, 115, 168, 1263, 2266, 822, 931,
	821, 823, 824, 168, 825, 826, 1135, 1484, 3057, 1342,
	1521, 168, 1343, 1525, 168, 168, 1109, 1475, 2254, 1111,
	2267, 2253, 1878, 2663, 2255, 2664, 2665, 1845, 940, 1116,
	168, 3276, 1117, 1846, 1847, 1321, 1505, 1524, 1477, 1692,
	1693, 844, 3479, 967, 168, 2346, 2478, 1112, 168, 1365,
	962, 1367, 3141, 963, 1331, 1332, 2479, 2788, 1329, 2785,
	1119, 1757, 1328, 1331, 1332, 3444, 3445, 930, 1537, 1133,
	961, 960, 1128, 684, 3352, 3414, 3351, 3413, 3350, 3412,
	3352, 3351, 933, 3350, 2060, 932, 3465, 3416, 3420, 3503,
	3504, 3339, 3340, 3341, 3342, 3336, 2958, 2178, 1345, 3477,
	3403, 1270, 3072, 2698, 2151, 2477, 3403, 2699, 3406, 2700,
	3255, 2958, 1083, 2366, 1074, 1987, 3006, 1979, 1541, 1526,
	1862, 3356, 917, 2971, 2484, 1105, 1852, 2828, 3013, 3061,
	893, 1516, 1437, 1435, 2574, 2218, 2826, 2457, 1114, 2094,
	3418, 877, 1523, 3163, 1923, 2465, 1083, 1444, 1443, 3282,
	1107, 3058, 3062, 3060, 3059, 2730, 2728, 895, 1131, 1132,
	2818, 3075, 1110, 1113, 1130, 3119, 2184, 2692, 1104, 3425,
	3426, 936, 934, 2376, 935, 2622, 2822, 137, 2221, 172,
	2220, 3421, 3422, 3285, 3160, 3472, 2225, 3140, 1106, 3067,
	3068, 2823, 2824, 2888, 2889, 3142, 3481, 2842, 609, 161,
	2851, 1115, 2496, 2498, 2499, 2500, 2497, 2825, 609, 1073,
	3310, 3374, 3302, 1856, 3270, 3369, 3271, 3443, 2511, 636,
	916, 915, 635, 2627, 3080, 3087, 634, 634, 1072, 609,
	2102, 1319, 1540, 1539, 3075, 3364, 3476, 3575, 3592, 3090,
	914, 3516, 1984, 1990, 1992, 1993, 3054, 2455, 3434, 3523,
	1355, 890, 3066, 1308, 1273, 1272, 3355, 3216, 1344, 1522,
	941, 2166, 894, 926, 2269, 1108, 678, 2146, 2168, 680,
	3273, 1876, 1877, 3552, 679, 3205, 2195, 1260, 1118, 2194,
	937, 1126, 1127, 3132, 1087, 1306, 922, 1008, 2820, 2892,
	1305, 1141, 3226, 3227, 3228, 3231, 3230, 3229, 3528, 1170,
	1304, 3272, 1547, 1550, 1551, 1085, 1084, 1179, 3430, 3431,
	879, 3434, 880, 1548, 1973, 3211, 1066, 3287, 2974, 2734,
	2461, 2490, 923, 927, 1973, 2167, 2215, 2216, 1374, 3593,
	1973, 1186, 1373, 1094, 1073, 1096, 1323, 1322, 3559, 1085,
	1084, 3599, 911, 939, 909, 913, 930, 3295, 2146, 1063,
	910, 907, 906, 1207, 912, 897, 898, 896, 899, 900,
	901, 902, 998, 928, 998, 929, 998, 3311, 998, 3303,
	998, 998, 2783, 1064, 3424, 3587, 924, 925, 3033, 3304,
	2602, 1121, 3071, 1071, 1122, 2002, 1974, 1986, 986, 1078,
	1206, 2330, 964, 632, 2163, 1439, 3116, 632, 1277, 2961,
	966, 2473, 2659, 2661, 1092, 643, 3400, 2675, 2676, 1362,
	631, 631, 1124, 920, 2884, 1331, 1332, 1282, 2153, 919,
	938, 2372, 3482, 2258, 630, 630, 642, 626, 626, 832,
	2483, 1076, 1077, 2182, 3529, 2453, 2829, 1976, 1101, 629,
	629, 2156, 3159, 628, 628, 1268, 604, 627, 627, 139,
	3070, 1863, 1320, 3277, 2380, 52, 1068, 139, 3283, 52,
	2733, 139, 964, 1240, 2731, 139, 1245, 2819, 139, 139,
	966, 1093, 1331, 1332, 1089, 1090, 169, 170, 889, 171,
	2891, 931, 1177, 1991, 139, 2821, 2487, 2488, 1095, 1287,
	1120, 2993, 139, 3417, 1274, 1286, 3218, 1067, 139, 967,
	963, 2486, 139, 918, 3586, 3164, 1285, 1173, 1174, 1175,
	1176, 2575, 1853, 2576, 2577, 2888, 2889, 1517, 3598, 3266,
	2885, 638, 3207, 3346, 1100, 2840, 3206, 609, 1125, 1357,
	981, 976, 971, 975, 979, 588, 588, 2572, 3270, 1294,
	3271, 2464, 1549, 1695, 588, 588, 3212, 3213, 1389, 1389,
	2076, 609, 1327, 1123, 1266, 2152, 3265, 1696, 984, 2075,
	2154, 878, 974, 1171, 933, 3526, 3527, 932, 2660, 967,
	1988, 1989, 2157, 634, 1418, 604, 931, 1694, 1427, 1427,
	2742, 2741, 1391, 1498, 1499, 1387, 1387, 2078, 2077, 191,
	2593, 2594, 1426, 1426, 3273, 1396, 1215, 1216, 588, 1855,
	2162, 846, 850, 3191, 2160, 2404, 883, 884, 885, 1264,
	1265, 2207, 847, 982, 2155, 881, 1518, 3609, 3607, 1269,
	985, 2098, 3553, 931, 3410, 3272, 2962, 2603, 2605, 2606,
	2607, 2604, 2856, 1057, 1053, 1054, 1055, 1056, 3595, 2409,
	972, 2408, 2407, 2405, 3012, 989, 994, 995, 1098, 1469,
	3576, 1472, 1445, 849, 2841, 2085, 1480, 852, 851, 933,
	2516, 2034, 932, 983, 2033, 2238, 3571, 2181, 3562, 1136,
	2919, 1383, 1384, 1101, 1244, 1502, 1246, 1503, 2086, 2087,
	2348, 2915, 2996, 1501, 2973, 1138, 1139, 1140, 1137, 3608,
	3608, 1389, 1099, 1389, 1073, 1369, 1371, 1734, 1315, 1316,
	1486, 1275, 1353, 973, 1381, 1382, 933, 2517, 2406, 932,
	3596, 2065, 2592, 1536, 836, 837, 838, 839, 2371, 3561,
	2886, 1070, 1981, 2894, 1099, 1296, 1395, 1278, 1279, 1280,
	1281, 2762, 1283, 2793, 1356, 2097, 1136, 1288, 3572, 2791,
	1981, 1542, 1543, 1544, 1545, 1546, 3539, 2239, 1419, 2678,
	3534, 3452, 2013, 1335, 1459, 1460, 1338, 2467, 1440, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1347, 1348, 1734, 1590, 1580, 1581, 1372, 1903, 942,
	980, 1138, 1139, 1140, 1137, 1587, 1588, 1589, 1639, 2239,
	1302, 1981, 1467, 1623, 1448, 1307, 1451, 1452, 2517, 614,
	2458, 1633, 1317, 2361, 1428, 1397, 1464, 1453, 1454, 1468,
	1336, 1337, 3446, 1339, 1340, 1341, 1410, 977, 1981, 978,
	1648, 1416, 3535, 3453, 1533, 3392, 3329, 2012, 1310, 1314,
	1314, 1314, 2353, 1519, 2239, 1429, 991, 992, 993, 3328,
	3324, 3323, 1070, 3266, 2410, 2411, 3322, 3267, 1680, 1073,
	1476, 3321, 1310, 1310, 1483, 3290, 3152, 1552, 1514, 2269,
	841, 1418, 3240, 1972, 1136, 1844, 631, 1705, 1687, 1389,
	1710, 1711, 1624, 1713, 1714, 609, 1512, 2153, 2156, 609,
	630, 3094, 1389, 626, 3291, 1676, 889, 1494, 3025, 1732,
	1511, 2903, 2654, 1508, 1389, 629, 2141, 3291, 3330, 628,
	1357, 2435, 2070, 627, 1489, 625, 2131, 2427, 2064, 1507,
	2919, 2119, 3291, 3291, 1510, 1679, 1901, 2063, 3291, 2387,
	1638, 1509, 1506, 3291, 2038, 1756, 1963, 3291, 3153, 1530,
	1874, 1752, 1532, 1762, 1762, 1527, 1357, 967, 1357, 1357,
	1295, 967, 609, 609, 1571, 1705, 1705, 1583, 2250, 1389,
	1830, 1831, 1843, 2269, 1704, 1760, 1621, 1622, 1375, 1625,
	3026, 3570, 2369, 2904, 2239, 3536, 588, 1640, 1389, 3044,
	2357, 1101, 1153, 1136, 1712, 2355, 2857, 1578, 1579, 1136,
	1647, 2682, 1649, 1680, 3092, 1241, 2350, 2343, 1680, 1680,
	1873, 1136, 1138, 1139, 1140, 1137, 609, 1705, 1389, 2519,
	1888, 2374, 609, 609, 609, 1893, 1894, 2341, 2373, 2157,
	2365, 2136, 1898, 1899, 2152, 2146, 2151, 1905, 2149, 2154,
	1065, 1781, 2339, 2029, 191, 2014, 1962, 191, 191, 1748,
	191, 2337, 1825, 1826, 2119, 1908, 1896, 1913, 2130, 1491,
	1916, 1879, 2351, 1919, 1650, 1755, 1921, 2356, 1758, 1759,
	1715, 1183, 1086, 1612, 1719, 1065, 1871, 1872, 2351, 2344,
	1060, 1629, 1630, 1631, 1058, 1628, 1627, 1857, 1639, 1639,
	1947, 1677, 1682, 2155, 1645, 1639, 1639, 1646, 1626, 2342,
	1683, 3554, 1958, 1699, 1885, 1849, 2861, 1851, 1763, 1628,
	1627, 1656, 1657, 2118, 2338, 1957, 2725, 1869, 1870, 1864,
	3548, 1887, 1311, 2338, 2066, 3507, 1732, 1709, 1675, 1729,
	1389, 1970, 1735, 1736, 2045, 1749, 1728, 1768, 1769, 1914,
	1724, 2044, 1917, 1918, 1745, 1920, 2032, 1754, 1890, 1891,
	1892, 1952, 1737, 1744, 2023, 1746, 1747, 1766, 1767, 1700,
	1701, 1765, 1703, 836, 837, 838, 839, 715, 725, 1753,
	3370, 2022, 1739, 1716, 1717, 1718, 716, 2021, 717, 721,
	724, 720, 718, 719, 2852, 2119, 1980, 2179, 1964, 1495,
	1379, 1884, 1832, 1829, 1948, 1662, 2065, 1884, 1884, 1884,
	2947, 1380, 848, 1858, 1999, 2000, 1136, 1709, 2005, 2394,
	1848, 2009, 1850, 1136, 3371, 3289, 1377, 1300, 1136, 1655,
	1942, 1301, 3192, 3262, 1740, 1741, 1136, 1942, 2329, 2323,
	3036, 722, 1764, 1886, 1608, 3209, 3208, 3034, 1312, 1400,
	1605, 1750, 1751, 1136, 1607, 1604, 1606, 1610, 1611, 1136,
	3165, 2020, 1609, 1310, 1911, 1909, 1530, 3018, 1981, 2027,
	2853, 1496, 2920, 723, 2913, 964, 3193, 1314, 2908, 2905,
	2835, 2624, 964, 966, 3037, 2494, 2463, 1928, 2041, 1314,
	966, 3035, 1577, 2046, 2047, 2048, 1586, 2384, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2354, 1951, 1574, 1576,
	1573, 2260, 1575, 631, 2854, 1961, 1291, 1949, 683, 841,
	1290, 609, 609, 1075, 609, 1376, 1586, 630, 2008, 1432,
	626, 1912, 1912, 1965, 1960, 2684, 853, 609, 609, 609,
	1706, 3200, 629, 1140, 1137, 3411, 628, 1954, 1137, 2116,
	627, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153, 2123,
	1357, 3221, 3220, 2701, 1994, 1138, 1139, 1140, 1137, 2120,
	964, 1156, 1157, 1158, 1159, 1160, 1153, 2564, 966, 2562,
	2545, 2543, 967, 3551, 1571, 1357, 1996, 2003, 2007, 967,
	3161, 1351, 1352, 1185, 1354, 3581, 1358, 1359, 1360, 2173,
	2363, 2364, 3166, 3167, 3565, 1184, 1615, 1616, 1617, 1618,
	1619, 1620, 1613, 1614, 3517, 3512, 1997, 1998, 1161, 1162,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153, 1405, 1406,
	1407, 1408, 1409, 3010, 1411, 1412, 1413, 1414, 1415, 3017,
	3511, 3456, 1421, 1422, 3550, 3436, 3162, 2180, 1151, 1161,
	1162, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1153, 2243,
	2243, 1843, 2243, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1142, 1995, 1138, 1139, 1140, 1137, 2025, 967, 3372, 3314,
	588, 588, 2125, 2126, 1680, 2446, 1680, 2447, 1073, 3011,
	2614, 2612, 2128, 2129, 1389, 609, 2089, 2090, 3307, 2092,
	2079, 2059, 2061, 2062, 1680, 1680, 2610, 1207, 3253, 1643,
	609, 2599, 2108, 2109, 2110, 3195, 1073, 2313, 604, 2099,
	3194, 3038, 1427, 1644, 1843, 2493, 3009, 2318, 2827, 2320,
	2721, 2264, 2696, 191, 2140, 2277, 1426, 1138, 1139, 1140,
	1137, 2067, 2024, 2695, 1206, 2597, 2613, 2611, 2950, 2596,
	2039, 2040, 2256, 2042, 2257, 2247, 2245, 2595, 2249, 2124,
	2049, 2587, 2609, 1138, 1139, 1140, 1137, 2598, 1138, 1139,
	1140, 1137, 2261, 2262, 2333, 2158, 2159, 2145, 2164, 2144,
	2581, 2580, 2579, 2367, 2578, 2459, 1970, 2135, 2069, 1931,
	2137, 1930, 1929, 1389, 1925, 1389, 1924, 1389, 1882, 2127,
	2091, 1881, 1073, 1880, 2133, 1492, 1259, 2134, 2629, 2755,
	2386, 1138, 1139, 1140, 1137, 2813, 3538, 3537, 2317, 3126,
	2948, 2381, 1138, 1139, 1140, 1137, 3505, 3471, 2324, 3470,
	2222, 2396, 2377, 3467, 1389, 2413, 2271, 3358, 964, 3170,
	1369, 1371, 2315, 2395, 2251, 3343, 966, 3334, 3318, 3313,
	2420, 2322, 2414, 2415, 3379, 1389, 1138, 1139, 1140, 1137,
	2417, 2418, 3312, 3286, 3284, 2325, 3254, 2412, 2754, 2265,
	1395, 1387, 3202, 2423, 2422, 1138, 1139, 1140, 1137, 3179,
	3124, 3122, 2132, 3101, 1433, 1884, 3098, 3096, 2421, 2619,
	3008, 2314, 1387, 2316, 1138, 1139, 1140, 1137, 678, 1542,
	1680, 680, 2424, 2425, 3437, 1073, 679, 3007, 3004, 1073,
	2981, 2979, 609, 2914, 1138, 1139, 1140, 1137, 1389, 1314,
	2910, 2491, 1432, 3362, 2468, 2901, 2900, 1705, 2277, 2836,
	1138, 1139, 1140, 1137, 2515, 2797, 2796, 2268, 2795, 2378,
	2521, 2398, 2398, 2074, 2735, 967, 2732, 3144, 2392, 1138,
	1139, 1140, 1137, 2430, 2431, 2383, 2694, 2531, 2370, 2436,
	2368, 2668, 2375, 2608, 1073, 2525, 2526, 2450, 2600, 2590,
	2588, 2584, 2542, 1138, 1139, 1140, 1137, 2583, 2582, 1073,
	1073, 1073, 1762, 2460, 2360, 1073, 1933, 2553, 2554, 2555,
	1073, 1927, 2559, 2560, 3134, 2561, 1690, 2563, 1689, 2548,
	2549, 2403, 2401, 2504, 2552, 2388, 2389, 1493, 3133, 2558,
	2359, 2419, 777, 776, 2505, 1214, 1210, 1209, 1061, 2243,
	1138, 1139, 1140, 1137, 727, 117, 845, 3375, 3263, 3156,
	117, 1530, 3145, 2615, 1138, 1139, 1140, 1137, 3031, 1781,
	3030, 588, 3029, 2512, 2391, 2522, 1705, 1073, 1843, 1843,
	1843, 1843, 2995, 2991, 2470, 2017, 2989, 2475, 2988, 1073,
	1843, 2987, 2986, 2243, 2985, 2984, 2637, 1889, 2980, 2524,
	2533, 2978, 2963, 2540, 2527, 2953, 2469, 2540, 2637, 1389,
	615, 2536, 2952, 117, 2489, 2938, 174, 2474, 163, 138,
	609, 609, 2514, 2937, 8, 2862, 2547, 2520, 2800, 2790,
	2760, 7, 2753, 1138, 1139, 1140, 1137, 2745, 2744, 2513,
	2739, 2532, 2677, 2466, 2185, 2535, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2538, 2544, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2551, 2208, 2209, 2210,
	2211, 2212, 3084, 2213, 2650, 2340, 191, 1138, 1139, 1140,
	1137, 191, 2976, 2011, 2336, 168, 1709, 2335, 2050, 2043,
	2037, 2035, 2589, 2031, 2688, 2030, 2690, 2028, 1138, 1139,
	1140, 1137, 1639, 2019, 1639, 2016, 2015, 2711, 1138, 1139,
	1140, 1137, 1932, 1673, 1680, 2530, 2720, 2620, 1672, 1680,
	1671, 1642, 1389, 965, 2625, 2727, 1957, 2758, 1641, 1632,
	117, 2623, 1401, 174, 2649, 2652, 2653, 2651, 2679, 2757,
	2638, 2639, 2640, 2641, 1399, 117, 3594, 117, 3547, 3541,
	3524, 2666, 2669, 1138, 1139, 1140, 1137, 1138, 1139, 1140,
	1137, 2738, 2756, 3521, 3519, 1138, 1139, 1140, 1137, 3455,
	1204, 2685, 2444, 3331, 1459, 1460, 2689, 3320, 2541, 2662,
	3315, 1679, 1447, 2523, 2759, 3235, 2710, 3219, 1138, 1139,
	1140, 1137, 2528, 2529, 3215, 2672, 2673, 3109, 1138, 1139,
	1140, 1137, 168, 3107, 2708, 3082, 2748, 1467, 2750, 3081,
	2714, 3078, 2683, 3077, 2687, 2686, 3020, 2810, 1452, 2809,
	1458, 1464, 1073, 2443, 1468, 2724, 2729, 1449, 1453, 1454,
	1463, 2816, 2010, 1466, 2707, 2704, 2702, 1455, 2709, 1298,
	2716, 2831, 2717, 2715, 2616, 2546, 609, 2509, 2508, 1138,
	1139, 1140, 1137, 2723, 2507, 2506, 2445, 2845, 1073, 1073,
	1073, 2349, 2259, 2214, 2737, 2767, 2768, 1843, 2116, 2117,
	2860, 2769, 2770, 2771, 2772, 2743, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2736, 2751, 2752, 2749, 2442, 2088,
	2874, 2068, 2877, 1572, 2877, 2877, 3391, 2441, 2706, 1073,
	2839, 2792, 168, 1895, 1698, 2713, 1138, 1139, 1140, 1137,
	1686, 2881, 2440, 2896, 1138, 1139, 1140, 1137, 3487, 2439,
	1515, 1389, 1389, 1138, 1139, 1140, 1137, 2893, 1479, 2799,
	2504, 1456, 1258, 1243, 1239, 2794, 2895, 2798, 1138, 1139,
	1140, 1137, 1238, 2746, 2747, 1138, 1139, 1140, 1137, 1237,
	1236, 1235, 2480, 1234, 2897, 2898, 1233, 1232, 1387, 1387,
	1231, 2858, 2438, 1230, 2847, 2848, 2849, 609, 1229, 2832,
	1228, 1227, 2816, 2838, 1226, 1225, 2873, 2437, 1224, 2855,
	1223, 1222, 1221, 1705, 1705, 967, 2859, 2882, 1138, 1139,
	1140, 1137, 967, 1220, 1219, 2863, 2434, 1218, 2872, 2867,
	2864, 2865, 1217, 1138, 1139, 1140, 1137, 2878, 2879, 1213,
	1212, 1211, 1208, 1201, 1200, 1198, 2883, 2433, 1197, 1196,
	1195, 2837, 1138, 1139, 1140, 1137, 1194, 1193, 1192, 1073,
	1191, 1190, 1189, 2413, 1188, 1187, 1182, 1181, 2570, 2571,
	1180, 1103, 2951, 1138, 1139, 1140, 1137, 1059, 2277, 2923,
	2924, 2432, 2585, 2586, 3389, 3387, 3385, 1651, 1652, 1653,
	1654, 3079, 2122, 1658, 1659, 1660, 1661, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 2426, 2621, 1138, 1139, 1140,
	1137, 2907, 2868, 2906, 609, 2912, 2104, 2911, 1091, 3485,
	2916, 2917, 3442, 2902, 2926, 2495, 2927, 2416, 2270, 2909,
	2931, 1138, 1139, 1140, 1137, 1935, 1102, 2918, 2393, 2929,
	2928, 2646, 2644, 2934, 2935, 2936, 2647, 2645, 2643, 2642,
	2975, 1292, 2930, 1138, 1139, 1140, 1137, 2977, 2648, 2940,
	2235, 2236, 3111, 2946, 1138, 1139, 1140, 1137, 3580, 3112,
	2358, 3566, 1884, 1152, 1151, 1161, 1162, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1153, 1582, 2990, 2964, 2352, 2834,
	3000, 1073, 2036, 2719, 2965, 2966, 1726, 1727, 2870, 967,
	2871, 2183, 2970, 2880, 2982, 2969, 102, 117, 117, 965,
	606, 1138, 1139, 1140, 1137, 2390, 2226, 54, 3110, 2866,
	1721, 1722, 1723, 3024, 1152, 1151, 1161, 1162, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1153, 2243, 1843, 3041, 1152,
	1151, 1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1153, 53, 1073, 2231, 2234, 2235, 2236, 2232, 3089, 2233,
	2237, 2874, 611, 610, 2941, 1073, 2992, 2967, 2968, 2566,
	1817, 3047, 1441, 612, 2347, 1073, 2567, 2568, 2569, 1169,
	1389, 2363, 2364, 1129, 3086, 2382, 1488, 1473, 2095, 2972,
	1897, 1097, 2811, 2808, 2558, 2801, 1705, 3002, 2534, 2139,
	1073, 2112, 1730, 3015, 1680, 1697, 3496, 613, 1628, 1627,
	3317, 3043, 2899, 3093, 2223, 1680, 2219, 1387, 3106, 2637,
	3076, 3108, 1254, 1255, 1252, 1253, 1250, 1251, 1828, 191,
	3069, 3040, 3039, 1248, 1249, 1350, 1349, 2933, 3114, 3046,
	2671, 3103, 1073, 1959, 1303, 1284, 1326, 3083, 3542, 3462,
	3088, 3460, 3428, 3085, 3408, 3407, 3405, 3365, 3091, 3332,
	3042, 2637, 3248, 3247, 3123, 3095, 2983, 3097, 3045, 2960,
	2959, 3100, 3099, 2944, 2169, 1490, 3104, 1073, 3113, 2994,
	2943, 2681, 3105, 3102, 1734, 2722, 2997, 3489, 3488, 3003,
	2231, 2234, 2235, 2236, 2232, 2106, 2233, 2237, 3131, 2018,
	3488, 1073, 1389, 1389, 1088, 3489, 3217, 2845, 2939, 1070,
	1318, 3185, 62, 3185, 178, 3, 2, 3508, 3509, 1247,
	3173, 3128, 1, 2451, 3117, 3150, 1684, 3127, 836, 837,
	838, 839, 1256, 1070, 840, 3175, 835, 1366, 1389, 1387,
	3177, 2252, 1875, 1393, 1688, 842, 2655, 3135, 2656, 3136,
	2932, 3201, 3151, 2658, 1977, 2626, 609, 3157, 1073, 1073,
	2217, 2093, 1073, 1073, 3181, 3182, 967, 2830, 1293, 882,
	1634, 1500, 988, 967, 1082, 3177, 967, 3173, 3173, 3180,
	3188, 3173, 3173, 3189, 3147, 3238, 3237, 1497, 1732, 1081,
	3245, 3232, 3043, 1079, 3199, 3198, 1164, 3076, 1168, 3249,
	3250, 3223, 3224, 1584, 3203, 3233, 3234, 3069, 729, 1938,
	2617, 2591, 1389, 3244, 1165, 1167, 1163, 3495, 1166, 1152,
	1151, 1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1153, 3531, 3454, 3498, 3000, 1513, 713, 3260, 3242, 3399,
	3335, 3196, 3197, 3269, 3458, 3261, 3241, 3337, 1398, 1387,
	3243, 3259, 615, 1152, 1151, 1161, 1162, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1153, 1982, 3297, 1134, 2703, 3293,
	3256, 904, 767, 740, 1199, 3264, 1481, 3268, 1474, 2765,
	2763, 990, 739, 117, 3014, 3278, 3281, 2485, 2674, 3301,
	987, 3279, 3280, 905, 1922, 3257, 1442, 1446, 2138, 3309,
	3590, 3579, 3292, 3115, 3557, 3540, 3433, 3574, 3475, 3522,
	3139, 3137, 3298, 3138, 3131, 3299, 1073, 3300, 3515, 3308,
	1389, 3429, 649, 1854, 586, 949, 3236, 1934, 650, 2121,
	3419, 3222, 3319, 863, 2103, 3173, 864, 856, 2502, 3316,
	2501, 1553, 3143, 1143, 1570, 2781, 2782, 117, 1178, 687,
	2006, 117, 2482, 3326, 3064, 3354, 2667, 1387, 61, 3325,
	60, 59, 58, 117, 1904, 199, 731, 198, 1186, 3348,
	3168, 3396, 1073, 117, 3500, 711, 3333, 710, 3366, 709,
	660, 659, 666, 656, 708, 707, 706, 2230, 2228, 2227,
	1838, 3173, 663, 664, 1837, 665, 669, 1902, 2843, 651,
	3361, 1073, 2556, 3360, 2550, 2165, 2170, 1770, 1389, 674,
	3376, 3394, 3397, 3357, 3439, 3380, 3381, 3368, 3214, 2601,
	3173, 3130, 1720, 2161, 1787, 2573, 1784, 3021, 3022, 3023,
	1783, 3398, 2565, 3027, 3028, 3377, 3384, 3386, 3388, 3390,
	3210, 3393, 3204, 3373, 3383, 1387, 1814, 3404, 1389, 2998,
	3184, 3048, 3402, 3049, 3055, 2111, 1013, 1009, 1011, 3438,
	1012, 1010, 2402, 2142, 2803, 2084, 2083, 2081, 2080, 1267,
	3427, 3353, 3415, 3146, 2275, 2273, 2925, 2921, 1946, 1955,
	2718, 3435, 1839, 1835, 2105, 1387, 3275, 1725, 857, 2101,
	99, 152, 48, 89, 88, 98, 3447, 150, 3448, 47,
	3449, 183, 3450, 182, 3461, 3451, 3463, 3464, 3459, 1073,
	3457, 185, 184, 181, 2326, 3348, 3466, 2327, 180, 1430,
	179, 3409, 3187, 830, 38, 37, 33, 12, 3473, 11,
	34, 21, 22, 20, 3494, 1504, 3502, 3478, 3480, 3483,
	19, 25, 3486, 3484, 31, 30, 110, 109, 29, 3501,
	108, 107, 106, 3513, 105, 1073, 104, 28, 18, 42,
	41, 3506, 3490, 3491, 3492, 3493, 3514, 40, 9, 97,
	95, 27, 96, 93, 1536, 3518, 94, 3520, 92, 90,
	73, 72, 71, 86, 85, 3533, 3530, 84, 3154, 3155,
	83, 82, 81, 79, 80, 903, 652, 654, 653, 70,
	1073, 69, 1073, 68, 67, 66, 658, 91, 77, 87,
	78, 3544, 76, 3546, 75, 74, 3502, 3556, 662, 1536,
	65, 1536, 3549, 64, 63, 677, 136, 135, 1073, 3501,
	134, 3555, 655, 133, 132, 3560, 130, 131, 129, 3564,
	3573, 128, 3533, 127, 3567, 126, 1842, 1536, 125, 3569,
	124, 3577, 3545, 43, 44, 45, 46, 146, 145, 147,
	149, 3585, 3578, 151, 148, 3589, 153, 143, 141, 3588,
	144, 142, 3543, 3597, 140, 56, 100, 17, 24, 3585,
	3239, 4, 3605, 3606, 3604, 0, 0, 3589, 0, 3602,
	0, 3610, 0, 0, 3602, 0, 0, 0, 0, 0,
	0, 0, 0, 3602, 0, 1152, 1151, 1161, 1162, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 1153, 0, 117, 0,
	0, 117, 117, 0, 117, 1152, 1151, 1161, 1162, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 1153, 0, 0, 657,
	661, 667, 0, 668, 670, 0, 0, 671, 672, 673,
	0, 0, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 965, 747, 0, 0, 0, 0, 0, 965,
	0, 0, 357, 0, 480, 512, 502, 520, 469, 0,
	117, 0, 0, 0, 0, 701, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 791, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	738, 515, 468, 388, 341, 534, 533, 2761, 0, 801,
	809, 0, 0, 0, 0, 0, 0, 0, 3327, 0,
	0, 694, 0, 0, 728, 777, 776, 715, 725, 0,
	0, 270, 197, 464, 581, 465, 716, 0, 717, 721,
	724, 720, 718, 719, 0, 793, 0, 1169, 0, 0,
	0, 0, 686, 698, 0, 702, 0, 0, 0, 0,
	1152, 1151, 1161, 1162, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1153, 0, 0, 0, 0, 3367, 0, 0, 695,
	696, 0, 0, 0, 0, 748, 0, 697, 0, 0,
	743, 722, 726, 0, 0, 3378, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 723, 746, 750, 291, 815, 744, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 816, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 741, 0, 578, 0, 420,
	0, 0, 799, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 745, 0, 378, 359, 812, 3468, 3469,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 1636, 1635,
	1637, 432, 325, 326, 304, 252, 253, 595, 797, 355,
	544, 577, 470, 0, 811, 792, 794, 795, 798, 802,
	803, 804, 805, 806, 808, 810, 814, 594, 0, 523,
	538, 597, 537, 591, 361, 2246, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 813, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 749, 518,
	519, 345, 346, 347, 348, 800, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 1842, 0,
	509, 510, 508, 602, 0, 568, 569, 117, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 822, 796, 821, 823, 824, 820,
	825, 826, 807, 705, 0, 753, 818, 817, 819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	784, 760, 761, 762, 703, 763, 757, 758, 759, 785,
	751, 781, 782, 730, 754, 764, 780, 765, 783, 786,
	787, 827, 828, 771, 755, 222, 829, 768, 788, 779,
	778, 766, 752, 789, 790, 737, 732, 769, 770, 756,
	772, 773, 774, 704, 733, 734, 735, 736, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 174, 51, 163, 138, 524, 536, 570, 0, 579,
	580, 582, 584, 775, 0, 596, 466, 467, 576, 164,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	165, 0, 174, 51, 163, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	164, 0, 117, 0, 0, 0, 0, 156, 0, 0,
	0, 165, 0, 0, 103, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	115, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 1138, 1139, 1140, 1137, 103, 0, 0, 0, 0,
	0, 168, 1152, 1151, 1161, 1162, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 121, 0, 122,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1842, 1842, 1842, 1842, 0, 0, 0, 0,
	1612, 0, 0, 0, 1842, 0, 0, 120, 121, 0,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 162, 172,
	0, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	155, 154, 0, 0, 0, 1608, 57, 0, 137, 162,
	172, 1605, 101, 0, 0, 1607, 1604, 1606, 1610, 1611,
	117, 0, 0, 1609, 0, 117, 0, 0, 0, 0,
	161, 155, 154, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 158, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 166, 1605, 157, 158,
	159, 1607, 1604, 1606, 1610, 1611, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	160, 0, 112, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 160, 0, 112, 0, 0, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1615, 1616, 1617,
	1618, 1619, 1620, 1613, 1614, 0, 0, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 660, 659, 666, 656, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 664, 0, 665, 669,
	113, 1842, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 50, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1615, 1616, 1617, 1618, 1619, 1620, 1613,
	1614, 0, 0, 0, 0, 678, 0, 0, 680, 0,
	0, 0, 52, 679, 0, 0, 169, 170, 0, 171,
	0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 170, 0,
	171, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 39, 0, 0,
	0, 0, 0, 49, 0, 0, 0, 5, 0, 0,
	0, 0, 0, 118, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 39, 0,
	0, 0, 0, 0, 49, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 118, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 652,
	654, 653, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 747, 677, 0,
	0, 0, 0, 0, 0, 655, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 297, 1681, 0, 327, 516, 499, 791,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 738, 515, 468, 388, 341, 534,
	533, 0, 0, 801, 809, 0, 117, 0, 0, 0,
	0, 0, 1866, 117, 0, 694, 117, 0, 728, 777,
	776, 715, 725, 0, 0, 270, 197, 464, 581, 465,
	716, 0, 717, 721, 724, 720, 718, 719, 0, 793,
	0, 0, 0, 0, 0, 0, 686, 698, 0, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 657, 661, 667, 0, 668, 670, 0, 0,
	671, 672, 673, 695, 696, 675, 676, 0, 0, 748,
	0, 697, 0, 0, 1867, 722, 726, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 723, 746, 750,
	291, 815, 744, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 816, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 117, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 741,
	0, 578, 0, 420, 0, 0, 799, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 745, 0, 378,
	359, 812, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 797, 355, 544, 577, 470, 0, 811, 792,
	794, 795, 798, 802, 803, 804, 805, 806, 808, 810,
	814, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 813, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 749, 518, 519, 345, 346, 347, 348, 800,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 822, 796,
	821, 823, 824, 820, 825, 826, 807, 705, 0, 753,
	818, 817, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 784, 760, 761, 762, 703, 763,
	757, 758, 759, 785, 751, 781, 782, 730, 754, 764,
	780, 765, 783, 786, 787, 827, 828, 771, 755, 222,
	829, 768, 788, 779, 778, 766, 752, 789, 790, 737,
	732, 769, 770, 756, 772, 773, 774, 704, 733, 734,
	735, 736, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 775, 0, 596,
	466, 467, 576, 174, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 791, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 1172, 515, 468, 388, 341, 534, 533, 0, 0,
	801, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 694, 0, 0, 728, 777, 776, 715, 725,
	0, 0, 270, 197, 464, 581, 465, 716, 0, 717,
	721, 724, 720, 718, 719, 0, 793, 0, 0, 0,
	0, 0, 0, 686, 698, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 696, 0, 0, 0, 0, 748, 0, 697, 0,
	0, 743, 722, 726, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 723, 746, 750, 291, 815, 744,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 816, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 741, 0, 578, 0,
	420, 0, 0, 799, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 745, 0, 378, 359, 812, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 797,
	355, 544, 577, 470, 0, 811, 792, 794, 795, 798,
	802, 803, 804, 805, 806, 808, 810, 814, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 813,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 749,
	518, 519, 345, 346, 347, 348, 800, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 822, 796, 821, 823, 824,
	820, 825, 826, 807, 705, 0, 753, 818, 817, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 139, 369, 302, 540,
	541, 784, 760, 761, 762, 703, 763, 757, 758, 759,
	785, 751, 781, 782, 730, 754, 764, 780, 765, 783,
	786, 787, 827, 828, 771, 755, 222, 829, 768, 788,
	779, 778, 766, 752, 789, 790, 737, 732, 769, 770,
	756, 772, 773, 774, 704, 733, 734, 735, 736, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 775, 747, 596, 466, 467, 576,
	0, 0, 0, 0, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 791, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 738, 515, 468, 388, 341, 534, 533, 0,
	0, 801, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 694, 0, 0, 728, 777, 776, 715,
	725, 0, 0, 270, 197, 464, 581, 465, 716, 0,
	717, 721, 724, 720, 718, 719, 0, 793, 0, 0,
	0, 0, 0, 0, 686, 698, 0, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 696, 0, 0, 0, 0, 748, 0, 697,
	0, 0, 743, 722, 726, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 723, 746, 750, 291, 815,
	744, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 816, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 741, 0, 578,
	0, 420, 0, 0, 799, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 745, 0, 378, 359, 812,
	3603, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	797, 355, 544, 577, 470, 0, 811, 792, 794, 795,
	798, 802, 803, 804, 805, 806, 808, 810, 814, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	813, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	749, 518, 519, 345, 346, 347, 348, 800, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 822, 796, 821, 823,
	824, 820, 825, 826, 807, 705, 0, 753, 818, 817,
	819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 784, 760, 761, 762, 703, 763, 757, 758,
	759, 785, 751, 781, 782, 730, 754, 764, 780, 765,
	783, 786, 787, 827, 828, 771, 755, 222, 829, 768,
	788, 779, 778, 766, 752, 789, 790, 737, 732, 769,
	770, 756, 772, 773, 774, 704, 733, 734, 735, 736,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 775, 747, 596, 466, 467,
	576, 0, 0, 0, 0, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 297, 3568, 0, 327, 516, 499, 791, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 738, 515, 468, 388, 341, 534, 533,
	0, 0, 801, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 0, 728, 777, 776,
	715, 725, 0, 0, 270, 197, 464, 581, 465, 716,
	0, 717, 721, 724, 720, 718, 719, 0, 793, 0,
	0, 0, 0, 0, 0, 686, 698, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 695, 696, 0, 0, 0, 0, 748, 0,
	697, 0, 0, 743, 722, 726, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 723, 746, 750, 291,
	815, 744, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 816, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 741, 0,
	578, 0, 420, 0, 0, 799, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 745, 0, 378, 359,
	812, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 797, 355, 544, 577, 470, 0, 811, 792, 794,
	795, 798, 802, 803, 804, 805, 806, 808, 810, 814,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 813, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 749, 518, 519, 345, 346, 347, 348, 800, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 822, 796, 821,
	823, 824, 820, 825, 826, 807, 705, 0, 753, 818,
	817, 819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 784, 760, 761, 762, 703, 763, 757,
	758, 759, 785, 751, 781, 782, 730, 754, 764, 780,
	765, 783, 786, 787, 827, 828, 771, 755, 222, 829,
	768, 788, 779, 778, 766, 752, 789, 790, 737, 732,
	769, 770, 756, 772, 773, 774, 704, 733, 734, 735,
	736, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 775, 747, 596, 466,
	467, 576, 0, 0, 0, 0, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 297, 1681, 0, 327, 516, 499, 791,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 738, 515, 468, 388, 341, 534,
	533, 0, 0, 801, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 694, 0, 0, 728, 777,
	776, 715, 725, 0, 0, 270, 197, 464, 581, 465,
	716, 0, 717, 721, 724, 720, 718, 719, 0, 793,
	0, 0, 0, 0, 0, 0, 686, 698, 0, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 695, 696, 0, 0, 0, 0, 748,
	0, 697, 0, 0, 743, 722, 726, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 723, 746, 750,
	291, 815, 744, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 816, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 741,
	0, 578, 0, 420, 0, 0, 799, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 745, 0, 378,
	359, 812, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 797, 355, 544, 577, 470, 0, 811, 792,
	794, 795, 798, 802, 803, 804, 805, 806, 808, 810,
	814, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 813, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 749, 518, 519, 345, 346, 347, 348, 800,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 822, 796,
	821, 823, 824, 820, 825, 826, 807, 705, 0, 753,
	818, 817, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 784, 760, 761, 762, 703, 763,
	757, 758, 759, 785, 751, 781, 782, 730, 754, 764,
	780, 765, 783, 786, 787, 827, 828, 771, 755, 222,
	829, 768, 788, 779, 778, 766, 752, 789, 790, 737,
	732, 769, 770, 756, 772, 773, 774, 704, 733, 734,
	735, 736, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 775, 747, 596,
	466, 467, 576, 0, 0, 0, 0, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	791, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 738, 515, 468, 388, 341,
	534, 533, 0, 0, 801, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 694, 0, 0, 728,
	777, 776, 715, 725, 0, 0, 270, 197, 464, 581,
	465, 716, 0, 717, 721, 724, 720, 718, 719, 0,
	793, 0, 0, 0, 0, 0, 0, 686, 698, 0,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 696, 1425, 0, 0, 0,
	748, 0, 697, 0, 0, 743, 722, 726, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 723, 746,
	750, 291, 815, 744, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 816,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	741, 0, 578, 0, 420, 0, 0, 799, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 745, 0,
	378, 359, 812, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 797, 355, 544, 577, 470, 0, 811,
	792, 794, 795, 798, 802, 803, 804, 805, 806, 808,
	810, 814, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 813, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 749, 518, 519, 345, 346, 347, 348,
	800, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 822,
	796, 821, 823, 824, 820, 825, 826, 807, 705, 0,
	753, 818, 817, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 784, 760, 761, 762, 703,
	763, 757, 758, 759, 785, 751, 781, 782, 730, 754,
	764, 780, 765, 783, 786, 787, 827, 828, 771, 755,
	222, 829, 768, 788, 779, 778, 766, 752, 789, 790,
	737, 732, 769, 770, 756, 772, 773, 774, 704, 733,
	734, 735, 736, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 775, 0,
	596, 466, 467, 576, 747, 0, 0, 2026, 0, 0,
	0, 0, 0, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 791, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 738, 515, 468, 388, 341, 534, 533, 0, 0,
	801, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 694, 0, 0, 728, 777, 776, 715, 725,
	0, 0, 270, 197, 464, 581, 465, 716, 0, 717,
	721, 724, 720, 718, 719, 0, 793, 0, 0, 0,
	0, 0, 0, 686, 698, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 696, 0, 0, 0, 0, 748, 0, 697, 0,
	0, 743, 722, 726, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 723, 746, 750, 291, 815, 744,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 816, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 741, 0, 578, 0,
	420, 0, 0, 799, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 745, 0, 378, 359, 812, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 797,
	355, 544, 577, 470, 0, 811, 792, 794, 795, 798,
	802, 803, 804, 805, 806, 808, 810, 814, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 813,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 749,
	518, 519, 345, 346, 347, 348, 800, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 822, 796, 821, 823, 824,
	820, 825, 826, 807, 705, 0, 753, 818, 817, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 784, 760, 761, 762, 703, 763, 757, 758, 759,
	785, 751, 781, 782, 730, 754, 764, 780, 765, 783,
	786, 787, 827, 828, 771, 755, 222, 829, 768, 788,
	779, 778, 766, 752, 789, 790, 737, 732, 769, 770,
	756, 772, 773, 774, 704, 733, 734, 735, 736, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 775, 747, 596, 466, 467, 576,
	0, 0, 0, 0, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 791, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 738, 515, 468, 388, 341, 534, 533, 0,
	0, 801, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 694, 0, 0, 728, 777, 776, 715,
	725, 0, 0, 270, 197, 464, 581, 465, 716, 0,
	717, 721, 724, 720, 718, 719, 0, 793, 0, 0,
	0, 0, 0, 0, 686, 698, 0, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 696, 1674, 0, 0, 0, 748, 0, 697,
	0, 0, 743, 722, 726, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 723, 746, 750, 291, 815,
	744, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 816, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 741, 0, 578,
	0, 420, 0, 0, 799, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 745, 0, 378, 359, 812,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	797, 355, 544, 577, 470, 0, 811, 792, 794, 795,
	798, 802, 803, 804, 805, 806, 808, 810, 814, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	813, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	749, 518, 519, 345, 346, 347, 348, 800, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 822, 796, 821, 823,
	824, 820, 825, 826, 807, 705, 0, 753, 818, 817,
	819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 784, 760, 761, 762, 703, 763, 757, 758,
	759, 785, 751, 781, 782, 730, 754, 764, 780, 765,
	783, 786, 787, 827, 828, 771, 755, 222, 829, 768,
	788, 779, 778, 766, 752, 789, 790, 737, 732, 769,
	770, 756, 772, 773, 774, 704, 733, 734, 735, 736,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 775, 747, 596, 466, 467,
	576, 0, 0, 0, 0, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 791, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 738, 515, 468, 388, 341, 534, 533,
	0, 0, 801, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 0, 728, 777, 776,
	715, 725, 0, 0, 270, 197, 464, 581, 465, 716,
	0, 717, 721, 724, 720, 718, 719, 0, 793, 0,
	0, 0, 0, 0, 0, 686, 698, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 695, 696, 0, 0, 0, 0, 748, 0,
	697, 0, 0, 743, 722, 726, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 723, 746, 750, 291,
	815, 744, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 816, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 741, 0,
	578, 0, 420, 0, 0, 799, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 745, 0, 378, 359,
	812, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 797, 355, 544, 577, 470, 0, 811, 792, 794,
	795, 798, 802, 803, 804, 805, 806, 808, 810, 814,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 813, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 749, 518, 519, 345, 346, 347, 348, 800, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 822, 796, 821,
	823, 824, 820, 825, 826, 807, 705, 0, 753, 818,
	817, 819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 784, 760, 761, 762, 703, 763, 757,
	758, 759, 785, 751, 781, 782, 730, 754, 764, 780,
	765, 783, 786, 787, 827, 828, 771, 755, 222, 829,
	768, 788, 779, 778, 766, 752, 789, 790, 737, 732,
	769, 770, 756, 772, 773, 774, 704, 733, 734, 735,
	736, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 775, 747, 596, 466,
	467, 576, 0, 0, 0, 0, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 791,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 738, 515, 468, 388, 341, 534,
	533, 0, 0, 801, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 694, 0, 0, 728, 777,
	776, 715, 725, 0, 0, 270, 197, 464, 581, 465,
	2448, 0, 2449, 721, 724, 720, 718, 719, 0, 793,
	0, 0, 0, 0, 0, 0, 686, 698, 0, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 695, 696, 0, 0, 0, 0, 748,
	0, 697, 0, 0, 743, 722, 726, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 723, 746, 750,
	291, 815, 744, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 816, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 741,
	0, 578, 0, 420, 0, 0, 799, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 745, 0, 378,
	359, 812, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 797, 355, 544, 577, 470, 0, 811, 792,
	794, 795, 798, 802, 803, 804, 805, 806, 808, 810,
	814, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 813, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 749, 518, 519, 345, 346, 347, 348, 800,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 822, 796,
	821, 823, 824, 820, 825, 826, 807, 705, 0, 753,
	818, 817, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 784, 760, 761, 762, 703, 763,
	757, 758, 759, 785, 751, 781, 782, 730, 754, 764,
	780, 765, 783, 786, 787, 827, 828, 771, 755, 222,
	829, 768, 788, 779, 778, 766, 752, 789, 790, 737,
	732, 769, 770, 756, 772, 773, 774, 704, 733, 734,
	735, 736, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 775, 747, 596,
	466, 467, 576, 0, 0, 0, 0, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 1554, 0, 0, 0,
	701, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	791, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 738, 515, 468, 388, 341,
	534, 533, 0, 0, 801, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 694, 0, 0, 728,
	777, 776, 715, 725, 0, 0, 270, 197, 464, 581,
	465, 716, 0, 717, 721, 724, 720, 718, 719, 0,
	793, 0, 0, 0, 0, 0, 0, 0, 698, 0,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 696, 0, 0, 0, 0,
	748, 0, 697, 0, 0, 743, 722, 726, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 723, 746,
	750, 291, 815, 744, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 816,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	741, 0, 578, 0, 420, 0, 0, 799, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 745, 0,
	378, 359, 812, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 1555, 1556,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 797, 355, 544, 577, 470, 0, 811,
	792, 794, 795, 798, 802, 803, 804, 805, 806, 808,
	810, 814, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 813, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 749, 518, 519, 345, 346, 347, 348,
	800, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 822,
	796, 821, 823, 824, 820, 825, 826, 807, 705, 0,
	753, 818, 817, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 784, 760, 761, 762, 703,
	763, 757, 758, 759, 785, 751, 781, 782, 730, 754,
	764, 780, 765, 783, 786, 787, 827, 828, 771, 755,
	222, 829, 768, 788, 779, 778, 766, 752, 789, 790,
	737, 732, 769, 770, 756, 772, 773, 774, 704, 733,
	734, 735, 736, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 775, 747,
	596, 466, 467, 576, 0, 0, 0, 0, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 701, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 791, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 738, 515, 468, 388,
	341, 534, 533, 0, 0, 801, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 694, 0, 0,
	728, 777, 776, 715, 725, 0, 0, 270, 197, 464,
	581, 465, 716, 0, 717, 721, 724, 720, 718, 719,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 698,
	0, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 696, 0, 0, 0,
	0, 748, 0, 697, 0, 0, 743, 722, 726, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 723,
	746, 750, 291, 815, 744, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	816, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 741, 0, 578, 0, 420, 0, 0, 799, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 745,
	0, 378, 359, 812, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 797, 355, 544, 577, 470, 0,
	811, 792, 794, 795, 798, 802, 803, 804, 805, 806,
	808, 810, 814, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 813, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 749, 518, 519, 345, 346, 347,
	348, 800, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	822, 796, 821, 823, 824, 820, 825, 826, 807, 705,
	0, 753, 818, 817, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 784, 760, 761, 762,
	703, 763, 757, 758, 759, 785, 751, 781, 782, 730,
	754, 764, 780, 765, 783, 786, 787, 827, 828, 771,
	755, 222, 829, 768, 788, 779, 778, 766, 752, 789,
	790, 737, 732, 769, 770, 756, 772, 773, 774, 704,
	733, 734, 735, 736, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 775,
	747, 596, 466, 467, 576, 0, 0, 0, 0, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 701, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 791, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 738, 515, 468,
	388, 341, 534, 533, 0, 0, 801, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 777, 776, 715, 725, 0, 0, 270, 197,
	464, 581, 465, 716, 0, 717, 721, 724, 720, 718,
	719, 0, 793, 0, 0, 0, 0, 0, 0, 686,
	698, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 696, 0, 0,
	0, 0, 748, 0, 697, 0, 0, 743, 722, 726,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	723, 746, 750, 291, 815, 744, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 816, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 741, 0, 578, 0, 420, 0, 0, 799,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	745, 0, 378, 359, 812, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 797, 355, 544, 577, 470,
	0, 811, 792, 794, 795, 798, 802, 803, 804, 805,
	806, 808, 810, 814, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 813, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 749, 518, 519, 345, 346,
	347, 348, 800, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 822, 796, 821, 823, 824, 820, 825, 826, 807,
	705, 0, 753, 818, 817, 819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 784, 760, 761,
	762, 703, 763, 757, 758, 759, 785, 751, 781, 782,
	730, 754, 764, 780, 765, 783, 786, 787, 827, 828,
	771, 755, 222, 829, 768, 788, 779, 778, 766, 752,
	789, 790, 737, 732, 769, 770, 756, 772, 773, 774,
	704, 733, 734, 735, 736, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	775, 0, 596, 466, 467, 576, 174, 51, 163, 138,
	0, 0, 0, 0, 0, 0, 357, 0, 480, 512,
	502, 520, 469, 0, 164, 0, 0, 0, 0, 0,
	0, 156, 0, 297, 0, 165, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 115, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 168, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 137, 162, 172, 0, 101, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 189, 0, 0, 0,
	392, 0, 0, 324, 161, 155, 154, 436, 0, 378,
	359, 201, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 554, 555, 556, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 415, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 192, 526, 529,
	461, 202, 0, 523, 538, 496, 537, 203, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 113, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 200, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 370, 265, 403, 381, 0, 254, 476, 328, 139,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 204, 39, 190, 193, 195, 194, 0, 49, 524,
	536, 570, 5, 579, 580, 582, 584, 583, 118, 205,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1205, 0, 0, 196, 0, 0, 715, 725,
	0, 0, 270, 197, 464, 581, 465, 716, 0, 717,
	721, 724, 720, 718, 719, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 723, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	174, 51, 163, 138, 0, 0, 0, 0, 0, 0,
	357, 619, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 624,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 620, 622, 275, 443, 371, 632, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 139, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 2153, 2156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 2157, 420, 0, 0, 0, 2152, 0,
	2151, 392, 2149, 2154, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 2155, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 1031, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 2299, 2302, 2303, 2304, 2305, 2306, 2307, 0,
	2312, 2308, 2309, 2310, 2311, 0, 2294, 2295, 2296, 2297,
	1015, 2278, 2300, 0, 2279, 353, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2291, 2292, 2289, 2290, 2298,
	365, 331, 366, 314, 343, 342, 344, 1042, 1044, 1046,
	1048, 1051, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 2293, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 2301, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 2172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 2171, 420, 0,
	0, 0, 2177, 2174, 2176, 392, 0, 2175, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	1906, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1907, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 1138, 1139, 1140, 1137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	174, 596, 466, 467, 576, 0, 0, 0, 0, 0,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 115, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	1950, 0, 196, 0, 0, 0, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 139, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 174, 596, 466, 467, 576, 0, 0, 0,
	0, 0, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	115, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 1941, 0, 196, 0, 0, 0, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 139, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 948, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 955, 956, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 943, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 933, 418, 264, 932, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 946, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 947, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 950, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 957, 944, 953, 945, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 954, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 174, 596, 466, 467, 576, 0, 0, 0, 0,
	0, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 115,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 0, 420, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 139, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 955, 956, 0, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 933, 418, 264, 932, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 957, 1859, 953, 1860, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 954, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 2630, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 2633, 0, 0, 2632, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	1392, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1390, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1388, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 1386, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1390, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1388, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3497, 0, 196, 777,
	0, 0, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1390, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1390, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3178, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 2242,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2244, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 2263, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 1390,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3563, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 0, 420, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 777, 0, 0, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3474, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 3395, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3174, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 3001, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 3246, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2846, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 410, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 410, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 0, 420, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2815, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1390, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 372, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2244, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 0,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2319, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 2113, 596, 466, 467, 576, 0, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 289, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	372, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 567,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 0, 0, 428, 429, 430, 452, 414, 475,
	590, 0, 0, 0, 0, 0, 0, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 357, 0, 480, 512, 502, 520, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 0, 327, 516, 499, 585, 500, 485, 486, 487,
	494, 307, 488, 489, 490, 462, 491, 463, 492, 493,
	0, 515, 468, 388, 341, 534, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1390, 0, 0,
	0, 270, 197, 464, 581, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 393, 410,
	271, 384, 423, 276, 391, 266, 356, 380, 0, 0,
	262, 408, 390, 338, 317, 318, 261, 0, 375, 295,
	309, 292, 354, 0, 407, 435, 291, 426, 0, 418,
	264, 0, 417, 353, 404, 409, 339, 333, 263, 406,
	337, 332, 321, 299, 451, 322, 323, 313, 365, 331,
	366, 314, 343, 342, 344, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 578, 0, 420,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 324,
	0, 0, 0, 436, 0, 378, 359, 598, 0, 0,
	376, 329, 405, 367, 411, 394, 419, 1738, 368, 255,
	395, 294, 340, 267, 269, 289, 296, 298, 300, 301,
	349, 350, 362, 383, 396, 397, 398, 293, 277, 377,
	278, 311, 279, 256, 285, 283, 286, 385, 287, 258,
	363, 402, 0, 306, 373, 336, 259, 335, 364, 401,
	400, 268, 427, 433, 434, 521, 0, 439, 599, 600,
	601, 448, 453, 454, 455, 457, 458, 459, 460, 522,
	539, 506, 477, 441, 530, 474, 478, 542, 0, 0,
	0, 432, 325, 326, 304, 252, 253, 595, 290, 355,
	544, 577, 470, 0, 531, 471, 479, 282, 503, 514,
	513, 351, 431, 0, 526, 529, 461, 594, 0, 523,
	538, 597, 537, 591, 361, 0, 382, 535, 482, 0,
	527, 501, 0, 528, 497, 532, 0, 472, 0, 389,
	413, 425, 442, 445, 473, 557, 558, 559, 257, 444,
	561, 562, 563, 564, 565, 566, 567, 560, 416, 504,
	481, 507, 424, 484, 483, 0, 0, 517, 440, 518,
	519, 345, 346, 347, 348, 308, 545, 275, 443, 371,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 510, 508, 602, 0, 568, 569, 0, 0, 437,
	438, 303, 310, 456, 312, 274, 360, 305, 422, 319,
	0, 449, 511, 450, 571, 574, 572, 573, 352, 315,
	316, 386, 320, 330, 374, 421, 358, 379, 272, 412,
	387, 334, 498, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 552, 551, 550, 549, 548, 547, 546, 0, 0,
	495, 399, 284, 250, 280, 281, 288, 592, 589, 403,
	593, 0, 254, 476, 328, 0, 369, 302, 540, 541,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 223, 224, 225, 226, 227,
	228, 229, 230, 543, 221, 222, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	0, 0, 0, 251, 246, 247, 248, 249, 0, 0,
	0, 428, 429, 430, 452, 414, 475, 590, 0, 0,
	0, 0, 0, 0, 0, 524, 536, 570, 0, 579,
	580, 582, 584, 583, 0, 596, 466, 467, 576, 357,
	0, 480, 512, 502, 520, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 0, 327,
	516, 499, 585, 500, 485, 486, 487, 494, 307, 488,
	489, 490, 462, 491, 463, 492, 493, 0, 515, 468,
	388, 341, 534, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 270, 197,
	464, 581, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 393, 410, 271, 384, 423,
	276, 391, 266, 356, 380, 0, 0, 262, 408, 390,
	338, 317, 318, 261, 0, 375, 295, 309, 292, 354,
	0, 407, 435, 291, 426, 0, 418, 264, 0, 417,
	353, 404, 409, 339, 333, 263, 406, 337, 332, 321,
	299, 451, 322, 323, 313, 365, 331, 366, 314, 343,
	342, 344, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 578, 0, 420, 0, 0, 1420,
	0, 0, 0, 392, 0, 0, 324, 0, 0, 0,
	436, 0, 378, 359, 598, 0, 0, 376, 329, 405,
	367, 411, 394, 419, 372, 368, 255, 395, 294, 340,
	267, 269, 289, 296, 298, 300, 301, 349, 350, 362,
	383, 396, 397, 398, 293, 277, 377, 278, 311, 279,
	256, 285, 283, 286, 385, 287, 258, 363, 402, 0,
	306, 373, 336, 259, 335, 364, 401, 400, 268, 427,
	433, 434, 521, 0, 439, 599, 600, 601, 448, 453,
	454, 455, 457, 458, 459, 460, 522, 539, 506, 477,
	441, 530, 474, 478, 542, 0, 0, 0, 432, 325,
	326, 304, 252, 253, 595, 290, 355, 544, 577, 470,
	0, 531, 471, 479, 282, 503, 514, 513, 351, 431,
	0, 526, 529, 461, 594, 0, 523, 538, 597, 537,
	591, 361, 0, 382, 535, 482, 0, 527, 501, 0,
	528, 497, 532, 0, 472, 0, 389, 413, 425, 442,
	445, 473, 557, 558, 559, 257, 444, 561, 562, 563,
	564, 565, 566, 567, 560, 416, 504, 481, 507, 424,
	484, 483, 0, 0, 517, 440, 518, 519, 345, 346,
	347, 348, 308, 545, 275, 443, 371, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 510, 508,
	602, 0, 568, 569, 0, 0, 437, 438, 303, 310,
	456, 312, 274, 360, 305, 422, 319, 0, 449, 511,
	450, 571, 574, 572, 573, 352, 315, 316, 386, 320,
	330, 374, 421, 358, 379, 272, 412, 387, 334, 498,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 552, 551,
	550, 549, 548, 547, 546, 0, 0, 495, 399, 284,
	250, 280, 281, 288, 592, 589, 403, 593, 0, 254,
	476, 328, 0, 369, 302, 540, 541, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 223, 224, 225, 226, 227, 228, 229, 230,
	543, 221, 222, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 0, 0, 0,
	251, 246, 247, 248, 249, 0, 0, 0, 428, 429,
	430, 452, 414, 475, 590, 0, 0, 0, 0, 0,
	0, 0, 524, 536, 570, 0, 579, 580, 582, 584,
	583, 0, 596, 466, 467, 576, 357, 0, 480, 512,
	502, 520, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 327, 516, 499, 585,
	500, 485, 486, 487, 494, 307, 488, 489, 490, 462,
	491, 463, 492, 493, 0, 515, 468, 388, 341, 534,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 270, 197, 464, 581, 465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 393, 410, 271, 384, 423, 276, 391, 266,
	356, 380, 0, 0, 262, 408, 390, 338, 317, 318,
	261, 0, 375, 295, 309, 292, 354, 0, 407, 435,
	291, 426, 0, 418, 264, 0, 417, 353, 404, 409,
	339, 333, 263, 406, 337, 332, 321, 299, 451, 322,
	323, 313, 365, 331, 366, 314, 343, 342, 344, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 0,
	617, 578, 0, 420, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 324, 0, 0, 0, 436, 0, 378,
	359, 598, 0, 0, 376, 329, 405, 367, 411, 394,
	419, 372, 368, 255, 395, 294, 340, 267, 269, 289,
	296, 298, 300, 301, 349, 350, 362, 383, 396, 397,
	398, 293, 277, 377, 278, 311, 279, 256, 285, 283,
	286, 385, 287, 258, 363, 402, 0, 306, 373, 336,
	259, 335, 364, 401, 400, 268, 427, 433, 434, 521,
	0, 439, 599, 600, 601, 448, 453, 454, 455, 457,
	458, 459, 460, 522, 539, 506, 477, 441, 530, 474,
	478, 542, 0, 0, 0, 432, 325, 326, 304, 252,
	253, 595, 290, 355, 544, 577, 470, 0, 531, 471,
	479, 282, 503, 514, 513, 351, 431, 0, 526, 529,
	461, 594, 0, 523, 538, 597, 537, 591, 361, 0,
	382, 535, 482, 0, 527, 501, 0, 528, 497, 532,
	0, 472, 0, 389, 413, 425, 442, 445, 473, 557,
	558, 559, 257, 444, 561, 562, 563, 564, 565, 566,
	567, 560, 416, 504, 481, 507, 424, 484, 483, 0,
	0, 517, 440, 518, 519, 345, 346, 347, 348, 308,
	545, 275, 443, 371, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 510, 508, 602, 0, 568,
	569, 0, 0, 437, 438, 303, 310, 456, 312, 274,
	360, 305, 422, 319, 0, 449, 511, 450, 571, 574,
	572, 573, 352, 315, 316, 386, 320, 330, 374, 421,
	358, 379, 272, 412, 387, 334, 498, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 552, 551, 550, 549, 548,
	547, 546, 0, 0, 495, 399, 284, 250, 280, 281,
	288, 592, 589, 403, 593, 0, 254, 476, 328, 0,
	369, 302, 540, 541, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 223,
	224, 225, 226, 227, 228, 229, 230, 543, 221, 222,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 0, 0, 0, 251, 246, 247,
	248, 249, 0, 0, 0, 428, 429, 430, 452, 414,
	475, 590, 0, 0, 0, 0, 0, 0, 0, 524,
	536, 570, 0, 579, 580, 582, 584, 583, 0, 596,
	466, 467, 576, 357, 0, 480, 512, 502, 520, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 327, 516, 499, 585, 500, 485, 486,
	487, 494, 307, 488, 489, 490, 462, 491, 463, 492,
	493, 0, 515, 468, 388, 341, 534, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 270, 197, 464, 581, 465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 393,
	410, 271, 384, 423, 276, 391, 266, 356, 380, 0,
	0, 262, 408, 390, 338, 317, 318, 261, 0, 375,
	295, 309, 292, 354, 0, 407, 435, 291, 426, 0,
	418, 264, 0, 417, 353, 404, 409, 339, 333, 263,
	406, 337, 332, 321, 299, 451, 322, 323, 313, 365,
	331, 366, 314, 343, 342, 344, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 578, 0,
	420, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	324, 0, 0, 0, 436, 0, 378, 359, 598, 0,
	0, 376, 329, 405, 367, 411, 394, 419, 372, 368,
	255, 395, 294, 340, 267, 269, 289, 296, 298, 300,
	301, 349, 350, 362, 383, 396, 397, 398, 293, 277,
	377, 278, 311, 279, 256, 285, 283, 286, 385, 287,
	258, 363, 402, 0, 306, 373, 336, 259, 335, 364,
	401, 400, 268, 427, 433, 434, 521, 0, 439, 599,
	600, 601, 448, 453, 454, 455, 457, 458, 459, 460,
	522, 539, 506, 477, 441, 530, 474, 478, 542, 0,
	0, 0, 432, 325, 326, 304, 252, 253, 595, 290,
	355, 544, 577, 470, 0, 531, 471, 479, 282, 503,
	514, 513, 351, 431, 0, 526, 529, 461, 594, 0,
	523, 538, 597, 537, 591, 361, 0, 382, 535, 482,
	0, 527, 501, 0, 528, 497, 532, 0, 472, 0,
	389, 413, 425, 442, 445, 473, 557, 558, 559, 257,
	444, 561, 562, 563, 564, 565, 566, 567, 560, 416,
	504, 481, 507, 424, 484, 483, 0, 0, 517, 440,
	518, 519, 345, 346, 347, 348, 308, 545, 275, 443,
	371, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 510, 508, 602, 0, 568, 569, 0, 0,
	437, 438, 303, 310, 456, 312, 274, 360, 305, 422,
	319, 0, 449, 511, 450, 571, 574, 572, 573, 352,
	315, 316, 386, 320, 330, 374, 421, 358, 379, 272,
	412, 387, 334, 498, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 552, 551, 550, 549, 548, 547, 546, 887,
	0, 495, 399, 284, 250, 280, 281, 288, 592, 589,
	403, 593, 0, 254, 476, 328, 0, 369, 302, 540,
	541, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 223, 224, 225, 226,
	227, 228, 229, 230, 543, 221, 222, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 0, 0, 0, 251, 246, 247, 248, 249, 0,
	0, 0, 428, 429, 430, 452, 414, 475, 590, 0,
	0, 0, 0, 0, 0, 0, 524, 536, 570, 0,
	579, 580, 582, 584, 583, 0, 596, 466, 467, 576,
	357, 0, 480, 512, 502, 520, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 297, 0, 0,
	327, 516, 499, 585, 500, 485, 486, 487, 494, 307,
	488, 489, 490, 462, 491, 463, 492, 493, 0, 515,
	468, 388, 341, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 270,
	197, 464, 581, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 393, 410, 271, 384,
	423, 276, 391, 266, 356, 380, 0, 0, 262, 408,
	390, 338, 317, 318, 261, 0, 375, 295, 309, 292,
	354, 0, 407, 435, 291, 426, 0, 418, 264, 0,
	417, 353, 404, 409, 339, 333, 263, 406, 337, 332,
	321, 299, 451, 322, 323, 313, 365, 331, 366, 314,
	343, 342, 344, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 420, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 324, 0, 0,
	0, 436, 0, 378, 359, 598, 0, 0, 376, 329,
	405, 367, 411, 394, 419, 372, 368, 255, 395, 294,
	340, 267, 269, 289, 296, 298, 300, 301, 349, 350,
	362, 383, 396, 397, 398, 293, 277, 377, 278, 311,
	279, 256, 285, 283, 286, 385, 287, 258, 363, 402,
	0, 306, 373, 336, 259, 335, 364, 401, 400, 268,
	427, 433, 434, 521, 0, 439, 599, 600, 601, 448,
	453, 454, 455, 457, 458, 459, 460, 522, 539, 506,
	477, 441, 530, 474, 478, 542, 0, 0, 0, 432,
	325, 326, 304, 252, 253, 595, 290, 355, 544, 577,
	470, 0, 531, 471, 479, 282, 503, 514, 513, 351,
	431, 0, 526, 529, 461, 594, 0, 523, 538, 597,
	537, 591, 361, 0, 382, 535, 482, 0, 527, 501,
	0, 528, 497, 532, 0, 472, 0, 389, 413, 425,
	442, 445, 473, 557, 558, 559, 257, 444, 561, 562,
	563, 564, 565, 566, 567, 560, 416, 504, 481, 507,
	424, 484, 483, 0, 0, 517, 440, 518, 519, 345,
	346, 347, 348, 308, 545, 275, 443, 371, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 510,
	508, 602, 0, 568, 569, 0, 0, 437, 438, 303,
	310, 456, 312, 274, 360, 305, 422, 319, 0, 449,
	511, 450, 571, 574, 572, 573, 352, 315, 316, 386,
	320, 330, 374, 421, 358, 379, 272, 412, 387, 334,
	498, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 552,
	551, 550, 549, 548, 547, 546, 0, 0, 495, 399,
	284, 250, 280, 281, 288, 592, 589, 403, 593, 0,
	254, 476, 328, 0, 369, 302, 540, 541, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 223, 224, 225, 226, 227, 228, 229,
	230, 543, 221, 222, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 0, 0,
	0, 251, 246, 247, 248, 249, 0, 0, 0, 428,
	429, 430, 452, 414, 475, 590, 0, 0, 0, 0,
	0, 0, 0, 524, 536, 570, 0, 579, 580, 582,
	584, 583, 0, 596, 466, 467, 576, 357, 0, 480,
	512, 502, 520, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 327, 516, 499,
	585, 500, 485, 486, 487, 494, 307, 488, 489, 490,
	462, 491, 463, 492, 493, 0, 515, 468, 388, 341,
	534, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 270, 197, 464, 581,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 393, 410, 271, 384, 423, 276, 391,
	266, 356, 380, 0, 0, 262, 408, 390, 338, 317,
	318, 261, 0, 375, 295, 309, 292, 354, 0, 407,
	435, 291, 426, 0, 418, 264, 0, 417, 353, 404,
	409, 339, 333, 263, 406, 337, 332, 321, 299, 451,
	322, 323, 313, 365, 331, 366, 314, 343, 342, 344,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 578, 0, 420, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 324, 0, 0, 0, 436, 0,
	378, 359, 598, 0, 0, 376, 329, 405, 367, 411,
	394, 419, 372, 368, 255, 395, 294, 340, 267, 269,
	289, 296, 298, 300, 301, 349, 350, 362, 383, 396,
	397, 398, 293, 277, 377, 278, 311, 279, 256, 285,
	283, 286, 385, 287, 258, 363, 402, 0, 306, 373,
	336, 259, 335, 364, 401, 400, 268, 427, 433, 434,
	521, 0, 439, 599, 600, 601, 448, 453, 454, 455,
	457, 458, 459, 460, 522, 539, 506, 477, 441, 530,
	474, 478, 542, 0, 0, 0, 432, 325, 326, 304,
	252, 253, 595, 290, 355, 544, 577, 470, 0, 531,
	471, 479, 282, 503, 514, 513, 351, 431, 0, 526,
	529, 461, 594, 0, 523, 538, 597, 537, 591, 361,
	0, 382, 535, 482, 0, 527, 501, 0, 528, 497,
	532, 0, 472, 0, 389, 413, 425, 442, 445, 473,
	557, 558, 559, 257, 444, 561, 562, 563, 564, 565,
	566, 567, 560, 416, 504, 481, 507, 424, 484, 483,
	0, 0, 517, 440, 518, 519, 345, 346, 347, 348,
	308, 545, 275, 443, 371, 0, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 510, 508, 602, 0,
	568, 569, 0, 0, 437, 438, 303, 310, 456, 312,
	274, 360, 305, 422, 319, 0, 449, 511, 450, 571,
	574, 572, 573, 352, 315, 316, 386, 320, 330, 374,
	421, 358, 379, 272, 412, 387, 334, 498, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 552, 551, 550, 549,
	548, 547, 546, 0, 0, 495, 399, 284, 250, 280,
	281, 288, 592, 589, 403, 593, 0, 254, 476, 328,
	0, 369, 302, 540, 541, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	223, 224, 225, 226, 227, 228, 229, 230, 543, 221,
	222, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 0, 0, 0, 251, 246,
	247, 248, 249, 0, 0, 0, 428, 429, 430, 452,
	414, 475, 590, 0, 0, 0, 0, 0, 0, 0,
	524, 536, 570, 0, 579, 580, 582, 584, 583, 0,
	596, 466, 467, 576, 357, 0, 480, 512, 502, 520,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 0, 327, 516, 499, 585, 500, 485,
	486, 487, 494, 307, 488, 489, 490, 462, 491, 463,
	492, 493, 0, 515, 468, 388, 341, 534, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 270, 197, 464, 581, 465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	393, 1370, 271, 384, 423, 276, 391, 266, 356, 380,
	0, 0, 262, 408, 390, 338, 317, 318, 261, 0,
	375, 295, 309, 292, 354, 0, 407, 435, 291, 426,
	0, 418, 264, 0, 417, 353, 404, 409, 339, 333,
	263, 406, 337, 332, 321, 299, 451, 322, 323, 313,
	365, 331, 366, 314, 343, 342, 344, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 578,
	0, 420, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 324, 0, 0, 0, 436, 0, 378, 359, 598,
	0, 0, 376, 329, 405, 367, 411, 394, 419, 372,
	368, 255, 395, 294, 340, 267, 269, 289, 296, 298,
	300, 301, 349, 350, 362, 383, 396, 397, 398, 293,
	277, 377, 278, 311, 279, 256, 285, 283, 286, 385,
	287, 258, 363, 402, 0, 306, 373, 336, 259, 335,
	364, 401, 400, 268, 427, 433, 434, 521, 0, 439,
	599, 600, 601, 448, 453, 454, 455, 457, 458, 459,
	460, 522, 539, 506, 477, 441, 530, 474, 478, 542,
	0, 0, 0, 432, 325, 326, 304, 252, 253, 595,
	290, 355, 544, 577, 470, 0, 531, 471, 479, 282,
	503, 514, 513, 351, 431, 0, 526, 529, 461, 594,
	0, 523, 538, 597, 537, 591, 361, 0, 382, 535,
	482, 0, 527, 501, 0, 528, 497, 532, 0, 472,
	0, 389, 413, 425, 442, 445, 473, 557, 558, 559,
	257, 444, 561, 562, 563, 564, 565, 566, 567, 560,
	416, 504, 481, 507, 424, 484, 483, 0, 0, 517,
	440, 518, 519, 345, 346, 347, 348, 308, 545, 275,
	443, 371, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 510, 508, 602, 0, 568, 569, 0,
	0, 437, 438, 303, 310, 456, 312, 274, 360, 305,
	422, 319, 0, 449, 511, 450, 571, 574, 572, 573,
	352, 315, 316, 386, 320, 330, 374, 421, 358, 379,
	272, 412, 387, 334, 498, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 552, 551, 550, 549, 548, 547, 546,
	0, 0, 495, 399, 284, 250, 280, 281, 288, 592,
	589, 403, 593, 0, 254, 476, 328, 0, 369, 302,
	540, 541, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 223, 224, 225,
	226, 227, 228, 229, 230, 543, 221, 222, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 0, 0, 0, 251, 246, 247, 248, 249,
	0, 0, 0, 428, 429, 430, 452, 414, 475, 590,
	0, 0, 0, 0, 0, 0, 0, 524, 536, 570,
	0, 579, 580, 582, 584, 583, 0, 596, 466, 467,
	576, 357, 0, 480, 512, 502, 520, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	0, 327, 516, 499, 585, 500, 485, 486, 487, 494,
	307, 488, 489, 490, 462, 491, 463, 492, 493, 0,
	515, 468, 388, 341, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	270, 197, 464, 581, 465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 393, 1368, 271,
	384, 423, 276, 391, 266, 356, 380, 0, 0, 262,
	408, 390, 338, 317, 318, 261, 0, 375, 295, 309,
	292, 354, 0, 407, 435, 291, 426, 0, 418, 264,
	0, 417, 353, 404, 409, 339, 333, 263, 406, 337,
	332, 321, 299, 451, 322, 323, 313, 365, 331, 366,
	314, 343, 342, 344, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 578, 0, 420, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 324, 0,
	0, 0, 436, 0, 378, 359, 598, 0, 0, 376,
	329, 405, 367, 411, 394, 419, 372, 368, 255, 395,
	294, 340, 267, 269, 289, 296, 298, 300, 301, 349,
	350, 362, 383, 396, 397, 398, 293, 277, 377, 278,
	311, 279, 256, 285, 283, 286, 385, 287, 258, 363,
	402, 0, 306, 373, 336, 259, 335, 364, 401, 400,
	268, 427, 433, 434, 521, 0, 439, 599, 600, 601,
	448, 453, 454, 455, 457, 458, 459, 460, 522, 539,
	506, 477, 441, 530, 474, 478, 542, 0, 0, 0,
	432, 325, 326, 304, 252, 253, 595, 290, 355, 544,
	577, 470, 0, 531, 471, 479, 282, 503, 514, 513,
	351, 431, 0, 526, 529, 461, 594, 0, 523, 538,
	597, 537, 591, 361, 0, 382, 535, 482, 0, 527,
	501, 0, 528, 497, 532, 0, 472, 0, 389, 413,
	425, 442, 445, 473, 557, 558, 559, 257, 444, 561,
	562, 563, 564, 565, 566, 567, 560, 416, 504, 481,
	507, 424, 484, 483, 0, 0, 517, 440, 518, 519,
	345, 346, 347, 348, 308, 545, 275, 443, 371, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	510, 508, 602, 0, 568, 569, 0, 0, 437, 438,
	303, 310, 456, 312, 274, 360, 305, 422, 319, 0,
	449, 511, 450, 571, 574, 572, 573, 352, 315, 316,
	386, 320, 330, 374, 421, 358, 379, 272, 412, 387,
	334, 498, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	552, 551, 550, 549, 548, 547, 546, 0, 0, 495,
	399, 284, 250, 280, 281, 288, 592, 589, 403, 593,
	0, 254, 476, 328, 0, 369, 302, 540, 541, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 223, 224, 225, 226, 227, 228,
	229, 230, 543, 221, 222, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 0,
	0, 0, 251, 246, 247, 248, 249, 0, 0, 0,
	428, 429, 430, 452, 414, 475, 590, 0, 0, 0,
	0, 0, 0, 0, 524, 536, 570, 0, 579, 580,
	582, 584, 583, 0, 596, 466, 467, 576, 357, 0,
	480, 512, 502, 520, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 0, 327, 516,
	499, 585, 500, 485, 486, 487, 494, 307, 488, 489,
	490, 462, 491, 463, 492, 493, 0, 515, 468, 388,
	341, 534, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 270, 197, 464,
	581, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 393, 410, 271, 384, 423, 276,
	391, 266, 356, 380, 0, 0, 262, 408, 390, 338,
	317, 318, 261, 0, 375, 295, 309, 292, 354, 0,
	407, 435, 291, 426, 0, 418, 264, 0, 417, 353,
	404, 409, 339, 333, 263, 406, 337, 332, 321, 299,
	451, 322, 323, 313, 365, 331, 366, 314, 343, 342,
	344, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 578, 0, 420, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 324, 0, 0, 0, 436,
	0, 378, 359, 598, 0, 0, 376, 329, 405, 367,
	411, 394, 419, 372, 368, 255, 395, 294, 340, 267,
	269, 681, 296, 298, 300, 301, 349, 350, 362, 383,
	396, 397, 398, 293, 277, 377, 278, 311, 279, 256,
	285, 283, 286, 385, 287, 258, 363, 402, 0, 306,
	373, 336, 259, 335, 364, 401, 400, 268, 427, 433,
	434, 521, 0, 439, 599, 600, 601, 448, 453, 454,
	455, 457, 458, 459, 460, 522, 539, 506, 477, 441,
	530, 474, 478, 542, 0, 0, 0, 432, 325, 326,
	304, 252, 253, 595, 290, 355, 544, 577, 470, 0,
	531, 471, 479, 282, 503, 514, 513, 351, 431, 0,
	526, 529, 461, 594, 0, 523, 538, 597, 537, 591,
	361, 0, 382, 535, 482, 0, 527, 501, 0, 528,
	497, 532, 0, 472, 0, 389, 413, 425, 442, 445,
	473, 557, 558, 559, 257, 444, 561, 562, 563, 564,
	565, 566, 567, 560, 416, 504, 481, 507, 424, 484,
	483, 0, 0, 517, 440, 518, 519, 345, 346, 347,
	348, 308, 545, 275, 443, 371, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 510, 508, 602,
	0, 568, 569, 0, 0, 437, 438, 303, 310, 456,
	312, 274, 360, 305, 422, 319, 0, 449, 511, 450,
	571, 574, 572, 573, 352, 315, 316, 386, 320, 330,
	374, 421, 358, 379, 272, 412, 387, 334, 498, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 552, 551, 550,
	549, 548, 547, 546, 0, 0, 495, 399, 284, 250,
	280, 281, 288, 592, 589, 403, 593, 0, 254, 476,
	328, 0, 369, 302, 540, 541, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 223, 224, 225, 226, 227, 228, 229, 230, 543,
	221, 222, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 0, 0, 0, 251,
	246, 247, 248, 249, 0, 0, 0, 428, 429, 430,
	452, 414, 475, 590, 0, 0, 0, 0, 0, 0,
	0, 524, 536, 570, 0, 579, 580, 582, 584, 583,
	0, 596, 466, 467, 576, 357, 0, 480, 512, 502,
	520, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 327, 516, 499, 585, 500,
	485, 486, 487, 494, 307, 488, 489, 490, 462, 491,
	463, 492, 493, 0, 515, 468, 388, 341, 534, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 270, 197, 464, 581, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 393, 410, 271, 384, 423, 276, 391, 266, 356,
	380, 0, 0, 262, 408, 390, 338, 317, 318, 261,
	0, 375, 295, 309, 292, 354, 0, 407, 435, 291,
	426, 0, 418, 264, 0, 417, 353, 404, 409, 339,
	333, 263, 406, 337, 332, 321, 299, 451, 322, 323,
	313, 365, 331, 366, 314, 343, 342, 344, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	578, 0, 420, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 324, 0, 0, 0, 436, 0, 378, 359,
	598, 0, 0, 376, 329, 405, 367, 411, 394, 419,
	640, 368, 255, 395, 294, 340, 267, 269, 289, 296,
	298, 300, 301, 349, 350, 362, 383, 396, 397, 398,
	293, 277, 377, 278, 311, 279, 256, 285, 283, 286,
	385, 287, 258, 363, 402, 0, 306, 373, 336, 259,
	335, 364, 401, 400, 268, 427, 433, 434, 521, 0,
	439, 599, 600, 601, 448, 453, 454, 455, 457, 458,
	459, 460, 522, 539, 506, 477, 441, 530, 474, 478,
	542, 0, 0, 0, 432, 325, 326, 304, 252, 253,
	595, 290, 355, 544, 577, 470, 0, 531, 471, 479,
	282, 503, 514, 513, 351, 431, 0, 526, 529, 461,
	594, 0, 523, 538, 597, 537, 591, 361, 0, 382,
	535, 482, 0, 527, 501, 0, 528, 497, 532, 0,
	472, 0, 389, 413, 425, 442, 445, 473, 557, 558,
	559, 257, 444, 561, 562, 563, 564, 565, 566, 641,
	560, 416, 504, 481, 507, 424, 484, 483, 0, 0,
	517, 440, 518, 519, 345, 346, 347, 348, 308, 545,
	275, 443, 371, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 510, 508, 602, 0, 568, 569,
	0, 0, 437, 438, 303, 310, 456, 312, 274, 360,
	305, 422, 319, 0, 449, 511, 450, 571, 574, 572,
	573, 352, 315, 316, 386, 320, 330, 374, 421, 358,
	379, 272, 412, 387, 334, 498, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 0, 0, 553, 552, 551, 550, 549, 548, 547,
	546, 0, 0, 495, 399, 284, 250, 280, 281, 288,
	592, 589, 403, 593, 0, 254, 476, 328, 0, 369,
	302, 540, 541, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 223, 224,
	225, 226, 227, 228, 229, 230, 543, 221, 222, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 251, 246, 247, 248,
	249, 0, 1031, 0, 428, 429, 430, 452, 414, 475,
	590, 1815, 0, 0, 0, 0, 1777, 0, 524, 536,
	570, 0, 579, 580, 582, 584, 583, 0, 596, 466,
	467, 576, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 1007, 0, 0, 1817, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1819, 0, 1039, 1043,
	1045, 1047, 1049, 1050, 1052, 0, 1057, 1053, 1054, 1055,
	1056, 0, 1034, 1035, 1036, 1037, 1015, 1016, 1040, 0,
	1018, 1785, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1030, 1032, 1028, 1029, 1038, 1792, 0, 0, 0,
	0, 0, 0, 1042, 1044, 1046, 1048, 1051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1033, 1039, 1043, 1045, 1047, 1049, 1050, 1052, 0,
	1057, 1053, 1054, 1055, 1056, 0, 1034, 1035, 1036, 1037,
	1015, 1016, 1040, 1808, 1018, 0, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1030, 1032, 1028, 1029, 1038,
	0, 0, 0, 0, 0, 0, 0, 1042, 1044, 1046,
	1048, 1051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1033, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 1778, 1775, 0, 1772, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 1824, 0, 0, 1791, 1793,
	1795, 1815, 1797, 1798, 1799, 1803, 1804, 1805, 1807, 1810,
	1811, 1812, 0, 0, 0, 0, 0, 0, 0, 1800,
	1809, 1801, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 1780, 0, 0, 0, 1817, 0, 879, 0, 880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 0, 861, 3584, 1773, 1774, 0,
	0, 2399, 2400, 0, 0, 0, 1792, 0, 874, 0,
	870, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1041, 0, 1806, 0, 0, 0, 1017, 0, 0,
	0, 0, 1794, 1808, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 1821, 1820, 1039, 1043, 1045,
	1047, 1049, 1050, 1052, 0, 1057, 1053, 1054, 1055, 1056,
	0, 1034, 1035, 1036, 1037, 1015, 1016, 1040, 0, 1018,
	0, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1030, 1032, 1028, 1029, 1038, 0, 0, 0, 0, 0,
	0, 0, 1042, 1044, 1046, 1048, 1051, 876, 1782, 869,
	3296, 0, 0, 1815, 1808, 1041, 0, 0, 873, 872,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 855, 0, 0, 0, 862,
	1033, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	1823, 0, 0, 1822, 1790, 1824, 0, 0, 1791, 1793,
	1795, 0, 1797, 1798, 1799, 1803, 1804, 1805, 1807, 1810,
	1811, 1812, 0, 0, 0, 0, 0, 0, 878, 1800,
	1809, 1801, 0, 868, 0, 0, 0, 867, 0, 0,
	0, 0, 0, 854, 1796, 0, 0, 860, 1792, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 858, 0, 0,
	0, 0, 0, 0, 0, 1790, 1824, 0, 0, 1791,
	1793, 1795, 0, 1797, 1798, 1799, 1803, 1804, 1805, 1807,
	1810, 1811, 1812, 0, 660, 659, 666, 656, 0, 0,
	1800, 1809, 1801, 0, 877, 1813, 663, 664, 0, 665,
	669, 0, 0, 651, 0, 1808, 0, 0, 0, 0,
	0, 0, 1789, 674, 0, 0, 0, 0, 0, 1788,
	859, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 678, 0, 0, 680,
	0, 0, 0, 0, 679, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 1796, 0, 0, 0, 0,
	1788, 0, 0, 0, 0, 0, 1802, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 1790, 1824, 0, 0,
	1791, 1793, 1795, 1794, 1797, 1798, 1799, 1803, 1804, 1805,
	1807, 1810, 1811, 1812, 0, 0, 865, 0, 0, 0,
	0, 1800, 1809, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	652, 654, 653, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 662, 0, 0, 0, 0, 0, 0, 677,
	0, 0, 0, 0, 1789, 0, 655, 0, 0, 0,
	646, 1788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 661, 667, 0, 668, 670, 0,
	0, 671, 672, 673, 0, 0, 675, 676,
}

var yyPact = [...]int{
	4259, -1000, -1000, -1000, -344, 12764, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39655,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39655,
	-328, 39058, 39058, -1000, -1000, 2254, -1000, 37864, 13968, 39655,
	314, 311, 39655, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 695, -1000, 42043, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 573, 43252, 41446, 9753, -260, -1000, 1118, -85, 2119,
	849, 863, 901, 901, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 42892, 791, 38461,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 304, 345, 791, 18157, 32, 31, 1118, 344, -157,
	-148, -158, 705, -1000, 1024, 4290, 162, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9753, 9753,
	12764, -363, 12764, 9753, 39655, 39655, -1000, -1000, -1000, -1000,
	-328, 37864, 573, 43252, 9753, 2119, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -148, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-157, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -158, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42518, -1000, 1321, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2616, 1317, 2111, 500, 39655, -1000, 1312,
	500, -1000, -1000, -1000, 1118, 3042, -1000, 39655, 39655, 97,
	1581, -1000, 377, 373, 324, 1309, -1000, -1000, -1000, -1000,
	-1000, -1000, 419, 3008, -1000, 39655, 39655, 2659, 39655, -1000,
	1994, 476, 4691, 2876, 980, 694, 2678, -1000, -1000, 2610,
	-1000, 209, 190, 203, 555, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 243, -1000, 2877, -1000, -1000, 200, -1000, -1000,
	191, -1000, -1000, -1000, 30, -1000, -1000, -1000, -1000, -1000,
	-1000, -65, -1000, -1000, 925, 1637, 9753, 1721, -1000, 3004,
	-1000, -1000, -1000, -1000, 5541, 11556, 11556, 11556, 11556, -1000,
	-1000, 2471, 9753, 2609, 2606, 2605, -1000, -1000, -1000, -1000,
	-1000, -1000, 1308, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1686, -1000, -1000, -1000, 12157, -1000, 2604, 2603,
	2601, 2600, 2599, 2597, 2596, 2595, 2589, 2588, 2587, 2584,
	2583, 2582, 2339, 13361, 2581, 2110, 2109, 2580, 2579, 2578,
	2108, 2339, 2339, 2571, 2566, 2563, 2562, 2551, 2550, 2549,
	2547, 2544, 2543, 2540, 2539, 2537, 2532, 2529, 2526, 2525,
	2522, 2520, 2519, 2518, 2511, 2503, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1241, -1000, 2502, 3018, 2371, -1000, 2922, 2915, 2913, 2911,
	-301, 2501, 1890, -1000, -1000, 71, -1000, -129, -1000, -1000,
	854, -1000, 797, -1000, 39655, 39655, 143, 665, 566, 566,
	566, 566, 566, 589, 566, 2942, 680, 669, 663, 566,
	-94, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1578, 1574,
	2713, 780, -1000, -1000, -1000, -1000, 1196, 39655, -1000, 2408,
	1477, 1477, 2941, 445, 435, 430, 1477, 358, -1000, 1496,
	1496, 1496, 1496, 1477, 403, 481, 2945, 2945, 19, 1496,
	25, 1477, 1477, 25, 1477, 1477, 1477, 183, -307, -1000,
	-1000, -1000, -1000, 1496, 1496, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2926, 2925, 573, 573, 39655, 141, 39655, 573,
	573, 573, 578, -13, 40849, 40252, 1994, 475, 471, 1214,
	1583, -1000, 1458, 39655, 39655, 1458, 1458, 21147, 20550, -1000,
	39655, -1000, 3018, 2371, 2312, 1547, 2300, 2371, -162, -164,
	-165, 573, 573, 573, 573, 573, 169, 573, 573, 573,
	573, 573, 39655, 39655, 37267, 573, 573, 7945, 7945, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12764, 1986,
	1947, 161, -57, -332, 208, -1000, -1000, 39655, 2852, 168,
	-1000, -1000, -1000, 2351, -1000, 2396, 2396, 2396, 2396, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2396, 2396,
	2406, 2500, -1000, -1000, 2389, 2389, 2389, 2351, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2399, 2399, 2402, 2402, 2399, 39655, 9753,
	39655, 2869, 367, 2497, -1000, 39655, 336, 3018, 2868, 2945,
	2975, -1000, -1000, 1296, 1889, 2100, -1000, -1000, 377, 1497,
	-1000, 891, -1000, -1000, -1000, -1000, 39655, -65, 359, -1000,
	-1000, 2107, 2489, -1000, 510, 948, 1227, -1000, 184, 3288,
	32490, 1994, 32490, 39655, -1000, -1000, -1000, -1000, -1000, -1000,
	29, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 211, -1000, 9753, 9753, 9753, 9753,
	9753, -1000, 611, 10955, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11556, 11556, 11556, 11556, 11556, 11556, 11556, 11556, 11556,
	11556, 11556, 11556, 2462, 1558, 11556, 11556, 11556, 11556, 1547,
	2723, 1203, 250, -1000, -1000, -1000, -1000, -1000, 1560, 1637,
	9753, 9753, 9753, 39655, -1000, -1000, 4253, 9753, 9753, 4167,
	9753, 2897, 9753, 9753, 9753, 2297, 3670, 39655, 9753, -1000,
	2296, 2289, -1000, -1000, 1807, 9753, -1000, -1000, 9753, -1000,
	-1000, 9753, 11556, 9753, -1000, -1000, -1000, 1276, 2897, 2897,
	2897, 1468, 9753, 9753, 2897, 2897, 2897, 1444, 2897, 2897,
	2897, 2897, 2897, 2897, 2897, 2897, 2288, 2286, 2281, 9152,
	2945, -260, -1000, 7344, 2868, 2945, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -303, 2479, 39655, 2091,
	2089, -352, -26, 824, 787, 802, -1000, 2891, -1000, 2473,
	39655, 566, 566, -142, 566, -1000, 39655, 1608, 32490, 39655,
	39655, 1994, 39655, 39655, 39655, 566, 566, 566, 39655, -1000,
	2788, 32490, 2761, 578, -1000, 39655, 1196, 2888, 39655, 2987,
	11556, 11556, -1000, 36670, 1496, 1477, 1477, -1000, -1000, 39655,
	-1000, -1000, -1000, 1496, 39655, 1496, 1496, 2987, 1496, -1000,
	-1000, -1000, 1477, 1477, -1000, -1000, 9753, -1000, -1000, 1496,
	1496, -1000, -1000, 2987, 39655, 22, 2987, 2987, 10, -1000,
	-1000, -1000, 39655, 39655, 566, 39655, -1000, 39655, 39655, -1000,
	-1000, 39655, 39655, 42635, 39655, 36073, 2918, -1000, 32490, 39655,
	39655, 30102, -1000, 1121, -1000, -36, -1000, -32, -13, 1458,
	-13, 1458, -1000, 505, 592, 19356, 443, 32490, 4934, -1000,
	-1000, 1458, 1458, 4934, 4934, 1251, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1186, -1000, 207, 2945, -1000, -1000, -1000,
	-1000, -1000, 1887, 1885, 1882, 39655, 39655, 32490, 1994, 39655,
	573, 39655, 39655, 39655, 39655, 39655, -1000, 2472, 1293, -1000,
	2875, 39655, 39655, 1172, -1000, -1000, 16356, 1292, 1172, -1000,
	1593, -1000, 9753, 12764, -278, 9753, 12764, 12764, 9753, 12764,
	-1000, 9753, 163, -1000, -1000, -1000, -1000, 1880, -1000, 1878,
	-1000, -1000, -1000, -1000, -1000, 2084, 2084, -1000, 1876, -1000,
	-1000, -1000, -1000, 1875, -1000, -1000, 1873, -1000, -1000, -1000,
	2280, 925, -1000, 2079, 2677, -261, -1000, 17560, 39655, 39655,
	-1000, -1000, -261, -1000, 16958, 39655, 2945, -1000, -264, 2868,
	9753, 39655, -1000, 2940, -1000, 377, 290, -1000, -1000, -1000,
	-1000, -1000, -1000, 1283, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1182, -1000, 39655, -1000, -1000, 184, 32490,
	33684, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 205, -1000,
	-1000, 173, -1000, 607, 118, 1494, -1000, -1000, 160, 177,
	100, 760, 1637, -1000, 1613, 1613, 1617, -1000, 552, -1000,
	-1000, -1000, -1000, 2471, -1000, -1000, -1000, 1661, 1692, -1000,
	1610, 1610, 1236, 1236, 1236, 1236, 1236, 1592, 1592, -1000,
	-1000, -1000, 5541, 2462, 11556, 11556, 11556, 11556, 541, 541,
	3038, 4237, -1000, 9753, 1590, -1000, 9753, 2448, 2299, 1083,
	1282, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2274, 2273, 2219, 3003, 2271, 9753, -1000, -1000, 1485,
	1479, 1462, -1000, 1840, 8551, -1000, -1000, -1000, 2265, 1280,
	2263, -1000, -1000, -1000, 2261, 1454, 992, 2259, 2658, 2258,
	1180, 9753, 9753, 9753, 9753, 2257, 1449, 1442, 9753, 9753,
	9753, 9753, 2256, 9753, 9753, 9753, 9753, 9753, 9753, 9753,
	9753, 50, 50, 50, 1173, 1164, -1000, -1000, 1432, -1000,
	1637, -1000, -1000, 2868, -1000, 2460, 1872, 1158, -1000, -1000,
	-335, 2036, -1000, -1000, 805, 793, 831, 39655, 933, 2458,
	39655, 39655, 566, 39655, 154, -1000, 2873, 991, -1000, 118,
	-83, 323, 929, 2657, 2999, -174, 39655, 39655, 39655, 2887,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35476, -1000,
	2438, 1421, -1000, -1000, 9753, -1000, -1000, 2633, 39655, 39655,
	2987, 2987, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1496,
	2987, 2987, 1294, 1477, 1496, -1000, -1000, 1496, -1000, -1000,
	1496, -1000, 1268, -1000, 39655, -1000, -1000, -1000, 2885, 2408,
	1152, -1000, 1181, 514, 514, 770, 433, 2974, 15759, -1000,
	1455, 928, 603, 2779, 206, -1000, 1455, -205, 1455, 1455,
	1455, 1455, 1455, 1455, 1455, 413, 410, 1455, 1455, 1455,
	1455, 1455, 1455, 1455, 1455, 1455, 1455, 1455, 862, 1455,
	1455, 1455, 1455, 1455, -1000, 1455, 2432, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 465, 150, 2906, 239, 237, 991,
	2904, 251, 2806, 1045, -1000, -1000, -1000, -1000, 23535, 23535,
	18759, 23535, -1000, 1277, -13, -46, -1000, -1000, 1121, 4934,
	1121, 4934, -1000, -1000, 593, -1000, -1000, 929, -1000, 39655,
	39655, -1000, -1000, 2431, 1569, -1000, -1000, 13361, -1000, 4934,
	4934, -1000, -1000, 24132, 39655, -1000, -74, -1000, -45, 2868,
	-1000, -1000, -1000, 1115, -1000, -1000, 1119, 929, 2670, 39655,
	1115, 1115, 1115, -1000, -1000, 15162, 39655, 39655, -1000, -1000,
	2987, 7945, -1000, 30102, -1000, -1000, 34878, -1000, 34281, 2987,
	1500, -1000, 12764, 1928, 159, -1000, 204, -336, 157, 1835,
	155, 1637, -1000, -1000, 2255, 2252, 1359, -1000, 1350, 2243,
	1335, 1315, -1000, 1, -1000, 2855, 936, -1000, 2430, -1000,
	1314, 2748, -1000, 1088, -1000, 1564, 1303, -1000, 936, 1298,
	2730, 1088, 2868, 2077, -1000, 1059, -1000, 1744, 1267, 96,
	-1000, -1000, 39655, 2107, 1290, 33684, 974, -1000, 591, 1265,
	1258, -1000, 32490, 210, 32490, -1000, 32490, -1000, -1000, 329,
	-1000, 39655, 2867, -1000, -1000, -1000, 2036, 1555, -354, 39655,
	-1000, -1000, -1000, -1000, -1000, 1247, -1000, 541, 541, 3038,
	2724, -1000, 11556, -1000, 11556, 2676, 1480, -1000, 9753, 1894,
	42602, 42602, 865, 22341, 39655, -1000, -1000, 9753, 9753, -1000,
	2665, -1000, -1000, -1000, -1000, 9753, 9753, 2175, -1000, 39655,
	-1000, -1000, -1000, -1000, 22341, -1000, 11556, -1000, 9753, 1120,
	1120, 2643, 1235, 50, 50, 50, 2619, 2585, 2564, 1229,
	50, 2545, 2530, 2487, 2480, 2465, 2456, 2391, 2340, -1000,
	2425, -1000, -1000, 1769, 10354, 7344, -1000, -1000, 240, 1056,
	1869, 2076, 109, -1000, 1544, -1000, -1000, -1000, 784, 174,
	2211, 1013, -1000, -1000, 39655, -1000, -1000, -1000, 15162, 2408,
	276, 39655, 2408, 59, 1455, -1000, 493, 32490, 464, -1000,
	39655, 1811, 1543, 2667, 280, 2850, 39655, 2424, 2423, 2417,
	2416, 306, 42907, 39655, 1054, -1000, 1256, 4290, -1000, 39655,
	1637, -1000, 1994, -1000, 1477, -1000, -1000, 2987, -1000, -1000,
	9753, 9753, 2987, 1477, 1477, 1496, 39655, -1000, 306, 42907,
	2884, 42635, -1000, 39655, -1000, -1000, -1000, 722, -1000, 744,
	566, 39655, 1654, 744, 1653, 2414, -1000, -1000, 39655, 39655,
	39655, 39655, -1000, -1000, 39655, -1000, 39655, 39655, 39655, 39655,
	-1000, 39655, 39655, -1000, 39655, 1652, 39655, 1650, 2849, -1000,
	1455, 1455, 756, -1000, -1000, 504, -1000, 1868, 1866, 1865,
	1864, 2071, 2070, 2064, 1455, 1455, 1845, 2063, 33087, 2062,
	956, 1841, 1833, 1829, 1851, 2061, 750, -1000, 2056, 1846,
	1831, 1830, 39655, 2413, 1982, -1000, -1000, 59, 1455, 234,
	39655, 1539, 493, 316, 1897, 19953, 39655, 30102, 30102, 30102,
	30102, -1000, 2702, 2701, -1000, 2695, 2694, 2711, 39655, 30102,
	2408, -1000, 33087, -1000, -1000, -1000, 1547, 1220, 2943, 737,
	9753, -1000, -1000, -41, -43, -1000, -1000, -1000, 32490, 2054,
	443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2937, 39655,
	39655, 520, 2210, 1005, -1000, -1000, -1000, 42907, 2396, 2396,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2396,
	2396, 2406, -1000, -1000, 2389, 2389, 2389, 2351, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2399, 2399,
	2402, 2402, 2399, -1000, -1000, 2983, -1000, 1003, -1000, -1000,
	1238, -1000, 2983, 1600, -350, 12764, 1594, 1498, -1000, 9753,
	12764, 9753, -279, 214, -290, -1000, -1000, -1000, 2049, -1000,
	-1000, -1000, 1827, -1000, 1816, 75, 84, 1636, -261, 7344,
	343, 39655, -261, 39655, 7344, -1000, 39655, 340, -261, 2937,
	1, 9753, 2770, -1000, -1000, 39655, 1814, -1000, -1000, -1000,
	2989, 32490, 1994, 1365, 31893, -1000, 192, -1000, 199, 478,
	2039, -1000, 634, 108, 2037, 2036, -1000, -1000, -1000, -1000,
	11556, -1000, -1000, -1000, -1000, 1637, 9753, 2208, -1000, 816,
	816, 2206, 2205, -1000, 2396, 2396, -1000, 2351, 2389, 2351,
	816, 816, 2200, -1000, 1966, 2330, -1000, 2307, 2295, 9753,
	-1000, 2198, 3655, 987, -99, -232, 50, 50, -1000, -1000,
	-1000, -1000, 50, 50, 50, 50, -1000, 50, 50, 50,
	50, 50, 50, 50, 50, 523, -143, -313, -145, -314,
	-1000, 2197, 995, -1000, -1000, -1000, -1000, -1000, 4167, 989,
	-1000, -1000, 2036, 2031, -1000, 2029, 2028, 933, 42907, 2196,
	2881, 14565, 2879, 2388, 2386, 2878, 1904, -1000, -1000, -1000,
	31296, 479, -1000, -1000, -1000, 546, 202, 1812, 441, -1000,
	39655, 251, 2758, 1538, 2022, 39655, -1000, -1000, -1000, -1000,
	-1000, -1000, 2850, -1000, 786, 282, 28908, 14565, 14565, 14565,
	286, 1554, -1000, 500, 963, 1233, 30102, 39655, -1000, 29505,
	2193, -1000, 929, 2987, -1000, 1637, 1637, -1000, 2987, 2987,
	1477, -1000, 286, -1000, 332, -1000, 2774, 42907, -1000, 39655,
	-1000, 39655, -1000, 39655, 39655, 566, 9753, 2774, 39655, 584,
	-1000, -1000, 900, 273, 587, 587, 979, -1000, 2865, -1000,
	-1000, -1000, 39655, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22341, 22341, 2902, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2019, 2018, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 39655, 1219, -1000, 1537,
	1904, 31296, 1536, 1458, 2013, 479, 1811, 1532, -1000, 2006,
	-1000, 937, 39655, 39655, -1000, 1166, -1000, 1530, 2621, 2666,
	2621, -1000, -1000, -1000, -1000, 2693, -1000, 2692, -1000, -1000,
	1166, -1000, -1000, -1000, -1000, -1000, 737, -1000, 2934, 744,
	744, 744, 2191, -1000, -1000, -1000, 974, 2183, -1000, -1000,
	-1000, 3014, -1000, -1000, -1000, -1000, -1000, -1000, 15162, 2844,
	2981, 2973, 30699, 2981, -1000, -350, 1471, -1000, 1883, 153,
	1809, 39655, -1000, -1000, -1000, 2180, 2173, -266, 88, 2970,
	2969, 795, -1000, 2170, 967, -261, -1000, -1000, 936, -1000,
	-1000, -1000, -261, -1000, 936, -1000, 75, -1000, -1000, 2843,
	-1000, -1000, 1994, -1000, 189, -1000, -1000, -1000, -1000, -1000,
	-1000, 115, -1000, 39655, -1000, 940, 107, -1000, 1637, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9753, -1000, -1000, -1000, 2250,
	-1000, -1000, 9753, 2169, 2004, 2166, 2003, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3018, -1000, 2966, 2163, 2162, 2160, 2159, 2156, 2154,
	-1000, 9753, 2151, 4167, -1000, -1000, -1000, -1000, -1000, -1000,
	667, 332, 2150, 938, -1000, -1000, -1000, -1000, 332, 27714,
	14565, 332, -1000, 2001, 117, -1000, -1000, -1000, 2000, 1983,
	1810, -1000, -1000, 1773, 902, 137, -1000, -1000, -1000, -1000,
	-1000, -1000, 1897, 1728, 1525, -355, -1000, 2385, -1000, 1455,
	1455, 1455, 39655, 1216, -1000, 1455, 1455, 2140, 2138, 2136,
	530, 1531, 1524, -1000, 1805, 23535, 30102, 29505, 1090, -1000,
	1226, -1000, -1000, -1000, -1000, -1000, 2987, 530, -1000, -1000,
	-1000, 39655, 269, 2382, -1000, 2380, 2632, 322, 2378, 2374,
	39655, 2240, -1000, 2774, 39655, 595, 2838, -1000, -1000, -1000,
	-1000, -1000, 346, -1000, 39655, -1000, -1000, 1245, -1000, 22341,
	-1000, -1000, 1209, -1000, 1982, 1980, -1000, 117, 1979, 4934,
	-1000, -1000, 2758, 1976, -1000, 39655, 937, 937, 3018, 39655,
	7344, -1000, -1000, 9753, 2372, -1000, 9753, -1000, -1000, -1000,
	-1000, -1000, 2366, 2771, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1470, -1000, 9753, 9753, -1000, -1000, 564, 12764, -293,
	212, -1000, -1000, -1000, -268, 1974, -1000, -1000, 2964, 1973,
	1912, 39655, -1000, -1000, 936, 936, -266, -1000, -1000, 929,
	-1000, -1000, 881, 418, -1000, 2106, -1000, 2092, 50, -1000,
	50, -1000, 158, 9753, -1000, -1000, -1000, -1000, -1000, -1000,
	2045, -1000, 2130, 42907, -177, -184, 14565, -1000, 1184, -1000,
	1455, 1455, 2127, -177, -1000, -1000, 317, -1000, -1000, 246,
	-1000, -1000, 1730, 513, -1000, -1000, -1000, 1518, 1680, 1932,
	27117, 22341, 22938, 1972, -1000, -1000, 28908, 1470, 1470, 43127,
	211, 43127, 855, 1516, -1000, 1804, -1000, 1799, -1000, 2987,
	1090, 1226, -1000, -1000, 1355, -1000, 855, -1000, -1000, 269,
	-1000, -1000, 1620, 11556, -1000, -1000, 1965, 22938, 645, 1504,
	1503, 685, 2363, -1000, 365, 3012, -1000, -1000, -1000, 715,
	2356, -1000, 1635, 1634, -1000, 39655, -1000, 27117, 27117, 370,
	370, 27117, 27117, 2354, 587, -1000, -1000, 11556, -1000, -1000,
	-1000, -1000, 1455, 1123, -1000, -1000, -1000, -1000, -1000, -1000,
	1728, -1000, -1000, 2945, -1000, -1000, 1637, 39655, 1637, 28311,
	-1000, 2963, 2962, -1000, 1637, 925, -1000, -350, 39655, 39655,
	-270, 1792, -1000, 1959, 85, -1000, -1000, 926, -268, -272,
	10, 22341, 1491, -1000, -1000, -1000, -1000, 2126, -1000, 852,
	-1000, -1000, -1000, 925, -1000, -1000, -172, -1000, -1000, 382,
	-1000, -1000, -1000, 27714, 1470, 1470, -184, -1000, 472, 1957,
	-1000, -1000, 245, -1000, -1000, 1956, -1000, -1000, 106, -1000,
	1483, 1183, -1000, 2351, 9753, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 498, 42976, -1000, 928, -1000, 881, 498,
	456, 254, -1000, 1782, -1000, -1000, 3018, -1000, 454, -1000,
	-1000, 3038, -1000, -1000, -1000, -1000, -1000, -1000, 1955, 1942,
	-1000, -1000, -1000, -1000, -1000, 1763, 2349, -76, 2900, 1941,
	-1000, -1000, 2346, 1179, 1174, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1169, 1168, 27117, -1000, -1000, 3038, 22341,
	1455, -1000, -1000, 1167, 1154, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2342, -1000, -1000, 2959, -270, -1000, 1940, 67,
	68, -1000, 1938, -1000, -1000, 528, -262, 48, 46, 45,
	-1000, -1000, -1000, 9753, 39655, 364, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 113, -1000, -1000, -1000, -1000, 1932, 1930,
	-1000, 27117, 2865, 2021, 334, 2957, 43127, -1000, 1455, -1000,
	334, -1000, 302, -1000, 1464, -1000, 1762, -1000, 2945, -1000,
	298, -1000, -1000, -1000, 2125, 9753, 2339, 1455, 1952, -168,
	27117, 2627, 2626, 2625, 2467, 1153, -1000, 22341, -1000, -1000,
	26520, 39655, 1912, -1000, -1000, 575, 73, 68, -1000, 2956,
	83, 2955, 2954, 880, 1614, -1000, 43, 41, 39, -1000,
	-1000, -1000, -1000, 463, -1000, 176, -1000, -1000, -1000, 249,
	-1000, -1000, 2865, -1000, 2952, 414, -1000, 22341, -1000, -1000,
	-1000, 1729, -1000, -1000, -1000, -1000, 2002, -1000, 39655, -1000,
	2664, -1000, 175, 1140, 249, 370, 249, 370, 249, 370,
	249, 370, 196, -1000, -1000, -1000, 1079, -1000, -1000, 2338,
	1725, 88, 79, 2951, -1000, 1912, 2949, 1912, 1912, -1000,
	54, 528, -1000, -1000, -1000, 1926, -1000, -1000, -1000, -1000,
	1455, 1455, 1922, 1920, 266, -1000, -1000, -1000, 25923, 338,
	428, 371, -1000, 499, -1000, -1000, -1000, 587, -1000, -1000,
	2661, 2490, 2993, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 39655, 2896, 21744, 61, -1000, -1000, -1000,
	1919, -1000, 1912, -1000, -1000, 1393, -1000, -311, 1724, 1699,
	-1000, -1000, 39655, -1000, 39655, 342, 1698, 11556, 2333, 11556,
	2332, 353, 2319, -1000, -1000, 3011, -1000, 3005, 678, 678,
	249, 249, 249, 249, -1000, -1000, 39655, -1000, 1078, -1000,
	-1000, -1000, 1222, -1000, -1000, -1000, -1000, 1910, -1000, -1000,
	1909, -1000, -1000, -1000, 1074, 2318, 2948, -1000, 3510, 39655,
	3490, 39655, 2317, 1388, 11556, -1000, -1000, -1000, 1723, 384,
	-1000, 878, -1000, 1369, -1000, 25326, 39655, -1000, -1000, -1000,
	-1000, 489, 351, -1000, 1047, -1000, 996, 24729, 1688, 2709,
	-1000, -1000, -1000, 39655, 6743, -1000, 1218, 994, -1000, 39655,
	337, -1000, -1000, -1000, 978, -1000, -1000, -1000, -1000, 1637,
	39655, -1000, 489, 2728, -1000, 1679, -1000, -1000, -1000, 42905,
	653, -1000, -1000, 42905, 339, -1000, 477, 2315, -1000, -1000,
	966, -1000, 39655, 670, 6142, -1000, 339, 43127, -1000, 6142,
	946, -1000, 1637, -1000, -1000, 43127, 945, -1000, 6142, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 159, 3034, 246, 163, 3601, 95, 243, 230, 214,
	242, 3598, 3597, 3596, 2871, 2837, 3595, 3594, 3591, 3590,
	3588, 3587, 3586, 3584, 3583, 3580, 3579, 3578, 3577, 3576,
	3575, 3574, 3573, 3570, 3568, 3565, 3563, 3561, 3558, 3557,
	3556, 3554, 3553, 3550, 3547, 3546, 235, 3544, 3543, 3540,
	3535, 3534, 3532, 3530, 3529, 3528, 3527, 3525, 3524, 3523,
	3521, 3519, 3515, 3514, 3513, 3512, 3511, 3510, 3507, 3504,
	3503, 3502, 3501, 3500, 3499, 3498, 3496, 3493, 3492, 211,
	3491, 2826, 3490, 3489, 3488, 3487, 3480, 3479, 3478, 218,
	3477, 3476, 3474, 3472, 3471, 3470, 3468, 3467, 3466, 3465,
	3464, 234, 3461, 3460, 3455, 3453, 3452, 3451, 226, 3450,
	156, 185, 3449, 3447, 3446, 3445, 3444, 3443, 239, 237,
	69, 3442, 46, 3441, 3440, 213, 3439, 138, 3438, 136,
	3437, 3434, 3433, 3432, 3431, 3423, 3421, 3419, 3417, 3415,
	3414, 3413, 3412, 3411, 3410, 3409, 90, 3408, 253, 3407,
	73, 3406, 3404, 127, 197, 177, 241, 2204, 251, 225,
	171, 158, 94, 3403, 2830, 3402, 162, 220, 147, 27,
	3400, 130, 3399, 250, 42, 54, 244, 132, 62, 144,
	115, 3398, 212, 107, 105, 3397, 3396, 133, 222, 167,
	3395, 100, 3394, 3393, 3392, 3391, 3389, 182, 173, 3388,
	3387, 119, 3386, 3385, 106, 3384, 75, 186, 155, 184,
	3383, 175, 118, 126, 117, 170, 3382, 110, 3381, 3380,
	3378, 3377, 168, 3376, 3375, 124, 64, 3374, 3373, 3371,
	71, 3370, 49, 3369, 33, 3366, 66, 3362, 3360, 3352,
	3350, 3346, 3345, 3344, 3343, 3342, 3341, 3339, 3338, 61,
	3336, 3335, 16, 20, 22, 3334, 32, 3327, 153, 3326,
	3325, 3324, 89, 83, 3322, 84, 1, 51, 72, 3318,
	3317, 216, 121, 99, 139, 3314, 295, 3310, 3309, 3308,
	146, 3307, 1488, 3306, 3305, 3304, 3299, 3297, 3295, 19,
	3294, 210, 39, 3291, 122, 148, 3290, 44, 45, 205,
	199, 3287, 3286, 3285, 507, 181, 96, 37, 0, 3284,
	143, 3282, 3281, 3280, 248, 3278, 219, 206, 154, 308,
	252, 229, 3276, 3274, 67, 3272, 151, 56, 57, 123,
	17, 23, 221, 3270, 14, 2, 187, 3269, 192, 3268,
	178, 3, 278, 137, 3266, 3265, 38, 254, 3264, 3263,
	3261, 120, 3260, 3258, 277, 77, 3257, 3256, 3254, 3253,
	43, 3252, 31, 34, 3250, 102, 3249, 240, 3248, 238,
	131, 169, 166, 142, 215, 224, 76, 85, 3247, 1592,
	141, 97, 21, 3246, 217, 3245, 160, 125, 3244, 82,
	3243, 245, 255, 194, 3242, 172, 11, 47, 36, 3241,
	12, 3238, 88, 209, 3233, 3231, 24, 55, 3230, 26,
	3229, 3228, 3227, 3226, 9, 3225, 3224, 3221, 4, 7,
	3220, 5, 190, 152, 116, 91, 68, 3219, 3218, 48,
	188, 3217, 128, 161, 145, 3216, 74, 3215, 3214, 3213,
	836, 3210, 249, 3209, 3208, 3207, 3204, 3202, 3201, 3200,
	3199, 3198, 3196, 101, 41, 3194, 3193, 3192, 3191, 81,
	135, 3188, 3187, 3185, 3171, 29, 129, 3167, 18, 3164,
	28, 25, 35, 3160, 98, 3159, 13, 176, 3156, 3155,
	15, 3153, 3152, 8, 10, 3151, 3137, 113, 3133, 86,
	30, 150, 103, 3131, 3130, 80, 201, 134, 3129, 3128,
	92, 236, 183, 3123, 284, 223, 247, 3113, 198, 3109,
	3107, 3094, 3092, 3091, 3090, 1025, 3089, 3088, 232, 70,
	87, 109, 3087, 3081, 3080, 79, 149, 112, 111, 65,
	78, 3075, 108, 189, 3074, 180, 3073, 3070, 93, 3068,
	3066, 3065, 3064, 174, 3063, 3062, 179, 231, 3061, 3057,
	292, 3056, 3054, 3052, 3046, 3043, 3042, 3038, 3037, 3036,
	3032, 257, 338, 3030,
}

//line mysql_sql.y:10963
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 556, 559, 559, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 541, 541, 541, 542,
	542, 112, 134, 133, 136, 136, 135, 135, 132, 132,
	128, 131, 131, 130, 130, 129, 124, 126, 126, 125,
	127, 127, 113, 101, 114, 486, 486, 485, 485, 484,
	484, 437, 437, 483, 483, 483, 482, 482, 482, 481,
	481, 480, 480, 479, 479, 477, 477, 478, 476, 475,
	475, 475, 473, 473, 473, 469, 469, 471, 470, 470,
	472, 464, 464, 467, 467, 465, 465, 465, 465, 468,
	463, 463, 463, 462, 462, 100, 100, 100, 381, 381,
	99, 99, 395, 395, 395, 395, 395, 393, 393, 393,
	393, 393, 393, 392, 392, 391, 391, 396, 396, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 90,
	90, 90, 90, 90, 95, 95, 95, 547, 547, 546,
	546, 548, 548, 548, 548, 549, 549, 93, 93, 93,
	94, 390, 390, 390, 91, 92, 92, 380, 380, 385,
	385, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 389, 389, 389, 387, 387, 386,
	386, 388, 388, 84, 84, 84, 87, 86, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 377, 377, 376, 96, 96, 97, 544, 544,
	543, 545, 545, 545, 545, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 511, 511, 511, 513, 513, 312,
	313, 560, 315, 311, 311, 311, 507, 507, 508, 509,
	510, 510, 510, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 257, 257, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 244,
	244, 244, 239, 239, 239, 239, 240, 240, 241, 241,
	242, 242, 242, 242, 243, 243, 305, 305, 262, 262,
	262, 264, 264, 263, 261, 259, 259, 259, 259, 259,
	259, 259, 260, 260, 260, 265, 265, 76, 82, 82,
	82, 524, 524, 77, 535, 535, 440, 440, 326, 326,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 445, 446, 322, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 53,
	56, 52, 52, 52, 366, 366, 51, 561, 561, 300,
	300, 64, 63, 55, 65, 66, 67, 68, 69, 70,
	50, 62, 62, 62, 62, 62, 62, 62, 62, 73,
	458, 458, 563, 563, 563, 71, 72, 439, 439, 439,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 140, 141, 319, 319, 319, 321, 321, 317, 562,
	562, 409, 409, 320, 320, 47, 47, 47, 47, 74,
	318, 318, 299, 316, 316, 316, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 374, 374, 371, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 161, 161,
	212, 212, 519, 519, 515, 515, 516, 516, 516, 517,
	517, 518, 518, 108, 452, 452, 452, 452, 452, 452,
	8, 183, 183, 451, 451, 451, 451, 451, 451, 378,
	378, 378, 496, 496, 496, 497, 182, 182, 177, 177,
	453, 453, 343, 498, 498, 461, 461, 460, 460, 459,
	459, 180, 180, 181, 181, 164, 164, 119, 119, 466,
	466, 466, 466, 474, 474, 436, 436, 249, 249, 292,
	292, 293, 293, 154, 154, 155, 155, 155, 155, 155,
	155, 550, 550, 551, 552, 553, 553, 554, 554, 554,
	555, 555, 555, 555, 555, 504, 504, 506, 506, 505,
	179, 179, 175, 175, 176, 176, 176, 174, 174, 173,
	172, 172, 171, 169, 169, 169, 170, 170, 170, 187,
	187, 157, 157, 157, 156, 156, 156, 156, 156, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 158, 158, 512, 512, 512, 441, 441, 441, 448,
	448, 273, 273, 274, 274, 272, 272, 159, 159, 160,
	160, 160, 160, 271, 271, 270, 162, 162, 168, 167,
	167, 163, 163, 163, 163, 281, 281, 280, 280, 280,
	280, 111, 117, 117, 118, 186, 186, 279, 278, 278,
	278, 185, 185, 184, 184, 178, 178, 166, 166, 166,
	166, 277, 165, 275, 540, 540, 539, 539, 538, 536,
	536, 536, 537, 537, 537, 537, 488, 488, 488, 488,
	488, 306, 306, 306, 310, 310, 309, 309, 309, 309,
	309, 314, 7, 7, 7, 7, 7, 7, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 38, 196, 197, 39, 198, 198, 199, 199, 200,
	200, 201, 202, 203, 203, 203, 203, 37, 188, 188,
	189, 189, 190, 190, 191, 192, 192, 192, 195, 193,
	194, 194, 558, 558, 557, 36, 36, 29, 147, 147,
	148, 148, 148, 150, 150, 245, 245, 245, 149, 149,
	151, 151, 151, 520, 523, 521, 521, 525, 525, 525,
	526, 526, 526, 526, 527, 527, 30, 137, 142, 530,
	530, 530, 529, 529, 531, 531, 532, 532, 296, 296,
	297, 297, 145, 146, 146, 144, 139, 153, 153, 153,
	153, 153, 138, 143, 522, 528, 528, 528, 375, 375,
	372, 373, 373, 370, 369, 369, 369, 534, 534, 533,
	533, 533, 307, 307, 31, 365, 365, 367, 368, 368,
	368, 359, 359, 359, 359, 35, 363, 363, 364, 364,
	364, 364, 364, 364, 364, 360, 360, 362, 362, 358,
	358, 358, 358, 358, 358, 34, 152, 152, 357, 357,
	354, 354, 352, 352, 353, 353, 351, 351, 351, 355,
	355, 42, 75, 43, 44, 45, 41, 41, 41, 356,
	356, 33, 33, 33, 121, 120, 120, 120, 120, 120,
	123, 123, 295, 295, 294, 294, 122, 246, 246, 40,
	224, 224, 428, 428, 423, 423, 423, 423, 423, 443,
	443, 443, 424, 424, 424, 425, 425, 425, 427, 427,
	427, 426, 426, 426, 426, 426, 442, 442, 444, 444,
	444, 397, 397, 398, 398, 398, 401, 401, 415, 415,
	416, 416, 414, 414, 421, 421, 420, 420, 419, 419,
	418, 418, 417, 417, 417, 417, 412, 412, 411, 411,
	399, 399, 399, 399, 399, 400, 400, 400, 410, 410,
	413, 413, 269, 269, 268, 268, 232, 232, 233, 233,
	267, 267, 230, 230, 231, 231, 231, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 494, 494, 495, 235, 235, 247, 247, 247,
	247, 247, 247, 234, 234, 236, 236, 213, 213, 211,
	211, 204, 204, 205, 205, 206, 206, 206, 210, 210,
	209, 209, 209, 209, 207, 207, 208, 208, 208, 208,
	208, 208, 383, 383, 491, 491, 492, 492, 487, 487,
	487, 490, 490, 490, 490, 490, 490, 493, 493, 493,
	489, 489, 214, 290, 290, 290, 308, 308, 308, 308,
	289, 289, 289, 229, 229, 228, 228, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 382,
	382, 323, 323, 324, 324, 256, 255, 255, 255, 255,
	255, 253, 254, 252, 252, 252, 252, 252, 251, 251,
	250, 250, 250, 361, 361, 248, 248, 238, 238, 238,
	237, 237, 237, 422, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	287, 287, 287, 288, 288, 288, 288, 288, 288, 333,
	333, 339, 339, 503, 503, 502, 215, 215, 215, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 225, 225,
	225, 406, 406, 406, 406, 407, 407, 407, 407, 408,
	408, 408, 404, 404, 405, 405, 344, 345, 345, 449,
	449, 450, 450, 402, 402, 403, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 457, 457, 457, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 514, 514, 514, 499, 499,
	499, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	285, 285, 285, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 346, 346,
	347, 347, 454, 454, 454, 454, 454, 454, 455, 455,
	456, 456, 456, 456, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 331, 282, 282, 282, 348, 340, 340,
	341, 341, 342, 342, 334, 334, 334, 334, 334, 334,
	335, 335, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 336, 336, 338, 338, 350, 350,
	350, 349, 349, 349, 349, 349, 349, 349, 227, 227,
	227, 227, 328, 328, 328, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 217, 217, 217,
	217, 221, 221, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 222, 222, 222,
	222, 222, 220, 220, 220, 220, 220, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 109, 110, 110, 219, 291,
	291, 429, 429, 432, 432, 430, 430, 431, 433, 433,
	433, 434, 434, 434, 435, 435, 435, 438, 438, 298,
	298, 298, 304, 304, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 2, 3, 3, 3, 1, 1, 7, 7, 8,
	8, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 5, 3, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 1, 1, 6,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 4, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 6, 4, 5, 7, 4,
	5, 0, 1, 3, 8, 0, 6, 0, 4, 6,
	1, 1, 1, 1, 1, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 14, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	1, 1, 0, 1, 2, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 3,
	2, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 2, 6, 0, 4, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 8, 2, 4, 4, 4, 9, 10, 8, 0,
	2, 11, 9, 11, 2, 2, 9, 4, 5, 3,
	0, 4, 1, 3, 0, 3, 6, 0, 2, 10,
	0, 2, 0, 2, 0, 3, 2, 4, 3, 0,
	2, 1, 0, 2, 3, 0, 2, 3, 0, 2,
	1, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 1, 3, 3, 3, 0, 4, 1, 3,
	3, 3, 0, 1, 1, 3, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 4, 1, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 9, 7, 9, 2, 1, 7, 9, 7, 9,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 3, 3, 2, 2, 1,
	5, 6, 4, 1, 1, 1, 5, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 6, 1, 1, 1, 1, 1, 1,
	4, 4, 4, 7, 7, 7, 7, 7, 7, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 2, 0, 1, 6, 8, 8, 6, 6,
	5, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 4, 4, 3,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 2, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -556, -559, -2, -5, 608, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -154, -115, -116, 598,
	-85, -86, -87, -32, -31, -30, -29, -137, -142, 604,
	443, 13, 492, -14, -15, -504, -16, 257, -311, -312,
	-313, -315, -560, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -140, -141,
	-74, -56, -75, -77, -76, -82, -78, -83, -139, -144,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 367, 373, 430, 597, 60, -155, -157, 614, 615,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 535,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-138, -24, -143, -22, 252, 251, 37, 318, 319, 320,
	371, 250, 229, 14, 30, 41, 347, -156, 81, 527,
	528, 530, 230, -158, 12, 619, -6, -3, -2, -124,
	-128, -132, -135, -136, -133, -134, -4, -110, 115, 242,
	599, -308, 363, 600, 602, 601, 84, 92, -301, -303,
	443, 257, 367, 373, 597, 615, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 564, 565, 555, 556, 557, 558, 559, 560, 561,
	562, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 495, 584, 585, 586, 587,
	523, 583, 345, 346, 532, 269, 293, 398, 299, 306,
	157, 176, 170, 198, 190, 528, 165, 273, 311, 274,
	91, 160, 478, 105, 455, 427, 163, 288, 290, 292,
	524, 525, 357, 295, 522, 294, 296, 298, 526, 275,
	348, 186, 181, 287, 271, 179, 276, 39, 277, 203,
	278, 279, 537, 451, 344, 457, 303, 51, 425, 180,
	452, 291, 454, 207, 211, 469, 470, 174, 175, 459,
	472, 202, 205, 206, 249, 342, 343, 42, 534, 261,
	473, 209, 201, 197, 481, 307, 305, 200, 173, 196,
	272, 64, 213, 212, 214, 421, 422, 423, 424, 280,
	281, 361, 468, 193, 182, 349, 166, 22, 476, 256,
	456, 374, 282, 300, 308, 208, 210, 263, 268, 536,
	527, 429, 267, 304, 474, 178, 260, 289, 255, 477,
	167, 530, 376, 283, 161, 297, 471, 480, 63, 389,
	172, 164, 246, 158, 265, 270, 284, 285, 286, 521,
	310, 309, 301, 529, 194, 262, 199, 184, 171, 195,
	159, 264, 479, 390, 595, 347, 408, 192, 189, 266,
	239, 475, 458, 162, 412, 391, 187, 312, 591, 592,
	593, 362, 341, 313, 314, 185, 253, 449, 450, 317,
	418, 333, 392, 428, 399, 393, 220, 221, 321, 461,
	463, 204, 594, 322, 323, 324, 453, 325, 326, 327,
	328, 366, 55, 57, 93, 95, 616, 617, 62, 28,
	352, 355, 387, 394, 335, 596, 533, 332, 336, 356,
	24, 410, 378, 414, 413, 47, 48, 49, 52, 53,
	54, 56, 58, 59, 50, 520, 371, 384, 482, 44,
	46, 381, 26, 358, 409, 431, 331, 411, 442, 440,
	441, 462, 25, 360, 359, 61, 43, 417, 419, 420,
	27, 315, 329, 369, 605, 483, 364, 380, 383, 365,
	334, 354, 385, 66, 65, 377, 606, 372, 370, 330,
	538, 539, 337, 563, 350, 426, 517, 516, 515, 514,
	513, 512, 511, 510, 318, 319, 320, 395, 396, 397,
	407, 400, 401, 402, 403, 404, 405, 406, 445, 446,
	607, 464, 466, 467, 465, 234, 618, 351, 237, 609,
	610, 94, 611, 613, 612, 45, -388, -386, -308, 528,
	597, 373, 527, 530, 367, 347, 615, 371, 257, 318,
	319, 320, 443, -198, -308, 618, -164, 38, -211, -308,
	-164, -81, -15, -14, -156, -157, -211, 236, -316, 23,
	425, -89, 426, 232, 81, -308, -9, -101, -8, -108,
	-79, -154, 430, -314, -308, 318, 318, -314, 236, -308,
	267, 406, -440, 242, -392, -365, 268, -391, -367, -394,
	-368, 31, 228, 230, 229, 264, 15, 371, 238, 13,
	12, 372, 250, 24, 25, 27, 14, 373, 375, 28,
	376, 379, 380, 381, 41, 384, 385, 257, 84, 92,
	87, 275, -197, -308, -342, -334, 112, -337, -329, -330,
	-332, -483, -477, -327, 81, 139, 140, 147, 113, -331,
	-422, 35, 115, 544, 583, 493, -283, -284, -285, -286,
	-287, -288, -308, -478, -476, 87, 96, 98, 102, 103,
	101, 99, 151, 183, 100, 88, 152, -157, 84, -499,
	553, -302, 576, 584, 585, 586, 587, 575, 60, -447,
	-456, 235, -454, 150, 188, 253, 184, 13, 145, 418,
	185, 550, 572, 495, 554, 564, 579, 546, 547, 548,
	541, 542, 543, 545, 555, 557, 571, -457, 567, 577,
	578, 563, 580, 581, 582, 613, 86, 85, 570, 569,
	556, 551, 552, 558, 540, 549, 559, 560, 568, 573,
	574, 45, 355, 105, 356, 357, 485, 348, 358, 242,
	425, 69, 359, 360, 361, 362, 363, 492, 364, 70,
	365, 354, 257, 408, 366, 187, 204, 497, 496, 498,
	489, 486, 484, 487, 488, 490, 491, 561, 562, 566,
	-117, -118, 589, -550, -276, -551, 6, 7, 8, 9,
	-552, 152, -541, 427, 536, 87, 162, 159, -379, 162,
	111, 167, 166, -379, 321, 263, -356, -147, 345, 408,
	325, 93, 267, -359, -357, 524, -442, 315, 311, 237,
	108, -148, 247, 246, 106, 485, 235, 382, 306, 55,
	57, -515, -516, 225, 226, 227, -506, 518, -505, -308,
	357, 95, 26, 236, 368, 263, 463, 461, 462, 464,
	465, 466, 467, -62, -458, -439, 458, 457, -320, 450,
	456, 448, 460, 451, 346, 327, 326, 228, 609, 525,
	519, -298, 392, 428, 482, 483, 369, 429, 469, 471,
	452, 105, 191, 188, 237, 239, 236, 345, 485, 408,
	93, 325, -515, 159, 469, 471, 267, 406, 40, -385,
	418, -384, -386, 470, 481, 85, 86, 468, -298, 105,
	449, 449, -550, -276, -155, -157, -111, -504, 526, 526,
	526, 237, 345, 408, 267, 238, 236, 522, 524, 239,
	485, 235, 318, 368, 263, 325, 93, -441, -512, 31,
	-448, 222, 223, 224, 32, 33, -1, 119, 619, -334,
	-334, -6, 622, -6, -334, -308, -308, 154, -217, -221,
	-218, -220, -219, -223, -222, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 30, 204, 253, 184, 185, 186, 187, 207, 170,
	190, 533, 215, 171, 216, 172, 217, 173, 218, 174,
	175, 219, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -180, 259, -211, 153, -180, -550, -173, -174,
	11, -211, -289, -308, 427, 122, -89, -89, 426, -507,
	-508, -509, -511, 232, 426, 425, 153, 275, 16, -314,
	-314, 79, -211, -367, 267, -392, -365, 35, 78, 154,
	240, 154, 78, 81, 369, 345, 408, 370, 485, 236,
	382, 239, 267, 383, 345, 408, 236, 239, 485, 267,
	345, 236, 239, 408, 267, 383, 448, 449, 239, 26,
	374, 377, 378, 449, -462, 481, 154, 111, 108, 109,
	110, -334, 129, -349, 122, 123, 124, 125, 126, 127,
	128, 136, 135, 146, 139, 140, 141, 142, 143, 144,
	145, 137, 138, 132, 112, 130, 134, 131, 114, -157,
	-334, -342, 60, -332, -332, -332, -332, -422, -339, -334,
	81, 81, 81, 153, 99, 87, -334, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, -455,
	81, 81, -346, -347, 81, 81, -327, -289, 81, 87,
	87, 81, 81, 81, 87, -347, -347, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-174, 154, -173, 81, -173, -174, -158, -157, 31, 32,
	31, 32, 31, 32, 31, 32, -553, 606, 81, 96,
	616, 220, 474, 535, 165, 166, 167, -196, -308, -198,
	368, 239, 522, 521, 239, -148, -354, 242, -354, -354,
	-354, -354, 238, -354, 23, 236, 236, 236, -354, 492,
	122, 122, 58, -517, 169, 154, -506, -179, 81, -319,
	130, 134, -319, 23, 265, 265, 265, -319, 305, -561,
	-562, 16, 132, -317, -562, -317, -317, -319, -563, 238,
	459, 42, 266, 265, -175, -176, 21, -175, 453, 449,
	-409, 454, 455, -321, -562, -320, -319, -319, -320, -319,
	-319, -319, 236, 239, 485, 325, 610, -561, -561, 30,
	30, -440, -440, -211, -440, 519, -299, -308, -440, -440,
	-440, -518, 241, -547, -546, 472, -549, 474, 159, -386,
	159, -386, -367, 267, 267, 154, 122, 23, -387, 122,
	133, -386, -386, -387, -387, -234, 40, -307, 150, -308,
	87, -234, 40, -544, -543, -211, -174, -158, -157, 82,
	82, 82, 529, 529, 529, -440, -440, -440, -440, -440,
	-442, -440, -440, -440, -440, -440, -314, -188, -308, -198,
	242, -440, -440, -159, -160, 141, -334, -308, -159, -3,
	-126, -125, 116, 117, 119, 600, 363, 599, 603, 597,
	-386, 40, -435, 390, 389, -429, -431, 81, -430, 81,
	-430, -430, -430, -430, -430, 81, 81, -432, 81, -432,
	-432, -429, -433, 81, -433, -434, 81, -434, -433, -308,
	-340, -342, -308, 38, -451, 60, -154, 81, 30, 81,
	-308, -452, 60, -154, 81, 30, -174, -119, 38, -176,
	20, 153, 96, 87, -89, 82, 154, -510, 102, 103,
	-513, 202, 194, -308, -104, 87, -7, -8, -9, -10,
	-46, -79, -154, -479, -477, 81, 31, 417, 78, 16,
	-393, 236, 485, 368, 263, 239, 345, -391, -374, -371,
	-369, -307, -367, -370, -369, -396, -289, 449, -120, 432,
	431, 317, -334, -334, -334, -334, -334, 101, 112, 341,
	102, 103, -329, -350, 31, 313, 314, -330, -330, -330,
	-330, -330, -330, -330, -330, -330, -330, -330, -330, -338,
	-348, -422, 81, 132, 130, 134, 131, 114, -332, -332,
	-330, -330, 82, 154, -503, -502, 116, -334, -334, -334,
	-308, -500, -501, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 359, 354, 360, 358, 348, 366,
	361, 362, 187, 516, 517, 510, 511, 512, 513, 514,
	515, -340, -340, -334, -500, -340, -282, 32, 31, -342,
	-342, -342, 82, -334, -514, 339, 338, 340, -177, -308,
	-340, 82, 82, 82, 96, -342, -342, -340, -330, -340,
	-501, -282, -282, -282, -282, 141, -342, -342, -282, -282,
	-282, -282, 141, -282, -282, -282, -282, -282, -282, -282,
	-282, 82, 82, 82, 141, -342, -175, -118, -460, -459,
	-334, 40, -119, -176, -554, 607, 81, -289, -542, 87,
	87, 620, 475, 476, 163, 166, 165, 34, 81, -188,
	-354, -354, 522, -354, -520, -308, 112, -375, -372, -369,
	-308, -308, -365, -308, -308, -211, -354, -354, -354, -211,
	-245, 52, 53, 54, -369, -149, 55, 56, -518, -505,
	34, -178, -308, -272, 17, -332, -332, -369, 267, -561,
	-319, -319, -300, -299, -321, -316, -321, -321, -272, -317,
	-319, -319, -334, -321, -317, -272, -308, 449, -272, -272,
	-409, -318, -308, -318, -354, -299, -300, -300, -211, -211,
	-257, -258, 233, 352, 353, 231, 229, 11, 230, -266,
	306, -355, 493, -240, -241, 76, 41, -243, 394, 387,
	269, 273, 91, 274, 427, 275, 238, 277, 278, 279,
	294, 296, 249, 280, 281, 282, 418, 283, 158, 295,
	284, 285, 286, 370, -235, 6, 328, 40, 50, 51,
	441, 440, 538, 535, 270, -520, -520, 30, 30, -375,
	-308, -308, -167, -162, -166, -163, -168, -275, -277, -165,
	81, -211, -157, -308, 154, 473, 475, 476, -547, -387,
	-547, -387, 31, 417, -390, 417, 31, -365, -384, 469,
	471, -380, 87, 418, -370, -389, 78, 150, -459, -387,
	-387, -389, -389, 149, 154, -545, 474, 475, 225, -175,
	96, 96, 96, -213, -211, -520, -374, -365, -308, -440,
	-213, -213, -213, -308, -308, 81, 153, 35, -308, -308,
	-271, 154, -270, 16, -309, -308, 34, 87, 153, -271,
	-127, -125, 118, -334, -6, 599, -334, -6, -6, -334,
	-6, -334, -438, 391, 96, 96, -291, 87, -291, 96,
	96, 96, 82, 87, -378, 78, -453, -343, -498, 589,
	-182, 82, -177, -496, -497, -177, -181, -308, -453, -182,
	82, -496, -175, 590, -119, -172, -171, -334, -308, 23,
	-89, -508, 153, 154, -178, -393, -373, -370, -395, 141,
	-308, -381, 154, 535, 623, 85, 240, -534, -533, 409,
	82, 154, -463, 241, 492, 87, 620, 425, 220, 221,
	101, 341, 102, 103, -422, -342, -338, -332, -332, -330,
	-330, -336, 254, -336, 111, -334, -333, -502, 118, -334,
	34, 34, 154, 79, 153, 82, 82, 16, 16, 82,
	-334, 82, 82, 82, 82, 16, 16, -334, 82, 153,
	82, 82, 82, 82, 79, 82, 154, 82, 154, -342,
	-342, -334, -342, 82, 82, 82, -334, -334, -334, -342,
	82, -334, -334, -334, -334, -334, -334, -334, -334, -403,
	444, -403, -403, 154, 154, 154, 82, -119, 81, 96,
	154, 617, -295, -294, 87, 164, 167, 167, 166, -197,
	-199, -200, -201, -202, -203, 132, 155, 156, 81, -211,
	-211, -354, -211, -523, 395, 35, -535, 154, 40, -533,
	485, -145, 317, -358, 79, -152, 16, 535, -211, -211,
	-211, -224, 34, 16, -161, -212, -308, 81, 82, 154,
	-334, -366, 79, -308, -300, -272, -272, -321, -272, -272,
	154, 22, -319, -321, -321, -317, 153, -299, -428, 34,
	-179, 154, -210, -305, -207, -209, 244, -324, -208, 247,
	-492, 245, 243, 106, 248, 302, 107, 238, -305, -305,
	244, -244, 240, 34, -305, -260, 238, 302, 245, 20,
	-259, 238, 107, -308, 244, 248, 245, 243, -304, 122,
	-298, 149, 240, 42, 370, -304, 539, -304, -304, -304,
	-304, -304, -304, -304, 276, 276, -304, -304, -304, -304,
	-304, -304, -304, -304, -304, -304, -304, 159, -304, -304,
	-304, -304, -304, -304, 81, 271, 272, -524, 395, 30,
	351, 351, -535, 30, -153, 345, 30, -278, -279, -280,
	-281, 67, 71, 73, 68, 69, 70, 74, 30, 154,
	-306, -310, 34, -308, 87, -306, -157, -162, -167, -306,
	81, -546, -548, 477, 474, 480, -389, -389, 240, 81,
	122, -389, -389, 40, -307, -543, 481, 475, -119, 154,
	78, -213, -189, -190, -191, -192, -217, -289, 189, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 205,
	206, 203, 204, 253, 184, 185, 186, 187, 207, 170,
	190, 533, 171, 172, 173, 174, 175, 176, 179, 180,
	181, 182, 178, -308, -198, -272, -160, -162, -308, 87,
	-308, 141, -272, 119, -6, 117, -131, -130, -129, 120,
	597, 603, 119, 119, 119, 82, 82, 82, 154, 82,
	82, 82, 154, 82, 154, -466, 454, 39, 154, 81,
	82, 154, 60, 154, 122, 82, 154, 82, 60, -119,
	87, 154, -169, 36, 37, 153, 427, -308, -477, 82,
	-395, 154, 240, 153, 153, -371, 373, -307, -373, 20,
	535, -289, 38, -295, 122, 620, -308, 82, -336, -336,
	111, -332, -329, 82, 119, -334, 117, -215, -217, 389,
	390, -215, -216, -222, 150, 188, 253, 187, 186, 184,
	389, 390, -234, -308, -334, -334, 82, -334, -334, 16,
	-308, -234, -330, -334, -174, -174, 82, 82, -402, -403,
	-402, -402, 82, 82, 82, 82, -402, 82, 82, 82,
	82, 82, 82, 82, 82, 81, 96, 98, 96, 98,
	-459, -555, 62, 605, 61, 417, 101, 307, 154, 96,
	87, 621, 154, 122, 167, 381, 82, 154, -289, -189,
	-179, 81, -232, 535, -211, -179, -526, 456, 397, 407,
	-304, -326, -325, 347, 41, -445, 418, 403, 404, -372,
	267, -308, -532, 94, 122, 78, 332, 336, 333, 334,
	335, -352, -353, -351, -355, -520, 81, 81, 81, 81,
	-423, 322, -217, -211, -161, -308, 16, 154, -519, 153,
	-1, -308, -365, -319, -272, -334, -334, -272, -319, -319,
	-321, -308, -423, -217, 34, -258, -214, -289, -208, -491,
	-492, -354, -308, 107, -491, 107, 81, -214, -289, -289,
	-261, -318, -289, -308, -308, -308, -264, -263, -289, -308,
	-308, -308, 107, -308, 107, -239, 40, 47, 48, 49,
	-304, -304, 191, -242, 40, 417, 419, 420, 96, 96,
	96, 96, 87, 87, 87, -304, -304, 96, 87, -310,
	87, -493, 166, 44, 45, 96, 96, 96, 96, 40,
	87, -247, 40, 287, 291, 288, 289, 290, 87, 96,
	40, 96, 40, 96, 40, -308, 81, -494, -495, 87,
	-526, -304, 351, -386, 122, -326, -531, 317, -146, 91,
	31, -183, 233, 230, -520, -377, -376, -289, -166, -166,
	-166, -166, 67, 67, 67, 72, 67, 72, 67, -280,
	-377, -168, -179, -310, 82, -540, -539, -538, -536, 75,
	241, 76, -340, 474, 478, 479, -373, -322, 87, -380,
	-187, 23, -211, -211, -444, 297, 298, 82, 154, -217,
	-274, 18, 153, -274, 115, -6, -127, -129, -334, -6,
	-334, 599, 363, 600, 87, 96, 96, -474, 438, 433,
	435, 107, -343, -461, -460, 60, -154, -177, -453, -497,
	-459, -308, 60, -154, -453, -187, -466, -171, -170, 43,
	-308, 96, 16, -370, -365, 141, 141, -308, 374, -381,
	87, 396, 87, 236, 621, 87, -295, -329, -334, 82,
	-225, 175, 174, -225, 82, 82, -430, -430, -429, -432,
	-429, -225, -225, 82, 82, 23, 82, 82, 82, -334,
	82, 82, 154, -449, 494, -450, 565, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -345, -344, 259, 439, 612, 612, 439, 612, 612,
	82, 154, -500, 154, -294, 87, 87, 87, -201, -217,
	82, 34, -204, -205, -206, -214, -207, -209, 34, 81,
	81, 34, -527, 91, -521, 87, -308, -528, 91, 398,
	152, 349, 40, 399, 400, 415, 344, 96, 96, 405,
	-522, -308, -153, -530, 51, 122, 87, -211, -351, -298,
	149, 278, 325, -269, -268, -308, 87, -204, -204, -204,
	-424, 324, 20, 96, 140, -180, 79, 153, -162, -212,
	-308, 141, 82, -272, -272, -272, -319, -424, -154, -262,
	44, 46, -217, -489, -308, -487, -489, -308, -487, -487,
	-354, -334, -262, -214, 240, 30, 230, -265, 330, 331,
	-382, 303, 112, -382, 154, -169, -308, -234, -234, 30,
	87, 87, -213, 82, 154, 122, -527, -521, 122, -387,
	87, -528, -532, 122, 87, 154, -183, -183, -272, 154,
	122, -185, -184, 78, 79, -186, 78, -184, 67, 67,
	-272, -538, -537, 23, -492, -492, -492, 82, 82, 14,
	-191, 40, -273, 19, 20, 141, -273, 119, 117, 119,
	119, -308, 82, 82, -436, 591, -470, -472, 433, 20,
	20, 14, 241, 82, -453, -453, -474, 44, 45, -365,
	-381, 418, -211, 154, 621, -334, 82, -334, 82, 87,
	82, 87, -174, 20, 82, 82, 82, 82, 82, 82,
	-334, 82, -500, 234, -154, 82, 154, -154, -233, -267,
	-308, 87, -204, -154, 87, -525, 409, 87, 87, 96,
	40, 96, 152, 401, -446, -146, -529, 91, 122, 620,
	81, -304, -304, -304, -308, 82, 154, -304, -304, 82,
	82, 82, -425, 258, 96, 140, 96, 140, 96, -306,
	-162, -308, -272, -519, 153, -272, -425, -289, -229, -228,
	-226, 101, 112, 40, 387, -227, 91, 149, 292, 295,
	294, 270, 293, -256, -323, 78, 393, 330, 331, -355,
	591, 523, 243, 106, 107, 375, -324, 81, 81, 79,
	312, 81, 81, -489, 82, -262, -289, 40, -265, 40,
	303, -263, 149, -234, 82, -495, 87, -525, 87, -389,
	-530, 87, -520, -174, -376, -459, -334, 81, -334, 81,
	67, 11, 18, -327, -334, -342, 242, -6, 600, 363,
	-249, 592, 87, 20, 87, -468, 87, -377, -436, -122,
	-246, -298, 275, 82, 82, -402, -402, -405, -404, -408,
	439, 304, 447, -342, 82, 82, -193, -217, -150, 535,
	-232, -206, 82, 154, -304, -304, 82, -150, 20, 535,
	348, 40, 96, 40, 402, 122, 102, 103, -296, -297,
	87, -360, -362, -289, 81, -234, -236, -307, 150, 87,
	-268, -327, -327, -230, -231, -266, -355, -121, -120, -230,
	-426, 158, 96, 140, 96, 96, -272, -272, -426, -226,
	101, -330, 87, -236, -237, 40, 291, 287, 122, 122,
	-238, 40, 271, 272, -248, 81, 302, 14, 191, 81,
	107, 107, -211, -360, -360, -490, 332, 333, 334, 337,
	336, 335, -490, -360, -360, 81, -383, -382, -330, -304,
	149, -529, -175, -178, -488, -308, 243, 20, 20, -308,
	-308, -292, 593, 96, 87, 435, -249, -437, 594, -464,
	-409, -234, 122, 82, -407, 114, 401, 405, -328, -331,
	96, 98, 183, 152, 534, -151, 59, 481, -267, -327,
	-327, -232, 87, 396, 87, 348, 87, 621, 154, 122,
	82, 154, -429, -334, -397, 259, 154, -266, -298, -122,
	-397, -443, 166, 323, 535, 96, 140, 96, -174, -427,
	166, 323, 87, 87, 96, 81, -454, 30, 87, -361,
	81, 82, 82, 82, 82, -360, -234, -304, 82, 82,
	154, 81, 20, -292, 87, -473, 438, -467, -465, 433,
	434, 435, 436, 87, -406, -407, 405, -328, -331, 589,
	445, 445, 445, -195, -308, 302, 418, -297, 87, -363,
	-362, -169, 82, -398, 311, 20, -266, -304, -398, 323,
	96, 140, 96, -175, 323, 82, -334, -346, -304, 82,
	-251, -250, 531, -360, -363, 79, -363, 79, -363, 79,
	-363, 79, 82, -234, -308, 243, -293, -308, -468, -475,
	241, -471, -472, 437, -465, 20, 435, 20, 20, -123,
	154, 111, 446, 446, 446, -194, 34, 440, 374, -364,
	249, 342, 343, 91, 535, 330, 331, -169, 20, -399,
	304, 305, -400, -413, 307, -234, 96, 82, -308, -255,
	-253, -254, 78, 452, 300, 301, 82, -490, -490, -490,
	-490, -256, 82, 154, -482, 81, 96, -470, -469, -471,
	20, -468, 20, -468, -468, 442, -406, 87, -304, -304,
	87, 87, 329, -289, 81, -411, 308, 81, -409, 81,
	-409, 107, 333, -382, -254, 78, -253, 78, 15, 14,
	-363, -363, -363, -363, -308, -486, 30, 82, -481, -480,
	-290, -476, -308, 438, 439, 87, -468, 122, -558, -557,
	611, 96, 96, -308, -396, -401, 309, 96, -330, 81,
	-330, 81, -410, 306, 81, -252, 297, 298, 30, 166,
	-252, -485, -484, -483, 82, 154, 153, 87, 87, 82,
	-415, 81, 20, 82, -396, 82, -396, 81, 122, -330,
	101, 40, 299, 154, 122, -480, -308, -416, -414, 259,
	-400, 82, 82, 82, -396, 96, 82, -484, 40, -334,
	153, 82, 154, -308, -412, 310, 82, -308, -414, -417,
	60, 96, -421, -418, 81, -266, 261, 132, -421, -266,
	-420, -419, 309, 262, 81, 82, 154, -308, 258, 81,
	-341, -335, -334, 258, -419, -418, -341, 82, 154, 82,
	-335,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 842, 843, 844, 845, 846, 847, 0,
	0, 0, 0, 601, 602, 0, 568, 0, 0, 0,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 436, 0, 0, 0, 0, 683, -2, 56, 0,
	277, 0, 268, 268, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, -2, 614, 0,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 614, 0, 0, 0, 691, 0, 0,
	0, 0, 0, 734, 756, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1236, 1237, 1238, 1239,
	2005, 1975, -2, 1750, 1727, 1901, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, -2, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, -2, -2, -2, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 0, 261, 259, 1697,
	1727, 1750, 1804, 1815, 1816, 1850, 1901, 1932, 1975, 1991,
	1992, 1993, 2005, 0, 865, 0, 661, 0, 666, 1189,
	661, 289, 603, 604, 691, 717, 566, 0, 325, 0,
	1741, 329, 1982, 0, 0, 563, 319, 320, 321, 322,
	323, 324, 0, 0, 841, 0, 0, 315, 0, 283,
	1806, 2004, 0, 0, 0, 0, 0, 153, 975, 155,
	977, 159, 166, 0, 0, 171, 172, 175, 176, 177,
	178, 179, 0, 183, 0, 185, 188, 0, 190, 191,
	0, 194, 195, 196, 0, 206, 207, 208, 978, 979,
	980, -2, 84, 863, 1655, 1542, 0, 1549, 1562, 1573,
	1316, 1317, 1318, 1319, 0, 0, 0, 0, 0, 1326,
	1327, 0, 1351, 2039, 2080, 0, 1334, 1335, 1336, 1337,
	1338, 1339, 93, 105, 106, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 0, 1603, 1604, 1605, 1513, 1303, 1236, 0,
	2048, 0, 2070, 2075, 2076, 2077, 2078, 2069, 0, 0,
	1498, 0, 1488, 0, 0, -2, -2, 0, 0, 1875,
	-2, 2045, 2066, 2074, 2049, 2050, 2073, 2041, 2042, 2043,
	2036, 2037, 2038, 2040, 2052, 2054, 2065, 0, 2061, 2071,
	2072, 1980, 0, 0, 0, 2021, 107, 108, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1509, -2, -2, 1512,
	-2, 1515, -2, -2, -2, -2, 1520, 1521, -2, 1523,
	-2, -2, -2, -2, -2, -2, -2, 1500, 1501, 1502,
	1503, 1492, 1493, 1494, 1495, 1496, 1497, -2, -2, -2,
	717, 792, 0, 717, 0, 692, 739, 742, 745, 748,
	695, 0, 0, 57, 58, 0, 278, 279, 267, 269,
	0, 273, 0, 266, 0, 0, 0, 0, 1010, 1010,
	1010, 1010, 1010, 0, 1010, 0, 0, 0, 0, 1010,
	0, 898, 982, 983, 984, 1008, 1009, 1077, 0, 0,
	0, 619, 615, 616, 617, 618, 705, 0, 707, 710,
	543, 543, 491, 0, 0, 0, 543, 0, 505, 497,
	0, 0, 0, 543, 0, 0, 712, 712, 0, 546,
	553, 543, 543, -2, 543, 543, 543, 0, 0, 1022,
	511, 512, 513, 497, 497, 516, 517, 518, 528, 529,
	554, 1679, 0, 0, 436, 436, 0, 436, 0, 436,
	436, 436, 621, 1845, 1748, 1821, 1806, 2004, 0, 234,
	1875, 239, 0, 1749, 1768, 0, 0, 1786, 0, -2,
	0, 305, 717, 0, 0, 691, 0, 0, 0, 0,
	0, 436, 436, 436, 436, 436, 1076, 436, 436, 436,
	436, 436, 0, 0, 0, 436, 436, 0, 0, 757,
	758, 753, 754, 755, 759, 760, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 63, 62, 0, 1656, 1674,
	1608, 1609, 1610, 1661, 1612, 1665, 1665, 1665, 1665, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1665, 1665,
	0, 0, 1654, 1632, 1663, 1663, 1663, 1661, 1658, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1668, 1668, 1671, 1671, 1668, 0, 1538,
	0, 0, 0, 0, 665, 0, 0, 717, -2, 0,
	0, 567, 326, 1240, 0, 0, 330, 331, 0, 0,
	346, 0, 349, 334, 335, 336, 0, 133, 0, 317,
	318, 0, 0, 285, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 163, 160, 167, 170, 180, 187,
	0, 199, 201, 204, 161, 168, 173, 174, 181, 202,
	162, 164, 165, 169, 203, 205, 182, 186, 200, 184,
	189, 192, 193, 198, 0, 134, 0, 0, 0, 0,
	0, 1548, 0, 0, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1542, 0, 0, 1322, 1323, 1324, 1325, 1328, 0, 1352,
	0, 0, 0, 0, 1602, 1606, 0, 1538, 1538, 0,
	1538, 1534, 0, 0, 0, 0, 0, 0, 1538, 1474,
	0, 0, 1476, 1489, 0, 0, 1478, 1479, 0, 1482,
	1483, 1538, 0, 1538, 1487, 1470, 1471, 0, 1534, 1534,
	1534, 1534, 0, 0, 1534, 1534, 1534, 1534, 1534, 1534,
	1534, 1534, 1534, 1534, 1534, 1534, 0, 0, 0, 0,
	712, 0, 718, 0, -2, 0, 736, 738, 740, 741,
	743, 744, 746, 747, 749, 750, 697, 0, 0, 59,
	0, 0, 0, 0, 271, 0, 276, 0, 862, 0,
	0, 1010, 1010, 0, 1010, 899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 1010, 1010, 0, 1030,
	0, 0, 0, 621, 620, 0, 706, 0, 0, 765,
	0, 0, 490, 0, 497, 543, 543, 503, 504, 499,
	498, 549, 550, 546, 0, 546, 546, 765, 0, 522,
	523, 524, 543, 543, 530, 713, 0, 531, 532, 546,
	0, 551, 552, 765, 0, 0, 765, 765, 0, 540,
	541, 542, 0, 0, 1010, 0, 559, 499, 499, 1680,
	1681, 0, 0, 1019, 0, 0, 0, 562, 0, 0,
	0, 0, 622, 214, 217, 0, 220, 0, 1845, 0,
	1845, 0, 227, 0, 0, 0, 0, 0, 0, 257,
	258, 0, 0, 0, 0, 248, 251, 1183, 1184, 972,
	973, 252, 253, 297, 298, 0, 712, 735, 737, 731,
	732, 733, 0, 0, 0, 0, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 597, 0, 878, 599,
	0, 0, 0, 773, 767, 769, 836, 93, 773, 8,
	80, 77, 0, 19, 0, 0, 19, 19, 0, 19,
	262, 0, 1677, 1675, 1676, 1611, 1662, 0, 1637, 0,
	1638, 1639, 1640, 1650, 1651, 0, 0, 1633, 0, 1634,
	1635, 1636, 1627, 0, 1628, 1629, 0, 1630, 1631, 260,
	0, 1539, 866, 0, 639, 653, 634, 0, 642, 0,
	1190, 623, 653, 625, 0, 642, 712, 689, 0, 667,
	0, 0, 327, 0, 332, 0, 0, 348, 350, 351,
	352, 337, 338, 564, 313, 314, 306, 307, 308, 309,
	310, 311, 312, 316, 103, 0, 286, 287, 0, 0,
	0, 147, 148, 149, 150, 151, 152, 154, 138, 586,
	588, 964, 976, 0, 967, 0, 157, 197, 130, 0,
	0, 0, 1543, 1544, 1545, 1546, 1547, 1552, 0, 1554,
	1556, 1558, 1560, 0, 1578, -2, -2, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1563,
	1576, 1577, 0, 0, 0, 0, 0, 0, 1574, 1574,
	1569, 0, 1320, 0, 1349, 1353, 0, 0, 0, 0,
	94, 1533, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 0, 0, 1542, 0, 0, 0, 1535, 1536, 0,
	0, 0, 1429, 0, 0, 1435, 1436, 1437, 0, 648,
	0, 1499, 1475, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 791, 793, 0, 657,
	659, 660, 686, 667, 693, 0, 0, 0, 55, 60,
	0, 1044, 280, 281, 0, 0, 275, 0, -2, 0,
	0, 0, 1010, 0, 0, 913, 0, 434, 958, 0,
	0, 0, 974, 999, 1006, 0, 0, 0, 0, 1050,
	900, 905, 906, 907, 901, 902, 908, 909, 0, 708,
	0, 0, 805, 489, 0, 544, 545, 494, 1806, 499,
	765, 765, 506, 500, 507, 548, 508, 509, 510, 546,
	765, 765, 714, 543, 546, 533, 547, 546, 536, 537,
	0, 555, 560, 556, 0, 558, 514, 515, 1052, 710,
	364, 365, 406, 406, 406, 389, 406, 0, 0, 377,
	1682, 0, 0, 0, 0, 386, 1682, 0, 1682, 1682,
	1682, 1682, 1682, 1682, 1682, 0, 0, 1682, 1682, 1682,
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 0, 1682,
	1682, 1682, 1682, 1682, 1169, 1682, 0, 1020, 396, 397,
	398, 399, 404, 405, 0, 431, 0, 0, 0, 434,
	0, 947, 778, 0, 779, 780, 776, 807, 831, 831,
	0, 831, 811, 1189, 0, 0, 225, 226, 215, 0,
	216, 0, 228, 229, 0, 231, 232, 233, 240, 1748,
	1821, 235, 237, 0, 0, 241, 254, 255, 256, 0,
	0, 246, 247, 0, 0, 300, 301, 303, 0, 667,
	1023, 1024, 1025, 583, 1187, 584, 585, 589, 0, 0,
	592, 593, 594, 595, 596, 880, 0, 0, 952, 953,
	765, 0, 774, 0, 770, 837, 0, 839, 0, 765,
	0, 78, 19, 0, 71, 68, 0, 0, 0, 0,
	0, 1657, 1607, 1678, 0, 0, 0, 1659, 0, 0,
	0, 0, 61, 669, 630, 0, 633, 650, 0, 654,
	0, 0, 646, 638, 643, 0, 0, 663, 624, 0,
	0, 629, 667, 0, 690, 719, 720, 723, 1241, 0,
	333, 347, 0, 0, 0, 0, 141, 961, 0, 142,
	146, 136, 0, 0, 0, 966, 0, 963, 968, 0,
	156, 0, 0, 131, 132, 1035, 1044, 0, 0, 0,
	1553, 1555, 1557, 1559, 1561, 0, 1564, 1574, 1574, 1570,
	0, 1565, 0, 1567, 0, 1543, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 1419, 1420, 0, 0, 1424,
	0, 1426, 1427, 1428, 1430, 0, 0, 0, 1434, 0,
	1473, 1491, 1477, 1480, 0, 1484, 0, 1486, 0, 717,
	717, 0, 0, 1393, 1393, 1393, 0, 0, 0, 0,
	1393, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 1341, 1342, 0, 0, 0, 794, 687, 0, 0,
	0, 0, 0, 1042, 0, 282, 270, 272, 0, 0,
	0, 868, 869, 871, 0, 874, 875, 876, 880, 710,
	1126, 0, 710, 920, 1682, 1011, 438, 0, 0, 960,
	0, 936, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 1054, 0, 0, 0, 608, 612, 23, 711, 0,
	766, 492, 0, 493, 543, 501, 502, 765, 525, 526,
	0, 0, 765, 543, 543, 546, 0, 557, 1054, 0,
	0, 1019, 367, 0, 1198, 1199, 407, 0, 1205, 1214,
	1010, 1273, 0, 1214, 0, 0, 1216, 1217, 0, 0,
	0, 0, 390, 391, 0, 376, 0, 0, 0, 0,
	375, 0, 0, 417, 0, 0, 0, 0, 0, 1683,
	1682, 1682, 0, 384, 385, 0, 388, 0, 0, 0,
	0, 0, 0, 0, 1682, 1682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 1175, 1176, 920, 1682, 0,
	0, 0, 438, 934, 943, 0, 0, 0, 0, 0,
	0, 798, 0, 0, 797, 0, 0, 0, 0, 0,
	710, 832, 0, 834, 835, 809, -2, 0, 778, 814,
	1538, 218, 219, 0, 0, 224, 242, 244, 0, 0,
	0, 243, 245, 249, 250, 299, 302, 304, 729, 0,
	0, 1078, 0, 881, 882, 884, 885, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1732, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 879, 600, 763, 768, 775, 838, 840,
	94, 771, 763, 0, 81, 19, 80, 72, 73, 0,
	19, 0, 0, 0, 0, 1667, 1666, 1652, 0, 1653,
	1664, 1669, 0, 1672, 0, 673, 0, 0, 653, 655,
	0, 0, 653, 0, 0, 662, 0, 0, 653, 729,
	669, 0, 726, 724, 725, 0, 0, 565, 104, 353,
	0, 0, 0, 0, 0, 587, 0, 965, 138, 0,
	0, 158, 0, 0, 0, 1044, 1039, 1537, 1566, 1568,
	0, 1575, 1571, 1321, 1329, 1350, 0, 0, 1356, 1368,
	1368, 0, 0, 1359, 1665, 1665, 1362, 1661, 1663, 1661,
	1368, 1368, 0, 95, 0, 0, 1425, 0, 0, 0,
	649, 0, 0, 0, 1389, 1391, 1393, 1393, 1400, 1394,
	1401, 1402, 1393, 1393, 1393, 1393, 1407, 1393, 1393, 1393,
	1393, 1393, 1393, 1393, 1393, 1387, 0, 0, 1596, 1597,
	658, 0, 0, 700, 701, 702, 703, 704, 0, 0,
	53, 54, 1044, 0, 274, 0, 0, 873, 0, 0,
	0, 1191, 0, 0, 0, 0, 924, 921, 922, 923,
	0, 955, 439, 440, 441, 442, 0, 0, 0, 959,
	0, 947, 929, 0, 0, 0, 1000, 1001, 1002, 1003,
	1004, 1005, -2, 1014, 0, 0, 0, 1191, 1191, 1191,
	1062, 0, 1051, 661, 0, -2, 0, 0, 610, 0,
	0, 806, 495, 765, 519, 715, 716, 534, 765, 765,
	543, 561, 1062, 1053, 0, 366, 408, 0, 1204, 1230,
	1215, 1230, 1274, 1230, 1230, 1010, 0, 408, 0, 0,
	378, 414, 0, 0, 0, 0, 374, 411, 723, 415,
	416, 418, 0, 420, 421, 380, 392, 393, 394, 395,
	0, 0, 0, 387, 400, 401, 402, 403, 1137, 1138,
	1139, 1142, 1143, 1144, 1145, 0, 0, 1148, 1149, 1150,
	1151, 1152, 1227, 1228, 1229, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1177, 1178, 1179, 1180, 1181, 1182, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 0, 0, 1172, 0,
	924, 0, 0, 0, 0, 955, 936, 0, 946, 0,
	948, 949, 0, 0, 631, 765, 292, 0, 801, 795,
	0, 784, 799, 800, 787, 0, 789, 0, 785, 786,
	765, 777, 808, 833, 810, 813, 815, 816, 822, 0,
	0, 0, 0, 221, 222, 223, 230, 0, 458, 236,
	685, 0, 1188, 590, 591, 1079, 1080, 598, 0, 886,
	761, 0, 0, 761, 76, 79, 0, 74, 0, 0,
	0, 0, 66, 64, 1660, 0, 0, 675, 118, 0,
	0, 0, 651, 0, 656, 653, 637, 647, 636, 644,
	645, 664, 653, 628, 627, 688, 673, 721, 722, 0,
	1242, 328, 0, 962, 138, 143, 144, 145, 139, 137,
	969, 0, 971, 0, 1037, 0, 0, 1572, 1355, 1330,
	1357, 1369, 1370, 1358, 1331, 1332, 1360, 1361, 1363, 1364,
	1365, 1366, 1367, 1333, 1421, 0, 1423, 1431, 1432, 0,
	1481, 1485, 0, 0, 0, 0, 0, 1398, 1399, 1403,
	1404, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 717, 1388, 0, 0, 0, 0, 0, 0, 0,
	698, 0, 0, 0, 1043, 1045, 861, 864, 870, 872,
	0, 0, 0, 1192, 1193, 1195, 1196, 1197, 0, 0,
	1191, 0, 897, 0, 0, 915, 916, 926, 0, 0,
	0, 444, 445, 0, 0, 0, 457, 453, 454, 455,
	435, 954, 943, 932, 0, 0, 942, 0, 1015, 1682,
	1682, 1682, 0, 0, 1122, 1682, 1682, 0, 0, 0,
	1065, 0, 0, 1056, 0, 831, 0, 0, 765, 609,
	612, 613, 709, 496, 538, 535, 765, 1065, 363, 379,
	409, 0, -2, 0, 1231, 0, 1218, 1231, 0, 0,
	1230, 0, 368, 408, 0, 0, 0, 422, 425, 426,
	423, 1269, 0, 424, 0, 413, 419, 1140, 1141, 0,
	1146, 1147, 0, 1171, 0, 0, 427, 0, 0, 0,
	428, 433, 929, 0, 944, 0, 950, 951, 717, 0,
	0, 781, 802, 0, 0, 782, 0, 783, 788, 790,
	291, 817, 0, 0, 819, 820, 821, 812, 238, 730,
	883, 0, 751, 0, 0, 772, 752, 0, 19, 0,
	0, 69, 1670, 1673, 677, 0, 674, 119, 0, 0,
	0, 0, 641, 652, 635, 626, 675, 727, 728, 140,
	135, 970, 1047, 0, 1038, 0, 1433, 0, 1393, 1390,
	1393, 1392, 1384, 0, 1343, 1344, 1345, 1346, 1347, 1348,
	0, 696, 0, 0, 903, 1126, 0, 1028, 0, 1128,
	1682, 1682, 0, 903, 925, 914, 0, 956, 957, 0,
	446, 447, 0, 450, 456, 927, 928, 0, 0, 940,
	0, 0, 0, 0, 1007, 1021, 0, 0, 0, -2,
	0, -2, 1071, 0, 1063, 0, 1055, 0, 1058, 765,
	765, -2, 606, 611, 0, 539, 1071, 410, 1232, -2,
	1245, 1247, 0, 1020, 1250, 1251, 0, 0, 0, 0,
	0, 0, 1295, 1259, 0, 0, 1263, 1264, 1265, 0,
	0, 1268, 0, 1590, 1591, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 1212, 369, 370, 0, 372, 373,
	1270, 412, 1682, 382, 1170, 1173, 1174, 432, 429, 430,
	932, 935, 632, 712, 293, 294, 803, 0, 796, 826,
	823, 0, 0, 887, 762, 764, 70, 75, 0, 0,
	679, 0, 676, 0, 670, 672, 129, 640, 677, 91,
	121, 0, 0, 1422, 1472, 1396, 1397, 0, 1385, 0,
	1379, 1380, 1381, 1386, 699, 694, 0, 889, 896, 910,
	1026, 1194, 1127, 0, 0, 0, 1126, 895, 0, 0,
	443, 448, 0, 451, 452, 0, 930, 931, 0, 938,
	0, 0, 995, 1661, 0, 1016, 1017, 1185, 1186, 1018,
	1123, 1124, 1125, 1081, -2, 1134, 0, 1032, 1047, 1081,
	1059, 0, 1066, 0, 1064, 1057, 717, 607, 1068, 1246,
	1248, 1249, 1252, 1253, 1254, 1300, 1301, 1302, 0, 0,
	1257, 1297, 1298, 1299, 1258, 0, 0, 0, 0, 0,
	1588, 1589, 1293, 0, 0, 1219, 1221, 1222, 1223, 1224,
	1225, 1226, 1220, 0, 0, 0, 1211, 1213, 371, 0,
	1682, 945, 290, 0, 0, 827, 829, 824, 825, 65,
	67, 82, 0, 678, 120, 0, 679, 83, 0, 112,
	0, 1048, 0, 1395, 1382, 0, 0, 0, 0, 0,
	1592, 1593, 1594, 0, 0, 0, 911, 912, 1129, 1130,
	1131, 1027, 917, 0, 919, 449, 933, 937, 940, 0,
	986, 0, 723, 0, 1083, 0, 1019, 1136, 1682, 1034,
	1083, 1049, 0, 1061, 0, 1073, 0, 1067, 712, 362,
	0, 1070, 1255, 1256, 0, 0, 1488, 1682, 0, 1288,
	0, 986, 986, 986, 986, 0, 381, 0, 804, 818,
	0, 0, 0, 668, 92, 109, 0, 122, 123, 0,
	0, 0, 0, 1040, 0, 1371, 0, 0, 0, 1375,
	1376, 1377, 1378, 0, 888, 0, 918, 939, 941, 985,
	996, 997, 723, 1031, 0, 1120, 1135, 0, 1033, 1060,
	1072, 0, 1075, 605, 1069, 1296, 0, 1262, 0, 1267,
	1276, 1289, 0, 0, 1200, 0, 1202, 0, 1206, 0,
	1208, 0, 0, 383, 828, 830, 0, 681, 671, 96,
	0, 118, 115, 0, 124, 0, 0, 0, 0, 1036,
	0, 0, 1372, 1373, 1374, 0, 890, 891, 904, 987,
	1682, 1682, 0, 0, 0, 993, 994, 998, 0, 1108,
	0, 0, 1114, 0, 1121, 1140, 1074, 1260, 1266, 1275,
	1277, 1278, 0, 1290, 1291, 1292, 1294, 986, 986, 986,
	986, 1210, 680, 0, 85, 0, 0, 113, 114, 116,
	0, 125, 0, 127, 128, 0, 1383, 892, 0, 0,
	990, 991, 0, 1084, 0, 1086, 0, 0, 0, 0,
	0, 1118, 0, 1261, 1279, 0, 1280, 0, 0, 0,
	1201, 1203, 1207, 1209, 682, 1046, 0, 97, 0, 99,
	101, 102, 1233, 110, 111, 117, 126, 0, 877, 893,
	0, 988, 989, 992, 0, 1088, 0, 1109, 0, 0,
	0, 0, 0, 0, 0, 1281, 1283, 1284, 0, 0,
	1282, 86, 87, 0, 98, 0, 0, 1041, 894, 1085,
	1082, 0, 1120, 1110, 0, 1112, 0, 0, 0, 0,
	1285, 1287, 1286, 0, 0, 100, 1234, 0, 1090, 0,
	1106, 1111, 1113, 1115, 0, 1119, 1117, 88, 89, 90,
	0, 1089, 0, 1102, 1087, 0, 1116, 1235, 1091, -2,
	0, 1107, 1092, -2, 0, 1100, 0, 0, 1093, 1101,
	0, 1096, 0, 0, 0, 1095, 0, -2, 1103, 0,
	0, 1540, 1550, 1551, 1097, -2, 0, 1105, 0, 1104,
	1541,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 622, 619,
	123, 122, 124, 3, 623, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 620, 135, 621, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:790
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:797
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:803
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:811
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:836
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:840
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:846
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:851
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:887
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp:   yyDollar[2].str,
				IsS3:        false,
				Dir:         yyDollar[4].str,
				Parallelism: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:934
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:940
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:947
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:955
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:961
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:988
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:996
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1004
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1014
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1022
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1032
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1039
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1048
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1062
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1068
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1072
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1097
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1101
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1126
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1160
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1171
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1177
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1181
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1194
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1220
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1224
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1228
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1241
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1247
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1256
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1267
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1271
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1277
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1281
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1287
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1291
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1297
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1321
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1340
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1344
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1348
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1357
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1364
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1372
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1379
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1384
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1391
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1424
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1428
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1440
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1458
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1475
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1521
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1562
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1572
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1598
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1625
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1661
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1665
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1687
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1691
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1885
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1889
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1893
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1930
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1934
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1940
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1947
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1955
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1959
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1973
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1990
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2006
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2044
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2056
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2067
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2073
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2083
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2091
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2125
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2148
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2216
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2220
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2224
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2234
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2240
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2244
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2250
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2254
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2288
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2292
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2296
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2300
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2304
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2308
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2326
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2362
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2369
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2386
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2397
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2408
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2412
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2434
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2438
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2444
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2462
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2486
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2506
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2565
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2616
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2620
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2632
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2637
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2638
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2639
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2688
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2697
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2701
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2707
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2723
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2762
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2771
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2783
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2787
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2791
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2795
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2810
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2814
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2818
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2822
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2826
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2830
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2834
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2838
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2843
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2874
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2878
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2895
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2904
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2908
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2971
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2979
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3002
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:3006
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3033
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3041
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3054
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3060
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3095
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3144
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3152
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3164
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3168
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3176
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3186
		{
			yyVAL.item = nil
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3191
		{
			yyVAL.item = nil
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowCollation{
				Like:  yyDollar[3].comparisionExprUnion(),
				Where: yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3253
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3257
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3270
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3281
		{
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3285
		{
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3354
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3363
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3371
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3391
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3406
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3408
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3444
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3456
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3462
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3503
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3509
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3541
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3548
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3553
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3557
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3561
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3566
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3570
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3576
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3589
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3593
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3628
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3634
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3640
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3644
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3648
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3654
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3658
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3692
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3710
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3714
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3738
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3774
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3780
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3802
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3813
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3818
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3825
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3841
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3854
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3865
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3869
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3875
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3880
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3887
		{
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3889
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3892
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3901
		{
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3905
		{
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3910
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3919
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3926
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3932
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3940
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3954
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3974
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3984
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3988
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3994
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4001
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4007
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4015
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4022
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4029
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4048
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4052
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4056
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4065
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4069
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4075
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4084
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4088
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4094
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4098
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4104
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4108
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4114
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4119
		{
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4130
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4134
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4150
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4156
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4160
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4166
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4170
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4179
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4192
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4206
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4224
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4243
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4256
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4260
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4273
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4277
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4282
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4286
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4293
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4298
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4315
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4323
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4331
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4340
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4346
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4356
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4375
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4393
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4399
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4412
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4416
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4420
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4424
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4430
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4446
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4450
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4456
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4468
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4477
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4487
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4500
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4506
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4512
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4516
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4531
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4535
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4548
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4553
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4557
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4565
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4569
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4573
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4587
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4591
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4621
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4633
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4641
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4649
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4658
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4666
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4690
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4698
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4732
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4743
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4757
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4761
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4765
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4770
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4791
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4800
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4809
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4819
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4829
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4834
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4838
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4843
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4851
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4865
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4883
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4889
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4907
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4916
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4926
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4930
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4940
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4944
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4948
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4952
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4958
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4968
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4972
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4978
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4988
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4994
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5000
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5004
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5008
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5018
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5024
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5028
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5034
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5038
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5044
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5048
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5058
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5071
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5077
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5096
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5114
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5118
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5124
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5134
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5142
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5147
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5151
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5159
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5168
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5172
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5176
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5180
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5185
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5189
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5193
		{
			yyVAL.str = yyDollar[2].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5199
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5205
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5209
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5213
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5227
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5266
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5276
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5282
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 864:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5288
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5298
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5303
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5320
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5341
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5349
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5356
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5380
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5385
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5402
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5408
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5422
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5428
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5444
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5450
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5457
		{
			yyVAL.str = yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5463
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5472
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5484
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = yyDollar[1].str
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5500
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5506
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5510
		{
			yyVAL.str = "DEFINER = "
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5514
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5519
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5523
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5537
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5545
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5551
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5561
		{
			yyVAL.str = yyDollar[1].str
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5565
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5578
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5584
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5605
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5620
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5626
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5635
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5647
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5659
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5671
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5692
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5698
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5706
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5712
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5720
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5726
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5735
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5739
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5744
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5748
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5755
		{
			yyVAL.str = yyDollar[3].str
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5760
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5764
		{
			yyVAL.str = yyDollar[2].str
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5770
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5784
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5804
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5810
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5825
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5834
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5843
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5848
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5854
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5862
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5968
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5972
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5978
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5988
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5992
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5998
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6008
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6012
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6016
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6025
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6031
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6038
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6044
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6053
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6060
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6069
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6073
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6093
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6097
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6101
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6106
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6110
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6118
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6124
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6149
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorSimilarityFn) > 0 {
					opt1.AlgoParamVectorSimilarityFn = opt2.AlgoParamVectorSimilarityFn
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6175
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6179
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6183
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorSimilarityFn: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6187
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6191
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6195
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6199
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6205
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6209
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6215
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6220
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6225
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6229
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6233
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6237
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6241
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6245
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6251
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6266
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6280
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6289
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6295
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6299
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6305
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6309
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6313
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6318
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6322
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6337
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6343
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6361
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6379
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6397
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6408
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6419
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6430
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6434
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6440
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6452
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6461
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6474
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6481
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6491
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6504
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6512
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6530
		{
			yyVAL.str = ""
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:6534
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6540
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6544
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6549
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6553
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6560
		{
			yyLOCAL = &tree.TailParameter{
				Charset:      yyDollar[1].str,
				Fields:       yyDollar[2].fieldsUnion(),
				Lines:        yyDollar[3].linesUnion(),
				IgnoredLines: uint64(yyDollar[4].int64ValUnion()),
				ColumnList:   yyDollar[5].loadColumnsUnion(),
				Assignments:  yyDollar[6].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6572
		{
			yyVAL.str = ""
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6576
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1049:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6582
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6595
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6609
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6617
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6627
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6634
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6641
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6648
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6659
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6678
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6689
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6696
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6707
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6713
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6723
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6730
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6737
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6744
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6760
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6764
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6777
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6791
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6798
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6809
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6822
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6828
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6832
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6838
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6847
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6861
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6867
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6871
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6877
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6884
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6893
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6897
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6906
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6911
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6915
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6920
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6924
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6934
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6938
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6949
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6957
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6965
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6973
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6984
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6993
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:7003
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7013
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7017
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7022
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7026
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7032
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7036
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7042
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7046
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7055
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7061
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7065
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7071
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7075
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7084
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7090
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7094
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7098
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7124
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7128
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7133
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7137
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7149
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7153
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7157
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7161
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7165
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7173
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7177
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7181
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7185
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7189
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7205
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7209
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7213
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7217
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7221
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7225
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7241
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7247
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7251
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7263
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7267
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7311
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7320
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7325
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7331
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7338
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7342
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7348
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7352
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7356
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7362
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7366
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7372
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7381
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7390
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7419
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7450
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7464
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7470
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7479
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7488
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7497
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7506
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7516
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7524
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7530
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7534
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7544
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7550
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7556
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7576
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7580
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7586
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7641
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7647
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7651
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7657
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7661
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7665
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7669
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7673
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7677
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7682
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7686
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7698
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7702
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7706
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7710
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7714
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7731
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7735
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7739
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7747
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7751
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7757
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7766
		{
			yyVAL.str = ""
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7770
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7776
		{
			yyVAL.str = ""
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7780
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7786
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7798
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7805
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7812
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7819
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7826
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7835
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7841
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7847
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7851
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7855
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7859
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7863
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7868
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7875
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7879
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7883
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7892
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7897
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7901
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7917
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7923
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7927
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7931
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7935
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7939
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7943
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7947
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7951
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7955
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7959
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7963
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7967
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7977
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7981
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7985
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7989
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7993
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7997
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8001
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8005
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8009
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8013
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8017
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8021
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8026
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8034
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8038
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8042
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8046
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8055
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8059
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8063
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8067
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8071
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8075
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8081
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8107
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8117
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8126
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8136
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8146
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8155
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8169
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8178
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8184
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8188
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8194
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8203
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8215
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8232
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8249
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8262
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8275
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8287
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8301
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8316
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8331
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8363
		{
		}
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8370
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8374
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8378
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8384
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8388
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8392
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8396
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8402
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8406
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8410
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8416
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8424
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8438
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8445
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8454
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8459
		{
			yyVAL.str = ","
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8463
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8468
		{
			yyVAL.str = "1,vector_cosine_ops"
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8472
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8484
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8510
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8521
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8542
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8552
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8562
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8571
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8590
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8600
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8620
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8630
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8650
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8670
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8680
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8690
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8719
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8727
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8735
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8743
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8751
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8761
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8769
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8778
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8786
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8794
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8802
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8810
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8821
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8831
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8843
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8854
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8876
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8912
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8924
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8936
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8947
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8955
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8962
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8969
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8981
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8989
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8999
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9009
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9017
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9028
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9037
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9046
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9054
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9064
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:9072
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9086
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9096
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9115
		{
		}
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9117
		{
		}
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9158
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9169
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9173
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9177
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9183
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9192
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9198
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9202
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9208
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9212
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9219
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9223
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9227
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9235
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9239
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9243
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9248
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9252
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9258
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9262
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9266
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9270
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9274
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9278
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9282
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9286
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9290
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9294
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9302
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9306
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9310
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9314
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9318
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9322
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9326
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9330
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9334
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9338
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9348
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9354
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9358
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9365
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9369
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9373
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9379
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9383
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9387
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9391
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9395
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9399
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9403
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9409
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9413
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9417
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9421
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9427
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9440
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9445
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9451
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9455
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9468
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9473
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9477
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9481
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9485
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9489
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9496
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9500
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9504
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9508
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9515
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9526
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9531
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9537
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9549
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9561
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9586
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9612
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9638
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9651
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9664
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9677
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9690
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9718
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9745
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9787
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9823
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9859
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9888
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9908
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9928
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9964
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9977
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10003
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10016
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10028
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10040
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10052
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10064
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10076
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10088
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10100
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10112
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10124
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10137
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10150
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10163
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10176
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10191
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10199
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10208
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10218
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10241
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10246
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10252
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10259
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10263
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10268
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10272
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10278
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10284
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10291
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10298
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10307
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10314
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10321
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10344
		{
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10356
		{
			yyVAL.str = ""
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10360
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const ADMIN_NAME = 57671
const RANDOM = 57672
const SUSPEND = 57673
const ATTRIBUTE = 57674
const HISTORY = 57675
const REUSE = 57676
const CURRENT = 57677
const OPTIONAL = 57678
const FAILED_LOGIN_ATTEMPTS = 57679
const PASSWORD_LOCK_TIME = 57680
const UNBOUNDED = 57681
const SECONDARY = 57682
const USER = 57683
const IDENTIFIED = 57684
const CIPHER = 57685
const ISSUER = 57686
const X509 = 57687
const SUBJECT = 57688
const SAN = 57689
const REQUIRE = 57690
const SSL = 57691
const NONE = 57692
const PASSWORD = 57693
const MAX_QUERIES_PER_HOUR = 57694
const MAX_UPDATES_PER_HOUR = 57695
const MAX_CONNECTIONS_PER_HOUR = 57696
const MAX_USER_CONNECTIONS = 57697
const FORMAT = 57698
const VERBOSE = 57699
const CONNECTION = 57700
const TRIGGERS = 57701
const PROFILES = 57702
const LOAD = 57703
const INFILE = 57704
const TERMINATED = 57705
const OPTIONALLY = 57706
const ENCLOSED = 57707
const ESCAPED = 57708
const STARTING = 57709
const LINES = 57710
const ROWS = 57711
const IMPORT = 57712
const FROM_JSONLINE = 57713
const DATABASES = 57714
const TABLES = 57715
const EXTENDED = 57716
const FULL = 57717
const PROCESSLIST = 57718
const FIELDS = 57719
const COLUMNS = 57720
const OPEN = 57721
const ERRORS = 57722
const WARNINGS = 57723
const INDEXES = 57724
const SCHEMAS = 57725
const NAMES = 57726
const GLOBAL = 57727
const SESSION = 57728
const ISOLATION = 57729
const LEVEL = 57730
const READ = 57731
const WRITE = 57732
const ONLY = 57733
const REPEATABLE = 57734
const COMMITTED = 57735
const UNCOMMITTED = 57736
const SERIALIZABLE = 57737
const LOCAL = 57738
const EVENTS = 57739
const PLUGINS = 57740
const CURRENT_TIMESTAMP = 57741
const DATABASE = 57742
const CURRENT_TIME = 57743
const LOCALTIME = 57744
const LOCALTIMESTAMP = 57745
const UTC_DATE = 57746
const UTC_TIME = 57747
const UTC_TIMESTAMP = 57748
const REPLACE = 57749
const CONVERT = 57750
const SEPARATOR = 57751
const CURRENT_DATE = 57752
const CURRENT_USER = 57753
const CURRENT_ROLE = 57754
const SECOND_MICROSECOND = 57755
const MINUTE_MICROSECOND = 57756
const MINUTE_SECOND = 57757
const HOUR_MICROSECOND = 57758
const HOUR_SECOND = 57759
const HOUR_MINUTE = 57760
const DAY_MICROSECOND = 57761
const DAY_SECOND = 57762
const DAY_MINUTE = 57763
const DAY_HOUR = 57764
const YEAR_MONTH = 57765
const SQL_TSI_HOUR = 57766
const SQL_TSI_DAY = 57767
const SQL_TSI_WEEK = 57768
const SQL_TSI_MONTH = 57769
const SQL_TSI_QUARTER = 57770
const SQL_TSI_YEAR = 57771
const SQL_TSI_SECOND = 57772
const SQL_TSI_MINUTE = 57773
const RECURSIVE = 57774
const CONFIG = 57775
const DRAINER = 57776
const MATCH = 57777
const AGAINST = 57778
const BOOLEAN = 57779
const LANGUAGE = 57780
const WITH = 57781
const QUERY = 57782
const EXPANSION = 57783
const ADDDATE = 57784
const BIT_AND = 57785
const BIT_OR = 57786
const BIT_XOR = 57787
const CAST = 57788
const COUNT = 57789
const APPROX_COUNT_DISTINCT = 57790
const APPROX_PERCENTILE = 57791
const CURDATE = 57792
const CURTIME = 57793
const DATE_ADD = 57794
const DATE_SUB = 57795
const EXTRACT = 57796
const GROUP_CONCAT = 57797
const MAX = 57798
const MID = 57799
const MIN = 57800
const NOW = 57801
const POSITION = 57802
const SESSION_USER = 57803
const STD = 57804
const STDDEV = 57805
const STDDEV_POP = 57806
const STDDEV_SAMP = 57807
const SUBDATE = 57808
const SUBSTR = 57809
const SUBSTRING = 57810
const SUM = 57811
const SYSDATE = 57812
const SYSTEM_USER = 57813
const TRANSLATE = 57814
const TRIM = 57815
const VARIANCE = 57816
const VAR_POP = 57817
const VAR_SAMP = 57818
const AVG = 57819
const JSON_EXTRACT = 57820
const UNNEST = 57821
const ROW = 57822
const OUTFILE = 57823
const HEADER = 57824
const MAX_FILE_SIZE = 57825
const FORCE_QUOTE = 57826
const UNUSED = 57827
const BINDINGS = 57828
const DO = 57829
const DECLARE = 57830

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7777

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 73,
	21, 477,
	-2, 458,
	-1, 78,
	210, 648,
	-2, 692,
	-1, 95,
	42, 326,
	210, 326,
	237, 333,
	238, 333,
	399, 326,
	-2, 354,
	-1, 444,
	67, 1035,
	-2, 1533,
	-1, 445,
	67, 1053,
	-2, 1504,
	-1, 450,
	67, 1054,
	-2, 1532,
	-1, 470,
	67, 969,
	-2, 1578,
	-1, 471,
	67, 970,
	-2, 1577,
	-1, 472,
	67, 1541,
	-2, 1562,
	-1, 473,
	67, 1542,
	-2, 1563,
	-1, 474,
	67, 1543,
	-2, 1569,
	-1, 475,
	67, 1544,
	-2, 1552,
	-1, 476,
	67, 1545,
	-2, 1560,
	-1, 477,
	67, 1546,
	-2, 1570,
	-1, 478,
	67, 1547,
	-2, 1571,
	-1, 479,
	67, 1548,
	-2, 1576,
	-1, 480,
	67, 1549,
	-2, 1581,
	-1, 481,
	67, 1550,
	-2, 1582,
	-1, 484,
	67, 1032,
	-2, 1386,
	-1, 491,
	67, 1041,
	-2, 1412,
	-1, 495,
	67, 1045,
	-2, 1451,
	-1, 496,
	67, 1046,
	-2, 1528,
	-1, 504,
	67, 1056,
	-2, 1513,
	-1, 506,
	67, 1058,
	-2, 1523,
	-1, 518,
	67, 949,
	-2, 1572,
	-1, 519,
	67, 950,
	-2, 1573,
	-1, 520,
	67, 951,
	-2, 1574,
	-1, 527,
	21, 478,
	-2, 441,
	-1, 568,
	394, 354,
	395, 354,
	-2, 327,
	-1, 610,
	103, 1386,
	114, 1386,
	133, 1386,
	-2, 1193,
	-1, 640,
	21, 478,
	-2, 441,
	-1, 737,
	21, 477,
	-2, 877,
	-1, 1030,
	67, 1101,
	-2, 1530,
	-1, 1031,
	67, 1102,
	-2, 1531,
	-1, 1187,
	1, 674,
	68, 674,
	506, 674,
	-2, 681,
	-1, 1297,
	133, 1203,
	-2, 1201,
	-1, 1299,
	133, 592,
	-2, 1198,
	-1, 1300,
	133, 593,
	-2, 1199,
	-1, 1586,
	1, 675,
	68, 675,
	506, 675,
	-2, 681,
	-1, 1791,
	65, 396,
	134, 396,
	-2, 783,
	-1, 2007,
	87, 681,
	129, 681,
	166, 681,
	169, 681,
	-2, 731,
	-1, 2009,
	271, 845,
	-2, 825,
	-1, 2039,
	65, 396,
	134, 396,
	-2, 784,
	-1, 2071,
	87, 681,
	129, 681,
	166, 681,
	169, 681,
	-2, 732,
	-1, 2099,
	271, 845,
	-2, 826,
	-1, 2491,
	68, 704,
	134, 704,
	-2, 681,
	-1, 2496,
	68, 704,
	134, 704,
	-2, 681,
	-1, 2512,
	68, 708,
	134, 708,
	-2, 681,
	-1, 2517,
	68, 709,
	134, 709,
	-2, 681,
}

const yyPrivate = 57344

const yyLast = 23105

var yyAct = [...]int{
	416, 2496, 1094, 2498, 2505, 2495, 2469, 1011, 2335, 397,
	2137, 2415, 2457, 418, 2372, 2111, 2399, 1636, 2400, 2310,
	2286, 2057, 2067, 2306, 1570, 2135, 763, 1262, 884, 2001,
	2136, 442, 112, 930, 2294, 390, 2152, 336, 342, 1632,
	342, 1228, 528, 1007, 2055, 115, 2120, 340, 26, 2032,
	2100, 1767, 1913, 1192, 1794, 1014, 1140, 609, 346, 1909,
	2119, 430, 73, 872, 1287, 1221, 1809, 1478, 792, 1250,
	2013, 523, 389, 111, 395, 1631, 1280, 1196, 861, 1914,
	1981, 556, 1966, 1928, 1918, 352, 1924, 1907, 1593, 635,
	1874, 1143, 1164, 1474, 1151, 1294, 328, 1297, 73, 876,
	1837, 1243, 1281, 523, 1288, 1473, 394, 1289, 613, 1224,
	1769, 112, 1808, 1764, 1618, 1222, 3, 1202, 616, 34,
	1180, 339, 15, 1592, 337, 6, 2075, 338, 5, 1172,
	798, 1587, 1505, 396, 1475, 1005, 952, 1247, 72, 1579,
	1203, 1576, 1215, 1010, 1204, 329, 611, 1485, 1265, 1214,
	1058, 1558, 637, 571, 398, 34, 26, 1489, 406, 996,
	1044, 650, 1634, 1268, 332, 1004, 615, 1176, 1659, 601,
	73, 1179, 1210, 899, 843, 555, 1063, 355, 909, 922,
	354, 525, 527, 12, 1093, 7, 4, 1155, 885, 951,
	2482, 103, 564, 553, 2381, 2059, 106, 2509, 341, 1492,
	1482, 108, 2159, 2063, 2000, 1168, 1283, 526, 107, 107,
	31, 97, 79, 2128, 107, 1689, 602, 107, 2363, 31,
	97, 79, 669, 1681, 1479, 634, 327, 34, 102, 911,
	15, 349, 764, 6, 107, 91, 5, 2353, 344, 859,
	107, 703, 881, 614, 71, 1766, 1490, 107, 1755, 31,
	97, 79, 107, 2388, 31, 97, 79, 1231, 1232, 57,
	961, 545, 896, 581, 897, 104, 104, 1206, 2386, 696,
	1845, 104, 890, 891, 104, 684, 958, 685, 1013, 912,
	981, 997, 513, 1001, 512, 514, 515, 522, 516, 517,
	701, 104, 677, 1765, 679, 888, 2150, 960, 887, 890,
	891, 621, 620, 622, 104, 687, 702, 1000, 1900, 104,
	2403, 2404, 2376, 2377, 2153, 2154, 2155, 2156, 1901, 2239,
	1902, 2242, 680, 2162, 2002, 1015, 653, 1676, 644, 1244,
	643, 619, 1772, 98, 99, 2309, 100, 101, 1991, 1236,
	642, 1240, 2021, 992, 342, 1486, 112, 2028, 1929, 1937,
	1939, 585, 1577, 1555, 351, 2221, 1865, 2133, 1139, 1138,
	529, 2224, 2362, 2117, 699, 700, 1863, 698, 682, 1686,
	639, 641, 672, 2130, 1002, 2390, 1933, 343, 624, 2215,
	385, 547, 2413, 386, 689, 673, 690, 660, 2487, 2506,
	2423, 544, 543, 999, 617, 73, 73, 615, 1934, 1935,
	78, 96, 105, 739, 55, 653, 675, 586, 2385, 78,
	879, 105, 538, 1936, 692, 1022, 1025, 1026, 678, 681,
	95, 90, 89, 2337, 683, 2430, 1023, 710, 2360, 95,
	2208, 2365, 2366, 2402, 388, 664, 738, 640, 2479, 2333,
	2334, 674, 2337, 2308, 746, 2177, 2507, 694, 695, 387,
	618, 2176, 34, 34, 2460, 2343, 541, 1491, 1778, 1495,
	1497, 1498, 737, 903, 612, 750, 2392, 2393, 1931, 2500,
	898, 918, 917, 2199, 614, 536, 875, 688, 1099, 860,
	662, 1919, 1922, 686, 92, 93, 883, 882, 2470, 998,
	2165, 636, 1506, 655, 654, 2514, 2203, 2237, 646, 647,
	676, 2295, 2296, 2297, 2299, 2298, 862, 350, 542, 623,
	2271, 693, 1780, 1781, 1782, 1783, 910, 1682, 65, 1646,
	669, 1483, 94, 1922, 66, 661, 1174, 869, 865, 1870,
	1868, 537, 867, 691, 345, 740, 741, 742, 743, 614,
	1876, 1875, 658, 1830, 1480, 1480, 1480, 550, 551, 552,
	1645, 1644, 1643, 915, 1234, 556, 627, 632, 633, 1235,
	974, 975, 913, 914, 1642, 2481, 744, 840, 2461, 2380,
	2058, 592, 655, 654, 589, 588, 67, 1233, 2442, 2391,
	890, 891, 1671, 772, 2520, 68, 889, 705, 669, 2499,
	546, 848, 886, 1666, 1771, 890, 891, 2364, 668, 880,
	1197, 2008, 1564, 1923, 523, 523, 523, 1197, 1916, 934,
	934, 648, 1917, 1920, 1681, 2519, 863, 864, 591, 866,
	1930, 2307, 594, 593, 1245, 342, 955, 955, 1940, 2222,
	1866, 1628, 1024, 1581, 1493, 2510, 1481, 1792, 1271, 963,
	938, 1932, 1627, 936, 1923, 1775, 1776, 2488, 978, 2129,
	705, 1690, 932, 932, 80, 80, 977, 979, 2513, 1774,
	80, 954, 954, 80, 1921, 1655, 893, 894, 964, 934,
	2134, 934, 643, 582, 940, 1237, 1496, 1239, 328, 993,
	80, 705, 1012, 959, 774, 775, 80, 2483, 612, 1479,
	2458, 2459, 2201, 80, 1569, 704, 2200, 73, 80, 2204,
	2205, 2511, 69, 70, 663, 988, 2473, 2472, 1533, 1515,
	73, 1532, 582, 1488, 900, 1786, 900, 845, 1628, 73,
	1949, 629, 630, 631, 527, 1963, 847, 1580, 1552, 2272,
	2274, 2275, 2276, 2273, 707, 708, 709, 706, 1470, 870,
	1056, 1017, 1018, 1019, 1020, 1021, 1628, 919, 871, 904,
	1062, 2466, 584, 2484, 2171, 583, 1793, 1269, 892, 1109,
	1016, 895, 2417, 2410, 1009, 2405, 2394, 34, 2382, 1115,
	995, 2358, 1488, 1488, 916, 2419, 34, 705, 1514, 987,
	1120, 1121, 984, 1060, 1061, 983, 928, 929, 1096, 1793,
	994, 584, 523, 1103, 583, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 2042, 327, 939,
	1053, 1054, 1006, 970, 990, 965, 956, 907, 908, 1027,
	925, 926, 927, 950, 2357, 530, 666, 2356, 2418, 2226,
	966, 2226, 1655, 2355, 2383, 2345, 1787, 2226, 2231, 1950,
	1161, 986, 2225, 985, 982, 1117, 527, 1008, 1003, 943,
	944, 945, 946, 947, 948, 949, 1568, 2147, 1146, 1147,
	667, 1839, 2145, 1978, 934, 1976, 1108, 1187, 1052, 1162,
	1751, 556, 1795, 1150, 1193, 934, 1154, 1749, 1166, 1684,
	1683, 1675, 1170, 1183, 1611, 1173, 1747, 1745, 877, 669,
	2226, 1046, 1145, 2226, 1734, 2027, 667, 1211, 1211, 2226,
	1216, 2346, 1529, 1695, 1597, 1216, 1516, 1679, 2226, 934,
	112, 1469, 1165, 1153, 1673, 1668, 1276, 1209, 1596, 967,
	523, 1565, 934, 2148, 707, 708, 709, 706, 2146, 1979,
	1097, 1977, 1539, 1538, 1487, 971, 1752, 1095, 1175, 1098,
	841, 839, 1256, 1750, 1110, 934, 1188, 1261, 112, 112,
	1182, 722, 1746, 1746, 1116, 1273, 1118, 749, 1166, 1862,
	705, 1109, 1109, 1291, 1166, 1166, 656, 1266, 1567, 705,
	638, 1207, 1208, 1597, 1477, 1954, 1264, 1213, 1860, 901,
	1674, 1669, 1200, 1201, 1597, 1299, 923, 1564, 2494, 1263,
	1263, 921, 1193, 2455, 2446, 1267, 934, 924, 705, 705,
	1488, 972, 2443, 1768, 1241, 2347, 2245, 1181, 1135, 1964,
	1861, 1198, 1869, 1300, 1672, 1246, 900, 1648, 1194, 1199,
	1169, 590, 615, 1163, 1157, 1476, 1160, 1101, 1100, 645,
	1205, 1260, 1701, 73, 720, 730, 731, 723, 724, 725,
	726, 727, 728, 729, 722, 1471, 1190, 1189, 1059, 1195,
	1500, 1059, 1181, 1511, 1217, 730, 731, 723, 724, 725,
	726, 727, 728, 729, 722, 1762, 1254, 1255, 1286, 1178,
	1212, 920, 706, 548, 2211, 1218, 2210, 902, 1220, 2017,
	1219, 725, 726, 727, 728, 729, 722, 1051, 1006, 1242,
	34, 2012, 1508, 709, 706, 1512, 1841, 2234, 2235, 614,
	2232, 2233, 1049, 1050, 1048, 1251, 1252, 1253, 2194, 737,
	1259, 1258, 1113, 1257, 2493, 2475, 1726, 1126, 2440, 2478,
	1277, 2424, 1114, 595, 2321, 1503, 1504, 1519, 1543, 2288,
	1298, 2266, 2265, 2264, 1468, 1522, 1467, 2261, 1523, 1292,
	1527, 1293, 721, 720, 730, 731, 723, 724, 725, 726,
	727, 728, 729, 722, 1472, 1537, 1571, 1572, 1540, 1541,
	1542, 1535, 2477, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1888, 587, 1553, 2255, 1494, 112, 112, 2252, 2251, 707,
	708, 709, 706, 1502, 1084, 2160, 614, 1499, 1703, 112,
	1594, 707, 708, 709, 706, 1513, 1216, 2024, 2282, 1938,
	112, 1898, 707, 708, 709, 706, 336, 1046, 1510, 1501,
	707, 708, 709, 706, 1216, 1887, 1573, 1575, 2280, 1897,
	2397, 1266, 723, 724, 725, 726, 727, 728, 729, 722,
	1590, 2278, 1856, 1601, 1563, 1102, 2281, 707, 708, 709,
	706, 1602, 707, 708, 709, 706, 2268, 2131, 1562, 1267,
	1561, 707, 708, 709, 706, 1119, 2279, 934, 1122, 1123,
	1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 2277,
	955, 1557, 112, 1637, 1637, 1660, 1556, 1662, 1603, 1604,
	968, 813, 2025, 1710, 2267, 2132, 1525, 1166, 1166, 1166,
	1925, 1640, 713, 714, 715, 716, 717, 718, 719, 711,
	1653, 1560, 1605, 2501, 1638, 954, 1184, 1185, 1186, 838,
	835, 836, 837, 385, 1588, 1715, 386, 1714, 1713, 1711,
	2026, 2489, 1607, 1080, 1609, 2467, 1077, 2420, 2412, 1582,
	1079, 1076, 1078, 1082, 1083, 2396, 2287, 1658, 1081, 1524,
	707, 708, 709, 706, 2512, 1600, 1656, 2313, 2068, 2378,
	1205, 1608, 1606, 2341, 1610, 1664, 1612, 2340, 2328, 1614,
	1613, 707, 708, 709, 706, 2269, 2262, 2258, 1639, 707,
	708, 709, 706, 2220, 2257, 2256, 2223, 2196, 1712, 2161,
	2157, 801, 2066, 772, 2064, 2051, 2050, 2035, 2023, 1649,
	1650, 1651, 2022, 2019, 1993, 707, 708, 709, 706, 821,
	825, 827, 829, 831, 832, 834, 1657, 838, 835, 836,
	837, 1927, 1896, 816, 817, 818, 819, 799, 800, 822,
	1867, 802, 1833, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 814, 820, 1742, 1693, 469, 468, 2485,
	1566, 1559, 824, 826, 828, 830, 833, 1134, 969, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1087, 1088, 1089, 1090, 1091, 1092, 1085, 1086, 2061, 773,
	1677, 768, 767, 1942, 1177, 107, 815, 2348, 97, 79,
	934, 2318, 934, 733, 934, 736, 2317, 2316, 2476, 643,
	707, 708, 709, 706, 2315, 1716, 1717, 1996, 2036, 1691,
	734, 735, 732, 2007, 721, 720, 730, 731, 723, 724,
	725, 726, 727, 728, 729, 722, 934, 1719, 1998, 707,
	708, 709, 706, 1997, 1987, 1687, 1980, 1955, 1891, 1895,
	1727, 1893, 104, 2508, 934, 721, 720, 730, 731, 723,
	724, 725, 726, 727, 728, 729, 722, 1702, 1890, 1718,
	707, 708, 709, 706, 1886, 1720, 1721, 1878, 1873, 932,
	1827, 1724, 1725, 1889, 1748, 1744, 1743, 1728, 1544, 1536,
	707, 708, 709, 706, 1534, 1531, 1530, 932, 1528, 1521,
	1518, 934, 1705, 1517, 1112, 707, 708, 709, 706, 1688,
	1111, 107, 1791, 1706, 1707, 941, 2454, 2448, 1797, 2431,
	1166, 2428, 2426, 1756, 1757, 1173, 765, 1680, 2320, 2304,
	1729, 2452, 1805, 2292, 1699, 1685, 643, 112, 112, 112,
	112, 2289, 2284, 1006, 2246, 1678, 1810, 1142, 643, 112,
	1825, 2218, 2217, 1789, 1753, 1696, 2216, 1761, 1810, 2213,
	1698, 2207, 643, 26, 2192, 1709, 1785, 934, 104, 873,
	2048, 2030, 1829, 2018, 1152, 112, 112, 73, 721, 720,
	730, 731, 723, 724, 725, 726, 727, 728, 729, 722,
	1109, 1144, 1109, 1826, 1788, 1851, 1763, 1667, 1647, 1637,
	1800, 1641, 934, 1801, 1595, 1798, 1047, 104, 1156, 531,
	532, 533, 534, 1854, 1159, 1149, 1835, 1836, 1148, 1758,
	1799, 1777, 530, 1166, 991, 823, 962, 1802, 1166, 1803,
	842, 790, 1796, 1588, 34, 1790, 1846, 15, 1784, 789,
	6, 1855, 788, 5, 1181, 1807, 787, 1806, 1804, 786,
	73, 785, 1811, 1812, 1813, 1814, 784, 1165, 1824, 1872,
	1823, 1822, 1850, 783, 782, 781, 780, 1848, 779, 527,
	1834, 942, 1831, 778, 777, 776, 1864, 771, 2214, 1741,
	1844, 770, 1892, 1740, 643, 1840, 769, 1879, 1859, 1842,
	1881, 1852, 1883, 1853, 1912, 1858, 1849, 1847, 2450, 766,
	112, 707, 708, 709, 706, 707, 708, 709, 706, 643,
	1739, 762, 761, 112, 1594, 1894, 1953, 759, 1877, 1912,
	758, 757, 756, 1880, 1871, 755, 754, 1884, 1885, 1882,
	753, 752, 707, 708, 709, 706, 751, 748, 747, 671,
	1599, 1943, 1967, 1968, 1584, 721, 720, 730, 731, 723,
	724, 725, 726, 727, 728, 729, 722, 1944, 1945, 1946,
	1719, 1738, 721, 720, 730, 731, 723, 724, 725, 726,
	727, 728, 729, 722, 659, 2436, 2434, 2401, 1951, 1970,
	1779, 1654, 1279, 707, 708, 709, 706, 670, 1819, 112,
	1973, 112, 1972, 1820, 1816, 1737, 1947, 1956, 1817, 1948,
	1957, 1958, 1952, 1818, 1815, 1821, 1962, 1624, 1625, 1975,
	2492, 1961, 1670, 1960, 1760, 1736, 1971, 707, 708, 709,
	706, 1974, 1903, 1904, 1959, 1589, 1697, 112, 1136, 1665,
	1992, 1694, 1994, 1571, 1572, 1906, 2011, 707, 708, 709,
	706, 1985, 1988, 1692, 1995, 844, 1578, 1990, 721, 720,
	730, 731, 723, 724, 725, 726, 727, 728, 729, 722,
	665, 56, 33, 1989, 32, 934, 934, 1735, 2006, 2163,
	112, 2039, 1905, 2005, 1630, 1620, 1623, 1624, 1625, 1621,
	1733, 1622, 1626, 1191, 643, 1101, 1100, 73, 2369, 707,
	708, 709, 706, 906, 1810, 905, 324, 325, 2031, 326,
	697, 2009, 707, 708, 709, 706, 2053, 1109, 932, 2033,
	2016, 856, 857, 2010, 1637, 854, 855, 2015, 852, 853,
	1166, 1466, 2014, 2047, 2014, 2044, 2049, 874, 2041, 643,
	846, 2072, 2449, 2121, 2123, 2038, 2121, 2121, 2052, 1912,
	1732, 850, 851, 557, 2037, 2325, 2323, 2249, 2247, 2040,
	2045, 643, 2244, 1731, 2046, 2243, 2241, 2043, 2065, 2060,
	2004, 1730, 707, 708, 709, 706, 2003, 1983, 849, 1193,
	530, 2054, 1982, 1838, 2127, 707, 708, 709, 706, 1197,
	2122, 1857, 2118, 707, 708, 709, 706, 1520, 2097, 657,
	2069, 2438, 2437, 2143, 2437, 2167, 2124, 2125, 2438, 2209,
	1986, 1723, 1629, 878, 582, 39, 1, 1722, 531, 532,
	533, 534, 2140, 1484, 2041, 2020, 2126, 1700, 1941, 1926,
	868, 530, 2144, 707, 708, 709, 706, 549, 934, 707,
	708, 709, 706, 1104, 858, 2141, 2142, 976, 112, 707,
	708, 709, 706, 626, 652, 2168, 2169, 2123, 2172, 2173,
	2174, 2175, 973, 2170, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 651, 649,
	2193, 2033, 2118, 1057, 1064, 432, 1282, 2197, 1055, 2212,
	2285, 2368, 2414, 584, 2319, 2371, 583, 989, 417, 2236,
	2250, 1899, 2149, 2219, 2228, 2238, 2151, 1754, 2195, 2056,
	707, 708, 709, 706, 2230, 2229, 1843, 560, 2240, 463,
	440, 2283, 760, 1278, 2227, 957, 628, 439, 2029, 569,
	1773, 535, 625, 561, 1554, 1999, 558, 1137, 1158, 1141,
	2504, 2248, 2491, 2468, 643, 2447, 2336, 643, 643, 643,
	2263, 2486, 2253, 2254, 2384, 73, 1637, 643, 2259, 2260,
	2429, 2422, 574, 2332, 2164, 356, 1238, 521, 599, 2293,
	2305, 2290, 2301, 2302, 2303, 357, 1598, 2330, 2361, 1507,
	2300, 2291, 2312, 539, 934, 934, 1583, 2311, 540, 2314,
	1586, 1585, 1028, 712, 2324, 1045, 2326, 2327, 2322, 745,
	2331, 721, 720, 730, 731, 723, 724, 725, 726, 727,
	728, 729, 722, 393, 1615, 112, 1509, 2338, 2339, 405,
	399, 1770, 2112, 643, 1832, 38, 37, 932, 932, 36,
	1272, 1295, 434, 114, 1296, 643, 2329, 1620, 1623, 1624,
	1625, 1621, 2344, 1622, 1626, 2158, 2373, 2350, 2354, 577,
	415, 2375, 414, 413, 412, 2349, 1263, 411, 1619, 1617,
	2359, 1616, 1226, 1225, 2374, 1270, 2398, 2351, 2367, 2352,
	2062, 2206, 572, 2270, 2202, 2198, 2342, 2071, 2379, 2070,
	2098, 2099, 2105, 797, 793, 2387, 2389, 795, 796, 794,
	1708, 1704, 1910, 1911, 1908, 1969, 1965, 2395, 1284, 1290,
	1171, 1759, 1227, 573, 578, 2406, 2407, 2408, 2409, 2416,
	109, 1223, 2139, 524, 2421, 25, 566, 24, 568, 581,
	23, 11, 10, 565, 563, 562, 980, 567, 9, 579,
	580, 14, 22, 21, 20, 19, 64, 63, 62, 61,
	18, 575, 576, 8, 2411, 60, 59, 2435, 2433, 2375,
	2445, 2432, 58, 17, 16, 53, 2439, 643, 54, 643,
	49, 2441, 2374, 2444, 2451, 48, 2453, 1012, 47, 1012,
	559, 46, 45, 44, 43, 52, 51, 570, 50, 42,
	41, 2462, 2416, 40, 2463, 643, 77, 76, 2471, 75,
	74, 2425, 2474, 2427, 27, 1012, 28, 2480, 29, 30,
	87, 86, 88, 84, 82, 85, 83, 81, 35, 2465,
	13, 2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2490, 0, 0, 0, 0, 0, 0, 0, 0,
	2503, 0, 2502, 0, 0, 0, 2456, 0, 0, 0,
	0, 2515, 0, 0, 2517, 0, 2516, 2518, 1411, 1453,
	0, 2503, 1400, 0, 1358, 1413, 1331, 1347, 1421, 1348,
	1349, 1386, 1310, 1368, 240, 1345, 0, 0, 0, 0,
	0, 0, 1403, 1302, 1334, 1335, 1304, 1341, 1305, 1332,
	1360, 185, 1330, 1371, 210, 1383, 1344, 1365, 1419, 0,
	0, 270, 224, 0, 0, 1363, 1405, 1366, 1391, 1357,
	1387, 1318, 1379, 1414, 1346, 0, 1384, 1415, 0, 0,
	0, 0, 1184, 1185, 1186, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 1382, 1409, 1343, 0, 169,
	1412, 1364, 1385, 0, 0, 1303, 1380, 0, 1308, 1311,
	1420, 1407, 1338, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 1367, 1388, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 1376, 0, 0,
	0, 1313, 1309, 0, 1359, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 1452,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 1312, 298,
	162, 1447, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 1431, 1432, 1433, 1434, 1435, 1443, 1444,
	0, 1448, 1449, 1450, 1317, 0, 1337, 1389, 0, 1301,
	1398, 1406, 1356, 300, 1408, 1353, 1352, 1438, 0, 1437,
	274, 1439, 1440, 209, 1404, 1333, 1342, 316, 1340, 260,
	242, 1410, 1375, 1451, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 1436, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 1445,
	0, 1446, 312, 192, 152, 295, 0, 238, 0, 1401,
	1306, 1316, 1314, 1350, 1377, 1378, 234, 311, 1393, 1397,
	1394, 1422, 263, 0, 0, 0, 0, 0, 203, 244,
	1395, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1307, 0, 271, 293, 305, 322, 1454, 1455,
	1456, 1457, 0, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	296, 1351, 1324, 1362, 304, 1327, 1325, 1392, 1326, 1381,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	1372, 1355, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1373,
	0, 1329, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 1399, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 1323, 1328,
	1322, 1369, 1370, 1416, 1417, 1418, 1390, 1315, 1402, 1319,
	1321, 1320, 721, 720, 730, 731, 723, 724, 725, 726,
	727, 728, 729, 722, 0, 0, 0, 0, 0, 0,
	0, 1396, 0, 446, 1374, 153, 0, 211, 1423, 252,
	190, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 438, 0, 0,
	270, 224, 0, 0, 0, 0, 492, 500, 0, 1441,
	1442, 308, 309, 310, 294, 0, 182, 1465, 400, 0,
	0, 431, 469, 468, 419, 428, 0, 0, 166, 420,
	0, 427, 421, 425, 424, 422, 423, 0, 484, 0,
	0, 0, 0, 0, 0, 391, 404, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 402, 0, 0, 0, 0, 447, 0, 403, 0,
	0, 449, 0, 429, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 426, 445, 450, 178, 506, 443, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 507, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	0, 0, 300, 0, 0, 490, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 444, 0, 260, 242,
	503, 392, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 1106, 1105,
	1107, 312, 192, 152, 295, 488, 238, 0, 502, 483,
	485, 486, 489, 493, 494, 495, 496, 497, 499, 501,
	505, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 448,
	228, 229, 230, 231, 491, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 513, 487, 512,
	514, 515, 511, 516, 517, 498, 410, 0, 509, 508,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	475, 456, 457, 458, 409, 459, 454, 455, 476, 451,
	472, 473, 433, 436, 460, 131, 461, 474, 477, 478,
	518, 519, 520, 464, 479, 471, 470, 462, 452, 480,
	481, 437, 435, 465, 466, 453, 467, 482, 446, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 185, 1167, 0, 210, 0,
	0, 0, 438, 0, 0, 270, 224, 0, 0, 0,
	0, 492, 500, 0, 0, 0, 0, 0, 0, 0,
	1248, 0, 0, 400, 0, 0, 431, 469, 468, 419,
	428, 0, 0, 166, 420, 0, 427, 421, 425, 424,
	422, 423, 0, 484, 0, 0, 0, 0, 0, 0,
	391, 404, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 0, 0, 0,
	0, 447, 0, 403, 0, 0, 1249, 0, 429, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 426, 445, 450,
	178, 506, 443, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 507, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 441, 0, 0, 300, 0, 0,
	490, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 444, 0, 260, 242, 503, 392, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	488, 238, 0, 502, 483, 485, 486, 489, 493, 494,
	495, 496, 497, 499, 501, 505, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 504, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 448, 228, 229, 230, 231, 491,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 191, 197, 0,
	199, 170, 243, 193, 302, 206, 0, 235, 202, 268,
	207, 213, 256, 301, 241, 261, 168, 292, 269, 217,
	0, 0, 513, 487, 512, 514, 515, 511, 516, 517,
	498, 410, 0, 509, 508, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 211, 0, 252, 190, 475, 456, 457, 458, 409,
	459, 454, 455, 476, 451, 472, 473, 433, 436, 460,
	131, 461, 474, 477, 478, 518, 519, 520, 464, 479,
	471, 470, 462, 452, 480, 481, 437, 435, 465, 466,
	453, 467, 482, 0, 0, 308, 309, 310, 294, 107,
	182, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 185, 0,
	0, 210, 0, 0, 0, 438, 0, 0, 270, 224,
	0, 0, 0, 0, 492, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 431,
	469, 468, 419, 428, 0, 0, 166, 420, 0, 427,
	421, 425, 424, 422, 423, 0, 484, 0, 0, 0,
	0, 0, 0, 391, 404, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	0, 0, 0, 0, 447, 0, 403, 0, 0, 449,
	0, 429, 0, 0, 158, 275, 290, 167, 266, 303,
	172, 273, 163, 239, 262, 0, 0, 160, 288, 272,
	221, 204, 205, 159, 0, 257, 183, 196, 179, 237,
	426, 445, 450, 178, 506, 443, 298, 162, 0, 297,
	236, 284, 289, 222, 216, 161, 286, 220, 215, 208,
	187, 507, 200, 248, 214, 249, 201, 226, 225, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	300, 0, 0, 490, 0, 0, 0, 274, 0, 0,
	209, 0, 0, 0, 444, 0, 260, 242, 503, 392,
	0, 258, 212, 285, 250, 291, 276, 299, 254, 251,
	154, 277, 181, 223, 164, 165, 177, 184, 186, 188,
	189, 232, 233, 245, 265, 278, 279, 280, 180, 173,
	259, 174, 198, 175, 155, 267, 176, 156, 246, 283,
	0, 194, 255, 219, 157, 218, 247, 282, 281, 307,
	313, 314, 318, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 312,
	192, 152, 295, 488, 238, 0, 502, 483, 485, 486,
	489, 493, 494, 495, 496, 497, 499, 501, 505, 263,
	0, 0, 0, 0, 0, 203, 244, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 293, 305, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 448, 228, 229,
	230, 231, 491, 0, 171, 323, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 513, 487, 512, 514, 515,
	511, 516, 517, 498, 410, 0, 509, 508, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 80, 252, 190, 475, 456,
	457, 458, 409, 459, 454, 455, 476, 451, 472, 473,
	433, 436, 460, 131, 461, 474, 477, 478, 518, 519,
	520, 464, 479, 471, 470, 462, 452, 480, 481, 437,
	435, 465, 466, 453, 467, 482, 446, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 185, 2464, 0, 210, 0, 0, 0,
	438, 0, 0, 270, 224, 0, 0, 0, 0, 492,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 431, 469, 468, 419, 428, 0,
	0, 166, 420, 0, 427, 421, 425, 424, 422, 423,
	0, 484, 0, 0, 0, 0, 0, 0, 391, 404,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 0, 0, 0, 0, 447,
	0, 403, 0, 0, 449, 0, 429, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 426, 445, 450, 178, 506,
	443, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 507, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 300, 0, 0, 490, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 444,
	0, 260, 242, 503, 392, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 488, 238,
	0, 502, 483, 485, 486, 489, 493, 494, 495, 496,
	497, 499, 501, 505, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 448, 228, 229, 230, 231, 491, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	513, 487, 512, 514, 515, 511, 516, 517, 498, 410,
	0, 509, 508, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 475, 456, 457, 458, 409, 459, 454,
	455, 476, 451, 472, 473, 433, 436, 460, 131, 461,
	474, 477, 478, 518, 519, 520, 464, 479, 471, 470,
	462, 452, 480, 481, 437, 435, 465, 466, 453, 467,
	482, 446, 0, 308, 309, 310, 294, 0, 182, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 185, 1167,
	0, 210, 0, 0, 0, 438, 0, 0, 270, 224,
	0, 0, 0, 0, 492, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 0, 0, 431,
	469, 468, 419, 428, 0, 0, 166, 420, 0, 427,
	421, 425, 424, 422, 423, 0, 484, 0, 0, 0,
	0, 0, 0, 391, 404, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 401, 402,
	0, 0, 0, 0, 447, 0, 403, 0, 0, 449,
	0, 429, 0, 0, 158, 275, 290, 167, 266, 303,
	172, 273, 163, 239, 262, 0, 0, 160, 288, 272,
	221, 204, 205, 159, 0, 257, 183, 196, 179, 237,
	426, 445, 450, 178, 506, 443, 298, 162, 0, 297,
	236, 284, 289, 222, 216, 161, 286, 220, 215, 208,
	187, 507, 200, 248, 214, 249, 201, 226, 225, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	300, 0, 0, 490, 0, 0, 0, 274, 0, 0,
	209, 0, 0, 0, 444, 0, 260, 242, 503, 392,
	0, 258, 212, 285, 250, 291, 276, 299, 254, 251,
	154, 277, 181, 223, 164, 165, 177, 184, 186, 188,
	189, 232, 233, 245, 265, 278, 279, 280, 180, 173,
	259, 174, 198, 175, 155, 267, 176, 156, 246, 283,
	0, 194, 255, 219, 157, 218, 247, 282, 281, 307,
	313, 314, 318, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 312,
	192, 152, 295, 488, 238, 0, 502, 483, 485, 486,
	489, 493, 494, 495, 496, 497, 499, 501, 505, 263,
	0, 0, 0, 0, 0, 203, 244, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 293, 305, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 448, 228, 229,
	230, 231, 491, 0, 171, 323, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 513, 487, 512, 514, 515,
	511, 516, 517, 498, 410, 0, 509, 508, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 475, 456,
	457, 458, 409, 459, 454, 455, 476, 451, 472, 473,
	433, 436, 460, 131, 461, 474, 477, 478, 518, 519,
	520, 464, 479, 471, 470, 462, 452, 480, 481, 437,
	435, 465, 466, 453, 467, 482, 446, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	438, 0, 0, 270, 224, 0, 0, 0, 0, 492,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 431, 469, 468, 419, 428, 0,
	0, 166, 420, 0, 427, 421, 425, 424, 422, 423,
	0, 484, 0, 0, 0, 0, 0, 0, 391, 404,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 401, 402, 953, 0, 0, 0, 447,
	0, 403, 0, 0, 449, 0, 429, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 426, 445, 450, 178, 506,
	443, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 507, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 300, 0, 0, 490, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 444,
	0, 260, 242, 503, 392, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 488, 238,
	0, 502, 483, 485, 486, 489, 493, 494, 495, 496,
	497, 499, 501, 505, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 448, 228, 229, 230, 231, 491, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	513, 487, 512, 514, 515, 511, 516, 517, 498, 410,
	0, 509, 508, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 475, 456, 457, 458, 409, 459, 454,
	455, 476, 451, 472, 473, 433, 436, 460, 131, 461,
	474, 477, 478, 518, 519, 520, 464, 479, 471, 470,
	462, 452, 480, 481, 437, 435, 465, 466, 453, 467,
	482, 0, 0, 308, 309, 310, 294, 446, 182, 0,
	1526, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 438, 0, 0, 270, 224, 0, 0, 0, 0,
	492, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 431, 469, 468, 419, 428,
	0, 0, 166, 420, 0, 427, 421, 425, 424, 422,
	423, 0, 484, 0, 0, 0, 0, 0, 0, 391,
	404, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 0, 0, 0, 0,
	447, 0, 403, 0, 0, 449, 0, 429, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 426, 445, 450, 178,
	506, 443, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 507, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 300, 0, 0, 490,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	444, 0, 260, 242, 503, 392, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 488,
	238, 0, 502, 483, 485, 486, 489, 493, 494, 495,
	496, 497, 499, 501, 505, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 448, 228, 229, 230, 231, 491, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 513, 487, 512, 514, 515, 511, 516, 517, 498,
	410, 0, 509, 508, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 475, 456, 457, 458, 409, 459,
	454, 455, 476, 451, 472, 473, 433, 436, 460, 131,
	461, 474, 477, 478, 518, 519, 520, 464, 479, 471,
	470, 462, 452, 480, 481, 437, 435, 465, 466, 453,
	467, 482, 446, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 438, 0, 0, 270,
	224, 0, 0, 0, 0, 492, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 0,
	431, 469, 468, 419, 428, 0, 0, 166, 420, 0,
	427, 421, 425, 424, 422, 423, 0, 484, 0, 0,
	0, 0, 0, 0, 391, 404, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 0, 0, 0, 0, 447, 0, 403, 0, 0,
	449, 0, 429, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 426, 445, 450, 178, 506, 443, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 507, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 300, 0, 0, 490, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 444, 0, 260, 242, 503,
	392, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 488, 238, 0, 502, 483, 485,
	486, 489, 493, 494, 495, 496, 497, 499, 501, 505,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 448, 228,
	229, 230, 231, 491, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 513, 487, 512, 514,
	515, 511, 516, 517, 498, 410, 0, 509, 508, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 475,
	456, 457, 458, 409, 459, 454, 455, 476, 451, 472,
	473, 433, 436, 460, 131, 461, 474, 477, 478, 518,
	519, 520, 464, 479, 471, 470, 462, 452, 480, 481,
	437, 435, 465, 466, 453, 467, 482, 446, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 0,
	407, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 438, 0, 0, 270, 224, 0, 0, 0, 0,
	492, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 431, 469, 468, 419, 428,
	0, 0, 166, 420, 0, 427, 421, 425, 424, 422,
	423, 0, 484, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 0, 0, 0, 0,
	447, 0, 403, 0, 0, 449, 0, 429, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 426, 445, 450, 178,
	506, 443, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 507, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 300, 0, 0, 490,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	444, 0, 260, 242, 503, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 1030, 1031, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 488,
	238, 0, 502, 483, 485, 486, 489, 493, 494, 495,
	496, 497, 499, 501, 505, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 448, 228, 229, 230, 231, 491, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 513, 487, 512, 514, 515, 511, 516, 517, 498,
	410, 0, 509, 508, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 475, 456, 457, 458, 409, 459,
	454, 455, 476, 451, 472, 473, 433, 436, 460, 131,
	461, 474, 477, 478, 518, 519, 520, 464, 479, 471,
	470, 462, 452, 480, 481, 437, 435, 465, 466, 453,
	467, 482, 446, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 438, 0, 0, 270,
	224, 0, 0, 0, 0, 492, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 469, 468, 419, 428, 0, 0, 166, 420, 0,
	427, 421, 425, 424, 422, 423, 0, 484, 0, 0,
	0, 0, 0, 0, 391, 404, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 401,
	402, 0, 0, 0, 0, 447, 0, 403, 0, 0,
	449, 0, 429, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 426, 445, 450, 178, 506, 443, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 507, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 300, 0, 0, 490, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 444, 0, 260, 242, 503,
	392, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 488, 238, 0, 502, 483, 485,
	486, 489, 493, 494, 495, 496, 497, 499, 501, 505,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 448, 228,
	229, 230, 231, 491, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 513, 487, 512, 514,
	515, 511, 516, 517, 498, 410, 0, 509, 508, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 475,
	456, 457, 458, 409, 459, 454, 455, 476, 451, 472,
	473, 433, 436, 460, 131, 461, 474, 477, 478, 518,
	519, 520, 464, 479, 471, 470, 462, 452, 480, 481,
	437, 435, 465, 466, 453, 467, 482, 446, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 438, 0, 0, 270, 224, 0, 0, 0, 0,
	492, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 431, 469, 468, 419, 428,
	0, 0, 166, 420, 0, 427, 421, 425, 424, 422,
	423, 0, 484, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 401, 402, 0, 0, 0, 0,
	447, 0, 403, 0, 0, 449, 0, 429, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 426, 445, 450, 178,
	506, 443, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 507, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 300, 0, 0, 490,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	444, 0, 260, 242, 503, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 488,
	238, 0, 502, 483, 485, 486, 489, 493, 494, 495,
	496, 497, 499, 501, 505, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 448, 228, 229, 230, 231, 491, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 513, 487, 512, 514, 515, 511, 516, 517, 498,
	410, 0, 509, 508, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 475, 456, 457, 458, 409, 459,
	454, 455, 476, 451, 472, 473, 433, 436, 460, 131,
	461, 474, 477, 478, 518, 519, 520, 464, 479, 471,
	470, 462, 452, 480, 481, 437, 435, 465, 466, 453,
	467, 482, 0, 0, 308, 309, 310, 294, 107, 182,
	31, 97, 79, 0, 0, 0, 0, 0, 0, 0,
	240, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 331, 333, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 191,
	197, 0, 199, 170, 243, 193, 302, 206, 0, 235,
	202, 268, 207, 213, 256, 301, 241, 261, 168, 292,
	269, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 211, 80, 252, 190, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 240, 0, 0, 0, 308, 309, 310,
	294, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 1919,
	1922, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 300, 0, 0, 0, 1916, 0, 1915, 274,
	1917, 1920, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 1921, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 1274, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 1275, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 707, 708, 709, 706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 240,
	0, 0, 0, 308, 309, 310, 294, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 185, 598, 0, 210,
	0, 0, 0, 0, 0, 0, 270, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 606, 607,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 275, 290, 167, 266, 303, 172, 273,
	163, 239, 262, 0, 0, 160, 288, 272, 221, 204,
	205, 159, 0, 257, 183, 196, 179, 237, 0, 287,
	315, 178, 306, 584, 298, 162, 583, 297, 236, 284,
	289, 222, 216, 161, 286, 220, 215, 208, 187, 0,
	200, 248, 214, 249, 201, 226, 225, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 209, 0,
	0, 0, 316, 0, 260, 242, 0, 0, 0, 258,
	212, 285, 250, 291, 276, 299, 596, 251, 154, 277,
	181, 223, 164, 165, 177, 184, 186, 188, 189, 232,
	233, 245, 265, 278, 279, 280, 180, 173, 259, 174,
	198, 175, 155, 267, 176, 156, 246, 283, 0, 194,
	255, 219, 157, 218, 247, 282, 281, 307, 313, 314,
	318, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 312, 192, 152,
	295, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 203, 244, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	293, 305, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 296, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 600, 228, 229, 230, 231,
	195, 0, 171, 323, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 608, 603,
	604, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 107, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	1285, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 0, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 211, 80, 252,
	190, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 240, 0, 0,
	0, 308, 309, 310, 294, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 270, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 606, 607, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 0, 287, 315, 178,
	306, 584, 298, 162, 583, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 0, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	316, 0, 260, 242, 0, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	311, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 320, 228, 229, 230, 231, 195, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 608, 603, 604, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	240, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 185, 937, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 935, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 191,
	197, 0, 199, 170, 243, 193, 302, 206, 0, 235,
	202, 268, 207, 213, 256, 301, 241, 261, 168, 292,
	269, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 211, 0, 252, 190, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 240, 0, 0, 0, 308, 309, 310,
	294, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	185, 931, 0, 210, 0, 0, 0, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 935, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2370, 0, 113, 469, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 240,
	0, 0, 0, 308, 309, 310, 294, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 270, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	935, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 158, 275, 290, 167, 266, 303, 172, 273,
	163, 239, 262, 0, 0, 160, 288, 272, 221, 204,
	205, 159, 0, 257, 183, 196, 179, 237, 0, 287,
	315, 178, 306, 0, 298, 162, 0, 297, 236, 284,
	289, 222, 216, 161, 286, 220, 215, 208, 187, 0,
	200, 248, 214, 249, 201, 226, 225, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 209, 0,
	0, 0, 316, 0, 260, 242, 0, 0, 0, 258,
	212, 285, 250, 291, 276, 299, 254, 251, 154, 277,
	181, 223, 164, 165, 177, 184, 186, 188, 189, 232,
	233, 245, 265, 278, 279, 280, 180, 173, 259, 174,
	198, 175, 155, 267, 176, 156, 246, 283, 0, 194,
	255, 219, 157, 218, 247, 282, 281, 307, 313, 314,
	318, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 312, 192, 152,
	295, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 203, 244, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	293, 305, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 320, 228, 229, 230, 231,
	195, 0, 171, 323, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 935, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 240, 0, 0, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 0, 287, 315, 178, 306, 0,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 0, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 209, 0, 0, 0, 316, 0,
	260, 242, 0, 0, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 0, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 313, 314, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 311, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 320, 228, 229, 230, 231, 195, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 1230,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 1652, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 935,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 191, 197, 0,
	199, 170, 243, 193, 302, 206, 0, 235, 202, 268,
	207, 213, 256, 301, 241, 261, 168, 292, 269, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 211, 0, 252, 190, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 240, 0, 0, 0, 308, 309, 310, 294, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 270, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	469, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 275, 290, 167, 266, 303,
	172, 273, 163, 239, 262, 0, 0, 160, 288, 272,
	221, 204, 205, 159, 0, 257, 183, 196, 179, 237,
	0, 287, 315, 178, 306, 0, 298, 162, 0, 297,
	236, 284, 289, 222, 216, 161, 286, 220, 215, 208,
	187, 0, 200, 248, 214, 249, 201, 226, 225, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	209, 0, 0, 0, 316, 0, 260, 242, 0, 0,
	0, 258, 212, 285, 250, 291, 276, 299, 254, 251,
	154, 277, 181, 223, 164, 165, 177, 184, 186, 188,
	189, 232, 233, 245, 265, 278, 279, 280, 180, 173,
	259, 174, 198, 175, 155, 267, 176, 156, 246, 283,
	0, 194, 255, 219, 157, 218, 247, 282, 281, 307,
	313, 314, 318, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 312,
	192, 152, 295, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 311, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 203, 244, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 293, 305, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 320, 228, 229,
	230, 231, 195, 0, 171, 323, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 240, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 270, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2138,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 275, 290,
	167, 266, 303, 172, 273, 163, 239, 262, 0, 0,
	160, 288, 272, 221, 204, 205, 159, 0, 257, 183,
	196, 179, 237, 0, 287, 315, 178, 306, 0, 298,
	162, 0, 297, 236, 284, 289, 222, 216, 161, 286,
	220, 215, 208, 187, 0, 200, 248, 214, 249, 201,
	226, 225, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 209, 0, 0, 0, 316, 0, 260,
	242, 0, 0, 0, 258, 212, 285, 250, 291, 276,
	299, 254, 251, 154, 277, 181, 223, 164, 165, 177,
	184, 186, 188, 189, 232, 233, 245, 265, 278, 279,
	280, 180, 173, 259, 174, 198, 175, 155, 267, 176,
	156, 246, 283, 0, 194, 255, 219, 157, 218, 247,
	282, 281, 307, 313, 314, 318, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 312, 192, 152, 295, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 311, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 203, 244,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 293, 305, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	320, 228, 229, 230, 231, 195, 0, 171, 323, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 191, 197, 0, 199, 170, 243, 193,
	302, 206, 0, 235, 202, 268, 207, 213, 256, 301,
	241, 261, 168, 292, 269, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 211, 0, 252,
	190, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 240, 0, 0,
	0, 308, 309, 310, 294, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 270, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 275, 290, 167, 266, 303, 172, 273, 163, 239,
	262, 0, 0, 160, 288, 272, 221, 204, 205, 159,
	0, 257, 183, 196, 179, 237, 0, 287, 315, 178,
	306, 0, 298, 162, 0, 297, 236, 284, 289, 222,
	216, 161, 286, 220, 215, 208, 187, 0, 200, 248,
	214, 249, 201, 226, 225, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 209, 0, 0, 0,
	316, 0, 260, 242, 0, 0, 0, 258, 212, 285,
	250, 291, 276, 299, 254, 251, 154, 277, 181, 223,
	164, 165, 177, 184, 186, 188, 189, 232, 233, 245,
	265, 278, 279, 280, 180, 173, 259, 174, 198, 175,
	155, 267, 176, 156, 246, 283, 0, 194, 255, 219,
	157, 218, 247, 282, 281, 307, 313, 314, 318, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 312, 192, 152, 295, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	311, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 203, 244, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 293, 305,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 320, 228, 229, 230, 231, 195, 0,
	171, 323, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 191, 197, 0, 199,
	170, 243, 193, 302, 206, 0, 235, 202, 268, 207,
	213, 256, 301, 241, 261, 168, 292, 269, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	211, 0, 252, 190, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	240, 0, 0, 0, 308, 309, 310, 294, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 270, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 275, 290, 167, 266, 303, 172,
	273, 163, 239, 262, 0, 0, 160, 288, 272, 221,
	204, 205, 159, 0, 257, 183, 196, 179, 237, 0,
	287, 315, 178, 306, 0, 298, 162, 0, 297, 236,
	284, 289, 222, 216, 161, 286, 220, 215, 208, 187,
	0, 200, 248, 214, 249, 201, 226, 225, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 209,
	0, 0, 0, 316, 0, 260, 242, 0, 0, 0,
	258, 212, 285, 250, 291, 276, 299, 254, 251, 154,
	277, 181, 223, 164, 165, 177, 184, 186, 188, 189,
	232, 233, 245, 265, 278, 279, 280, 180, 173, 259,
	174, 198, 175, 155, 267, 176, 156, 246, 283, 0,
	194, 255, 219, 157, 218, 247, 282, 281, 307, 313,
	314, 318, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 312, 192,
	152, 295, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 311, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 203, 244, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 293, 305, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 320, 228, 229, 230,
	231, 195, 0, 171, 323, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 191,
	197, 0, 199, 170, 243, 193, 302, 206, 0, 235,
	202, 268, 207, 213, 256, 301, 241, 261, 168, 292,
	269, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 211, 0, 252, 190, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 240, 0, 0, 0, 308, 309, 310,
	294, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 935, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 1828, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 240,
	0, 0, 0, 308, 309, 310, 294, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 270, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 275, 290, 167, 266, 303, 172, 273,
	163, 239, 262, 0, 0, 160, 288, 272, 221, 204,
	205, 159, 0, 257, 183, 196, 179, 237, 0, 287,
	315, 178, 306, 0, 298, 162, 0, 297, 236, 284,
	289, 222, 216, 161, 286, 220, 215, 208, 187, 0,
	200, 248, 214, 249, 201, 226, 225, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 209, 0,
	0, 0, 316, 0, 260, 242, 0, 0, 0, 258,
	212, 285, 250, 291, 276, 299, 254, 251, 154, 277,
	181, 223, 164, 165, 177, 184, 186, 188, 189, 232,
	233, 245, 265, 278, 279, 280, 180, 173, 259, 174,
	198, 175, 155, 267, 176, 156, 246, 283, 0, 194,
	255, 219, 157, 218, 247, 282, 281, 307, 313, 314,
	318, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 312, 192, 152,
	295, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 203, 244, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	293, 305, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 320, 228, 229, 230, 231,
	195, 0, 171, 323, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 1661, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 254,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 0, 1591, 0, 0, 308,
	309, 310, 294, 240, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 240, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 270, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	275, 290, 167, 266, 303, 172, 273, 163, 239, 262,
	0, 0, 160, 288, 272, 221, 204, 205, 159, 0,
	257, 183, 196, 179, 237, 0, 287, 315, 178, 306,
	0, 298, 162, 0, 297, 236, 284, 289, 222, 216,
	161, 286, 220, 215, 208, 187, 0, 200, 248, 214,
	249, 201, 226, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 1574, 0,
	0, 0, 274, 0, 0, 209, 0, 0, 0, 316,
	0, 260, 242, 0, 0, 0, 258, 212, 285, 250,
	291, 276, 299, 254, 251, 154, 277, 181, 223, 164,
	165, 177, 184, 186, 188, 189, 232, 233, 245, 265,
	278, 279, 280, 180, 173, 259, 174, 198, 175, 155,
	267, 176, 156, 246, 283, 0, 194, 255, 219, 157,
	218, 247, 282, 281, 307, 313, 314, 318, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 312, 192, 152, 295, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 311,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	203, 244, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 293, 305, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 320, 228, 229, 230, 231, 195, 0, 171,
	323, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 191, 197, 0, 199, 170,
	243, 193, 302, 206, 0, 235, 202, 268, 207, 213,
	256, 301, 241, 261, 168, 292, 269, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 211,
	0, 252, 190, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 240,
	0, 0, 0, 308, 309, 310, 294, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 270, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 275, 290, 167, 266, 303, 172, 273,
	163, 239, 262, 0, 0, 160, 288, 272, 221, 204,
	205, 159, 0, 257, 183, 196, 179, 237, 0, 287,
	315, 178, 306, 0, 298, 162, 0, 297, 236, 284,
	289, 222, 216, 161, 286, 220, 215, 208, 187, 0,
	200, 248, 214, 249, 201, 226, 225, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 209, 0,
	0, 0, 316, 0, 260, 242, 0, 0, 0, 258,
	212, 285, 250, 291, 276, 299, 254, 251, 154, 277,
	181, 223, 164, 165, 177, 184, 186, 188, 189, 232,
	233, 245, 265, 278, 279, 280, 180, 173, 259, 174,
	198, 175, 155, 267, 176, 156, 246, 283, 0, 194,
	255, 219, 157, 218, 247, 282, 281, 307, 313, 314,
	318, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 312, 192, 152,
	295, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 311, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 203, 244, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	293, 305, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 320, 228, 229, 230, 231,
	195, 0, 171, 323, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 191, 197,
	0, 199, 170, 243, 193, 302, 206, 0, 235, 202,
	268, 207, 213, 256, 301, 241, 261, 168, 292, 269,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 0, 0, 0,
	153, 0, 211, 0, 252, 190, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 240, 0, 0, 0, 308, 309, 310, 294,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 270,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 275, 290, 167, 266,
	303, 172, 273, 163, 239, 262, 0, 0, 160, 288,
	272, 221, 204, 205, 159, 0, 257, 183, 196, 179,
	237, 0, 287, 315, 178, 306, 0, 298, 162, 0,
	297, 236, 284, 289, 222, 216, 161, 286, 220, 215,
	208, 187, 0, 200, 248, 214, 249, 201, 226, 225,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 209, 0, 0, 0, 316, 0, 260, 242, 0,
	0, 0, 258, 212, 285, 250, 291, 276, 299, 347,
	251, 154, 277, 181, 223, 164, 165, 177, 184, 186,
	188, 189, 232, 233, 245, 265, 278, 279, 280, 180,
	173, 259, 174, 198, 175, 155, 267, 176, 156, 246,
	283, 0, 194, 255, 219, 157, 218, 247, 282, 281,
	307, 313, 314, 318, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	312, 192, 152, 295, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 311, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 203, 244, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 293, 305, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 296, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 320, 228,
	229, 230, 231, 195, 0, 171, 323, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 191, 197, 0, 199, 170, 243, 193, 302, 206,
	0, 235, 202, 268, 207, 213, 256, 301, 241, 261,
	168, 292, 269, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 211, 0, 252, 190, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 240, 0, 0, 0, 308,
	309, 310, 294, 0, 182, 0, 0, 0, 0, 0,
	0, 110, 185, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 0, 287, 315, 178, 306, 0,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 0, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 209, 0, 0, 0, 316, 0,
	260, 242, 0, 0, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 0, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 313, 314, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 311, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 320, 228, 229, 230, 231, 195, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 240, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 270, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 275, 290, 167, 266, 303, 172, 273, 163,
	239, 262, 0, 0, 160, 288, 272, 221, 204, 205,
	159, 0, 257, 183, 196, 179, 237, 0, 287, 315,
	178, 306, 0, 298, 162, 0, 297, 236, 284, 289,
	222, 216, 161, 286, 220, 215, 208, 187, 0, 200,
	248, 214, 249, 201, 226, 225, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 209, 0, 0,
	0, 316, 0, 260, 242, 0, 0, 0, 258, 212,
	285, 250, 291, 276, 299, 254, 251, 154, 277, 181,
	223, 164, 165, 177, 184, 186, 188, 189, 232, 233,
	245, 265, 278, 279, 280, 180, 173, 259, 174, 198,
	175, 155, 267, 176, 156, 246, 283, 0, 194, 255,
	219, 157, 218, 247, 282, 281, 307, 313, 314, 318,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 312, 192, 152, 295,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 311, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 203, 244, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 293,
	305, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 320, 228, 229, 230, 231, 195,
	0, 171, 323, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 191, 197, 0,
	199, 170, 243, 193, 302, 206, 0, 235, 202, 268,
	207, 213, 256, 301, 241, 261, 168, 292, 269, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 211, 0, 252, 190, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 240, 0, 0, 0, 308, 309, 310, 294, 0,
	182, 0, 0, 1633, 0, 0, 0, 0, 185, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 270, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1184,
	1185, 1186, 1635, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 275, 290, 167, 266, 303,
	172, 273, 163, 239, 262, 0, 0, 160, 288, 272,
	221, 204, 205, 159, 0, 257, 183, 196, 179, 237,
	0, 287, 315, 178, 306, 0, 298, 162, 0, 297,
	236, 284, 289, 222, 216, 161, 286, 220, 215, 208,
	187, 0, 200, 248, 214, 249, 201, 226, 225, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	209, 0, 0, 0, 316, 0, 260, 242, 0, 0,
	0, 258, 212, 285, 250, 291, 276, 299, 254, 251,
	154, 277, 181, 223, 164, 165, 177, 184, 186, 188,
	189, 232, 233, 245, 265, 278, 279, 280, 180, 173,
	259, 174, 198, 175, 155, 267, 176, 156, 246, 283,
	0, 194, 255, 219, 157, 218, 247, 282, 281, 307,
	313, 314, 318, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 312,
	192, 152, 295, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 311, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 203, 244, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 293, 305, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 320, 228, 229,
	230, 231, 195, 0, 171, 323, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	191, 197, 0, 199, 170, 243, 193, 302, 206, 0,
	235, 202, 268, 207, 213, 256, 301, 241, 261, 168,
	292, 269, 217, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	270, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 211, 0, 252, 190, 0, 0,
	0, 1184, 1185, 1186, 1635, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	310, 294, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 275, 290, 167,
	266, 303, 172, 273, 163, 239, 262, 0, 0, 160,
	288, 272, 221, 204, 205, 159, 0, 257, 183, 196,
	179, 237, 0, 287, 315, 178, 306, 0, 298, 162,
	0, 297, 236, 284, 289, 222, 216, 161, 286, 220,
	215, 208, 187, 0, 200, 248, 214, 249, 201, 226,
	225, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 209, 0, 0, 0, 316, 0, 260, 242,
	0, 0, 0, 258, 212, 285, 250, 291, 276, 299,
	254, 251, 154, 277, 181, 223, 164, 165, 177, 184,
	186, 188, 189, 232, 233, 245, 265, 278, 279, 280,
	180, 173, 259, 174, 198, 175, 155, 267, 176, 156,
	246, 283, 0, 194, 255, 219, 157, 218, 247, 282,
	281, 307, 313, 314, 318, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 312, 192, 152, 295, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 311, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 203, 244, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 293, 305, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 320,
	228, 229, 230, 231, 195, 0, 171, 323, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 191, 197, 0, 199, 170, 243, 193, 302,
	206, 0, 235, 202, 268, 207, 213, 256, 301, 241,
	261, 168, 292, 269, 217, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 270, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 211, 0, 252, 190,
	0, 0, 0, 1184, 1185, 1186, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 310, 294, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 275,
	290, 167, 266, 303, 172, 273, 163, 239, 262, 0,
	0, 160, 288, 272, 221, 204, 205, 159, 0, 257,
	183, 196, 179, 237, 0, 287, 315, 178, 306, 0,
	298, 162, 0, 297, 236, 284, 289, 222, 216, 161,
	286, 220, 215, 208, 187, 0, 200, 248, 214, 249,
	201, 226, 225, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 209, 0, 0, 0, 316, 0,
	260, 242, 0, 0, 0, 258, 212, 285, 250, 291,
	276, 299, 254, 251, 154, 277, 181, 223, 164, 165,
	177, 184, 186, 188, 189, 232, 233, 245, 265, 278,
	279, 280, 180, 173, 259, 174, 198, 175, 155, 267,
	176, 156, 246, 283, 0, 194, 255, 219, 157, 218,
	247, 282, 281, 307, 313, 314, 318, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 312, 192, 152, 295, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 311, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 203,
	244, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 293, 305, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 320, 228, 229, 230, 231, 195, 0, 171, 323,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	813, 0, 0, 317, 191, 197, 0, 199, 170, 243,
	193, 302, 206, 0, 235, 202, 268, 207, 213, 256,
	301, 241, 261, 168, 292, 269, 217, 2095, 0, 0,
	707, 708, 709, 706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 813, 0, 0, 0, 0, 0,
	0, 1589, 0, 0, 0, 0, 153, 0, 211, 0,
	252, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	801, 0, 0, 0, 791, 1084, 0, 0, 0, 0,
	0, 0, 308, 309, 310, 294, 0, 182, 821, 825,
	827, 829, 831, 832, 834, 0, 838, 835, 836, 837,
	0, 0, 816, 817, 818, 819, 799, 800, 822, 0,
	802, 0, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 814, 820, 801, 0, 0, 0, 0, 0,
	0, 824, 826, 828, 830, 833, 0, 0, 0, 0,
	0, 0, 821, 825, 827, 829, 831, 832, 834, 0,
	838, 835, 836, 837, 0, 0, 816, 817, 818, 819,
	799, 800, 822, 2095, 802, 815, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 814, 820, 0, 0,
	0, 2095, 0, 0, 0, 824, 826, 828, 830, 833,
	0, 0, 0, 0, 0, 0, 0, 1589, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 1080, 1589, 0, 1077, 0, 815,
	0, 1079, 1076, 1078, 1082, 1083, 0, 0, 0, 1081,
	0, 0, 2074, 0, 2077, 0, 2076, 2078, 2080, 0,
	2082, 2083, 2084, 2086, 2087, 2088, 2090, 2091, 2092, 2093,
	0, 0, 2077, 0, 0, 0, 0, 367, 0, 366,
	373, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 0, 372, 376, 0, 0, 358, 2096,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 2166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 366, 373, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 370, 371, 385, 372, 376,
	386, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 381, 0, 0, 0, 0, 0, 0, 0,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1087, 1088, 1089, 1090, 1091, 1092, 1085, 1086, 2089,
	0, 385, 0, 0, 386, 0, 2079, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 2081, 0, 0, 0, 0,
	0, 0, 0, 0, 823, 0, 2085, 0, 2074, 0,
	0, 0, 2076, 2078, 2080, 0, 2082, 2083, 2084, 2086,
	2087, 2088, 2090, 2091, 2092, 2093, 2074, 0, 0, 0,
	2076, 2078, 2080, 0, 2082, 2083, 2084, 2086, 2087, 2088,
	2090, 2091, 2092, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2096, 0, 0, 823, 359,
	361, 360, 0, 0, 0, 0, 0, 365, 0, 0,
	0, 0, 0, 2096, 0, 0, 0, 0, 0, 369,
	0, 367, 0, 366, 373, 363, 384, 0, 0, 0,
	2094, 0, 0, 362, 0, 370, 371, 353, 372, 376,
	0, 0, 358, 359, 361, 360, 0, 2073, 2094, 0,
	0, 365, 381, 0, 2103, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 2073, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 2089, 0, 362, 2113, 0,
	0, 0, 2079, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 2089, 0, 0, 0, 2101, 0, 0,
	2079, 0, 2115, 2116, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 368, 374, 0, 375, 377, 0, 0, 378,
	379, 380, 0, 0, 382, 383, 0, 0, 0, 0,
	0, 0, 0, 2107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 368, 374, 0, 375,
	377, 0, 0, 378, 379, 380, 0, 0, 382, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 361, 360, 0, 0, 0, 0,
	0, 365, 0, 0, 0, 0, 0, 0, 0, 2114,
	0, 1915, 0, 369, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2108, 2110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 368, 374, 0, 375,
	377, 0, 2117, 378, 379, 380, 0, 0, 382, 383,
	0, 0, 0, 0, 2104,
}

var yyPact = [...]int{
	198, -1000, -305, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20153, -1000, -1000, 1465, -1000, 8308, 20626, 91, 20626,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 325, -1000, 19680, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 293, 22547, 202, 187, 6360,
	20626, -290, -1000, 2082, -1000, -1000, -1000, -1000, 173, 348,
	19207, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1997, 49, 348, 435, 437,
	478, 478, 9727, 2082, 204, 92, -1000, 525, 198, 260,
	20626, -1000, 837, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2082, 2082, 20626,
	-47, 926, -1000, 242, 237, 199, 833, -1000, -1000, -1000,
	-1000, 2054, -1000, 20626, 1789, 20626, -1000, 1243, 241, 22591,
	1905, 762, 386, 1803, -1000, -1000, 1752, -1000, 50, 83,
	66, 175, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 58,
	-1000, 1954, -1000, -1000, 40, -1000, -1000, 34, -1000, -1000,
	-1000, -100, -1000, -1000, -1000, -1000, -1000, -172, -172, 453,
	1250, 6360, -1000, 1189, -1000, 1389, -1000, -1000, -1000, -1000,
	3929, 7815, 7815, 7815, 7815, -1000, -1000, 1620, 6360, 1751,
	1750, -1000, -1000, -1000, -1000, -1000, 824, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7330,
	-1000, 1749, 1744, 1743, 1739, 1738, 1735, 1734, 1733, 1730,
	1725, 1724, 1539, 1712, 1399, 1398, 1699, 1694, 1690, 7815,
	1396, 1539, 1539, 1688, 1687, 1686, 1681, 1679, 1678, 1677,
	1676, 1669, 1664, 1662, 1659, 1655, 1652, 1644, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22240, -1000, 808, 806, -1000, 1643, 1887, 1989, 1581,
	2028, 1990, 1967, 1964, 1960, 30, 292, 292, 292, 318,
	292, 323, -1000, -1000, -1000, -1000, -1000, -1000, 380, -1000,
	-1000, -1000, -1000, 605, 20626, -1000, 1582, 1984, 239, 777,
	200, 249, 1989, 1989, -95, -129, 777, 777, -129, 53,
	-1000, -1000, -1000, 964, 226, 964, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1945, 1943, 293, 293, 303, -1000, -177,
	-1000, -1000, 419, -1000, 408, -1000, 1243, 233, 232, 613,
	968, -1000, 883, 20626, 20626, 20626, 883, 883, 11631, 11158,
	-1000, 1989, 1581, -1000, 1527, 1683, 1581, 293, 293, 293,
	293, 293, 293, 293, 20626, 5384, 5384, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 230, 1639, -1000, 20626, 1989,
	1887, 1989, -1000, 786, 1202, 1375, -1000, -1000, 242, 867,
	-1000, 476, -1000, -1000, -1000, -1000, 20626, 207, -1000, 1366,
	1637, -1000, 312, 726, 755, -1000, 72, 22761, 16361, 1243,
	16361, 20626, -1000, -1000, -1000, -1000, -1000, -1000, -112, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -54, -1000, -54, 6360, 6360, 6360, 6360, 6360,
	-1000, 332, 6845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7815, 7815, 7815, 7815, 7815, 7815, 7815, 7815, 7815, 7815,
	7815, 7815, 1619, 991, 7815, 7815, 7815, 1683, 2090, 606,
	-1000, -1000, -1000, -1000, -1000, 950, 1250, 6360, 6360, 20626,
	22210, 6360, 6360, 1019, 6360, 1934, 1934, 2951, 20626, 6360,
	-1000, 1522, 1516, -1000, -1000, 1044, 6360, -1000, -1000, 6360,
	7815, 6360, -1000, -1000, -1000, -1000, 1934, 6360, 6360, 1934,
	1934, 1934, 996, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
	1374, 20626, 1868, 16, -1000, -1000, -1000, 1560, -1000, 1604,
	1604, 1560, 1560, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1631, 1628, -1000, -1000, 1560, 1587, 1587, 1560,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1621, 1621, 1627, 1621, 20626,
	1989, -290, 4899, -1000, -293, 1887, 6360, -1000, -1000, 6360,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 315, 292,
	-1000, 1404, 975, 16361, 1243, 1236, 20626, 292, 303, -1000,
	20626, 605, 1929, 20626, 16361, 964, 2043, 7815, 964, -1000,
	-1000, -1000, 777, 777, -1000, -1000, -1000, -1000, 964, 964,
	-1000, -1000, -123, 2043, 2043, -122, 20626, 20626, 292, 20626,
	-1000, -1000, -1000, -1000, 20626, -1000, -1000, 1404, 16361, 13523,
	-1000, -150, 436, 410, 416, -1000, -1000, 308, 310, 10685,
	256, 16361, 3436, -1000, -1000, 883, 883, 883, 3436, 3436,
	813, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1887, -1000,
	-1000, -1000, -1000, 1404, 16361, 1243, 20626, 20626, 20626, 21883,
	-1000, 623, -1000, -1000, 9254, 783, 623, 1798, -291, -1000,
	10212, 20626, 20626, -1000, 1887, -1000, 1887, 2512, -1000, 1978,
	-1000, 242, 120, -1000, -1000, -1000, -1000, -1000, -1000, 778,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 604,
	-1000, 20626, -1000, -1000, 72, 16361, 904, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 90, -1000, -1000, 129, -1000, 309,
	-14, 866, -1000, -1000, 33, 126, 33, 1250, -1000, 1001,
	1001, 979, -1000, 376, -1000, -1000, -1000, -1000, 1620, -1000,
	-1000, -1000, 938, 918, -1000, 960, 960, 825, 825, 825,
	825, 825, 1103, 1103, -1000, -1000, -1000, 3929, 1619, 7815,
	7815, 7815, 266, 2827, 2156, -1000, 6360, 953, -1000, 6360,
	1161, 644, 773, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1515, 453, 1512, 1112, 2052, 1511, 6360,
	-1000, -1000, 6360, 1271, 5875, -1000, -1000, -1000, 1510, 769,
	1508, -1000, -1000, -1000, 1507, 643, 1506, 1027, 1501, 6360,
	865, 864, 6360, 6360, 6360, 6360, 1500, 6360, 6360, 6360,
	6360, 6360, 6360, 6360, 594, -1000, 6360, 9, -1000, -1000,
	-1000, -1000, 1198, -1000, 1193, -1000, -1000, -1000, 1368, 1368,
	-1000, -1000, 1172, -1000, -1000, -1000, 1170, -1000, -1000, 1156,
	-1000, -1000, -1000, -1000, 853, -1000, 1250, -1000, 1367, -1000,
	834, 560, -1000, 1120, 18734, 20626, 6, -1000, 1891, 593,
	-1000, -14, 454, 1759, -1000, -1000, -1000, 1865, 20626, 18261,
	-1000, 1617, 850, -1000, 1755, 20626, -1000, 6360, -1000, 20626,
	2043, 2043, 777, 21883, 964, 20626, 964, -1000, -1000, 964,
	-1000, 751, -1000, 20626, -1000, -1000, -1000, -1000, 6, 593,
	2254, 612, -1000, -1000, -1000, -1000, 1920, 21099, 21099, 204,
	1614, -1000, -1000, 422, 407, 406, -1000, -1000, 307, -1000,
	-1000, 454, -1000, -1000, -1000, 1611, 914, -1000, -1000, 7815,
	-1000, 3436, 3436, 3436, -1000, -1000, 13996, -1000, -1000, 555,
	454, 1797, 531, -1000, 531, -1000, -1000, -1000, 2043, 5384,
	-1000, 13523, -1000, -1000, 17780, -1000, 17307, 2043, -1000, 1870,
	459, -1000, 1610, -1000, 847, 1846, -1000, 448, -1000, 911,
	846, -1000, -1000, -1000, -1000, 748, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -48, -1000, -1000, 20626,
	1366, 839, 904, 480, -1000, 305, 747, 746, -1000, 16361,
	43, 16361, -1000, 16361, -1000, -1000, 195, -1000, 20626, 1885,
	-1000, -1000, -1000, 1363, 1873, -1000, -1000, -1000, -1000, -1000,
	835, -1000, 266, 2827, 1813, -1000, 7815, 7815, 2029, 931,
	-1000, 6360, 1089, 1251, 1153, 12577, 20626, -1000, -1000, 6360,
	6360, -1000, 2019, 2013, -1000, 6360, 6360, 1101, -1000, 20626,
	-1000, -1000, -1000, 12577, -1000, 7815, -1000, 1973, -1000, -1000,
	1965, 1952, 1892, 826, -1000, 1879, 1827, 1807, 1773, 1722,
	1695, 1691, 1362, 1250, -1000, -1000, 1498, 1497, 819, -1000,
	818, 1496, 809, 802, 4899, -1000, -146, 6360, 6360, 6360,
	1851, -1000, -1000, 1582, 971, 1609, -103, 900, -1000, 291,
	16361, 219, -1000, 1796, 220, -1000, 1865, -1000, 586, -1000,
	1607, 20626, 622, -1000, 739, 198, -1000, 20626, -1000, 1243,
	777, 1250, 2043, -1000, -1000, 2043, -1000, 777, -1000, 777,
	964, 20626, -1000, -103, 291, 20626, 13523, 13523, 13523, 13523,
	-1000, 1831, 1821, -1000, 1825, 1815, 1832, 20626, 13523, 20626,
	-1000, -1000, -1000, 21491, -1000, -1000, -1000, -1000, -1000, 1492,
	2082, 16834, -1000, -1000, -1000, 398, 16361, 1349, 256, -1000,
	-1000, -1000, -1000, -1000, 20626, 20626, 2036, -1000, 497, 1902,
	-1000, -1000, 728, -1000, 2036, 1007, -291, 4899, 224, 20626,
	-291, 20626, 4899, -1000, 20626, 2512, 1154, -1000, -1000, -1000,
	2046, 16361, 1243, 857, 889, -1000, 39, -1000, 89, 283,
	1347, -1000, 321, 909, 320, -1000, -1000, 7815, -1000, -1000,
	-1000, -1000, 1250, 6360, 1490, -1000, 388, 388, 1489, -1000,
	1560, 1604, -1000, 1560, 1587, 1560, 388, 388, 1486, -1000,
	1147, 1495, -1000, -1000, 1480, 1460, 6360, -1000, 1463, 1727,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1461, -1000, -1000, -1000, 1339, -1000, -1000, -1000,
	1141, -1000, 1123, -1000, -77, -62, 1250, 1250, -1000, -1000,
	1858, 1918, 1880, 8781, 1213, -1000, -1000, 1338, -1000, 271,
	-1000, -1000, -1000, 336, 48, 1121, 272, -1000, 1403, 20626,
	-1000, -1000, -1000, -1000, -1000, 900, 900, 900, 8781, 260,
	655, 706, 13523, 20626, -1000, 15415, 1459, -1000, 454, 2043,
	-1000, -1000, 2043, 2043, 777, -1000, 1213, 271, 591, -1000,
	906, 1758, 1795, 1758, -1000, -1000, -1000, -1000, 1819, -1000,
	1817, -1000, -1000, 591, -1000, 1582, -1000, -1000, 797, 795,
	-1000, 480, 1458, -1000, -1000, -1000, -1000, 2034, 2027, 15888,
	2034, 2067, -1000, 1456, 468, -291, -1000, -1000, 459, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1243, -1000, 88,
	-1000, -1000, -1000, -1000, -1000, -1000, -30, -1000, 20626, 1321,
	20626, -1000, 1250, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6360, -1000,
	-1000, -1000, 1429, -1000, -1000, -1000, -1000, 1455, 1450, -295,
	-56, 2026, 2020, -1000, -1000, 204, 20626, 1435, 467, -1000,
	-1000, -1000, 22294, 393, -1000, 20626, 1002, 434, 292, 434,
	990, 1586, -1000, -1000, -1000, 1320, -17, -1000, -1000, 1319,
	1315, 1119, -1000, -1000, 1242, 763, -5, -1000, -1000, -1000,
	-1000, -1000, -1000, 1584, 12577, 13050, 1314, 1430, 21099, 13523,
	15415, 584, -1000, 674, -1000, -1000, -1000, -1000, -1000, 2043,
	-1000, -1000, 2031, 20626, 4899, -1000, -1000, 6360, 1583, -1000,
	6360, -1000, -1000, -1000, -1000, -1000, -1000, 1313, -1000, 1312,
	-1000, -1000, 6360, 6360, -1000, -1000, 20626, -1000, 459, 454,
	-1000, -1000, -122, 61, -122, 1400, -1000, -1000, -1000, -297,
	1311, -1000, 2018, 1309, 1275, -1000, 1582, 22475, 8781, 22764,
	-1000, -1000, 20626, 20626, -1000, 20626, 20626, 292, 6360, -1000,
	-1000, 193, -1000, -1000, 69, -1000, -1000, 1207, 317, -1000,
	14942, -1000, -1000, -1000, -1000, -1000, -54, 2043, 584, 674,
	-1000, -1000, 854, -1000, 1989, -1000, -1000, 1250, 20626, 1250,
	794, 789, 1250, 453, 448, -1000, -89, -66, -1000, 1307,
	-1000, -1000, -299, 1107, -1000, 1306, -59, -1000, -1000, 1915,
	259, 22457, -1000, 900, 900, 625, 900, 900, 900, 900,
	203, 197, 900, 900, 900, 900, 900, 900, 900, 900,
	900, 900, 900, 900, 900, 900, 1577, -1000, -1000, 22764,
	-1000, -1000, 1025, 7815, -1000, -1000, 1304, 13050, 433, 456,
	1574, -1000, 159, 2066, 987, 985, -1000, 20626, -1000, 1572,
	1693, 99, 1569, -1000, 1565, 1564, 20626, 1305, 282, 1303,
	-1000, -1000, 57, -1000, -1000, 774, -1000, 1560, 6360, -1000,
	-122, 2031, -1000, -1000, 770, -1000, 1016, -1000, 1013, 284,
	-65, -66, -1000, 2016, -61, 2015, 2012, 903, -1000, 1557,
	-1000, -1000, 2008, 204, -1000, 2007, 22475, -1000, 1100, 1099,
	900, 900, 1095, 1302, 1301, 1294, 900, 900, 1059, 1293,
	21491, 1055, 1054, 1053, 1206, 1292, 470, 1191, 1178, 1158,
	20626, 1555, 1263, -1000, -1000, 2827, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1051, 1554, -134,
	-1000, -1000, 1546, 14942, 209, 209, 14942, 14942, 14942, 1542,
	349, -1000, -33, -1000, -1000, -1000, 14942, 1877, 1279, -1000,
	1989, -1000, 1426, 1419, 1418, 1413, 1541, 1046, -56, 2006,
	-1000, 1275, 2005, 1275, 1275, 1285, 20626, 1275, -1000, 166,
	-1000, -1000, -1000, 12577, 12577, -1000, -1000, -1000, -1000, 1284,
	1280, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 213, 20626, 767, -1000, 902, 1409, 6360,
	1539, -215, 14942, 765, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 759, 756, 703, 14942, -1000, -1000, -1000, 156, -1000,
	141, -1000, -1000, 1877, -1000, -1000, -1000, -1000, -1000, 1938,
	12104, -73, -1000, 1276, -1000, 1275, -1000, -1000, 60, 700,
	-1000, -1000, 131, 201, 186, -1000, 286, -1000, -1000, -1000,
	-1000, -1000, -1000, 223, 698, -1000, 1263, 1262, -1000, 1152,
	-1000, 1793, -1000, 41, 697, -1000, -1000, -1000, -1000, 695,
	-1000, -1000, 900, 1255, 93, -1000, -1000, -1000, -1000, 20626,
	-1000, 694, -1000, -1000, -1000, 642, -1000, -1000, -1000, -1000,
	-1000, 1254, -1000, 20626, 112, 1043, 7815, 1535, 7815, 1534,
	150, 1532, -1000, -1000, -1000, -1000, -1000, 349, -1000, 1792,
	1791, 2058, -1000, -1000, -1000, -1000, 141, 141, 141, 141,
	35, 1040, -1000, 1236, 444, -1000, 899, -1000, 14469, 20626,
	891, -1000, 1530, 1992, -1000, 1710, 20626, 1543, 20626, 1529,
	890, 7815, -1000, -1000, 2065, -1000, 2060, 424, 424, -1000,
	-1000, -1000, 20626, 4414, -1000, 618, 1252, -1000, 257, 147,
	-1000, 639, -1000, 638, 20626, 1037, 1420, -1000, -1000, -1000,
	1079, 170, -1000, -1000, -1000, 1250, 20626, 56, 619, -1000,
	1369, 109, -1000, -1000, 579, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1248, -1000, 257, 1844, -1000, 1036, -1000, 885,
	-1000, 22291, 356, -1000, 1230, -1000, 22291, 111, -1000, 212,
	1466, -312, -1000, -1000, 567, -1000, 1274, 428, 6360, -1000,
	-1000, 111, 22475, -1000, 6360, 547, -1000, 22475, 516, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 116, 2481, 186, 127, 124, 185, 2480, 1944, 1942,
	2478, 2477, 2476, 2475, 2474, 2473, 2472, 2471, 2470, 2469,
	2468, 2466, 2464, 2460, 2459, 2457, 2456, 183, 2453, 2450,
	2449, 2448, 2446, 2445, 2444, 2443, 2442, 2441, 2440, 2438,
	2435, 2430, 2428, 2425, 121, 2424, 1941, 2423, 2422, 2416,
	2415, 2413, 164, 2410, 2409, 2408, 2407, 2406, 2405, 2404,
	2403, 2402, 2401, 2398, 2396, 2392, 2391, 2390, 2387, 2385,
	2383, 181, 174, 55, 2382, 44, 47, 138, 191, 61,
	196, 189, 136, 65, 123, 168, 115, 2381, 2380, 109,
	2372, 24, 2371, 129, 2370, 108, 42, 28, 188, 107,
	53, 63, 89, 2369, 2368, 82, 2366, 2365, 87, 2364,
	59, 2363, 79, 41, 88, 27, 2362, 2361, 2360, 68,
	2359, 2358, 2357, 2354, 130, 2353, 90, 50, 2352, 2351,
	2350, 2349, 2347, 33, 2346, 49, 2345, 2344, 2343, 2341,
	2340, 2339, 2337, 12, 16, 18, 2336, 15, 3, 2335,
	163, 77, 80, 100, 2333, 360, 2332, 2331, 2329, 114,
	2328, 478, 2327, 2324, 2323, 2322, 2320, 10, 2316, 151,
	2315, 2306, 2304, 57, 142, 149, 2303, 2302, 97, 45,
	51, 95, 2301, 2300, 75, 162, 17, 43, 0, 148,
	39, 2299, 2296, 2295, 198, 145, 144, 172, 99, 192,
	117, 2294, 2292, 52, 2291, 110, 2290, 106, 74, 2289,
	133, 2286, 35, 132, 2283, 160, 2269, 184, 2, 102,
	26, 232, 2265, 2263, 2262, 131, 2261, 2260, 78, 126,
	2258, 2256, 2253, 25, 2251, 30, 19, 2248, 85, 2246,
	177, 2245, 143, 93, 135, 120, 105, 165, 171, 66,
	112, 1021, 101, 67, 23, 2240, 169, 2238, 216, 179,
	2237, 137, 2236, 180, 354, 159, 2235, 134, 7, 2234,
	2233, 8, 2231, 21, 2230, 2224, 2221, 2216, 6, 2215,
	2213, 2212, 1, 4, 2210, 5, 158, 56, 91, 2209,
	94, 187, 2208, 2207, 2205, 2204, 2203, 231, 2202, 2201,
	2200, 2198, 2197, 2196, 2195, 2193, 76, 31, 2192, 2190,
	2189, 2187, 69, 92, 2186, 306, 157, 2179, 36, 2177,
	2176, 22, 2175, 29, 2172, 2171, 2169, 13, 154, 2168,
	2167, 14, 2165, 2164, 9, 11, 2162, 2161, 60, 46,
	34, 70, 84, 2160, 20, 64, 104, 2156, 2155, 176,
	2154, 150, 2153, 118, 175, 193, 2149, 161, 2148, 2132,
	2124, 2123, 2117, 2114, 2113, 1073, 2107, 2100, 178, 54,
	167, 2099, 2098, 141, 2095, 113, 86, 83, 147, 2093,
	139, 2086, 2085, 173, 140, 2083, 2082,
}

//line mysql_sql.y:7777
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 381, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 61, 60,
	337, 337, 336, 336, 335, 335, 334, 334, 334, 333,
	333, 333, 332, 332, 331, 331, 330, 330, 328, 328,
	329, 327, 326, 326, 326, 324, 324, 322, 322, 323,
	323, 317, 317, 320, 320, 318, 318, 318, 318, 321,
	316, 316, 316, 315, 315, 59, 59, 59, 253, 253,
	58, 58, 267, 267, 267, 267, 267, 265, 265, 265,
	265, 265, 265, 264, 264, 263, 263, 268, 268, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 53,
	53, 53, 53, 56, 56, 56, 57, 262, 262, 262,
	54, 55, 55, 252, 252, 257, 257, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 261,
	261, 261, 259, 259, 258, 258, 260, 260, 47, 47,
	47, 50, 49, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 48, 48, 48, 48, 48, 48, 45, 45,
	45, 45, 45, 44, 44, 46, 46, 250, 250, 249,
	64, 64, 64, 64, 64, 64, 64, 63, 63, 66,
	66, 65, 52, 52, 52, 52, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 360, 360, 360, 362, 362,
	192, 193, 382, 191, 191, 191, 356, 356, 357, 358,
	359, 359, 359, 62, 7, 7, 42, 43, 380, 380,
	297, 297, 205, 205, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	300, 301, 201, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 33, 33, 239, 239,
	32, 383, 383, 175, 175, 31, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 41, 311, 311, 385, 385,
	385, 39, 40, 296, 296, 296, 37, 36, 35, 34,
	34, 30, 30, 29, 29, 198, 198, 200, 200, 196,
	384, 384, 273, 273, 199, 199, 28, 28, 28, 197,
	197, 174, 195, 195, 195, 6, 10, 10, 10, 10,
	10, 10, 10, 10, 16, 18, 247, 247, 244, 17,
	13, 12, 15, 11, 14, 5, 5, 5, 5, 8,
	8, 9, 84, 84, 114, 114, 369, 369, 365, 365,
	366, 366, 366, 367, 367, 368, 368, 4, 304, 304,
	304, 304, 304, 304, 305, 305, 345, 345, 345, 346,
	104, 104, 99, 99, 306, 306, 219, 347, 347, 314,
	314, 313, 313, 312, 312, 102, 102, 103, 103, 88,
	88, 72, 72, 319, 319, 319, 319, 325, 325, 294,
	294, 140, 140, 170, 170, 171, 171, 76, 76, 77,
	77, 77, 77, 77, 77, 353, 353, 355, 355, 354,
	101, 101, 97, 97, 98, 98, 98, 96, 96, 95,
	94, 94, 93, 91, 91, 91, 92, 92, 92, 79,
	79, 78, 78, 78, 78, 78, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 80, 80,
	361, 361, 361, 298, 298, 298, 303, 303, 152, 152,
	153, 153, 151, 151, 81, 81, 82, 82, 82, 82,
	150, 150, 149, 83, 83, 89, 85, 85, 87, 87,
	87, 87, 160, 160, 159, 159, 159, 159, 69, 70,
	70, 71, 107, 107, 158, 157, 157, 157, 106, 106,
	105, 105, 100, 100, 86, 86, 86, 156, 90, 90,
	90, 90, 90, 90, 90, 90, 386, 386, 154, 184,
	184, 184, 190, 190, 183, 183, 183, 183, 183, 194,
	189, 189, 185, 185, 186, 186, 186, 3, 3, 3,
	3, 22, 22, 22, 22, 26, 26, 363, 363, 19,
	370, 373, 371, 374, 374, 374, 375, 375, 375, 376,
	376, 20, 372, 377, 377, 377, 248, 248, 245, 246,
	246, 243, 242, 242, 242, 379, 379, 378, 378, 378,
	187, 187, 21, 238, 238, 240, 241, 241, 232, 232,
	232, 232, 25, 236, 236, 237, 237, 237, 237, 237,
	233, 233, 235, 235, 231, 231, 231, 231, 231, 24,
	230, 230, 228, 228, 226, 226, 227, 227, 225, 225,
	225, 229, 229, 23, 23, 74, 73, 73, 73, 73,
	73, 75, 299, 299, 269, 269, 272, 272, 279, 279,
	280, 280, 278, 278, 285, 285, 284, 284, 283, 283,
	282, 282, 281, 281, 281, 281, 276, 276, 275, 275,
	270, 270, 270, 270, 270, 271, 271, 274, 274, 277,
	277, 131, 131, 132, 132, 132, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 343, 343, 344, 134, 134,
	134, 138, 138, 138, 138, 138, 138, 133, 133, 135,
	135, 115, 115, 113, 113, 108, 108, 109, 109, 110,
	110, 111, 111, 112, 112, 112, 112, 112, 112, 255,
	255, 341, 341, 342, 342, 338, 338, 338, 340, 340,
	340, 340, 340, 339, 339, 116, 168, 168, 168, 188,
	188, 188, 167, 167, 167, 130, 130, 129, 129, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 254, 254, 202, 202, 203, 203, 147,
	146, 146, 146, 146, 146, 144, 145, 143, 143, 143,
	143, 143, 142, 142, 141, 141, 141, 234, 234, 139,
	139, 137, 137, 137, 136, 136, 136, 286, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 211, 211, 216, 216, 352, 352, 351, 117,
	117, 117, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 126, 126, 126, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 310,
	310, 310, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 166, 364, 364, 364, 348,
	348, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	164, 164, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 220, 220, 221, 221, 307,
	307, 307, 307, 307, 307, 308, 308, 309, 309, 309,
	309, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	209, 161, 161, 161, 222, 217, 217, 218, 218, 212,
	212, 212, 212, 212, 212, 212, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 213, 213, 215, 215,
	224, 224, 224, 223, 223, 223, 223, 223, 223, 223,
	128, 128, 128, 128, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 119, 119, 119, 119, 123, 123,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 124, 124, 124, 124, 122, 122,
	122, 122, 122, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 67,
	68, 68, 121, 169, 169, 287, 287, 290, 290, 288,
	288, 289, 291, 291, 291, 292, 292, 292, 293, 293,
	293, 295, 295, 173, 173, 173, 180, 180, 172, 172,
	181, 181, 182, 182, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 9, 9,
	0, 2, 1, 3, 3, 3, 1, 3, 5, 0,
	2, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 0, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 2,
	4, 3, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 7, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 5, 0, 2,
	7, 0, 1, 0, 1, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 0, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 5, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 4, 2, 3, 4, 6,
	8, 8, 4, 6, 8, 8, 0, 1, 2, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 11, 0, 1, 7,
	1, 4, 1, 3, 4, 3, 0, 1, 1, 0,
	2, 7, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 5,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 10, 9, 2, 2, 6, 10, 14,
	18, 5, 0, 1, 0, 6, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 5, 4, 4, 5, 5, 5,
	5, 4, 5, 5, 5, 5, 5, 5, 5, 1,
	1, 1, 4, 4, 6, 8, 6, 4, 5, 5,
	4, 6, 6, 7, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 4, 2, 3, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -381, -2, -1, -3, -4, -5, -6, -51, -63,
	-65, -66, -27, -7, -62, -44, -45, -47, -53, -58,
	-59, -60, -61, -67, -68, -69, -76, -22, -21, -20,
	-19, 12, -8, -9, -353, -10, -191, -192, -193, -382,
	-28, -29, -30, -34, -35, -36, -37, -39, -40, -41,
	-31, -32, -33, -43, -42, 206, -46, 61, -48, -49,
	-50, -54, -55, -56, -57, 320, 326, 378, 387, 504,
	505, 46, -77, -79, -23, -24, -25, -26, 202, 14,
	456, -11, -14, -12, -15, -13, -17, -18, -16, 224,
	223, 37, 286, 287, 324, 222, 203, 13, 135, 136,
	138, 139, 30, -78, 67, 204, -80, 10, 506, -88,
	38, -113, -188, 70, -176, -179, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 302, 453, 241, 265, 268, 275, 135, 154,
	148, 176, 168, 143, 245, 246, 77, 138, 410, 87,
	395, 375, 141, 260, 262, 264, 267, 247, 164, 159,
	259, 243, 504, 157, 248, 39, 249, 181, 250, 251,
	458, 391, 301, 397, 272, 373, 158, 392, 263, 394,
	183, 187, 402, 326, 152, 153, 399, 404, 180, 221,
	42, 455, 233, 405, 185, 179, 175, 413, 276, 274,
	178, 151, 174, 244, 50, 189, 188, 190, 369, 370,
	371, 372, 252, 253, 314, 401, 171, 160, 305, 144,
	22, 408, 228, 396, 327, 254, 269, 277, 184, 186,
	235, 240, 457, 377, 239, 273, 406, 156, 232, 261,
	227, 409, 145, 320, 329, 255, 139, 266, 403, 412,
	49, 342, 150, 142, 218, 136, 237, 242, 256, 257,
	258, 279, 278, 270, 172, 234, 177, 162, 149, 173,
	137, 236, 411, 343, 502, 303, 358, 170, 167, 238,
	211, 407, 398, 140, 362, 344, 165, 280, 499, 500,
	501, 315, 300, 281, 282, 163, 225, 390, 283, 285,
	368, 293, 345, 376, -46, -9, -8, -78, -79, -195,
	23, 373, -52, 374, 206, 67, -188, -5, -4, -44,
	-76, -194, -188, 286, -194, 209, -188, 239, 357, -297,
	214, -264, -238, 240, -263, -240, -266, -241, 31, 202,
	204, 203, 236, 14, 324, 210, 12, 10, 325, 222,
	24, 25, 27, 13, 326, 328, 28, 329, 332, 333,
	334, 41, 337, 338, 229, 70, 73, 247, 247, -218,
	-212, 94, 230, -214, -207, -208, -210, -334, -328, -206,
	67, 119, 120, 127, 95, -209, -286, 35, 97, 463,
	425, -162, -163, -164, -165, -166, -188, -329, -327, 73,
	78, 81, 84, 85, 83, 82, 161, 80, 74, 132,
	-79, 70, -348, 471, -177, 491, 472, 490, 46, -302,
	-309, 208, -307, 166, 225, 162, 12, 125, 368, 130,
	163, 468, 487, 494, 465, 466, 460, 461, 462, 464,
	473, 475, 486, -310, 482, 492, 493, 495, 72, 71,
	485, 484, 469, 470, 476, 459, 467, 477, 478, 483,
	488, 489, 496, 308, 87, 309, 310, 417, 304, 311,
	214, 373, 55, 312, 313, 314, 315, 316, 424, 317,
	56, 318, 307, 229, 358, 319, 165, 182, 428, 427,
	429, 421, 418, 416, 419, 420, 422, 423, 479, 480,
	481, -260, -258, -188, -70, -71, 497, -95, -96, -155,
	19, 6, 7, 8, 9, -299, 302, 358, 239, -232,
	-230, 283, 335, 219, 218, 88, 417, 208, -365, -366,
	199, 200, 201, -355, 449, -354, -188, 26, 209, -38,
	-311, -296, 398, 397, -199, 396, 389, 400, 391, 202,
	450, -173, 345, 376, 235, 414, 415, 322, 377, 402,
	403, 392, 87, 169, 166, 302, 358, -365, 140, 137,
	-251, 140, 93, 145, 144, -251, 239, 357, 40, -257,
	368, -256, -258, 402, 403, 413, 71, 72, 401, -173,
	87, -96, -155, -95, -77, -79, -353, 302, 358, 239,
	210, 209, 211, 417, 286, -298, -361, 31, -303, 196,
	197, 198, 32, 33, -1, -102, 231, -113, 133, -96,
	-95, -96, -167, -188, 375, 103, -52, -52, 374, -356,
	-357, -358, -360, 206, 374, 373, 133, 15, -194, 65,
	-113, -240, 239, -264, -238, 35, 64, 134, 212, 134,
	64, 67, 322, 302, 358, 323, 417, 209, 335, 211,
	239, 336, 302, 358, 209, 211, 417, 239, 302, 209,
	211, 358, 239, 336, 389, 390, 211, 26, 327, 330,
	331, 390, -315, 413, -315, 134, 93, 90, 91, 92,
	-212, 110, -223, 103, 104, 105, 106, 107, 108, 109,
	116, 115, 126, 119, 120, 121, 122, 123, 124, 125,
	117, 118, 113, 94, 111, 112, 96, -79, -212, -218,
	-210, -210, -210, -210, -286, -216, -212, 67, 67, 133,
	-212, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	-308, 67, 67, -220, -221, 67, 67, 73, 73, 67,
	67, 67, -210, 73, -221, -221, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 134, -119, -123, -120, -122, -121, -125, -124, 166,
	167, 130, 170, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 30, 182, 225, 162, 163, 164, 165,
	183, 148, 168, 454, 191, 149, 192, 150, 193, 151,
	194, 152, 153, 195, 154, 157, 158, 159, 156, 133,
	-96, 134, 67, -72, 38, -98, 21, -80, -79, 20,
	31, 32, 31, 32, 31, 32, 31, 32, -363, 209,
	449, -228, 214, -228, -228, 210, -228, 209, -367, 147,
	134, -355, -101, 67, 23, 237, -198, 111, -385, 210,
	399, 42, 238, 237, -97, -98, -97, 393, 390, -273,
	394, 395, -199, -198, -198, -199, 209, 211, 417, -383,
	-384, 15, 113, 237, -383, 30, 30, -297, -297, -368,
	213, 406, 456, 143, 144, 145, -240, 239, 239, 134,
	103, 23, -259, 103, 114, -258, -258, -258, -259, -259,
	-133, 40, -187, 130, -188, 73, -133, 40, -97, -80,
	-79, 68, 68, -297, -297, -297, -297, -297, -297, -297,
	-194, -81, -82, 121, -212, -188, -81, -304, 46, -76,
	67, 30, 67, -188, -97, -72, -98, 133, 78, 73,
	-52, 68, 134, -359, 84, 85, -362, 180, 172, -188,
	-64, 73, -3, -4, -5, -6, -27, -44, -76, -330,
	-328, 67, 31, 367, 64, 15, -265, 209, 417, 321,
	235, 211, 302, -263, -247, -244, -242, -187, -240, -243,
	-242, -268, -167, 390, -73, 379, -73, -212, -212, -212,
	-212, -212, 83, 94, 300, 84, 85, -207, -224, 31,
	281, 282, -208, -208, -208, -208, -208, -208, -208, -208,
	-208, -208, -208, -208, -215, -222, -286, 67, 113, 111,
	112, 96, -210, -208, -208, 68, 134, -352, -351, 98,
	-212, -212, -188, -349, -350, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 312, 307, 313, 311,
	304, 319, 314, 315, 165, 447, 448, 441, 442, 443,
	444, 445, 446, -217, -218, -217, -212, -349, -217, -161,
	32, 31, -161, -212, -364, 298, 297, 299, -99, -188,
	-217, 68, 68, 68, 78, -218, -217, -208, -217, -161,
	-218, -218, -161, -161, -161, -161, 121, -161, -161, -161,
	-161, -161, -161, -161, 73, -258, 40, -293, 343, 342,
	-287, -289, 67, -288, 67, -288, -287, -287, 67, 67,
	-287, -290, 67, -290, -287, -291, 67, -291, -292, 67,
	-291, -188, -97, -71, -313, -312, -212, 40, 498, -72,
	-212, -94, -93, -212, 211, -228, -370, 70, 94, -248,
	-245, -242, -238, -186, 70, 71, 72, -188, -228, -368,
	-354, 34, -100, -188, -242, -383, -151, 16, -210, -384,
	-198, -198, -200, -384, -196, -384, 390, -151, -151, -273,
	-197, -188, -197, -228, -175, -174, -188, -175, -370, -248,
	-85, -83, -86, -87, -89, -154, -156, -90, -113, 67,
	496, 407, 408, 141, 144, 143, 31, 367, -262, 367,
	31, -238, -256, -252, 73, 368, -243, -261, 64, 130,
	-312, -259, -259, -259, -261, -261, 129, -72, -370, -247,
	-238, -188, -115, -113, -115, -189, -186, -179, -150, 134,
	-149, 15, -183, -188, 34, 73, 133, -150, -305, 64,
	-306, -219, -347, 497, -104, 68, -99, -345, -346, -99,
	-103, -188, -72, -72, -181, -182, -172, -178, -185, -186,
	-179, 207, 31, 93, 34, 36, 308, 340, 96, 130,
	20, 97, 166, 129, 310, 425, 309, 202, 59, 427,
	429, 428, 418, 416, 360, 364, 366, 363, 417, 389,
	40, 14, 37, 223, 32, 33, 123, 204, 100, 101,
	226, 35, 224, 85, 44, 23, 62, 15, 17, 18,
	311, 359, 214, 213, 113, 379, 210, 57, 12, 132,
	38, 110, 361, 53, 89, 45, 55, 111, 21, 419,
	420, 41, 378, 387, 452, 230, 125, 312, 313, 60,
	94, 367, 83, 43, 64, 90, 19, 58, 112, 205,
	424, 56, 365, 316, 318, 328, 449, 317, 208, 400,
	10, 307, 426, 30, 222, 54, 209, 99, 212, 84,
	229, 6, 88, 13, 61, 65, 421, 422, 423, 46,
	98, 16, 319, 456, 380, 381, 382, 383, 384, 385,
	386, 191, 192, 193, 194, 195, 271, 217, 215, 219,
	220, 497, 498, 196, 197, 297, 299, 169, 199, 200,
	201, 231, 147, 7, 346, 347, 348, 349, 351, 352,
	353, 354, 355, 356, 357, 505, 23, -52, -357, 133,
	134, -100, -265, -246, -243, -267, 121, 70, -253, 134,
	456, 507, 71, 212, -379, -378, 359, 68, 134, -316,
	213, 424, 73, 508, -316, 83, 300, 84, 85, -286,
	-218, -215, -210, -208, -208, -213, 226, 93, -212, -211,
	-351, 100, -212, 34, 134, 65, 133, 68, 68, 15,
	15, 68, -212, -212, 68, 15, 15, -212, 68, 133,
	68, 68, 68, 65, 68, 134, 68, -212, 68, 68,
	-212, -212, -212, -218, 68, -212, -212, -212, -212, -212,
	-212, -212, 134, -212, -295, 344, 78, 78, -169, 73,
	-169, 78, 78, 78, 134, 68, 73, 134, 22, 134,
	-91, 36, 37, -113, 214, -113, -373, 346, 35, -380,
	134, 40, -378, -231, 65, -226, -227, -225, -229, 40,
	-113, 15, -84, -114, -188, 67, 68, 134, -239, 65,
	-175, -212, -113, -151, -151, -198, -189, -200, -195, -200,
	-196, 133, -174, -373, -380, 30, -157, -158, -159, -160,
	53, 57, 59, 54, 55, 56, 60, 30, 134, -386,
	34, -184, -190, 34, -185, 73, -186, -179, -184, -77,
	-79, 67, 142, 145, 145, 144, 212, 67, 103, -261,
	-261, -261, 40, -187, 64, 134, -151, -82, -83, -85,
	-188, 73, -188, 121, -151, 39, 134, 67, 68, 134,
	46, 134, 103, 68, 134, 133, 375, -188, -328, 68,
	-267, 134, 212, 133, 133, -244, 326, -187, -246, 20,
	456, -167, 38, 73, 38, 68, -213, 93, -210, -207,
	68, 101, -212, 99, -117, -119, 342, 343, -118, -124,
	130, 166, 225, 165, 164, 162, 342, 343, -133, -188,
	-212, -212, 68, 68, -212, -212, 15, -188, -133, -208,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 73, 68, 68, 68, 134, 68, 68, 68,
	134, 68, 134, -312, -319, 394, -212, -212, -93, -92,
	43, -101, 94, 67, -375, 396, 348, -180, 103, -205,
	-204, 303, 41, -300, 368, 354, 355, -245, 239, 64,
	292, 293, 294, 295, -225, -173, 129, 250, 67, -113,
	-84, -188, 15, 134, -369, 133, -1, -188, -238, -198,
	-151, -151, -198, -198, -200, -188, -375, -205, -250, -249,
	-167, -86, -86, -86, -86, 53, 53, 53, 58, 53,
	58, 53, -159, -250, -89, -188, -190, 68, 73, -167,
	145, -246, -201, 73, -252, -113, -113, -153, 17, 133,
	-153, 89, -219, -314, -313, 46, -76, -99, -306, -346,
	-312, -188, -181, -178, -186, -179, 78, 15, -243, -238,
	121, 121, 70, 327, -253, 73, 347, 73, 209, 103,
	209, -207, -212, 68, -126, 153, 152, -126, 68, -287,
	-288, -287, -290, -287, -126, -126, 68, 68, 23, 68,
	68, 68, -212, 68, 68, 68, 73, 78, 78, -325,
	385, 380, 382, 44, 45, 34, 35, -108, -109, -110,
	-116, -111, -167, -203, -112, 217, 215, 219, -342, 88,
	220, 271, 89, 210, -376, 77, -371, 73, -377, 77,
	349, 132, 305, 40, 350, 351, 365, 301, 78, 78,
	356, -372, 70, -113, -180, -180, -180, -108, -102, 65,
	133, -83, -114, -188, 121, 68, -151, -151, -151, -198,
	-376, -377, -151, 134, 103, -106, -105, 64, 65, -107,
	64, -105, 53, 53, -151, -101, 68, 134, 68, 134,
	68, -152, 18, 20, 121, -152, 13, 68, -306, -238,
	-253, 368, -113, 73, -113, -212, 68, 68, 68, -294,
	499, -323, 380, 20, 20, -76, -113, 68, 134, -119,
	-112, -188, 89, -341, -342, -228, -341, 89, 67, 73,
	-374, 359, 73, 73, 78, 40, 78, 132, 352, -301,
	67, -133, -135, -187, 130, 73, 68, -184, -83, -188,
	-151, -369, 133, -151, -96, -249, -312, -212, 67, -212,
	73, 73, -212, -218, -345, -75, -317, -273, 509, 134,
	-75, 68, -140, 500, 73, 20, 73, -321, 73, -101,
	-131, -132, -148, 340, 241, -229, 245, 77, 246, 375,
	247, 210, 249, 250, 251, 221, 252, 253, 254, 368,
	255, 256, 257, 258, 323, 6, 288, -110, -130, -129,
	-127, 83, 94, 40, 340, -128, 77, 129, 264, 242,
	265, -147, -202, 64, 215, 88, 89, 328, -203, -338,
	-339, -188, -339, -188, -338, -338, -228, -212, 20, 456,
	304, 40, 78, 40, 353, -233, -235, -167, 67, -74,
	-73, -151, -151, -97, -100, 68, 134, 68, 134, -324,
	385, -320, -318, 380, 381, 382, 383, 73, -170, 501,
	78, 73, 382, 34, -269, 231, 134, -148, -180, -180,
	-173, 129, -180, -180, -180, -180, 248, 248, -180, -180,
	-180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
	-180, -180, 67, -127, 83, -208, 73, -135, -136, 40,
	263, 259, -137, 40, 243, 244, -139, 67, 271, 13,
	89, 89, -113, 67, 65, 280, 67, 67, 67, -339,
	68, 73, 347, 73, 304, 68, 134, -287, -212, -75,
	-96, 68, 84, 85, 84, 85, -326, 213, -322, 384,
	-318, 20, 382, 20, 20, 103, 67, 20, -76, 20,
	-148, 78, 78, -180, -180, 78, 73, 73, 73, -180,
	-180, 78, 73, -190, 78, 78, 78, 78, 40, 73,
	-138, 40, 259, 263, 260, 261, 262, 78, 40, 78,
	40, 78, 40, -188, 67, -343, -344, 73, 78, 67,
	-307, -234, 67, -233, -340, 292, 293, 294, 296, 295,
	-340, -233, -233, -233, 67, -255, -254, 272, 94, 368,
	-236, -235, -91, 68, -97, 68, 68, 68, 68, -333,
	67, 78, -323, 20, -321, 20, -321, -321, 73, -171,
	-188, -321, -270, 273, 274, -271, -277, 276, -133, -133,
	73, 73, -134, 242, -115, 68, 134, 103, 68, -212,
	-220, -142, -141, 452, -233, 68, 68, 68, 68, -233,
	272, -237, 221, 77, 456, 290, 291, -91, -337, 30,
	68, -332, -331, -168, -327, -188, 385, 386, 73, -321,
	509, 134, 68, 134, -275, 277, 67, -273, 67, -273,
	89, 293, 243, 244, 68, -344, 73, 68, -146, -144,
	-145, 64, 392, 269, 270, 68, -236, -236, -236, -236,
	68, -180, 73, 289, -336, -335, -334, 68, 134, 133,
	73, -188, -272, 278, 78, -208, 67, -208, 67, -274,
	275, 67, -254, -145, 64, -144, 64, 14, 13, -147,
	78, -186, 134, 103, -331, -188, 103, -279, 67, 20,
	68, -268, 68, -268, 67, 103, -208, -143, 266, 267,
	30, 144, -143, -335, 40, -212, 133, 73, -280, -278,
	231, -271, 68, 68, -268, 78, 68, 83, 40, 268,
	-188, 509, 134, 68, 134, 70, -276, 279, 68, 73,
	-278, -281, 46, 78, 103, -285, -282, 67, -148, 233,
	113, 73, -285, -148, -284, -283, 278, 234, 67, 509,
	68, 134, 70, 230, 67, -218, -283, -282, -218, 68,
	68,
}

var yyDef = [...]int{
	27, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 597, 598, 599,
	600, 0, 385, 386, 0, 365, 0, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 305, 264, 265, 0, 213, 209, 188, 189,
	190, 149, 150, 151, 152, 270, 0, 0, 0, 0,
	0, 0, 457, -2, 601, 602, 603, 604, -2, 398,
	0, 366, 367, 368, 369, 370, 371, 372, 373, 253,
	254, 255, 250, 251, 252, -2, 0, 398, 202, 0,
	193, 193, 0, 477, 0, 0, 491, 513, 27, 435,
	0, 440, 783, 819, 820, 821, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 214, 387, 388, 477, 477, 236,
	0, 1412, 240, 0, 0, 0, 362, 232, 233, 234,
	235, 0, 589, 0, 229, 0, 208, 1471, 0, 0,
	0, 0, 0, 0, 93, 643, 95, 645, 99, 106,
	0, 0, 111, 112, 115, 116, 117, 118, 119, 0,
	123, 0, 125, 128, 0, 130, 131, 0, 134, 135,
	136, 0, 146, 147, 148, 646, 647, 73, 73, 1169,
	1067, 0, 1074, 1075, 1086, 1095, 890, 891, 892, 893,
	0, 0, 0, 0, 0, 900, 901, 0, 914, 1556,
	0, 907, 908, 909, 910, 911, 36, 48, 49, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1040,
	877, 819, 0, 1564, 0, 1584, 1565, 1583, 0, 0,
	1025, 0, 1015, 0, -2, -2, 0, 0, 1537, 0,
	-2, 1561, 1580, 1587, 1558, 1559, 1553, 1554, 1555, 1557,
	1566, 1568, 1579, 0, 1575, 1585, 1586, 0, 50, 51,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1551, 1031, -2, 1033, 1034, 1036, 1037, 1038,
	1039, -2, 1042, 1043, 1044, -2, -2, 1047, 1048, 1049,
	1050, 1051, 1052, 1055, -2, 1057, -2, 1059, 1027, 1028,
	1029, 1030, 1019, 1020, 1021, 1022, 1023, 1024, -2, -2,
	-2, 0, 186, 184, 477, 549, 0, -2, 0, 0,
	0, 496, 499, 502, 505, 607, 672, 672, 672, 0,
	672, 0, 693, 649, 650, 651, 670, 671, 403, 399,
	400, 401, 402, 465, 0, 467, 470, 306, 0, 345,
	0, 0, 472, 472, 0, 354, 345, 345, -2, 0,
	316, 317, 318, 311, 0, 311, 322, 323, 324, 334,
	335, 355, 1193, 0, 0, 270, 270, 405, 203, 204,
	192, 194, 0, 198, 0, 191, 1471, 0, 0, 160,
	1537, 165, 0, 1419, 1485, 1434, 0, 0, 1452, 0,
	-2, 472, 0, 478, 0, 477, 0, 270, 270, 270,
	270, 270, 270, 270, 0, 0, 0, 514, 515, 510,
	511, 512, 516, 517, 3, 0, 0, 439, 0, 472,
	-2, 0, 237, 822, 0, 0, 241, 242, 0, 0,
	256, 0, 259, 245, 246, 247, 0, 0, 231, 0,
	0, 210, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 103, 100, 107, 110, 120, 127, 0, 139,
	141, 144, 101, 108, 113, 114, 121, 142, 102, 104,
	105, 109, 143, 145, 122, 126, 140, 124, 129, 132,
	133, 138, 0, 74, 0, 0, 0, 0, 0, 0,
	1073, 0, 0, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1067, 0,
	896, 897, 898, 899, 902, 0, 915, 0, 0, 0,
	0, 1065, 1065, 0, 1065, 1061, 1061, 0, 0, 1065,
	1003, 0, 0, 1005, 1016, 0, 0, 1008, 1009, 1065,
	0, 1065, 1013, 1014, 1000, 1001, 1061, 0, 0, 1061,
	1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	0, 0, 1170, 1188, 1125, 1126, 1127, 1175, 1129, 1179,
	1179, 1175, 1175, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 0, 0, 1168, 1148, 1175, 1177, 1177, 1175,
	1172, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1182, 1182, 1185, 1182, 0,
	472, 0, 0, 460, 0, 441, 0, 493, 495, 0,
	497, 498, 500, 501, 503, 504, 506, 507, 0, 672,
	608, 0, 0, 0, 0, 0, 0, 672, 405, 404,
	0, 466, 0, 0, 0, 311, 522, 0, 0, 328,
	329, 330, 345, 345, 336, 473, 337, 338, 347, 0,
	352, 353, 0, 522, 522, 0, 0, 0, 672, 313,
	312, 350, 351, 320, 313, 1194, 1195, 0, 0, 0,
	406, 0, 0, 196, 0, 201, 153, 0, 0, 0,
	0, 0, 0, 182, 183, 0, 0, 0, 0, 0,
	173, 176, 777, 778, 640, 641, 177, 178, 441, 492,
	494, 489, 490, 0, 0, 0, 0, 0, 0, 0,
	384, 530, 524, 526, 584, 36, 530, 414, 427, 409,
	0, 416, 0, 784, 441, 463, 441, 0, 238, 0,
	243, 0, 0, 258, 260, 261, 262, 248, 249, 363,
	227, 228, 220, 221, 222, 223, 224, 225, 226, 230,
	46, 0, 211, 212, 0, 0, 0, 87, 88, 89,
	90, 91, 92, 94, 78, 376, 378, 632, 644, 0,
	635, 0, 97, 137, 70, 0, 70, 1068, 1069, 1070,
	1071, 1072, 1076, 0, 1078, 1080, 1082, 1084, 0, 1100,
	-2, -2, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 1087, 1098, 1099, 0, 0, 0,
	0, 0, 1096, 1091, 0, 894, 0, 912, 916, 0,
	0, 0, 37, 1060, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 0, 1066, 0, 1067, 0, 0, 0,
	1062, 1063, 0, 0, 0, 966, 967, 968, 0, 422,
	0, 1026, 1004, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 1191, 1189, 1190,
	1128, 1176, 0, 1153, 0, 1154, 1155, 1156, 0, 0,
	1149, 1150, 0, 1151, 1152, 1144, 0, 1145, 1146, 0,
	1147, 185, 548, 550, 0, 431, 433, 434, 0, 461,
	474, 479, 480, 483, 0, 0, 0, 610, 0, 268,
	626, 0, 642, 664, 594, 595, 596, -2, 0, 0,
	468, 0, 0, 562, 308, 313, 315, 0, 346, 0,
	522, 522, 345, 0, 347, 0, 347, 341, 342, 0,
	356, 359, 357, 0, 319, 314, 361, 321, 0, 268,
	535, 0, 536, 537, 533, 564, 576, 579, 579, 0,
	0, 205, 206, 0, 0, 200, 154, 155, 0, 157,
	158, 159, 166, 161, 163, 0, 0, 167, 179, 180,
	181, 0, 0, 0, 171, 172, 0, 459, 374, 375,
	379, 0, 381, 781, 382, 383, 590, 591, 522, 0,
	531, 0, 527, 585, 0, 587, 0, 522, 407, 0,
	408, 424, 0, 428, 0, 0, 420, 413, 417, 0,
	0, 437, 462, 464, 823, 0, 1200, -2, 1202, -2,
	-2, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 0, 244, 257, 0,
	0, 0, 0, 81, 629, 0, 82, 86, 76, 0,
	0, 0, 634, 0, 631, 636, 0, 96, 0, 0,
	71, 72, 686, 0, 0, 1077, 1079, 1081, 1083, 1085,
	0, 1088, 1096, 1092, 0, 1089, 0, 0, 1068, 0,
	917, 0, 0, 0, 0, 0, 0, 952, 953, 0,
	0, 957, 0, 0, 960, 0, 0, 0, 964, 0,
	1002, 1018, 1006, 0, 1010, 0, 1012, 0, 935, 936,
	0, 0, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 1124, 1192, 0, 0, 0, 1173,
	0, 0, 0, 0, 0, 551, 443, 0, 0, 0,
	486, 484, 485, 470, 0, 0, 616, 1196, 673, 272,
	0, 0, 628, 0, 0, 669, -2, 676, 0, 682,
	0, 0, 0, 392, 396, 27, 471, 0, 307, 0,
	345, 523, 522, 331, 332, 522, 348, 345, 349, 345,
	347, 0, 358, 616, 272, 0, 0, 0, 0, 0,
	555, 0, 0, 554, 0, 0, 0, 0, 0, 0,
	577, 566, 580, 0, 582, 583, 592, 593, 578, 0,
	477, 0, 207, 195, 197, 0, 0, 0, 0, 168,
	169, 170, 174, 175, 0, 0, 520, 525, 532, 535,
	586, 588, 37, 528, 520, 0, 427, 429, 0, 0,
	427, 0, 0, 436, 0, 0, 0, 364, 47, 263,
	0, 0, 0, 0, 0, 377, 0, 633, 78, 0,
	0, 98, 0, 0, 0, 1064, 1090, 0, 1097, 1093,
	895, 903, 913, 0, 0, 919, 931, 931, 0, 922,
	1175, 1179, 925, 1175, 1177, 1175, 931, 931, 0, 38,
	0, 0, 958, 959, 0, 0, 0, 423, 0, 0,
	934, 937, 938, 939, 940, 942, 943, 944, 945, 946,
	947, 948, 0, 1181, 1180, 1166, 0, 1167, 1178, 1183,
	0, 1186, 0, 432, 447, 0, 475, 476, 481, 482,
	0, 0, 0, 785, 619, 617, 618, 0, 1197, 623,
	273, 274, 275, 276, 0, 0, 0, 627, 0, 0,
	665, 666, 667, 668, 677, 1196, 1196, 1196, 785, 435,
	0, -2, 0, 0, 394, 0, 0, 563, 309, 522,
	325, 339, 522, 522, 345, 360, 619, 623, 522, 217,
	0, 558, 552, 0, 541, 556, 557, 544, 0, 546,
	0, 542, 543, 522, 534, 470, 581, 567, 0, 0,
	199, 156, 0, 292, 162, 380, 782, 518, 0, 0,
	518, 0, 425, 0, 430, 427, 412, 421, 411, 418,
	419, 438, 824, 1201, 1198, 1199, 239, 0, 630, 78,
	83, 84, 85, 79, 77, 637, 0, 639, 0, 0,
	0, 1094, 918, 904, 920, 932, 933, 921, 905, 923,
	924, 926, 927, 928, 929, 930, 906, 954, 0, 956,
	961, 962, 0, 1007, 1011, 965, 1174, 0, 0, 449,
	59, 0, 0, 487, 488, 0, 0, 0, 786, 787,
	789, 790, 0, 0, 792, 847, 0, 801, 672, 801,
	0, 0, 803, 804, 609, 0, 0, 612, 621, 0,
	0, 0, 278, 279, 0, 0, 0, 291, 287, 288,
	289, 269, 622, 0, 0, 0, 0, 0, 579, 0,
	0, 522, 393, 396, 397, 469, 310, 343, 340, 522,
	266, 267, 477, 0, 0, 538, 559, 0, 0, 539,
	0, 540, 545, 547, 216, 565, 568, 0, 572, 0,
	164, 508, 0, 0, 529, 509, 416, 426, 410, 80,
	75, 638, 61, 0, 61, 0, 963, 1184, 1187, 451,
	0, 448, 0, 0, 0, 605, 470, -2, 0, -2,
	791, 848, 813, 813, 802, 813, 813, 672, 0, 620,
	611, 0, 624, 625, 0, 280, 281, 0, 284, 290,
	0, 678, 679, 779, 780, 680, 0, 522, 522, -2,
	390, 395, 0, 344, 472, 218, 219, 560, 0, 553,
	0, 0, 519, 521, 415, 29, 55, 0, 687, 0,
	28, 955, 453, 0, 450, 0, 444, 446, 69, 0,
	694, -2, 733, 1196, 1196, 0, 1196, 1196, 1196, 1196,
	0, 0, 1196, 1196, 1196, 1196, 1196, 1196, 1196, 1196,
	1196, 1196, 1196, 1196, 1196, 1196, 0, 788, 815, -2,
	827, 829, 0, 0, 832, 833, 0, 0, 0, 0,
	869, 839, 0, 0, 0, 1112, 1113, 0, 846, 0,
	805, 814, 0, 814, 0, 0, 813, 0, 0, 0,
	277, 282, 0, 285, 286, 0, 660, 1175, 0, 684,
	61, 477, 391, 215, 0, 569, 0, 573, 0, 52,
	57, 62, 63, 0, 0, 0, 0, 0, 442, 0,
	452, 60, 0, 0, 683, 0, 681, 735, 0, 0,
	1196, 1196, 0, 0, 0, 0, 1196, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 828, 830, 831, 834, 835, 836, 874,
	875, 876, 837, 871, 872, 873, 838, 0, 0, 0,
	1110, 1111, 867, 0, 0, 0, 0, 0, 0, 0,
	799, 613, 0, 615, 283, 653, 0, 483, 0, 685,
	472, 561, 0, 0, 0, 0, 39, 0, 59, 0,
	64, 0, 0, 0, 0, 0, 0, 0, 606, 729,
	734, 736, 737, 0, 0, 740, 741, 742, 743, 0,
	0, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 771, 772, 773, 774, 775, 776, 756, 757, 758,
	759, 760, 761, 768, 0, 0, 765, 0, 0, 0,
	1015, 862, 0, 0, 806, 808, 809, 810, 811, 812,
	807, 0, 0, 0, 0, 798, 800, 843, 0, 614,
	652, 661, 662, 483, 389, 570, 571, 574, 575, 30,
	0, 0, 56, 0, 65, 0, 67, 68, 0, 0,
	455, 445, 718, 0, 0, 724, 0, 730, 738, 739,
	744, 745, 762, 0, 0, 764, 0, 0, 870, 0,
	842, 850, 863, 0, 0, 653, 653, 653, 653, 0,
	844, 654, 1196, 0, 0, 658, 659, 663, 691, 0,
	40, 0, 42, 44, 45, 816, 53, 54, 58, 66,
	688, 0, 454, 0, 696, 0, 0, 0, 0, 0,
	727, 0, 769, 770, 763, 766, 767, 840, 849, 851,
	852, 0, 864, 865, 866, 868, 793, 794, 795, 796,
	0, 0, 656, 0, 31, 32, 0, 41, 0, 0,
	0, 456, 698, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 841, 853, 0, 854, 0, 0, 0, 797,
	655, 657, 0, 0, 43, 817, 0, 695, 0, 729,
	720, 0, 722, 0, 0, 0, 0, 855, 857, 858,
	0, 0, 856, 33, 34, 35, 0, 0, 0, 700,
	0, 716, 721, 723, 0, 728, 726, 859, 861, 860,
	818, 689, 0, 699, 0, 712, 697, 0, 725, 0,
	701, -2, 0, 717, 0, 702, -2, 0, 710, 0,
	0, 0, 703, 711, 0, 706, 0, 0, 0, 690,
	705, 0, -2, 713, 0, 0, 707, -2, 0, 715,
	714,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 506,
	104, 103, 105, 3, 507, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 508, 115, 509, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:564
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:570
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:600
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:604
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:610
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:622
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:637
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:643
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:647
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:653
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:660
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:669
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:673
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:677
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:690
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:696
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:705
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:716
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:720
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:726
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:730
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:736
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:740
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:746
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:770
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:789
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:793
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:797
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:806
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:814
		{
			yyVAL.str = ""
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:818
		{
			yyVAL.str = yyDollar[3].str
		}
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:823
		{
			yyVAL.str = "\n"
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:827
		{
			yyVAL.str = yyDollar[3].str
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:836
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:860
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:864
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:870
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:876
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:894
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:911
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:947
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:951
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:957
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:970
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1034
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1040
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1053
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1061
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1070
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1074
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1078
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1082
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1086
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1090
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1097
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1101
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1114
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1123
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1127
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1133
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1141
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1149
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1153
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1157
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1161
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1165
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1169
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1173
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1177
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1185
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1341
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1355
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1364
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1398
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1425
		{
			yyVAL.str = yyDollar[3].str
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1431
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1435
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1441
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1449
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1474
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1497
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1527
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1556
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1565
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1569
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1573
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1583
		{
			yyVAL.str = yyDollar[1].str
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1590
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1596
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1600
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1660
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1668
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1672
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1695
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1708
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1715
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1743
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1758
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1764
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1776
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1811
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1837
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1905
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1911
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1917
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1922
		{
			yyVAL.str = "true"
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1923
		{
			yyVAL.str = "false"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1924
		{
			yyVAL.str = yyDollar[1].str
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1967
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1972
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1976
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1985
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2033
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2057
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2061
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2067
		{
			yyVAL.item = nil
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2072
		{
			yyVAL.item = nil
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2109
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2120
		{
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2124
		{
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2184
		{
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2186
		{
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2234
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2272
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2307
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2312
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2316
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2322
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2335
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2360
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2364
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2373
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2377
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2381
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2418
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2422
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2534
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2538
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2544
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2549
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2556
		{
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2558
		{
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2561
		{
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2570
		{
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2574
		{
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2589
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2602
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2610
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2624
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2647
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2670
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2674
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2689
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2693
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2699
		{
			yyVAL.str = yyDollar[1].str
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2703
		{
			yyVAL.str = yyDollar[3].str
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2709
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2713
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2719
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2724
		{
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2735
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2739
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2755
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2765
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2771
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2775
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2797
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2811
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2829
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2848
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2861
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2865
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2878
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2882
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2887
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2891
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2898
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2903
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2958
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2962
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2980
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2989
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3012
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3018
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3024
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3028
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3039
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3043
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3047
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3052
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3056
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3060
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3066
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3076
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3122
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3250
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3254
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3258
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3271
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3280
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3295
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3299
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3305
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3309
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3313
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3317
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3322
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3330
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3344
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3348
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3399
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3403
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3413
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3417
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3421
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3425
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3441
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3445
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3451
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3467
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3473
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3477
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3481
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3491
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3507
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3511
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3517
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3531
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3553
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3571
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3592
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3613
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3634
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3652
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3673
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3694
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3717
		{
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3718
		{
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3722
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3734
		{
			yyVAL.str = ""
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3738
		{
			yyVAL.str = yyDollar[1].str
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3742
		{
			yyVAL.str = yyDollar[2].str
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3751
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3759
		{
			yyVAL.str = yyDollar[2].str
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3763
		{
			yyVAL.str = yyDollar[1].str
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3767
		{
			yyVAL.str = yyDollar[2].str
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3801
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3811
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3822
		{
		}
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3827
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3839
		{
			yyVAL.str = yyDollar[1].str
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3845
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3855
		{
			yyVAL.str = yyDollar[1].str
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3861
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3868
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3874
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3882
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3888
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3895
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3903
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3909
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3918
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3930
		{
			yyVAL.str = yyDollar[1].str
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3941
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3949
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4055
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4059
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4065
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4075
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4079
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4085
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4095
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4099
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4144
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4153
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4157
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4163
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4180
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4184
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4188
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4192
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4198
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4221
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4243
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4265
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4269
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4275
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4280
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4285
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4289
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4293
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4297
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4321
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4334
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4340
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4344
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4350
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4358
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4363
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4373
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4384
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4395
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4402
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4410
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4422
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4434
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4447
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4462
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4477
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4486
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4513
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4519
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4523
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4552
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4558
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4562
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4568
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4584
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4588
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4597
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4606
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4611
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4615
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4625
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4629
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4664
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4695
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4699
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4704
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4717
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4723
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4727
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4731
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4737
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4741
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4745
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4749
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4757
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4761
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4769
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4773
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4777
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4781
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4785
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4789
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4793
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4797
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4801
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4809
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4813
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4817
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4821
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4825
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4829
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4833
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4849
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4856
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4860
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4866
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4871
		{
			yyVAL.str = ""
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4875
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4879
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4885
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4889
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4893
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4897
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4901
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4905
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4919
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4923
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4932
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4937
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4950
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4954
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4960
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4964
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4970
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4980
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4986
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4995
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5004
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5027
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5036
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5046
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5054
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5060
		{
			yyVAL.str = ""
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5064
		{
			yyVAL.str = yyDollar[1].str
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5074
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5080
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5086
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5100
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5107
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5113
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5117
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5121
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5132
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5136
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5149
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5155
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5159
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5169
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5173
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5177
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5181
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5189
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5193
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5197
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5205
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5209
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5217
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5241
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5245
		{
			yyVAL.str = yyDollar[1].str
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5251
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5255
		{
			yyVAL.str = yyDollar[2].str
		}
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5261
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5273
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5280
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5287
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5294
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5301
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5310
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5316
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5334
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5343
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5367
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5372
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5376
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5392
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5402
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5410
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5422
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5430
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5438
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5442
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5452
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5456
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5460
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5464
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5476
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5488
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5492
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5496
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5501
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5509
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5517
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5526
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5530
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5534
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5538
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5542
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5551
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5560
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5566
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5570
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5576
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5586
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5603
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5620
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5646
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5658
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5687
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5702
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5734
		{
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5740
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5749
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5757
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5765
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5774
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5783
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5792
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5801
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5810
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5828
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5837
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5846
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5855
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5864
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5880
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5896
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5904
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5912
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5921
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5929
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5938
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5947
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5955
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5963
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5972
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5981
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6013
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6049
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6061
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6075
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6090
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6109
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6117
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6128
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6137
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6146
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6154
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6164
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6172
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6180
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6194
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6204
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6223
		{
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6225
		{
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6266
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6290
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6299
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6305
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6309
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6316
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6320
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6324
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6332
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6336
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6344
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6354
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6358
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6362
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6366
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6370
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6378
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6382
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6386
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6394
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6398
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6402
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6406
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6432
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6438
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6442
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6449
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6453
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6457
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6463
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6467
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6471
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6475
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6479
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6483
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6487
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6493
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6497
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6501
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6505
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6511
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6515
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6528
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6533
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6545
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6559
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6563
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6577
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6583
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6594
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6599
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6641
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6654
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6680
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6706
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6719
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6732
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6745
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6758
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6771
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6786
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6809
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6846
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6911
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6938
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6958
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6994
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7007
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7058
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7070
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7082
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7106
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7118
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7130
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7154
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7167
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7195
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7203
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7212
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7245
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7250
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7256
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7263
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7267
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7272
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7276
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7282
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7302
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7348
		{
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7360
		{
			yyVAL.str = ""
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7364
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
